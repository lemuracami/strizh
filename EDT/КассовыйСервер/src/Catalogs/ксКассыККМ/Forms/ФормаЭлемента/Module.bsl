
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ВосстановитьККМ.Доступность = Ложь;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ксСтатусыСостоянияККМСрезПоследних.Период КАК Период,
	                      |	ксСтатусыСостоянияККМСрезПоследних.ККМ КАК ККМ,
	                      |	ксСтатусыСостоянияККМСрезПоследних.СостояниеККМОчередьПечатиЧеков КАК СостояниеККМОчередьПечатиЧеков,
	                      |	ксСтатусыСостоянияККМСрезПоследних.ОшибкиПечатиККМ КАК ОшибкиПечатиККМ
	                      |ИЗ
	                      |	РегистрСведений.ксСтатусыСостоянияККМ.СрезПоследних(, ККМ = &ККМ) КАК ксСтатусыСостоянияККМСрезПоследних");
	Запрос.УстановитьПараметр("ККМ", Объект.Ссылка);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда	
		
		// флаг
		Если Рез.СостояниеККМОчередьПечатиЧеков = Перечисления.ксСостоянияККМОчередиПечатиЧеков.ККМВыключена Тогда
			ККМВключена = Ложь;	
		Иначе
	        ККМВключена = Истина;
		КонецЕсли;	
		
		// кнопка
		Если Рез.СостояниеККМОчередьПечатиЧеков = Перечисления.ксСостоянияККМОчередиПечатиЧеков.ОшибкаПечати И Рез.ОшибкиПечатиККМ > 1 Тогда	
			Элементы.ВосстановитьККМ.Доступность = Истина;		
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьККМНаСервере()
		
	ТекВр = ТекущаяДата();
	Набор = РегистрыСведений.ксСтатусыСостоянияККМ.СоздатьНаборЗаписей();
	Набор.Отбор.Период.Установить(ТекВр);
	Набор.Отбор.ККМ.Установить(Объект.Ссылка);
	Набор.Прочитать();
	
	НЗапись = Набор.Добавить();		
	НЗапись.ККМ = Объект.Ссылка;
	НЗапись.Период = ТекВр;
	НЗапись.СостояниеККМОчередьПечатиЧеков = ?(ККМВключена, Перечисления.ксСостоянияККМОчередиПечатиЧеков.ККМСвободна, Перечисления.ксСостоянияККМОчередиПечатиЧеков.ККМВыключена);
	НЗапись.ОшибкиПечатиККМ = 0;
	Набор.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьККМ(Команда)
	
	ВосстановитьККМНаСервере();
	Элементы.ВосстановитьККМ.Доступность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ксСтатусыСостоянияККМСрезПоследних.Период КАК Период,
	                      |	ксСтатусыСостоянияККМСрезПоследних.ККМ КАК ККМ,
	                      |	ксСтатусыСостоянияККМСрезПоследних.СостояниеККМОчередьПечатиЧеков КАК СостояниеККМОчередьПечатиЧеков,
	                      |	ксСтатусыСостоянияККМСрезПоследних.ОшибкиПечатиККМ КАК ОшибкиПечатиККМ
	                      |ИЗ
	                      |	РегистрСведений.ксСтатусыСостоянияККМ.СрезПоследних(, ККМ = &ККМ) КАК ксСтатусыСостоянияККМСрезПоследних");
	Запрос.УстановитьПараметр("ККМ", Объект.Ссылка);
	Рез = Запрос.Выполнить().Выбрать();	
	
	Если Рез.Следующий() Тогда			
		Если Рез.СостояниеККМОчередьПечатиЧеков = Перечисления.ксСостоянияККМОчередиПечатиЧеков.ККМВыключена И ККМВключена Тогда
			Состояние = Перечисления.ксСостоянияККМОчередиПечатиЧеков.ККМСвободна;	
			ксРаботаСОчередьюПечатиЧековСервер.ДобавитьЗаписьВРСксСтатусыСостоянияККМ(Объект.Ссылка, Состояние);
		ИначеЕсли Рез.СостояниеККМОчередьПечатиЧеков <> Перечисления.ксСостоянияККМОчередиПечатиЧеков.ККМВыключена И НЕ ККМВключена Тогда
	        Состояние = Перечисления.ксСостоянияККМОчередиПечатиЧеков.ККМВыключена;
			ксРаботаСОчередьюПечатиЧековСервер.ДобавитьЗаписьВРСксСтатусыСостоянияККМ(Объект.Ссылка, Состояние);
		КонецЕсли;				
	КонецЕсли;
	
		
КонецПроцедуры

&НаКлиенте
Процедура ПинганутьККМ(Команда)
	ПинганутьККМНаСервере();
КонецПроцедуры

Процедура ПинганутьККМНаСервере()
	
	НормАдрес = СокрЛП(Объект.АдресККМ);	
	КолСимв = СтрДлина(НормАдрес);
	АйПи = "";
	
	Для Н = 1 По КолСимв Цикл
		
		ТекСимвол = Сред(НормАдрес, Н, 1);		
		
		Если ТекСимвол = ":" Тогда		
			Прервать;	
		Иначе		
			АйПи = АйПи + ТекСимвол;			
		КонецЕсли;	 

	КонецЦикла;
	
	Результат = ксРаботаСККМСервер.Ping(АйПи);		
	Текст = ?(Результат > 0 ,"ОК", "Соединение отсутствует");
	
	Сообщить(Текст);

КонецПроцедуры

