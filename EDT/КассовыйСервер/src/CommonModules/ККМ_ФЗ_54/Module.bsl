
Функция ПечатьЧека(СерверККТ, КассаККМ, ТаблицаТоваров, ПараметрыЧека, ДополнительныеПараметрыЧека,ЭтоВозврат = Ложь, ТипКассовогоЧека) Экспорт
	Попытка
		Струк = Новый Структура;
		
		//Если ЗначениеЗаполнено(КассаККМ.НомерККМВДрайвереАтол) Тогда
			СерверККТ.CurrentDeviceNumber = 1;
		//	Если СерверККТ.ResultCode = -9 Тогда
		//		Струк.Вставить("Результат", Ложь);
		//		Струк.Вставить("КодОшибки", -9);
		//		Струк.Вставить("ТекстОшибки", "Установка номера устройства, проблема");
		//		Возврат Струк;
		//	КонецеСли;	
		//КонецеСли;
		
		
		
		// если есть открытый чек, то отменяем его
		Если СерверККТ.CheckState <> 0 тогда
			РезОтменыЧека = СерверККТ.CancelCheck();
			Если РезОтменыЧека <> 0 тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", РезОтменыЧека);
				Струк.Вставить("ТекстОшибки", "Отмена чека, проблема");
				Возврат Струк;
			КонецЕсли;
		КонецЕсли;
		
		
		// входим в режим регистрации
		// устанавливаем пароль кассира
		СерверККТ.Password = "1";
		// входим в режим регистрации
		СерверККТ.Mode = 1;
		
		Рез = СерверККТ.SetMode();
		Если Рез <> 0 тогда
			Если Рез = -3865 Тогда
				РезОтменыЧека = СерверККТ.CancelCheck();
				Если РезОтменыЧека <> 0 тогда
					Струк.Вставить("Результат", Ложь);
					Струк.Вставить("КодОшибки", РезОтменыЧека);
					Струк.Вставить("ТекстОшибки", "Отмена чека, проблема");
					Возврат Струк;
				КонецЕсли;
			КонецеСли;
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Установка режима чека, проблема");
			Возврат Струк;
		КонецЕсли;
		
		СостояниеСмены = Ложь;
		СменаОткрыта(СерверККТ, СостояниеСмены);
		Если Не СостояниеСмены Тогда
			Кассир = ксРаботаСККМСервер.ПолучитьТекущегоКассираУТЛ(КассаККМ);
			ОткрытьСменуНаККМ(СерверККТ, КассаККМ, Кассир);
			ксРаботаСККМСервер.ЗарегистрироватьОткрытиеСменыККМ(КассаККМ, Кассир);
		КонецеСли;	
		
		
		
		Если КассаККМ.НеВыводитьДанныеНаПечать Тогда
			СерверККТ.CheckMode = 0;
		Иначе
			СерверККТ.CheckMode = 1;
		КонецеСли;
		СерверККТ.CheckType = ксРаботаСККМСервер.ПолучитьИдентификаторТипаКассовогоЧекаДляККМ(ТипКассовогоЧека);
		
		Рез = СерверККТ.OpenCheck();
		Если Рез <> 0 тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Открытие чека, проблема");
			Возврат Струк;
		КонецЕсли;
		
		// даем аттрибуты для передачи электронного чека
		СерверККТ.AttrNumber = 1008;
		СерверККТ.AttrValue = ДополнительныеПараметрыЧека.АдресИнформирования; // передача почты или абонентского номера
		Рез = СерверККТ.WriteAttribute();
		если Рез <> 0 Тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Установка email, проблема");
			Возврат Струк;
		КонецеСли;	
		///атрибуты информирования
		
		
		Для каждого Тек Из ТаблицаТоваров Цикл
			Если Тек.Количество <= 0 Тогда
				продолжить;
			КонецЕсли;	
			СерверККТ.Name = Тек.Наименование;
			СерверККТ.Price = Тек.Цена;
			СерверККТ.Quantity = Тек.Количество;
			СерверККТ.Department = Тек.НомерСекции;
			СерверККТ.TaxTypeNumber = Тек.СтавкаНДС;
			Если Не ЭтоВозврат Тогда
				Рез = СерверККТ.Registration();
				Если Рез <> 0 тогда
					Струк.Вставить("Результат", Ложь);
					Струк.Вставить("КодОшибки", Рез);
					Струк.Вставить("ТекстОшибки", "Регистрация товара, проблема");
					Возврат Струк;
				КонецЕсли;
			Иначе
				Если СерверККТ.Return() <> 0 тогда
					Возврат Ложь;
				КонецЕсли;
			КонецеСли;
		КонецЦикла;
		
		СерверККТ.TypeClose = ДополнительныеПараметрыЧека.КодТипаОплатыНаККМ;
		
		СерверККТ.AttrNumber = 1021;
		СерверККТ.AttrValue = ДополнительныеПараметрыЧека.Кассир; // кассир
		Рез = СерверККТ.WriteAttribute();
		если Рез <> 0 Тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Установка кассира, проблема");
			Возврат Струк;
		КонецеСли;	
		
		
		Рез = СерверККТ.CloseCheck();
		
		Если Рез <> 0 тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Закрытие чека, проблема");
			Возврат Струк;
		КонецЕсли;
		
		
		Результат = ПолучитьТекущиеПараметрыККМ(СерверККТ, ПараметрыЧека);
		
		Если Не Результат Тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", 1);
			Струк.Вставить("ТекстОшибки", "Получение параметров пробитого чека, проблема");
			Возврат Струк;
		КонецеСли;	
		
	Исключение
		Струк.Вставить("Результат", Ложь);
		Струк.Вставить("КодОшибки", 111);
		Струк.Вставить("ТекстОшибки", "ОБЩАЯ ПРОБЛЕМА!!");
		Возврат Струк;
		
	КонецПопытки;
	
	Струк.Вставить("Результат", Истина);
	Струк.Вставить("КодОшибки", 0);
	Струк.Вставить("ТекстОшибки", "all good");
	Возврат Струк;
КонецФункции	

Функция ПечатьЧекаФФД_1_05(СерверККТ, КассаККМ, ТаблицаТоваров, ПараметрыЧека, ДополнительныеПараметрыЧека,ЭтоВозврат = Ложь, ТипКассовогоЧека) Экспорт
	Попытка
		Струк = Новый Структура;
		
		//Если ЗначениеЗаполнено(КассаККМ.НомерККМВДрайвереАтол) Тогда
			СерверККТ.CurrentDeviceNumber = 1;
		//	Если СерверККТ.ResultCode = -9 Тогда
		//		Струк.Вставить("Результат", Ложь);
		//		Струк.Вставить("КодОшибки", -9);
		//		Струк.Вставить("ТекстОшибки", "Установка номера устройства, проблема");
		//		Возврат Струк;
		//	КонецеСли;	
		//КонецеСли;
		
		
		
		// если есть открытый чек, то отменяем его
		Если СерверККТ.CheckState <> 0 тогда
			РезОтменыЧека = СерверККТ.CancelCheck();
			Если РезОтменыЧека <> 0 тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", РезОтменыЧека);
				Струк.Вставить("ТекстОшибки", "Отмена чека, проблема");
				Возврат Струк;
			КонецЕсли;
		КонецЕсли;
		
		
		// входим в режим регистрации
		// устанавливаем пароль кассира
		СерверККТ.Password = "1";
		// входим в режим регистрации
		СерверККТ.Mode = 1;
		
		Рез = СерверККТ.SetMode();
		Если Рез <> 0 тогда
			Если Рез = -3865 Тогда
				РезОтменыЧека = СерверККТ.CancelCheck();
				Если РезОтменыЧека <> 0 тогда
					Струк.Вставить("Результат", Ложь);
					Струк.Вставить("КодОшибки", РезОтменыЧека);
					Струк.Вставить("ТекстОшибки", "Отмена чека, проблема");
					Возврат Струк;
				КонецЕсли;
			КонецеСли;
			
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Установка режима чека, проблема");
			Возврат Струк;
		КонецЕсли;
		
		СостояниеСмены = Ложь;
		СменаОткрыта(СерверККТ, СостояниеСмены);
		Если Не СостояниеСмены Тогда
			Кассир = ксРаботаСККМСервер.ПолучитьТекущегоКассираУТЛ(КассаККМ);
			ОткрытьСменуНаККМ(СерверККТ, КассаККМ, Кассир);
			ксРаботаСККМСервер.ЗарегистрироватьОткрытиеСменыККМ(КассаККМ, Кассир);
		КонецеСли;	
		
		
		
		Если КассаККМ.НеВыводитьДанныеНаПечать Тогда
			СерверККТ.CheckMode = 0;
		Иначе
			СерверККТ.CheckMode = 1;
		КонецеСли;
		СерверККТ.CheckType = ксРаботаСККМСервер.ПолучитьИдентификаторТипаКассовогоЧекаДляККМ(ТипКассовогоЧека);
		
		Рез = СерверККТ.OpenCheck();
		Если Рез <> 0 тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Открытие чека, проблема");
			Возврат Струк;
		КонецЕсли;
		
		// даем аттрибуты для передачи электронного чека
		СерверККТ.AttrNumber = 1008;
		СерверККТ.AttrValue = ДополнительныеПараметрыЧека.АдресИнформирования; // передача почты или абонентского номера
		Рез = СерверККТ.WriteAttribute();
		если Рез <> 0 Тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Установка email, проблема");
			Возврат Струк;
		КонецеСли;	
		///атрибуты информирования
		
		
		Для каждого Тек Из ТаблицаТоваров Цикл
			Если Тек.Количество <= 0 Тогда
				продолжить;
			КонецЕсли;	
			СерверККТ.BeginItem();
			СерверККТ.Name = Тек.Наименование;
			СерверККТ.Price = Тек.Цена;
			СерверККТ.Quantity = Тек.Количество;
			СерверККТ.Summ = Окр(Тек.Количество*Тек.Цена, 2);
			
			СерверККТ.Department = Тек.НомерСекции;
			СерверККТ.TaxTypeNumber = Тек.СтавкаНДС;
			СерверККТ.PaymentMode = 4;
			
			Рез = СерверККТ.EndItem();
			Если Рез <> 0 тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", Рез);
				Струк.Вставить("ТекстОшибки", "Регистрация товара, проблема");
				Возврат Струк;
			КонецЕсли;
			
			//Если Не ЭтоВозврат Тогда
			//	Рез = СерверККТ.Registration();
			//	Если Рез <> 0 тогда
			//		Струк.Вставить("Результат", Ложь);
			//		Струк.Вставить("КодОшибки", Рез);
			//		Струк.Вставить("ТекстОшибки", "Регистрация товара, проблема");
			//		Возврат Струк;
			//	КонецЕсли;
			//Иначе
			//	Если СерверККТ.Return() <> 0 тогда
			//		Возврат Ложь;
			//	КонецЕсли;
			//КонецеСли;
		КонецЦикла;
		
		Если ДополнительныеПараметрыЧека.ТипОплаты = Справочники.ксТипыОплат.ОплаченоВМагазине Тогда
			СерверККТ.TypeClose = 2;
		Иначе	
			СерверККТ.TypeClose = ДополнительныеПараметрыЧека.КодТипаОплатыНаККМ;
		КонецеСли;	
		
		//СерверККТ.TypeClose = ДополнительныеПараметрыЧека.КодТипаОплатыНаККМ;
		
		// Якурнов: 1084 Дополнительный реквизит пользователя
		// >>>>>>>> Начало 06.11.2018 14:20:50 >>>>>>>>
		Если ДополнительныеПараметрыЧека.Свойство("НомерВнешнегоЗаказа") Тогда
			Если ЗначениеЗаполнено(ДополнительныеПараметрыЧека.НомерВнешнегоЗаказа) Тогда
				СерверККТ.AttrNumber = 1084;
				СерверККТ.AttrName = "Номер заказа Интернет-магазина"; 
				СерверККТ.AttrValue = ДополнительныеПараметрыЧека.НомерВнешнегоЗаказа;
				СерверККТ.AttrPrint = 1;
				СерверККТ.WriteAttribute();
				СерверККТ.AttrNumber = 1085;
				СерверККТ.AttrValue = "Номер заказа Интернет-магазина";
				СерверККТ.WriteAttribute();
				СерверККТ.AttrNumber = 1086;
				СерверККТ.AttrValue = ДополнительныеПараметрыЧека.НомерВнешнегоЗаказа;
				СерверККТ.WriteAttribute();
			КонецеСли;
		КонецЕсли;
		// <<<<<<<< Конец 06.11.2018 14:20:50 <<<<<<<<
		
		
		
		СерверККТ.AttrNumber = 1021;
		СерверККТ.AttrValue = ДополнительныеПараметрыЧека.Кассир; // кассир
		Рез = СерверККТ.WriteAttribute();
		если Рез <> 0 Тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Установка кассира, проблема");
			Возврат Струк;
		КонецеСли;	
		
		
		Рез = СерверККТ.CloseCheck();
		
		Если Рез <> 0 тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Закрытие чека, проблема");
			Возврат Струк;
		КонецЕсли;
		
		
		Результат = ПолучитьТекущиеПараметрыККМ(СерверККТ, ПараметрыЧека);
		
		Если Не Результат Тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", 1);
			Струк.Вставить("ТекстОшибки", "Получение параметров пробитого чека, проблема");
			Возврат Струк;
		КонецеСли;	
		
	Исключение
		Струк.Вставить("Результат", Ложь);
		Струк.Вставить("КодОшибки", 111);
		Струк.Вставить("ТекстОшибки", "ОБЩАЯ ПРОБЛЕМА!!");
		Возврат Струк;
		
	КонецПопытки;
	
	Струк.Вставить("Результат", Истина);
	Струк.Вставить("КодОшибки", 0);
	Струк.Вставить("ТекстОшибки", "all good");
	Возврат Струк;
КонецФункции	


Функция ПодключитьсяКККМ(ККМ) Экспорт
	СерверККТ = Новый COMОбъект("AddIn.FPrnM8");
	ДобавитьУстройствоATOL(СерверККТ, ККМ);
	СерверККТ.DeviceEnabled = 1;
	Если СерверККТ.ResultCode <> 0 тогда
		//	Попытка
		//	ЗаписьЖурналаРегистрации("ККМ." + ККМ.Код,,,ResultCode);
		//Исключение
		//	
		//	КонецПопытки;
		
		
		Возврат Ложь;
	КонецЕсли;	
	
	//Если СерверККТ.GetStatus() <> 0 тогда
	//	Возврат Ложь;
	//КонецЕсли;
	
	
	Возврат СерверККТ;
КонецФункции	


Функция ПроверкаКККМ(ККМ) Экспорт
	СерверККТ = Новый COMОбъект("AddIn.FPrnM8");
	ДобавитьУстройствоATOL(СерверККТ, ККМ);
	СерверККТ.DeviceEnabled = 1;
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Если СерверККТ.GetCurrentMode() <> 0 тогда
		Возврат Ложь;
	ИначеЕсли СерверККТ.Mode <> 0 И СерверККТ.Mode <> 1 И СерверККТ.AdvancedMode <> 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	Возврат Истина;
КонецФункции

Функция ПодключитьсяКККМБезПроверкиСтатуса(ККМ) Экспорт
	СерверККТ = Новый COMОбъект("AddIn.FPrnM8");
	ДобавитьУстройствоATOL(СерверККТ, ККМ);
	СерверККТ.DeviceEnabled = 1;
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	
	//Если СерверККТ.GetStatus() <> 0 тогда
	//	Возврат Ложь;
	//КонецЕсли;
	//
	//
	Возврат СерверККТ;
КонецФункции	

Функция ОтключитьсяОтККМ(СерверККТ, ККМ) Экспорт
	//СерверККТ.CurrentDeviceNumber = ККМ.НомерККМВДрайвереАтол;	
	СерверККТ.DeviceEnabled = 0;
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	Возврат Истина;
КонецФункции

Функция ПолучитьТекущиеПараметрыККМ(СерверККТ, СтруктураДанных) Экспорт
	
	СтруктураДанных = Новый Структура;
	
	
	//номер чека
	СерверККТ.RegisterNumber = 19;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	НомерЧека = СерверККТ.CheckNumber - 1;
	НомерДокумента = СерверККТ.DocNumber - 1;
	
	СтруктураДанных.Вставить("НомерЧека", НомерЧека);
	СтруктураДанных.Вставить("НомерДокумента", НомерДокумента);
	
	//номер смены
	СерверККТ.RegisterNumber = 21;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	НомерСмены = СерверККТ.Session + 1;
	СтруктураДанных.Вставить("НомерСмены", НомерСмены);
	
	//параметры ф. документа
	СерверККТ.RegisterNumber = 51;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	СуммаЧека = Число(СерверККТ.Summ);
	
	СтруктураДанных.Вставить("СуммаЧека", СуммаЧека);
	
	
	
	//параметры ф. документа
	СерверККТ.RegisterNumber = 52;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	ФПД = СерверККТ.FiscalSign;
	ФД = Формат(СерверККТ.DocNumber, "ЧГ=");
	ДатаЧека = Дата(СерверККТ.Year, СерверККТ.Month, СерверККТ.Day, СерверККТ.Hour, СерверККТ.Minute, 0);
	ТипЧека = Число(СерверККТ.LastCheckType);
	
	СтруктураДанных.Вставить("ФПД", ФПД);
	СтруктураДанных.Вставить("ФД", ФД);
	СтруктураДанных.Вставить("ДатаЧека", ДатаЧека);
	СтруктураДанных.Вставить("ТипЧека", ТипЧека);
	
	//параметры ККТ
	СерверККТ.RegisterNumber = 22;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	РН_ККТ = СерверККТ.SerialNumber;
	
	СтруктураДанных.Вставить("РН_ККТ", РН_ККТ);
	
	//параметры ФП
	СерверККТ.RegisterNumber = 47;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	ФН = СерверККТ.SerialNumber;
	
	СтруктураДанных.Вставить("ФН", ФН);
	
	Возврат Истина;
КонецФункции	


Функция СменаОткрыта(СерверККТ, СменаОткрыта) Экспорт
	
	СерверККТ.RegisterNumber = 18;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	
	СменаОткрыта = СерверККТ.SessionOpened;
	Возврат Истина;
КонецФункции	


Функция СнятьXОтчет(СерверККТ, Кассир = "") Экспорт
	
	СерверККТ.Mode = 2; 
	// Режим отчетов без гашения Драйвер.Password = 30; 
	СерверККТ.SetMode();	
	
	Если ЗначениеЗаполнено(Кассир) Тогда
		СерверККТ.AttrNumber = 1021;
		СерверККТ.AttrValue = Кассир; // кассир
		If СерверККТ.WriteAttribute()<>0 then Возврат Ложь; КонецеСли;	
	КонецЕсли;	
	
	
	СерверККТ.ReportType = 2;
	Если СерверККТ.Report() <> 0 тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции	

Функция СнятьZОтчет(СерверККТ, Кассир) Экспорт
	
	СерверККТ.Mode = 3; 
	// Режим отчетов без гашения Драйвер.Password = 30; 
	Рез = СерверККТ.SetMode();	
	
	
	Если ЗначениеЗаполнено(Кассир) Тогда
		СерверККТ.AttrNumber = 1021;
		СерверККТ.AttrValue = Кассир; // кассир
		If СерверККТ.WriteAttribute()<>0 then Возврат Ложь; КонецеСли;	
	КонецЕсли;	
	
	СерверККТ.ReportType = 1;
	Если СерверККТ.Report() <> 0 тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

Функция ПолучитьФН(НомерФН) Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	|	ксФискальныеНакопители.Ссылка КАК ФН
	|ИЗ
	|	Справочник.ксФискальныеНакопители КАК ксФискальныеНакопители
	|ГДЕ
	|	ксФискальныеНакопители.КодФН = &КодФН";
	Зап.УстановитьПараметр("КодФН", НомерФН);
	
	Выб = Зап.Выполнить().Выбрать();
	Если Выб.Следующий() Тогда
		Возврат Выб.ФН;
	КонецеСли;
	
	Нов = Справочники.ксФискальныеНакопители.СоздатьЭлемент();
	Нов.Наименование = НомерФН;
	Нов.КодФН = НомерФН;
	Нов.Записать();
	
	Возврат Нов.Ссылка;
КонецФункции	

Функция ОткрытьСменуНаККМ(СерверККТ, ККМ, Кассир) Экспорт
	// если есть открытый чек, то отменяем его
	Если СерверККТ.CheckState <> 0 тогда
		Если СерверККТ.CancelCheck() <> 0 тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	
	// входим в режим регистрации
	// устанавливаем пароль кассира
	СерверККТ.Password = "1";
	// входим в режим регистрации
	СерверККТ.Mode = 1;
	Если СерверККТ.SetMode() <> 0 тогда
		Возврат Ложь;
	КонецЕсли;
	
	КассирНаим = Кассир.Наименование;
	
	//СостояниеСмены = Ложь;
	//СменаОткрыта(СерверККТ, СостояниеСмены);
	Рез = 0;
	//Если Не СостояниеСмены Тогда	
	Если ЗначениеЗаполнено(КассирНаим) Тогда
		СерверККТ.AttrNumber = 1021;
		СерверККТ.AttrValue = КассирНаим; // кассир
		If СерверККТ.WriteAttribute()<>0 then Возврат Ложь; КонецеСли;	
	КонецЕсли;	
	
	Рез = СерверККТ.OpenSession();
	//Иначе
	//	Возврат "СменаУжеОткрыта";
	//КонецеСли;	
	
	Если Рез = 0 Тогда
		Возврат "СменаОткрытаУспешно";
	Иначе	
		Возврат "СменаНеОткрыта";
	КонецеСли;	
КонецФункции	

Процедура ЗаписьЛогаОшибкиККМ(КодОшибки, Описание, ПроизводительККМ, ЧекККМ) Экспорт
	
	Элем = неопределено;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ксКодыОшибокККМ.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ксКодыОшибокККМ КАК ксКодыОшибокККМ
	|ГДЕ
	|	ксКодыОшибокККМ.Владелец = &Владелец
	|	И ксКодыОшибокККМ.КодОшибкиККМ = &КодОшибкиККМ");
	Запрос.УстановитьПараметр("Владелец", ПроизводительККМ);
	Запрос.УстановитьПараметр("КодОшибкиККМ", КодОшибки);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
		Элем = Рез.Ссылка;			
	КонецЕсли;
	
	ТекВр = ТекущаяДата();
	Набор = РегистрыСведений.ксЛогПробитияЧеков.СоздатьНаборЗаписей();
	Набор.Отбор.ЧекККМ.Установить(ЧекККМ);
	Набор.Прочитать();
	НЗапись = Набор.Добавить();
	НЗапись.ЧекККМ = ЧекККМ;
	НЗапись.Период = ТекВр;
	НЗапись.КодОшибки = КодОшибки;
	НЗапись.ОписаниеОшибки = Описание;
	// МАС - 21.08.2017 - №1718 --->> 
	НЗапись.КассаККМ = ЧекККМ.КассаККМ;
	// <<--- МАС 	
	
	Если Элем <> Неопределено Тогда	
		НЗапись.ОшибкаККМ = Элем;		
	КонецЕсли;
	
	Набор.Записать();
	
КонецПроцедуры

Процедура РегламентСозданиеУстройствВДрайвереATOL() Экспорт
	//Зап = Новый Запрос;
	//Зап.Текст = "ВЫБРАТЬ
	//            |	ксСтатусыСостоянияККМСрезПоследних.ККМ КАК ККМ
	//            |ИЗ
	//            |	РегистрСведений.ксСтатусыСостоянияККМ.СрезПоследних КАК ксСтатусыСостоянияККМСрезПоследних
	//            |ГДЕ
	//            |	ксСтатусыСостоянияККМСрезПоследних.СостояниеККМОчередьПечатиЧеков <> ЗНАЧЕНИЕ(перечисление.ксСостоянияККМОчередиПечатиЧеков.ККМВыключена)";
	//Рез = Зап.Выполнить().Выгрузить();
	//
	//Кол = Рез.Количество() + 10;
	//
	//
	//СерверККТ = ИнициализироватьСерверККТ();
	//
	//СейчасУстройств = СерверККТ.DeviceCount;
	//
	//
	//Для Сч = СейчасУстройств + 1 По Кол Цикл
	//	ДобавитьУстройствоATOL(СерверККТ);
	//КонецЦикла;	
	//СерверККТ.CurrentDeviceNumber = 1;
КонецПроцедуры	


//Функция ИнициализироватьСерверККТ() Экспорт
//	Попытка
//		СерверККТ = Новый COMОбъект("AddIn.FprnM45");
//	Исключение
//		Возврат Ложь;
//	КонецПопытки;	
//	Возврат СерверККТ;
//КонецФункции	

Процедура ДобавитьУстройствоATOL(СерверККТ, КассаККМ)
	СерверККТ.AddDevice();
	СерверККТ.HostAddress = КассаККМ.АдресККМ;
	СерверККТ.PortNumber = 99;                // + Число(Прав(КассаККМ, 1))
	СерверККТ.Model = 69;
	СерверККТ.UseAccessPassword = Истина;
	СерверККТ.DefaultPassword = "30";
КонецПроцедуры	

