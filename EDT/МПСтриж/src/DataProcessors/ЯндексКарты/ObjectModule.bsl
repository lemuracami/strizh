
/////////////////////////////////////////////////////////
//	ПРОЦЕДУРЫ И ФУНКЦИИ НЕКОТОРЫХ СТАНДАРТНЫХ МОДУЛЕЙ 1С

// Функция возвращает строковое представление адреса (в формате через запятую), включая незаполненные поля
Функция ПолучитьПолныйАдрес_(Запись) Экспорт
	
	Результат = "";
	
	Если Запись = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ПолучитьПредставлениеАдреса_(Запись) = Запись.Представление Тогда	
		Результат = "," + 
		СокрЛП(Запись.Поле1) + ", " +
		СокрЛП(Запись.Поле2) + ", " +
		СокрЛП(Запись.Поле3) + ", " +
		СокрЛП(Запись.Поле4) + ", " +
		СокрЛП(Запись.Поле5) + ", " +
		СокрЛП(Запись.Поле6) + ", " +
		СокрЛП(Запись.Поле7) + ", " +
		СокрЛП(Запись.Поле8) + ", " +
		СокрЛП(Запись.Поле9);
		
	Иначе
		Результат = Запись.Представление;
	КонецЕсли;
	
	Если ПустаяСтрока(СтрЗаменить(Результат, ",", "")) Тогда
		Результат = "";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Функция выполняет "преобразование" строкового представления адреса в структуру
Функция ПолучитьСтруктуруАдресаИзСтроки_(Знач СтроковыйАдрес) Экспорт
	
	Если ПустаяСтрока(СтроковыйАдрес) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ЧислоВхожденийЗапятойВАдрес = СтрЧислоВхождений(СтроковыйАдрес, ","); 
	
	Если ЧислоВхожденийЗапятойВАдрес = 9 Тогда
		
		СтруктураАдреса = РазложитьАдрес_(СтроковыйАдрес);
		
	ИначеЕсли ЧислоВхожденийЗапятойВАдрес >= 1 Тогда
		
		СтруктураАдреса = Новый Структура;	
		СтруктураАдреса.Вставить("ЗаПределамиРФ", Истина);
		СтруктураАдреса.Вставить("Страна", СокрЛП(Лев(СтроковыйАдрес, Найти(СтроковыйАдрес, ",") - 1)));
		СтруктураАдреса.Вставить("Представление", СтроковыйАдрес);			
		
	Иначе
		// вообще запятых нет в представлении два варианта,
		// либо задана только страна, но не Россия
		// либо необычный Российский Адрес
		
		КлассификаторСтраны = Справочники.КлассификаторСтранМира.НайтиПоНаименованию(ВРег(СтроковыйАдрес), Истина);
		СтруктураАдреса = Новый Структура;	
		СтруктураАдреса.Вставить("ЗаПределамиРФ", Истина);

		Если НЕ ЗначениеЗаполнено(КлассификаторСтраны) Тогда
			// необычный российский адрес
			СтруктураАдреса.Вставить("Страна", Справочники.КлассификаторСтранМира.Россия.Наименование);
			СтруктураАдреса.Вставить("Представление", СтроковыйАдрес);
		Иначе
			СтруктураАдреса.Вставить("Страна", СтроковыйАдрес);
			СтруктураАдреса.Вставить("Представление", "");
		КонецЕсли;
		
	КонецЕсли;
		
	Возврат СтруктураАдреса;	
	
КонецФункции

//Функция по структуре с адресом возвращает его представление
Функция ПолучитьПредставлениеАдресаПоСтруктуре_(СтруктураАдреса) Экспорт
	
	ТекПредставление = "";
	
	Если СтруктураАдреса = Неопределено Тогда
		Возврат ТекПредставление;
	КонецЕсли;
	
	АдресЗаПределамиРФ = Неопределено;
	СтруктураАдреса.Свойство("ЗаПределамиРФ", АдресЗаПределамиРФ);
	Если АдресЗаПределамиРФ = Неопределено Тогда
		АдресЗаПределамиРФ = Ложь;
	КонецЕсли;
	
	Если Не АдресЗаПределамиРФ Тогда
		
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Индекс), ", ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Регион), ", ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Район), ", ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Город), ", ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.НаселенныйПункт), ", ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Улица), ", ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Дом), ", дом № ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Корпус), ", корпус ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Квартира), ", кв.");
		
		Если СтрДлина(ТекПредставление) > 2 Тогда
			ТекПредставление = Сред(ТекПредставление, 3);
		КонецЕсли;
	
	Иначе
		
		ТекПредставление = ?(СтруктураАдреса.Представление = "", СтруктураАдреса.Страна, СтруктураАдреса.Представление);
	
	КонецЕсли;
	
	Возврат ТекПредставление;
	
КонецФункции

// Функция возвращает представление адреса собранного из полей значений Поле1 - Поле10
Функция ПолучитьПредставлениеАдреса_(Запись)

	ТекПредставление = "";
	
	ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(Запись.Поле1), ", ");
	ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(Запись.Поле2), ", ");
	ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(Запись.Поле3), ", ");
	ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(Запись.Поле4), ", ");
	ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(Запись.Поле5), ", ");
	ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(Запись.Поле6), ", ");
	ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(Запись.Поле7), ", дом № ");
	ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(Запись.Поле8), ", корпус ");
	ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(Запись.Поле9), ", кв.");
	
	Если СтрДлина(ТекПредставление) > 2 Тогда
		ТекПредставление = Сред(ТекПредставление, 3);
	КонецЕсли; 
	
	Возврат ТекПредставление;

КонецФункции

//Процедура дополняет представление адреса строкой 
Процедура ДополнитьПредставлениеАдреса_(ТекущееПредставление, Дополнение, СтрокаКонкатенации)
	
	Если Дополнение <> "" Тогда
		ТекущееПредставление = ТекущееПредставление + СтрокаКонкатенации + Дополнение;
	КонецЕсли;
  	
КонецПроцедуры

//Функция раскладывает строку с данными об адресе (в формате 9 запятых) на элементы структуры
Функция РазложитьАдрес_(Знач СтрокаАдрес)
	
	Страна = "";
	Индекс = "";
	Регион = "";
	Район = "";
	Город = "";
	НаселенныйПункт = "";
	Улица ="";
	Дом ="";
	Корпус ="";
	Квартира ="";

	МассивАдрес	=	РазложитьСтрокуВМассивПодстрок_(СтрокаАдрес);
	ЭлементовВМассиве = МассивАдрес.Количество();   

	Если ЭлементовВМассиве	>	0	тогда
		Страна	=	СокрЛП(МассивАдрес[0]);
	КонецЕсли;
	Если ЭлементовВМассиве	>	1	тогда
		Индекс	=	СокрЛП(МассивАдрес[1]);
	КонецЕсли;
	Если ЭлементовВМассиве	>	2	тогда
		Регион	=	СокрЛП(МассивАдрес[2]);
	КонецЕсли;
	Если ЭлементовВМассиве	>	3	тогда
		Район	=	СокрЛП(МассивАдрес[3]);
	КонецЕсли;
	Если ЭлементовВМассиве	>	4	тогда
		Город	=	СокрЛП(МассивАдрес[4]);
	КонецЕсли;
	Если ЭлементовВМассиве	>	5	тогда
		НаселенныйПункт	=	СокрЛП(МассивАдрес[5]);
	КонецЕсли;
	Если ЭлементовВМассиве	>	6	тогда
		Улица	=	СокрЛП(МассивАдрес[6]);
	КонецЕсли;
	Если ЭлементовВМассиве	>	7	тогда
		Дом	=	СокрЛП(МассивАдрес[7]);
	КонецЕсли;
	Если ЭлементовВМассиве	>	8	тогда
		Корпус	=	СокрЛП(МассивАдрес[8]);
	КонецЕсли;
	Если ЭлементовВМассиве	>	9	тогда
		Квартира	=	СокрЛП(МассивАдрес[9]);
	КонецЕсли;

	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Страна",Страна);
	СтруктураВозврата.Вставить("Индекс",Индекс);
	СтруктураВозврата.Вставить("Регион",Регион);
	СтруктураВозврата.Вставить("Район",Район);
	СтруктураВозврата.Вставить("Город",Город);
	СтруктураВозврата.Вставить("НаселенныйПункт",НаселенныйПункт);
	СтруктураВозврата.Вставить("Улица",Улица);
	СтруктураВозврата.Вставить("Дом",Дом);
	СтруктураВозврата.Вставить("Корпус",Корпус);
	СтруктураВозврата.Вставить("Квартира",Квартира);

	Возврат СтруктураВозврата;
	
КонецФункции	 

// Функция "расщепляет" строку на подстроки, используя заданный 
//		разделитель. Разделитель может иметь любую длину. 
//		Если в качестве разделителя задан пробел, рядом стоящие пробелы 
//		считаются одним разделителем, а ведущие и хвостовые пробелы параметра Стр
//		игнорируются.
//		Например, 
//		РазложитьСтрокуВМассивПодстрок(",ку,,,му", ",") возвратит массив значений из пяти элементов, 
//		три из которых - пустые строки, а 
//		РазложитьСтрокуВМассивПодстрок(" ку   му", " ") возвратит массив значений из двух элементов
//
//	Параметры: 
//		Стр - 			строка, которую необходимо разложить на подстроки. 
//						Параметр передается по значению.
//		Разделитель - 	строка-разделитель, по умолчанию - запятая.
//
//
//	Возвращаемое значение:
//		массив значений, элементы которого - подстроки
//
Функция РазложитьСтрокуВМассивПодстрок_(Знач Стр, Разделитель = ",")
	
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции // глРазложить


/////////////////////////////////////////////////////////////

Функция ПолучитьПредставлениеАдресаДляПоиска(СтруктураАдреса) Экспорт

	ТекПредставление = "";
	
	Если СтруктураАдреса.Свойство("ЗаПределамиРФ", Истина) Тогда
		
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Представление), "");
		
	Иначе
		
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Страна), ", ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Регион), ", ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Район), ", ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.НаселенныйПункт),", ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Улица), ", ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Дом), ", дом ");
		ДополнитьПредставлениеАдреса_(ТекПредставление, СокрЛП(СтруктураАдреса.Корпус), ", корпус ");
		
		Если СтрДлина(ТекПредставление) > 2 Тогда
			ТекПредставление = Сред(ТекПредставление, 3);
		КонецЕсли; 
		
	КонецЕсли;
	
	Возврат ТекПредставление;

КонецФункции

