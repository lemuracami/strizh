
Процедура ВыгрузитьЗаказ(ЗаказОб) Экспорт
	Попытка
		Определение = Новый WSОпределения(СокрЛП(Константы.АдресСервера.Получить()) + "/ws/ServiceMobile.1cws?wsdl", СокрЛП(Константы.ИмяПользователя.Получить()), СокрЛП(Константы.ПарольПользователя.Получить()),,10);
		Прокси = Новый WSПрокси(Определение, "http://www.strizh-logistic.ru/1Cmobile", "ServiceMobile", "ServiceMobileSoap");
	Исключение
		Попытка
			Определение = Новый WSОпределения(СокрЛП(Константы.АдресСервера2.Получить()) + "/ws/ServiceMobile.1cws?wsdl", СокрЛП(Константы.ИмяПользователя.Получить()), СокРЛП(Константы.ПарольПользователя.Получить()),,10);
			Прокси = Новый WSПрокси(Определение, "http://www.strizh-logistic.ru/1Cmobile", "ServiceMobile", "ServiceMobileSoap");
		Исключение
			Возврат;
		КонецПопытки;
	КонецПопытки;	
	
	Прокси.Пользователь = СокрЛП(Константы.ИмяПользователя.Получить());
	Прокси.Пароль = СокрЛП(Константы.ПарольПользователя.Получить());
	
	Фабрика = Прокси.ФабрикаXDTO;
	
	МассивЗаказовТип = Фабрика.Пакеты.Получить("http://www.strizh-logistic.ru/1CMobile/OrderAct").Получить("ArrayOfOrderActs");
	ЗаказТип = Фабрика.Пакеты.Получить("http://www.strizh-logistic.ru/1CMobile/OrderAct").Получить("OrderAct");
	ЗаказСтрокаТип = Фабрика.Пакеты.Получить("http://www.strizh-logistic.ru/1CMobile/OrderAct").Получить("OrderActRow");
	НоменклатураТип = Фабрика.Пакеты.Получить("http://www.strizh-logistic.ru/1CMobile/Nomenklature").Получить("Nomenklature");
	
	
	ВодительТип = Фабрика.Пакеты.Получить("http://www.strizh-logistic.ru/1CMobile/CarMans").Получить("CarMan");
	ТранспортТип = Фабрика.Пакеты.Получить("http://www.strizh-logistic.ru/1CMobile/Cars").Получить("Car");
	
	ВодительТипМ = Фабрика.Пакеты.Получить("http://www.strizh-logistic.ru/1CMobile/CarMans").Получить("ArrayOfCarMans");
	ТранспортТипМ = Фабрика.Пакеты.Получить("http://www.strizh-logistic.ru/1CMobile/Cars").Получить("ArrayOfCars");
	
	МассивЗТип = Фабрика.Пакеты.Получить("http://www.strizh-logistic.ru/1CMobile/Order").Получить("ArrayOfOrders");
	
	МассивЗаказов = Фабрика.Создать(МассивЗаказовТип);
	
	ВодительТип = Фабрика.Пакеты.Получить("http://www.strizh-logistic.ru/1CMobile/CarMans").Получить("CarMan");
	Водитель = Фабрика.Создать(ВодительТип);
	Водитель.ID = СокрЛП(Константы.Водитель.Получить().Код);
	Водитель.Name = СокрЛП(Константы.Водитель.Получить().Наименование);
	Водитель.Password = "";	
	
	ТранспортТип = Фабрика.Пакеты.Получить("http://www.strizh-logistic.ru/1CMobile/Cars").Получить("Car");
	Транспорт = Фабрика.Создать(ТранспортТип);
	Транспорт.Code = СокрЛП(Константы.Транспорт.Получить().Код);
	Транспорт.Name = СокрЛП(Константы.Транспорт.Получить().Наименование);
	Транспорт.Number = "";	
	Транспорт.Password = "";	
	
	
	Выб = ЗаказОб;
	Заказ = Фабрика.Создать(ЗаказТип);
	Попытка
		Заказ.Number = СокрЛП(Выб.Реализация.Номер);
	Исключение
		Возврат;
	КонецПопытки;
	
	Если Выб.Статус = Перечисления.СтатусыЗаказаВодитель.Удалить Тогда
		Возврат;
	КонецеСли;
	
	Заказ.NumberDok = СокрЛП(Выб.Номер);
	Заказ.Date = Выб.Дата;
	Если Выб.Статус = Перечисления.СтатусыЗаказаВодитель.Доставлен Тогда
		Заказ.Status = 1;
	ИначеЕсли Выб.Статус = Перечисления.СтатусыЗаказаВодитель.Перенос Тогда	
		Заказ.Status = 2;
	ИначеЕсли Выб.Статус = Перечисления.СтатусыЗаказаВодитель.ОтказБезЗаезда Тогда	
		Заказ.Status = 3;
	ИначеЕсли Выб.Статус = Перечисления.СтатусыЗаказаВодитель.ОтказСЗаездом Тогда	
		Заказ.Status = 4;
	ИначеЕсли Выб.Статус = Перечисления.СтатусыЗаказаВодитель.ПереносСЗаездом Тогда	
		Заказ.Status = 5;
	ИначеЕсли Выб.Статус = Перечисления.СтатусыЗаказаВодитель.ОтсутствуетНаСкладе Тогда	
		Заказ.Status = 6;
	Иначе
		Заказ.Status = 0;
	КонецеСли;	
	Если Выб.ПричинаОтказаПереноса.Пустая() Тогда
		Заказ.ReasonFail = 0;
	Иначе	
		Заказ.ReasonFail = Число(Выб.ПричинаОтказаПереноса.Код);
	КонецеСли;
	Заказ.DateReason = Выб.ДатаПереноса;
	Заказ.Summa = Выб.СуммаДоставка + Выб.СуммаНал;
	Для Каждого Тек Из Выб.ДоставленныеТовары Цикл
		НовСтрока = Фабрика.Создать(ЗаказСтрокаТип);
		НовСтрока.Count = Тек.КоличествоДоставлено;
		НовНом = Фабрика.Создать(НоменклатураТип);
		НовНом.Code = СокрЛП(Тек.Номенклатура.Код);
		НовНом.Name = "";
		НовНом.Artikul = "";
		НовСтрока.Nomenklature = НоВНом;
		Заказ.Tovars.Добавить(НовСтрока);
	КонецЦикла;	
	МассивЗаказов.OrderAct.Добавить(Заказ);
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	Фабрика.ЗаписатьXML(ЗаписьXML, МассивЗаказов);
	Результат = ЗаписьXML.Закрыть();	
	
	
	Хр = Новый ХранилищеЗначения(Результат, Новый СжатиеДанных(9));
	Если Константы.ВариантПривязкиТелефона.Получить().Пустая() Или Константы.ВариантПривязкиТелефона.Получить() = Перечисления.ВариантыПривязкиТелефона.КВодителю Тогда
		М = Прокси.SetOrderStatus(Хр, Водитель);
	Иначе
		М = Прокси.SetOrderStatusByCars(Хр, Транспорт);		
	КонецеСли;	
	
КонецПроцедуры	



Процедура Трекинг() Экспорт
	Рез = ТекущиеКоординаты();
	Если рез <> Неопределено Тогда
		ТекД = ТекущаяДата();
		Наб = РегистрыСведений.Трекинг.СоздатьНаборЗаписей();
		Наб.Отбор.Период.Установить(ТекД);
		
		Нов = Наб.Добавить();
		Нов.Широта = Рез.Координаты.Широта;
		Нов.Долгота = Рез.Координаты.Долгота;
		Нов.Период = ТекД;
		
		Наб.Записать();
	КонецеСли;
КонецПроцедуры	


Функция ТаймингТрекинга() Экспорт
	Р = Константы.ИнтервалОпросаТрекинга.Получить()*60;
	Если Р = 0 Тогда
		Р = 60;
	КонецеСли;	
	Возврат Р;
КонецФункции	



Функция ТаймингОбмена() Экспорт
	Р = Константы.ИнтервалОбмена.Получить();
	Если Р = 0 Тогда
		Р = 600;
	КонецеСли;	
	Возврат Р;
КонецФункции	

Функция ИспользоватьТрекинг() Экспорт
	Возврат Константы.ИспользоватьТрекинг.Получить();
КонецФункции	



Функция ИспользоватьАвтообмен() Экспорт
	Возврат Константы.ИспользоватьАвтообмен.Получить();
КонецФункции	



Функция ТекущиеКоординаты() Экспорт
	#Если МобильноеПриложениеКлиент Тогда

	Имя = "";		
	//Если ГеопозиционированиеКлиент.ОбновитьМестоположение(Имя) Тогда
	//	ДанныеМестоположения = СредстваГеопозиционирования.ПолучитьПоследнееМестоположение(Имя);
	//	Возврат ДанныеМестоположения;

	//	//ДанныеАдреса = ПолучитьАдресПоМестоположению(ДанныеМестоположения.Координаты);
	//	//Если ДанныеАдреса <> Неопределено Тогда
	//	//	ИспользоватьТекущееМестоположениеСервер(ДанныеАдреса, ДанныеМестоположения);
	//	//Иначе
	//	//	Сообщить(НСтр("ru = 'Не удалось установить адрес по местоположению.'", "ru"));
	//	//КонецЕсли;
	//КонецЕсли;
	
	
		ДанныеМестоположения = СредстваГеопозиционирования.ПолучитьПоследнееМестоположение("gps");
		Возврат ДанныеМестоположения;
	
#КонецЕсли
	Возврат Неопределено;
КонецФункции

Процедура ВыполнитьОбменФоновоеЗадание() Экспорт
	//Задание = ФоновыеЗадания.Выполнить("ОбщийМодуль.ОбменФон");
КонецПроцедуры

Процедура ОбменФон() Экспорт
	МодульОбмен.ВыполнитьОбменНаСервере();
КонецПроцедуры	


//////////////////////////////////////////-----Получение номера для СМС------///////////////////////////

Функция ПолучитьНомерДляОтправкиСМС(Телефон) Экспорт
	//Символы которые будут пропускаться при обходе строки
	СимволыИскллючения = Новый Массив;
	СимволыИскллючения.Добавить("-");
	СимволыИскллючения.Добавить("(");
	СимволыИскллючения.Добавить(")");
    СимволыИскллючения.Добавить(" ");//код символа 32
    СимволыИскллючения.Добавить(" ");//код символа 160
	СимволыИскллючения.Добавить("+");
	
	//Получим строку с разделителем
	НомерСРазделителями = ВернутьЦифрыСРазделителем(Телефон,"/",СимволыИскллючения);
	//Получим массив номеров
	МассивНомеров = РазложитьСтрокуВМассивПодстрок_smv(НомерСРазделителями,"/");
	
	//Сформируем таблицу номеров
	ТаблицаНомеров = Новый ТаблицаЗначений;
	ТаблицаНомеров.Колонки.Добавить("Номер");
	ТаблицаНомеров.Колонки.Добавить("Мобильный");
	Для каждого Стр Из МассивНомеров Цикл
		//Костыль на длинные номера 
		Если СтрДлина(Стр)>11 Тогда
			Если Сред(Стр,1,1) = "7" Или Сред(Стр,1,1) = "8"  Тогда
				Стр = Лев(Стр,11)
			Иначе
				Стр = Лев(Стр,10)
			КонецЕсли;
		ИначеЕсли СтрДлина(Стр) > 10 И Сред(Стр,1,1) <> "7" И Сред(Стр,1,1) <> "8" Тогда
				Стр = Лев(Стр,10)
		КонецЕсли;
		
		//Приведем номер к шаблону
		Номер = ПривестиТелефонКВидуДляСМС(Стр);
		Если ЗначениеЗаполнено(Номер) Тогда
			СтрокаТЗ = ТаблицаНомеров.Добавить();
			СтрокаТЗ.Номер = Номер;
			Если Сред(Номер,3,1) = "9" Тогда
				СтрокаТЗ.Мобильный = Истина;    
			Иначе
				СтрокаТЗ.Мобильный = Ложь; 
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	//Найдем первый попавшийся мобильный
	Если ТаблицаНомеров.Количество() <> 0 Тогда
		НомерТелефона = ТаблицаНомеров[0].Номер;
		Возврат НомерТелефона;
	Иначе
		Возврат "";
	КонецеСли;	
	//СтрокаТаблицы = ТаблицаНомеров.Найти(Истина,"Мобильный");
	//Если СтрокаТаблицы <> Неопределено Тогда 
	//	НомерТелефона = СтрокаТаблицы.Номер;
	//	Возврат НомерТелефона;
	//Иначе
	//	Возврат "";
	//КонецЕсли;
КонецФункции

Функция ПривестиТелефонКВидуДляСМС(ИсходныйНомер) Экспорт
	
	ДлинаНомера = СтрДлина(ИсходныйНомер);
	
	Буфер = ИсходныйНомер;
	
	ПриведенныйНомер = "";
	
	Для Символ=1 По Число(ДлинаНомера) Цикл
		
		ТекущийСимвол = Сред(Буфер, 1, 1);
		
		Если 	ТекущийСимвол = "0"
			ИЛИ ТекущийСимвол = "1"
			ИЛИ ТекущийСимвол = "2"
			ИЛИ ТекущийСимвол = "3"
			ИЛИ ТекущийСимвол = "4"
			ИЛИ ТекущийСимвол = "5"
			ИЛИ ТекущийСимвол = "6"
			ИЛИ ТекущийСимвол = "7"
			ИЛИ ТекущийСимвол = "8"
			ИЛИ ТекущийСимвол = "9"
			Тогда
			ПриведенныйНомер = ПриведенныйНомер + ТекущийСимвол;
		КонецЕсли;
				
		Если Число(СтрДлина(Буфер)) > 1 Тогда
			Буфер = Сред(Буфер, 2);
		КонецЕсли;
	КонецЦикла;	
	
	Если Число(СтрДлина(ПриведенныйНомер)) = 11
		И Сред(ПриведенныйНомер, 1, 1) = "8" Тогда
		ПриведенныйНомер = "7" + Сред(ПриведенныйНомер, 2, СтрДлина(ПриведенныйНомер) - 1);
	ИначеЕсли 	Число(СтрДлина(ПриведенныйНомер)) = 10 И  (Сред(ПриведенныйНомер, 1, 1) <> "8" И Сред(ПриведенныйНомер, 1, 1) <> "7") Тогда
		ПриведенныйНомер = "7" + ПриведенныйНомер;
	КонецЕсли;	
	
	//Возвращаем только полный номер
	Если Число(СтрДлина(ПриведенныйНомер)) = 11 Тогда
		Возврат "+" + ПриведенныйНомер;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции
/////////////////////////////////////////////-----Прочие процедуры и функции-----///////////////////////


//Вытаскивает цифры из строки
Функция НайтиЦифры (ИсходнаяСтрока) Экспорт
	//Массив цифр от 0 до 9
	МассивСимволов = Новый Массив;
	Для НомерСимвола = 48 По 57 Цикл
	 МассивСимволов.Добавить(Символ(НомерСимвола));
	КонецЦикла; 
	
	//Ищем в строке цифры
	Цифры = "";
	Для Символ=1 По СтрДлина(ИсходнаяСтрока) Цикл
		ТекущийСимвол = Сред(ИсходнаяСтрока,Символ,1);
		Если МассивСимволов.Найти(ТекущийСимвол)<> Неопределено Тогда
			Цифры = Цифры+ТекущийСимвол;    
		КонецЕсли;
	КонецЦикла; 
	Возврат Цифры;
КонецФункции

//Старая лучше не использовать
Функция ПривестиТелефонКВиду(ИсходныйНомер) Экспорт
	
	ДлинаНомера = СтрДлина(ИсходныйНомер);
	
	Буфер = ИсходныйНомер;
	
	ПриведенныйНомер = "";
	
	Для Символ=1 По Число(ДлинаНомера) Цикл
		
		ТекущийСимвол = Сред(Буфер, 1, 1);
		
		//Если Символ=1 
		//	И ТекущийСимвол = 8 Тогда 
		//КонецЕсли;		
		
		Если 	ТекущийСимвол = "0"
			ИЛИ ТекущийСимвол = "1"
			ИЛИ ТекущийСимвол = "2"
			ИЛИ ТекущийСимвол = "3"
			ИЛИ ТекущийСимвол = "4"
			ИЛИ ТекущийСимвол = "5"
			ИЛИ ТекущийСимвол = "6"
			ИЛИ ТекущийСимвол = "7"
			ИЛИ ТекущийСимвол = "8"
			ИЛИ ТекущийСимвол = "9"
			Тогда
			ПриведенныйНомер = ПриведенныйНомер + ТекущийСимвол;
		КонецЕсли;
				
		Если Число(СтрДлина(Буфер)) > 1 Тогда
			Буфер = Сред(Буфер, 2);
		КонецЕсли;
	КонецЦикла;	
	
	Если Число(СтрДлина(ПриведенныйНомер)) = 11
		И Сред(ПриведенныйНомер, 1, 1) = "8" Тогда
		ПриведенныйНомер = "7" + Сред(ПриведенныйНомер, 2, СтрДлина(ПриведенныйНомер) - 1);
	ИначеЕсли 	Число(СтрДлина(ПриведенныйНомер)) = 10 Тогда
		ПриведенныйНомер = "7" + ПриведенныйНомер;
	КонецЕсли;	
	
	//если получившийся номер < 9, то это не мобила
	Если Число(СтрДлина(ПриведенныйНомер)) < 9 Тогда
		//Возврат Неопределено;
		Возврат ПриведенныйНомер;
	Иначе	
		Возврат ПриведенныйНомер;
	КонецЕсли;
	
КонецФункции	

//Отбразываем 7 и 8 из телефонного номера
Функция ПолучитьНомерБезКодаСтраны (Телефон) Экспорт
	Если СтрДлина(Телефон) = 11 И ( Сред(Телефон,1,1) = "8" ИЛИ Сред(Телефон,1,1) = "7" ) Тогда
		Возврат Прав(Телефон,10);
	ИначеЕсли СтрДлина(Телефон) = 10 И (Сред(Телефон,1,1) <> "8" И Сред(Телефон,1,1) <> "7")Тогда
		Возврат Телефон;
	ИначеЕсли СтрДлина(Телефон) > 11 И (Сред(Телефон,1,1) = "8" ИЛИ Сред(Телефон,1,1) = "7")Тогда
	   Возврат Сред(Телефон,2,10);
	ИначеЕсли СтрДлина(Телефон) > 10 И (Сред(Телефон,1,1) <> "8" И Сред(Телефон,1,1) <> "7")Тогда
		Возврат Лев(Телефон,10);
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

//Не допилена
Функция ПолучитьНомерСразделителем (Номер, Разделитель) Экспорт 
	НовыйНомер = "";
	Для Сч=1 По 10 Цикл
		Если Сч = 4 ИЛИ Сч= 7 ИЛИ Сч = 9 Тогда
			НовыйНомер = НовыйНомер+Разделитель+Сред(Номер,Сч,1); 
		Иначе
			НовыйНомер = НовыйНомер+Сред(Номер,Сч,1); 
		КонецЕсли;
	КонецЦикла;
	Возврат НовыйНомер;
КонецФункции

//Аналогична функции НайтиЦифры+добавлен разделитель и Символы исключения (символы которые будут пропускаться в цикле)
Функция ВернутьЦифрыСРазделителем (ИсходнаяСтрока,Разделитель,СимволыИсключения) Экспорт
	//Массив цифр от 0 до 9
	МассивСимволов = Новый Массив;
	Для НомерСимвола = 48 По 57 Цикл
	 МассивСимволов.Добавить(Символ(НомерСимвола));
	КонецЦикла; 
	
	//Ищем в строке цифры
	Цифры = "";
	Для Символ=1 По СтрДлина(ИсходнаяСтрока) Цикл
		ТекущийСимвол = Сред(ИсходнаяСтрока,Символ,1);
		//Значит это цифра
		Если МассивСимволов.Найти(ТекущийСимвол)<> Неопределено Тогда
			Цифры = Цифры+ТекущийСимвол;
		//Значит это не символ исключения, вставляем разделитель
		ИначеЕсли СимволыИсключения.Найти(ТекущийСимвол)=Неопределено Тогда 
			Цифры = Цифры+Разделитель;   
		КонецЕсли;
	КонецЦикла; 
	Возврат Цифры;
КонецФункции

//Отличается от типовой, нет пустых строк
Функция РазложитьСтрокуВМассивПодстрок_smv(Знач Стр, Разделитель = ",") Экспорт
	
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока Истина Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока Истина Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				Если Стр <>"" Тогда
					МассивСтрок.Добавить(Стр);
				КонецЕсли;
				Возврат МассивСтрок;
			КонецЕсли;
			Если Лев(Стр,Поз-1) <> "" Тогда
				МассивСтрок.Добавить(Лев(Стр,Поз-1));
			КонецЕсли;
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции



Процедура ЗаписатьЗвонокВРегистр(Звонок, ТипЗвонка) Экспорт
	Наб = РегистрыСведений.ЖурналЗвонков.СоздатьНаборЗаписей();
	Наб.Отбор.Период.Установить(Звонок.Дата);
	
	Нов = Наб.Добавить();
	Нов.Период = Звонок.Дата;
	Нов.НомерТелефона = Звонок.НомерТелефона;
	Нов.ТипЗвонка = ТипЗвонка;
	наб.Записать();
КонецПроцедуры	

