&НаСервере
Процедура ОчиститьДанныеПоРассылкамСМС() Экспорт
    Попытка
        Запрос = Новый Запрос;
        Запрос.Текст = "ВЫБРАТЬ
                       |	РассылкаСМС.Период КАК Период,
                       |	РассылкаСМС.Рейс КАК Рейс,
                       |	РассылкаСМС.Заказ КАК Заказ,
                       |	РассылкаСМС.Шаблон КАК Шаблон
                       |ИЗ
                       |	РегистрСведений.РассылкаСМС КАК РассылкаСМС
                       |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РассылкаСМС.Изменения КАК РассылкаСМСИзменения
                       |		ПО РассылкаСМС.Период = РассылкаСМСИзменения.Период
                       |			И РассылкаСМС.Рейс = РассылкаСМСИзменения.Рейс
                       |			И РассылкаСМС.Заказ = РассылкаСМСИзменения.Заказ
                       |			И РассылкаСМС.Шаблон = РассылкаСМСИзменения.Шаблон
                       |ГДЕ
                       |	ЕСТЬNULL(РассылкаСМСИзменения.Узел, 1) = 1";
        
        
		//Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата() - 1259200);
		//Запрос.УстановитьПараметр("ДатаНач", ТекущаяДата() - 1864000);
        
        РезультатЗапроса = Запрос.Выполнить();
        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
        
        
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            НаборЗаписей = РегистрыСведений.РассылкаСМС.СоздатьНаборЗаписей();
            НаборЗаписей.Отбор.Период.Установить(ВыборкаДетальныеЗаписи.Период);
			НаборЗаписей.Отбор.Рейс.Установить(ВыборкаДетальныеЗаписи.Рейс);
			НаборЗаписей.Отбор.Заказ.Установить(ВыборкаДетальныеЗаписи.Заказ);
			НаборЗаписей.Отбор.Шаблон.Установить(ВыборкаДетальныеЗаписи.Шаблон);
            НаборЗаписей.Записать();
        КонецЦикла;
        
        
    Исключение
    КонецПопытки;	
КонецПроцедуры	
&НаСервере
Функция СформироватьНаборДанныхДляОтправкиСМС(Рейс) Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ЗаказДокумент.Клиент КАК ИмяКлиента,
	            |	ЗаказДокумент.Номер КАК НомерСтриж,
	            |	ЗаказДокумент.Телефон КАК ТелефонКлиента,
	            |	ЗаказДокумент.НомерКлиента КАК НомерЗаказаИМ,
	            |	ЗаказДокумент.ИнтернетМагазин.НаименованиеЛатиницей КАК ИМЛатиницей,
	            |	ЗаказДокумент.ИнтернетМагазин.Ссылка КАК ИМ,
	            |	ЗаказДокумент.Партнер.Ссылка КАК Партнер,
	            |	ЗаказДокумент.ВремяДоставкиС КАК ИнтервалС,
	            |	ЗаказДокумент.ВремяДоставкиПо КАК ИнтервалПо,
	            |	РейсДокумент.Водитель.Ссылка КАК Водитель,
	            |	РейсДокумент.Водитель.ИмяЛатиницей КАК ВодительЛатиницей,
	            |	РейсДокумент.Экспедитор.Ссылка КАК Экспедитор,
	            |	РейсДокумент.Экспедитор.ИмяЛатиницей КАК ЭкспедиторЛатиницей,
	            |	РейсДокумент.НомерТелефона КАК НомерТелефонаЭкипажа,
	            |	СУММА(ЗаказТовары.Сумма) КАК СуммаЗаказа,
	            |	ЗаказДокумент.ШаблонСМС.ТекстШаблона КАК ТекстШаблонаСМС,
	            |	ЗаказДокумент.ШаблонСМС.СклонениеИсполнителяДоставки КАК СклонениеИсполнителяДоставки,
	            |	ЗаказДокумент.КодЗоныТарификации КАК КодЗоныТарификации,
	            |	ТекущийРегион.Значение.НачалоИнтервалаДоставкиВОбласти КАК НачалоИнтервалаДоставкиВОбласти,
	            |	ТекущийРегион.Значение.ОкончаниеИнтервалаДоставкиВОбласти КАК ОкончаниеИнтервалаДоставкиВОбласти,
	            |	ЗаказДокумент.ИнтернетМагазин.Код КАК ИМКод,
	            |	ЗаказДокумент.Дата КАК Дата,
	            |	ЗаказДокумент.ИнтернетМагазин.Наименование КАК ИМНаименование,
	            |	ЗаказДокумент.Ссылка КАК Заказ,
	            |	ЗаказДокумент.ШаблонСМС.Ссылка КАК ШаблонСМС,
	            |	РейсДокумент.Транспорт КАК Транспорт
	            |ИЗ
	            |	Документ.Заказ.Товары КАК ЗаказТовары
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Заказ КАК ЗаказДокумент
	            |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс КАК РейсДокумент
	            |			ПО ЗаказДокумент.Рейс = РейсДокумент.Ссылка
	            |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РассылкаСМС.СрезПоследних(, Рейс.Ссылка = &Рейс) КАК РассылкаСМССрезПоследних
	            |			ПО ЗаказДокумент.Ссылка = РассылкаСМССрезПоследних.Заказ.Ссылка
	            |		ПО ЗаказТовары.Ссылка = ЗаказДокумент.Ссылка,
	            |	Константа.ТекущийРегион КАК ТекущийРегион
	            |ГДЕ
	            |	РейсДокумент.Ссылка = &Рейс
	            |	И ЗаказДокумент.СнятьСДоставки = ЛОЖЬ
	            |	И ЗаказДокумент.РезультатДоставки = ЗНАЧЕНИЕ(справочник.результатыДоставки.КДоставке)
	            |	И ЗаказДокумент.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипЗаказа.Доставка)
	            |	И ЕСТЬNULL(РассылкаСМССрезПоследних.ДатаОтправки, 1) = 1
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	ЗаказДокумент.Клиент,
	            |	ЗаказДокумент.Номер,
	            |	ЗаказДокумент.Телефон,
	            |	РейсДокумент.НомерТелефона,
	            |	РейсДокумент.Экспедитор.Ссылка,
	            |	ЗаказДокумент.ИнтернетМагазин.Ссылка,
	            |	ЗаказДокумент.ВремяДоставкиПо,
	            |	ЗаказДокумент.Партнер.Ссылка,
	            |	ЗаказДокумент.НомерКлиента,
	            |	ЗаказДокумент.ВремяДоставкиС,
	            |	РейсДокумент.Водитель.Ссылка,
	            |	РейсДокумент.Водитель.ИмяЛатиницей,
	            |	РейсДокумент.Экспедитор.ИмяЛатиницей,
	            |	ЗаказДокумент.ШаблонСМС.СклонениеИсполнителяДоставки,
	            |	ЗаказДокумент.ШаблонСМС.ТекстШаблона,
	            |	ЗаказДокумент.КодЗоныТарификации,
	            |	ТекущийРегион.Значение.НачалоИнтервалаДоставкиВОбласти,
	            |	ТекущийРегион.Значение.ОкончаниеИнтервалаДоставкиВОбласти,
	            |	ЗаказДокумент.ИнтернетМагазин.Код,
	            |	ЗаказДокумент.Дата,
	            |	ЗаказДокумент.ИнтернетМагазин.НаименованиеЛатиницей,
	            |	ЗаказДокумент.ИнтернетМагазин.Наименование,
	            |	ЗаказДокумент.Ссылка,
	            |	ЗаказДокумент.ШаблонСМС.Ссылка,
	            |	РейсДокумент.Транспорт";
	Зап.УстановитьПараметр("Рейс", Рейс);
	Рез = Зап.Выполнить();
	Выб = Рез.Выбрать();
	
	МассивОтвет = Новый Массив;
	
	
	Пока Выб.Следующий() Цикл
		Струк = Новый Структура;
		Для Каждого ТекКолонка Из Рез.Колонки Цикл
			Струк.Вставить(ТекКолонка.Имя, Выб[ТекКолонка.Имя]);
		КонецЦикла;	
		МассивОтвет.Добавить(Струк);
	КонецЦикла;	
	
	Возврат МассивОтвет;
КонецФункции	

&НаСервере
Функция ПроверитьШКОтправкиСМС(Штрихкод) Экспорт
	Рейс = ОбщегоНазначения.ПолучитьТекущийРейс();
	ТекущийШтрихкод = ХэшФункцииСервер.Хэш(СокрЛП(Константы.Транспорт.Получить().Код) + СокрЛП(Рейс.НомерРейса));
	//Сообщить(СокрЛП(Константы.Транспорт.Получить().Код) + СокрЛП(Рейс.Номер));
	ТекущийШтрихкод = СтрЗаменить(ТекущийШтрихкод, Символы.НПП, "");
	ПроверяемыйШтрихкод = СтрЗаменить(Штрихкод, Символы.НПП, "");
	ПроверяемыйШтрихкод = СтрЗаменить(ПроверяемыйШтрихкод, " ", "");
	
	Струк = Новый Структура;
	Струк.Вставить("Рейс", Рейс);
	
	Если ПроверяемыйШтрихкод <> ТекущийШтрихкод Тогда
		//Сообщить(ПроверяемыйШтрихкод);
		//Сообщить(КодСимвола(ПроверяемыйШтрихкод, 2));
		//
		//Сообщить(ТекущийШтрихкод);
		
		Сообщить("Сканирован МЛ, не соответствующий настройкам мобильного приложения!");
		Струк.Вставить("Корректно", Ложь);
	Иначе
		Струк.Вставить("Корректно", Истина);
	конецеСли;	
	
	Возврат Струк;
КонецФункции	






&НаКлиенте
Процедура ЛогироватьОтправленноеСМС(СтрокаСМС, Рейс, СтрокаДанных, ДатаОтправки, ДатаПолучения = "", Ошибка = Ложь, ТекстОшибки = "")
	СМСИнформированиеСервер.ЛогироватьОтправленноеСМСНаСервере(СтрокаСМС, Рейс, СтрокаДанных, ДатаОтправки, ДатаПолучения, Ошибка, ТекстОшибки);
КонецПроцедуры



&НаКлиенте
Функция ОтправитьСМСПоРейсуПоНаборуДанных(Рейс, НаборДанных) Экспорт
	#Если МобильноеПриложениеКлиент Тогда
		
	КоличествоКОтправке = НаборДанных.Количество();
	КоличествоОтправлено = 0;
	Сообщить("Начало отправки");	
	Для Каждого Тек Из НаборДанных Цикл
		СтрокаСМС = ВыполнитьПодстановкуВТекстеСМС(Тек.ТекстШаблонаСМС, Тек);
			
		СМС = Новый SMSСообщение();
		СМС.Текст = СтрокаСМС;
		СМС.Получатели.Добавить(Тек.ТелефонКлиента);
		Сообщить("Отправка СМС, заказ " + Тек.НомерЗаказаИМ);
		Попытка
			СредстваТелефонии.ПослатьSMS(СМС, Ложь);
		Исключение
			ЛогироватьОтправленноеСМС(СтрокаСМС, Рейс, Тек, ТекущаяДата(),, Истина, ОписаниеОшибки());
			Продолжить;
		КонецПопытки;	
		//логируем отправку
		
		ЛогироватьОтправленноеСМС(СтрокаСМС, Рейс, Тек, ТекущаяДата(), СМС.ДатаПолучения);
		Пауза(2);
	КонецЦикла;	
	Сообщить("Окончание отправки");	
	#КонецЕсли	
КонецФункции	


Процедура Пауза(Время) Экспорт

   ВремяЗавершения = ТекущаяДата() + Время;
   Пока ТекущаяДата() < ВремяЗавершения Цикл
   КонецЦикла;

КонецПроцедуры


Функция ВыполнитьПодстановкуВТекстеСМС(ТекстШаблона, Данные) 
    Результат = ТекстШаблона;
    
    
    ТелефонЭкипажа = СокрЛП(Данные.НомерТелефонаЭкипажа);
    
    Если Лев(ТелефонЭкипажа, 1) <> "8" Тогда
        ТелефонЭкипажа = "8" + ТелефонЭкипажа;
	КонецеСли;	
	
	НомерБезСимволов = УбратьПлохиеСимволы(Строка(Данные.НомерЗаказаИМ));
	Результат = СтрЗаменить(Результат, "[ExNumber]", НомерБезСимволов);
    Результат = СтрЗаменить(Результат, "[PhoneCar]", ТелефонЭкипажа);
	
    Результат = СтрЗаменить(Результат, "[Summa]", Формат(Число(Данные.СуммаЗаказа), "ЧДЦ=; ЧН=0; ЧГ="));
	
	
	
	Если Данные.КодЗоныТарификации = "00000000006" Или Данные.КодЗоныТарификации = "00000000052" Или Данные.КодЗоныТарификации = "00000000030"  Или Данные.КодЗоныТарификации = "00000000003" Или Данные.КодЗоныТарификации = "00000000031" Тогда
		
	    IntervalS = Данные.ИнтервалС;
	    IntervalPO = Данные.ИнтервалПо;                        
	ИначеЕсли Данные.ИМКод = "Shop_428" Тогда
		IntervalS = НачалоДня(Данные.ИнтервалС)+36000;
		IntervalPO = НачалоДня(Данные.ИнтервалПо)+72000;		
	Иначе	
		IntervalS = Данные.НачалоИнтервалаДоставкиВОбласти;
		IntervalPO = Данные.ОкончаниеИнтервалаДоставкиВОбласти;		
	КонецЕсли;
    Результат = СтрЗаменить(Результат, "[IntervalS]", Формат(IntervalS,"ДФ=H"));
    Результат = СтрЗаменить(Результат, "[IntervalPO]", Формат(IntervalPO,"ДФ=H"));
	Результат = СтрЗаменить(Результат, "[Date]", Формат(Данные.Дата,"ДФ=dd.MM.yyyy"));
	Результат = СтрЗаменить(Результат, "[IM]", Данные.ИМНаименование);
	
	Если ЗначениеЗаполнено(Данные.ИМЛатиницей) Тогда
		Результат = СтрЗаменить(Результат, "[IMLat]", Данные.ИМЛатиницей);
	Иначе
		Результат = СтрЗаменить(Результат, "[IMLat]", Данные.ИМНаименование);	
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(Данные.Экспедитор) Тогда
		ФИОЭкспедитора = СокрЛП(Данные.Экспедитор);
		
		//Попытка
		//	ФИОЭкспедитора = ОбщегоНазначения.ПолучитьСклонениеФИОВстроенный(ФИОЭкспедитора, Данные.Падеж);
		//Исключение
		//КонецПопытки;
		
		ФИОЭкспедитора = СтрЗаменить(ФИОЭкспедитора, " ", Символы.ПС);
		ИмяЭкспедитора = СтрПолучитьСтроку(ФИОЭкспедитора, 2);
		Результат = СтрЗаменить(Результат, "[Name]", ИмяЭкспедитора);
		Результат = СтрЗаменить(Результат, "[NameLat]", Данные.ЭкспедиторЛатиницей);		
	Иначе
		ФИОВод = СокрЛП(Данные.Водитель);
		
		//Попытка
		//	ФИОВод = ОбщегоНазначения.ПолучитьСклонениеФИОВстроенный(ФИОВод, Данные.Падеж);
		//Исключение
		//КонецПопытки;
		
		ФИОВод = СтрЗаменить(ФИОВод, " ", Символы.ПС);
		ИмяВод = СтрПолучитьСтроку(ФИОВод, 2);
		Результат = СтрЗаменить(Результат, "[Name]", ИмяВод);
		Результат = СтрЗаменить(Результат, "[NameLat]", Данные.ВодительЛатиницей);		
	КонецЕсли;
	
	    
    Возврат Результат;
КонецФункции	
	

	
Функция УбратьПлохиеСимволы(знач НомерСтрока)

	МассивДляУдаления = Новый массив;
	
	Для НСим = 1 По СтрДлина(НомерСтрока) Цикл			
		Если КодСимвола(НомерСтрока, НСим) > 255 Тогда			
			Символ = Сред(НомерСтрока, НСим, 1);
			МассивДляУдаления.Добавить(Символ);	
		КонецЕсли;		
	КонецЦикла;
	
	
	Для каждого Мас Из МассивДляУдаления Цикл	
		НомерСтрока = СтрЗаменить(НомерСтрока, Мас, "");	
	КонецЦикла;
	
	
	Возврат НомерСтрока;

КонецФункции


