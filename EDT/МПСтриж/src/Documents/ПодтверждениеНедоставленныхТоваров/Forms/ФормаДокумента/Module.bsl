
&НаСервере
Процедура ЗаполнитьДокументНаСервере()
	// Вставить содержимое обработчика.
	Объект.Дата = ТекущаяДата();
	ЗаполнитьДанныеПоЧастичке();
	ЗаполнитьДанныеПоОтказамПереносам();
	ЗаполнитьДанныеПоВыполненнымВозвратамИОбменам();
	//СтрукЗаписи = Новый Структура;
	//СтрукЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	//Записать(СтрукЗаписи);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоЧастичке()
	Зап = Новый Запрос;
	
	//частичка
	Зап.Текст = "ВЫБРАТЬ
	            |	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	            |	ДанныеЗаказаВодителя.Ссылка КАК Ссылка
	            |ПОМЕСТИТЬ ВТ_Данные
	            |ИЗ
	            |	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	            |			ДанныеЗаказаВодителя.Реализация КАК Реализация,
	            |			МАКСИМУМ(ДанныеЗаказаВодителя.Дата) КАК Дата
	            |		ИЗ
	            |			Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	            |		
	            |		СГРУППИРОВАТЬ ПО
	            |			ДанныеЗаказаВодителя.Реализация) КАК ВложенныйЗапрос
	            |		ПО ДанныеЗаказаВодителя.Реализация.Ссылка = ВложенныйЗапрос.Реализация.Ссылка
	            |			И ДанныеЗаказаВодителя.Дата = ВложенныйЗапрос.Дата
	            |ГДЕ
	            |	ДанныеЗаказаВодителя.Реализация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	            |	И ДанныеЗаказаВодителя.Реализация.ТипЗаказа.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипЗаказа.Доставка)
	            |	И ДанныеЗаказаВодителя.Дата >= &ДатаНачСмены
	            |	И ДанныеЗаказаВодителя.Реализация.СнятьСДоставки = ЛОЖЬ
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ЗаказТовары.Ссылка КАК Ссылка,
	            |	ЗаказТовары.Товар КАК Товар,
	            |	ЗаказТовары.Количество КАК Количество,
	            |	ВЫБОР
	            |		КОГДА ЗаказТовары.Ссылка.ТипОплаты = ЗНАЧЕНИЕ(Справочник.ТипыОплат.ОплаченоВМагазине)
	            |				ИЛИ ЗаказТовары.Ссылка.ТипОплаты = ЗНАЧЕНИЕ(Справочник.ТипыОплат.БезналичныйРасчет)
	            |			ТОГДА ЗаказТовары.Цена
	            |		ИНАЧЕ ЗаказТовары.Цена
	            |	КОНЕЦ КАК Цена,
	            |	ВТ_Данные.Ссылка.Статус КАК Статус,
	            |	ЗаказТовары.ШтрихкодТовара КАК ШтрихкодТовара,
	            |	ЗаказТовары.КодМаркировки КАК КодМаркировки
	            |ПОМЕСТИТЬ ВТ_ТоварыЧастично
	            |ИЗ
	            |	ВТ_Данные КАК ВТ_Данные
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Заказ.Товары КАК ЗаказТовары
	            |		ПО ВТ_Данные.Реализация.Ссылка = ЗаказТовары.Ссылка.Ссылка
	            |ГДЕ
	            |	ВТ_Данные.Ссылка.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.РезультатыДоставки.Доставлен)
	            |	И ЗаказТовары.Количество >= 0
	            |
	            |ОБЪЕДИНИТЬ ВСЕ
	            |
	            |ВЫБРАТЬ
	            |	ВТ_Данные.Реализация.Ссылка,
	            |	ДанныеЗаказаВодителяДоставленныеТовары.Номенклатура,
	            |	-ДанныеЗаказаВодителяДоставленныеТовары.КоличествоДоставлено,
	            |	ДанныеЗаказаВодителяДоставленныеТовары.Цена,
	            |	ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Статус,
	            |	ДанныеЗаказаВодителяДоставленныеТовары.ШтрихкодТовара,
	            |	ДанныеЗаказаВодителяДоставленныеТовары.КодМаркировки
	            |ИЗ
	            |	ВТ_Данные КАК ВТ_Данные
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя.ДоставленныеТовары КАК ДанныеЗаказаВодителяДоставленныеТовары
	            |		ПО ВТ_Данные.Ссылка.Ссылка = ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Ссылка
	            |ГДЕ
	            |	ВТ_Данные.Ссылка.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.РезультатыДоставки.Доставлен)
	            |	И ДанныеЗаказаВодителяДоставленныеТовары.КоличествоДоставлено >= 0
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ВТ_ТоварыЧастично.Ссылка КАК Ссылка,
	            |	ВТ_ТоварыЧастично.Товар КАК Товар,
	            |	СУММА(ВТ_ТоварыЧастично.Количество) КАК Количество,
	            |	ВТ_ТоварыЧастично.Цена КАК Цена,
	            |	ВТ_ТоварыЧастично.Статус КАК Статус,
	            |	ВТ_ТоварыЧастично.ШтрихкодТовара КАК ШтрихкодТовара,
	            |	ВТ_ТоварыЧастично.КодМаркировки КАК КодМаркировки
	            |ПОМЕСТИТЬ ВТ_Ит
	            |ИЗ
	            |	ВТ_ТоварыЧастично КАК ВТ_ТоварыЧастично
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	ВТ_ТоварыЧастично.Ссылка,
	            |	ВТ_ТоварыЧастично.Товар,
	            |	ВТ_ТоварыЧастично.Цена,
	            |	ВТ_ТоварыЧастично.Статус,
	            |	ВТ_ТоварыЧастично.ШтрихкодТовара,
	            |	ВТ_ТоварыЧастично.КодМаркировки
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ВТ_Ит.Ссылка КАК Заказ,
	            |	ВТ_Ит.Товар КАК Товар,
	            |	ВТ_Ит.Количество КАК Количество,
	            |	ВТ_Ит.Цена КАК Цена,
	            |	ВТ_Ит.Статус КАК Статус,
	            |	ВТ_Ит.ШтрихкодТовара КАК ШтрихкодТовара,
	            |	ВТ_Ит.КодМаркировки КАК КодМаркировки
	            |ИЗ
	            |	ВТ_Ит КАК ВТ_Ит
	            |ГДЕ
	            |	ВТ_Ит.Количество <> 0";
	
	Зап.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаРейса));
	Зап.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаРейса));
	Зап.УстановитьПараметр("ДатаНачСмены", НачалоДня(Объект.ДатаРейса) + 25200);
	
	Рез = Зап.Выполнить().Выбрать();
	Пока Рез.Следующий() Цикл
		Нов = Объект.Товары.Добавить();
		Нов.Заказ = Рез.Заказ;
		Нов.Количество = Рез.Количество;
		Нов.Цена = Рез.Цена;
		Нов.Товар = Рез.Товар;
		Нов.ШтрихкодТовара = Рез.ШтрихкодТовара;
		Нов.КодМаркировки = Рез.КодМаркировки;
	КонецЦикла;		
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьДанныеПоОтказамПереносам()
	Зап = Новый Запрос;
	
	//частичка
	Зап.Текст = "ВЫБРАТЬ
	            |	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	            |	ДанныеЗаказаВодителя.Ссылка КАК Ссылка
	            |ПОМЕСТИТЬ ВТ_Данные
	            |ИЗ
	            |	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	            |			ДанныеЗаказаВодителя.Реализация КАК Реализация,
	            |			МАКСИМУМ(ДанныеЗаказаВодителя.Дата) КАК Дата
	            |		ИЗ
	            |			Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	            |		
	            |		СГРУППИРОВАТЬ ПО
	            |			ДанныеЗаказаВодителя.Реализация) КАК ВложенныйЗапрос
	            |		ПО ДанныеЗаказаВодителя.Реализация.Ссылка = ВложенныйЗапрос.Реализация.Ссылка
	            |			И ДанныеЗаказаВодителя.Дата = ВложенныйЗапрос.Дата
	            |ГДЕ
	            |	ДанныеЗаказаВодителя.Реализация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	            |	И ДанныеЗаказаВодителя.Реализация.ТипЗаказа.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипЗаказа.Доставка)
	            |	И ДанныеЗаказаВодителя.Дата >= &ДатаНачСмены
	            |	И ДанныеЗаказаВодителя.Реализация.СнятьСДоставки = ЛОЖЬ
	            |	И ДанныеЗаказаВодителя.ВозвратныйЧек = ЗНАЧЕНИЕ(документ.чеккпечатиВозвратПрихода.пустаяссылка)
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ЗаказТовары.Ссылка КАК Заказ,
	            |	ЗаказТовары.Товар КАК Товар,
	            |	ЗаказТовары.Количество КАК Количество,
	            |	ЗаказТовары.Цена КАК Цена,
	            |	ВТ_Данные.Ссылка.Статус КАК Статус,
	            |	ЗаказТовары.ШтрихкодТовара КАК ШтрихкодТовара,
	            |	ЗаказТовары.КодМаркировки КАК КодМаркировки
	            |ИЗ
	            |	ВТ_Данные КАК ВТ_Данные
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Заказ.Товары КАК ЗаказТовары
	            |		ПО ВТ_Данные.Реализация.Ссылка = ЗаказТовары.Ссылка.Ссылка
	            |ГДЕ
	            |	ВТ_Данные.Ссылка.РезультатДоставки <> ЗНАЧЕНИЕ(Справочник.РезультатыДоставки.Доставлен)
	            |	И ВТ_Данные.Ссылка.РезультатДоставки <> ЗНАЧЕНИЕ(Справочник.РезультатыДоставки.КДоставке)";
				
				//|	(ВТ_Данные.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказаВодитель.ОтказСЗаездом)
				//|			ИЛИ ВТ_Данные.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказаВодитель.ОтказБезЗаезда)
				//|			ИЛИ ВТ_Данные.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказаВодитель.Перенос)
				//|			ИЛИ ВТ_Данные.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказаВодитель.ПереносСЗаездом)
				//|			ИЛИ ВТ_Данные.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказаВодитель.НеДоставлен))";
	
	Зап.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаРейса));
	Зап.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаРейса));
	Зап.УстановитьПараметр("ДатаНачСмены", НачалоДня(Объект.ДатаРейса) + 25200);
	
	Рез = Зап.Выполнить().Выбрать();
	Пока Рез.Следующий() Цикл
		Нов = Объект.Товары.Добавить();
		Нов.Заказ = Рез.Заказ;
		Нов.Количество = Рез.Количество;
		Нов.Цена = Рез.Цена;
		Нов.Товар = Рез.Товар;
		Нов.ШтрихкодТовара = Рез.ШтрихкодТовара;
		Нов.КодМаркировки = Рез.КодМаркировки;
	КонецЦикла;		
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьДанныеПоВыполненнымВозвратамИОбменам()
	Зап = Новый Запрос;
	
	//частичка
	Зап.Текст = "ВЫБРАТЬ
	            |	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	            |	ДанныеЗаказаВодителя.Ссылка КАК Ссылка
	            |ПОМЕСТИТЬ ВТ_Данные
	            |ИЗ
	            |	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	            |			ДанныеЗаказаВодителя.Реализация КАК Реализация,
	            |			МАКСИМУМ(ДанныеЗаказаВодителя.Дата) КАК Дата
	            |		ИЗ
	            |			Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	            |		
	            |		СГРУППИРОВАТЬ ПО
	            |			ДанныеЗаказаВодителя.Реализация) КАК ВложенныйЗапрос
	            |		ПО ДанныеЗаказаВодителя.Реализация.Ссылка = ВложенныйЗапрос.Реализация.Ссылка
	            |			И ДанныеЗаказаВодителя.Дата = ВложенныйЗапрос.Дата
	            |ГДЕ
	            |	ДанныеЗаказаВодителя.Реализация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	            |	И ДанныеЗаказаВодителя.Реализация.ТипЗаказа.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипЗаказа.Доставка)
	            |	И ДанныеЗаказаВодителя.Дата >= &ДатаНачСмены
	            |	И ДанныеЗаказаВодителя.Реализация.СнятьСДоставки = ЛОЖЬ
	            |	И ДанныеЗаказаВодителя.ВозвратныйЧек = ЗНАЧЕНИЕ(документ.чеккпечатиВозвратПрихода.пустаяссылка)
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ЗаказТовары.Ссылка КАК Заказ,
	            |	ЗаказТовары.Товар КАК Товар,
	            |	ЗаказТовары.Количество КАК Количество,
	            |	ЗаказТовары.Цена КАК Цена,
	            |	ВТ_Данные.Ссылка.Статус КАК Статус,
	            |	ЗаказТовары.ШтрихкодТовара КАК ШтрихкодТовара,
	            |	ЗаказТовары.КодМаркировки КАК КодМаркировки
	            |ИЗ
	            |	ВТ_Данные КАК ВТ_Данные
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Заказ.Товары КАК ЗаказТовары
	            |		ПО ВТ_Данные.Реализация.Ссылка = ЗаказТовары.Ссылка.Ссылка
	            |ГДЕ
	            |	ВТ_Данные.Ссылка.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.РезультатыДоставки.Доставлен)
	            |	И ЗаказТовары.Количество < 0";
	
	Зап.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаРейса));
	Зап.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаРейса));
	Зап.УстановитьПараметр("ДатаНачСмены", НачалоДня(Объект.ДатаРейса) + 25200);
	
	Рез = Зап.Выполнить().Выбрать();
	Пока Рез.Следующий() Цикл
		Нов = Объект.Товары.Добавить();
		Нов.Заказ = Рез.Заказ;
		Нов.Количество = -Рез.Количество;
		Нов.Цена = Рез.Цена;
		Нов.Товар = Рез.Товар;
		Нов.ШтрихкодТовара = Рез.ШтрихкодТовара;
		Нов.КодМаркировки = Рез.КодМаркировки;
	КонецЦикла;		
КонецПроцедуры	


&НаКлиенте
Процедура ЗаполнитьДокумент(Команда)
	Если Объект.Товары.Количество() <> 0 Тогда
		Объект.Товары.Очистить();
	КонецеСли;	
	ЗаполнитьДокументНаСервере();
	//Элементы.Товары.Обновить();
	Элементы.ФормаСогласен.Доступность = Истина;
	Элементы.ФормаНеСогласен.Доступность = Истина;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТолькоПросмотр = Объект.ДокументПереданВЦБ;
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ДатаРейса = ОбщегоНазначения.ПолучитьПредполагаемуюДатуРейса();
		ЗаполнитьДокументНаСервере();
	КонецеСли;	
КонецПроцедуры

&НаСервере
Функция СогласенНаСервере()
	Объект.СогласенСДаннымиМП = Истина;
	РезультатЗаписи = ЗаписатьВыгрузитьПровестиДокумент();
	Возврат РезультатЗаписи;
КонецФункции


&НаСервере
Функция ПроверитьВозможностьЗаписиИВыгрузкиДокумента()
	Возврат УдаленноеЗакрытиеЭкипажейСервер.ПроверитьСтатусыНаНевыгруженностьВЦБ(Объект.ДатаРейса);	
КонецФункции	

&НаКлиенте
Процедура Согласен(Команда)
	Если Не ПроверитьВозможностьЗаписиИВыгрузкиДокумента() Тогда
		Сообщить("Обнаружены невыгруженные статусы в ЦБ! Выполните обмен перед тем, как делать удаленное закрытие!");
		Возврат;		
	КонецеСли;
	
	Результат = СогласенНаСервере();
	Если Не Результат.Успешно Тогда
		Сообщить("Ошибка выгрузки документа в ЦБ! Описание проблемы: " + Результат.Описание);
		Возврат;
	Иначе
		Закрыть();
	КонецеСли;	
КонецПроцедуры

Функция ЗаписатьВыгрузитьПровестиДокумент()
	СтрукЗаписи = Новый Структура;
	СтрукЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	Записать(СтрукЗаписи);
	
	
	Результат = МодульОбмен.ВыгрузитьПодтверждениеНедоставленныхТоваров(Объект.Ссылка);
	Если Результат.Успешно Тогда
		Объект.ДокументПереданВЦБ = Истина;
		Объект.НомерДокументаВЦБ = Результат.НомерДокументаВЦБ;
		СтрукЗаписи = Новый Структура;
		СтрукЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
		Записать(СтрукЗаписи);
	КонецЕсли;
	ТолькоПросмотр = Результат.Успешно;
	Возврат Результат;
КонецФункции

&НаСервере
Функция НеСогласенНаСервере()
	Объект.СогласенСДаннымиМП = Ложь;
	РезультатЗаписи = ЗаписатьВыгрузитьПровестиДокумент();
	Возврат РезультатЗаписи;
КонецФункции

&НаКлиенте
Процедура НеСогласен(Команда)
	Если Не ПроверитьВозможностьЗаписиИВыгрузкиДокумента() Тогда
		Сообщить("Обнаружены невыгруженные статусы в ЦБ! Выполните обмен перед тем, как делать удаленное закрытие!");
		Возврат;		
	КонецеСли;	
	
	Результат = НеСогласенНаСервере();
	Если Не Результат.Успешно Тогда
		Сообщить("Ошибка выгрузки документа в ЦБ! Описание проблемы: " + Результат.Описание);
		Возврат;
	Иначе
		Закрыть();
	КонецеСли;	
	Сообщить("Необходимо вернуться на базу для закрытия рейса!", СтатусСообщения.ОченьВажное);
КонецПроцедуры


