
Функция ppFmExchangePOST(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	ИмяМетода = Запрос.ПараметрыURL.Получить("ИмяМетода");
	ТекстЗапроса = Запрос.ПолучитьТелоКакСтроку();
	
	Попытка
		Если ИмяМетода = "getOrderInfo" Тогда
			ВходныеДанные = РаботаСПВЗФМСервер.ДанныеJSONВСтруктуру(ТекстЗапроса);
			ОтветМетода = РаботаСПВЗФМСервер.ПолучитьИнформациюОЗаказе(ВходныеДанные);
			СтрокаJSON = РаботаСПВЗФМСервер.СформироватьСтрокуJSON(ОтветМетода);
			
			//логирование
			ПараметрыЛога = ВнешнееЛогированиеСервер.ПараметрыЗаписиЛогаСервиса(Справочники.API.PPFM, Справочники.МетодыAPI.getOrderInfo);
			ПараметрыЛога.requestXML = ТекстЗапроса;
			ПараметрыЛога.responseXML = СтрокаJSON;
			
			Попытка
				ПараметрыЛога.isError = ОтветМетода.result.isDone <> Истина;
			Исключение
				ПараметрыЛога.isError = Истина;
			КонецПопытки;
			
			ВнешнееЛогированиеСервер.ЗаписатьСтрокуЛогаСервиса(ПараметрыЛога);
		ИначеЕсли ИмяМетода = "setStatus" Тогда
			ВходныеДанные = РаботаСПВЗФМСервер.ДанныеJSONВСтруктуру(ТекстЗапроса);
			ОтветМетода = РаботаСПВЗФМСервер.УстановитьСтатусЗаказа(ВходныеДанные);
			СтрокаJSON = РаботаСПВЗФМСервер.СформироватьСтрокуJSON(ОтветМетода);
			
			//логирование
			ПараметрыЛога = ВнешнееЛогированиеСервер.ПараметрыЗаписиЛогаСервиса(Справочники.API.PPFM, Справочники.МетодыAPI.setStatus);
			ПараметрыЛога.requestXML = ТекстЗапроса;
			ПараметрыЛога.responseXML = СтрокаJSON;
			
			Попытка
				ПараметрыЛога.isError = ОтветМетода.result.isDone <> Истина;
			Исключение
				ПараметрыЛога.isError = Истина;
			КонецПопытки;
			
			ВнешнееЛогированиеСервер.ЗаписатьСтрокуЛогаСервиса(ПараметрыЛога);
		ИначеЕсли ИмяМетода = "getModifiedOrders" Тогда
			ВходныеДанные = РаботаСПВЗФМСервер.ДанныеJSONВСтруктуру(ТекстЗапроса);
			ОтветМетода = РаботаСПВЗФМСервер.ПолучитьИзмененныеЗаказы(ВходныеДанные);
			СтрокаJSON = РаботаСПВЗФМСервер.СформироватьСтрокуJSON(ОтветМетода);
			
			//логирование
			ПараметрыЛога = ВнешнееЛогированиеСервер.ПараметрыЗаписиЛогаСервиса(Справочники.API.PPFM, Справочники.МетодыAPI.GetModifiedOrders);
			ПараметрыЛога.requestXML = ТекстЗапроса;
			ПараметрыЛога.responseXML = СтрокаJSON;
			
			Попытка
				ПараметрыЛога.isError = ОтветМетода.result.isDone <> Истина;
			Исключение
				ПараметрыЛога.isError = Истина;
			КонецПопытки;
			
			ВнешнееЛогированиеСервер.ЗаписатьСтрокуЛогаСервиса(ПараметрыЛога);
		ИначеЕсли ИмяМетода = "unregistrateOrders" Тогда
			ВходныеДанные = РаботаСПВЗФМСервер.ДанныеJSONВСтруктуру(ТекстЗапроса);
			ОтветМетода = РаботаСПВЗФМСервер.УдалитьРегистрациюЗаказов(ВходныеДанные);
			СтрокаJSON = РаботаСПВЗФМСервер.СформироватьСтрокуJSON(ОтветМетода);
			
			//логирование
			ПараметрыЛога = ВнешнееЛогированиеСервер.ПараметрыЗаписиЛогаСервиса(Справочники.API.PPFM, Справочники.МетодыAPI.unregistrateOrders);
			ПараметрыЛога.requestXML = ТекстЗапроса;
			ПараметрыЛога.responseXML = СтрокаJSON;
			
			Попытка
				ПараметрыЛога.isError = ОтветМетода.result.isDone <> Истина;
			Исключение
				ПараметрыЛога.isError = Истина;
			КонецПопытки;
			
			ВнешнееЛогированиеСервер.ЗаписатьСтрокуЛогаСервиса(ПараметрыЛога);
		КонецЕсли;
		
		Ответ.УстановитьТелоИзСтроки(СтрокаJSON);
	Исключение
		СписокПолучателей = Новый Массив;
		//СписокПолучателей.Добавить("n.stepanov@strizh-logistic.ru");
		СписокПолучателей.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		
		lem.ОтправитьСообщение(СписокПолучателей, "Ошибка при вызове метода ppFmExchange_" + ИмяМетода, ОписаниеОшибки() , , "Логистическая компания ""Стриж""");
	КонецПопытки;
	
	Возврат Ответ;
КонецФункции

