
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТерминалДоставки = ПараметрыСеанса.ТерминалДоставки;
	
	Объект.ТерминалОбработки = ТерминалДоставки;
	Если Объект.ТерминалОбработки.Пустая() Тогда
		Объект.ТерминалОбработки = Справочники.РегиональныеТерминалы.МоскваСтриж;
	КонецЕсли;
	
	УстановитьДатуНаСервере();
	УстановитьПараметрыСписокПоступления();
	УстановитьПараметрыСписокКВозврату();
	УстановитьПараметрыСписокОтслеживаниеВозвратов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДатуНаСервере()
	
	Если Не ЗначениеЗаполнено(ДатаОбработки) Тогда
		ТекДата = ТекущаяДата();
		Если Час(ТекДата) < 8 Тогда
			ДатаОбработки = ТекДата;
		Иначе
			ДатаОбработки = ТекДата + 38400;
		КонецЕсли;
	КонецЕсли;
	
	Объект.ДатаНачала = ДатаОбработки;
	Объект.ДатаОкончания = ДатаОбработки;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыСписокПоступления()
	
	ПараметрыСписка = СписокПоступление.Параметры;
	ПараметрыСписка.УстановитьЗначениеПараметра("НачПериода", Объект.ДатаНачала);
	ПараметрыСписка.УстановитьЗначениеПараметра("КонПериода", КонецДня(Объект.ДатаОкончания));
	ПараметрыСписка.УстановитьЗначениеПараметра("ТерминалДоставки", Объект.ТерминалОбработки);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыСписокКВозврату()
	
	ПараметрыСписка = СписокКВозврату.Параметры;
	ПараметрыСписка.УстановитьЗначениеПараметра("ТерминалДоставки", Объект.ТерминалОбработки);
	ПараметрыСписка.УстановитьЗначениеПараметра("Период", ДобавитьМесяц(НачалоДня(ТекущаяДата()), -6));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыСписокОтслеживаниеВозвратов()
	
	ПараметрыСписка = СписокОтслеживаниеВозвратов.Параметры;
	ПараметрыСписка.УстановитьЗначениеПараметра("ТерминалОбработки", Объект.ТерминалОбработки);
	
КонецПроцедуры

&НаСервере
Процедура ДатаОбработкиПриИзмененииНаСервере()
	
	УстановитьДатуНаСервере();
	УстановитьПараметрыСписокПоступления();
	УстановитьПараметрыСписокКВозврату();
	УстановитьПараметрыСписокОтслеживаниеВозвратов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОбработкиПриИзменении(Элемент)
	ДатаОбработкиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТерминалОбработкиПриИзмененииНаСервере()
	
	УстановитьПараметрыСписокПоступления();
	УстановитьПараметрыСписокКВозврату();
	УстановитьПараметрыСписокОтслеживаниеВозвратов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТерминалОбработкиПриИзменении(Элемент)
	ТерминалОбработкиПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПоступлениеДокументов(Команда)
	
	ТекСтрока = Элементы.СписокПоступление.ТекущиеДанные;
	
	Если ТекСтрока = Неопределено Тогда
		ПоказатьПредупреждение(, "Не выбран Партнер");
		Возврат;
	КонецЕсли;
	
	//Если ТерминалДоставки.Пустая() Тогда
	//	ПоказатьПредупреждение(, "Не определен Терминал доставки (параметр сеанса)");
	//	Возврат;
	//КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Основание", Новый Структура("ТерминалОбработки,Партнер", Объект.ТерминалОбработки, ТекСтрока.Партнер));
	
	ОткрытьФорму("Документ.ПоступлениеСопроводительныхДокументов.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПользовательскиеНастройкиОтчета(Знач ДатаОбработки, Знач ТерминалДоставки)
	
	ПользовательскиеНастройки = Отчеты.СостояниеСопроводительныхДокументов.Создать().КомпоновщикНастроек.ПользовательскиеНастройки;
	
	ТипЗначениеПараметраНастроекКомпоновкиДанных = Тип("ЗначениеПараметраНастроекКомпоновкиДанных");
	
	Для Каждого ПараметрСКД Из ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ПараметрСКД) = ТипЗначениеПараметраНастроекКомпоновкиДанных Тогда
			ИмяПараметра = Строка(ПараметрСКД.Параметр);
			Если ИмяПараметра = "Период" Тогда
				ПараметрСКД.Значение = Новый СтандартныйПериод(ДатаОбработки, КонецДня(ДатаОбработки));
				ПараметрСКД.Использование = Истина;
			ИначеЕсли ИмяПараметра = "ТерминалДоставки" Тогда
				ПараметрСКД.Значение = ТерминалДоставки;
				ПараметрСКД.Использование = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПользовательскиеНастройки;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьСписокЗаказов(Команда)
	
	ТекСтрока = Элементы.СписокПоступление.ТекущиеДанные;
	
	Если ТекСтрока = Неопределено Тогда
		ПоказатьПредупреждение(, "Не выбран Партнер");
		Возврат;
	КонецЕсли;
	
	ПользовательскиеНастройкиОтчета = ПолучитьПользовательскиеНастройкиОтчета(ДатаОбработки, Объект.ТерминалОбработки);
	
	ПараметрыФормы = Новый Структура("ПользовательскиеНастройки,Отбор,СформироватьПриОткрытии", ПользовательскиеНастройкиОтчета, Новый Структура("Партнер", ТекСтрока.Партнер), Истина);
	
	ОткрытьФорму("Отчет.СостояниеСопроводительныхДокументов.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборнаяВедомостьКВозврату(Команда)
	
	ТекСтрока = Элементы.СписокКВозврату.ТекущиеДанные;
	
	Если ТекСтрока = Неопределено Тогда
		ПоказатьПредупреждение(, "Не выбран Партнер");
		Возврат;
	КонецЕсли;
	
	//Если ТерминалДоставки.Пустая() Тогда
	//	ПоказатьПредупреждение(, "Не определен Терминал доставки (параметр сеанса)");
	//	Возврат;
	//КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Основание", Новый Структура("ТерминалОбработки,Партнер", Объект.ТерминалОбработки, ТекСтрока.Партнер));
	
	ОткрытьФорму("Документ.НаборнаяВедомостьВозвратаПриложенныхДокументов.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Элементы.СписокКВозврату.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовленКВозврату(Команда)
	
	Если Элементы.СписокОтслеживаниеВозвратов.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовленКВозвратуНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ОбщаяПроверкаНаборнойВедомости(НаборнаяВедомость)
	
	Результат = ОбщегоНазначения.ПолучитьЗначениеРеквизита(НаборнаяВедомость, "Проведен");
	Если Не Результат Тогда
		Сообщить("Документ должен быть проведен!");
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ПодготовленКВозвратуНаСервере()
	
	НаборнаяВедомость = Элементы.СписокОтслеживаниеВозвратов.ТекущаяСтрока;
	
	Если Не ОбщаяПроверкаНаборнойВедомости(НаборнаяВедомость) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборнаяВедомость", НаборнаяВедомость);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭтапыВозвратаСопроводительныхДокументовСрезПоследних.СтатусСкладскогоУчета.Наименование КАК СтатусСкладскогоУчетаНаименование
	|ИЗ
	|	РегистрСведений.ЭтапыВозвратаСопроводительныхДокументов.СрезПоследних(, ВозвратСопроводительныхДокументов = &НаборнаяВедомость) КАК ЭтапыВозвратаСопроводительныхДокументовСрезПоследних";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Сообщить("По документу уже установлен этап возврата " + Выборка.СтатусСкладскогоУчетаНаименование);
		Возврат;
	КонецЕсли;
	
	ЗаписьРегистра = РегистрыСведений.ЭтапыВозвратаСопроводительныхДокументов.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Период = ТекущаяДата();
	ЗаписьРегистра.ВозвратСопроводительныхДокументов = НаборнаяВедомость;
	ЗаписьРегистра.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПодготовленКВозврату;
	ЗаписьРегистра.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	ЗаписьРегистра.Записать();
	
	Элементы.СписокОтслеживаниеВозвратов.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВозвратОтправлен(Команда)
	
	Если Элементы.СписокОтслеживаниеВозвратов.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	ВозвратОтправленНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВозвратОтправленНаСервере()
	
	НаборнаяВедомость = Элементы.СписокОтслеживаниеВозвратов.ТекущаяСтрока;
	
	Если Не ОбщаяПроверкаНаборнойВедомости(НаборнаяВедомость) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборнаяВедомость", НаборнаяВедомость);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭтапыВозвратаСопроводительныхДокументовСрезПоследних.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ВозвратОтправлен) КАК ВозвратОтправлен,
	|	ЭтапыВозвратаСопроводительныхДокументовСрезПоследних.СтатусСкладскогоУчета.Наименование КАК СтатусСкладскогоУчетаНаименование
	|ИЗ
	|	РегистрСведений.ЭтапыВозвратаСопроводительныхДокументов.СрезПоследних(, ВозвратСопроводительныхДокументов = &НаборнаяВедомость) КАК ЭтапыВозвратаСопроводительныхДокументовСрезПоследних";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Сообщить("Прежде чем возврат может быть отправлен - возврат должен быть переведен в статус ""Подготовлен к возврату""!");
		Возврат;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Если Выборка.ВозвратОтправлен Тогда
			Сообщить("Уже установлен этап возврата " + Выборка.СтатусСкладскогоУчетаНаименование);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаписьРегистра = РегистрыСведений.ЭтапыВозвратаСопроводительныхДокументов.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Период = ТекущаяДата();
	ЗаписьРегистра.ВозвратСопроводительныхДокументов = НаборнаяВедомость;
	ЗаписьРегистра.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ВозвратОтправлен;
	ЗаписьРегистра.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	ЗаписьРегистра.Записать();
	
	Элементы.СписокОтслеживаниеВозвратов.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСпискиНаСервере()
	
	ТекущаяСтраница = Элементы.ГруппаОсновная.ТекущаяСтраница;
	Если ТекущаяСтраница = Элементы.ГруппаПоступление Тогда
		Элементы.СписокПоступление.Обновить();
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаКВозврату Тогда
		Элементы.СписокКВозврату.Обновить();
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаОтслеживаниеВозвратов Тогда
		Элементы.СписокОтслеживаниеВозвратов.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписки(Команда)
	ОбновитьСпискиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаОсновнаяПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ОбновитьСпискиНаСервере();
	
КонецПроцедуры


