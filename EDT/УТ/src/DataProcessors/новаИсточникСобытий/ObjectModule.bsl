#Если Клиент Тогда

Перем КонструкторДанных Экспорт;
Перем ПараметрыЖурнала Экспорт;
Перем Журнал Экспорт;

Перем Архив Экспорт;
Перем Адресат Экспорт;
Перем Владелец Экспорт;

Перем ЖурналНачалоПериода, ЖурналКонецПериода;

Перем соКартинкиВидовСобытий;

Процедура ПриВыводеСтроки(ОформлениеСтроки, ДанныеСтроки) Экспорт
	Если ДанныеСтроки.Группировка <> NULL Тогда
		ОформлениеСтроки.Шрифт = Новый Шрифт(,, Истина);
		Возврат;
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.ВидСобытия.УстановитьКартинку(соКартинкиВидовСобытий[ДанныеСтроки.ВидСобытия]);
КонецПроцедуры

Функция ОбработатьСобытие(Событие, Параметр1 = Неопределено, Параметр2 = Неопределено, Параметр3 = Неопределено) Экспорт
	Если Событие = "Инициализация" Тогда
		Настроить();
		Возврат Истина;
		
	ИначеЕсли Событие = "АктивизированаСтрока" Тогда
		
	ИначеЕсли Событие = "ДобавленыДанныеВДерево" Тогда
		
	ИначеЕсли Событие = "ОкончаниеРедактирования" Тогда
		
	ИначеЕсли Событие = "Выбор" Тогда
		Если ЗначениеЗаполнено(Параметр1.Событие) Тогда
			ОткрытьЗначение(Параметр1.Событие);
			Возврат Истина;
		КонецЕсли;
		
	ИначеЕсли Событие = "УстановленФильтр" Тогда
		Если Параметр1.Свойство("ДатаНачала") Тогда
			ЖурналНачалоПериода = Параметр1.ДатаНачала;
		КонецЕсли;
		Если Параметр1.Свойство("ДатаКонца") Тогда
			ЖурналКонецПериода = Параметр1.ДатаКонца;
		КонецЕсли;
		СформироватьОтбор();
		
	ИначеЕсли Событие = "ИзменениеПараметров" Тогда
		
	ИначеЕсли Событие = "ИспользованиеИнструмента" Тогда
		
		Если Параметр1 = "СоздатьНовоеСообщение" Тогда
			Если ЗначениеЗаполнено(Журнал.ТекущиеДанные) Тогда
				Если ЗначениеЗаполнено(Журнал.ТекущиеДанные.Событие.Автор) Тогда
					обЗадача = Задачи.новаСобытие.СоздатьЗадачу();
					обЗадача.Основание = Журнал.ТекущиеДанные.Событие;
					обЗадача.Владелец = Владелец;
					обЗадача.Проект = Владелец.Проект;
					обЗадача.Адресат = Журнал.ТекущиеДанные.Событие.Автор;
					обЗадача.ВидСобытия = Перечисления.новаВидыСобытий.Сообщение;
					ОткрытьЗначение(обЗадача);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
КонецФункции

Процедура СформироватьОтбор()
	Отбор = "";
	
	Если Архив Тогда
		КонструкторДанных.ДобавитьПараметр("ЖурналНачалоПериода", ЖурналНачалоПериода);
		КонструкторДанных.ДобавитьПараметр("ЖурналКонецПериода", ЖурналКонецПериода);
		
		Если ЗначениеЗаполнено(ЖурналНачалоПериода) И ЗначениеЗаполнено(ЖурналКонецПериода) Тогда
			Отбор = "(Задача.Дата МЕЖДУ &ЖурналНачалоПериода И &ЖурналКонецПериода)";
			
		ИначеЕсли ЗначениеЗаполнено(ЖурналНачалоПериода) И Не ЗначениеЗаполнено(ЖурналКонецПериода) Тогда
			Отбор = "Задача.Дата >= &ЖурналНачалоПериода";
			
		ИначеЕсли ЗначениеЗаполнено(ЖурналКонецПериода) И Не ЗначениеЗаполнено(ЖурналНачалоПериода) Тогда
			Отбор = "Задача.Дата <= &ЖурналКонецПериода";
			
		КонецЕсли;
	КонецЕсли;
	
	КонструкторДанных.ПостоянныйОтбор = Отбор;
КонецПроцедуры

Процедура Настроить()
	мсИнструменты = Новый Массив;
	ПараметрыЖурнала = Новый Структура("Инструменты", мсИнструменты);

	мсИнструменты.Добавить(Новый Структура("Имя, Картинка, Текст, Подсказка", "СоздатьНовоеСообщение", БиблиотекаКартинок.ДобавитьЭлементСписка, "Новое сообщение", "Создать новое сообщение"));
	
	КонструкторДанных = новаЖурналы.НовыйКонструкторЗапроса();
	
	СформироватьОтбор();
	
	Если Архив Тогда
		КонструкторДанных.ТекстЗапроса = "
		|Задача.новаСобытие КАК События
		|
		|{СОЕДИНЕНИЯ}
		|";
	Иначе
		Если ЗначениеЗаполнено(Адресат) Тогда
			КонструкторДанных.ТекстЗапроса = "
			|Задача.новаСобытие.ЗадачиПоИсполнителю(&Адресат, НЕ Выполнена) КАК События
			|
			|{СОЕДИНЕНИЯ}
			|";
			
			КонструкторДанных.ДобавитьПараметр("Адресат", Адресат);
		Иначе
			КонструкторДанных.ТекстЗапроса = "
			|(ВЫБРАТЬ
			|	События.Ссылка КАК Ссылка,
			|	События.Основание КАК Основание,
			|	События.Владелец КАК Владелец,
			|	События.ВидСобытия КАК ВидСобытия
			|	{ВЫБОРКА_ПОДЗАПРОСА}
			|ИЗ
			|
			|Задача.новаСобытие КАК События
			|
			|ГДЕ
			|	События.Владелец = &Владелец
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	События.Ссылка КАК Ссылка,
			|	События.Этап КАК Основание,
			|	События.Этап КАК Владелец,
			|	События.Состояние КАК ВидСобытия
			|	{ВЫБОРКА_ПОДЗАПРОСА_МЕСТНАЯ_ДОСТАВКА}
			|
			|ИЗ
			|
			|Документ.новаЭтапПеревозкиМестнаяДоставкаВыполнение КАК События
			|
			|ГДЕ
			|	События.Этап = &Владелец
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	События.Ссылка КАК Ссылка,
			|	События.Этап КАК Основание,
			|	События.Этап КАК Владелец,
			|	События.Состояние КАК ВидСобытия
			|	{ВЫБОРКА_ПОДЗАПРОСА_МЕСТНАЯ_ДОСТАВКА}
			|
			|ИЗ
			|
			|Документ.новаЭтапПеревозкиЭкспедированиеВыполнение КАК События
			|
			|ГДЕ
			|	События.Этап = &Владелец
			|
			|) КАК События
			|
			|{СОЕДИНЕНИЯ}
			|";
			
			КонструкторДанных.ДобавитьПараметр("Владелец", Владелец);
		КонецЕсли;
	КонецЕсли;
	
	КонструкторДанных.ПостояннаяВыборка = ",
	|	События.Ссылка КАК Событие,
	|	События.Основание КАК Основание,
	|	События.Владелец КАК Этап,
	|	Представление(События.Владелец) КАК Этап_Пред,
	|	События.ВидСобытия КАК ВидСобытия
	|";
	
	КонструкторДанных.ДобавитьПоле("Дата");
	КонструкторДанных.ДобавитьВыборкуПоля(, "События.Дата");
	КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА", "События.Дата");
	КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА_МЕСТНАЯ_ДОСТАВКА", "События.Дата");
	КонструкторДанных.ДобавитьСортировкуПоля("События.Дата");
	
	КонструкторДанных.ДобавитьПоле("Автор");
	КонструкторДанных.ДобавитьВыборкуПоля(, "События.Автор");
	КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА", "События.Автор");
	КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА_МЕСТНАЯ_ДОСТАВКА", "События.Автор");
	КонструкторДанных.ДобавитьСортировкуПоля("События.Автор.Наименование");
	
	КонструкторДанных.ДобавитьПоле("ВидСобытия");
	
	КонструкторДанных.ДобавитьПоле("Тема");
	КонструкторДанных.ДобавитьВыборкуПоля(, "События.Наименование");
	КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА", "События.Наименование", "Наименование");
	КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА_МЕСТНАЯ_ДОСТАВКА", "NULL", "Наименование");
	
	КонструкторДанных.ДобавитьПоле("Комментарий");
	КонструкторДанных.ДобавитьВыборкуПоля(, "События.Комментарий");
	КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА", "События.Комментарий");
	КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА_МЕСТНАЯ_ДОСТАВКА", "События.Комментарий");
	
	КонструкторДанных.ДобавитьПоле("Проект");
	КонструкторДанных.ДобавитьВыборкуПоля(, "События.Проект");
	КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА", "События.Проект");
	КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА_МЕСТНАЯ_ДОСТАВКА", "События.Этап.Проект");
	
	КонструкторДанных.ДобавитьПоле("Этап");
	//КонструкторДанных.ДобавитьВыборкуПоля(, "События.Владелец");
	//КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА", "События.Владелец", "Владелец");
	//КонструкторДанных.ДобавитьВыборкуПоля("ВЫБОРКА_ПОДЗАПРОСА_МЕСТНАЯ_ДОСТАВКА", "События.Этап", "Владелец");
	
	
	КонструкторДанных.ДобавитьДоступнуюГруппировку("Проект");
	КонструкторДанных.ДобавитьДоступнуюГруппировку("Этап");
	
	КонструкторДанных.Ключи.Вставить(NULL, Новый Структура("Событие"));

	КонструкторДанных.СформироватьКолонки();
КонецПроцедуры

соКартинкиВидовСобытий = Новый Соответствие;
соКартинкиВидовСобытий.Вставить(Перечисления.новаВидыСобытий.Сообщение, БиблиотекаКартинок.новаСообщение);
соКартинкиВидовСобытий.Вставить(Перечисления.новаВидыСобытий.КонтрольнаяДата, БиблиотекаКартинок.новаКонтрольнаяДата);

Архив = Ложь;
#КонецЕсли