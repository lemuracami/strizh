#Если Клиент Тогда

Перем ЭтаФорма;

//Точка входа переноса данных
//
Процедура ЗаполнитьБазуКСЛ(Форма) Экспорт
	
	ЭтаФорма = Форма;
	
	ЭтаФорма.ЭлементыФормы.КартинкаТочкиДоставки.Доступность = Истина;
	ЭтаФорма.ЭлементыФормы.НадписьТочкиДоставки.Доступность = Истина;
	ЗагрузитьТочкиДоставкиНаСервер();
	
	ЭтаФорма.ЭлементыФормы.КартинкаГеорайоны.Доступность = Истина;
	ЭтаФорма.ЭлементыФормы.НадписьГеоРайоны.Доступность = Истина;
	ЗагрузитьГеоРайоныНаСервер();
	
	ЭтаФорма.ЭлементыФормы.КартинкаТранспорт.Доступность = Истина;
	ЭтаФорма.ЭлементыФормы.НадписьТранспорт.Доступность = Истина;
	ЗагрузитьТранспортНаСервер();
	
	ЭтаФорма.ЭлементыФормы.КартинкаТерминалы.Доступность = Истина;
	ЭтаФорма.ЭлементыФормы.НадписьТерминалы.Доступность = Истина;
	ЗагрузитьТерминалыНаСервер();
	
	ЗагрузитьНастройкиТерминаловНаСервер();
	
	ЭтаФорма.ЭлементыФормы.КартинкаКонтрагенты.Доступность = Истина;
	ЭтаФорма.ЭлементыФормы.НадписьКонтрагенты.Доступность = Истина;
	ЗагрузитьКонтрагентовНаСервер();
	
	ЭтаФорма.ЭлементыФормы.КартинкаДоставки.Доступность = Истина;
	ЭтаФорма.ЭлементыФормы.НадписьДоставки.Доступность = Истина;
	ЗагрузитьДоставкиНаСервер();
	
	ЭтаФорма.ЭлементыФормы.КартинкаАдресов.Доступность = Истина;
	ЭтаФорма.ЭлементыФормы.НадписьАдреса.Доступность = Истина;
	ЗагрузитьАдресаНаСервер();
	
	ЭтаФорма.ЭлементыФормы.КартинкаВодители.Доступность = Истина;
	ЭтаФорма.ЭлементыФормы.НадписьВодители.Доступность = Истина;
	ЗагрузитьВодителейНаСервер();
	
	ЗагрузитьСообщенияАРМВодителяНаСервер();
	
	ЭтаФорма.ЭлементыФормы.КартинкаСклады.Доступность = Истина;
	ЭтаФорма.ЭлементыФормы.НадписьСклады.Доступность = Истина;
	ЗагрузитьСкладыНаСервер();
	
	Если ПеренестиНастройкиКарт Тогда
		НастроитьКарты();
	КонецЕсли;	
	
КонецПроцедуры

//Точки доставки
//
Процедура ЗагрузитьТочкиДоставкиНаСервер() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ссылка,	
	|	Код,
	|	Наименование,
	|	ПометкаУдаления,
	|	Радиус,
	|	Адрес.Широта КАК Широта,
	|	Адрес.Долгота КАК Долгота
	|ИЗ
	|	Справочник.новаТочкиДоставки
	|";
	
	КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	
	Точки = Запрос.Выполнить().Выбрать();
	ъ = Точки.Количество();
	Количество = ъ;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = ъ;
	Пока Точки.Следующий() Цикл
		Состояние("Точки доставки " + Строка(ъ));
		ъ = ъ - 1;
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ъ);
		
		ТочкаДоставки = КСЛ.Геоинформация_ТочкиДоставки_ТочкаДоставки();
		ТочкаДоставки.Ид = СокрЛП(Точки.Ссылка.УникальныйИдентификатор());
		ТочкаДоставки.Код = Точки.Код;
		ТочкаДоставки.Наименование = Точки.Наименование;
		ТочкаДоставки.Радиус = Точки.Радиус;
		ТочкаДоставки.Координаты.Широта = ?(Точки.Широта = NULL,0,Точки.Широта);
		ТочкаДоставки.Координаты.Долгота = ?(Точки.Долгота = NULL,0,Точки.Долгота);
		
		ТочкаДоставки.Сохранить();
	КонецЦикла;
	
КонецПроцедуры

//Георайоны
//
Процедура ЗагрузитьГеоРайоныНаСервер() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ссылка	
	|ИЗ
	|	Справочник.новаГеоРайоны
	|";
	
	КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	
	ГеоРайоны = Запрос.Выполнить().Выбрать();
	ъ = ГеоРайоны.Количество();
	Количество = ъ;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = ъ;
	Пока ГеоРайоны.Следующий() Цикл
		Состояние("Гео районы " + Строка(ъ));
		ъ = ъ - 1;
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ъ);
		
		новаОбменКСЛ.СохранитьГеоРайон(ГеоРайоны.Ссылка.ПолучитьОбъект());
	КонецЦикла;
	
КонецПроцедуры

//Транспорт
//
Процедура ЗагрузитьТранспортНаСервер() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ссылка	
	|ИЗ
	|	Справочник.новаТранспорт
	|";
	
	КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	
	Транспорт = Запрос.Выполнить().Выбрать();
	ъ = Транспорт.Количество();
	Количество = ъ;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = ъ;
	Пока Транспорт.Следующий() Цикл
		Состояние("Транспорт " + Строка(ъ));
		ъ = ъ - 1;
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ъ);
		
		новаОбменКСЛ.СохранитьТранспорт(Транспорт.Ссылка.ПолучитьОбъект());
	КонецЦикла;
	
КонецПроцедуры

//Терминалы
//
Процедура ЗагрузитьТерминалыНаСервер() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ссылка	
	|ИЗ
	|	Справочник.новаТерминалы
	|";
	
	КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	
	Терминалы = Запрос.Выполнить().Выбрать();
	ъ = Терминалы.Количество();
	Количество = ъ;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = ъ;
	Пока Терминалы.Следующий() Цикл
		Состояние("Терминалы " + Строка(ъ));
		ъ = ъ - 1;
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ъ);
		
		новаОбменКСЛ.СохранитьТерминал(Терминалы.Ссылка.ПолучитьОбъект());
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ссылка	
	|ИЗ
	|	Документ.новаРасположениеТерминала
	|";
	
	КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	
	Расположение = Запрос.Выполнить().Выбрать();
	ъ = Расположение.Количество();
	Количество = ъ;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = ъ;
	Пока Расположение.Следующий() Цикл
		Состояние("Расположение терминала " + Строка(ъ));
		ъ = ъ - 1;
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ъ);
		
		новаОбменКСЛ.СохранитьРасположениеТерминала(Расположение.Ссылка.ПолучитьОбъект());
	КонецЦикла;
	
КонецПроцедуры

//Настройки терминалов
//
Процедура ЗагрузитьНастройкиТерминаловНаСервер() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|    Ссылка	
	|  ИЗ
	|    Справочник.новаНастройкиТерминалов
	|";
	
	КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	
	НастройкиТерминалов = Запрос.Выполнить().Выбрать();
	ъ = НастройкиТерминалов.Количество();
	Количество = ъ;
	Пока НастройкиТерминалов.Следующий() Цикл
		Состояние("Настройки терминалов " + Строка(ъ));
		ъ = ъ - 1;
		
		новаОбменКСЛ.СохранитьНастройкиТерминала(НастройкиТерминалов.Ссылка.ПолучитьОбъект());
	КонецЦикла;
	
КонецПроцедуры

//Доставки
//
Процедура ЗагрузитьДоставкиНаСервер() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ссылка	
	|ИЗ
	|	БизнесПроцесс.новаМестнаяДоставка
	|";
	
	КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	
	Доставки = Запрос.Выполнить().Выбрать();
	ъ = Доставки.Количество();
	Количество = ъ;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = ъ;
	Пока Доставки.Следующий() Цикл
		Состояние("Доставка " + Строка(ъ));
		ъ = ъ - 1;
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ъ);
		
		новаОбменКСЛ.СохранитьДоставку(Доставки.Ссылка.ПолучитьОбъект());
	КонецЦикла;
	
КонецПроцедуры

//Контрагенты
//
Процедура ЗагрузитьКонтрагентовНаСервер() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ссылка	
	|ИЗ
	|	Справочник.новаКонтрагенты
	|";
	
	КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	
	Контрагенты = Запрос.Выполнить().Выбрать();
	ъ = Контрагенты.Количество();
	Количество = ъ;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = ъ;
	Пока Контрагенты.Следующий() Цикл
		Состояние("Контрагент " + Строка(ъ));
		ъ = ъ - 1;
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ъ);
		
		новаОбменКСЛ.СохранитьКонтрагента(Контрагенты.Ссылка.ПолучитьОбъект());
	КонецЦикла;
	
КонецПроцедуры

//Адреса
//
Процедура ЗагрузитьАдресаНаСервер() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|    Ссылка
	|    ,""Адрес"" КАК Тип
	|  ИЗ
	|    Справочник.новаАдреса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|    Ссылка
	|    ,""НаселенныйПункт""
	|  ИЗ
	|	Справочник.новаНаселенныеПункты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|    Ссылка
	|    ,""Регион""
	|  ИЗ
	|    Справочник.новаРегионы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|    Ссылка
	|    ,""Улица""
	|  ИЗ
	|    Справочник.новаУлицы
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Количество = Выборка.Количество();
	ОсталосьАдресов = Количество;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = Количество;
	Пока Выборка.Следующий() Цикл
		
		Состояние("Адрес " + ОсталосьАдресов);
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ОсталосьАдресов);
		
		ОсталосьАдресов = ОсталосьАдресов - 1;
		
		Если Выборка.Тип = "Адрес" Тогда
			новаОбменКСЛ.СохранитьАдрес(Выборка.Ссылка.ПолучитьОбъект());
		ИначеЕсли Выборка.Тип = "НаселенныйПункт" Тогда
			новаОбменКСЛ.СохранитьНаселенныйПункт(Выборка.Ссылка.ПолучитьОбъект());
		ИначеЕсли Выборка.Тип = "Регион" Тогда
			новаОбменКСЛ.СохранитьРегион(Выборка.Ссылка.ПолучитьОбъект());
		ИначеЕсли Выборка.Тип = "Улица" Тогда
			новаОбменКСЛ.СохранитьУлицу(Выборка.Ссылка.ПолучитьОбъект());
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//Водители
//
Процедура ЗагрузитьВодителейНаСервер() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|    Ссылка
	|  ИЗ
	|    Справочник.новаВодители
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Количество = Выборка.Количество();
	ОстатокВодителей = Количество;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = Количество;
	Пока Выборка.Следующий() Цикл
		
		Состояние("Водитель " + ОстатокВодителей);
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ОстатокВодителей);
		
		ОстатокВодителей = ОстатокВодителей - 1;
		
		новаОбменКСЛ.СохранитьВодителя(Выборка.Ссылка.ПолучитьОбъект());
	КонецЦикла;
	
КонецПроцедуры

//Сообщения АРМ водителя
//
Процедура ЗагрузитьСообщенияАРМВодителяНаСервер() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|    Ссылка
	|  ИЗ
	|    Справочник.новаСообщенияАРМВодителя
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Количество = Выборка.Количество();
	ОстатокВодителей = Количество;
	Пока Выборка.Следующий() Цикл
		
		Состояние("Сообщения АРМ водителя " + ОстатокВодителей);
		
		ОстатокВодителей = ОстатокВодителей - 1;
		
		новаОбменКСЛ.СохранитьСообщениеАРМВодителя(Выборка.Ссылка.ПолучитьОбъект());
	КонецЦикла;
	
КонецПроцедуры

//Склады
//
Процедура ЗагрузитьСкладыНаСервер() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|    Ссылка
	|  ИЗ
	|    Справочник.новаСклады
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Количество = Выборка.Количество();
	ОстатокСкладов = Количество;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = Количество;
	Пока Выборка.Следующий() Цикл
		
		Состояние("Контрагент " + ОстатокСкладов);
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ОстатокСкладов);
		
		ОстатокСкладов = ОстатокСкладов - 1;
		
		новаОбменКСЛ.СохранитьСклад(Выборка.Ссылка.ПолучитьОбъект());
	КонецЦикла;
	
КонецПроцедуры

//Удаление терминалов и транспорта
//
Процедура ОчиститьДанные() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ссылка	
	|ИЗ
	|	Справочник.новаТерминалы
	|";
	
	КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	
	Терминалы = Запрос.Выполнить().Выбрать();
	ъ = Терминалы.Количество();
	Количество = ъ;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = ъ;
	Пока Терминалы.Следующий() Цикл
		Состояние("Терминалы " + Строка(ъ));
		ъ = ъ - 1;
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ъ);
		
		обТерминал = Терминалы.Ссылка.ПолучитьОбъект();
		
		Если СокрЛП(обТерминал.Код) <> "" Тогда Продолжить; КонецЕсли;
		
		обТерминал.Удалить();
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ссылка	
	|ИЗ
	|	Справочник.новаТранспорт
	|";
	
	КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	
	Транспорт = Запрос.Выполнить().Выбрать();
	ъ = Транспорт.Количество();
	Количество = ъ;
	ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.МаксимальноеЗначение = ъ;
	Пока Транспорт.Следующий() Цикл
		Состояние("Транспорт " + Строка(ъ));
		ъ = ъ - 1;
		ЭтаФорма.ЭлементыФормы.ИндикаторПроцесса.Значение = (Количество - ъ);
		
		обТранспорт = Транспорт.Ссылка.ПолучитьОбъект();
		
		Если СокрЛП(обТранспорт.Код) <> "" Тогда Продолжить; КонецЕсли;
		
		обТранспорт.Удалить();
	КонецЦикла;
	
	Выборка = Документы.новаРасположениеТерминала.Выбрать();
	Пока Выборка.Следующий() Цикл
		обДок = Выборка.Ссылка.ПолучитьОбъект();
		обДок.Удалить();
	КонецЦикла;
	
КонецПроцедуры

//Настройки карт
//
Процедура НастроитьКарты() Экспорт	
	
	ПеренестиКонфигурациюКарт(Константы.новаОсновнаяКонфигурацияКарт.Получить());
	
КонецПроцедуры

//Перенос настроек карт
//
Процедура ПеренестиКонфигурациюКарт(КонфигурацияКарт)
	
	Если Не ЗначениеЗаполнено(КонфигурацияКарт) Тогда Возврат; КонецЕсли;
	
	Состояние("Перенос конфигурации карт: " + СокрЛП(КонфигурацияКарт));
	
	КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	
	Для Каждого Карта Из КонфигурацияКарт.Карты Цикл
		Если Карта.Драйвер = "новаДрайверКартыCityGuide" Тогда
			Настройка = Карта.Настройка.Получить();
			Если Настройка = Неопределено Тогда Продолжить; КонецЕсли;
			
			Служба = КСЛ.Клиент_КлиентУТЛ.ПолучитьКартографическуюСлужбу("КартографическаяСлужбаCityGuide");
			
			НастройкаКартКСЛ = КСЛ.Карты_НастройкаКартографическойСлужбы();
			ФайлыКартКСЛ = НастройкаКартКСЛ.ОтображаемыеКарты;
			
			Для Каждого стрКарта Из Настройка.Карты Цикл
				ФайлКартыКСЛ = КСЛ.Карты_НастройкаКартографическойСлужбы_ФайлКарты();
				ФайлКартыКСЛ.ИмяФайла = стрКарта.ИмяФайла;
				
				ФайлыКартКСЛ.Добавить(ФайлКартыКСЛ);
			КонецЦикла;
			
			Служба.ОбновитьНастройку(НастройкаКартКСЛ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли
