
Функция НайтиДоставку(Номер)
	Если ЗначениеЗаполнено(Номер) Тогда
		Возврат БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Формат(Номер, "ЧГ="));
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция НайтиЗабор(Номер)
	Если ЗначениеЗаполнено(Номер) Тогда
		Возврат Документы.ЗаборТовара.НайтиПоНомеру(Формат(Номер, "ЧГ="));
	КонецЕсли;
	Возврат Неопределено;
КонецФункции


Функция Сравнить(Таб, ЗаписыватьВБазуРезультаты = Ложь) Экспорт
	
	// заказы
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Задачи.БизнесПроцесс.Доставка.Номер КАК Доставка
	|ИЗ
	|	Задача.новаЗадачаМестнойДоставки.ЗадачиПоИсполнителю(
	|			,
	|			НЕ Выполнена
	|				И (ВЫРАЗИТЬ(БизнесПроцесс КАК БизнесПроцесс.новаПланированиеМестнойДоставки).Доставка.ВремяОтправленияС МЕЖДУ &НачалоПериода И &КонецПериода
	|					ИЛИ ВЫРАЗИТЬ(БизнесПроцесс КАК БизнесПроцесс.новаЗавершениеМестнойДоставки).Доставка.ВремяОтправленияС МЕЖДУ &НачалоПериода И &КонецПериода)) КАК Задачи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО Задачи.БизнесПроцесс.Доставка.Номер = РеализацияТоваровУслуг.Номер
	|ГДЕ
	|	РеализацияТоваровУслуг.ВладелецТовара.Код <> ""Shop_179""
	|	И РеализацияТоваровУслуг.СтатусИнтернетМагазина = 2
	|	И РеализацияТоваровУслуг.ТерминалДоставки = &ТерминалДоставки";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ДатаДоставки));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ДатаДоставки));
	Запрос.УстановитьПараметр("ТерминалДоставки", Терминал);
	Выборка = Запрос.Выполнить().Выбрать();
	СписокДоставок = "";
	Пока Выборка.Следующий() Цикл
		СписокДоставок = СписокДоставок + Выборка.Доставка + ",";
	КонецЦикла;
	
	Подключение = Евген.СоздатьПодключениеКИнтернетМагазину();
	Попытка
		Выборка = Евген.ЗапросКИнтернетМагазину("
		|SELECT
		|	ListSQL.orderId AS InSQL,
		|	List1C.orderId AS In1C
		|FROM
		|	(SELECT
		|		orderId
		|	FROM
		|		mv_orders R (NOLOCK)
		|INNER JOIN
		|	settings     S (NOLOCK) ON S.shopId = R.SettingID
		|	WHERE 
		|		deliveryDate BETWEEN '" + Евген.ДатаВSQL(НачалоДня(ДатаДоставки), Ложь)+ "' AND '" + Евген.ДатаВSQL(КонецДня(ДатаДоставки), Истина)+ "'
		|		AND status = 2
		|		AND ISNULL(selfDelivery, 0) = 0
		|		AND ISNULL(serviceDelivery,0) IN (0, 1) 
		// Михушкин - 01.06.2017 - разделение по терминалам --->> 
		//|		AND ISNULL(deliveryPlaceId,0) IN (0, 1)
		|		AND ISNULL(deliveryPlaceId,0) IN (" + ?(Терминал = Справочники.РегиональныеТерминалы.МоскваСтриж, "0, ", "") + Терминал.Код + ")
		// <<--- Михушкин  
		|		AND S.internetShopID <> 179
		|	) AS ListSQL
		|FULL JOIN
		|	(SELECT
		|		orderId
		|	FROM
		|		_order R (NOLOCK)
		|	WHERE 
		|		orderId IN (" + Лев(СписокДоставок, СтрДлина(СписокДоставок) - 1) + ")
		|	) AS List1C
		|	ON ListSQL.orderId = List1C.orderId
		|WHERE
		|	ListSQL.orderId IS NULL OR
		|	List1C.orderId IS NULL
		|ORDER BY
		|	ListSQL.orderId,
		|	List1C.orderId
		|", Подключение);
		СписокРазличий = Евген.СоздатьТаблицу(Выборка, "InSQL_Ч, In1C_Ч");
	Исключение
		
		Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
		
		Возврат ОписаниеОшибки();
	КонецПопытки;
	// конец заказы
	
	
	
	// заборы
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаборТовара.Номер КАК Доставка
	|ИЗ
	|	Документ.ЗаборТовара КАК ЗаборТовара
	|ГДЕ
	|	ЗаборТовара.СтатусИнтернетМагазина = 2
	|	И ЗаборТовара.ТерминалДоставки = &ТерминалДоставки
	|	И ЗаборТовара.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ЗаборТовара.Контрагент.Код <> ""Shop_179""";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ДатаДоставки));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ДатаДоставки));
	Запрос.УстановитьПараметр("ТерминалДоставки", Терминал);
	Выборка = Запрос.Выполнить().Выбрать();
	СписокДоставок = "";
	Пока Выборка.Следующий() Цикл
		СписокДоставок = СписокДоставок + Выборка.Доставка + ",";
	КонецЦикла;
	
	ЕстьЗаборы = Ложь;
	Если СокрЛП(СписокДоставок) <> "" Тогда
		ЕстьЗаборы = Истина;
	КонецеСли;	
	
	
	Если ЕстьЗаборы Тогда
		Попытка
			Выборка = Евген.ЗапросКИнтернетМагазину("
			|SELECT
			|	ListSQL.orderId AS InSQL,
			|	List1C.orderId AS In1C
			|FROM
			|	(SELECT
			|		orderId
			|	FROM
			|		mv_orders R (NOLOCK)
			|INNER JOIN
			|	settings     S (NOLOCK) ON S.shopId = R.SettingID
			|	WHERE 
			|		deliveryDate BETWEEN '" + Евген.ДатаВSQL(НачалоДня(ДатаДоставки), Ложь)+ "' AND '" + Евген.ДатаВSQL(КонецДня(ДатаДоставки), Истина)+ "'
			|		AND status = 2
			|		AND ISNULL(selfDelivery, 0) = 2
			|		AND ISNULL(serviceDelivery,0) IN (0, 1) 
			// Михушкин - 01.06.2017 - разделение по терминалам --->>
			//|		AND ISNULL(deliveryPlaceId,0) IN (0, 1) 
			|		AND ISNULL(deliveryPlaceId,0) IN (" + ?(Терминал = Справочники.РегиональныеТерминалы.МоскваСтриж, "0, ", "") + Терминал.Код + ")
			// <<--- Михушкин
			|		AND S.internetShopID <> 179
			|	) AS ListSQL
			|FULL JOIN
			|	(SELECT
			|		orderId
			|	FROM
			|		_order R (NOLOCK)
			|	WHERE 
			|		orderId IN (" + Лев(СписокДоставок, СтрДлина(СписокДоставок) - 1) + ")
			|	) AS List1C
			|	ON ListSQL.orderId = List1C.orderId
			|WHERE
			|	ListSQL.orderId IS NULL OR
			|	List1C.orderId IS NULL
			|ORDER BY
			|	ListSQL.orderId,
			|	List1C.orderId
			|", Подключение);
			СписокРазличийЗаборы = Евген.СоздатьТаблицу(Выборка, "InSQL_Ч, In1C_Ч");
		Исключение
			
			Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
			
			Возврат ОписаниеОшибки();
		КонецПопытки;
	КонецеСли;
// конец заборы	
	
	
	
	Если Таб <> Неопределено Тогда
		Таб.Очистить();
		
		Макет = ПолучитьМакет("Макет");
		
		Таб.Вывести(Макет.ПолучитьОбласть("Шапка"));
		ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
		ОбластьЗаголовка = Макет.ПолучитьОбласть("ТипЗаказа");
		
		
		ОбластьЗаголовка.Параметры.ТипЗаказа = "ЗАКАЗЫ";
		Таб.Вывести(ОбластьЗаголовка);
		
		Для Каждого стр Из СписокРазличий Цикл
			ОбластьСтроки.Параметры.Расшифровка1С = НайтиДоставку(стр.In1C_Ч);
			ОбластьСтроки.Параметры.РасшифровкаSQL = НайтиДоставку(стр.InSQL_Ч);
			ОбластьСтроки.Параметры.Заполнить(стр);
			Таб.Вывести(ОбластьСтроки);
			
		КонецЦикла;
		
		//заборы
		Если ЕстьЗаборы Тогда
			ОбластьЗаголовка.Параметры.ТипЗаказа = "ЗАБОРЫ";
			Таб.Вывести(ОбластьЗаголовка);
			
			Для Каждого стр Из СписокРазличийЗаборы Цикл
				ОбластьСтроки.Параметры.Расшифровка1С = НайтиЗабор(стр.In1C_Ч);
				ОбластьСтроки.Параметры.РасшифровкаSQL = НайтиЗабор(стр.InSQL_Ч);
				ОбластьСтроки.Параметры.Заполнить(стр);
				Таб.Вывести(ОбластьСтроки);
				
			КонецЦикла;
		КонецеСли;
		Таб.ТолькоПросмотр = Истина;
	ИначеЕсли ЗаписыватьВБазуРезультаты Тогда
		ДатаТ = ТекущаяДата();
		
		Наб = РегистрыСведений.Различия1сИАдминки.СоздатьНаборЗаписей();
		Наб.Отбор.Период.Установить(ДатаТ);
		
		Для Каждого стр Из СписокРазличий Цикл
			Нов = Наб.Добавить();
			Нов.Период = ДатаТ;
			Если ЗначениеЗаполнено(СокрЛП(стр.In1C_Ч)) Тогда
				Нов.ГдеОтсутствует = Перечисления.ИнформационныеСистемы.Админка;
				Ном = СокрЛП(стр.In1C_Ч);
			Иначе
				Нов.ГдеОтсутствует = Перечисления.ИнформационныеСистемы.ОдинС;
				Ном = СокрЛП(стр.InSQL_Ч);
			КонецеСли;	
			Нов.НомерЗаказа = Ном;			
		КонецЦикла;
		
		Если ЕстьЗаборы Тогда
			Для Каждого стр Из СписокРазличийЗаборы Цикл
				Нов = Наб.Добавить();
				Нов.Период = ДатаТ;
				Если ЗначениеЗаполнено(СокрЛП(стр.In1C_Ч)) Тогда
					Нов.ГдеОтсутствует = Перечисления.ИнформационныеСистемы.Админка;
					Ном = СокрЛП(стр.In1C_Ч);
				Иначе
					Нов.ГдеОтсутствует = Перечисления.ИнформационныеСистемы.ОдинС;
					Ном = СокрЛП(стр.InSQL_Ч);
				КонецеСли;	
				Нов.НомерЗаказа = Ном;			
			КонецЦикла;
		КонецеСли;
		Наб.Записать();
	КонецеСли;
КонецФункции	