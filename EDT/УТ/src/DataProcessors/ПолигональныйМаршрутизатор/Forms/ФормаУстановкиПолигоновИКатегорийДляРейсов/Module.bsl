&НаКлиенте
Перем ДанныеОповещения;


&НаСервереБезКонтекста
Функция ПолучитьТекстОсновногоЗапроса(УстановкаПолигоновСУчетомКатегорийТранспорта)
		Если Не УстановкаПолигоновСУчетомКатегорийТранспорта Тогда
		Возврат "ВЫБРАТЬ
		        |	ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.Заказ КАК Заказ
		        |ПОМЕСТИТЬ ВТ_ИндивидуальнаяМаршрутизация
		        |ИЗ
		        |	РегистрСведений.ИндивидуальнаяМаршрутизацияПоРейсам.СрезПоследних(, ДатаПланирования = &ДатаНач) КАК ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних
		        |ГДЕ
		        |	ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.Рейс.Ссылка <> ЗНАЧЕНИЕ(Документ.Рейс.пустаяСсылка)
		        |;
				//Асеев 29.08.2023 (Задача № 5117)>>>
		        |////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВложенныйЗапрос.Ссылка КАК Ссылка
				|ПОМЕСТИТЬ ВТ_РТУ
				|ИЗ
				|	(ВЫБРАТЬ
				|		РеализацияТоваровУслуг.Ссылка КАК Ссылка
				|	ИЗ
				|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
				|	ГДЕ
				|		РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон
				|		И РеализацияТоваровУслуг.СтатусИнтернетМагазина = 2
				|		И РеализацияТоваровУслуг.ТерминалДоставки = &ТерминалДоставки
				|		И НЕ РеализацияТоваровУслуг.ПометкаУдаления
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		СтатусыПредварительногоЗакрытияРейсовСрезПоследних.Заказ
				|	ИЗ
				|		РегистрСведений.СтатусыПредварительногоЗакрытияРейсов.СрезПоследних КАК СтатусыПредварительногоЗакрытияРейсовСрезПоследних
				|	ГДЕ
				|		СтатусыПредварительногоЗакрытияРейсовСрезПоследних.ДатаДоставкиЗаказа = &ДатаНач
				|		И СтатусыПредварительногоЗакрытияРейсовСрезПоследних.СтатусПредварительногоЗакрытияРейса = ЗНАЧЕНИЕ(Перечисление.СтатусыПредварительногоЗакрытияРейсов.РейсЗакрытПредварительно)
				|		И СтатусыПредварительногоЗакрытияРейсовСрезПоследних.Заказ.ТерминалДоставки = &ТерминалДоставки) КАК ВложенныйЗапрос
				|;
				//Асеев 29.08.2023 (Задача № 5117)<<<
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ВТ_РТУ.Ссылка КАК Заказ,
		        |	ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка) КАК ТипЗаказа,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ЛогистическийБрейк, ИСТИНА) = ИСТИНА
		        |			ТОГДА 1
		        |		КОГДА ДополнительныеПараметрыЗаказа.ЛогистическийБрейк = ЗНАЧЕНИЕ(Справочник.ЛогистическиеБрейки.ПустаяСсылка)
		        |			ТОГДА 1
		        |		ИНАЧЕ ДополнительныеПараметрыЗаказа.ЛогистическийБрейк
		        |	КОНЕЦ КАК КатегорияЗаказа
		        |ПОМЕСТИТЬ ВТ_Заказы
		        |ИЗ
		        |	ВТ_РТУ КАК ВТ_РТУ
		        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
		        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АктуальнаяСхемаЛогистическихБрейков.СрезПоследних КАК АктуальнаяСхемаЛогистическихБрейковСрезПоследних
		        |			ПО ДополнительныеПараметрыЗаказа.СхемаЛогистическихБрейков.Ссылка = АктуальнаяСхемаЛогистическихБрейковСрезПоследних.СхемаЛогистическихБрейков.Ссылка
		        |		ПО ВТ_РТУ.Ссылка = ДополнительныеПараметрыЗаказа.Заказ.Ссылка
		        |			И (ДополнительныеПараметрыЗаказа.Доставка <> ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка)) @СтрокаФильтраСмена@
		        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КорзинаПолигональнойМаршрутизации.СрезПоследних(
		        |				,
		        |				ДатаПланирования = &ДатаНач
		        |					И ТерминалДоставки.Ссылка = &ТерминалДоставки) КАК КорзинаПолигональнойМаршрутизацииСрезПоследних
		        |		ПО (ВТ_РТУ.Ссылка = ВЫРАЗИТЬ(КорзинаПолигональнойМаршрутизацииСрезПоследних.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
		        |			И (КорзинаПолигональнойМаршрутизацииСрезПоследних.ЗаказВКорзине = ИСТИНА)
		        |ГДЕ
				//+Широков 25.06.2021 Задача 4607
				|  ДополнительныеПараметрыЗаказа.ВнешнийОператорМаршрутизации.Ссылка ЕСТЬ NULL
				//-Широков 25.06.2021 Задача 4607
		        |	И ЕСТЬNULL(КорзинаПолигональнойМаршрутизацииСрезПоследних.Период, ИСТИНА) = ИСТИНА
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ВТ_РТУ.Ссылка,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ЛогистическийБрейк, ИСТИНА) = ИСТИНА
		        |			ТОГДА 1
		        |		КОГДА ДополнительныеПараметрыЗаказа.ЛогистическийБрейк = ЗНАЧЕНИЕ(Справочник.ЛогистическиеБрейки.ПустаяСсылка)
		        |			ТОГДА 1
		        |		ИНАЧЕ ДополнительныеПараметрыЗаказа.ЛогистическийБрейк
		        |	КОНЕЦ
		        |
		        |ОБЪЕДИНИТЬ ВСЕ
		        |
		        |ВЫБРАТЬ
		        |	ЗаборТовара.Ссылка,
		        |	ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Забор),
		        |	&ЗаборнаяКатегория
		        |ИЗ
		        |	Документ.ЗаборТовара КАК ЗаборТовара
		        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КорзинаПолигональнойМаршрутизации.СрезПоследних(
		        |				,
		        |				ДатаПланирования = &ДатаНач
		        |					И ТерминалДоставки.Ссылка = &ТерминалДоставки) КАК КорзинаПолигональнойМаршрутизацииСрезПоследних
		        |		ПО (ЗаборТовара.Ссылка = ВЫРАЗИТЬ(КорзинаПолигональнойМаршрутизацииСрезПоследних.Заказ КАК Документ.ЗаборТовара).Ссылка)
		        |			И (КорзинаПолигональнойМаршрутизацииСрезПоследних.ЗаказВКорзине = ИСТИНА)
		        |ГДЕ
		        |	ЗаборТовара.Дата МЕЖДУ &ДатаНач И &ДатаКон
		        |	И ЗаборТовара.СтатусИнтернетМагазина = 2
		        |	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
		        |	И ЗаборТовара.ТерминалДоставки = &ТерминалДоставки
		        |	И ЕСТЬNULL(КорзинаПолигональнойМаршрутизацииСрезПоследних.Период, ИСТИНА) = ИСТИНА
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ЗаборТовара.Ссылка
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ВТ_Заказы.КатегорияЗаказа КАК КатегорияЗаказа,
		        |	ЕСТЬNULL(ПолигоныМаршрутизацииЗаказовСрезПоследних.ПолигонМаршрутизации, ЗНАЧЕНИЕ(Справочник.ПолигоныМаршрутизации.ПустаяСсылка)) КАК Полигон,
		        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Заказы.Заказ) КАК КоличествоЗаказов
		        |ПОМЕСТИТЬ ВТ_КоличествоЗаказов
		        |ИЗ
		        |	ВТ_Заказы КАК ВТ_Заказы
		        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолигоныМаршрутизацииЗаказов.СрезПоследних(, СхемаМаршрутизации.Ссылка = &СхемаМаршрутизации) КАК ПолигоныМаршрутизацииЗаказовСрезПоследних
		        |		ПО ВТ_Заказы.Заказ = ПолигоныМаршрутизацииЗаказовСрезПоследних.Заказ
		        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИндивидуальнаяМаршрутизация КАК ВТ_ИндивидуальнаяМаршрутизация
		        |		ПО ВТ_Заказы.Заказ = ВТ_ИндивидуальнаяМаршрутизация.Заказ
		        |ГДЕ
		        |	ЕСТЬNULL(ВТ_ИндивидуальнаяМаршрутизация.Заказ, ИСТИНА) = ИСТИНА
				////CeHbKA #2626 #21.05.2019
				//|	"+?(ТолькоРеализации, "И ВТ_Заказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг ", "")+"
				////CeHbKA #2626 #21.05.2019						
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ВТ_Заказы.КатегорияЗаказа,
		        |	ЕСТЬNULL(ПолигоныМаршрутизацииЗаказовСрезПоследних.ПолигонМаршрутизации, ЗНАЧЕНИЕ(Справочник.ПолигоныМаршрутизации.ПустаяСсылка))
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ЛОЖЬ КАК Отметка,
		        |	ПолигоныМаршрутизации.Ссылка КАК ПолигонМаршрутизации,
		        |	ЛогистическиеБрейки.Ссылка КАК Брейк
		        |ПОМЕСТИТЬ ВТ_ВсеПолигоныИБрейки
		        |ИЗ
		        |	Справочник.ЛогистическиеБрейки КАК ЛогистическиеБрейки,
		        |	Справочник.ПолигоныМаршрутизации КАК ПолигоныМаршрутизации
		        |ГДЕ
		        |	ПолигоныМаршрутизации.Владелец = &СхемаМаршрутизации
		        |	И ЛогистическиеБрейки.Владелец = &СхемаЛогистическихБрейков
		        |	И ПолигоныМаршрутизации.ПометкаУдаления = ЛОЖЬ
		        |	И ЛогистическиеБрейки.ПометкаУдаления = ЛОЖЬ
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ПолигоныМаршрутизации.Ссылка,
		        |	ЛогистическиеБрейки.Ссылка
		        |
		        |ОБЪЕДИНИТЬ ВСЕ
		        |
		        |ВЫБРАТЬ
		        |	ЛОЖЬ,
		        |	ПолигоныМаршрутизации.Ссылка,
		        |	1
		        |ИЗ
		        |	Справочник.ПолигоныМаршрутизации КАК ПолигоныМаршрутизации
		        |ГДЕ
		        |	ПолигоныМаршрутизации.Владелец = &СхемаМаршрутизации
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ПолигоныМаршрутизации.Ссылка
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ПредпочитаемыеПолигоныЭкипажейСрезПоследних.Полигон КАК Полигон,
		        |	ВЫБОР
		        |		КОГДА ПредпочитаемыеПолигоныЭкипажейСрезПоследних.Порядок = 0
		        |			ТОГДА 1000
		        |		ИНАЧЕ ПредпочитаемыеПолигоныЭкипажейСрезПоследних.Порядок
		        |	КОНЕЦ КАК Порядок
		        |ПОМЕСТИТЬ ВТ_ПредпочитаемыеПолигоны
		        |ИЗ
		        |	РегистрСведений.ПредпочитаемыеПолигоныЭкипажей.СрезПоследних(
		        |			,
		        |			Водитель = &Водитель
		        |				И СхемаПолигональнойМаршрутизации = &СхемаМаршрутизации) КАК ПредпочитаемыеПолигоныЭкипажейСрезПоследних
		        |ГДЕ
		        |	ПредпочитаемыеПолигоныЭкипажейСрезПоследних.ПолигонУчитывается = ИСТИНА
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Рейс КАК Рейс,
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Полигон КАК Полигон,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа, ИСТИНА) = ИСТИНА
		        |			ТОГДА 1
		        |		КОГДА ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа = ЗНАЧЕНИЕ(Справочник.ЛогистическиеБрейки.ПустаяСсылка)
		        |			ТОГДА 1
		        |		ИНАЧЕ ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа
		        |	КОНЕЦ КАК КатегорияЗаказа
		        |ПОМЕСТИТЬ ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу
		        |ИЗ
		        |	РегистрСведений.ПолигоныИКатегорииЗаказовДляРейсов КАК ПолигоныИКатегорииЗаказовДляРейсов
		        |ГДЕ
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Рейс = &Рейс
				//CeHbKA #31790 06.06.2019
		        |	И ПолигоныИКатегорииЗаказовДляРейсов.Смена = &СменаРейса
				//CeHbKA #31790 06.06.2019
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Рейс КАК Рейс,
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Полигон КАК Полигон,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа, ИСТИНА) = ИСТИНА
		        |			ТОГДА 1
		        |		КОГДА ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа = ЗНАЧЕНИЕ(Справочник.ЛогистическиеБрейки.ПустаяСсылка)
		        |			ТОГДА 1
		        |		ИНАЧЕ ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа
		        |	КОНЕЦ КАК КатегорияЗаказа
		        |ПОМЕСТИТЬ ВТ_УжеЗапланированныеПолигоныИКатегории
		        |ИЗ
		        |	РегистрСведений.ПолигоныИКатегорииЗаказовДляРейсов КАК ПолигоныИКатегорииЗаказовДляРейсов
		        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
		        |		ПО ПолигоныИКатегорииЗаказовДляРейсов.Рейс.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс.Ссылка
				//CeHbKA #31790 06.06.2019
		        |			И ПолигоныИКатегорииЗаказовДляРейсов.Смена = ПривязкаМашинКРейсамСрезПоследних.Рейс.Ссылка.СменаРейса
				//CeHbKA #31790 06.06.2019
		        |ГДЕ
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Рейс.ДатаРейса = &ДатаНач
		        |	И ПолигоныИКатегорииЗаказовДляРейсов.Рейс <> &Рейс
				//CeHbKA #31790 18.06.2019
		        |	И ПолигоныИКатегорииЗаказовДляРейсов.Смена = &СменаРейса
				//CeHbKA #31790 18.06.2019
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу.КатегорияЗаказа, ИСТИНА) = ИСТИНА
		        |			ТОГДА 0
		        |		ИНАЧЕ 1
		        |	КОНЕЦ КАК Отметка,
		        |	ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации КАК ПолигонМаршрутизации,
		        |	ВТ_ВсеПолигоныИБрейки.Брейк КАК КатегорияЗаказа,
		        |	ЕСТЬNULL(ВТ_КоличествоЗаказов.КоличествоЗаказов, 0) КАК КоличествоЗаказов,
		        |	ВТ_УжеЗапланированныеПолигоныИКатегории.Транспорт КАК УжеНазначенныйТранспорт,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ВТ_УжеЗапланированныеПолигоныИКатегории.Транспорт, ИСТИНА) = ИСТИНА
		        |			ТОГДА ЕСТЬNULL(ВТ_КоличествоЗаказов.КоличествоЗаказов, 0)
		        |		ИНАЧЕ 0
		        |	КОНЕЦ КАК КоличествоЗаказовДоступно,
		        |	ЕСТЬNULL(ВТ_ПредпочитаемыеПолигоны.Порядок, 1000) КАК ПорядокСортировки
		        |ПОМЕСТИТЬ ВТ_Итого
		        |ИЗ
		        |	ВТ_ВсеПолигоныИБрейки КАК ВТ_ВсеПолигоныИБрейки
		        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоЗаказов КАК ВТ_КоличествоЗаказов
		        |		ПО ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации.Ссылка = ВТ_КоличествоЗаказов.Полигон.Ссылка
		        |			И ВТ_ВсеПолигоныИБрейки.Брейк = ВТ_КоличествоЗаказов.КатегорияЗаказа
		        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УжеЗапланированныеПолигоныИКатегории КАК ВТ_УжеЗапланированныеПолигоныИКатегории
		        |		ПО ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации.Ссылка = ВТ_УжеЗапланированныеПолигоныИКатегории.Полигон.Ссылка
		        |			И ВТ_ВсеПолигоныИБрейки.Брейк = ВТ_УжеЗапланированныеПолигоныИКатегории.КатегорияЗаказа
		        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу КАК ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу
		        |		ПО ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации.Ссылка = ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу.Полигон.Ссылка
		        |			И ВТ_ВсеПолигоныИБрейки.Брейк = ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу.КатегорияЗаказа
		        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПредпочитаемыеПолигоны КАК ВТ_ПредпочитаемыеПолигоны
		        |		ПО ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации = ВТ_ПредпочитаемыеПолигоны.Полигон
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу.КатегорияЗаказа, ИСТИНА) = ИСТИНА
		        |			ТОГДА 0
		        |		ИНАЧЕ 1
		        |	КОНЕЦ,
		        |	ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации,
		        |	ВТ_ВсеПолигоныИБрейки.Брейк,
		        |	ЕСТЬNULL(ВТ_КоличествоЗаказов.КоличествоЗаказов, 0),
		        |	ВТ_УжеЗапланированныеПолигоныИКатегории.Транспорт,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ВТ_УжеЗапланированныеПолигоныИКатегории.Транспорт, ИСТИНА) = ИСТИНА
		        |			ТОГДА ЕСТЬNULL(ВТ_КоличествоЗаказов.КоличествоЗаказов, 0)
		        |		ИНАЧЕ 0
		        |	КОНЕЦ,
		        |	ЕСТЬNULL(ВТ_ПредпочитаемыеПолигоны.Порядок, 1000)
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ВТ_Итого.Отметка КАК Отметка,
		        |	ВТ_Итого.ПолигонМаршрутизации КАК ПолигонМаршрутизации,
		        |	ВТ_Итого.КатегорияЗаказа КАК КатегорияЗаказа,
		        |	ВТ_Итого.КоличествоЗаказов КАК КоличествоЗаказов,
		        |	ВТ_Итого.УжеНазначенныйТранспорт КАК УжеНазначенныйТранспорт,
		        |	ВТ_Итого.КоличествоЗаказовДоступно КАК КоличествоЗаказовДоступно,
		        |	ВТ_Итого.ПорядокСортировки КАК ПорядокСортировки
		        |ИЗ
		        |	ВТ_Итого КАК ВТ_Итого%УсловиеВыбораПоМакрозонам% 
		        |
		        |УПОРЯДОЧИТЬ ПО
		        |	ПорядокСортировки,
		        |	ВТ_Итого.ПолигонМаршрутизации.Порядок,
		        |	ВТ_Итого.КатегорияЗаказа.ПорядокКолонки
		        |ИТОГИ
		        |	СУММА(КоличествоЗаказов),
		        |	МАКСИМУМ(УжеНазначенныйТранспорт),
		        |	СУММА(КоличествоЗаказовДоступно),
		        |	МИНИМУМ(ПорядокСортировки)
		        |ПО
		        |	ПолигонМаршрутизации";
	Иначе
		Возврат "ВЫБРАТЬ
		        |	ПланируемыеКатегорииЗаказовТранспортаСрезПоследних.ТипЗаказа КАК ТипЗаказа,
		        |	ПланируемыеКатегорииЗаказовТранспортаСрезПоследних.Категория КАК Категория
		        |ПОМЕСТИТЬ ВТ_КатегорииТранспорта
		        |ИЗ
		        |	РегистрСведений.ПланируемыеКатегорииЗаказовТранспорта.СрезПоследних(
		        |			,
		        |			Транспорт = &Транспорт
		        |				И СхемаЛогистическихБрейков = &СхемаЛогистическихБрейков) КАК ПланируемыеКатегорииЗаказовТранспортаСрезПоследних
		        |ГДЕ
		        |	ПланируемыеКатегорииЗаказовТранспортаСрезПоследних.КатегорияУчитывается = ИСТИНА
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.Заказ КАК Заказ
		        |ПОМЕСТИТЬ ВТ_ИндивидуальнаяМаршрутизация
		        |ИЗ
		        |	РегистрСведений.ИндивидуальнаяМаршрутизацияПоРейсам.СрезПоследних(, ДатаПланирования = &ДатаНач) КАК ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних
		        |ГДЕ
		        |	ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.Рейс.Ссылка <> ЗНАЧЕНИЕ(Документ.Рейс.пустаяСсылка)
		        |;
				//Асеев 29.08.2023 (Задача № 5117)>>>
		        |////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВложенныйЗапрос.Ссылка КАК Ссылка
				|ПОМЕСТИТЬ ВТ_РТУ
				|ИЗ
				|	(ВЫБРАТЬ
				|		РеализацияТоваровУслуг.Ссылка КАК Ссылка
				|	ИЗ
				|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
				|	ГДЕ
				|		РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон
				|		И РеализацияТоваровУслуг.СтатусИнтернетМагазина = 2
				|		И РеализацияТоваровУслуг.ТерминалДоставки = &ТерминалДоставки
				|		И НЕ РеализацияТоваровУслуг.ПометкаУдаления
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		СтатусыПредварительногоЗакрытияРейсовСрезПоследних.Заказ
				|	ИЗ
				|		РегистрСведений.СтатусыПредварительногоЗакрытияРейсов.СрезПоследних КАК СтатусыПредварительногоЗакрытияРейсовСрезПоследних
				|	ГДЕ
				|		СтатусыПредварительногоЗакрытияРейсовСрезПоследних.ДатаДоставкиЗаказа = &ДатаНач
				|		И СтатусыПредварительногоЗакрытияРейсовСрезПоследних.СтатусПредварительногоЗакрытияРейса = ЗНАЧЕНИЕ(Перечисление.СтатусыПредварительногоЗакрытияРейсов.РейсЗакрытПредварительно)
				|		И СтатусыПредварительногоЗакрытияРейсовСрезПоследних.Заказ.ТерминалДоставки = &ТерминалДоставки) КАК ВложенныйЗапрос
				|;
				//Асеев 29.08.2023 (Задача № 5117)<<<
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ВТ_РТУ.Ссылка КАК Заказ,
		        |	ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка) КАК ТипЗаказа,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ЛогистическийБрейк, ИСТИНА) = ИСТИНА
		        |			ТОГДА 1
		        |		КОГДА ДополнительныеПараметрыЗаказа.ЛогистическийБрейк = ЗНАЧЕНИЕ(Справочник.ЛогистическиеБрейки.ПустаяСсылка)
		        |			ТОГДА 1
		        |		ИНАЧЕ ДополнительныеПараметрыЗаказа.ЛогистическийБрейк
		        |	КОНЕЦ КАК КатегорияЗаказа
		        |ПОМЕСТИТЬ ВТ_Заказы
		        |ИЗ
		        |	ВТ_РТУ КАК ВТ_РТУ
		        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
		        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АктуальнаяСхемаЛогистическихБрейков.СрезПоследних КАК АктуальнаяСхемаЛогистическихБрейковСрезПоследних
		        |			ПО ДополнительныеПараметрыЗаказа.СхемаЛогистическихБрейков.Ссылка = АктуальнаяСхемаЛогистическихБрейковСрезПоследних.СхемаЛогистическихБрейков.Ссылка
		        |		ПО ВТ_РТУ.Ссылка = ДополнительныеПараметрыЗаказа.Заказ.Ссылка
		        |			И (ДополнительныеПараметрыЗаказа.Доставка <> ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка)) @СтрокаФильтраСмена@
		        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КорзинаПолигональнойМаршрутизации.СрезПоследних(
		        |				,
		        |				ДатаПланирования = &ДатаНач
		        |					И ТерминалДоставки.Ссылка = &ТерминалДоставки) КАК КорзинаПолигональнойМаршрутизацииСрезПоследних
				|		ПО (ВТ_РТУ.Ссылка = ВЫРАЗИТЬ(КорзинаПолигональнойМаршрутизацииСрезПоследних.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
				|			И (КорзинаПолигональнойМаршрутизацииСрезПоследних.ЗаказВКорзине = ИСТИНА)
				|ГДЕ
				//+Широков 25.06.2021 Задача 4607
				|  ДополнительныеПараметрыЗаказа.ВнешнийОператорМаршрутизации.Ссылка ЕСТЬ NULL
				//-Широков 25.06.2021 Задача 4607
		        |	И ЕСТЬNULL(КорзинаПолигональнойМаршрутизацииСрезПоследних.Период, ИСТИНА) = ИСТИНА
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ВТ_РТУ.Ссылка,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ЛогистическийБрейк, ИСТИНА) = ИСТИНА
		        |			ТОГДА 1
		        |		КОГДА ДополнительныеПараметрыЗаказа.ЛогистическийБрейк = ЗНАЧЕНИЕ(Справочник.ЛогистическиеБрейки.ПустаяСсылка)
		        |			ТОГДА 1
		        |		ИНАЧЕ ДополнительныеПараметрыЗаказа.ЛогистическийБрейк
		        |	КОНЕЦ
		        |
		        |ОБЪЕДИНИТЬ ВСЕ
		        |
		        |ВЫБРАТЬ
		        |	ЗаборТовара.Ссылка,
		        |	ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Забор),
		        |	&ЗаборнаяКатегория
		        |ИЗ
		        |	Документ.ЗаборТовара КАК ЗаборТовара
		        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КорзинаПолигональнойМаршрутизации.СрезПоследних(
		        |				,
		        |				ДатаПланирования = &ДатаНач
		        |					И ТерминалДоставки.Ссылка = &ТерминалДоставки) КАК КорзинаПолигональнойМаршрутизацииСрезПоследних
		        |		ПО (ЗаборТовара.Ссылка = ВЫРАЗИТЬ(КорзинаПолигональнойМаршрутизацииСрезПоследних.Заказ КАК Документ.ЗаборТовара).Ссылка)
		        |			И (КорзинаПолигональнойМаршрутизацииСрезПоследних.ЗаказВКорзине = ИСТИНА)
		        |ГДЕ
		        |	ЗаборТовара.Дата МЕЖДУ &ДатаНач И &ДатаКон
		        |	И ЗаборТовара.СтатусИнтернетМагазина = 2
		        |	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
		        |	И ЗаборТовара.ТерминалДоставки = &ТерминалДоставки
		        |	И ЕСТЬNULL(КорзинаПолигональнойМаршрутизацииСрезПоследних.Период, ИСТИНА) = ИСТИНА
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ЗаборТовара.Ссылка
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ВТ_Заказы.КатегорияЗаказа КАК КатегорияЗаказа,
		        |	ЕСТЬNULL(ПолигоныМаршрутизацииЗаказовСрезПоследних.ПолигонМаршрутизации, ЗНАЧЕНИЕ(Справочник.ПолигоныМаршрутизации.ПустаяСсылка)) КАК Полигон,
		        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Заказы.Заказ) КАК КоличествоЗаказов
		        |ПОМЕСТИТЬ ВТ_КоличествоЗаказов
		        |ИЗ
		        |	ВТ_Заказы КАК ВТ_Заказы
		        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолигоныМаршрутизацииЗаказов.СрезПоследних(, СхемаМаршрутизации.Ссылка = &СхемаМаршрутизации) КАК ПолигоныМаршрутизацииЗаказовСрезПоследних
		        |		ПО ВТ_Заказы.Заказ = ПолигоныМаршрутизацииЗаказовСрезПоследних.Заказ
		        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИндивидуальнаяМаршрутизация КАК ВТ_ИндивидуальнаяМаршрутизация
		        |		ПО ВТ_Заказы.Заказ = ВТ_ИндивидуальнаяМаршрутизация.Заказ
		        |ГДЕ
		        |	ЕСТЬNULL(ВТ_ИндивидуальнаяМаршрутизация.Заказ, ИСТИНА) = ИСТИНА
				////CeHbKA #2626 #21.05.2019
				//|	"+?(ТолькоРеализации, "И ВТ_Заказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг ", "")+"
				////CeHbKA #2626 #21.05.2019						
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ВТ_Заказы.КатегорияЗаказа,
		        |	ЕСТЬNULL(ПолигоныМаршрутизацииЗаказовСрезПоследних.ПолигонМаршрутизации, ЗНАЧЕНИЕ(Справочник.ПолигоныМаршрутизации.ПустаяСсылка))
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ЛОЖЬ КАК Отметка,
		        |	ПолигоныМаршрутизации.Ссылка КАК ПолигонМаршрутизации,
		        |	ЛогистическиеБрейки.Ссылка КАК Брейк
		        |ПОМЕСТИТЬ ВТ_ВсеПолигоныИБрейки
		        |ИЗ
		        |	Справочник.ЛогистическиеБрейки КАК ЛогистическиеБрейки,
		        |	Справочник.ПолигоныМаршрутизации КАК ПолигоныМаршрутизации
		        |ГДЕ
		        |	ПолигоныМаршрутизации.Владелец = &СхемаМаршрутизации
		        |	И ЛогистическиеБрейки.Владелец = &СхемаЛогистическихБрейков
		        |	И ПолигоныМаршрутизации.ПометкаУдаления = ЛОЖЬ
		        |	И ЛогистическиеБрейки.ПометкаУдаления = ЛОЖЬ
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ПолигоныМаршрутизации.Ссылка,
		        |	ЛогистическиеБрейки.Ссылка
		        |
		        |ОБЪЕДИНИТЬ ВСЕ
		        |
		        |ВЫБРАТЬ
		        |	ЛОЖЬ,
		        |	ПолигоныМаршрутизации.Ссылка,
		        |	1
		        |ИЗ
		        |	Справочник.ПолигоныМаршрутизации КАК ПолигоныМаршрутизации
		        |ГДЕ
		        |	ПолигоныМаршрутизации.Владелец = &СхемаМаршрутизации
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ПолигоныМаршрутизации.Ссылка
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ПредпочитаемыеПолигоныЭкипажейСрезПоследних.Полигон КАК Полигон,
		        |	ВЫБОР
		        |		КОГДА ПредпочитаемыеПолигоныЭкипажейСрезПоследних.Порядок = 0
		        |			ТОГДА 1000
		        |		ИНАЧЕ ПредпочитаемыеПолигоныЭкипажейСрезПоследних.Порядок
		        |	КОНЕЦ КАК Порядок
		        |ПОМЕСТИТЬ ВТ_ПредпочитаемыеПолигоны
		        |ИЗ
		        |	РегистрСведений.ПредпочитаемыеПолигоныЭкипажей.СрезПоследних(
		        |			,
		        |			Водитель = &Водитель
		        |				И СхемаПолигональнойМаршрутизации = &СхемаМаршрутизации) КАК ПредпочитаемыеПолигоныЭкипажейСрезПоследних
		        |ГДЕ
		        |	ПредпочитаемыеПолигоныЭкипажейСрезПоследних.ПолигонУчитывается = ИСТИНА
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Рейс КАК Рейс,
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Полигон КАК Полигон,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа, ИСТИНА) = ИСТИНА
		        |			ТОГДА 1
		        |		КОГДА ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа = ЗНАЧЕНИЕ(Справочник.ЛогистическиеБрейки.ПустаяСсылка)
		        |			ТОГДА 1
		        |		ИНАЧЕ ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа
		        |	КОНЕЦ КАК КатегорияЗаказа
		        |ПОМЕСТИТЬ ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу
		        |ИЗ
		        |	РегистрСведений.ПолигоныИКатегорииЗаказовДляРейсов КАК ПолигоныИКатегорииЗаказовДляРейсов
		        |ГДЕ
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Рейс = &Рейс
				//CeHbKA #31790 06.06.2019
		        |	И ПолигоныИКатегорииЗаказовДляРейсов.Смена = &СменаРейса
				//CeHbKA #31790 06.06.2019
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Рейс КАК Рейс,
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Полигон КАК Полигон,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа, ИСТИНА) = ИСТИНА
		        |			ТОГДА 1
		        |		КОГДА ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа = ЗНАЧЕНИЕ(Справочник.ЛогистическиеБрейки.ПустаяСсылка)
		        |			ТОГДА 1
		        |		ИНАЧЕ ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа
		        |	КОНЕЦ КАК КатегорияЗаказа
		        |ПОМЕСТИТЬ ВТ_УжеЗапланированныеПолигоныИКатегории
		        |ИЗ
		        |	РегистрСведений.ПолигоныИКатегорииЗаказовДляРейсов КАК ПолигоныИКатегорииЗаказовДляРейсов
		        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
		        |		ПО ПолигоныИКатегорииЗаказовДляРейсов.Рейс.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс.Ссылка
				//CeHbKA #31790 06.06.2019
		        |			И ПолигоныИКатегорииЗаказовДляРейсов.Смена = ПривязкаМашинКРейсамСрезПоследних.Рейс.Ссылка.СменаРейса
				//CeHbKA #31790 06.06.2019
		        |ГДЕ
		        |	ПолигоныИКатегорииЗаказовДляРейсов.Рейс.ДатаРейса = &ДатаНач
		        |	И ПолигоныИКатегорииЗаказовДляРейсов.Рейс <> &Рейс
				//CeHbKA #31790 18.06.2019
		        |	И ПолигоныИКатегорииЗаказовДляРейсов.Смена = &СменаРейса
				//CeHbKA #31790 18.06.2019
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу.КатегорияЗаказа, ИСТИНА) = ИСТИНА
		        |			ТОГДА 0
		        |		ИНАЧЕ 1
		        |	КОНЕЦ КАК Отметка,
		        |	ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации КАК ПолигонМаршрутизации,
		        |	ВТ_ВсеПолигоныИБрейки.Брейк КАК КатегорияЗаказа,
		        |	ЕСТЬNULL(ВТ_КоличествоЗаказов.КоличествоЗаказов, 0) КАК КоличествоЗаказов,
		        |	ВТ_УжеЗапланированныеПолигоныИКатегории.Транспорт КАК УжеНазначенныйТранспорт,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ВТ_УжеЗапланированныеПолигоныИКатегории.Транспорт, ИСТИНА) = ИСТИНА
		        |			ТОГДА ЕСТЬNULL(ВТ_КоличествоЗаказов.КоличествоЗаказов, 0)
		        |		ИНАЧЕ 0
		        |	КОНЕЦ КАК КоличествоЗаказовДоступно,
		        |	ЕСТЬNULL(ВТ_ПредпочитаемыеПолигоны.Порядок, 1000) КАК ПорядокСортировки
		        |ПОМЕСТИТЬ ВТ_Итого
		        |ИЗ
		        |	ВТ_ВсеПолигоныИБрейки КАК ВТ_ВсеПолигоныИБрейки
		        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоЗаказов КАК ВТ_КоличествоЗаказов
		        |		ПО ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации.Ссылка = ВТ_КоличествоЗаказов.Полигон.Ссылка
		        |			И ВТ_ВсеПолигоныИБрейки.Брейк = ВТ_КоличествоЗаказов.КатегорияЗаказа
		        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УжеЗапланированныеПолигоныИКатегории КАК ВТ_УжеЗапланированныеПолигоныИКатегории
		        |		ПО ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации.Ссылка = ВТ_УжеЗапланированныеПолигоныИКатегории.Полигон.Ссылка
		        |			И ВТ_ВсеПолигоныИБрейки.Брейк = ВТ_УжеЗапланированныеПолигоныИКатегории.КатегорияЗаказа
		        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу КАК ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу
		        |		ПО ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации.Ссылка = ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу.Полигон.Ссылка
		        |			И ВТ_ВсеПолигоныИБрейки.Брейк = ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу.КатегорияЗаказа
		        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПредпочитаемыеПолигоны КАК ВТ_ПредпочитаемыеПолигоны
		        |		ПО ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации = ВТ_ПредпочитаемыеПолигоны.Полигон
		        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КатегорииТранспорта КАК ВТ_КатегорииТранспорта
		        |		ПО ВТ_ВсеПолигоныИБрейки.Брейк = ВТ_КатегорииТранспорта.Категория
		        |
		        |СГРУППИРОВАТЬ ПО
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ВТ_УжеЗапланированныеПолигоныИКатегорииПоТекущемуРейсу.КатегорияЗаказа, ИСТИНА) = ИСТИНА
		        |			ТОГДА 0
		        |		ИНАЧЕ 1
		        |	КОНЕЦ,
		        |	ВТ_ВсеПолигоныИБрейки.ПолигонМаршрутизации,
		        |	ВТ_ВсеПолигоныИБрейки.Брейк,
		        |	ЕСТЬNULL(ВТ_КоличествоЗаказов.КоличествоЗаказов, 0),
		        |	ВТ_УжеЗапланированныеПолигоныИКатегории.Транспорт,
		        |	ВЫБОР
		        |		КОГДА ЕСТЬNULL(ВТ_УжеЗапланированныеПолигоныИКатегории.Транспорт, ИСТИНА) = ИСТИНА
		        |			ТОГДА ЕСТЬNULL(ВТ_КоличествоЗаказов.КоличествоЗаказов, 0)
		        |		ИНАЧЕ 0
		        |	КОНЕЦ,
		        |	ЕСТЬNULL(ВТ_ПредпочитаемыеПолигоны.Порядок, 1000)
		        |;
		        |
		        |////////////////////////////////////////////////////////////////////////////////
		        |ВЫБРАТЬ
		        |	ВТ_Итого.Отметка КАК Отметка,
		        |	ВТ_Итого.ПолигонМаршрутизации КАК ПолигонМаршрутизации,
		        |	ВТ_Итого.КатегорияЗаказа КАК КатегорияЗаказа,
		        |	ВТ_Итого.КоличествоЗаказов КАК КоличествоЗаказов,
		        |	ВТ_Итого.УжеНазначенныйТранспорт КАК УжеНазначенныйТранспорт,
		        |	ВТ_Итого.КоличествоЗаказовДоступно КАК КоличествоЗаказовДоступно,
		        |	ВТ_Итого.ПорядокСортировки КАК ПорядокСортировки
		        |ИЗ
		        |	ВТ_Итого КАК ВТ_Итого%УсловиеВыбораПоМакрозонам%
		        |
		        |УПОРЯДОЧИТЬ ПО
		        |	ПорядокСортировки,
		        |	ВТ_Итого.ПолигонМаршрутизации.Порядок,
		        |	ВТ_Итого.КатегорияЗаказа.ПорядокКолонки
		        |ИТОГИ
		        |	СУММА(КоличествоЗаказов),
		        |	МАКСИМУМ(УжеНазначенныйТранспорт),
		        |	СУММА(КоличествоЗаказовДоступно),
		        |	МИНИМУМ(ПорядокСортировки)
		        |ПО
		        |	ПолигонМаршрутизации";
	КонецЕсли;	

КонецФункции	

&НаСервере
Процедура ОбновитьДанныеДереваПолигоновИКатегорийНаСервере()
	
	Если СписокДобавляемыхРеквизитов.Количество() <> 0 Тогда
		Мас = Новый Массив;
		Для Каждого Тек Из СписокДобавляемыхРеквизитов Цикл
			Мас.Добавить(Тек.Значение);
		КонецЦикла;	
		ИзменитьРеквизиты(,Мас);
		СписокДобавляемыхРеквизитов.Очистить();
		Для Каждого Тек Из СписокДобавляемыхЭлементов Цикл
			Элементы.Удалить(Элементы.Найти(Тек.Значение));
		КонецЦикла;
		СписокДобавляемыхЭлементов.Очистить();
	КонецЕсли;	
	
	Зап = Новый Запрос;
	
	Зап.Текст = ПолучитьТекстОсновногоЗапроса(УстановкаПолигоновСУчетомКатегорийТранспорта);
	
	// Якурнов 21.09.2018 13:24:22
	Если МассивПолигонов.Количество() = 0 Тогда
		Зап.Текст = СтрЗаменить(Зап.Текст,"%УсловиеВыбораПоМакрозонам%","");
	Иначе
		Зап.УстановитьПараметр("МассивПолигонов", МассивПолигонов);
		Зап.Текст = СтрЗаменить(Зап.Текст,"%УсловиеВыбораПоМакрозонам%","	ГДЕ ВТ_Итого.ПолигонМаршрутизации В(&МассивПолигонов)");
	КонецЕсли;	

		// Якурнов: Отбор по Смене
	// >>>>>>>> Начало 23.10.2018 14:49:06 >>>>>>>>
	Если ЗначениеЗаполнено(Смена) Тогда
		
			СтрокаФильтраСмена = " И (ДополнительныеПараметрыЗаказа.Смена = &СменаРейса)";
			Зап.Текст = СтрЗаменить(Зап.Текст, "@СтрокаФильтраСмена@",СтрокаФильтраСмена);
	
			//Зап.УстановитьПараметр("СменаРейса",Смена); CeHbKA
	Иначе
			Зап.Текст = СтрЗаменить(Зап.Текст, "@СтрокаФильтраСмена@","");
	КонецЕсли;
	// <<<<<<<< Конец 23.10.2018 14:49:06 <<<<<<<<

	 
	
	Зап.УстановитьПараметр("ДатаНач", НачалоДня(ДатаПланирования));
	Зап.УстановитьПараметр("ДатаКон", КонецДня(ДатаПланирования));
	Зап.УстановитьПараметр("СхемаМаршрутизации", ПолигональнаяСхемаКарты);
	Зап.УстановитьПараметр("ТерминалДоставки", Регион);
	Зап.УстановитьПараметр("ЗаборнаяКатегория", ЗаборнаяКатегория);
	Зап.УстановитьПараметр("СхемаЛогистическихБрейков", СхемаЛогистическихБрейков);
	Зап.УстановитьПараметр("Рейс", Рейс);
	//CeHbKA #3179 06.06.2019
	Зап.УстановитьПараметр("СменаРейса", Рейс.СменаРейса);
	//CeHbKA #3179 06.06.2019
	Зап.УстановитьПараметр("Транспорт", Транспорт);
	Зап.УстановитьПараметр("Водитель", Водитель);
	
	
	
	ДеревоПолигонов = Зап.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам); 
	
    МассивДобавляемыхРеквизитов = Новый Массив;
	Для Каждого Колонка Из ДеревоПолигонов.Колонки Цикл
		Если Колонка.Имя = "Отметка" Тогда
        	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(1,0)), "ДеревоПолигоновИКатегорий"));
		Иначе
			МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ДеревоПолигоновИКатегорий"));
		КонецеСли;
		
		Рекв = МассивДобавляемыхРеквизитов[МассивДобавляемыхРеквизитов.количество() - 1];
		СписокДобавляемыхРеквизитов.Добавить(Рекв.Путь + "." + Рекв.Имя);
    КонецЦикла;
    ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

    ЗначениеВРеквизитФормы(ДеревоПолигонов, "ДеревоПолигоновИКатегорий");


	Для Каждого Колонка Из ДеревоПолигонов.Колонки Цикл
		РодительКолонки = "ДеревоПолигоновИКатегорий";
		ЗаголовокКолонки = "";
		Если Колонка.Имя = "КатегорияЗаказа" Или Колонка.Имя = "ПолигонМаршрутизации" Тогда
			РодительКолонки = "ДеревоПолигоновИКатегорийГруппа_ПолигонКатегория";
		КонецеСли;
		
		
		НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), Элементы[РодительКолонки]);
		СписокДобавляемыхЭлементов.Добавить(НовыйЭлемент.Имя);
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеНадписи;
		
		
		НовыйЭлемент.ПутьКДанным = "ДеревоПолигоновИКатегорий." + Колонка.Имя;
		
		НовыйЭлемент.ТолькоПросмотр = Истина;	
		НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
		НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;

		ОформлениеКолонки(НовыйЭлемент, Колонка.Имя);
    КонецЦикла;	
	УстановкаУсловногоОформленияСпискаПолигонов();
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.Заказ) КАК КоличествоЗаказов
	            |ИЗ
	            |	РегистрСведений.ИндивидуальнаяМаршрутизацияПоРейсам.СрезПоследних(, ДатаПланирования = &ДатаПланирования) КАК ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних
	            |ГДЕ
	            |	ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.Рейс = &Рейс";
	
	Зап.УстановитьПараметр("Рейс", Рейс);
	Зап.УстановитьПараметр("ДатаПланирования", ДатаПланирования);
	
	Выб = Зап.Выполнить().Выбрать();
	
	КоличествоИндивидуальноМаршрутизированныхЗаказов = 0;
	
	Если Выб.Следующий() Тогда
		КоличествоИндивидуальноМаршрутизированныхЗаказов = Выб.КоличествоЗаказов;
	КонецеСли;	
	
	//ЭтаФорма.Высота = 200;
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура ОформлениеКолонки(ЭлементФормы, ИмяКолонки)
	ЭлементФормы.Ширина = 4;
	ЭлементФормы.МаксимальнаяШирина = 4;
	
	
	Если ИмяКолонки = "ПолигонМаршрутизации" Тогда	
		ЭлементФормы.Заголовок = "Полигон";
		ЭлементФормы.Ширина = 15;
		ЭлементФормы.МаксимальнаяШирина = 15;
	ИначеЕсли ИмяКолонки = "УжеНазначенныйТранспорт" Тогда	
		ЭлементФормы.Заголовок = "Транспорт";
		ЭлементФормы.Ширина = 9;
		ЭлементФормы.МаксимальнаяШирина = 9;
	ИначеЕсли ИмяКолонки = "ПорядокСортировки" Тогда	
		ЭлементФормы.Видимость = Ложь;
	ИначеЕсли ИмяКолонки = "КоличествоЗаказов" Тогда	
		ЭлементФормы.Видимость = Ложь;
		ЭлементФормы.Заголовок = "Кол-во";
	ИначеЕсли ИмяКолонки = "КоличествоЗаказовДоступно" Тогда	
		//ЭлементФормы.Видимость = Ложь;
		ЭлементФормы.Заголовок = "Кол-во доступно";
		
	ИначеЕсли ИмяКолонки = "Отметка" Тогда	
		ЭлементФормы.Заголовок = "V";
		ЭлементФормы.Ширина = 2;
		ЭлементФормы.МаксимальнаяШирина = 2;
		ЭлементФормы.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлементФормы.ТриСостояния = Истина;
		ЭлементФормы.ТолькоПросмотр = Ложь;
		ЭлементФормы.УстановитьДействие("ПриИзменении", "ИзменениеФлажкаНаПолигонах"); 
		ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КонецеСли;	
КонецПроцедуры	


#Область РаботаСФлажкамиТриСостояния
&НаКлиенте
Процедура ИнициализацияРодительскихФлажков()
	Элементы.КоличествоЗаказовИтого.Видимость = истина;
	КоличествоЗаказовИтого = КоличествоИндивидуальноМаршрутизированныхЗаказов;
	ЭлементыПервогоУровня = ЭтаФорма["ДеревоПолигоновИКатегорий"].ПолучитьЭлементы();		
	Для Каждого ЭлементКоллекцииПУ Из ЭлементыПервогоУровня Цикл
		
		ЭлементыВУ = ЭлементКоллекцииПУ.ПолучитьЭлементы();		
		Для Каждого ЭлементКоллекции Из ЭлементыВУ Цикл
			
			Родитель = ЭлементКоллекции.ПолучитьРодителя();
			Если Родитель <> Неопределено Тогда
				Если ЭлементКоллекции.Отметка = 1 Тогда
					КоличествоЗаказовИтого = КоличествоЗаказовИтого + ЭлементКоллекции.КоличествоЗаказов;
				КонецеСли;	
			КонецеСли;	
				
			Пока Родитель <> Неопределено Цикл
				Родитель.Отметка = ?(УстановленоДляВсех(ЭлементКоллекции),
				ЭлементКоллекции.Отметка, 2);
				ЭлементКоллекции = Родитель;
				Родитель = ЭлементКоллекции.ПолучитьРодителя();
			КонецЦикла;
		КонецЦикла;	
	КонецЦикла;
КонецПроцедуры	

&НаКлиенте
Процедура ИзменениеФлажкаНаПолигонах(Элемент)
	Элементы.КоличествоЗаказовИтого.Видимость = Ложь;
    ИДТекущейСтроки = Элементы["ДеревоПолигоновИКатегорий"].ТекущаяСтрока;

    Если ИДТекущейСтроки <> Неопределено Тогда

        ЭлементКоллекции = ЭтаФорма["ДеревоПолигоновИКатегорий"].НайтиПоИдентификатору(
            ИДТекущейСтроки);

        Если ЭлементКоллекции.Отметка = 2 Тогда
            ЭлементКоллекции.Отметка = 0;
        КонецЕсли;

        УстановкаФлажков(ЭлементКоллекции, ЭлементКоллекции.Отметка);

        Родитель = ЭлементКоллекции.ПолучитьРодителя();
        Пока Родитель <> Неопределено Цикл
            Родитель.Отметка = ?(УстановленоДляВсех(ЭлементКоллекции),
                ЭлементКоллекции.Отметка, 2);
            ЭлементКоллекции = Родитель;
            Родитель = ЭлементКоллекции.ПолучитьРодителя();
        КонецЦикла;

    КонецЕсли;
	
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановкаФлажков(ЭлементКоллекции, ЗначениеПометки)

    ПодчинЭлементы = ЭлементКоллекции.ПолучитьЭлементы();
	//+Степанов Задача № 3863 Добавлено ветвление на случай если отметка устанавливается для отдельной категории
	Если ПодчинЭлементы.Количество() Тогда
		Для Каждого ТекЭлемент Из ПодчинЭлементы Цикл
			Если ЗначениеЗаполнено(ТекЭлемент.УжеНазначенныйТранспорт) Тогда     //Или ТекЭлемент.КоличествоЗаказовДоступно = 0
				Продолжить;
			КонецеСли;	
			//+Степанов Задача № 3863
			ИзменениеОтметки = ТекЭлемент.Отметка <> ЗначениеПометки;
			//-Степанов Задача № 3863
			ТекЭлемент.Отметка = ЗначениеПометки;
			//УстановкаФлажков(ТекЭлемент, ТекЭлемент.Отметка);
			//+Степанов Задача № 3863
			Если ТекЭлемент <> Неопределено И ИзменениеОтметки Тогда
				ИзменениеДанныхОповещения(ТекЭлемент.ПолигонМаршрутизации, ТекЭлемент.КатегорияЗаказа, ТекЭлемент.Отметка <> 0);  
			КонецЕсли;	
			//-Степанов Задача № 3863
		КонецЦикла;
	Иначе 	
		ИзменениеДанныхОповещения(ЭлементКоллекции.ПолигонМаршрутизации, ЭлементКоллекции.КатегорияЗаказа, ЭлементКоллекции.Отметка <> 0);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция УстановленоДляВсех(ЭлементКоллекции)

	СоседниеЭлементы =
	ЭлементКоллекции.ПолучитьРодителя().ПолучитьЭлементы();
	Для Каждого ТекЭлемент Из СоседниеЭлементы Цикл
		Если ТекЭлемент.Отметка <> ЭлементКоллекции.Отметка Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;

КонецФункции  
#КонецОбласти


&НаСервере
Процедура УстановкаУсловногоОформленияСпискаПолигонов()
	//подсветка без полигона
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПолигоновИКатегорий.КатегорияЗаказа"); 
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;	
	ЭлементОтбора.ПравоеЗначение = 1;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Лосось);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", "<не определена>");
	
	ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("КатегорияЗаказа");	     
	
	//скрытие текста полигона
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПолигоновИКатегорий.КатегорияЗаказа"); 
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;	
	ЭлементОтбора.ПравоеЗначение = Справочники.ПолигоныМаршрутизации.ПустаяСсылка();
	ЭлементОтбора.Использование = Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", "");
	
	ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПолигонМаршрутизации");
	
	
	//подсветка категорий без количества
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПолигоновИКатегорий.КоличествоЗаказов"); 
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;	
	ЭлементОтбора.ПравоеЗначение = 0;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.ХакиТемный);
	
	ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("КатегорияЗаказа");	     
	
	
	//недоступность изменения строк
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПолигоновИКатегорий.УжеНазначенныйТранспорт"); 
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;	
	ЭлементОтбора.Использование = Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Серебряный);
	
	ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ДеревоПолигоновИКатегорий");
	
	
	Если СкрыватьУжеПривязанныеПолигоныВФормеПривязкиПолигонов Тогда
		//скрываем строки с привязанным транспортом
		ЭлементОформления = УсловноеОформление.Элементы.Добавить();
		
		ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПолигоновИКатегорий.УжеНазначенныйТранспорт"); 
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;	
		ЭлементОтбора.Использование = Истина;
		
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
		
		ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПолигонМаршрутизации");
		
		ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("КоличествоЗаказов");
		
		ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("УжеНазначенныйТранспорт");
		
		ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("КатегорияЗаказа");
		
		ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Отметка");
		
		ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("КоличествоЗаказовДоступно");
		
		ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПорядокСортировки");
	КонецЕсли;
	
	////недоступность изменения строк (количествоЗаказов)
	//ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	//
	//ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПолигоновИКатегорий.КоличествоЗаказовДоступно"); 
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;	
	//ЭлементОтбора.ПравоеЗначение = 0;
	//ЭлементОтбора.Использование = Истина;
	//
	//ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Серебряный);
	//
	//ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
	//ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ДеревоПолигоновИКатегорий");	     
	
	
	
	////выделение цветом предварительно закрытых заказов в рейсах
	////мгт
	//ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	//
	//ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоПолигоновСЗаказами.МГТ_Пред"); 
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;	
	//ЭлементОтбора.ПравоеЗначение = Справочники.ПолигоныМаршрутизации.ПустаяСсылка();
	//ЭлементОтбора.Использование = Истина;
	//
	//ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Лосось);
	//
	//ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
	//ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("МГТ_Пред");	     
КонецПроцедуры	


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ДатаПланирования") Тогда
		ДатаПланирования = Параметры.ДатаПланирования;
	КонецЕсли;
	
	Если Параметры.Свойство("Регион") Тогда
		Регион = Параметры.Регион;
    КонецЕсли;

	Если Параметры.Свойство("ПолигональнаяСхемаКарты") Тогда
		ПолигональнаяСхемаКарты = Параметры.ПолигональнаяСхемаКарты;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаборнаяКатегория") Тогда
		ЗаборнаяКатегория = Параметры.ЗаборнаяКатегория;
	КонецЕсли;
	
	Если Параметры.Свойство("СхемаЛогистическихБрейков") Тогда
		СхемаЛогистическихБрейков = Параметры.СхемаЛогистическихБрейков;
	КонецЕсли;
	
	Если Параметры.Свойство("Рейс") Тогда
		Рейс = Параметры.Рейс;
		//CeHbKA 01.03.2019 #2879
		Смена = Рейс.СменаРейса;
	КонецЕсли;
	
	Если Параметры.Свойство("Транспорт") Тогда
		Транспорт = Параметры.Транспорт;
	КонецЕсли;
	
	Если Параметры.Свойство("Водитель") Тогда
		Водитель = Параметры.Водитель;
	КонецЕсли;
	
	Если Параметры.Свойство("УстановкаПолигоновСУчетомКатегорийТранспорта") Тогда
		УстановкаПолигоновСУчетомКатегорийТранспорта = Параметры.УстановкаПолигоновСУчетомКатегорийТранспорта;
	КонецЕсли;
	
	Если Параметры.Свойство("СкрыватьУжеПривязанныеПолигоныВФормеПривязкиПолигонов") Тогда
		СкрыватьУжеПривязанныеПолигоныВФормеПривязкиПолигонов = Параметры.СкрыватьУжеПривязанныеПолигоныВФормеПривязкиПолигонов;
	КонецЕсли;
	Элементы.ФормаУстановитьРежимВыводаСпискаПолигонов.Пометка = СкрыватьУжеПривязанныеПолигоныВФормеПривязкиПолигонов;
	
	Если Параметры.Свойство("КоличествоЗаказовМаксимум") Тогда
		КоличествоЗаказовМаксимум = Параметры.КоличествоЗаказовМаксимум;
	КонецЕсли;
	
	// Якурнов 21.09.2018 12:05:27
	Если Параметры.Свойство("МассивПолигонов") Тогда
		Если Параметры.МассивПолигонов <> Неопределено Тогда
			Для Каждого Элем Из Параметры.МассивПолигонов Цикл
				НовСтр = МассивПолигонов.Добавить();
				НовСтр.Значение = Элем;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	// Якурнов 23.10.2018 16:23:44  
	Если Параметры.Свойство("Смена") Тогда
		Смена = Параметры.Смена;
	КонецЕсли;
	
	
	СписокУстановленныхПолигоновИКатегорий.Параметры.УстановитьЗначениеПараметра("Рейс", Рейс);
	//CeHbKA #3179 06.06.2019
	СписокУстановленныхПолигоновИКатегорий.Параметры.УстановитьЗначениеПараметра("СменаРейса", Рейс.СменаРейса);
	//CeHbKA #3179 06.06.2019
	
	СписокКатегорийПоУмолчанию.Параметры.УстановитьЗначениеПараметра("Транспорт", Транспорт);
	СписокКатегорийПоУмолчанию.Параметры.УстановитьЗначениеПараметра("СхемаЛогистическихБрейков", СхемаЛогистическихБрейков);
	СписокПолигоновПоУмолчанию.Параметры.УстановитьЗначениеПараметра("СхемаПолигональнойМаршрутизации", ПолигональнаяСхемаКарты);
	СписокПолигоновПоУмолчанию.Параметры.УстановитьЗначениеПараметра("Водитель", Водитель);
	
	//CeHbKA 01.03.2019 #2879
	СписокПолигоновПоУмолчанию.Параметры.УстановитьЗначениеПараметра("СменаРейса", Рейс.СменаРейса);
	
	//КоличествоЗаказовМаксимум = 10;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПолигоныИКатегорииЗаказовДляРейсов.Полигон КАК Полигон,
	               |	ВЫБОР
	               |		КОГДА ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа = ЗНАЧЕНИЕ(Справочник.ЛогистическиеБрейки.пустаяСсылка)
	               |			ТОГДА ""<не определена>""
	               |		ИНАЧЕ ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа
	               |	КОНЕЦ КАК КатегорияЗаказа,
	               |	ПолигоныИКатегорииЗаказовДляРейсов.Смена КАК Смена
	               |ИЗ
	               |	РегистрСведений.ПолигоныИКатегорииЗаказовДляРейсов КАК ПолигоныИКатегорииЗаказовДляРейсов
	               |ГДЕ
	               |	ПолигоныИКатегорииЗаказовДляРейсов.Рейс = &Рейс
	               |	И ПолигоныИКатегорииЗаказовДляРейсов.Смена = &СменаРейса";
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.УстановитьПараметр("СменаРейса", Рейс.СменаРейса);
	
КонецПроцедуры


&НаСервере
Процедура ПриОткрытииНаСервере()
	// Вставить содержимое обработчика.
	ОбновитьДанныеДереваПолигоновИКатегорийНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВыполнитьИнициализациюДереваНаКлиенте();
	ДанныеМодифицированы = Ложь;
	//+Степанов Задача № 3863
	КОтвязке = Новый Соответствие;
	КПривязке = Новый Соответствие;
	ДанныеОповещения = Новый Структура("КПривязке, КОтвязке", КПривязке, КОтвязке);
	//-Степанов Задача № 3863
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИнициализациюДереваНаКлиенте()
	ПриОткрытииНаСервере();
	ИнициализацияРодительскихФлажков();
КонецПроцедуры	


&НаСервере
Процедура УстановитьПолигоныНаСервере()
	// Вставить содержимое обработчика.
	Дерево = РеквизитФормыВЗначение("ДеревоПолигоновИКатегорий", Тип("ДеревоЗначений"));
	
	Струк = Новый Структура;
	Струк.Вставить("Отметка", 1);
	
	НайденныеСтроки = Дерево.Строки.НайтиСтроки(Струк, Истина);
	
	Наб = РегистрыСведений.ПолигоныИКатегорииЗаказовДляРейсов.СоздатьНаборЗаписей();
	Наб.Отбор.Рейс.Установить(Рейс);
	
	Для Каждого Тек Из НайденныеСтроки Цикл
		Если Тек.Родитель = Неопределено Тогда
			Продолжить;
		КонецеСли;	
		Нов = Наб.Добавить();
		Нов.Рейс = Рейс;
		Нов.Полигон = Тек.ПолигонМаршрутизации;
		Нов.КатегорияЗаказа = Тек.КатегорияЗаказа;
		Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		//CeHbKA #3179 06.06.2019
		Нов.Смена = Рейс.СменаРейса;
		//CeHbKA #3179 06.06.2019
	Конеццикла;	
	
	Наб.Записать();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПолигоны(Команда)

	 УстановитьПолигоныНаСервере();
	
	//Если ДанныеМодифицированы Тогда
	//+Степанов Задача № 3863
	ДанныеПоРейсу = Новый Структура("Рейс, ДанныеОповещения", Рейс, ДанныеОповещения);
	Оповестить("ОбновитьДанныеПолигоновИЗаказовИДанныеРейсов_ПолигональнаяМаршрутизация",ДанныеПоРейсу);
	//-Степанов Задача № 3863
	//КонецеСли;	
	
	Элементы.СписокУстановленныхПолигоновИКатегорий.Обновить();
	ИнициализацияРодительскихФлажков();
	ДанныеМодифицированы = Истина;
	
	Закрыть();
КонецПроцедуры


&НаСервере
Процедура СнятьПометкиНаСервере_Старая()
	Дерево = РеквизитФормыВЗначение("ДеревоПолигоновИКатегорий", Тип("ДеревоЗначений"));
	
	Струк = Новый Структура;
	Струк.Вставить("Отметка", 1);
	
	НайденныеСтроки = Дерево.Строки.НайтиСтроки(Струк, Истина);
	
	Для Каждого Тек Из НайденныеСтроки Цикл
		Тек.Отметка = 0;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоПолигоновИКатегорий");
КонецПроцедуры
//+Степанов Задача № 3863
&НаСервере
Функция СнятьПометкиНаСервере()
	
	ОтвязываемыеПолигоныИКатегории = Новый Соответствие;
	
	Дерево = РеквизитФормыВЗначение("ДеревоПолигоновИКатегорий", Тип("ДеревоЗначений"));
	
	Струк = Новый Структура;
	Струк.Вставить("Отметка", 1);
	
	НайденныеСтроки = Дерево.Строки.НайтиСтроки(Струк, Истина);
	
	Для Каждого Тек Из НайденныеСтроки Цикл
		Если ЗначениеЗаполнено(Тек.Родитель) Тогда
			НайденныйПолигон = ОтвязываемыеПолигоныИКатегории.Получить(Тек.ПолигонМаршрутизации);
			Если НайденныйПолигон = Неопределено Тогда
				МассивКатегорий = Новый Массив;
				МассивКатегорий.Добавить(Тек.КатегорияЗаказа);
				ОтвязываемыеПолигоныИКатегории.Вставить(Тек.ПолигонМаршрутизации, МассивКатегорий);
			Иначе
				НайденныйПолигон.Добавить(Тек.КатегорияЗаказа);
			КонецЕсли;	
		КонецЕсли;	
		Тек.Отметка = 0;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоПолигоновИКатегорий");
	Возврат ОтвязываемыеПолигоныИКатегории
КонецФункции
//-Степанов Задача № 3863

&НаКлиенте
Процедура СнятьПометки(Команда)
	//+Степанов Задача № 3863
	ОтвязываемыеПолигоныИКатегории = СнятьПометкиНаСервере();
	Помещаемые = ДанныеОповещения.КПривязке;
	Отвязываемые = ДанныеОповещения.КОтвязке;
	Для Каждого ПолигонИКатегории Из ОтвязываемыеПолигоныИКатегории Цикл
		Полигон = ПолигонИКатегории.Ключ;
		Для Каждого Категория Из ПолигонИКатегории.Значение Цикл
			ПоместитьКатегориюВДанныеОповещения(Полигон, Категория, Отвязываемые, Помещаемые);	
		КонецЦикла;	
	КонецЦикла;	
	//-Степанов Задача № 3863
	ИнициализацияРодительскихФлажков();
КонецПроцедуры


&НаСервере
Функция УстановитьПолигоныИКатегорииПоУмолчаниюНаСервере()
	// Вставить содержимое обработчика.
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ПолигоныИКатегорииЗаказовДляРейсов.Полигон КАК Полигон,
	            |	ПолигоныИКатегорииЗаказовДляРейсов.КатегорияЗаказа КАК КатегорияЗаказа
	            |ПОМЕСТИТЬ ВТ_УжеНазначенныеПолигоныНаДругиеРейсы
	            |ИЗ
	            |	РегистрСведений.ПолигоныИКатегорииЗаказовДляРейсов КАК ПолигоныИКатегорииЗаказовДляРейсов
	            |ГДЕ
	            |	ПолигоныИКатегорииЗаказовДляРейсов.Рейс <> &Рейс
	            |	И ПолигоныИКатегорииЗаказовДляРейсов.Рейс.ДатаРейса = &ДатаРейса
	            |	И ПолигоныИКатегорииЗаказовДляРейсов.Рейс.Проведен = ИСТИНА
				//CeHbKA #3179 06.06.2019
	            |	И ПолигоныИКатегорииЗаказовДляРейсов.Смена = &СменаРейса
				//CeHbKA #3179 06.06.2019
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ПланируемыеПолигоныЭкипажейСрезПоследних.Полигон КАК Полигон
	            |ПОМЕСТИТЬ ВТ_Полигоны
	            |ИЗ
	            |	РегистрСведений.ПланируемыеПолигоныЭкипажей.СрезПоследних(
	            |			,
	            |			СхемаПолигональнойМаршрутизации = &СхемаПолигональнойМаршрутизации
				|				И Водитель = &Водитель
				|				И СменаМаршрутизации = &СменаРейса) КАК ПланируемыеПолигоныЭкипажейСрезПоследних
	            |ГДЕ
	            |	ПланируемыеПолигоныЭкипажейСрезПоследних.ПолигонУчитывается = ИСТИНА
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ПланируемыеКатегорииЗаказовТранспортаСрезПоследних.Категория КАК Категория
	            |ПОМЕСТИТЬ ВТ_Категории
	            |ИЗ
	            |	РегистрСведений.ПланируемыеКатегорииЗаказовТранспорта.СрезПоследних(
	            |			,
	            |			СхемаЛогистическихБрейков = &СхемаЛогистическихБрейков
	            |				И Транспорт = &Транспорт) КАК ПланируемыеКатегорииЗаказовТранспортаСрезПоследних
	            |ГДЕ
	            |	ПланируемыеКатегорииЗаказовТранспортаСрезПоследних.КатегорияУчитывается = ИСТИНА
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ВТ_Полигоны.Полигон КАК Полигон,
	            |	ВТ_Категории.Категория КАК КатегорияЗаказа
	            |ПОМЕСТИТЬ ВТ_ПолигоныИКатегории
	            |ИЗ
	            |	ВТ_Полигоны КАК ВТ_Полигоны,
	            |	ВТ_Категории КАК ВТ_Категории
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ВТ_ПолигоныИКатегории.Полигон КАК Полигон,
	            |	ВТ_ПолигоныИКатегории.КатегорияЗаказа КАК КатегорияЗаказа,
					//CeHbKA 01.03.2019 #2626
				|	ВТ_ПолигоныИКатегории.КатегорияЗаказа.ТипЗаказа КАК ТипКатегорииЗаказа,
					//CeHbKA 01.03.2019 #2626
	            |	ВЫБОР
	            |		КОГДА ЕСТЬNULL(ВТ_УжеНазначенныеПолигоныНаДругиеРейсы.Полигон, ИСТИНА) = ИСТИНА
	            |				И ЕСТЬNULL(ВТ_УжеНазначенныеПолигоныНаДругиеРейсы.КатегорияЗаказа, ИСТИНА) = ИСТИНА
	            |			ТОГДА ИСТИНА
	            |		ИНАЧЕ ЛОЖЬ
	            |	КОНЕЦ КАК ПолигонКатегорияСвободны
	            |ИЗ
	            |	ВТ_ПолигоныИКатегории КАК ВТ_ПолигоныИКатегории
	            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УжеНазначенныеПолигоныНаДругиеРейсы КАК ВТ_УжеНазначенныеПолигоныНаДругиеРейсы
	            |		ПО ВТ_ПолигоныИКатегории.Полигон = ВТ_УжеНазначенныеПолигоныНаДругиеРейсы.Полигон
	            |			И ВТ_ПолигоныИКатегории.КатегорияЗаказа = ВТ_УжеНазначенныеПолигоныНаДругиеРейсы.КатегорияЗаказа";
	Зап.УстановитьПараметр("СхемаПолигональнойМаршрутизации", ПолигональнаяСхемаКарты);
	Зап.УстановитьПараметр("Водитель", Водитель);
	Зап.УстановитьПараметр("Транспорт", Транспорт);
	Зап.УстановитьПараметр("СхемаЛогистическихБрейков", СхемаЛогистическихБрейков);
	Зап.УстановитьПараметр("Рейс", Рейс);
	Зап.УстановитьПараметр("ДатаРейса", НачалоДня(ДатаПланирования));
	//CeHbKA 01.03.2019 #2879
	Зап.УстановитьПараметр("СменаРейса", Рейс.СменаРейса);
	
	//+Степанов Задача № 3863
	ПолигоныИКатегории = Новый Соответствие;
	//-Степанов Задача № 3863
	
	Рез = Зап.Выполнить();
	
	Если Рез.Пустой() Тогда
		Сообщить("Для экипажа не настроены данные по умолчанию!!", СтатусСообщения.ОченьВажное);
		Возврат ПолигоныИКатегории
	КонецеСли;	
		
	Выб = Рез.Выбрать();
	
	Наб = РегистрыСведений.ПолигоныИКатегорииЗаказовДляРейсов.СоздатьНаборЗаписей();
	Наб.Отбор.Рейс.Установить(Рейс);
	
	Пока Выб.Следующий() Цикл
		Если Не Выб.ПолигонКатегорияСвободны Тогда
			Сообщить("Полигон " + СокрЛП(Выб.Полигон) + " и категория " + СокрЛП(Выб.КатегорияЗаказа) + " уже заняты другим транспортом! Назначение данных по умолчанию отменено!", СтатусСообщения.ОченьВажное);
			Возврат ПолигоныИКатегории
		КонецеСли;	
		
		//CeHbKA 01.03.2019 #2626
		Если (НЕ Смена.Пустая()) И (Смена <> Справочники.Смены.Смена1) Тогда
			
			Если Выб.ТипКатегорииЗаказа = Перечисления.ТипыЗаказов.Забор Тогда
				Продолжить;
			КонецЕсли; 
			
		КонецЕсли; 
		//CeHbKA 01.03.2019 #2626
		
		Нов = Наб.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Выб);
		Нов.Рейс = Рейс;
		Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		//CeHbKA #3179 06.06.2019
		Нов.Смена = Рейс.СменаРейса;
		//CeHbKA #3179 06.06.2019
		
		//+Степанов Задача № 3863
		//-Степанов Задача № 3863
		
	КонецЦикла;	
	
	Наб.Записать();
	Возврат ПолигоныИКатегории
КонецФункции


&НаКлиенте
Процедура УстановитьПолигоныИКатегорииПоУмолчанию(Команда)
	ОтветНаВопрос = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьПолигоныИКатегорииПоУмолчаниюЗавершение", ЭтотОбъект), "Для рейса будут установлены значения по умолчанию. Продолжить?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПолигоныИКатегорииПоУмолчаниюЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ОтветНаВопрос = РезультатВопроса;
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		//+Степанов Задача № 3863
		ПолигоныИКатегории = УстановитьПолигоныИКатегорииПоУмолчаниюНаСервере();
		//-Степанов Задача № 3863
		ВыполнитьИнициализациюДереваНаКлиенте();
		ДанныеМодифицированы = Истина;
		Если ДанныеМодифицированы Тогда
			//+Степанов Задача № 3863
			ДанныеПоРейсу = Новый Структура("Рейс, ПолигоныИКатегории", Рейс, ПолигоныИКатегории);
			Оповестить("ОбновитьДанныеПолигоновИЗаказовИДанныеРейсов_ПолигональнаяМаршрутизация", ДанныеПоРейсу);
			//-Степанов Задача № 3863
		КонецеСли;	
		
	КонецеСли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	//Если ДанныеМодифицированы Тогда
	//	Оповестить("ОбновитьДанныеПолигоновИЗаказовИДанныеРейсов_ПолигональнаяМаршрутизация");
	//КонецеСли;	
КонецПроцедуры

&НаСервере
Процедура УстановитьРежимВыводаСпискаПолигоновНаСервере()
	// Вставить содержимое обработчика.
	Элементы.ФормаУстановитьРежимВыводаСпискаПолигонов.Пометка = Не Элементы.ФормаУстановитьРежимВыводаСпискаПолигонов.Пометка;
	СкрыватьУжеПривязанныеПолигоныВФормеПривязкиПолигонов = Элементы.ФормаУстановитьРежимВыводаСпискаПолигонов.Пометка;
	УстановкаУсловногоОформленияСпискаПолигонов();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимВыводаСпискаПолигонов(Команда)
	УстановитьРежимВыводаСпискаПолигоновНаСервере();
КонецПроцедуры

//+Степанов Задача № 3863
&НаСервереБезКонтекста
Процедура ДобавитьПолигоныИЗаказыВДанныеОповещения_Старая(СоответствиеПолигоновИКатегорий, Полигон, Категория)
	ДанныеПолигона = СоответствиеПолигоновИКатегорий.Получить(Полигон);
	Если ДанныеПолигона <> Неопределено Тогда
		ДанныеПолигона.Добавить(Категория);	
	Иначе
		МассивКатегорий = Новый Массив;
		МассивКатегорий.Добавить(Категория);
		СоответствиеПолигоновИКатегорий.Вставить(Полигон, МассивКатегорий);
	КонецЕсли;		
КонецПроцедуры	

&НаКлиенте
Процедура ИзменениеДанныхОповещения(Полигон, Категория, ПомещатьВРейс)
	Помещаемые = ДанныеОповещения.КПривязке;
	Отвязываемые = ДанныеОповещения.КОтвязке;
	Если ПомещатьВРейс Тогда
		ПоместитьКатегориюВДанныеОповещения(Полигон, Категория, Помещаемые, Отвязываемые);
	Иначе	
		ПоместитьКатегориюВДанныеОповещения(Полигон, Категория, Отвязываемые, Помещаемые);
	КонецЕсли;	
КонецПроцедуры	

//Проверяем есть ли полигон и категория в соответствии, обратном значению флажка, если есть, то значит флажок уже меняли, элемент надо удалить.
&НаКлиенте
Процедура ПоместитьКатегориюВДанныеОповещения(Полигон, Категория, СоответствиеДляПомещения, СоответствиеКонтроляПовторногоИзмененияФлажка)
	ЭлементСоответствияКонтроля = СоответствиеКонтроляПовторногоИзмененияФлажка[Полигон];
	ЭлементСоответствияДляПомещения = СоответствиеДляПомещения[Полигон];
	Если ЭлементСоответствияКонтроля <> Неопределено Тогда
		НайденнаяКатегория = ЭлементСоответствияКонтроля.Найти(Категория);
		Если НайденнаяКатегория <> Неопределено Тогда
			ЭлементСоответствияКонтроля.Удалить(НайденнаяКатегория);
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Если ЭлементСоответствияДляПомещения <> Неопределено Тогда
		Если ЭлементСоответствияДляПомещения.Найти(Категория) = Неопределено Тогда
			ЭлементСоответствияДляПомещения.Добавить(Категория);
		КонецЕсли;	
	Иначе	
		МассивКатегорий = Новый Массив;
		МассивКатегорий.Добавить(Категория);
		СоответствиеДляПомещения.Вставить(Полигон, МассивКатегорий)
	КонецЕсли;	
КонецПроцедуры	
