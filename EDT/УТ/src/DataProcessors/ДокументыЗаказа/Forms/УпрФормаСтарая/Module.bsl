//&НаСервере
//&НаКлиенте
Процедура ОчиститьДанные()
	Объект.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	Объект.Машина = Справочники.новаТранспорт.ПустаяСсылка();
	Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.ПустаяСсылка();
	Объект.СуммаЗаказа = 0;
	Объект.Телефон = Справочники.ТелефонныеАппараты.ПустаяСсылка();
	Объект.НомерДляСклада = 0;
	Объект.ТипОплаты = Справочники.ТипыОплат.ПустаяСсылка();
	Объект.ОтсутствуетНаСкладе = Ложь;
	Объект.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ПустаяСсылка();
	Объект.Клиент = Справочники.Контрагенты.ПустаяСсылка();
	Объект.Доставка = БизнесПроцессы.новаМестнаяДоставка.ПустаяСсылка();
	Объект.Реализация = Документы.РеализацияТоваровУслуг.ПустаяСсылка();
	Объект.ВладелецТовара = Справочники.Контрагенты.ПустаяСсылка();
	Объект.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ПустаяСсылка();
КонецПроцедуры	

Функция ПолучитьДокументы(Номер)
	ОчиститьДанные();
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
                |   РеализацияТоваровУслуг.Ссылка КАК Документ,
                |   ЛОЖЬ КАК Параметр,
                |   ТипыОплат.Ссылка КАК Параметр2,
                |   NULL КАК Параметр3,
                |   РеализацияТоваровУслуг.Номер КАК Параметр4,
                |   РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК Параметр5
                |ИЗ
                |   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
                |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
                |       ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
                |ГДЕ
                |   РеализацияТоваровУслуг.Номер = &Номер
                |
                |СГРУППИРОВАТЬ ПО
                |   РеализацияТоваровУслуг.Ссылка,
                |   ТипыОплат.Ссылка,
                |   РеализацияТоваровУслуг.Номер,
                |   РеализацияТоваровУслуг.НомерВнешнегоЗаказа
                |
                |ОБЪЕДИНИТЬ ВСЕ
                |
                |ВЫБРАТЬ
                |   новаМестнаяДоставка.Ссылка,
                |   ЛОЖЬ,
                |   NULL,
                |   NULL,
                |   NULL,
                |   NULL
                |ИЗ
                |   БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
                |ГДЕ
                |   новаМестнаяДоставка.Номер = &Номер
                |
                |СГРУППИРОВАТЬ ПО
                |   новаМестнаяДоставка.Ссылка
                |
                |ОБЪЕДИНИТЬ ВСЕ
                |
                |ВЫБРАТЬ
                |   новаЗаданияРейсов.Рейс.Ссылка,
                |   новаЗаданияРейсов.Рейс.Завершен,
                |   ТелефонныеАппаратыТранспортаСрезПоследних.ТА.Ссылка,
                |   новаЗаданияРейсов.Рейс.Транспорт.НомерЛог,
                |   NULL,
                |   NULL
                |ИЗ
                |   РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
                |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТелефонныеАппаратыТранспорта.СрезПоследних(&ДатаЗапроса, ) КАК ТелефонныеАппаратыТранспортаСрезПоследних
                |       ПО новаЗаданияРейсов.Рейс.Транспорт.Ссылка = ТелефонныеАппаратыТранспортаСрезПоследних.Транспорт.Ссылка
                |ГДЕ
                |   новаЗаданияРейсов.Доставка.Номер = &Номер
                |
                |СГРУППИРОВАТЬ ПО
                |   новаЗаданияРейсов.Рейс.Ссылка,
                |   новаЗаданияРейсов.Рейс.Завершен,
                |   ТелефонныеАппаратыТранспортаСрезПоследних.ТА.Ссылка,
                |   новаЗаданияРейсов.Рейс.Транспорт.НомерЛог";
				
	Зап.УстановитьПараметр("Номер", Формат(Номер, "ЧГ="));	
	Зап.УстановитьПараметр("ДатаЗапроса", КонецДня(ТекущаяДата()));	
	
	Рез = Зап.Выполнить().Выгрузить();
	
	Маш = Неопределено;
	ПослДатаЗ = Неопределено;
	ПослДата = Неопределено;
	МашЗакр = Неопределено;
	ТА = "";
	НомЛ = "";
	
	Объект.Доставка = БизнесПроцессы.новаМестнаяДоставка.ПустаяСсылка();
	Объект.Реализация = Документы.РеализацияТоваровУслуг.ПустаяСсылка();
	
	Для Каждого Тек Из Рез Цикл
		Если ТипЗнч(Тек.Документ) = Тип("БизнесПроцессСсылка.новаМестнаяДоставка") Тогда
			Объект.Доставка = Тек.Документ.Ссылка;
		КонецЕсли;	
		Если ТипЗнч(Тек.Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Объект.Реализация = Тек.Документ;
			Объект.Контрагент = Тек.Параметр3;
			Объект.СуммаЗаказа = Тек.Документ.Товары.Итог("Сумма");
			Объект.ТипОплаты = Тек.параметр2;
			Объект.НомерВнешнегоЗаказа = Тек.параметр5;
			Объект.Номер = Тек.параметр4;
		КонецЕсли;	
		
		Если ТипЗнч(Тек.Документ) = Тип("БизнесПроцессСсылка.новаРейсМестнойДоставки") Тогда
			Если Не Тек.Параметр Тогда
				Если ПослДата = Неопределено Тогда
					ПослДата = Тек.Документ.Дата;
					Маш = Тек.Документ.Транспорт;
					ТА = Тек.Параметр2;
					НомЛ = Тек.Параметр3;
				ИначеЕсли ПослДата < Тек.Документ.Дата Тогда
					ПослДата = Тек.Документ.Дата;
					Маш = Тек.Документ.Транспорт;
					ТА = Тек.Параметр2;
					НомЛ = Тек.Параметр3;					
				КонецеСли;	
			Иначе
				Если ПослДатаЗ = Неопределено Тогда
					ПослДатаЗ = Тек.Документ.Дата;
					МашЗакр = Тек.Документ.Транспорт;
					ТА = Тек.Параметр2;
					НомЛ = Тек.Параметр3;					
				ИначеЕсли ПослДатаЗ < Тек.Документ.Дата Тогда
					ПослДатаЗ = Тек.Документ.Дата;
					МашЗакр = Тек.Документ.Транспорт;
					ТА = Тек.Параметр2;
					НомЛ = Тек.Параметр3;					
				КонецеСли;	
			КонецеСли;
		КонецЕсли;	
	КонецЦикла;	
	
	
	Если Маш <> Неопределено Тогда
		Объект.Машина = Маш;
		Объект.Телефон = ТА;
		Объект.НомерДляСклада = НомЛ;
	Иначе
		Если МашЗакр = Неопределено Тогда
			Объект.Машина = Справочники.новаТранспорт.ПустаяСсылка();
			Объект.Телефон = Справочники.ТелефонныеАппараты.ПустаяСсылка();
			Объект.НомерДляСклада = 0;
		Иначе
			Объект.Машина = МашЗакр;
			Объект.Телефон = ТА;
			Объект.НомерДляСклада = НомЛ;
		КонецеСли;
	КонецеСли;	
	
	
	
	Объект.ДокументыСписок.Очистить();
	Объект.ДокументыСписок.Загрузить(Рез);
	Объект.СтатусЗаказа = СтатусЗаказа(Номер);
	Если Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда
		Элементы.СтатусЗаказа.ЦветТекста = WebЦвета.ЛимонноЗеленый;
	ИначеЕсли Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
		Элементы.СтатусЗаказа.ЦветТекста = WebЦвета.Красный;	
	ИначеЕсли Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
		Элементы.СтатусЗаказа.ЦветТекста = WebЦвета.ЛососьСветлый;	
	КонецеСли;	
	
	Объект.РезультатДоставки = ПолучитьТекущийСтатусСамовывоза();
    
    //+++++Серегин М.В. 12.01.2016 11:26:00 не стал морочить голову 
	Объект.НомерДляСклада = НомерПалетты(Формат(Номер, "ЧГ="));
    //-----Серегин М.В. 12.01.2016 11:26:02 
	
	Возврат рез;
КонецФункции

&НаСервере
Функция НомерПалетты(Номер)

    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   РейсЗаказы.Ссылка.НомерПалетты
        |ИЗ
        |   Документ.Рейс.Заказы КАК РейсЗаказы
        |ГДЕ
        |   ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг).Номер = &Номер";
    
    Запрос.УстановитьПараметр("Номер", Номер);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат ВыборкаДетальныеЗаписи.НомерПалетты;
    Иначе
        Возврат 0;
    КонецЕсли;
    

КонецФункции // ()


&НаКлиенте
Функция ВернутьДокументПоНомеруСтроки(НомерСтроки)
	Возврат Объект.ДокументыСписок[НомерСтроки].Документ;
КонецФункции	
//&НаКлиенте
Функция СтатусЗаказа(Номер)
	Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.ПустаяСсылка();
	Объект.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ПустаяСсылка();
	
	//Если Объект.Доставка.Пустая() Тогда
	//	Возврат Неопределено;
	//КонецеСли;	
	Если Объект.Реализация.Пустая() Тогда
		Возврат Неопределено;
	КонецеСли;	
	
	//Зап = Новый Запрос;
	//Зап.Текст = "ВЫБРАТЬ
	//            |	СостоянияЗаказовСрезПоследних.РезультатДоставки,
	//            |	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения,
	//            |	СостоянияЗаказовСрезПоследних.ПричинаОтказа
	//            |ИЗ
	//            |	РегистрСведений.СостоянияЗаказов.СрезПоследних(&ДатаЗапроса, ) КАК СостоянияЗаказовСрезПоследних
	//            |ГДЕ
	//            |	СостоянияЗаказовСрезПоследних.Доставка = &Доставка";
	//Зап.УстановитьПараметр("Доставка", Объект.Доставка);			
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	СостоянияЗаказовСрезПоследних.РезультатДоставки,
	            |	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения,
	            |	СостоянияЗаказовСрезПоследних.ПричинаОтказа
	            |ИЗ
	            |	РегистрСведений.СостоянияЗаказов.СрезПоследних(&ДатаЗапроса, ) КАК СостоянияЗаказовСрезПоследних
	            |ГДЕ
	            |	СостоянияЗаказовСрезПоследних.Заказ = &Заказ";
	Зап.УстановитьПараметр("Заказ", Объект.Реализация);			
	Зап.УстановитьПараметр("ДатаЗапроса", ТекущаяДата());
	Выб = зап.Выполнить().Выбрать();
	Если Выб.Следующий() Тогда
		Объект.СтатусЗаказа = Выб.РезультатДоставки;
		Объект.ПричинаНевыполнения = Выб.ПричинаНевыполнения;
		Возврат Выб.РезультатДоставки;
	Иначе
		Возврат Справочники.новаРезультатМестнойДоставки.ПустаяСсылка();
	КонецЕсли;	
	//
	//Зап = Новый Запрос;
	//Зап.Текст
	//
	//
	//Ст2 = РегистрыСведений.ОтсутствующиеНаСкладеДоставки.ПолучитьПоследнее(ТекущаяДата(), Струк);
	//
	//
	//
	//Объект.ОтсутствуетНаСкладе = Ст2.ОтсутствуетНаСкладе;
	
КонецФункции

&НаКлиенте
Функция НомерЗаказаПоВнешнемуНомеру(Номер)
	Если ЗначениеЗаполнено(Номер) Тогда
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Номер Как Номер
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа = &НомерВнешнегоЗаказа";
		Зап.УстановитьПараметр("НомерВнешнегоЗаказа", СокрЛП(Номер));			
		Рез = Зап.Выполнить().Выгрузить().ВыгрузитьКолонку("Номер");
		Если Рез.Количество() = 1 Тогда
			ПолучитьДокументы(Рез[0]);
			Для Сч = 0 По Рез.Количество() - 1 Цикл
				Рез[Сч] = СокрЛП(Рез[Сч]);
			КонецЦикла;	
		Иначе
			ЗапПодобныхНомеров = Новый Запрос;
			ЗапПодобныхНомеров.Текст = "ВЫБРАТЬ
			                           |	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК НомерМагазина,
			                           |	РеализацияТоваровУслуг.Номер КАК НомерСтрижа,
			                           |	РеализацияТоваровУслуг.Дата,
			                           |	ЕСТЬNULL(СостоянияЗаказовСрезПоследних.РезультатДоставки, """") КАК Результат,
			                           |	ЕСТЬNULL(СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения, """") КАК ПричинаНеВыполнения,
			                           |	ЕСТЬNULL(СостоянияЗаказовСрезПоследних.ПричинаОтказа, """") КАК ПричинаОтказа,
			                           |	РеализацияТоваровУслуг.ВладелецТовара,
			                           |	РеализацияТоваровУслуг.Контрагент
			                           |ИЗ
			                           |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
			                           |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
			                           |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&ДатаЗапроса, ) КАК СостоянияЗаказовСрезПоследних
			                           |			ПО новаМестнаяДоставка.Ссылка = СостоянияЗаказовСрезПоследних.Доставка.Ссылка
			                           |		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
			                           |ГДЕ
			                           |	РеализацияТоваровУслуг.НомерВнешнегоЗаказа ПОДОБНО &НомерВнешнегоЗаказа
			                           |
			                           |УПОРЯДОЧИТЬ ПО
			                           |	РеализацияТоваровУслуг.Дата УБЫВ,
			                           |	НомерМагазина УБЫВ";
			ЗапПодобныхНомеров.УстановитьПараметр("НомерВнешнегоЗаказа", "%" + СокрЛП(Номер) + "%");			
			ЗапПодобныхНомеров.УстановитьПараметр("ДатаЗапроса", КонецДня(ТекущаяДата()));			
			РезП = ЗапПодобныхНомеров.Выполнить().Выгрузить();
			Если РезП.Количество() <> 0 Тогда
				Если РезП.Количество() > 1 Тогда
					ВыбСтр = Неопределено;
					ВыбСтр = РезП.ВыбратьСтроку("Выберите заказ..");
					Если ВыбСтр <> Неопределено Тогда
						Рез = Новый Массив;
						Рез.Добавить(СокрЛП(ВыбСтр.НомерСтрижа));
						Объект.Номер = СокрЛП(ВыбСтр.НомерСтрижа);
					Иначе
						Рез = Новый Массив;
					КонецеСли;	
				Иначе
					Рез = Новый Массив;
					Рез.Добавить(СокрЛП(РезП[0].НомерСтрижа));
					Объект.Номер = СокрЛП(РезП[0].НомерСтрижа);
				КонецеСли;
			Иначе
				Рез = Новый Массив;
			КонецеСли;	
		КонецеСли;
	Иначе
		Рез = Новый Массив;
	КонецЕСли;
	СписокДоков.Параметры.УстановитьЗначениеПараметра("МасНомер", Рез);
    //СписокЗадач.Параметры.УстановитьЗначениеПараметра("МасНомер", Рез);
    //СписокДатПереноса.Параметры.УстановитьЗначениеПараметра("МасНомер", Рез);
    //СписокЧеков.Параметры.УстановитьЗначениеПараметра("МасНомер", Рез);
    //ОшибкиЗагрузки.Параметры.УстановитьЗначениеПараметра("МасНомер", Рез);
    //Статусы.Параметры.УстановитьЗначениеПараметра("МасНомер", Рез);
	
	
	Элементы.СписокДоков.Обновить();
    //Элементы.СписокДатПереноса.Обновить();
    //Элементы.СписокЗадач.Обновить();
    //Элементы.ОшибкиЗагрузки.Обновить();
    //Элементы.Статусы.Обновить();
	УстановитьПометкуВыполненного();
   Элементы.ГруппаВкладок.ТекущаяСтраница = Элементы.Документы; 
КонецФункции

&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Рез = ПолучитьДокументы(Объект.Номер);
    
    //Серегин М.В. 10.08.2015 18:24:53 
    Если Рез.Количество() > 0 Тогда 
        Элементы.ФормаПодгрузитьИзАдминки.Доступность = Ложь;
    Иначе
        Элементы.ФормаПодгрузитьИзАдминки.Доступность = Истина;
    КонецЕсли;
    //Серегин М.В. 10.08.2015 18:24:55
    
	Мас = Новый Массив;
	Мас.Добавить(Формат(Объект.Номер, "ЧГ="));
	СписокДоков.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
    //СписокЗадач.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
    //СписокДатПереноса.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
    //СписокЧеков.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
    //
    //ОшибкиЗагрузки.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
    //Статусы.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
	
	Элементы.СписокДоков.Обновить();
    //Элементы.СписокЗадач.Обновить();
    //Элементы.СписокДатПереноса.Обновить();
    //Элементы.ОшибкиЗагрузки.Обновить();
    //Элементы.Статусы.Обновить();
    //СохранитьПоискВИсторию(Объект.Номер);
	УстановитьПометкуВыполненного();
    
   Элементы.ГруппаВкладок.ТекущаяСтраница = Элементы.Документы; 
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуВыполненного()
	если Объект.Доставка.Пустая() И Не Объект.Реализация.Пустая() Тогда
		Элементы.ФормаВыполнен.Доступность = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ПравоПометкиСамовывоза");
		
		Если Объект.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда
			Элементы.ФормаВыполнен.Пометка = Истина;
		Иначе
			Элементы.ФормаВыполнен.Пометка = Ложь;
		КонецеСли;	
	Иначе
		Элементы.ФормаВыполнен.Доступность = Ложь;
		Элементы.ФормаВыполнен.Пометка = Ложь;
	КонецеСли;	
КонецПроцедуры	


&НаКлиенте
Процедура ДокументыСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЭтоЛогист") Тогда
		Возврат;
	КонецЕСли;	
		
	Если ВыбраннаяСтрока <> Неопределено Тогда
		Д = Элемент.ТекущиеДанные.Документ;
		ТЗ = ТипЗнч(Д);
		Ф = Неопределено;
		Если ТЗ = Тип("ДокументСсылка.РеализацияТоваровУслуг")
			Или ТЗ = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
			Или ТЗ = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
			Или ТЗ = Тип("ДокументСсылка.ОприходованиеТоваров")
			Или ТЗ = Тип("ДокументСсылка.СписаниеТоваров")
			Или ТЗ = Тип("ДокументСсылка.КорректировкаПоступления")
			Или ТЗ = Тип("ДокументСсылка.ЗакрытиеЗаказов")
			Или ТЗ = Тип("ДокументСсылка.новаОтчетВодителя")
			Или ТЗ = Тип("ДокументСсылка.ЗаборТовара")
			Или ТЗ = Тип("ДокументСсылка.Фрахт")
			Или ТЗ = Тип("ДокументСсылка.ПеремещениеТоваров")
			Или ТЗ = Тип("ДокументСсылка.ИзменениеДатыДоставки")
			Или ТЗ = Тип("ДокументСсылка.ПереносДоставок")
			Или ТЗ = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
			Или ТЗ = Тип("ДокументСсылка.Накладная003")
			Или ТЗ = Тип("ДокументСсылка.СнятиеДоставокСПланирования_КУдалению")			
			Или ТЗ = Тип("ДокументСсылка.ДобавлениеДоставок") 
			Или ТЗ = Тип("ДокументСсылка.ЗагрузкаСТСД") Тогда
			Ф = Д.ПолучитьФорму("ФормаДокумента");
			если ТЗ = Тип("ДокументСсылка.ЗакрытиеЗаказов") Тогда
				 Ф = Д.ПолучитьФорму("ФормаДокументаСПоказателями");
			КонецеСли;	 
		ИначеЕсли ТЗ = Тип("БизнесПроцессСсылка.новаМестнаяДоставка") Тогда
            Ф = Д.ПолучитьФорму("ФормаБизнесПроцесса");
		ИначеЕсли ТЗ = Тип("БизнесПроцессСсылка.новаРейсМестнойДоставки") Тогда
            Ф = Д.ПолучитьФорму("ФормаБизнесПроцесса");
		КонецеСли;	
		Если Ф <> Неопределено Тогда
			Ф.Открыть();
		КонецеСли;	
	КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыСписокПередУдалением(Элемент, Отказ)
	// Вставить содержимое обработчика.
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	// Вставить содержимое обработчика.
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НомерВнешнегоЗаказаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	НомерЗаказаПоВнешнемуНомеру(Объект.НомерВнешнегоЗаказа); 
	СохранитьПоискВИсторию(,Объект.НомерВнешнегоЗаказа);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ДокументыСписок.ТолькоПросмотр = Истина;
	Мас = Новый Массив;
	Мас.Добавить(Формат(Объект.Номер, "ЧГ="));
	
	СписокДоков.Параметры.УстановитьзНАчениеПараметра("МасНомер", Мас);
	СписокДатПереноса.Параметры.УстановитьзНАчениеПараметра("МасНомер", Мас);
	СписокЗадач.Параметры.УстановитьзНАчениеПараметра("МасНомер", Мас);
	СписокЧеков.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
	ОшибкиЗагрузки.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
	Статусы.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
	СтатусыСкладскогоУчета.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
	// Михушкин --->> 
	СтатусыЗаказовАкси.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
	СостоянияЗаказа.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
	// <<--- Михушкин 	
	НаборныеВедомости.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
	Если Не ЗначениеЗаполнено(РежимОтбора) Тогда
		РежимОтбора = 1;
	КонецеСли;	
	Элементы.ФормаИзменениеСтатусаЗаказа.Доступность = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ПравоИзмененияСтатусаЗаказов");
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТабличныйДокументЗаказа(Таб, Доставка, Номер, МасДос)
	Печ = Обработки.ПечатьБланковЗаказов.Создать();
	Печ.ПечатьПоДоставке(Таб, Доставка, Номер, масДос, Неопределено);
	Возврат Таб;
КонецФункции	

&НаКлиенте
Функция ПолучитьТабличныйДокументЗаказаСамовывоз(Таб, Доставка, Номер, МасДос)
	Печ = Обработки.ПечатьБланковЗаказов.Создать();
	Печ.ПечатьПоДоставкеСамовывоз(Таб, Доставка, Номер, масДос, Неопределено);
	Возврат Таб;
КонецФункции	

&НаКлиенте
Функция ПолучитьТабличныйДокументЗаказаВыбор(Таб, Доставка, Номер, МасДос)
	Печ = Обработки.ПечатьБланковЗаказов.Создать();
	Печ.ВыборПечати(Таб, Доставка, Номер, масДос, Неопределено);
	Возврат Таб;
КонецФункции	

&НаКлиенте
Процедура НапечатататьЗаказ(Команда)
	ОснТип = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнойТипЗаказа");
	
	Т = Новый ТабличныйДокумент;
	Д = Неопределено;
	
	Если ОснТип = Перечисления.ТипыЗаказов.Доставка Тогда
		Для Каждого Тек Из Объект.ДокументыСписок Цикл
			Если ТипЗнч(Тек.Документ) = Тип("БизнесПроцессСсылка.новаМестнаяДоставка") Тогда
				Д = Тек.Документ;
			КонецЕсли;	
		КонецЦикла;	
		Если Д <> Неопределено Тогда
			ПолучитьТабличныйДокументЗаказа(Т, Д, СокрЛП(Д.Номер), 0);
			Т.Показать();
		КонецеСлИ;
	ИначеЕсли ОснТип = Перечисления.ТипыЗаказов.Самовывоз Тогда
		Для Каждого Тек Из Объект.ДокументыСписок Цикл
			Если ТипЗнч(Тек.Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				Д = Тек.Документ;
			КонецЕсли;	
		КонецЦикла;	
		Если Д <> Неопределено Тогда
			ПолучитьТабличныйДокументЗаказаСамовывоз(Т, Д, СокрЛП(Д.Номер), 0);
			Т.Показать();
		КонецеСлИ;
	Иначе
		Для Каждого Тек Из Объект.ДокументыСписок Цикл
			Если ТипЗнч(Тек.Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				Д = Тек.Документ;
			КонецЕсли;	
		КонецЦикла;	
		Если Д <> Неопределено Тогда
			ПолучитьТабличныйДокументЗаказаВыбор(Т, Д, СокрЛП(Д.Номер), 0);
			Т.Показать();
		КонецеСлИ;
	КонецеСли;
КонецПроцедуры

&НаКлиенте
Процедура СписокДоковВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ЭтоЛогист") Тогда
		Возврат;
	КонецЕСли;	
		
	Если ВыбраннаяСтрока <> Неопределено Тогда
		Д = Элемент.ТекущиеДанные.Документ;
		ТЗ = ТипЗнч(Д);
		Ф = Неопределено;
		Если ТЗ = Тип("ДокументСсылка.РеализацияТоваровУслуг")
			Или ТЗ = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
			Или ТЗ = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
			Или ТЗ = Тип("ДокументСсылка.ОприходованиеТоваров")
			Или ТЗ = Тип("ДокументСсылка.СписаниеТоваров")
			Или ТЗ = Тип("ДокументСсылка.КорректировкаПоступления")
			Или ТЗ = Тип("ДокументСсылка.ЗакрытиеЗаказов")
			Или ТЗ = Тип("ДокументСсылка.новаОтчетВодителя")
			Или ТЗ = Тип("ДокументСсылка.ЗаборТовара")
			Или ТЗ = Тип("ДокументСсылка.Фрахт")
			Или ТЗ = Тип("ДокументСсылка.ПеремещениеТоваров")
			Или ТЗ = Тип("ДокументСсылка.ИзменениеДатыДоставки")
			Или ТЗ = Тип("ДокументСсылка.ПереносДоставок")
			Или ТЗ = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
			Или ТЗ = Тип("ДокументСсылка.ПечатьЧековПоДоставкам")
			Или ТЗ = Тип("ДокументСсылка.ОперацииПоДоставкам")
			Или ТЗ = Тип("ДокументСсылка.ВозвратТоваровПоставщикуОтказОтПозиций")
			Или ТЗ = Тип("ДокументСсылка.Накладная003")
			Или ТЗ = Тип("ДокументСсылка.СнятиеДоставокСПланирования")
			Или ТЗ = Тип("ДокументСсылка.ДанныеЗаказаВодителя")
			Или ТЗ = Тип("ДокументСсылка.ДоставкиСОтклонениямиКоличестваСписком")
			Или ТЗ = Тип("ДокументСсылка.ДобавлениеДоставок") 
			Или ТЗ = Тип("ДокументСсылка.ПриходДСПоОтчетуВодителя") 
			Или ТЗ = Тип("ДокументСсылка.НаборнаяВедомостьДляВозврата") 
			Или ТЗ = Тип("ДокументСсылка.ДанныеЗаказаСамовывоза")
            Или ТЗ = Тип("ДокументСсылка.ЗагрузкаСТСД")
            Или ТЗ = Тип("ДокументСсылка.ФактическийПриходЗаказовНаСклад")
            Или ТЗ = Тип("ДокументСсылка.ПриходЗаказовНаСклад")
			Или ТЗ = Тип("ДокументСсылка.УстановкаСтатусовСкладскогоУчета")
            ИЛИ ТЗ = Тип("ДокументСсылка.Рейс")
            Тогда
			Ф = Д.ПолучитьФорму("ФормаДокумента");
			если ТЗ = Тип("ДокументСсылка.ЗакрытиеЗаказов") Тогда
				 Ф = Д.ПолучитьФорму("ФормаДокументаСПоказателями");
				 Ф.ИскомыйНомер = Формат(Объект.Номер, "ЧГ=");
			КонецеСли;	 
		ИначеЕсли ТЗ = Тип("БизнесПроцессСсылка.новаМестнаяДоставка") Тогда
            Ф = Д.ПолучитьФорму("ФормаБизнесПроцесса");
		ИначеЕсли ТЗ = Тип("БизнесПроцессСсылка.новаРейсМестнойДоставки") Тогда
            Ф = Д.ПолучитьФорму("ФормаБизнесПроцесса");
		КонецеСли;	
		Если Ф <> Неопределено Тогда
			Ф.Открыть();
		КонецеСли;	
	КонецеСли;	
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура РежимОтбораПриИзменении(Элемент)
	Если РежимОтбора = 1 Тогда
		СписокДоков.Отбор.элементы[0].Использование = Ложь;
		СписокДоков.Отбор.элементы[1].Использование = Ложь;
	ИначеЕсли РежимОтбора = 2 Тогда	
		СписокДоков.Отбор.элементы[0].Использование = Ложь;
		СписокДоков.Отбор.элементы[1].Использование = Истина;
	ИначеЕсли РежимОтбора = 3 Тогда	
		СписокДоков.Отбор.элементы[0].Использование = Истина;
		СписокДоков.Отбор.элементы[1].Использование = Ложь;		
	КонецеСли;	
	Элементы.СписокДоков.Обновить();
	Элементы.СписокЗадач.Обновить();
	Элементы.СписокДатПереноса.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектКлиентПриИзменении(Элемент)
	//+Широков задача 4495 18.03.2021
	//Об = Обработки.ОткрытыеСамовывозы.Создать();
	Об = Обработки.ОткрытыеСамовывозы_не_используется.Создать();
	//-Широков задача 4495 18.03.2021
	Рез = Об.ОбновитьДанныеПоКлиенту(Объект.Клиент);
	Таб = Рез.Выгрузить();
	
	Если Таб.Количество() = 1 тогда
		Объект.Номер = Таб[0].Номер;
		НомерПриИзменении(Неопределено);
	ИначеЕСли Таб.Количество() > 1 Тогда	
		ВыбТаб = Новый ТаблицаЗначений;
		ВыбТаб.Колонки.Добавить("Клиент");
		ВыбТаб.Колонки.Добавить("Магазин");
		ВыбТаб.Колонки.Добавить("Дата");
		ВыбТаб.Колонки.Добавить("Номер");
		ВыбТаб.Колонки.Добавить("ВнешнийНомер");
		Для Сч = 0 По Таб.Количество() - 1 Цикл
			Нов = ВыбТаб.Добавить();
			Нов.Номер = Таб[Сч].Номер;
			Нов.ВнешнийНомер = Таб[Сч].НомерВнешнегоЗаказа;
			Нов.Дата = Таб[Сч].Дата;
			Нов.Клиент = Таб[Сч].Клиент;
			Нов.Магазин = Таб[Сч].Магазин;
		КонецЦикла;	
		
		ВыбСтр = ВыбТаб.ВыбратьСтроку("Уточните номер...");
		Если ВыбСтр <> Неопределено Тогда
			Объект.Номер = ВыбСтр.Номер;
			НомерПриИзменении(Неопределено);
		КонецеСли;	
	КонецеСли;
КонецПроцедуры

&НаКлиенте
Процедура НазадПоИсторииПоиска(Команда)
	Если Объект.ИсторияПоиска.Количество() <> 0 Тогда
		Если Объект.ТекущийИндексПоиска <> 1 Тогда
			Объект.ТекущийИндексПоиска = Объект.ТекущийИндексПоиска - 1;
			КомандаИстории(Элементы.Найти("Кнопка" + Формат(Объект.ТекущийИндексПоиска, "ЧГ=")));
		КонецеСли;	
	КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура ВпередПоИсторииПоиска(Команда)
	Если Объект.ИсторияПоиска.Количество() <> 0 Тогда
		Если Объект.ТекущийИндексПоиска <> Объект.ИсторияПоиска.Количество() Тогда
			Объект.ТекущийИндексПоиска = Объект.ТекущийИндексПоиска + 1;
			КомандаИстории(Элементы.Найти("Кнопка" + Формат(Объект.ТекущийИндексПоиска, "ЧГ=")));
		КонецеСли;	
	КонецеСли;	
КонецПроцедуры

&НаСервере
Процедура СохранитьПоискВИсторию(Номер = Неопределено, ВнешнийНомерЗаказа = Неопределено, Клиент = Неопределено)
	Если Номер = Неопределено И ВнешнийНомерЗаказа = Неопределено И Клиент = Неопределено Тогда
		Возврат;
	КонецеСли;	
	
	СнятьПометкиСКнопок();
	
	Заг = "";
	Струк = Новый Структура;
	
	Если Номер <> Неопределено Тогда
		Струк.Вставить("Номер", Номер);
		Най = Объект.ИсторияПоиска.НайтиСтроки(Струк);
	КонецеСли;	
	
	Если ВнешнийНомерЗаказа <> Неопределено Тогда
		Струк.Вставить("ВнешнийНомерЗаказа", ВнешнийНомерЗаказа);
		Най = Объект.ИсторияПоиска.НайтиСтроки(Струк);
	КонецеСли;	
	
	Если Клиент <> Неопределено Тогда
		Струк.Вставить("Клиент", Клиент);
		Най = Объект.ИсторияПоиска.НайтиСтроки(Струк);
	КонецеСли;	
	
	Если Най.Количество() = 0 Тогда
		Нов = Объект.ИсторияПоиска.Добавить();
		Если Номер <> Неопределено Тогда
			Нов.Номер = Число(Номер);
			Заг = Номер;
		КонецеСли;	
		
		Если ВнешнийНомерЗаказа <> Неопределено Тогда
			Нов.ВнешнийНомерЗаказа = ВнешнийНомерЗаказа;
			Заг = ВнешнийНомерЗаказа;
		КонецеСли;	
		
		Если Клиент <> Неопределено Тогда
			Нов.Клиент = Клиент;
			Заг = Клиент.Наименование;
		КонецеСли;	
		КомандаФормы  = Команды.Добавить("Кнопка" + Формат(Нов.НомерСтроки, "ЧГ="));
		КомандаФормы.Действие = "КомандаИстории";
		
		
		НоваяКнопка = Элементы.Добавить("Кнопка" + Формат(Нов.НомерСтроки, "ЧГ="), Тип("КнопкаФормы"), Элементы.История);
		НоваяКнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		НоваяКнопка.Заголовок = Заг;
		НоваяКнопка.ИмяКоманды = "Кнопка" + Формат(Нов.НомерСтроки, "ЧГ=");	
		НоваяКнопка.Пометка = Истина;
		Объект.ТекущийИндексПоиска = Нов.НомерСтроки;
	Иначе
		Кн = Элементы.Найти("Кнопка" + Формат(Най[0].НомерСтроки, "ЧГ="));
		Кн.Пометка = истина;
		Объект.ТекущийИндексПоиска = Най[0].НомерСтроки;
	КонецеСли;
	ПолучитьПодсказки(Объект.ТекущийИндексПоиска);
	Элементы.История.Подсказка = Заг;
Конецпроцедуры	

Процедура СнятьПометкиСКнопок()
	Для Каждого Тек Из Объект.ИсторияПоиска Цикл
		Кн = Элементы.Найти("Кнопка" + Формат(Тек.НомерСтроки, "ЧГ="));
		Кн.Пометка = Ложь;
	КонецЦикла;	
КонецПроцедуры	

//&НаКлиенте
Процедура ПолучитьПодсказки(Индекс)
	Элементы.ФормаНазадПоИсторииПоиска.Заголовок = ПолучитьПодсказкуПоиска(Индекс - 1);
	Элементы.ФормаВпередПоИстоииПоиска.Заголовок = ПолучитьПодсказкуПоиска(Индекс + 1);
КонецПроцедуры	

//&НаКлиенте
Функция ПолучитьПодсказкуПоиска(Индекс)
	Если Индекс = 0 Или Индекс > Объект.ИсторияПоиска.Количество() Тогда
		Возврат "пусто";
	Иначе
		Стр = Объект.ИсторияПоиска.Получить(Индекс - 1);
		Если ЗначениеЗаполнено(Стр.Номер) Тогда
			Возврат "Номер=" + Формат(Стр.Номер);
		ИначеЕсли ЗначениеЗаполнено(Стр.ВнешнийНомерЗаказа) Тогда
			Возврат "Внешний номер=" + Формат(Стр.ВнешнийНомерЗаказа);
		ИначеЕсли ЗначениеЗаполнено(Стр.Номер) Тогда
			Возврат "Клиент=" + Формат(Стр.Клиент.Наименование);
		КонецеСли;	
	КонецеСли;	
КонецФункции	

&НаКлиенте
Процедура КомандаИстории(Элемент)
	СнятьПометкиСКнопок();
	НомерСтроки = Сред(Элемент.Имя, 7, СтрДлина(Элемент.Имя) - 6);
	Строка = Объект.ИсторияПоиска.Получить(НомерСтроки - 1);
	Элементы.Найти(Элемент.Имя).Пометка = Истина;
	Если ЗначениеЗаполнено(Строка.Номер) Тогда
		Объект.Номер = Строка.Номер;
		Элементы.История.Подсказка = Строка.Номер;
		НомерПриИзменении(Неопределено);
	ИначеЕсли ЗначениеЗаполнено(Строка.ВнешнийНомерЗаказа) Тогда
		Объект.НомерВнешнегоЗаказа = Строка.ВнешнийНомерЗаказа;
		Элементы.История.Подсказка = Строка.ВнешнийНомерЗаказа;
		НомерВнешнегоЗаказаПриИзменении(Неопределено);
	КонецеСли;	
КонецПроцедуры	

&НаКлиенте
Процедура ОчиститьИсториюПоиска()
	Объект.ИсторияПоиска.Очистить();
	Для Сч = 0 По Элементы.История.ПодчиненныеЭлементы.Количество() - 1 Цикл
		ЭтаФорма.Элементы.Удалить(Элементы.История.ПодчиненныеЭлементы.Получить(Сч));
	КонецЦикла;	
КонецПроцедуры	

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	// Вставить содержимое обработчика.
	НомерПриИзменении(Неопределено);
КонецПроцедуры


&НаКлиенте
Функция ВыполненНаКлиенте()
	Если Не Объект.Реализация.Пустая() Тогда
		Ф = ПолучитьФорму("Документ.ДанныеЗаказаСамовывоза.ФормаОбъекта");
		Ф.Объект.Реализация = Объект.Реализация;
		Если Ф.ЗаполнитьДокумент() Тогда
			Ф.ОткрытьМодально();
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецеСли;	
	КонецЕсли;	
КонецФункции


Функция ПолучитьТекущийСтатусСамовывоза()
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ВыполненыеСамовывозыСрезПоследних.Результат
	            |ИЗ
	            |	РегистрСведений.ВыполненыеСамовывозы.СрезПоследних(&ТекДата, Заказ.Ссылка = &Реализация) КАК ВыполненыеСамовывозыСрезПоследних";
	Зап.УстановитьПараметр("Реализация", Объект.Реализация.Ссылка);
	Зап.УстановитьПараметр("ТекДата", КонецДня(ТекущаяДата()));
	Рез = Зап.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат Рез[0].Результат;
	КонецеСли;	
КонецФункции	

&НаКлиенте
Процедура Выполнен(Команда)
	// Вставить содержимое обработчика.
	Если Не Элементы.ФормаВыполнен.Пометка Тогда
		Если Не ВыполненНаКлиенте() Тогда
			Возврат;
		КонецеСли;		
	КонецеСли;	
	ВыполненНаСервере();
	УстановитьПометкуВыполненного();
КонецПроцедуры

Процедура УстановитьТекущийСтатусСамовывоза(Значение)
	ТекД = ТекущаяДата();
	
	Наб = РегистрыСведений.ВыполненыеСамовывозы.СоздатьНаборЗаписей();
	Наб.Отбор.Заказ.Установить(Объект.Реализация);
	Наб.Отбор.Период.Установить(ТекД);
	
	Нов = Наб.Добавить();
	Нов.Период = ТекД;
	Нов.Пользователь = глЗначениеПеременной("глТекущийПользователь");
	Нов.Результат = Значение;
	Нов.Заказ = Объект.Реализация;
	
	Наб.Записать();
	Объект.РезультатДоставки = Значение;
КонецПроцедуры	

Процедура ВыполненНаСервере()
	Если Не Объект.Реализация.Пустая() Тогда
		Значение = ?(Объект.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена, Справочники.новаРезультатМестнойДоставки.НеВыполнена, Справочники.новаРезультатМестнойДоставки.Выполнена);
		УстановитьТекущийСтатусСамовывоза(Значение);
	КонецеСли;		
КонецПроцедуры	


&НаКлиенте
Процедура ИзменениеСтатусаЗаказа(Команда)
	Если Объект.Реализация.Пустая() Тогда
		Возврат;
	КонецеСли;	
	Ф = ПолучитьФорму("Документ.ИзменениеСтатусаЗаказа.Форма.ФормаДокумента");
	Ф.Объект.Заказ = Объект.Реализация;
	Ф.ЗаказПриИзмененииНаСервере();
	Ф.ОткрытьМодально();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаВкладокПриСменеСтраницы(Элемент, ТекущаяСтраница)
    Мас = Новый Массив;
    Мас.Добавить(Формат(Объект.Номер, "ЧГ="));
    
    Если ТекущаяСтраница.Имя = "Задачи" Тогда
        Если  СписокЗадач.Параметры.Элементы[0].Значение[0]<>Мас[0] Тогда
            СписокЗадач.Параметры.УстановитьЗначениеПараметра("МасНомер", Мас);
            Элементы.СписокЗадач.Обновить();
		КонецЕсли;
	// Михушкин --->> 
	ИначеЕсли ТекущаяСтраница.Имя = "ГруппаСостоянияЗаказа" ИЛИ ТекущаяСтраница.Имя = "ГруппаСтатусыЗаказовАкси" Тогда
		//Если  СписокЗадач.Параметры.Элементы[0].Значение[0]<>Мас[0] Тогда
            ЭтаФорма[ТекущаяСтраница.ПодчиненныеЭлементы[0].Имя].Параметры.УстановитьзНАчениеПараметра("МасНомер", Мас);
            Элементы[ТекущаяСтраница.ПодчиненныеЭлементы[0].Имя].Обновить();
		//КонецЕсли;
	// <<--- Михушкин 	
    Иначе
        Если  ЭтаФорма[ТекущаяСтраница.ПодчиненныеЭлементы[0].Имя].Параметры.Элементы[0].Значение[0] <> Мас[0] Тогда
            ЭтаФорма[ТекущаяСтраница.ПодчиненныеЭлементы[0].Имя].Параметры.УстановитьзНАчениеПараметра("МасНомер", Мас);
            Элементы[ТекущаяСтраница.ПодчиненныеЭлементы[0].Имя].Обновить();
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НаборныеВедомостиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    Д = Элемент.ТекущиеДанные.Документ;
    Ф = Д.ПолучитьФорму("ФормаДокумента");
    Ф.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ПодгрузитьИзАдминки(Команда)
    ОбработкаОбмен = Обработки.ЗагрузкаИзИнтернетМагазина.Создать();
	Если ЗначениеЗаполнено(Объект.Номер)  Тогда
		Этапы = Новый Структура;
		Этапы.Вставить("ЗагрузитьЗаказыПоНомерам", Формат(Объект.Номер,"ЧГ="));
		ОбработкаОбмен.ВыполнитьЭтапы(Этапы);
        НомерПриИзменении(Неопределено);
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НапечататьДоставку(Команда)
		Для Каждого Тек Из Объект.ДокументыСписок Цикл
			Если ТипЗнч(Тек.Документ) = Тип("БизнесПроцессСсылка.новаМестнаяДоставка") Тогда
				Доставка = Тек.Документ;
			КонецЕсли;	
		КонецЦикла;	
        Если Доставка <> Неопределено Тогда
            ОбработкаПечати = Обработки.ПечатьБланковЗаказовНовый.Создать();
            ТабличныйДокумент= Новый ТабличныйДокумент;
            ОбработкаПечати.ПечатьПоДоставке(Доставка, ТабличныйДокумент);
            ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
            ТабличныйДокумент.АвтоМасштаб = Истина;
            ТабличныйДокумент.Показать();
		КонецеСлИ;
КонецПроцедуры


