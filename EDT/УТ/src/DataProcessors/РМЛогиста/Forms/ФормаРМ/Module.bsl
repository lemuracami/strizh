/////////////////////////////////////СОБЫТИЯ ФОРМЫ
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.ДатаПланирования = ТекущаяДата()+86400;
	Объект.Пользователь		= ПараметрыСеанса.ТекущийПользователь;
	
	РегионПараметрСеанса	= ПараметрыСеанса.ТерминалДоставки;
	Объект.Регион			= ?(НЕ РегионПараметрСеанса.Пустая(), РегионПараметрСеанса , Справочники.РегиональныеТерминалы.МоскваСтриж);
	
	//Элементы.Регион.ТолькоПросмотр			 = НЕ РегионПараметрСеанса.Пустая();
		
	ОбновитьДанныеФормыСервер();
	
	СоздатьФильтрПоРолямНаФорме();
	
	//Геннадий #3725 02.06.2022 ++
	ФильтрТранспортВРаботеПриИзмененииНаСервере();
	//Геннадий 02.06.2022 --
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеСотрудниковФильтрРольДействие(Команда)
	
	Кнопка = Элементы.ДанныеСотрудниковФильтрРоль.ПодчиненныеЭлементы[Команда.Имя];
	Кнопка.Пометка = НЕ Кнопка.Пометка;
		
	Если Кнопка.Пометка Тогда
		
		МассивСтрок = СоответствиеКнопокИРолей.НайтиСтроки(Новый Структура("ИмяКнопки", Команда.Имя));
		
		Для каждого ТекСтрока Из МассивСтрок Цикл
			СтруктураОтбора = Новый ФиксированнаяСтруктура("РольСотрудника", ТекСтрока.РольСотрудника);
		КонецЦикла; 
		
		Элементы.ДанныеСотрудников.ОтборСтрок = СтруктураОтбора;
		
	Иначе
		
		Элементы.ДанныеСотрудников.ОтборСтрок = Неопределено;
		
	КонецЕсли; 
	
	Для каждого КнопкаФильтра Из Элементы.ДанныеСотрудниковФильтрРоль.ПодчиненныеЭлементы Цикл
		
		Если КнопкаФильтра.Имя = Команда.Имя Тогда
			Продолжить;
		КонецЕсли;
		
		КнопкаФильтра.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры
 
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПересчитатьСтрокиТаблиц();		
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если Модифицированность Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаНаВопросОЗакрытии", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, "Изменения не записаны! Вы уверены, что хотите закрыть форму без записи данных?", РежимДиалогаВопрос.ДаНет,,,,);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросОЗакрытии(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли; 	
	
КонецПроцедуры // ПослеОтветаНаВопросОЗакрытии()

/////////////////////////////////////ЭЛЕМЕНТЫ ФОРМЫ
&НаКлиенте
Процедура ПриИзмененииДатыРегионаФильтраАвто(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	Если Модифицированность Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаНаВопросПерезаполнитьДанные", ЭтаФорма, Команда.Имя);
		ПоказатьВопрос(ОписаниеОповещения, "Перезаполнить данные?", РежимДиалогаВопрос.ДаНет,,,,);
	Иначе	
		ОбновитьДанныеФормыКлиент();
	КонецЕсли; 
		
КонецПроцедуры // ()

&НаКлиенте
Процедура ПослеОтветаНаВопросПерезаполнитьДанные(Результат, Источник) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		Заголовок = "РМ Логиста";	
		ОбновитьДанныеФормыКлиент();
	Иначе
		
		Если Источник <> "ФильтрТранспортВРаботе" Тогда //"ФильтрВРаботе" Тогда
			Объект[Источник] = ПредыдущееЗначение;	
		Иначе
			ФильтрТранспортВРаботе = ?(ФильтрТранспортВРаботе = 1, 0, 1);
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеТранспортаПриИзмененииЯчейки(Элемент)

	Модифицированность = Истина;
	Заголовок = "РМ Логиста <<ИЗМЕНЕНИЯ НЕ ЗАФИКСИРОВАНЫ>>";
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеТранспортаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если Поле.Имя = "ДанныеТранспортаВодитель" Тогда
		СтандартнаяОбработка = Ложь;
		
		ЗначениеОтбора = Новый Структура("Ссылка", СписокВодителейДляОтбора);
		ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
		
		//Геннадий #3727 19.05.2022 ++
		ДопПараметры 	= Новый Структура();//"ВыбраннаяСтрока", ВыбраннаяСтрока);
		Оповещение 		= Новый ОписаниеОповещения("ОбработатьВыборВодителя", ЭтотОбъект, ДопПараметры); // Прописываем название процедуры-обработчика.
	
		ОткрытьФорму("Обработка.РМЛогиста.Форма.ФормаВыбораВодителя", ПараметрыВыбора,Элементы.ДанныеТранспортаВодитель,,,,Оповещение,);		
		//Геннадий #3727 19.05.2022 --
		
	ИначеЕсли Поле.Имя = "ДанныеТранспортаЭкспедитор" Тогда
		СтандартнаяОбработка = Ложь;
		
		ЗначениеОтбора = Новый Структура("Ссылка", СписокЭкспедиторДляОтбора);
		ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
		
		//Геннадий #3727 19.05.2022 ++
		ДопПараметры 	= Новый Структура();//"ВыбраннаяСтрока", ВыбраннаяСтрока);
		Оповещение 		= Новый ОписаниеОповещения("ОбработатьВыборЭкспедитора", ЭтотОбъект, ДопПараметры); // Прописываем название процедуры-обработчика.
		
		ОткрытьФорму("Обработка.РМЛогиста.Форма.ФормаВыбораЭкспедитора", ПараметрыВыбора,Элементы.ДанныеТранспортаЭкспедитор,,,,Оповещение,);		
		//Геннадий #3727 19.05.2022 --
	КонецЕсли; 	
	
КонецПроцедуры

//Геннадий #3727 19.05.2022 ++
&НаКлиенте
Процедура ОбработатьВыборВодителя(Результат, Параметры) Экспорт

	текДанные = Элементы.ДанныеТранспорта.ТекущиеДанные;
	текДанные.Водитель = Результат; 
	Модифицированность = Истина;
	ОбновитьДанныеСотрудников();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборЭкспедитора(Результат, Параметры) Экспорт

	текДанные = Элементы.ДанныеТранспорта.ТекущиеДанные;
	текДанные.Экспедитор 	= Результат; 
	Модифицированность 		= Истина;
	ОбновитьДанныеСотрудников();
	
КонецПроцедуры
//Геннадий #3727 19.05.2022 --

&НаКлиенте
Процедура ЭлементОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПредыдущееЗначение = Объект[Элемент.Имя];
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДанныеПланируемыхЭкипажей(Команда)
	ОчиститьДанныеПланируемыхЭкипажейНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СформированныеГрафики_Изменить(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияДокументаФормированиеЭкипажей", ЭтаФорма);	
	ЗначенияЗаполнения = Новый Структура("Регион, Пользователь", Объект.Регион, Объект.Пользователь); 
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения); 
	
	ОткрытьФорму("Документ.ФормированиеЭкипажей.ФормаОбъекта", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияДокументаФормированиеЭкипажей(Результат, ДопПараметры) Экспорт

	Элементы.СписокСформированныеЭкипажи.Обновить();

КонецПроцедуры // ()

/////////////////////////////////////РАБОТА С ДАННЫМИ
&НаКлиенте
Процедура ПересчитатьСтрокиТаблицы(ИмяТаблицы)

	Для каждого ТекСтрока Из ЭтаФорма[ИмяТаблицы] Цикл
	
		ТекСтрока.НомерСтроки = ЭтаФорма[ИмяТаблицы].Индекс(ТекСтрока)+1;	
	
	КонецЦикла; 	

КонецПроцедуры // ()
 
&НаКлиенте
Процедура ОбновитьДанныеФормыКлиент()

	ОбновитьДанныеФормыСервер();
	ПересчитатьСтрокиТаблиц();
	
КонецПроцедуры // ()

&НаКлиенте
Процедура ПересчитатьСтрокиТаблиц()

	ПересчитатьСтрокиТаблицы("ДанныеСотрудников");
	ПересчитатьСтрокиТаблицы("ДанныеТранспорта");	

КонецПроцедуры // ()


&НаСервере
Процедура СоздатьФильтрПоРолямНаФорме()

	СоответствиеКнопокИРолей.Очистить();
	
	ВыборкаРоль = Справочники.РолиСотрудников.Выбрать();
	
	Пока ВыборкаРоль.Следующий() Цикл
		
		Если ВыборкаРоль.ПометкаУдаления ИЛИ ВыборкаРоль.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли; 
		
		// создадим команду
		НоваяКоманда = Команды.Добавить("ДанныеСотрудниковФильтрРоль"+ВыборкаРоль.Код);
		НоваяКоманда.Заголовок = ВыборкаРоль.Наименование;
		НоваяКоманда.Действие = "ДанныеСотрудниковФильтрРольДействие";
		
		// создадим кнопку		
		НовыйЭлемент = Элементы.Добавить(НоваяКоманда.Имя, Тип("КнопкаФормы"), Элементы.ДанныеСотрудниковФильтрРоль);		
		НовыйЭлемент.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		НовыйЭлемент.Заголовок = ВыборкаРоль.Наименование;
		НовыйЭлемент.ИмяКоманды = НоваяКоманда.Имя;
		
		НС = СоответствиеКнопокИРолей.Добавить();
		НС.ИмяКнопки = НоваяКоманда.Имя;
		НС.РольСотрудника = ВыборкаРоль.Ссылка;
		
	КонецЦикла; 	

КонецПроцедуры // ()
 
&НаСервере
Процедура ОбновитьДанныеФормыСервер()
	
	ОбновитьДанныеТранспорта();
	ОбновитьДанныеСотрудников();
	
	СписокСформированныеЭкипажи.Параметры.УстановитьЗначениеПараметра("Регион", Объект.Регион);
	СписокСформированныеЭкипажи.Параметры.УстановитьЗначениеПараметра("ДатаПланирования", Объект.ДатаПланирования);
	
КонецПроцедуры // ()
 
&НаСервере
Процедура ПолучитьГрафикЭкипажей()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГрафикЭкипажей.Ссылка КАК ГрафикЭкипажей
		|ПОМЕСТИТЬ ВТ_ГрафикЭкипажей
		|ИЗ
		|	Документ.ГрафикЭкипажей КАК ГрафикЭкипажей
		|ГДЕ
		|	ГрафикЭкипажей.Регион = &Регион
		|	И ГрафикЭкипажей.ДатаПланирования = &ДатаПланирования
		//|	И ГрафикЭкипажей.ПометкаУдаления
		|	И ГрафикЭкипажей.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ГрафикЭкипажей.ГрафикЭкипажей КАК ГрафикЭкипажей,
		|	ЕСТЬNULL(ДокументыЗакрытыеДляИзмененияСрезПоследних.ЗакрытДляРедактирования, ЛОЖЬ) КАК ФормированиеГрафикаЗакрыто
		|ИЗ
		|	ВТ_ГрафикЭкипажей КАК ВТ_ГрафикЭкипажей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыЗакрытыеДляИзменения.СрезПоследних(
		|				,
		|				Документ В
		|					(ВЫБРАТЬ
		|						ВТ_ГрафикЭкипажей.ГрафикЭкипажей КАК ГрафикЭкипажей
		|					ИЗ
		|						ВТ_ГрафикЭкипажей КАК ВТ_ГрафикЭкипажей)) КАК ДокументыЗакрытыеДляИзмененияСрезПоследних
		|		ПО ВТ_ГрафикЭкипажей.ГрафикЭкипажей = ДокументыЗакрытыеДляИзмененияСрезПоследних.Документ";
	
	Запрос.УстановитьПараметр("ДатаПланирования", Объект.ДатаПланирования);
	Запрос.УстановитьПараметр("Регион", Объект.Регион);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	//Геннадий #3725 02.06.2022 ++
	//Объект.ГрафикЭкипажей = Документы.ГрафикРаботыСотрудников.ПустаяСсылка();
	Объект.ГрафикЭкипажей = Документы.ГрафикЭкипажей.ПустаяСсылка();
	//Геннадий #3725 02.06.2022 --
	Объект.ФормированиеГрафикаЗакрыто = Ложь;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Объект.ГрафикЭкипажей = ВыборкаДетальныеЗаписи.ГрафикЭкипажей;
		Объект.ФормированиеГрафикаЗакрыто = ВыборкаДетальныеЗаписи.ФормированиеГрафикаЗакрыто;	
	КонецЦикла;
	
	Элементы.ДанныеТранспорта.ТолькоПросмотр = Объект.ФормированиеГрафикаЗакрыто;
	
КонецПроцедуры // ()
 
&НаСервере
Процедура ОбновитьДанныеТранспорта()
	
	ПолучитьГрафикЭкипажей();
	
	ПолучитьСписокВодителейДляВыбора();
	
	ПолучитьСписокЭкспедиторовДляВыбора();
	
	//ДобавитьУсловноеОформлениеВозможностиРедактирования();
	
	Если НЕ Объект.ГрафикЭкипажей.Пустая() Тогда
		//Геннадий #3725 02.06.2022 ++
		ДанныеТранспорта.Загрузить(Объект.ГрафикЭкипажей.Экипажи.Выгрузить());
		//Геннадий #3725 02.06.2022 --
		Возврат;
	КонецЕсли; 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	новаТранспорт.Ссылка КАК Транспорт
	               |ПОМЕСТИТЬ ВТ_Транспорт
	               |ИЗ
	               |	Справочник.новаТранспорт КАК новаТранспорт
	               |ГДЕ
	               |	НЕ новаТранспорт.ПометкаУдаления
	               |	И НЕ новаТранспорт.ЭтоГруппа
	               |	И новаТранспорт.Родитель.ТерминалДоставки = &Регион
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Транспорт.Транспорт КАК Транспорт,
	               |	ЕСТЬNULL(СостоянияАвтотранспортаСрезПоследних.СостояниеТранспорта, ЗНАЧЕНИЕ(Перечисление.СостоянияАвтотранспорта.ВРаботе)) КАК СостояниеТранспорта,
	               |	ЕСТЬNULL(ДополнительныеПараметрыТранспортаСрезПоследних.ОсновнаяРольТранспорта, ЗНАЧЕНИЕ(Справочник.РолиТранспорта.ПустаяСсылка)) КАК РольТранспорта,
	               |	ЕСТЬNULL(СформированныеЭкипажиСрезПоследних.Водитель, ЗНАЧЕНИЕ(Справочник.новаВодители.ПустаяСсылка)) КАК Водитель,
	               |	ЕСТЬNULL(СформированныеЭкипажиСрезПоследних.Экспедитор, ЗНАЧЕНИЕ(Справочник.новаЭкспедиторы.ПустаяСсылка)) КАК Экспедитор
	               |ПОМЕСТИТЬ ВТ_ТранспортДоп
	               |ИЗ
	               |	ВТ_Транспорт КАК ВТ_Транспорт
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыТранспорта.СрезПоследних(
	               |				&ДатаПланирования,
	               |				Транспорт В
	               |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |						ВТ_Транспорт.Транспорт КАК Транспорт
	               |					ИЗ
	               |						ВТ_Транспорт КАК ВТ_Транспорт)) КАК ДополнительныеПараметрыТранспортаСрезПоследних
	               |		ПО ВТ_Транспорт.Транспорт = ДополнительныеПараметрыТранспортаСрезПоследних.Транспорт
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияАвтотранспорта.СрезПоследних(
	               |				,
	               |				Транспорт В
	               |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |						ВТ_Транспорт.Транспорт КАК Транспорт
	               |					ИЗ
	               |						ВТ_Транспорт КАК ВТ_Транспорт)) КАК СостоянияАвтотранспортаСрезПоследних
	               |		ПО ВТ_Транспорт.Транспорт = СостоянияАвтотранспортаСрезПоследних.Транспорт
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СформированныеЭкипажи.СрезПоследних(
	               |				&ДатаПланирования,
	               |				Регион = &Регион
	               |					И Транспорт В
	               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |							ВТ_Транспорт.Транспорт КАК Транспорт
	               |						ИЗ
	               |							ВТ_Транспорт КАК ВТ_Транспорт)) КАК СформированныеЭкипажиСрезПоследних
	               |		ПО ВТ_Транспорт.Транспорт = СформированныеЭкипажиСрезПоследних.Транспорт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТранспортДоп.Транспорт КАК Транспорт,
	               |	ВТ_ТранспортДоп.СостояниеТранспорта КАК СостояниеТранспорта,
	               |	ВТ_ТранспортДоп.РольТранспорта КАК РольТранспорта,
	               |	ВЫБОР
	               |		КОГДА Водители_ПланируемыйГрафикРаботыСотрудниковСрезПоследних.ВидОтработанногоВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа)
	               |			ТОГДА ЗНАЧЕНИЕ(Справочник.новаВодители.ПустаяСсылка)
	               |		ИНАЧЕ ВТ_ТранспортДоп.Водитель
	               |	КОНЕЦ КАК Водитель,
	               |	ВЫБОР
	               |		КОГДА Экспедиторы_ПланируемыйГрафикРаботыСотрудниковСрезПоследних.ВидОтработанногоВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа)
	               |			ТОГДА ЗНАЧЕНИЕ(Справочник.новаЭкспедиторы.ПустаяСсылка)
	               |		ИНАЧЕ ВТ_ТранспортДоп.Экспедитор
	               |	КОНЕЦ КАК Экспедиторы
	               |ПОМЕСТИТЬ ВТ_ТранспортДоп2
	               |ИЗ
	               |	ВТ_ТранспортДоп КАК ВТ_ТранспортДоп
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПланируемыйГрафикРаботыСотрудников.СрезПоследних(
	               |				&ДатаПланирования,
	               |				Терминал = &Регион
	               |					И Дата = &ДатаПланирования
	               |					И ФизЛицо В
	               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |							ВТ_ТранспортДоп.Водитель.ФизЛицо КАК ВодительФизЛицо
	               |						ИЗ
	               |							ВТ_ТранспортДоп КАК ВТ_ТранспортДоп)) КАК Водители_ПланируемыйГрафикРаботыСотрудниковСрезПоследних
	               |		ПО ВТ_ТранспортДоп.Водитель.ФизЛицо = Водители_ПланируемыйГрафикРаботыСотрудниковСрезПоследних.ФизЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПланируемыйГрафикРаботыСотрудников.СрезПоследних(
	               |				&ДатаПланирования,
	               |				Терминал = &Регион
	               |					И Дата = &ДатаПланирования
	               |					И ФизЛицо В
	               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |							ВТ_ТранспортДоп.Экспедитор.ФизЛицо КАК ЭкспедиторФизЛицо
	               |						ИЗ
	               |							ВТ_ТранспортДоп КАК ВТ_ТранспортДоп)) КАК Экспедиторы_ПланируемыйГрафикРаботыСотрудниковСрезПоследних
	               |		ПО ВТ_ТранспортДоп.Экспедитор.ФизЛицо = Экспедиторы_ПланируемыйГрафикРаботыСотрудниковСрезПоследних.ФизЛицо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТранспортДоп2.Транспорт КАК Транспорт,
	               |	ВТ_ТранспортДоп2.СостояниеТранспорта КАК СостояниеТранспорта,
	               |	ВТ_ТранспортДоп2.РольТранспорта КАК РольТранспорта,
	               |	ВТ_ТранспортДоп2.Водитель КАК Водитель,
	               |	ВТ_ТранспортДоп2.Экспедиторы КАК Экспедиторы,
	               |	ЕСТЬNULL(ДополнительныеПараметрыВодителейСрезПоследних.СменаМаршрутизации, ЗНАЧЕНИЕ(Справочник.Смены.Смена1)) КАК СменаРейса,
	               |	ВТ_ТранспортДоп2.Транспорт.Наименование КАК ТранспортНаименование
	               |ИЗ
	               |	ВТ_ТранспортДоп2 КАК ВТ_ТранспортДоп2
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыВодителей.СрезПоследних(
	               |				&ДатаПланирования,
	               |				Водитель В
	               |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |						ВТ_ТранспортДоп2.Водитель КАК Водитель
	               |					ИЗ
	               |						ВТ_ТранспортДоп2 КАК ВТ_ТранспортДоп2)) КАК ДополнительныеПараметрыВодителейСрезПоследних
	               |		ПО ВТ_ТранспортДоп2.Водитель = ДополнительныеПараметрыВодителейСрезПоследних.Водитель
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТранспортНаименование";
				   //Геннадий #3725 01.06.2022 ++
				   //|ГДЕ
				   //|	ВЫБОР
				   //|			КОГДА &СостояниеТранспорта = 0
				   //|				ТОГДА ВТ_ТранспортДоп2.СостояниеТранспорта = ЗНАЧЕНИЕ(Перечисление.СостоянияАвтотранспорта.ВРаботе)
				   //|			ИНАЧЕ ИСТИНА
				   //|		КОНЕЦ";
				   //Геннадий 01.06.2022 --
	
	Запрос.УстановитьПараметр("Регион", Объект.Регион);	
	Запрос.УстановитьПараметр("ДатаПланирования", Объект.ДатаПланирования);
	Запрос.УстановитьПараметр("СостояниеТранспорта", ФильтрТранспортВРаботе);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеТранспорта.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // ()

&НаСервере
Процедура ОбновитьДанныеСотрудников()
	
	Если НЕ Объект.ГрафикЭкипажей.Пустая() Тогда
		//Геннадий #3725 02.06.2022 ++
		ДанныеСотрудников.Загрузить(Объект.ГрафикЭкипажей.СвободныеСотрудники.Выгрузить());
		//Геннадий 02.06.2022 --
		Возврат;
	КонецЕсли; 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		//Геннадий 31.05.2022 ++
		"ВЫБРАТЬ
		|	ДанныеТранспорта.Водитель КАК Ссылка
		|
		|ПОМЕСТИТЬ ВТ_ДанныеТранспортаВодители
		|ИЗ 
		|	&ДанныеТранспорта КАК ДанныеТранспорта
		|
		|;
		|
		|ВЫБРАТЬ
		|	ДанныеТранспорта.Экспедитор КАК Ссылка
		|
		|ПОМЕСТИТЬ ВТ_ДанныеТранспортаЭкспедиторы
		|ИЗ 
		|	&ДанныеТранспорта КАК ДанныеТранспорта
		|;
		|
		//Геннадий 31.05.2022 --
		|
		|ВЫБРАТЬ
		|	новаВодители.Ссылка КАК Сотрудник,
		|	новаВодители.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТ_Сотрудники
		|ИЗ
		|	Справочник.новаВодители КАК новаВодители
		|ГДЕ
		|	НЕ новаВодители.ПометкаУдаления
		|	И НЕ новаВодители.ЭтоГруппа
		|	И новаВодители.Родитель.ТерминалДоставки = &Регион
		//Геннадий 31.05.2022 ++
		|	И НЕ новаВодители.Ссылка В (ВЫБРАТЬ ВТ_ДанныеТранспортаВодители.Ссылка Из ВТ_ДанныеТранспортаВодители)
		//Геннадий 31.05.2022 --
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	новаЭкспедиторы.Ссылка,
		|	новаЭкспедиторы.ФизЛицо
		|ИЗ
		|	Справочник.новаЭкспедиторы КАК новаЭкспедиторы
		|ГДЕ
		|	НЕ новаЭкспедиторы.ПометкаУдаления
		|	И НЕ новаЭкспедиторы.ЭтоГруппа
		|	И новаЭкспедиторы.Родитель.ТерминалДоставки = &Регион
		//Геннадий 31.05.2022 ++
		|	И НЕ новаЭкспедиторы.Ссылка В (ВЫБРАТЬ ВТ_ДанныеТранспортаЭкспедиторы.Ссылка Из ВТ_ДанныеТранспортаЭкспедиторы)
		//Геннадий 31.05.2022 --
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Сотрудники.Сотрудник КАК Сотрудник,
		|	ВТ_Сотрудники.ФизЛицо КАК ФизЛицо,
		|	ЕСТЬNULL(ПланируемыйГрафикРаботыСотрудниковСрезПоследних.ВидОтработанногоВремени, ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)) КАК ВидОтработанногоВремени,
		|	ЕСТЬNULL(ПланируемыйГрафикРаботыСотрудниковСрезПоследних.РольСотрудника, ЗНАЧЕНИЕ(Справочник.РолиСотрудников.ПустаяСсылка)) КАК Роль
		|ПОМЕСТИТЬ ВТ_СотрудникиДопДанные
		|ИЗ
		|	ВТ_Сотрудники КАК ВТ_Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПланируемыйГрафикРаботыСотрудников.СрезПоследних(
		|				,
		|				Терминал = &Регион
		|					И ФизЛицо В
		|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|							ВТ_Сотрудники.ФизЛицо КАК ФизЛицо
		|						ИЗ
		|							ВТ_Сотрудники КАК ВТ_Сотрудники)
		|					И Дата = &ДатаПланирования) КАК ПланируемыйГрафикРаботыСотрудниковСрезПоследних
		|		ПО ВТ_Сотрудники.ФизЛицо = ПланируемыйГрафикРаботыСотрудниковСрезПоследних.ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СотрудникиДопДанные.Сотрудник КАК Сотрудник,
		|	ВТ_СотрудникиДопДанные.ФизЛицо КАК ФизЛицо,
		|	ВТ_СотрудникиДопДанные.ВидОтработанногоВремени КАК ВидОтработанногоВремени,
		|	ВТ_СотрудникиДопДанные.Роль КАК Роль,
		|	ЕСТЬNULL(СформированныеЭкипажиСрезПоследних.Транспорт, ЗНАЧЕНИЕ(Справочник.новаТранспорт.ПустаяСсылка)) КАК Транспорт
		|ПОМЕСТИТЬ ВТ_СотрудникиТранспорт
		|ИЗ
		|	ВТ_СотрудникиДопДанные КАК ВТ_СотрудникиДопДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СформированныеЭкипажи.СрезПоследних(&ДатаПланирования, Регион = &Регион) КАК СформированныеЭкипажиСрезПоследних
		|		ПО (ВТ_СотрудникиДопДанные.Сотрудник = СформированныеЭкипажиСрезПоследних.Водитель
		|				ИЛИ ВТ_СотрудникиДопДанные.Сотрудник = СформированныеЭкипажиСрезПоследних.Экспедитор)
		|ГДЕ
		|	ВТ_СотрудникиДопДанные.ФизЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	И ВТ_СотрудникиДопДанные.ВидОтработанногоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СотрудникиТранспорт.Сотрудник КАК Сотрудник,
		|	ВТ_СотрудникиТранспорт.ФизЛицо КАК ФизЛицо,
		|	ВТ_СотрудникиТранспорт.ВидОтработанногоВремени КАК ВидОтработанногоВремени,
		|	ВТ_СотрудникиТранспорт.Роль КАК Роль,
		|	ВТ_СотрудникиТранспорт.Транспорт КАК Транспорт,
		|	ЕСТЬNULL(СостоянияАвтотранспортаСрезПоследних.СостояниеТранспорта, ЗНАЧЕНИЕ(Перечисление.СостоянияАвтотранспорта.ВРаботе)) КАК Состояние
		|ПОМЕСТИТЬ ВТ_Финал
		|ИЗ
		|	ВТ_СотрудникиТранспорт КАК ВТ_СотрудникиТранспорт
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияАвтотранспорта.СрезПоследних КАК СостоянияАвтотранспортаСрезПоследних
		|		ПО ВТ_СотрудникиТранспорт.Транспорт = СостоянияАвтотранспортаСрезПоследних.Транспорт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Финал.Сотрудник КАК Сотрудник,
		|	ВТ_Финал.ФизЛицо КАК ФизЛицо,
		|	ВТ_Финал.ВидОтработанногоВремени КАК ВидОтработанногоВремени,
		|	ВТ_Финал.Роль КАК РольСотрудника,
		|	ВТ_Финал.Транспорт КАК Транспорт,
		|	ВТ_Финал.Состояние КАК Состояние
		//Геннадий 30.05.2022 ++
		|	,ВТ_Финал.ФизЛицо.Наименование КАК ФизЛицоНаименование
		//Геннадий --
		|ИЗ
		|	ВТ_Финал КАК ВТ_Финал
		|ГДЕ
		//Геннадий #3727 19.05.2022 ++
		//правка по комментарию
		//|	ВТ_Финал.Транспорт <> ЗНАЧЕНИЕ(Справочник.новаТранспорт.ПустаяСсылка) И
		//Геннадий #3727 19.05.2022 --
		|	ВТ_Финал.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияАвтотранспорта.ВРАботе)
		|
		//Геннадий 30.05.2022 ++
		|УПОРЯДОЧИТЬ ПО
		|	ФизЛицоНаименование";
		//Геннадий --
	
	Запрос.УстановитьПараметр("ДатаПланирования", Объект.ДатаПланирования);
	Запрос.УстановитьПараметр("Регион", Объект.Регион);
	//Геннадий 31.05.2022 ++
	Запрос.УстановитьПараметр("ДанныеТранспорта", ДанныеТранспорта.Выгрузить());
	//Геннадий --
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеСотрудников.Загрузить(РезультатЗапроса.Выгрузить());
		
КонецПроцедуры // ()
 
&НаСервере
Процедура ДобавитьУсловноеОформлениеВозможностиРедактирования()
	
	УдаляемыйЭлемент = Неопределено;
	Для каждого ЭлементУсловногоОформления Из УсловноеОформление.Элементы Цикл
		Если ЭлементУсловногоОформления.Представление = "ДоступностьРедактирования" Тогда
			УдаляемыйЭлемент = ЭлементУсловногоОформления;
			Прервать;	
		КонецЕсли; 
	КонецЦикла; 
	
	Если УдаляемыйЭлемент <> Неопределено Тогда
		УсловноеОформление.Элементы.Удалить(УдаляемыйЭлемент);	
	КонецЕсли; 
		
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Представление = "ДоступностьРедактирования";
		
	ТаблицаРейсов = новаМестнаяДоставка.ПолучитьРейсыНаДату(Объект.ДатаПланирования);
	
	СписокТранспорта = Новый СписокЗначений;
	СписокТранспорта.ЗагрузитьЗначения(ТаблицаРейсов.ВыгрузитьКолонку("Транспорт"));
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДанныеТранспорта.Транспорт"); // имя поля
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке; // либо задаем свой
	ЭлементОтбора.ПравоеЗначение = СписокТранспорта;	
	ЭлементОтбора.Использование = Истина;	
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоСерый);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	ЭлементУсловногоОформления.Использование = Истина;
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ДанныеТранспорта");
	ПолеОформления.Использование = Истина;	
	
КонецПроцедуры // ()

&НаСервере
Процедура ПолучитьСписокВодителейДляВыбора()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланируемыйГрафикРаботыСотрудниковСрезПоследних.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизЛица
		|ИЗ
		|	РегистрСведений.ПланируемыйГрафикРаботыСотрудников.СрезПоследних КАК ПланируемыйГрафикРаботыСотрудниковСрезПоследних
		|ГДЕ
		|	ПланируемыйГрафикРаботыСотрудниковСрезПоследних.Терминал = &Регион
		|	И ПланируемыйГрафикРаботыСотрудниковСрезПоследних.Дата = &ДатаПланирования
		|	И ПланируемыйГрафикРаботыСотрудниковСрезПоследних.ВидОтработанногоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СформированныеЭкипажиСрезПоследних.Транспорт КАК Транспорт,
		|	СформированныеЭкипажиСрезПоследних.Водитель КАК Водитель,
		|	СформированныеЭкипажиСрезПоследних.Экспедитор КАК Экспедитор
		|ПОМЕСТИТЬ ВТ_Экипажи
		|ИЗ
		|	РегистрСведений.СформированныеЭкипажи.СрезПоследних(&ДатаПланирования, Регион = &Регион) КАК СформированныеЭкипажиСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.новаВодители.ПустаяСсылка) КАК Водитель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	новаВодители.Ссылка
		|ИЗ
		|	Справочник.новаВодители КАК новаВодители
		|ГДЕ
		|	новаВодители.ФизЛицо В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ВТ_ФизЛица.ФизЛицо КАК ФизЛицо
		|			ИЗ
		|				ВТ_ФизЛица КАК ВТ_ФизЛица)
		|	И НЕ новаВодители.ПометкаУдаления
		|	И НЕ новаВодители.Ссылка В
		|				(ВЫБРАТЬ
		|					ВТ_Экипажи.Водитель КАК Водитель
		|				ИЗ
		|					ВТ_Экипажи КАК ВТ_Экипажи)";
	
	Запрос.УстановитьПараметр("ДатаПланирования", Объект.ДатаПланирования);
	Запрос.УстановитьПараметр("Регион", Объект.Регион);
	
	РезультатЗапроса = Запрос.Выполнить();
		
	СписокВодителейДляОтбора.Очистить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокВодителейДляОтбора.Добавить(ВыборкаДетальныеЗаписи.Водитель);
	КонецЦикла;
		
КонецПроцедуры// ()
 
&НаСервере
Процедура ПолучитьСписокЭкспедиторовДляВыбора()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланируемыйГрафикРаботыСотрудниковСрезПоследних.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизЛица
		|ИЗ
		|	РегистрСведений.ПланируемыйГрафикРаботыСотрудников.СрезПоследних КАК ПланируемыйГрафикРаботыСотрудниковСрезПоследних
		|ГДЕ
		|	ПланируемыйГрафикРаботыСотрудниковСрезПоследних.Терминал = &Регион
		|	И ПланируемыйГрафикРаботыСотрудниковСрезПоследних.Дата = &ДатаПланирования
		|	И ПланируемыйГрафикРаботыСотрудниковСрезПоследних.ВидОтработанногоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СформированныеЭкипажиСрезПоследних.Транспорт КАК Транспорт,
		|	СформированныеЭкипажиСрезПоследних.Водитель КАК Водитель,
		|	СформированныеЭкипажиСрезПоследних.Экспедитор КАК Экспедитор
		|ПОМЕСТИТЬ ВТ_Экипажи
		|ИЗ
		|	РегистрСведений.СформированныеЭкипажи.СрезПоследних(&ДатаПланирования, Регион = &Регион) КАК СформированныеЭкипажиСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.новаЭкспедиторы.ПустаяСсылка) КАК Экспедитор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	новаЭкспедиторы.Ссылка
		|ИЗ
		|	Справочник.новаЭкспедиторы КАК новаЭкспедиторы
		|ГДЕ
		|	новаЭкспедиторы.ФизЛицо В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ВТ_ФизЛица.ФизЛицо КАК ФизЛицо
		|			ИЗ
		|				ВТ_ФизЛица КАК ВТ_ФизЛица)
		|	И НЕ новаЭкспедиторы.ПометкаУдаления
		|	И НЕ новаЭкспедиторы.Ссылка В
		|				(ВЫБРАТЬ
		|					ВТ_Экипажи.Экспедитор КАК Экспедитор
		|				ИЗ
		|					ВТ_Экипажи КАК ВТ_Экипажи)";
	
	Запрос.УстановитьПараметр("ДатаПланирования", Объект.ДатаПланирования);
	Запрос.УстановитьПараметр("Регион", Объект.Регион);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СписокЭкспедиторДляОтбора.Очистить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокЭкспедиторДляОтбора.Добавить(ВыборкаДетальныеЗаписи.Экспедитор);
	КонецЦикла;
		
КонецПроцедуры// ()

&НаСервере
Процедура ОчиститьДанныеПланируемыхЭкипажейНаСервере()
	
	Если Объект.ГрафикЭкипажей.Пустая() Тогда
		Возврат;
	КонецЕсли; 
	
	ДокОбъект = Объект.ГрафикЭкипажей.ПолучитьОбъект();
	ДокОбъект.УдалитьДвиженияДокумента();
	ДокОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);		
				
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	
	Если Объект.ГрафикЭкипажей.Пустая() Тогда
		ДокОбъект = Документы.ГрафикЭкипажей.СоздатьДокумент();
		ДокОбъект.Дата = ТекущаяДата();
		ДокОбъект.ДатаПланирования = Объект.ДатаПланирования;
		ДокОбъект.Регион = Объект.Регион;
		ДокОбъект.Пользователь = Объект.Пользователь;
		//ДокОбъект.ГрафикСотрудников = ??
	Иначе
		ДокОбъект = Объект.ГрафикЭкипажей.ПолучитьОбъект();
	КонецЕсли; 
	
	ДокОбъект.Экипажи.Загрузить(ДанныеТранспорта.Выгрузить());
	
	ДокОбъект.СвободныеСотрудники.Загрузить(ДанныеСотрудников.Выгрузить());
	
	ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	Объект.ГрафикЭкипажей = ДокОбъект.Ссылка;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

//Геннадий #3725 01.06.2022 ++
&НаСервере
Процедура ФильтрТранспортВРаботеПриИзмененииНаСервере()
	
	Если ФильтрТранспортВРаботе = 0 Тогда
		Элементы.ДанныеТранспорта.ОтборСтрок = Новый ФиксированнаяСтруктура("СостояниеТранспорта", Перечисления.СостоянияАвтотранспорта.ВРаботе);
	ИначеЕсли  ФильтрТранспортВРаботе = 1 Тогда
		Элементы.ДанныеТранспорта.ОтборСтрок = Неопределено;
	КонецЕсли;	
	
		
КонецПроцедуры

&НаКлиенте
Процедура ФильтрТранспортВРаботеПриИзменении(Элемент)
	ФильтрТранспортВРаботеПриИзмененииНаСервере();
КонецПроцедуры
//Геннадий #3725 01.06.2022 --
