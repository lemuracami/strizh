
&НаСервере
Функция СформироватьСотрудника()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("Терминал", Терминал);
	Если НоваяРоль = Справочники.РолиСотрудников.Экспедитор Тогда
		//Сообщить("Формирование экспедитора");
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФизическиеЛица.Наименование КАК Наименование,
		|	новаЭкспедиторы.Ссылка КАК Родитель
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.новаЭкспедиторы КАК новаЭкспедиторы
		|			ЛЕВОЕ СОЕДИНЕНИЕ Константа.УволенныеЭкспедиторы КАК УволенныеЭкспедиторы
		|			ПО новаЭкспедиторы.Ссылка = УволенныеЭкспедиторы.Значение
		|		ПО (новаЭкспедиторы.ЭтоГруппа)
		|			И (новаЭкспедиторы.ТерминалДоставки = &Терминал)
		|			И (НЕ новаЭкспедиторы.ПометкаУдаления)
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &ФизЛицо
		|	И УволенныеЭкспедиторы.Значение ЕСТЬ NULL";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Если Выборка.Родитель = Null Тогда
			Сообщить("Не определена группа экспедиторов");
			Возврат Неопределено;
		КонецЕсли;
		
		Спр = Справочники.новаЭкспедиторы.СоздатьЭлемент();
		Спр.Наименование = Выборка.Наименование;
		Спр.Родитель = Выборка.Родитель;
		Спр.ФизЛицо = ФизЛицо;
		Спр.Записать();
		
	Иначе
		//Сообщить("Формирование водителя");
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФизическиеЛица.Наименование КАК Наименование,
		|	новаВодители.Ссылка КАК Родитель
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.новаВодители КАК новаВодители
		|			ЛЕВОЕ СОЕДИНЕНИЕ Константа.УволенныеВодители КАК УволенныеВодители
		|			ПО новаВодители.Ссылка = УволенныеВодители.Значение
		|		ПО (новаВодители.ЭтоГруппа)
		|			И (новаВодители.ТерминалДоставки = &Терминал)
		|			И (НЕ новаВодители.ПометкаУдаления)
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &ФизЛицо
		|	И УволенныеВодители.Значение ЕСТЬ NULL";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Если Выборка.Родитель = Null Тогда
			Сообщить("Не определена группа водителей");
			Возврат Неопределено;
		КонецЕсли;
		
		Спр = Справочники.новаВодители.СоздатьЭлемент();
		Спр.Наименование = Выборка.Наименование;
		Спр.Родитель = Выборка.Родитель;
		Спр.ФизЛицо = ФизЛицо;
		Спр.Записать();
	КонецЕсли;
	
	Возврат Спр.Ссылка;
	
КонецФункции

&НаСервере
Функция ДобавитьСотрудникаНаСервере()
	
	Если ФизЛицо.Пустая() Тогда
		ТекущийЭлемент = Элементы.ФизЛицо;
		Возврат "Физ лицо не заполнено";
	КонецЕсли;
	
	Если НоваяРоль.Пустая() Тогда
		ТекущийЭлемент = Элементы.НоваяРоль;
		Возврат "Новая роль не заполнена";
	КонецЕсли;
	
	Если НоваяРоль = ТекущаяРоль Тогда
		ТекущийЭлемент = Элементы.НоваяРоль;
		Возврат "Новая роль не отличается от текущей";
	КонецЕсли;
	
	ЭтоИзменение = Не ДокументПеремещения.Пустая();
	
	Если ЭтоИзменение Тогда
		//проверить, а нужно ли что-то менять
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументПеремещения", ДокументПеремещения);
		Запрос.УстановитьПараметр("НоваяРоль", НоваяРоль);
		Запрос.УстановитьПараметр("ТарифПосле", ТарифПосле);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ИСТИНА КАК Поле1
		|ИЗ
		|	Документ.КадровоеПеремещениеРаботниковОрганизаций.Сотрудники КАК КадровоеПеремещениеРаботниковОрганизацийСотрудники
		|ГДЕ
		|	КадровоеПеремещениеРаботниковОрганизацийСотрудники.Ссылка = &ДокументПеремещения
		|	И КадровоеПеремещениеРаботниковОрганизацийСотрудники.ДатаПеремещения = КадровоеПеремещениеРаботниковОрганизацийСотрудники.Ссылка.ДатаПланирования
		|	И КадровоеПеремещениеРаботниковОрганизацийСотрудники.ОсновнаяРольСотрудника <> &НоваяРоль";
		
		Если Запрос.Выполнить().Пустой() Тогда
			Возврат "Новая роль не изменена";
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("Роль", НоваяРоль);
	Запрос.УстановитьПараметр("Период", КонецДня(ДатаРедактирования));
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РаботникиОрганизации.Организация КАК Организация,
	|	РаботникиОрганизации.Подразделение КАК Подразделение,
	|	РаботникиОрганизации.Должность КАК Должность,
	|	РаботникиОрганизации.ГрафикУчетаРабочегоВремени КАК График
	|ИЗ
	|	РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|ГДЕ
	|	РаботникиОрганизации.Период <= &Период
	|	И РаботникиОрганизации.ФизЛицо = &ФизЛицо
	|	И РаботникиОрганизации.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаботникиОрганизации.Период УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	новаВодители.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.новаВодители КАК новаВодители
	|ГДЕ
	|	новаВодители.ФизЛицо = &ФизЛицо
	|	И &Роль <> ЗНАЧЕНИЕ(Справочник.РолиСотрудников.Экспедитор)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	новаЭкспедиторы.Ссылка
	|ИЗ
	|	Справочник.новаЭкспедиторы КАК новаЭкспедиторы
	|ГДЕ
	|	новаЭкспедиторы.ФизЛицо = &ФизЛицо
	|	И &Роль = ЗНАЧЕНИЕ(Справочник.РолиСотрудников.Экспедитор)";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	Результат = РезультатПакета[0];
	Если Результат.Пустой() Тогда
		Возврат "Организация сотрудника не определена";
	КонецЕсли;
	
	ВыборкаОрганизация = Результат.Выбрать();
	
	Результат = РезультатПакета[1];
	Если Результат.Пустой() Тогда
		Сотрудник = СформироватьСотрудника();
		Если Сотрудник = Неопределено Тогда
			Возврат "Сотрудник не определен";
		КонецЕсли;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Сотрудник = Выборка.Ссылка;
	КонецЕсли;
	
	ВыборкаОрганизация.Следующий();
	
	Если ЭтоИзменение Тогда
		Док = ДокументПеремещения.ПолучитьОбъект();
		Если Док.ПометкаУдаления Тогда
			Док.УстановитьПометкуУдаления(Ложь);
		КонецЕсли;
		Если Док.Проведен Тогда
			Док.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
		Док.Сотрудники.Очистить();
	Иначе
		Док = Документы.КадровоеПеремещениеРаботниковОрганизаций.СоздатьДокумент();
		Док.Дата = ТекущаяДата();
	КонецЕсли;
	
	Док.Организация = ВыборкаОрганизация.Организация;
	Док.Терминал = Терминал;
	Док.ДатаПланирования = ДатаРедактирования;
	Док.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	СтрокаСотрудника = Док.Сотрудники.Добавить();
	СтрокаСотрудника.Сотрудник = Сотрудник;
	СтрокаСотрудника.ПодразделениеСтарое = ВыборкаОрганизация.Подразделение;
	СтрокаСотрудника.Подразделение = ВыборкаОрганизация.Подразделение;
	СтрокаСотрудника.ФизЛицо = ФизЛицо;
	СтрокаСотрудника.ДолжностьСтарая = ВыборкаОрганизация.Должность;
	СтрокаСотрудника.Должность = ВыборкаОрганизация.Должность;
	СтрокаСотрудника.ДатаПеремещения = ДатаРедактирования;
	СтрокаСотрудника.ГрафикРаботыСтарый = ВыборкаОрганизация.График;
	СтрокаСотрудника.ГрафикРаботы = ВыборкаОрганизация.График;
	СтрокаСотрудника.ОсновнаяРольСотрудникаСтарая = ТекущаяРоль;
	СтрокаСотрудника.ОсновнаяРольСотрудника = НоваяРоль;
	СтрокаСотрудника.ОсновноеНачислениеСтарое = ТарифДо;
	СтрокаСотрудника.ОсновноеНачисление = ТарифПосле;
	
	СтрокаСотрудника = Док.Сотрудники.Добавить();
	СтрокаСотрудника.Сотрудник = Сотрудник;
	СтрокаСотрудника.ПодразделениеСтарое = ВыборкаОрганизация.Подразделение;
	СтрокаСотрудника.Подразделение = ВыборкаОрганизация.Подразделение;
	СтрокаСотрудника.ФизЛицо = ФизЛицо;
	СтрокаСотрудника.ДолжностьСтарая = ВыборкаОрганизация.Должность;
	СтрокаСотрудника.Должность = ВыборкаОрганизация.Должность;
	СтрокаСотрудника.ДатаПеремещения = ДатаРедактирования + 86400;
	СтрокаСотрудника.ГрафикРаботыСтарый = ВыборкаОрганизация.График;
	СтрокаСотрудника.ГрафикРаботы = ВыборкаОрганизация.График;
	СтрокаСотрудника.ОсновнаяРольСотрудникаСтарая = НоваяРоль;
	СтрокаСотрудника.ОсновнаяРольСотрудника = ТекущаяРоль;
	СтрокаСотрудника.ОсновноеНачислениеСтарое = ТарифПосле;
	СтрокаСотрудника.ОсновноеНачисление = ТарифДо;
	
	Док.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат "";
	
КонецФункции

&НаКлиенте
Процедура ДобавитьСотрудника(Команда)
	
	РезультатВыполнения = ДобавитьСотрудникаНаСервере();
	Если РезультатВыполнения = "" Тогда
		Закрыть(ФизЛицо);
	Иначе
		ПоказатьПредупреждение(, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = Параметры.ЗаголовокФормы;
	
	Если Параметры.Свойство("ДокументПеремещения") Тогда
		//это изменение, взять все данные из документа
		ДокументПеремещения = Параметры.ДокументПеремещения;
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументПеремещения", ДокументПеремещения);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КадровоеПеремещениеРаботниковОрганизацийСотрудники.ФизЛицо КАК ФизЛицо,
		|	КадровоеПеремещениеРаботниковОрганизацийСотрудники.ДатаПеремещения КАК ДатаРедактирования,
		|	КадровоеПеремещениеРаботниковОрганизацийСотрудники.Ссылка.Терминал КАК Терминал,
		|	КадровоеПеремещениеРаботниковОрганизацийСотрудники.ОсновнаяРольСотрудникаСтарая КАК ТекущаяРоль,
		|	КадровоеПеремещениеРаботниковОрганизацийСотрудники.ОсновнаяРольСотрудника КАК НоваяРоль,
		|	КадровоеПеремещениеРаботниковОрганизацийСотрудники.ОсновноеНачислениеСтарое КАК ТарифДо,
		|	КадровоеПеремещениеРаботниковОрганизацийСотрудники.ОсновноеНачисление КАК ТарифПосле
		|ИЗ
		|	Документ.КадровоеПеремещениеРаботниковОрганизаций.Сотрудники КАК КадровоеПеремещениеРаботниковОрганизацийСотрудники
		|ГДЕ
		|	КадровоеПеремещениеРаботниковОрганизацийСотрудники.Ссылка = &ДокументПеремещения
		|	И КадровоеПеремещениеРаботниковОрганизацийСотрудники.ДатаПеремещения = КадровоеПеремещениеРаботниковОрганизацийСотрудники.Ссылка.ДатаПланирования";
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Сообщить("Ошибка чтения документа Кадровое перемещение работников организаций" + Символы.ПС + "Обновите список сотрудников!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		ФизЛицо = Выборка.ФизЛицо;
		ДатаРедактирования = Выборка.ДатаРедактирования;
		Терминал = Выборка.Терминал;
		ТекущаяРоль = Выборка.ТекущаяРоль;
		НоваяРоль = Выборка.НоваяРоль;
		ТарифДо = Выборка.ТарифДо;
		ТарифПосле = Выборка.ТарифПосле;
		
		Элементы.ФизЛицо.ТолькоПросмотр = Истина;
	Иначе
		ДатаРедактирования = Параметры.ДатаРедактирования;
		Терминал = Параметры.Терминал;
		ВыбранныеФизЛица = Параметры.ВыбранныеФизЛица;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ФизЛицоПриИзмененииНаСервере()
	
	РезультатИзменения = "";
	
	ТекущаяРоль = Неопределено;
	ТарифДо = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("Период", ДатаРедактирования);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФизическиеЛица.Наименование КАК Наименование,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт.Наименование КАК ТранспортНаименование
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс.ДатаРейса = &Период) КАК ПривязкаМашинКРейсамСрезПоследних
	|		ПО (ФизическиеЛица.Ссылка = &ФизЛицо
	|				И &ФизЛицо В (ПривязкаМашинКРейсамСрезПоследних.Водитель.ФизЛицо, ПривязкаМашинКРейсамСрезПоследних.Экспедитор.ФизЛицо))
	|ГДЕ
	|	&ФизЛицо В (ПривязкаМашинКРейсамСрезПоследних.Водитель.ФизЛицо, ПривязкаМашинКРейсамСрезПоследних.Экспедитор.ФизЛицо)";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ФизЛицо = Неопределено;
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат "Сотрудник " + СокрЛП(Выборка.Наименование) + " привязан к рейсу " + Выборка.ТранспортНаименование + Символы.ПС + "Его нельзя выбрать!";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Период", КонецДня(ДатаРедактирования));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДополнительныеПараметрыФизЛицСрезПоследних.ОсновнаяРольСотрудника КАК ТекущаяРоль,
	|	ВЗ_РаботникиОрганизации.ОсновноеНачисление КАК ТарифДо
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыФизЛиц.СрезПоследних(&Период, ФизЛицо = &ФизЛицо) КАК ДополнительныеПараметрыФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			РаботникиОрганизации.ОсновноеНачисление КАК ОсновноеНачисление
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|		ГДЕ
	|			РаботникиОрганизации.Период <= &Период
	|			И РаботникиОрганизации.ФизЛицо = &ФизЛицо
	|			И РаботникиОрганизации.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию)
	|		
	|		УПОРЯДОЧИТЬ ПО
	|			РаботникиОрганизации.Период УБЫВ) КАК ВЗ_РаботникиОрганизации
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &ФизЛицо";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ТекущаяРоль = Выборка.ТекущаяРоль;
	Если Выборка.ТарифДо = Null Тогда
		РезультатИзменения = "Организация сотрудника не определена";
	КонецЕсли;
	ТарифДо = Выборка.ТарифДо;
	
	Возврат РезультатИзменения;
	
КонецФункции

&НаКлиенте
Процедура ФизЛицоПриИзменении(Элемент)
	РезультатИзменения = ФизЛицоПриИзмененииНаСервере();
	Если РезультатИзменения <> "" Тогда
		ПоказатьПредупреждение(, РезультатИзменения);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НоваяРольПриИзмененииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Роль", НоваяРоль);
	Запрос.УстановитьПараметр("Терминал", Терминал);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РолиСотрудниковОсновныеНачисленияПоРегионам.ОсновноеНачисление КАК ТарифПосле
	|ИЗ
	|	Справочник.РолиСотрудников.ОсновныеНачисленияПоРегионам КАК РолиСотрудниковОсновныеНачисленияПоРегионам
	|ГДЕ
	|	РолиСотрудниковОсновныеНачисленияПоРегионам.Ссылка = &Роль
	|	И РолиСотрудниковОсновныеНачисленияПоРегионам.Регион = &Терминал";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ТарифПосле = Выборка.ТарифПосле;
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяРольПриИзменении(Элемент)
	НоваяРольПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыборФизЛица()
	
	ПараметрыФормы = Новый Структура("ДатаРедактирования,Терминал,РежимВыбора,ЗакрыватьПриВыборе,ТекущийЭлемент,ВыбранныеФизЛица", ДатаРедактирования, Терминал, Истина, Истина, ФизЛицо, ВыбранныеФизЛица);
	ОткрытьФорму("Обработка.РедактированиеГрафикаРейсов.Форма.ФормаВыбораФизЛиц", ПараметрыФормы, Элементы.ФизЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыборФизЛица();
	
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицоИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФизЛицо = Неопределено;
	ТекущаяРоль = Неопределено;
	ТарифДо = Неопределено;
	
	Если Не ПустаяСтрока(Текст) Тогда
		ВыборФизЛица();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицоАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицоОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицоОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ФизЛицо.Пустая() Тогда
		ОткрытьФорму("Справочник.ФизическиеЛица.ФормаОбъекта", Новый Структура("Ключ,ТолькоПросмотр", ФизЛицо, Истина));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяРольОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не НоваяРоль.Пустая() Тогда
		ОткрытьФорму("Справочник.РолиСотрудников.ФормаОбъекта", Новый Структура("Ключ,ТолькоПросмотр", НоваяРоль, Истина));
	КонецЕсли;
	
КонецПроцедуры
