
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаРедактирования = Параметры.ДатаРедактирования;
	Терминал = Параметры.Терминал;
	ИмяСправочника = Параметры.ИмяСправочника;
	ТекущийЭлементСписка = Параметры.ТекущийЭлемент;
	СписокИсключений.ЗагрузитьЗначения(Параметры.Исключения);
	ЗаголовокПоУмолчанию = Параметры.ЗаголовокФормы;
	Элементы.СписокВыбораНаименование.Заголовок = Параметры.ЗаголовокСсылки;
	Элементы.ФормаСотрудникиРоли.Заголовок = "Роль " + Параметры.ЗаголовокСсылки;
	Элементы.ФормаСотрудникиРоли.Пометка = Истина;
	
	ЗаполнитьСписок();
	
	//Если Параметры.Список.Количество() Тогда
	//	ИмяСправочника = Параметры.Список[0].Метаданные().Имя;
	//	Запрос = Новый Запрос;
	//	Запрос.УстановитьПараметр("Список", Параметры.Список);
	//	Запрос.Текст =
	//	"ВЫБРАТЬ
	//	|	НекийСправочник.Ссылка КАК Ссылка,
	//	|	НекийСправочник.Наименование КАК Наименование
	//	|ИЗ
	//	|	Справочник." + ИмяСправочника + " КАК НекийСправочник
	//	|ГДЕ
	//	|	НекийСправочник.Ссылка В(&Список)
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	Наименование";
	//	СписокВыбора.Загрузить(Запрос.Выполнить().Выгрузить());
	//КонецЕсли;
	//
	//ТекущиеСтроки = СписокВыбора.НайтиСтроки(Новый Структура("Ссылка", Параметры.ТекущийЭлемент));
	//Если ТекущиеСтроки.Количество() Тогда
	//	Элементы.СписокВыбора.ТекущаяСтрока = ТекущиеСтроки[0].ПолучитьИдентификатор();
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписок()
	
	Если Элементы.ФормаСотрудникиРоли.Пометка Тогда
		Заголовок = ЗаголовокПоУмолчанию + " (" + Элементы.ФормаСотрудникиРоли.Заголовок + " на " + Формат(ДатаРедактирования, "ДФ=dd.MM.yyyy") + ")";
	Иначе
		Заголовок = ЗаголовокПоУмолчанию + " (все роли)";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаРедактирования", КонецДня(ДатаРедактирования));
	Запрос.УстановитьПараметр("ТерминалДоставки", Терминал);
	Запрос.УстановитьПараметр("ТекущийЭлемент", ТекущийЭлементСписка);
	Запрос.УстановитьПараметр("Исключения", СписокИсключений.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("СотрудникиРоли", Элементы.ФормаСотрудникиРоли.Пометка);
	Запрос.УстановитьПараметр("РавенствоРоли", ИмяСправочника = "новаЭкспедиторы");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	новаВодители.Ссылка КАК Ссылка,
	|	новаВодители.Наименование КАК Наименование
	|ИЗ
	|	Справочник.новаВодители КАК новаВодители
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВЗ_МаксПериоды.Период КАК Период,
	|			ВЗ_МаксПериоды.ФизЛицо КАК ФизЛицо,
	|			МАКСИМУМ(РаботникиОрганизации.Регистратор) КАК Регистратор
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					МАКСИМУМ(РаботникиОрганизации.Период) КАК Период,
	|					РаботникиОрганизации.ФизЛицо КАК ФизЛицо
	|				ИЗ
	|					РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|				
	|				СГРУППИРОВАТЬ ПО
	|					РаботникиОрганизации.ФизЛицо) КАК ВЗ_МаксПериоды
	|				ПО РаботникиОрганизации.Период = ВЗ_МаксПериоды.Период
	|					И РаботникиОрганизации.ФизЛицо = ВЗ_МаксПериоды.ФизЛицо
	|					И (РаботникиОрганизации.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВЗ_МаксПериоды.Период,
	|			ВЗ_МаксПериоды.ФизЛицо) КАК ВЗ_ПриемНаРаботу
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|			ПО ВЗ_ПриемНаРаботу.Период = РаботникиОрганизации.Период
	|				И ВЗ_ПриемНаРаботу.Регистратор = РаботникиОрганизации.Регистратор
	|				И ВЗ_ПриемНаРаботу.ФизЛицо = РаботникиОрганизации.ФизЛицо
	|		ПО новаВодители.ФизЛицо = ВЗ_ПриемНаРаботу.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыФизЛиц.СрезПоследних(&ДатаРедактирования, ) КАК ДополнительныеПараметрыФизЛицСрезПоследних
	|		ПО новаВодители.ФизЛицо = ДополнительныеПараметрыФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	НЕ новаВодители.ЭтоГруппа
	|	И новаВодители.Родитель.ТерминалДоставки = &ТерминалДоставки
	|	И НЕ новаВодители.Ссылка В (&Исключения)
	|	И ЕСТЬNULL(РаботникиОрганизации.Состояние, ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.Уволен)) = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию)
	|	И ВЫБОР
	|			КОГДА &СотрудникиРоли
	|				ТОГДА &РавенствоРоли
	|							И ЕСТЬNULL(ДополнительныеПараметрыФизЛицСрезПоследних.ОсновнаяРольСотрудника, ЗНАЧЕНИЕ(Справочник.РолиСотрудников.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.РолиСотрудников.Экспедитор)
	|						ИЛИ НЕ &РавенствоРоли
	|							И ЕСТЬNULL(ДополнительныеПараметрыФизЛицСрезПоследних.ОсновнаяРольСотрудника, ЗНАЧЕНИЕ(Справочник.РолиСотрудников.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.РолиСотрудников.Экспедитор)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	новаВодители.Ссылка,
	|	новаВодители.Наименование
	|ИЗ
	|	Справочник.новаВодители КАК новаВодители
	|ГДЕ
	|	новаВодители.Ссылка = &ТекущийЭлемент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "новаВодители", ИмяСправочника);
	
	СписокВыбора.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ТекущиеСтроки = СписокВыбора.НайтиСтроки(Новый Структура("Ссылка", ТекущийЭлементСписка));
	Если ТекущиеСтроки.Количество() Тогда
		Элементы.СписокВыбора.ТекущаяСтрока = ТекущиеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЗначение(Команда)

	ТекущиеДанные = Элементы.СписокВыбора.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Закрыть(ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокВыбора.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Закрыть(ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СотрудникиРолиНаСервере()
	
	Элементы.ФормаСотрудникиРоли.Пометка = Не Элементы.ФормаСотрудникиРоли.Пометка;
	ЗаполнитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиРоли(Команда)
	СотрудникиРолиНаСервере();
КонецПроцедуры

