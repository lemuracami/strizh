Перем ПодключениеКМагазину;

&НаКлиенте
Перем ДатаНач Экспорт;
&НаКлиенте
Перем ДатаКон Экспорт;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ДатаНач", НачалоДня(ТекущаяДата()));
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ДатаКон", КонецДня(ТекущаяДата()));
	СписокДокументовФрахтов.Параметры.УстановитьЗначениеПараметра("ДатаНач", НачалоДня(ТекущаяДата()));
	СписокДокументовФрахтов.Параметры.УстановитьЗначениеПараметра("ДатаКон", КонецДня(ТекущаяДата()));
	
	// МАС - 05.06.2017 - №954 --->> 	
	ТекТерминал = ?(ЗначениеЗаполнено(ПараметрыСеанса.ТерминалДоставки), ПараметрыСеанса.ТерминалДоставки, Справочники.РегиональныеТерминалы.МоскваСтриж);
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ТерминалДоставки", ТекТерминал);
	СписокДокументовФрахтов.Параметры.УстановитьЗначениеПараметра("ТерминалДоставки", ТекТерминал);
	// <<--- МАС 
	
	ТерминалДляФормы = ТекТерминал;
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ТерминалДоставки", ТекТерминал);
	СхемаПланирования = РегистрыСведений.АктуальныеСхемыПланированияVeeroute.ПолучитьПоследнее(, СтруктураОтбора).СхемаПланированияVeerote;
	ОбСхемаПланирования = СхемаПланирования.ПолучитьОбъект();
	МасРаспредЦентр = ОбСхемаПланирования.РаспределительныеЦентры.ВыгрузитьКолонку("РаспределительныйЦентр");
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("РаспредЦентры", МасРаспредЦентр);
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Заголовок = "Заборы за " + ПредставлениеПериода(НачалоДня(ТекущаяДата()), КонецДня(ТекущаяДата()), "ДЛФ=DD");
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	Если Поле.Имя = "Водитель" Тогда
		Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
		В = ОткрытьФормуМодально("Справочник.новаВодители.ФормаВыбора", ПараметрыФормы);
		Если ЗначениеЗаполнено(В) Тогда
			Д = Док.ПолучитьОбъект();
			Д.Водитель = В;
			Д.Записать(РежимЗаписиДокумента.Запись);
			Элементы.СписокДокументов.Обновить();
		КонецеСли;	
	ИначеЕсли Поле.Имя = "Экспедитор" Тогда
		Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
		В = ОткрытьФормуМодально("Справочник.новаЭкспедиторы.ФормаВыбора", ПараметрыФормы);
		Если ЗначениеЗаполнено(В) Тогда
			Д = Док.ПолучитьОбъект();
			Д.Экспедитор = В;
			Д.Записать(РежимЗаписиДокумента.Запись);
			Элементы.СписокДокументов.Обновить();
		КонецеСли;	
	ИначеЕсли Поле.Имя = "Транспорт" Тогда
		Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
		В = ОткрытьФормуМодально("Справочник.новаТранспорт.ФормаВыбора");
		Если ЗначениеЗаполнено(В) Тогда
			Д = Док.ПолучитьОбъект();
			Д.Транспорт = В;
			Д.Записать(РежимЗаписиДокумента.Запись);
			Элементы.СписокДокументов.Обновить();
		КонецеСли;	
	ИначеЕсли Поле.Имя = "ТочкаДоставки" Тогда
		ТД = Элементы.СписокДокументов.ТекущиеДанные.ТочкаДоставки;
		если ЗначениеЗаполнено(ТД) Тогда
			Ф = ТД.ПолучитьФорму("ФормаЭлемента2");
		Иначе
			Ф = Справочники.новаТочкиДоставки.ПолучитьФорму("ФормаЭлемента2")
		КонецеСли;	
		Ф.Заказ = Элементы.СписокДокументов.ТекущиеДанные.Док;
		Ф.НадоПроизводитьПоискПолигона = Истина;
		Ф.ОткрытьМодально();
		//В = ОткрытьФормуМодально("Справочник.новаТочкиДоставки.ФормаОбъекта");
		//Если ЗначениеЗаполнено(В) Тогда
		//	Д = Док.ПолучитьОбъект();
		//	Д.Транспорт = В;
		//	Д.Записать(РежимЗаписиДокумента.Запись);
		//	Элементы.СписокДокументов.Обновить();
		//КонецеСли;	
	КонецеСли;	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВАдминкуНаСервереЗаборы()
	
	Попытка
		ПодключениеКМагазину = Евген.СоздатьПодключениеКИнтернетМагазину(); 
	Исключение
		Сообщить("Не удалось создать подключение: "+ОписаниеОшибки(), СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	
	//Зап = Новый Запрос;
	//Зап.Текст = "ВЫБРАТЬ
	//            |	ЗаборТовара.Номер,
	//            |	ЗаборТовара.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта,
	//            |	ЗаборТовара.ДатаДоставки,
	//            |	ЗаборТовара.ТочкаДоставки.Адрес.Наименование КАК АдресДоставки,
	//            |	ЕСТЬNULL(ЗаборТовара.ТочкаДоставки.Москва, ИСТИНА) КАК ЭтоМосква
	//            |ИЗ
	//            |	Документ.ЗаборТовара КАК ЗаборТовара
	//            |ГДЕ
	//            |	ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	//            |	И НЕ ЗаборТовара.СтатусИнтернетМагазина В (3, 4)
	//            |	И ЗаборТовара.Дата МЕЖДУ &ДатаНач И &ДатаКон";
	//Зап.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));			
	//Зап.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));
	
	
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ЗаборТовара.Номер КАК Номер,
	            |	ЗаборТовара.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта,
	            |	ЗаборТовара.ДатаДоставки КАК ДатаДоставки,
	            |	ЗаборТовара.ТочкаДоставки.Адрес.Наименование КАК АдресДоставки,
	            |	ЕСТЬNULL(ЗаборТовара.ТочкаДоставки.Москва, ИСТИНА) КАК ЭтоМосква,
	            |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Номер КАК НомерРейса,
	            |	ЗаборТовара.Водитель КАК Водитель,
	            |	ЗаборТовара.Экспедитор КАК Экспедитор
	            |ИЗ
	            |	Документ.ЗаборТовара КАК ЗаборТовара
	            |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс.Заказы КАК РейсЗаказы
	            |		ПО ЗаборТовара.Ссылка = РейсЗаказы.Заказ
	            |ГДЕ
	            |	ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	            |	И НЕ ЗаборТовара.СтатусИнтернетМагазина В (3, 4)
	            |	И ЗаборТовара.Дата МЕЖДУ &ДатаНач И &ДатаКон
	            |	И ЗаборТовара.ТерминалДоставки = &ТерминалДоставки";
	Зап.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));			
	Зап.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));   	
	// МАС - 05.06.2017 - №954 --->> 
	ТекТерминал = ?(ЗначениеЗаполнено(ПараметрыСеанса.ТерминалДоставки), ПараметрыСеанса.ТерминалДоставки, Справочники.РегиональныеТерминалы.МоскваСтриж);
	Зап.УстановитьПараметр("ТерминалДоставки", ТекТерминал);
	// <<--- МАС 
		
		
	Таб = Зап.Выполнить().Выгрузить();
	
	Стр = "DECLARE @t TOrderCar   ";
	
	Стр2 = "DECLARE @t TOrderTrip   ";
	//Асеев 20.11.2020 (Задача № 4205)>>>
	НачалоСтр2 = Стр2;
	//Асеев 20.11.2020 (Задача № 4205)<<<
	
	// - Дробница Р. 2482
	МассивПараметров = Новый Массив;	
	// Дробница Р. 2482 - 

	Для Каждого Тек Из Таб Цикл
		
		Стр = Стр + "                                                                                                                                                                                                                      
		|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(Тек.Номер) + ",'" + Тек.НомерТранспорта + "','" + ПараметрыСеанса.ТекущийПользователь + "', '" + ДатаИз1С(Тек.ДатаДоставки, Ложь)+"', " + ?(Тек.АдресДоставки="NULL", "NULL", "'" + Тек.АдресДоставки + "'") + ?(Тек.ЭтоМосква, ",0", ",1") + ")";
		
		//Асеев 20.11.2020 (Задача № 4205)>>>
		//Если ЗначениеЗаполнено(Тек.НомерРейса) Тогда
		Если ЗначениеЗаполнено(Тек.НомерРейса) И ЗначениеЗаполнено(Тек.НомерТранспорта) Тогда
		//Асеев 20.11.2020 (Задача № 4205)<<<
			Стр2 = "" + Стр2 + "
			|INSERT INTO @t ([orderId],[tripId],[car],[fio1],[fio2]) VALUES (" + СокрЛП(Тек.Номер) + "," + Формат(Число(Тек.НомерРейса), "ЧГ=") + ",'" + Тек.НомерТранспорта + "','" + Тек.Водитель + "', '" + Тек.Экспедитор + "')";			
		КонецЕсли;

		// - Дробница Р. 2482
		ПараметрыЗапроса = Новый Структура();
		ПараметрыЗапроса.Вставить("Address",  ?(Тек.АдресДоставки="NULL", "NULL", "'" + Тек.АдресДоставки + "'"));
		ПараметрыЗапроса.Вставить("Car", СокрЛП(Тек.НомерТранспорта));
		ПараметрыЗапроса.Вставить("DeliveryDate", Тек.ДатаДоставки);
		ПараметрыЗапроса.Вставить("IsRegion", ?(Тек.ЭтоМосква, "0", "1"));
		ПараметрыЗапроса.Вставить("OrderId", СокрЛП(Тек.Номер));
		ПараметрыЗапроса.Вставить("Who", СокрЛП(ПараметрыСеанса.ТекущийПользователь));
		
		МассивПараметров.Добавить(ПараметрыЗапроса);		
		// Дробница Р. 2482 - 
	КонецЦикла;	
	
	Попытка
		// - Дробница Р. 2482
		Если МассивПараметров.Количество() > 0 Тогда
			
			ПараметрыЗапроса = Новый Структура;		
			ПараметрыЗапроса.Вставить("orderCars", МассивПараметров);
			СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetOrderCarsResult, ПараметрыЗапроса,,,Истина);
			Если НЕ СтруктураВозврата.Успешно Тогда
				ВызватьИсключение "Ошибка выгрузки машин. " + СтруктураВозврата.ОписаниеОшибки;
			КонецЕсли;
			Сообщить("Выгрузка окончена.");

		КонецЕсли;
		//ЗапросКИнтернетМагазину(Стр + "
		//|EXEC import_setOrderCarsFrom1C @t
		//|");
		//Сообщить("Выгрузка окончена.");
		// Дробница Р. 2482 - 

	Исключение
		Сообщить("Ошибка выгрузки машин. " + ОписаниеОшибки(), СтатусСообщения.Важное);
	КонецПопытки;
	
	
	
	// Михушкин --->> 	
	//Асеев 20.11.2020 (Задача № 4205)>>>
	//Если НЕ Стр2 = "" Тогда
	Если Стр2 <> НачалоСтр2 Тогда
	//Асеев 20.11.2020 (Задача № 4205)<<<
		Попытка
			//Асеев 09.09.2020 (Задача № 4205)>>>
			//добавлен КонтекстВызова
			Евген.ЗапросКИнтернетМагазину(Стр2 + "
			|EXEC import_setTripFrom1C @t
			|", ПодключениеКМагазину,,, "Обработка.ВыгрузкаВАдминкуЗаборовФрахтов.ФормаЛогистов.ВыгрузитьВАдминкуНаСервереЗаборы");
			//Асеев 09.09.2020 (Задача № 4205)<<<
		Исключение
			#Если Клиент Тогда
				Сообщить("Ошибка выгрузки заборов. " + ОписаниеОшибки(), СтатусСообщения.Важное);
			#КонецеСли
		КонецПопытки;		
	КонецЕсли;	
	// <<--- Михушкин 
	
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВАдминкуНаСервереФрахты()
	
	Попытка
		ПодключениеКМагазину = Евген.СоздатьПодключениеКИнтернетМагазину(); 
	Исключение
		Сообщить("Не удалось создать подключение: "+ОписаниеОшибки(), СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	
	Зап = Новый Запрос;
	//Зап.Текст = "ВЫБРАТЬ
	//            |	Фрахт.Номер КАК Номер,
	//            |	Фрахт.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта,
	//            |	Фрахт.ДатаДоставки КАК ДатаДоставки,
	//            |	Фрахт.ТочкаДоставки.Адрес.Наименование КАК АдресДоставки,
	//            |	ЕСТЬNULL(Фрахт.ТочкаДоставки.Москва, ИСТИНА) КАК ЭтоМосква
	//            |ИЗ
	//            |	Документ.Фрахт КАК Фрахт
	//            |ГДЕ
	//            |	Фрахт.ПометкаУдаления = ЛОЖЬ
	//            |	И НЕ Фрахт.СтатусИнтернетМагазина В (3, 4)
	//            |	И Фрахт.Дата МЕЖДУ &ДатаНач И &ДатаКон
	//            |	И Фрахт.Терминал = &ТерминалДоставки";
	
	// Якурнов 13.07.2018 12:56:40
	Зап.Текст = "ВЫБРАТЬ
	            |	Фрахт.Номер КАК Номер,
	            |	Фрахт.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта,
	            |	Фрахт.ДатаДоставки КАК ДатаДоставки,
	            |	Фрахт.ТочкаДоставки.Адрес.Наименование КАК АдресДоставки,
	            |	ЕСТЬNULL(Фрахт.ТочкаДоставки.Москва, ИСТИНА) КАК ЭтоМосква,
	            |	Фрахт.Водитель КАК Водитель,
	            |	Фрахт.Экспедитор КАК Экспедитор
	            |ИЗ
	            |	Документ.Фрахт КАК Фрахт
	            |ГДЕ
	            |	Фрахт.ПометкаУдаления = ЛОЖЬ
	            |	И НЕ Фрахт.СтатусИнтернетМагазина В (3, 4)
	            |	И Фрахт.Дата МЕЖДУ &ДатаНач И &ДатаКон
	            |	И Фрахт.Терминал = &ТерминалДоставки";
	Зап.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));			
	Зап.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));	
	// МАС - 05.06.2017 - №954 --->> 
	ТекТерминал = ?(ЗначениеЗаполнено(ПараметрыСеанса.ТерминалДоставки), ПараметрыСеанса.ТерминалДоставки, Справочники.РегиональныеТерминалы.МоскваСтриж);
	Зап.УстановитьПараметр("ТерминалДоставки", ТекТерминал);
	// <<--- МАС
	
	
	Таб = Зап.Выполнить().Выгрузить();
	
	Стр = "DECLARE @t TOrderCar   ";
	
	// Якурнов 13.07.2018 12:58:26
	Стр2 = "DECLARE @t TOrderTrip   ";
	//Асеев 20.11.2020 (Задача № 4205)>>>
	НачалоСтр2 = Стр2;
	//Асеев 20.11.2020 (Задача № 4205)<<<

	// - Дробница Р. 2482
	МассивПараметров = Новый Массив;	
	// Дробница Р. 2482 - 
	
	Для Каждого Тек Из Таб Цикл
		Стр = Стр + "                                                                                                                                                                                                                      
		|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(Тек.Номер) + ",'" + Тек.НомерТранспорта + "','" + ПараметрыСеанса.ТекущийПользователь + "', '"+ДатаИз1С(Тек.ДатаДоставки, Ложь)+"', " + ?(Тек.АдресДоставки="NULL", "NULL", "'" + Тек.АдресДоставки + "'") + ?(Тек.ЭтоМосква, ",0", ",1") + ")";
		
		//Асеев 20.11.2020 (Задача № 4205)>>>
		Если ЗначениеЗаполнено(Тек.НомерТранспорта) Тогда
		//Асеев 20.11.2020 (Задача № 4205)<<<
			// Якурнов 13.07.2018 12:58:15
			Стр2 = Стр2 + "
			|INSERT INTO @t ([orderId],[tripId],[car],[fio1],[fio2]) VALUES (" + СокрЛП(Тек.Номер) + "," + Формат(Число(Тек.Номер), "ЧГ=") + ",'" + Тек.НомерТранспорта + "','" + Тек.Водитель + "', '"+Тек.Экспедитор+"')";
		КонецЕсли;
		
		// - Дробница Р. 2482
		ПараметрыЗапроса = Новый Структура();
		ПараметрыЗапроса.Вставить("Address",  ?(Тек.АдресДоставки="NULL", "NULL", "'" + Тек.АдресДоставки + "'"));
		ПараметрыЗапроса.Вставить("Car", СокрЛП(Тек.НомерТранспорта));
		ПараметрыЗапроса.Вставить("DeliveryDate", Тек.ДатаДоставки);
		ПараметрыЗапроса.Вставить("IsRegion", ?(Тек.ЭтоМосква, "0", "1"));
		ПараметрыЗапроса.Вставить("OrderId", СокрЛП(Тек.Номер));
		ПараметрыЗапроса.Вставить("Who", СокрЛП(ПараметрыСеанса.ТекущийПользователь));
		
		МассивПараметров.Добавить(ПараметрыЗапроса);		
		// Дробница Р. 2482 - 

	КонецЦикла;	
	
	Попытка
		// - Дробница Р. 2482
		Если МассивПараметров.Количество() > 0 Тогда
			
			ПараметрыЗапроса = Новый Структура;		
			ПараметрыЗапроса.Вставить("orderCars", МассивПараметров);
			СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetOrderCarsResult, ПараметрыЗапроса,,,Истина);
			Если НЕ СтруктураВозврата.Успешно Тогда
				ВызватьИсключение "Ошибка выгрузки машин. " + СтруктураВозврата.ОписаниеОшибки;
				//Сообщить("Ошибка выгрузки машин. " + ОписаниеОшибки(), СтатусСообщения.Важное);
			КонецЕсли;
			
		КонецЕсли;
		
		//ЗапросКИнтернетМагазину(Стр + "
		//|EXEC import_setOrderCarsFrom1C @t
		//|");
		// Дробница Р. 2482 - 
		
		// Якурнов 13.07.2018 12:45:07
		// Здесь добавим import_setTripFrom1C
		////ЗапросКИнтернетМагазину(Стр2 + "
		////|EXEC import_setTripFrom1C @t
		////|");
		
		//Асеев 20.11.2020 (Задача № 4205)>>>
		Если Стр2 <> НачалоСтр2 Тогда
		//Асеев 20.11.2020 (Задача № 4205)<<<
			//Асеев 09.09.2020 (Задача № 4205)>>>
			//добавлен КонтекстВызова
			Евген.ЗапросКИнтернетМагазину(Стр2 + "
			|EXEC import_setTripFrom1C @t
			|", ПодключениеКМагазину,,, "Обработка.ВыгрузкаВАдминкуЗаборовФрахтов.ФормаЛогистов.ВыгрузитьВАдминкуНаСервереФрахты");
			//Асеев 09.09.2020 (Задача № 4205)<<<
		КонецЕсли;
		
		Сообщить("Выгрузка окончена.");
	Исключение
		Сообщить("Ошибка выгрузки машин. " + ОписаниеОшибки(), СтатусСообщения.Важное);
	КонецПопытки;
	
	
КонецПроцедуры



Функция ДатаИз1С(Д, ЭтоКонец) Экспорт
	Возврат Формат(Год(Д),"ЧГ=0") + ЛидирующийНоль(Месяц(Д)) + ЛидирующийНоль(День(Д)) + " " +
			ЛидирующийНоль(Час(Д)) + ":" + ЛидирующийНоль(Минута(Д)) + ":" + ЛидирующийНоль(Секунда(Д)) +
			?(ЭтоКонец, ".998", "");
КонецФункции // ДатаИз1С()



Функция ЛидирующийНоль(зн)
	Если Зн < 10 Тогда
		Возврат "0"+Зн;
	Иначе
		Возврат Зн;
	КонецЕсли;	
КонецФункции

Функция ЗапросКИнтернетМагазину(ТекстЗапроса) Экспорт
	Cmd = Новый COMОбъект("ADODB.Command");
	Cmd.ActiveConnection = ПодключениеКМагазину;
	Cmd.CommandText = ТекстЗапроса;
	Cmd.CommandType = 1;
	Возврат Cmd.Execute();
КонецФункции



&НаКлиенте
Процедура ВыгрузитьВАдминку(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗаборы Тогда
		ВыгрузитьВАдминкуНаСервереЗаборы();
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаФрахты Тогда	
		ВыгрузитьВАдминкуНаСервереФрахты();
	КонецЕСли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалВидимости(Команда)
	// Вставить содержимое обработчика.
	Инт = Новый ДиалогРедактированияСтандартногоПериода();
	Инт.Период = Новый СтандартныйПериод(ДатаНач, ДатаКон);
	Если Инт.Редактировать() Тогда
		ДатаНач = Инт.Период.ДатаНачала;
		ДатаКон = Инт.Период.ДатаОкончания;
		СписокДокументов.Параметры.УстановитьЗначениеПараметра("ДатаНач", ДатаНач);
		СписокДокументов.Параметры.УстановитьЗначениеПараметра("ДатаКон", ДатаКон);
		Элементы.СписокДокументов.Обновить();
		СписокДокументовФрахтов.Параметры.УстановитьЗначениеПараметра("ДатаНач", ДатаНач);
		СписокДокументовФрахтов.Параметры.УстановитьЗначениеПараметра("ДатаКон", ДатаКон);
		Элементы.СписокДокументовФрахтов.Обновить();
	КонецЕСли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовФрахтовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	Если Поле.Имя = "СписокДокументовФрахтовВодитель" Тогда
		Док = Элементы.СписокДокументовФрахтов.ТекущиеДанные.Док;
		В = ОткрытьФормуМодально("Справочник.новаВодители.ФормаВыбора", ПараметрыФормы);
		Если ЗначениеЗаполнено(В) Тогда
			Д = Док.ПолучитьОбъект();
			Д.Водитель = В;
			Д.Записать(РежимЗаписиДокумента.Запись);
			Элементы.СписокДокументовФрахтов.Обновить();
		КонецеСли;	
	ИначеЕсли Поле.Имя = "СписокДокументовФрахтовЭкспедитор" Тогда
		Док = Элементы.СписокДокументовФрахтов.ТекущиеДанные.Док;
		В = ОткрытьФормуМодально("Справочник.новаЭкспедиторы.ФормаВыбора", ПараметрыФормы);
		Если ЗначениеЗаполнено(В) Тогда
			Д = Док.ПолучитьОбъект();
			Д.Экспедитор = В;
			Д.Записать(РежимЗаписиДокумента.Запись);
			Элементы.СписокДокументовФрахтов.Обновить();
		КонецеСли;	
	ИначеЕсли Поле.Имя = "СписокДокументовФрахтовТранспорт" Тогда
		Док = Элементы.СписокДокументовФрахтов.ТекущиеДанные.Док;
		В = ОткрытьФормуМодально("Справочник.новаТранспорт.ФормаВыбора");
		Если ЗначениеЗаполнено(В) Тогда
			Д = Док.ПолучитьОбъект();
			Д.Транспорт = В;
			Д.Записать(РежимЗаписиДокумента.Запись);
			Элементы.СписокДокументовФрахтов.Обновить();
		КонецеСли;	
	КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЗначение(Команда)
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗаборы Тогда
		Если Элементы.СписокДокументов.ТекущийЭлемент.Имя = "Водитель" Тогда
			От = Вопрос("Очистить значение поля """ + Элементы.СписокДокументов.ТекущийЭлемент.Заголовок + """?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Если От = КодВозвратаДиалога.Да Тогда
				Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
				Д = Док.ПолучитьОбъект();
				Д.Водитель = "";
				Д.Записать(РежимЗаписиДокумента.Запись);
				Элементы.СписокДокументов.Обновить();
			КонецеСли;	
		ИначеЕсли Элементы.СписокДокументов.ТекущийЭлемент.Имя = "Экспедитор" Тогда
			От = Вопрос("Очистить значение поля """ + Элементы.СписокДокументов.ТекущийЭлемент.Заголовок + """?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Если От = КодВозвратаДиалога.Да Тогда
				Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
				Д = Док.ПолучитьОбъект();
				Д.Экспедитор = "";
				Д.Записать(РежимЗаписиДокумента.Запись);
				Элементы.СписокДокументов.Обновить();
			КонецеСли;	
		ИначеЕсли Элементы.СписокДокументов.ТекущийЭлемент.Имя = "Транспорт" Тогда
			От = Вопрос("Очистить значение поля """ + Элементы.СписокДокументов.ТекущийЭлемент.Заголовок + """?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Если От = КодВозвратаДиалога.Да Тогда
				Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
				Д = Док.ПолучитьОбъект();
				Д.Транспорт = "";
				Д.Записать(РежимЗаписиДокумента.Запись);
				Элементы.СписокДокументов.Обновить();
			КонецеСли;	
		КонецеСли;	
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаФрахты Тогда
		Если Элементы.СписокДокументовФрахтов.ТекущийЭлемент.Имя = "СписокДокументовФрахтовВодитель" Тогда
			От = Вопрос("Очистить значение поля """ + Элементы.СписокДокументовФрахтов.ТекущийЭлемент.Заголовок + """?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Если От = КодВозвратаДиалога.Да Тогда
				Док = Элементы.СписокДокументовФрахтов.ТекущиеДанные.Док;
				Д = Док.ПолучитьОбъект();
				Д.Водитель = "";
				Д.Записать(РежимЗаписиДокумента.Запись);
				Элементы.СписокДокументовФрахтов.Обновить();
			КонецеСли;	
		ИначеЕсли Элементы.СписокДокументовФрахтов.ТекущийЭлемент.Имя = "СписокДокументовФрахтовЭкспедитор" Тогда
			От = Вопрос("Очистить значение поля """ + Элементы.СписокДокументовФрахтов.ТекущийЭлемент.Заголовок + """?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Если От = КодВозвратаДиалога.Да Тогда
				Док = Элементы.СписокДокументовФрахтов.ТекущиеДанные.Док;
				Д = Док.ПолучитьОбъект();
				Д.Экспедитор = "";
				Д.Записать(РежимЗаписиДокумента.Запись);
				Элементы.СписокДокументовФрахтов.Обновить();
			КонецеСли;	
		ИначеЕсли Элементы.СписокДокументовФрахтов.ТекущийЭлемент.Имя = "СписокДокументовФрахтовТранспорт" Тогда
			От = Вопрос("Очистить значение поля """ + Элементы.СписокДокументовФрахтов.ТекущийЭлемент.Заголовок + """?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Если От = КодВозвратаДиалога.Да Тогда
				Док = Элементы.СписокДокументовФрахтов.ТекущиеДанные.Док;
				Д = Док.ПолучитьОбъект();
				Д.Транспорт = "";
				Д.Записать(РежимЗаписиДокумента.Запись);
				Элементы.СписокДокументовФрахтов.Обновить();
			КонецеСли;	
		КонецеСли;
	КонецеСли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаЗаборы Тогда
		Элементы.ФормаВыгрузитьВАдминку.Доступность = Ложь;
	Иначе 	
		Элементы.ФормаВыгрузитьВАдминку.Доступность = Истина;
	КонецЕсли;	
	
КонецПроцедуры

ДатаНач = НачалоДня(ТекущаяДата());
ДатаКон = КонецДня(ТекущаяДата());
