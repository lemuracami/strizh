Процедура Печать() Экспорт
	Пар = "фрщмтфыь";
	
	Если ВвестиСтроку(Пар, "Введите пароль...", 20) Тогда
		Если Пар <> "8478" Тогда
			Возврат;
		КонецеСли;	
	Иначе
		Возврат;
	КонецеСли;	
	
	Если ОтчетВодителя.Пустая() Тогда
		Возврат;
	КонецЕсли;	
	
	Таб = Новый ТабличныйДокумент;
	
	М = ПолучитьМакет("Макет");
	
	Ш = М.ПолучитьОбласть("Шапка");
	
	ШО = М.ПолучитьОбласть("ШапкаО");
	ШВ = М.ПолучитьОбласть("ШапкаВ");
	ШП = М.ПолучитьОбласть("ШапкаП");
	ШЧ = М.ПолучитьОбласть("ШапкаЧ");
	Проб = М.ПолучитьОбласть("Пробел");
	СтрО = М.ПолучитьОбласть("СтрокаОтказы");
	СтрП = М.ПолучитьОбласть("СтрокаПереносы");
	СтрТ = М.ПолучитьОбласть("Товар");
	ОблПодвал = М.ПолучитьОбласть("Подвал");
	
	ОблИт = М.ПолучитьОбласть("ИтогоПоГруппам");
	ОблИтОбщий = М.ПолучитьОбласть("Итого");
	
	
	МасЧ = Новый Массив;
	МасП = Новый Массив;
	МасО = Новый Массив;
	
	МасОБ = Новый Массив;
	МасОС = Новый Массив;
	МасОН = Новый Массив;
	
	МасПЗ = Новый Массив;
	
	
	МасВ = Новый Массив;
	МасВып = Новый Массив;
	ИтВып = 0;
	ИтПер = 0;
	
	ИтОткСЗ = 0;
	ИтОткБЗ = 0;
	
	СумСЗ = 0;
	ИтОткНетНаСкладе = 0;
	
	ИтСумДост = 0;	
	
	Для Каждого Тек Из ОтчетВодителя.Задания Цикл
		Если Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.НетНаСкладе Тогда
			Продолжить;
		КонецеСли;	
		НайРеал = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Тек.Задание.Номер);
		Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Или Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
			Возвр = Ложь;
			НайВ = Документы.ВозвратТоваровОтПокупателя.НайтиПоНомеру(Тек.Задание.Номер, Тек.Задание.Дата);
			Если Не НайВ.Пустая() Тогда
				Если НайВ.Товары.Количество() <> 0 Тогда
					МасВ.Добавить(Тек);
					Возвр = Истина;
				КонецеСли;	
			КонецеСли;	
			
			Если Не Возвр Тогда
				МасВып.Добавить(Тек);
                ////Серегин М.В. 21.07.2015 15:00:31 Старый код
                //Если НайРеал.ТипОплаты = 1 И Тек.РезультатДоставки <> Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
                //Серегин М.В. 21.07.2015 15:00:44
                Если Тек.ТипОплаты.Код = 1 И Тек.РезультатДоставки <> Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
                    
                    //Серегин М.В. 02.09.2015 10:45:36 новый костыль 
                    Если НайРеал.УчитыватьИтогоКОплате Тогда //+++++Серегин М.В. 18.02.2016 12:24:57 было НайРеал.ВладелецТовара = Константы.КонтрагентЯндекс.Получить() Тогда
                        КОплатеКлиентом = ПолучитьСуммуКОплатеКлиентом(НайРеал);
                        ИтВып = ИтВып + КОплатеКлиентом;
                    //Серегин М.В. 02.09.2015 11:28:58 
                    Иначе
                        ИтВып = ИтВып + НайРеал.Товары.Итог("Сумма") + НайРеал.Услуги.Итог("Сумма");
                    КонецЕсли;
                КонецеСли;	
			КонецеСли;
			
			Если НайРеал.ТипОплаты = 1 Тогда
				//ИтСумДост = ИтСумДост + НайРеал.Услуги.итог("Сумма");
			КонецеСли;	
		КонецеСли;
		
		Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
			МасЧ.Добавить(Тек);
			//Если НайРеал.ТипОплаты = 1 Тогда
			//	
			//КонецеСли;	
			Если НайРеал.ТипОплаты = 1 Тогда
				//ИтСумДост = ИтСумДост + НайРеал.Услуги.итог("Сумма");
			КонецеСли;				
		КонецеСли;	
		
		Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена И (Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки Или Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Или Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносНаВторуюОчередь) Тогда
			Если Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки Тогда
				МасП.Добавить(Тек);
			ИначеЕсли Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
				МасПЗ.Добавить(Тек);
			КонецеСли;	
			Если НайРеал.ТипОплаты = 1 Тогда
				ИтПер = ИтПер + НайРеал.Товары.Итог("Сумма") + НайРеал.Услуги.Итог("Сумма");
			КонецеСли;	
			
			//Если НайРеал.ТипОплаты = 1 Тогда
				ИтСумДост = ИтСумДост + НайРеал.Услуги.итог("Сумма");
			//КонецеСли;				
		КонецеСли;	
		
		Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена И (Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Или Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Или Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.НетНаСкладе) Тогда
			МасО.Добавить(Тек);
			//Если НайРеал.ТипОплаты = 1 Тогда
				Если Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
					ИтОткБЗ = ИтОткБЗ + НайРеал.Товары.Итог("Сумма") + НайРеал.Услуги.Итог("Сумма");
					МасОБ.Добавить(Тек);
				ИначеЕсли Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
					ИтОткСЗ = ИтОткСЗ + НайРеал.Товары.Итог("Сумма") + НайРеал.Услуги.Итог("Сумма");
					МасОС.Добавить(Тек);
					СумСЗ = СумСЗ + НайРеал.Услуги.Итог("Сумма");
				ИначеЕсли Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.НетНаСкладе Тогда
					ИтОткНетНаСкладе = ИтОткНетНаСкладе + НайРеал.Товары.Итог("Сумма") + НайРеал.Услуги.Итог("Сумма");
					МасОН.Добавить(Тек);
				КонецеСли;
				
				//Если Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
					ИтСумДост = ИтСумДост + НайРеал.Услуги.итог("Сумма");
				//КонецеСли;	
			//КонецеСли;	
		КонецеСли;	
	КонецЦикла;	
	
	Если МасЧ.Количество() = 0 И МасП.Количество() = 0 И МасО.Количество() = 0 И МасВ.Количество() = 0 И МасПЗ.Количество() = 0 Тогда
		#Если Клиент Тогда
			Предупреждение("Отклонений по доставке нет!");
		#КонецеСли	
		Возврат;
	КонецЕСли;	
	
	Ш.Параметры.ДатаАкта = Формат(ОтчетВодителя.Дата, "ДЛФ=D");
	
	если Не ОтчетВодителя.Водитель.Пустая() Тогда
		Ш.Параметры.Водитель = СокрЛП(ОтчетВодителя.Водитель.Наименование);
	КонецеСли;	
	если Не ОтчетВодителя.Экспедитор.Пустая() Тогда
		Ш.Параметры.Экспедитор = СокрЛП(ОтчетВодителя.Экспедитор.Наименование);
	КонецеСли;	
	если Не ОтчетВодителя.Транспорт.Пустая() Тогда
		Ш.Параметры.НомерАвто = СокрЛП(ОтчетВодителя.Транспорт.НомерГосударственнойРегистрации);
	КонецеСли;
	Ш.Параметры.КолП = МасП.Количество() + МасПЗ.Количество();
	Ш.Параметры.КолО = МасО.Количество();
	
	Таб.Вывести(Ш);
	
	ИтСумОбщ = 0;
	ИтСум = 0;
	
    СумД = 0;
	ИтСумД = 0;
	
	Если МасО.Количество() <> 0 Тогда
		НПП = 1;
		Таб.Вывести(ШО);
		Для Сч = 0 По МасО.Количество() - 1 Цикл
			Ном = МасО[Сч].Задание.Номер;
			Р = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Ном);
			СтрО.Параметры.НомерЗаказа = СокрЛП(Ном) + "/" + СокрЛП(Р.НомерВнешнегоЗаказа);
			СтрО.Параметры.НПП = НПП;
			Если ЗначениеЗаполнено(МасО[Сч].ПричинаНеВыполнения) Тогда
				Пр = СокрЛП(МасО[Сч].ПричинаНеВыполнения.Наименование);
			Иначе
				Пр = "";
			КонецЕСли;
			
			Если ЗначениеЗаполнено(МасО[Сч].ПричинаОтказа) Тогда
				Если Пр = "" Тогда
					Пр = СокрЛП(МасО[Сч].ПричинаОтказа.Наименование);
				Иначе	
					Пр = Пр + " (" + СокрЛП(МасО[Сч].ПричинаОтказа.Наименование) + ")";
				КонецеСли;	
			КонецеСли;
			
			СтрО.Параметры.ПричинаОтказа = Пр;
			СтрО.Параметры.СуммаДоставки = Р.Услуги.Итог("Сумма");
			СумД = СумД + Р.Услуги.Итог("Сумма");
			ИтСумД = ИтСумД + Р.Услуги.Итог("Сумма");
			
			
			Таб.Вывести(СтрО);
			НПП = НПП + 1;
			
			Для Каждого Тек Из Р.Товары Цикл
				СтрТ.Параметры.Товар = Символы.Таб + СокрЛП(Тек.Номенклатура.Наименование) + " (" + СокрЛП(Тек.Номенклатура.Код) + "/" + СокрЛП(Тек.Номенклатура.Артикул) + ")";
				СтрТ.Параметры.Сумма = Тек.Сумма;
				СтрТ.Параметры.Количество = Тек.Количество;
				Таб.Вывести(СтрТ);
				
				Если Р.ТипОплаты = 1 Тогда
					ИтСум = ИтСум + Тек.Сумма;
				КонецеСли;	
				ИтСумОбщ = ИтСумОбщ + Тек.Сумма;
			КонецЦикла;	
			
			Для Каждого Тек Из Р.ПодарочныеПозиции Цикл
				СтрТ.Параметры.Товар = Символы.Таб + СокрЛП(Тек.Номенклатура.Наименование) + " (" + СокрЛП(Тек.Номенклатура.Код) + "/" + СокрЛП(Тек.Номенклатура.Артикул) + ")";
				СтрТ.Параметры.Сумма = 0;
				СтрТ.Параметры.Количество = Тек.Количество;
				Таб.Вывести(СтрТ);
			КонецЦикла;	
		КонецЦикла;	
	КонецеСли;
	
	
	ОблИт.Параметры.Сумма = ИтОткСЗ + ИтОткБЗ + ИтОткНетНаСкладе;
	ОблИт.параметры.СуммаДоставки = СумД;
	
	Если МасО.Количество() <> 0 Тогда
		Таб.Вывести(ОблИт);
	КонецеСли;	
	
	СумД = 0;
	Если МасВ.Количество() <> 0 Тогда
		НПП = 1;
		Таб.Вывести(ШВ);
		Для Сч = 0 По МасВ.Количество() - 1 Цикл
			Ном = МасВ[Сч].Задание.Номер;
			РР = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Ном);
			
			Р = Документы.ВозвратТоваровОтПокупателя.НайтиПоНомеру(Ном, МасВ[Сч].Задание.Дата);
			СтрО.Параметры.НомерЗаказа = СокрЛП(Ном) + "/" + СокрЛП(Р.НомерВнешнегоЗаказа);
			СтрО.Параметры.НПП = НПП;
			//Если ЗначениеЗаполнено(МасО[Сч].ПричинаНеВыполнения) Тогда
			//	Пр = СокрЛП(МасО[Сч].ПричинаНеВыполнения.Наименование);
			//Иначе
			//	Пр = "";
			//КонецЕСли;
			
			//Если ЗначениеЗаполнено(МасО[Сч].ПричинаОтказа) Тогда
			//	Если Пр = "" Тогда
			//		Пр = СокрЛП(МасО[Сч].ПричинаОтказа.Наименование);
			//	Иначе	
			//		Пр = Пр + " (" + СокрЛП(МасО[Сч].ПричинаОтказа.Наименование) + ")";
			//	КонецеСли;	
			//КонецеСли;
			СтрО.Параметры.ПричинаОтказа = "";
			СтрО.Параметры.СуммаДоставки = РР.Услуги.Итог("Сумма");
			Таб.Вывести(СтрО);
			НПП = НПП + 1;
			
			
			СумД = СумД + РР.Услуги.Итог("Сумма");
			ИтСумД = ИтСумД + РР.Услуги.Итог("Сумма");
						
			
			Для Каждого Тек Из Р.Товары Цикл
				СтрТ.Параметры.Товар = Символы.Таб + СокрЛП(Тек.Номенклатура.Наименование) + " (" + СокрЛП(Тек.Номенклатура.Код) + "/" + СокрЛП(Тек.Номенклатура.Артикул) + ")";
				СтрТ.Параметры.Сумма = Тек.Сумма;
				СтрТ.Параметры.Количество = Тек.Количество;
				Таб.Вывести(СтрТ);
				
				Если РР.ТипОплаты = 1 Тогда
					ИтСум = ИтСум + Тек.Сумма;
				КонецеСли;	
				ИтСумОбщ = ИтСумОбщ + Тек.Сумма;				
			КонецЦикла;	
			
			Для Каждого Тек Из РР.ПодарочныеПозиции Цикл
				СтрТ.Параметры.Товар = Символы.Таб + СокрЛП(Тек.Номенклатура.Наименование) + " (" + СокрЛП(Тек.Номенклатура.Код) + "/" + СокрЛП(Тек.Номенклатура.Артикул) + ")";
				СтрТ.Параметры.Сумма = 0;
				СтрТ.Параметры.Количество = Тек.Количество;
				Таб.Вывести(СтрТ);
			КонецЦикла;	
			
		КонецЦикла;	
	КонецеСли;
	
	
	Если МасПЗ.Количество() <> 0 Тогда
		Таб.Вывести(Проб);
		НПП = 1;
		Таб.Вывести(ШП);
		Для Сч = 0 По МасПЗ.Количество() - 1 Цикл
			Ном = МасПЗ[Сч].Задание.Номер;
			Р = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Ном);
			СтрП.Параметры.НомерЗаказа = СокрЛП(Ном) + "/" + СокрЛП(Р.НомерВнешнегоЗаказа);
			СтрП.Параметры.НПП = НПП;
			Если ЗначениеЗаполнено(МасПЗ[Сч].ПричинаНеВыполнения) Тогда
				Пр = СокрЛП(МасПЗ[Сч].ПричинаНеВыполнения.Наименование);
			Иначе
				Пр = "";
			КонецЕСли;
			
			Если ЗначениеЗаполнено(МасПЗ[Сч].ПричинаОтказа) Тогда
				Если Пр = "" Тогда
					Пр = СокрЛП(МасПЗ[Сч].ПричинаОтказа.Наименование);
				Иначе	
					Пр = Пр + " (" + СокрЛП(МасПЗ[Сч].ПричинаОтказа.Наименование) + ")";
				КонецеСли;	
			КонецеСли;
			СтрП.Параметры.ПричинаОтказа = Пр;
			СтрП.Параметры.ДатаПереноса = МасПЗ[Сч].ДатаПереноса;
			СтрП.Параметры.СуммаДоставки = Р.Услуги.Итог("Сумма");
			Таб.Вывести(СтрП);
			НПП = НПП + 1;
			
			
			СумД = СумД + Р.Услуги.Итог("Сумма");
			ИтСумД = ИтСумД + Р.Услуги.Итог("Сумма");
			
			Для Каждого Тек Из Р.Товары Цикл
				СтрТ.Параметры.Товар = Символы.Таб + СокрЛП(Тек.Номенклатура.Наименование) + " (" + СокрЛП(Тек.Номенклатура.Код) + "/" + СокрЛП(Тек.Номенклатура.Артикул) + ")";
				СтрТ.Параметры.Сумма = Тек.Сумма;
				СтрТ.Параметры.Количество = Тек.Количество;
				Таб.Вывести(СтрТ);
				
				Если Р.ТипОплаты = 1 Тогда
					ИтСум = ИтСум + Тек.Сумма;
				КонецеСли;	
				ИтСумОбщ = ИтСумОбщ + Тек.Сумма;
			КонецЦикла;	
			
			
			Для Каждого Тек Из Р.ПодарочныеПозиции Цикл
				СтрТ.Параметры.Товар = Символы.Таб + СокрЛП(Тек.Номенклатура.Наименование) + " (" + СокрЛП(Тек.Номенклатура.Код) + "/" + СокрЛП(Тек.Номенклатура.Артикул) + ")";
				СтрТ.Параметры.Сумма = 0;
				СтрТ.Параметры.Количество = Тек.Количество;
				Таб.Вывести(СтрТ);
			КонецЦикла;	
			
		КонецЦикла;	
	КонецеСли;	
	
	
	Если МасП.Количество() <> 0 Тогда
		Таб.Вывести(Проб);
		НПП = 1;
		Таб.Вывести(ШП);
		Для Сч = 0 По МасП.Количество() - 1 Цикл
			Ном = МасП[Сч].Задание.Номер;
			Р = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Ном);
			СтрП.Параметры.НомерЗаказа = СокрЛП(Ном) + "/" + СокрЛП(Р.НомерВнешнегоЗаказа);
			СтрП.Параметры.НПП = НПП;
			Если ЗначениеЗаполнено(МасП[Сч].ПричинаНеВыполнения) Тогда
				Пр = СокрЛП(МасП[Сч].ПричинаНеВыполнения.Наименование);
			Иначе
				Пр = "";
			КонецЕСли;
			
			Если ЗначениеЗаполнено(МасП[Сч].ПричинаОтказа) Тогда
				Если Пр = "" Тогда
					Пр = СокрЛП(МасП[Сч].ПричинаОтказа.Наименование);
				Иначе	
					Пр = Пр + " (" + СокрЛП(МасП[Сч].ПричинаОтказа.Наименование) + ")";
				КонецеСли;	
			КонецеСли;
			СтрП.Параметры.ПричинаОтказа = Пр;
			СтрП.Параметры.ДатаПереноса = МасП[Сч].ДатаПереноса;
			СтрП.Параметры.СуммаДоставки = Р.Услуги.Итог("Сумма");
			Таб.Вывести(СтрП);
			НПП = НПП + 1;
			
			
			СумД = СумД + Р.Услуги.Итог("Сумма");
			ИтСумД = ИтСумД + Р.Услуги.Итог("Сумма");
			
			Для Каждого Тек Из Р.Товары Цикл
				СтрТ.Параметры.Товар = Символы.Таб + СокрЛП(Тек.Номенклатура.Наименование) + " (" + СокрЛП(Тек.Номенклатура.Код) + "/" + СокрЛП(Тек.Номенклатура.Артикул) + ")";
				СтрТ.Параметры.Сумма = Тек.Сумма;
				СтрТ.Параметры.Количество = Тек.Количество;
				Таб.Вывести(СтрТ);
				
				Если Р.ТипОплаты = 1 Тогда
					ИтСум = ИтСум + Тек.Сумма;
				КонецеСли;	
				ИтСумОбщ = ИтСумОбщ + Тек.Сумма;
			КонецЦикла;	
			
			Для Каждого Тек Из Р.ПодарочныеПозиции Цикл
				СтрТ.Параметры.Товар = Символы.Таб + СокрЛП(Тек.Номенклатура.Наименование) + " (" + СокрЛП(Тек.Номенклатура.Код) + "/" + СокрЛП(Тек.Номенклатура.Артикул) + ")";
				СтрТ.Параметры.Сумма = 0;
				СтрТ.Параметры.Количество = Тек.Количество;
				Таб.Вывести(СтрТ);
			КонецЦикла;	
			
			
		КонецЦикла;	
	КонецеСли;	
	
	ОблИт.параметры.СуммаДоставки = СумД;
	ОблИт.Параметры.Сумма = ИтПер;
	Если МасП.Количество() <> 0 Тогда
		Таб.Вывести(ОблИт);
	КонецеСли;	
	СумД = 0;
	
	
	ИтСумЧ = 0;
	ИтСум = 0;
	Если МасЧ.Количество() <> 0 Тогда
		Таб.Вывести(Проб);
		НПП = 1;
		Таб.Вывести(ШЧ);
		Для Сч = 0 По МасЧ.Количество() - 1 Цикл
			Ном = МасЧ[Сч].Задание.Номер;
			Р = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Ном);
			СтрП.Параметры.НомерЗаказа = СокрЛП(Ном) + "/" + СокрЛП(Р.НомерВнешнегоЗаказа);
			СтрП.Параметры.НПП = НПП;
			Если ЗначениеЗаполнено(МасЧ[Сч].ПричинаНеВыполнения) Тогда
				Пр = СокрЛП(МасЧ[Сч].ПричинаНеВыполнения.Наименование);
			Иначе
				Пр = "";
			КонецЕСли;
			
			Если ЗначениеЗаполнено(МасЧ[Сч].ПричинаОтказа) Тогда
				Если Пр = "" Тогда
					Пр = СокрЛП(МасЧ[Сч].ПричинаОтказа.Наименование);
				Иначе	
					Пр = Пр + " (" + СокрЛП(МасЧ[Сч].ПричинаОтказа.Наименование) + ")";
				КонецеСли;	
			КонецеСли;
			СтрП.Параметры.ПричинаОтказа = Пр;
			СтрП.Параметры.ДатаПереноса = МасЧ[Сч].ДатаПереноса;
			
			СтрП.Параметры.СуммаДоставки = Р.Услуги.Итог("Сумма");
			СумД = СумД + Р.Услуги.Итог("Сумма");
			ИтСумД = ИтСумД + Р.Услуги.Итог("Сумма");
			
			Таб.Вывести(СтрП);
			НПП = НПП + 1;
			
			Зап = Новый Запрос;
			Зап.Текст = "ВЫБРАТЬ
			            |	ДанныеЗаказаВодителяДоставленныеТовары.Номенклатура,
			            |	ДанныеЗаказаВодителяДоставленныеТовары.КоличествоДоставлено Как Количество
			            |ИЗ
			            |	Документ.новаОтчетВодителя.ДанныеМобильногоПриложения КАК новаОтчетВодителяДанныеМобильногоПриложения
			            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя.ДоставленныеТовары КАК ДанныеЗаказаВодителяДоставленныеТовары
			            |		ПО новаОтчетВодителяДанныеМобильногоПриложения.Документ.Ссылка = ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Ссылка
			            |ГДЕ
			            |	новаОтчетВодителяДанныеМобильногоПриложения.Ссылка.Ссылка = &ОтчетВодителя
			            |	И новаОтчетВодителяДанныеМобильногоПриложения.АктуальныеДанные = ИСТИНА
			            |	И новаОтчетВодителяДанныеМобильногоПриложения.Доставка.Номер = &Номер";
			Зап.УстановитьПараметр("ОтчетВодителя", ОтчетВодителя);			
			Зап.УстановитьПараметр("Номер", МасЧ[Сч].Задание.Номер);			
			
			ТабР = Зап.Выполнить().Выгрузить();
            
            ////Серегин М.В. 21.07.2015 15:02:06 старый код
            //Если Р.ТипОплаты = 1 Тогда
            //Серегин М.В. 21.07.2015 15:02:13 новый
            Если МасЧ[Сч].ТипОплаты.Код = 1 Тогда
				ИтСумЧ = ИтСумЧ + Р.Товары.Итог("Сумма") + Р.Услуги.Итог("Сумма");
			КонецеСли;			
			
			Для Каждого Тек Из Р.Товары Цикл
				Най = ТабР.Найти(Тек.Номенклатура);
				
				Если Най = Неопределено Тогда
					СтрТ.Параметры.Товар = Символы.Таб + СокрЛП(Тек.Номенклатура.Наименование) + " (" + СокрЛП(Тек.Номенклатура.Код) + "/" + СокрЛП(Тек.Номенклатура.Артикул) + ")";
					СтрТ.Параметры.Сумма = Тек.Сумма;
					СтрТ.Параметры.Количество = Тек.Количество;
					Таб.Вывести(СтрТ);
					
					Если Р.ТипОплаты = 1 Тогда
						ИтСум = ИтСум + Тек.Сумма;
                        //Серегин М.В. 21.07.2015 15:02:13 новый
                        Если МасЧ[Сч].ТипОплаты.Код = 1 Тогда
                            ИтСумЧ = ИтСумЧ - Тек.Сумма;
                        КонецЕсли;
					КонецеСли;	
					ИтСумОбщ = ИтСумОбщ + Тек.Сумма;
				ИначеЕсли Най.Количество <> Тек.Количество Тогда
					СтрТ.Параметры.Товар = Символы.Таб + СокрЛП(Тек.Номенклатура.Наименование) + " (" + СокрЛП(Тек.Номенклатура.Код) + "/" + СокрЛП(Тек.Номенклатура.Артикул) + ")";
					СтрТ.Параметры.Сумма = (Тек.Количество - Най.Количество)*Тек.Цена;
					СтрТ.Параметры.Количество = Тек.Количество - Най.Количество;
					Таб.Вывести(СтрТ);
					
					Если Р.ТипОплаты = 1 Тогда
						ИтСум = ИтСум + (Тек.Количество - Най.Количество)*Тек.Цена;
                        //Серегин М.В. 21.07.2015 15:02:13 новый
                        Если МасЧ[Сч].ТипОплаты.Код = 1 Тогда
                            ИтСумЧ = ИтСумЧ - (Тек.Количество - Най.Количество)*Тек.Цена;
                        КонецЕсли;
					КонецеСли;	
					ИтСумОбщ = ИтСумОбщ + (Тек.Количество - Най.Количество)*Тек.Цена;
				КонецеСли;	
			КонецЦикла;	
			
		КонецЦикла;	
	КонецеСли;	
	
	ОблИт.Параметры.СуммаДоставки = СумД;
	ОблИт.Параметры.Сумма = ИтСум;
	Если МасЧ.Количество() <> 0 Тогда
		Таб.Вывести(ОблИт);
	КонецеСли;	
	
	ОблИтОбщий.Параметры.Сумма = ИтСумОбщ + ИтСумДост;
	ОблИтОбщий.Параметры.СуммаДоставки = ИтСумД;
	Таб.Вывести(ОблИтОбщий);
	
	
	ОблСР = М.ПолучитьОбласть("СтрокаРезультатДоставки");
	ОблШР = М.ПолучитьОбласть("ШапкаРасшифровка");
	ОблИР = М.ПолучитьОбласть("ИтогоРезультатДоставки");
	
	Ит = 0;
	ИтКол = МасВ.Количество() + МасВып.Количество() + МасОБ.Количество() + МасОС.Количество() + МасП.Количество() + МасПЗ.Количество();
	
	Таб.Вывести(ОблШР);
	//Если МасВып.Количество() <> 0 Тогда
		ОблСР.Параметры.РезультатДоставки = "ВЫПОЛНЕНО";
		ОблСР.Параметры.Количество = МасВ.Количество() + МасВып.Количество();
		ОблСР.Параметры.Сумма = ИтВып;		
		Ит = Ит + ИтВып;
		Таб.Вывести(ОблСР);
	//КонецеСли;	
	
	ОблСР.Параметры.РезультатДоставки = "в том числе частично:";
	ОблСР.Параметры.Количество = МасЧ.Количество();
	ОблСР.Параметры.Сумма = ИтСумЧ;		
	Ит = Ит + ИтСумЧ;
	Таб.Вывести(ОблСР);
	
		ОблСР.Параметры.РезультатДоставки = "НЕ ВЫПОЛНЕНО";
		ОблСР.Параметры.Количество = МасОБ.Количество() + МасОС.Количество() + МасП.Количество() + МасПЗ.Количество();
		//ОблСР.Параметры.Сумма = ИтОтк;		
		ОблСР.Параметры.Сумма = 0;
		//Ит = Ит + ИтОтк;
		Таб.Вывести(ОблСР);
		
	//Если МасП.Количество() <> 0 Тогда
		ОблСР.Параметры.РезультатДоставки = "в том числе перенесено:";
		ОблСР.Параметры.Количество = МасП.Количество();
		//ОблСР.Параметры.Сумма = ИтПер;		
		//Ит = Ит + ИтПер;
		ОблСР.Параметры.Сумма = 0;
		Таб.Вывести(ОблСР);
	//КонецеСли;	
		
		ОблСР.Параметры.РезультатДоставки = "в том числе перенесено с заездом:";
		ОблСР.Параметры.Количество = МасПЗ.Количество();
		//ОблСР.Параметры.Сумма = ИтПер;		
		//Ит = Ит + ИтПер;
		ОблСР.Параметры.Сумма = 0;
		Таб.Вывести(ОблСР);
		
	//Если МасОБ.Количество() <> 0 Тогда
		ОблСР.Параметры.РезультатДоставки = "в том числе отказ:";
		ОблСР.Параметры.Количество = МасОБ.Количество();
		//ОблСР.Параметры.Сумма = ИтОтк;		
		ОблСР.Параметры.Сумма = 0;
		//Ит = Ит + ИтОтк;
		Таб.Вывести(ОблСР);
	//КонецеСли;	
	
	//Если МасОС.Количество() <> 0 Тогда
		ОблСР.Параметры.РезультатДоставки = "в том числе отказ с заездом:";
		ОблСР.Параметры.Количество = МасОС.Количество();
		//ОблСР.Параметры.Сумма = ИтОтк;		
		ОблСР.Параметры.Сумма = 0;//              СумСЗ
		//Ит = Ит + ИтОтк;
		Таб.Вывести(ОблСР);
	//КонецеСли;	
	
	
	
	
	ОблИр.Параметры.Количество = ИтКол;
	ОблИр.Параметры.Сумма = Ит;
	
	
	Таб.Вывести(ОблИР);
	
	Таб.Вывести(ОблПодвал);
	
	
	
	Таб.ПолеСверху = 3;
	Таб.ПолеСнизу = 3;
	Таб.ПолеСправа = 3;
	Таб.ПолеСлева = 3;
	Таб.АвтоМасштаб = Истина;
	Таб.ТолькоПросмотр = Истина;
	Таб.Показать();
КонецПроцедуры	

Функция ПолучитьСуммуКОплатеКлиентом (Заказ)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ДополнительныеПараметрыЗаказа.КОплатеКлиентом
        |ИЗ
        |   РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
        |ГДЕ
        |   ДополнительныеПараметрыЗаказа.Заказ = &Заказ";
    
    Запрос.УстановитьПараметр("Заказ", Заказ);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат ВыборкаДетальныеЗаписи.КОплатеКлиентом;
    Иначе
        Возврат 0;
    КонецЕсли;;
    
    
КонецФункции