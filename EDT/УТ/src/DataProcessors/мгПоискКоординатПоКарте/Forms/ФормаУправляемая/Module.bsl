#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	//ЭтаФорма.Адрес = "Волгоград, ул.Ленина, 1";
	//+Степанов
	//ЭтаФорма.Карта2 = ПолучитьHTMLдокумент();
	ИспользованиеWebKit = ОбщегоНазначения.ВерсияПлатформы().Релиз > 13;
	ДанныеКарты = ПолучитьHTMLдокумент();
	//-Степанов		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ПодключитьОбработчикОжидания("ПроцчитатьАдерсПриОткрытии",20,Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтрокуВсехЗон()
	
	СтрокаПолигонов = "";
	ВыборкаЗоны = Справочники.мгЛокализацииЗаказов.Выбрать();
	ПервыйРаз = Истина;
	Запятая = "";
	Пока ВыборкаЗоны.Следующий() Цикл
		Если не ВыборкаЗоны.ПометкаУдаления Тогда
			Если ПервыйРаз Тогда
				Запятая = "";
				ПервыйРаз = Ложь;
			Иначе
				Запятая = ","
			КонецЕсли;
			СтрокаПолигонов = СтрокаПолигонов + Запятая + "["+ВыборкаЗоны.Координаты + ",""" + ВыборкаЗоны.Наименование + """,""" + ВыборкаЗоны.Цвет +"""]";
		КонецЕсли;
	КонецЦикла;
	
	Возврат "'["+ СтрокаПолигонов +"]'"; 
	
КонецФункции


&НаКлиенте
Процедура АдресПриИзменении(Элемент)
	
	ПолучитьКоординаты();
	
КонецПроцедуры

&НаКлиенте
Процедура КартаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)   
	
	//+Степанов
	Если ИспользованиеWebKit Тогда
		Попытка
			ИмяОперации = Элемент.Документ.defaultView.FormEvent.messageName;
		Исключение
			ИмяОперации = ""
		КонецПопытки;
	Иначе
		ИмяОперации = ДанныеСобытия.Event.propertyName;
	КонецЕсли;
	
	Если ИмяОперации = "" Тогда // не наше событие
		Возврат	
	КонецЕсли; 
	
	//+Степанов
	Если ИспользованиеWebKit Тогда 
		ДанныеОперации = Элемент.Документ.defaultView.FormEvent.messageData;	
	Иначе
		ДанныеОперации = ДанныеСобытия.Event.data;
	КонецЕсли;	
	//-Степанов
	
	Если ИмяОперации = "GeoCod" Тогда
		ЗаполнитьТыблицуКоординатамиПоПолученнымДанным(ДанныеОперации);		
	ИначеЕсли ИмяОперации = "ТекСтрока" Тогда 
		ПозиционироватьСтрокуТабКоординатПоКоординатам (ДанныеОперации);
	ИначеЕсли ИмяОперации = "ЩелчокПоКарте" Тогда 
		КоординатыСтр =  ДанныеОперации;
	ИначеЕсли ИмяОперации =	"ЩелчокПоПолигону" Тогда 
		ПолигонСтр =  ДанныеОперации;
	ИначеЕсли ИмяОперации = "готов" Тогда // готовность карты
		ДокГотов = Истина;
	ИначеЕсли ИмяОперации = "Вхождение" Тогда
		Если Лев(ДанныеОперации,4) = "true" Тогда
			СоздатьЗапись(Объект.ТочкаДоставки, Сред(ДанныеОперации,6));
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьЗапись(ТочкаДоставки, НазваниеЗоны)
	
	СсылкаНаЗону = Справочники.мгЛокализацииЗаказов.НайтиПоНаименованию(НазваниеЗоны);
	НоваяЗапись = РегистрыСведений.мгСоответствиеТочкиДоставкиЗоне.СоздатьМенеджерЗаписи();
	НоваяЗапись.ТочкаДоставки = ТочкаДоставки;
	НоваяЗапись.Зона = СсылкаНаЗону;
	НоваяЗапись.Записать();
	
КонецПроцедуры

&НаКлиенте
 Процедура КоординатыПриАктивизацииСтроки(Элемент)
	 
	 ТД = Элементы.Координаты.ТекущиеДанные;
	 Если тд= Неопределено  Тогда
		 Возврат;	 
	 КонецЕсли;  
	 ОткрытьБалун(ТД.Наименование,ТД.Широта,ТД.Долгота);
	 ЦентроватьПоКоординатам(ТД.Широта,ТД.Долгота);
		

 КонецПроцедуры

#КонецОбласти 

#Область Скрипты
 
&НаКлиенте
//Выполняем Скрипт на странице
Процедура ВыполнитьСкрипт(ТекстСкрипт)
		
	Если не ДокГотов Тогда
		Возврат;	
	КонецЕсли; 
	
	ДИВ = Элементы.Карта2.Документ.getElementById("map");
	ДИВ.setAttribute("onclick", ТекстСкрипт);
	ДИВ.click();
	
	
КонецПроцедуры

 
&НаКлиенте    
Процедура  ПолучитьКоординаты()
	
	ВыполнитьСкрипт(
	 "var myGeocoder = ymaps.geocode("""+ Адрес+""");
	|		myGeocoder.then(
	|		    function (res) {  
	|				myMap.geoObjects.removeAll(); // удалим все старые объекты
	|				myMap.geoObjects.add(res.geoObjects); // добавим на карту найденные объекты
	|		    	var iterator = res.geoObjects.getIterator(),object; // создадит итератор
	|				var StrCoord1 = """"; // переменна для передачи данных на клиент 
	|				while ((object = iterator.getNext()) != iterator.STOP_ITERATION) {  // цикл для сбора дынный в переменную
	|			   		StrCoord1 = StrCoord1  + object.properties.get('text')+""/""+ object.geometry.getCoordinates()+ ""\u000A"";
	|					object.events.add(""click"", function (e) {                     // привязка к событию шелчок на год объект
	|																return1c('ТекСтрока',e.get('target').geometry.getCoordinates());      // возврат координат из объекта 
	|																myMap.hint.close(); // очищаем карту от подсказок
	|															  });
	|					object.events.add(""click"", function (e) { return1c('ТекСтрока',e.get('target').geometry.getCoordinates());   });
	|                   alert('Координаты объекта :'+object.properties.get('text'));
	|   				};
	|				return1c('GeoCod',StrCoord1);   // вызов побработчика при нажатии
	|		        alert('Координаты объекта :' + res.geoObjects.get(0).geometry.getCoordinates());
	|		    },
	|		    function (err) {
	|		        alert('Ошибка');
	|		    }
	|		);");


КонецПроцедуры 

&НаКлиенте
Процедура ЦентроватьПоКоординатам(Широта,Долгота)
	
	ВыполнитьСкрипт("Timeout: 1500; myMap.setCenter(["+Широта+","+ Долгота+"]);");

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКарту()

	ВыполнитьСкрипт("myMap.geoObjects.removeAll();"); // удалим все  объекты с карты

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБалун(Наименование,Широта,Долгота)
	
	ВыполнитьСкрипт(
	
	"myMap.balloon.open(["+Широта+","+ Долгота+"], """+Наименование+""", {
    |   // Опция: не показываем кнопку закрытия.
    //|  closeButton: false,
	|  autoPan: false,  // не счещать карту на балун
	|  autoPanDuration: 150  // не счещать карту на балун
	|});");
	
КонецПроцедуры

&НаКлиенте
Процедура ПривязатьСобытиеПриОткрытии()  // пример обхода и привязки функции к событию

	ВыполнитьСкрипт(

	
	"	var iterator1 = myMap.geoObjects.getIterator(),object; // создадит итератор
	|                   alert('Координаты объекта :');
	|	while ((object = iterator1.getNext()) != iterator1.STOP_ITERATION) { // назначит все геоб
	|			   		object.events.add(""click"", function (e) { 
	|														return1c('ТекСтрока',e.get('target').geometry.getCoordinates());     // отдадим координаты 1с 
	//|                   alert(e.get('target').geometry.getCoordinates());
	|												});
	|   				};  ");

	
	
КонецПроцедуры


 #КонецОбласти 
 
#Область РабочиеФункции
	

 &НаКлиенте
 Процедура ЗаполнитьТыблицуКоординатамиПоПолученнымДанным(СтрокаТ)
	 
	 МассК = СтрокуВМассив(СтрокаТ,Символы.ПС);
	 Если МассК.количество() =0  Тогда
		 Возврат;	 
	 КонецЕсли; 
	 Координаты.Очистить();
	 
	 Для каждого Элем Из МассК Цикл
		 
		 СтрокаК = Координаты.Добавить();
		 МассАрд = СтрокуВМассив(Элем,"/");
		 СтрокаК.Наименование =МассАрд[0];
		 МассШД = СтрокуВМассив(МассАрд[1],",");
		 
		 Если МассШД.Количество() <>0 Тогда
		   СтрокаК.Широта =МассШД[0];
		   СтрокаК.Долгота =МассШД[1];
		   
		 КонецЕсли; 
		 
	 КонецЦикла;  
	 	 
 КонецПроцедуры
 
 &НаКлиенте
 Функция  СтрокуВМассив(СтрокаТ,Разделитель)
	 
	 МассН = Новый Массив;
	 Пока Найти(СтрокаТ,Разделитель) <> 0  Цикл
		 
		 МалСтрока = Лев(СтрокаТ,Найти(СтрокаТ,Разделитель)); 
		 СтрокаТ = СтрЗаменить(СтрокаТ,МалСтрока,"");
		 МассН.Добавить(СтрЗаменить(МалСтрока,Разделитель,""));
		 
	 КонецЦикла; 
	 
	 Если СтрокаТ <> "" Тогда
	 
	 	 МассН.Добавить(СтрокаТ);
	 
	 КонецЕсли; 
	 Возврат МассН;
	 	 
 КонецФункции

&НаКлиенте 
Процедура ПозиционироватьСтрокуТабКоординатПоКоординатам (СтоКоорд)
	
	Масс = СтрокуВМассив(СтоКоорд,",");
	Если Масс.Количество() = 0 Тогда
		Возврат;	 
	КонецЕсли; 
	
	Для каждого СтрТа  Из Координаты Цикл
		Если СтрТа.Широта = Лев(Масс[0],9) и СтрТа.Долгота = Лев(Масс[1],9) Тогда
			Элементы.Координаты.ТекущаяСтрока = СтрТа.ПолучитьИдентификатор();
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры
  
&НаСервере
Функция ПолучитьHTMLдокумент()
	ЭтОбъект = РеквизитФормыВЗначение("Объект");
	//+Степанов
	Если ИспользованиеWebKit Тогда 
		ТД =    ЭтОбъект.ПолучитьМакет("Макет_WebKit");
	Иначе	
		ТД =    ЭтОбъект.ПолучитьМакет("Карта2");
	КонецЕсли;	
	//-Степанов
	Возврат тд.ПолучитьТекст(); 
КонецФункции

&НаКлиенте 
Процедура ПроцчитатьАдерсПриОткрытии()

	Если не ДокГотов Тогда
		Возврат;
	КонецЕсли; 
	
	ПолучитьКоординаты();
	ОтключитьОбработчикОжидания("ПроцчитатьАдерсПриОткрытии");
	
КонецПроцедуры // ()

&НаКлиенте
Процедура ЗагрузитьПолигон(Команда)
	// Вставить содержимое обработчика.
	ПолигонСтр = "[[[55.9007, 37.5127], [55.9092, 37.5704], [55.9069, 37.5965], [55.9015, 37.6281], [55.8969, 37.6569], [55.8884, 37.7173], [55.8745, 37.7393], [55.8591, 37.7681], [55.8413, 37.8066], [55.8227, 37.8313], [55.8057, 37.8423], [55.7879, 37.8437], [55.7647, 37.8437], [55.7190, 37.8340], [55.7035, 37.8313], [55.6554, 37.8368], [55.6414, 37.8231], [55.6165, 37.7819], [55.5753, 37.6857], [55.5761, 37.6006], [55.5979, 37.5045], [55.6391, 37.4619], [55.6919, 37.4124], [55.7182, 37.3864], [55.7337, 37.3767], [55.7562, 37.3685], [55.7864, 37.3671], [55.8049, 37.3864], [55.8305, 37.3918], [55.8459, 37.3960], [55.8768, 37.4152], [55.9007, 37.5127]]]";
	ВыполнитьСкрипт("myPolygon = loadPolygon("""+ ПолигонСтр+""");");
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьВхождение(Команда)
	//КоординатыСтр = "[55.8489, 37.3146]";
	//ВыполнитьСкрипт("coordContains(""["+КоординатыСтр+"]"");");
	ВыполнитьСкрипт("coordContainsObjects('["+СтрЗаменить(Объект.ТочкаДоставки.Адрес.Широта,",",".")+","+СтрЗаменить(Объект.ТочкаДоставки.Адрес.Долгота,",",".")+"]')");
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьПолигон(Команда)
	ВыполнитьСкрипт("startEditing();");
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	ВыполнитьСкрипт("stopEditing();");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйПолигон(Команда)
	ВыполнитьСкрипт("startDrawing();");
КонецПроцедуры

#КонецОбласти
 
Процедура УстановитьСоответствиеТочекДоставки(Команда)
	УстановитьСоответствиеТочекДоставкиНаСервере();
КонецПроцедуры
   
&НаСервере
Процедура УстановитьСоответствиеТочекДоставкиНаСервере()	

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	новаТочкиДоставки.Наименование,
	|	новаТочкиДоставки.Адрес.Широта,
	|	новаТочкиДоставки.Адрес.Долгота
	|ИЗ
	|	Справочник.новаТочкиДоставки КАК новаТочкиДоставки
	|ГДЕ
	|	НЕ новаТочкиДоставки.ПометкаУдаления";
	//ВыборкаТД = Справочники.новаТочкиДоставки.Выбрать();
	ВыборкаТД = Запрос.Выполнить().Выбрать();
	Пока ВыборкаТД.Следующий() Цикл
		Если не ВыборкаТД.ПометкаУдаления Тогда
			
			Попытка
				ПерКоординаты = СтрЗаменить(ВыборкаТД.АдресШирота,",",".")+","+СтрЗаменить(ВыборкаТД.АдресДолгота,",",".");
				ВыполнитьСкриптНаСервере("coordContainsObjects('["+ПерКоординаты+"]');");	
			Исключение
			    //ОписаниеОшибки()
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьСкриптНаСервере(ТекстСкрипт)
		
	//Если не ДокГотов Тогда
	//	Возврат;	
	//КонецЕсли; 
	
	ДИВ = Элементы.Карта2.Документ.getElementById("map");
	ДИВ.setAttribute("onclick", ТекстСкрипт);
	ДИВ.click();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВсеЗоны(Команда)
	
	polygonStr = ПолучитьСтрокуВсехЗон();
	ВыполнитьСкрипт("loadPolygonList(" + polygonStr + ")");
	
КонецПроцедуры

&НаКлиенте
Процедура ТочкаДоставкиПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ТочкаДоставки) Тогда
		ВыполнитьСкрипт("myMap.geoObjects.add(createPlacemark(["+СтрЗаменить(Объект.ТочкаДоставки.Адрес.Широта,",",".")+","+СтрЗаменить(Объект.ТочкаДоставки.Адрес.Долгота,",",".")+"],'"+Объект.ТочкаДоставки.Наименование+"'))");
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура КартаДокументСформирован(Элемент)
	Элементы.Карта.Документ.defaultView.WebKitUsage = ИспользованиеWebKit;
КонецПроцедуры

