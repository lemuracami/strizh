Процедура ОбновитьЗапись_ПараметрыРегламентныхЗаданий(Ключ = "") Экспорт

	Если Ключ = "" Тогда
		Возврат;	
	КонецЕсли;
	
	ТекДата = ТекущаяДата();
	Запись = РегистрыСведений.ПараметрыРегламентныхЗаданий.СоздатьНаборЗаписей();
	Запись.Отбор.Ключ.Установить(Ключ);
	Запись.Прочитать();
	Если Запись.Количество() = 0 Тогда
		НоваяЗапись = Запись.Добавить();
	Иначе
		НоваяЗапись = Запись[0];
	КонецЕсли;
	НоваяЗапись.Ключ = Ключ;
	НоваяЗапись.Значение = ДатаВСтроку(ТекДата);
	Попытка
		Запись.Записать();
	Исключение
		#Если Клиент Тогда
			Сообщить("Проблема с обновлением даты ПараметрыРегламентныхЗаданий");
		#КонецЕсли
	КонецПопытки;

КонецПроцедуры

Функция ДатаВСтроку(Д)
	Возврат Формат(Год(Д), "ЧГ=") + ЛидирующийНоль(Месяц(Д)) + ЛидирующийНоль(День(Д)) + ЛидирующийНоль(Час(Д)) + ЛидирующийНоль(Минута(Д)) + ЛидирующийНоль(Секунда(Д));
КонецФункции

Функция ЛидирующийНоль(зн)
	Если Зн < 10 Тогда
		Возврат "0"+Зн;
	Иначе
		Возврат Зн;
	КонецЕсли;	
КонецФункции

//Геннадий #3995 21.05.2020 ->
Процедура РЗ_ОтправкаСМСПоРейсу(РейсОтправки) Экспорт
	
    ДатаОтправкиСтрока 		= ПолучитьДатуОтправкиСМС();
    тз_результат_запроса	= ПодготовитьДанныеПоУехавшимЗаказам();
    тз_результат_запроса.Колонки.Добавить("Номер",новый ОписаниеТипов("Строка"));
	
	
    СрокЖизниSMS 	= 24;
    
    СтатусСтрока 	= "";
    ДатаОтправки 	= ТекущаяДата(); // для отложенной отправки
    
	//SMSC_LOGIN 			= ВосстановитьЗначение("SMSC_LOGIN");
	//SMSC_PASSWORD 		= ВосстановитьЗначение("SMSC_PASSWORD");     
	//SMSC_DEBUG 			= ВосстановитьЗначение("SMSC_DEBUG");
	//SMSC_HTTPS 			= ВосстановитьЗначение("SMSC_HTTPS");
	//ВыбСправочник			= ВосстановитьЗначение("SMSC_ВыбСправочник");
	//ВыбТелефон			= ВосстановитьЗначение("SMSC_ВыбТелефон");
	//ВыбФИО				= ВосстановитьЗначение("SMSC_ВыбФИО");
	//РесурсКИ				= ВосстановитьЗначение("SMSC_РесурсКИ");
	//ИсточникКИ			= ВосстановитьЗначение("SMSC_ИсточникКИ");
	//СвязатьПоПолюКИ		= ВосстановитьЗначение("SMSC_СвязатьПоПолюКИ");
	//ТипКИ					= ВосстановитьЗначение("SMSC_ТипКИ");
	//УсловиеТипаКИ			= ВосстановитьЗначение("SMSC_УсловиеТипаКИ");
	//SMSC_Отправитель		= ВосстановитьЗначение("SMSC_Отправитель");
	//SMSC_ЧасовойПояс		= ВосстановитьЗначение("SMSC_ЧасовойПояс");
	//СписокКлиентов		= ВосстановитьЗначение("SMSC_СписокКлиентов");
	
    заполнить_по_умолчанию();
    SMSC_LOGIN 			= Оператор.Логин;
    SMSC_PASSWORD 		= Оператор.Пароль;
    Сообщение 			= ШаблонРассылки.ТекстШаблона;
    SMSC_Отправитель 	= ШаблонРассылки.Отправитель;
	
	
	Для Каждого Тек Из тз_результат_запроса Цикл
		
		Тек.Номер = smv.ПолучитьНомерДляОтправкиСМС(Тек.Телефон);
		Если ПустаяСтрока(Тек.Номер) Тогда 
			//Геннадий #4377 30.11.2020 ->
			ТекстОшибки = "Ошибка номера телефона. Неотправлена СМС по заказу " + СокрЛП(Тек.Реализация.Номер) + " от " + Формат(Тек.Дата, "ДФ=dd.MM.yyyy") + "; рейс " + РейсОтправки.Номер;
			ЗаписьОшибкиВоВнешнийЛог(ТекстОшибки);
			may.ЗаписьСтатусыРассылкиСМСПоРейсам(РейсОтправки, Тек.Реализация, Ложь, Истина);
			//Геннадий #4377 30.11.2020 <-
			Продолжить; 
		КонецЕсли;
		
		ТекШаблон = ШаблонРассылки;
		Сообщение = СокрЛП(ШаблонРассылки.ТекстШаблона);
		//+Степанов Проверяем актуальность после получения среза.
		//Струк = Новый Структура;
		//Струк.Вставить("ШаблонАктуален", Истина);
		//Струк.Вставить("Контрагент", Тек.ИнтернетМагазинСсылка);
		//Струк.Вставить("ТипСМСРассылки", ШаблонРассылки.ТипСМСРассылки);
		//
		//НайШабл = РегистрыСведений.ШаблоныСМСРассылокПоКонтрагентам.ПолучитьПоследнее(ТекущаяДата(), Струк);
		
		
		
		//+Степанов Проверяем актуальность после получения среза.
		//Если ЗначениеЗаполнено(НайШабл.ШаблонРассылки) И НайШабл.ШаблонАктуален Тогда
		//	ТекШаблон = НайШабл.ШаблонРассылки;
		//	Сообщение = СокрЛП(ТекШаблон.ТекстШаблона);
		//КонецЕсли;	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ШаблоныСМСРассылокПоКонтрагентамСрезПоследних.ШаблонРассылки КАК ШаблонРассылки,
		|	ШаблоныСМСРассылокПоКонтрагентамСрезПоследних.ШаблонАктуален КАК ШаблонАктуален
		|ИЗ
		|	РегистрСведений.ШаблоныСМСРассылокПоКонтрагентам.СрезПоследних(
		|			,
		|			Контрагент = &Контрагент
		|				И ТипСМСРассылки = &ТипРассылки) КАК ШаблоныСМСРассылокПоКонтрагентамСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	ШаблоныСМСРассылокПоКонтрагентамСрезПоследних.Период УБЫВ";
		Запрос.УстановитьПараметр("Контрагент", Тек.ИнтернетМагазинСсылка);
		Запрос.УстановитьПараметр("ТипРассылки", ШаблонРассылки.ТипСМСРассылки);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если ЗначениеЗаполнено(Выборка.ШаблонРассылки) И Выборка.ШаблонАктуален Тогда
				//Геннадий 26.04.2021 ->
				//исходный вариант затирал значение реквизита обработки, который содержит общий шаблон смс
				//ШаблонРассылки = Выборка.ШаблонРассылки;
				ТекШаблон = Выборка.ШаблонРассылки;
				Сообщение = СокрЛП(ТекШаблон.ТекстШаблона);
				//Геннадий <-
			КонецЕсли;	
		КонецЕсли;	
		
		
		//-Степанов Проверяем актуальность после получения среза.
		ВремСообщение = Сообщение;
        НомерТелефона = СокрЛП(Тек.Номер);
        
        ВремСообщение = ПодставитьПараметрыНовый(ВремСообщение, Тек, ТекШаблон.СклонениеИсполнителяДоставки);
        СтрокаСообщений = НомерТелефона + ":" + ВремСообщение;

		Если НЕ ПустаяСтрока(СтрокаСообщений) Тогда
			
			//Геннадий #4377 30.11.2020 ->
			requestXML 	= "";
			Ответ 		= ПослатьSMS("", "", Транслит, ДатаОтправкиСтрока, 0, флФлэш, SMSC_Отправитель, "tz=" + SMSC_ЧасовойПояс + "&valid=" + СрокЖизниSMS + "&list=" + URLEncode(СтрокаСообщений), requestXML);
			Попытка
				флОтправки = Число(Ответ[1].Значение);
			Исключение
				ТекстОшибки = "Ошибка чтения ответа от сервиса отправки СМС по заказу " + СокрЛП(Тек.Реализация.Номер) + " от " + Формат(Тек.Дата, "ДФ=dd.MM.yyyy") + "; рейс " + РейсОтправки.Номер;
				responseXML = ?(ТипЗнч(Ответ) = Тип("СписокЗначений") И Ответ.Количество() > 1, Ответ[1].Значение, Строка(Ответ));//в элементе с индексом 1 - количество отправленных смс
				ЗаписьОшибкиВоВнешнийЛог(ТекстОшибки, requestXML, responseXML);
				флОтправки 	= -1;//для выполнения условия записи статуса
			КонецПопытки;
			//Геннадий #4377 30.11.2020 <-

			Если флОтправки < 0 Тогда
				may.ЗаписьСтатусыРассылкиСМСПоРейсам(РейсОтправки, Тек.Реализация, Ложь, Истина);
				//Сообщить("Ошибка отправки сообщений: " + СписокОшибок(флОтправки).Представление);
				//Сообщить("По заказу №:" + Тек.Реализация.Номер+" сообщение не отправлено.",СтатусСообщения.ОченьВажное);
			Иначе
				//ДвиженияРассылкаСМС(Оператор,Тек.Реализация,ШаблонРассылки,Справочники.СтатусыСМССообщений.СообщениеПринятоСервисом, НомерТелефона);
				// Якурнов 23.08.2018 11:45:33
				ДвиженияРассылкаСМС(Оператор,Тек.Реализация,ТекШаблон,Справочники.СтатусыСМССообщений.СообщениеПринятоСервисом, НомерТелефона);
				may.ЗаписьСтатусыРассылкиСМСПоРейсам(РейсОтправки, Тек.Реализация, Истина, Ложь);
		    КонецЕсли;
		КонецЕсли;
    КонецЦикла; 	
	
КонецПроцедуры

//Геннадий #4377 30.11.2020 <-
Процедура ЗаписьОшибкиВоВнешнийЛог(ТекстОшибки = "", requestXML = "", responseXML = "")
	
	API 	= Справочники.API.smsc_ru;
	Метод 	= Справочники.МетодыAPI.send;
	
	ПараметрыЛога = ВнешнееЛогированиеСервер.ПараметрыЗаписиЛогаСервиса(API, Метод);
	ПараметрыЛога.isError 			= Истина;
	ПараметрыЛога.errorDescription 	= ТекстОшибки;
	ПараметрыЛога.requestXML    	= requestXML;
	ПараметрыЛога.responseXML   	= responseXML;
	
	ВнешнееЛогированиеСервер.ЗаписатьСтрокуЛогаСервиса(ПараметрыЛога);
	
КонецПроцедуры
//Геннадий #4377 30.11.2020 <-

процедура заполнить_по_умолчанию()
    
    если ВыбСправочник="" тогда
        ВыбСправочник="Контрагенты";
        ВыбФИО="НаименованиеПолное";
        ИсточникКИ="Табличная часть справочника";
        РесурсКИ="КонтактнаяИнформация";
        СвязатьПоПолюКИ="Объект";
        ТипКИ="Тип";
        УсловиеТипаКИ="Телефон";
        ВыбТелефон="Представление";
    конецесли;
    
    если (SMSC_ЧасовойПояс<=8)и(SMSC_ЧасовойПояс>=-16) тогда иначе SMSC_ЧасовойПояс=3; конецесли;
    
конецпроцедуры

Функция ПолучитьДатуОтправкиСМС()    
    Мин_н = Прав("0" + Минута(ДатаОтправки), 2); 
    Час_н = Прав("0" + Час(ДатаОтправки), 2); 
    День_н = Прав("0" + День(ДатаОтправки), 2); 
    Мес_н = Прав("0" + Месяц(ДатаОтправки), 2); 
    Год_н = Год(ДатаОтправки);
    Год_н = СтрЗаменить(Год_н, " ", "");
    Год_н = Прав(СтрЗаменить(Год_н, Символ(160), ""), 2);
    Возврат День_н + "." + Мес_н + "." + Год_н + " " + Час_н + ":" + Мин_н;    
КонецФункции

Функция ПодготовитьДанныеПоУехавшимЗаказам()
    //+СтепановЗадача № 3509   
	//Возврат may.ПодготовитьДанныеПоУехавшимЗаказам(Рейс,
	//						ДатаСбораДанных, Оператор, ШаблонРассылки);
	Возврат may.ПодготовитьДанныеПоУехавшимЗаказам(Документы.Рейс.НайтиПоРеквизиту("РейсМестнойДоставки",Рейс),
							ДатаСбораДанных, Оператор, ШаблонРассылки);
	//-Степанов Задача № 3509
КонецФункции

Функция ПослатьSMS(Телефоны, Сообщение, Транслит = Ложь, Время = "", ИД = 0, ФорматСообщения = 0, Отправитель = "", ДопПараметры = "", текстЗапросаНаСервис = "")
//    Ком = "cost=3&phones=" + URLEncode(Телефоны) + "&mes=" + URLEncode(Сообщение) + "&translit=" + ?(Транслит,1,0) + "&id=" + XMLСТрока(ИД) + ?(ФорматСообщения > 0, "&" + ФорматыСообщений(ФорматСообщения), "") + ?(ПустаяСтрока(Отправитель), "", "&sender=" + URLEncode(Отправитель)) + ?(ПустаяСтрока(Время), "", "&time=" + URLEncode(Время)) +  ?(ПустаяСтрока(ДопПараметры), "", "&" + ДопПараметры);
    Время = "0";
	//Телефоны = "79852759353";
    Ком = "cost=3&phones=" + URLEncode(Телефоны) + "&mes=" + URLEncode(Сообщение) + "&translit=" + ?(Транслит,1,0) + "&id=" + XMLСТрока(ИД) + ?(ФорматСообщения > 0, "&" + ФорматыСообщений(ФорматСообщения), "") + ?(ПустаяСтрока(Отправитель), "", "&sender=" + URLEncode(Отправитель)) + ?(ПустаяСтрока(Время), "", "&time=" + URLEncode(Время)) +  ?(ПустаяСтрока(ДопПараметры), "", "&" + ДопПараметры);
	
    Ответ = _SMSC_ПослатьКоманду("send", Ком, текстЗапросаНаСервис);
    
    // (id, cnt, cost, balance) или (id, -error)
    
    Если SMSC_DEBUG = 1 Тогда
        
        РезИД = Число(Ответ[0].Значение);
        Рез = Число(Ответ[1].Значение);
        Если (Рез > 0) Тогда
            Сообщить ("Сообщение отправлено успешно. ID: " + РезИД + ", всего SMS: " + Ответ[1].Значение + 
            ", стоимость: " + Ответ[2].Значение + " руб., баланс: " + Ответ[3].Значение + " руб.");
        Иначе       
            Сообщить ("Ошибка № " + Строка(-Рез) + ?(РезИД > 0, ", ID: " + РезИД, ""));
        КонецЕсли;	
        
    КонецЕсли;
    
    Возврат Ответ;
    
КонецФункции // ПослатьSMS()

Функция ПодставитьПараметрыНовый(ИсходныйТекст, Объект, Падеж)
    
    Результат = ИсходныйТекст;
    
    //Если НЕ ЗначениеЗаполнено(Объект) Тогда
    //	Результат = СтрЗаменить(Результат, "[F]", "");
    //	Результат = СтрЗаменить(Результат, "[I]", "");	
    //	Результат = СтрЗаменить(Результат, "[O]", "");
    //ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
    //	Результат = СтрЗаменить(Результат, "[F]", Объект.Наименование);
    //ИначеЕсли  ТипЗнч(Объект) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
    //	Результат = СтрЗаменить(Результат, "[F]", Объект.Фамилия);	
    //	Результат = СтрЗаменить(Результат, "[I]", Объект.Имя);	
    //	Результат = СтрЗаменить(Результат, "[O]", Объект.Отчество);
    //КонецЕсли;	
    
    
    ТелефонЭкипажа = СокрЛП(Объект.ТелефонЭкипажа);
    
    Если Лев(ТелефонЭкипажа, 1) <> "8" Тогда
        ТелефонЭкипажа = "8" + ТелефонЭкипажа;
	КонецеСли;	
	
	НомерБезСимволов = УбратьСимволы(Строка(Объект.НомерВнешнегоЗаказа));
	//Результат = СтрЗаменить(Результат, "[ExNumber]", Объект.НомерВнешнегоЗаказа);
	Результат = СтрЗаменить(Результат, "[ExNumber]", НомерБезСимволов);
    Результат = СтрЗаменить(Результат, "[PhoneCar]", ТелефонЭкипажа);
	//+++++Серегин М.В. 11.03.2016 13:18:01 было Результат = СтрЗаменить(Результат, "[Summa]", Формат(Число(Объект.СуммаЗаказа), "ЧДЦ=2; ЧН=0; ЧГ="));
    Если Объект.УчитыватьИтогоКОплате Тогда
        Результат = СтрЗаменить(Результат, "[Summa]", Формат(Число(Объект.КОплатеКлиентом), "ЧДЦ=; ЧН=0; ЧГ=")); 
    Иначе
        Результат = СтрЗаменить(Результат, "[Summa]", Формат(Число(Объект.СуммаЗаказа), "ЧДЦ=; ЧН=0; ЧГ="));
	КонецЕсли;
	
	//Геннадий #4601 11.06.2021 ->
	Результат = СтрЗаменить(Результат, "na summu 0 rub ", "");
	//Геннадий #4601 11.06.2021 <-
	
	//// Костыль для избавления от нулевых копеек
	//Результат = СтрЗаменить(Результат, ",00", "");  
	
    //Серегин М.В. 03.06.2015 17:04:01
	//Если Объект.ЭтоМосква Тогда
	//    IntervalS = Объект.ВремяПрибытияС;
	//    IntervalPO = Объект.ПрибытияПо;                        
	//ИначеЕсли Объект.КодЗоныТарификации = "00000000006" Или Объект.КодЗоныТарификации = "00000000052" Тогда
	//	//убрали автоподмену 17.04.2018
	//	//IntervalS = НачалоДня(Объект.ВремяПрибытияС)+32400;
	//	//IntervalPO = НачалоДня(Объект.ПрибытияПо)+79200;
	//	
	//    IntervalS = Объект.ВремяПрибытияС;
	//    IntervalPO = Объект.ПрибытияПо;                        
	//	//убрали автоподмену 17.04.2018
	//Иначе
	//	IntervalS = НачалоДня(Объект.ВремяПрибытияС)+32400;
	//	IntervalPO = НачалоДня(Объект.ПрибытияПо)+79200;		
	//КонецЕсли;
	
	
	Если Объект.КодЗоныТарификации = "00000000006" Или Объект.КодЗоныТарификации = "00000000052" Или Объект.КодЗоныТарификации = "00000000030"  Или Объект.КодЗоныТарификации = "00000000003" Или Объект.КодЗоныТарификации = "00000000031" Тогда
		//убрали автоподмену 17.04.2018
		//IntervalS = НачалоДня(Объект.ВремяПрибытияС)+32400;
		//IntervalPO = НачалоДня(Объект.ПрибытияПо)+79200;
		
	    IntervalS = Объект.ВремяПрибытияС;
	    IntervalPO = Объект.ПрибытияПо;                        
		//убрали автоподмену 17.04.2018
	ИначеЕсли Объект.ИнтернетМагазинСсылка.Код = "Shop_428" Тогда
		//задача 3327, ДМ
		IntervalS = НачалоДня(Объект.ВремяПрибытияС)+36000;
		IntervalPO = НачалоДня(Объект.ПрибытияПо)+72000;		
		//задача 3327
	Иначе	
		//Геннадий 27.10.2020 ->
		//правка интервала времени в тексте СМС с 10 до 22 ч - для зон за пределами МКАД
		IntervalS = НачалоДня(Объект.ВремяПрибытияС) + 36000;//32400;
		//Геннадий <-
		IntervalPO = НачалоДня(Объект.ПрибытияПо)+79200;		
	
	КонецЕсли;
    Результат = СтрЗаменить(Результат, "[IntervalS]", Формат(IntervalS,"ДФ=H"));
    Результат = СтрЗаменить(Результат, "[IntervalPO]", Формат(IntervalPO,"ДФ=H"));
	Результат = СтрЗаменить(Результат, "[Date]", Формат(Объект.Дата,"ДФ=dd.MM.yyyy"));
	Результат = СтрЗаменить(Результат, "[IM]", Объект.ИнтернетМагазин);
	
	Если ЗначениеЗаполнено(Объект.НаименованиеЛатиницей) Тогда
		Результат = СтрЗаменить(Результат, "[IMLat]", Объект.НаименованиеЛатиницей);
	Иначе
		Результат = СтрЗаменить(Результат, "[IMLat]", Объект.ИнтернетМагазин);	
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(Объект.Экспедитор) Тогда
		ФИОЭкспедитора = СокрЛП(Объект.Экспедитор);
		//ФИОЭкспедитора = smv.Падежик(ФИОЭкспедитора, 3,1);
		// Якурнов 23.08.2018 17:45:39
		Попытка
			ФИОЭкспедитора = smv.ПолучитьСклонениеФИОВстроенный(ФИОЭкспедитора, Падеж);
		Исключение
		КонецПопытки;
		//+Степанов
		ФИОЭкспедитора = СтрЗаменить(ФИОЭкспедитора,"  "," ");
		//-Степанов
		ФИОЭкспедитора = СтрЗаменить(ФИОЭкспедитора, " ", Символы.ПС);
		ИмяЭкспедитора = СтрПолучитьСтроку(ФИОЭкспедитора, 2);
		Результат = СтрЗаменить(Результат, "[Name]", ИмяЭкспедитора);
		Результат = СтрЗаменить(Результат, "[NameLat]", Объект.ЭкспедиторЛатиницей);		
	Иначе
		ФИОВод = СокрЛП(Объект.Водитель);
		//ФИОВод = smv.Падежик(ФИОВод, 3,1);//+++++Серегин М.В. 09.03.2016 17:54:54 было smv.ПадежС(ФИОВод, 3);
		
		// Якурнов 23.08.2018 17:45:39
		Попытка
			ФИОВод = smv.ПолучитьСклонениеФИОВстроенный(ФИОВод, Падеж);
		Исключение
		КонецПопытки;
		//+Степанов
		ФИОВод = СтрЗаменить(ФИОВод,"  "," ");
		//-Степанов
		ФИОВод = СтрЗаменить(ФИОВод, " ", Символы.ПС);
		ИмяВод = СтрПолучитьСтроку(ФИОВод, 2);
		Результат = СтрЗаменить(Результат, "[Name]", ИмяВод);
		Результат = СтрЗаменить(Результат, "[NameLat]", Объект.ВодительЛатиницей);		
	КонецЕсли;
	
	
    ////+++++Серегин М.В. 09.03.2016 17:58:35 
    //ИмяВод = СтрЗаменить(ИмяВод,Лев(ИмяВод,1),ВРег(Лев(ИмяВод,1)));
    ////-----Серегин М.В. 09.03.2016 17:58:36 
	
	
    //Серегин М.В. 03.06.2015 17:04:03
	
	//+++ Костя 25.08.2015
	КОплатеКлиентом = ?(Объект.КОплатеКлиентом=NULL, 0, Объект.КОплатеКлиентом);
	Результат = СтрЗаменить(Результат, "[SummaOplYa]", КОплатеКлиентом);
	//--- Костя 25.08.2015
    //+Степанов Задача № 3917
	//Геннадий #4615 13.07.2021 ++ замена "код" на "kod"
	Результат = СтрЗаменить(Результат, "[customerIdentificationCode]", "kod: " + Объект.КодИдентификацииКлиента);
	//-Степанов Задача № 3917
	
	//Геннадий #4761 10.06.2022 ++
	Если Не ПустаяСтрока(Объект.СсылкаНаОтслеживание) Тогда
		Результат = СтрЗаменить(Результат, "[RecipientHL]", Константы.ТелоСсылкиЛКПолучателяЗаказа.Получить() + Объект.СсылкаНаОтслеживание);
	Иначе
		Результат = СтрЗаменить(Результат, "[RecipientHL]", "");
		//Результат = СтрЗаменить(Результат, "  ", " ");
	КонецЕсли;	
	//Геннадий #4761 10.06.2022 --
	
    Возврат Результат;
КонецФункции

Функция УбратьСимволы(знач НомерСтрока)

	МассивДляУдаления = Новый массив;
	
	Для НСим = 1 По СтрДлина(НомерСтрока) Цикл			
		Если КодСимвола(НомерСтрока, НСим) > 255 Тогда			
			Символ = Сред(НомерСтрока, НСим, 1);
			МассивДляУдаления.Добавить(Символ);	
		КонецЕсли;		
	КонецЦикла;
	
	
	Для каждого Мас Из МассивДляУдаления Цикл	
		НомерСтрока = СтрЗаменить(НомерСтрока, Мас, "");	
	КонецЦикла;
	
	//Геннадий 28.09.2021 ->
	//сервис не воспринимает решетку, замена на код
	Если Найти(НомерСтрока, "#") > 0 Тогда
		НомерСтрока = СтрЗаменить(НомерСтрока, "#", "%23");
	КонецЕсли;
	//Геннадий <-
		
	Возврат НомерСтрока;

КонецФункции

Функция URLEncode(Стр1)
    
	//Рез = ""; 
	//Стр= СокрЛП(Стр1);
	//Для Сч=1 По СтрДлина(Стр) Цикл
	//    
	//    Символ = Сред(Стр, Сч, 1);
	//    КС = КодСимвола(Символ);
	//    
	//    Рез = Рез + "%"+ Hex(Цел(КС/256)) + "%"+ Hex(КС%256);
	//    
	//КонецЦикла;
    Возврат Стр1;
    //Возврат Рез;
КонецФункции // URLEncode() 

Функция _SMSC_ПослатьКоманду(Команда, Аргументы = "", текстЗапросаНаСервис = "") 
    
    Сервер = "smsc.ru";
    Ресурс = "/sys/" + Команда + ".php";
    _Параметры = "login=" + СокрЛП(URLEncode(SMSC_LOGIN)) + "&psw=" + СокрЛП(URLEncode(SMSC_PASSWORD)) + "&fmt=1&charset=utf-8" +
    ?(Не ПустаяСтрока(Аргументы), "&" + СокрЛП(Аргументы), "");
	
    Для Сч = 1 По 3 Цикл
        
        Если Сч > 1 Тогда
            Для Сч2 = 1 По 2000 Цикл
                у = Сч2; // Небольшой таймаут
            КонецЦикла;
        КонецЕсли;    
        
        Если Сч = 3 Тогда
            Сервер = "www2.smsc.ru";
        КонецЕсли;	
        
        Рез = _SMSC_ПрочитатьАдрес(Сервер, Ресурс, _Параметры, текстЗапросаНаСервис);
        
        Если НЕ ПустаяСтрока(Рез) Тогда
            Прервать;
        КонецЕсли;
        
    КонецЦикла;   
    
    Если ПустаяСтрока (Рез)  Тогда
        
        Если SMSC_DEBUG = 1 Тогда
            Сообщить("Ошибка чтения адреса: "+ Сервер + Ресурс + "?" + _Параметры);
        КонецЕсли;                                                    
        
        Рез = "," // Фиктивный ответ
        
    КонецЕсли;                       
    
    Возврат Строка2Список(Рез);
    
КонецФункции // _SMSC_ПослатьКоманду()

Процедура ДвиженияРассылкаСМС(Оператор,Заказ,ШаблонРассылки,СтатусСообщения,Телефон)
    ДатаОтбора = ТекущаяДата();
    Наб = РегистрыСведений.РассылкаСМС.СоздатьНаборЗаписей();
    Наб.Отбор.ОператорСМСРассылки.Установить(Оператор);
    Наб.Отбор.Период.Установить(ДатаОтбора);
    Наб.Отбор.ТипСМСРассылки.Установить(ШаблонРассылки.ТипСМСРассылки);
    Наб.Отбор.Заказ.Установить(Заказ);
    
    Нов = Наб.Добавить();
    Нов.Заказ = Заказ;
    Нов.Период = ДатаОтбора;
    Нов.ОператорСМСРассылки = Оператор;
    Нов.ТипСМСРассылки = ШаблонРассылки.ТипСМСРассылки;
    Нов.СтатусСообщения = СтатусСообщения;
    Нов.Шаблон = ШаблонРассылки;
	Нов.Телефон = Телефон;
    Наб.Записать();
КонецПроцедуры

Функция Строка2Список(Стр)       
    
    Перем Рез;
    
    Рез = Новый СписокЗначений;
    Сч = 1;
    
    Для Сч = 1 По 4 Цикл
        
        Поз = Найти(Стр, ","); 
        
        Если Поз = 0 Тогда
            Рез.Добавить(Стр);
            Прервать;                 
        Иначе	
            Рез.Добавить(Лев(Стр,Поз-1));
        КонецЕсли;	 
        
        Стр = Сред(Стр, Поз+1, СтрДлина(Стр)-Поз);
        
    КонецЦикла;
    
    Возврат Рез;
    
КонецФункции // Строка2Список()


функция ФорматыСообщений(_фс)
    //перем _ФорматыСообщений;
    //_ФорматыСообщений = Новый Массив(7);
    //_ФорматыСообщений[1] = "flash=1";
    //_ФорматыСообщений[2] = "push=1";
    //_ФорматыСообщений[3] = "hlr=1";
    //_ФорматыСообщений[4] = "bin=1";
    //_ФорматыСообщений[5] = "bin=2";
    //_ФорматыСообщений[6] = "ping=1";	
    возврат(?(_фс,"flash=1",""));
конецфункции

//Процедура для работы РЗ
Функция _SMSC_ПрочитатьАдрес(Сервер, РесурсНаСервере, _Параметры, текстЗапросаНаСервис = "") 
    
    Перем Рез;	 
    
    ЕСТЬ_ПРОКСИ = Ложь;
    
    Прокси = Неопределено;
	//Если ЕСТЬ_ПРОКСИ Тогда
	//    Прокси = Новый ИнтернетПрокси;
	//    Прокси.НеИспользоватьПроксиДляЛокальныхАдресов = Истина;
	//    Прокси.Пользователь = ПРОКСИ_ЛОГИН; 
	//    Прокси.Пароль = ПРОКСИ_ПАРОЛЬ; 
	//    Прокси.Установить("http" + ?(SMSC_HTTPS=1, "s", ""), ПРОКСИ_АДРЕС, ПРОКСИ_ПОРТ);
	//КонецЕсли;
    
    Попытка
        Соединение = Новый HTTPСоединение(Сервер, , , , Прокси, ?(SMSC_HTTPS=1, Истина, Ложь));
    Исключение
        Сообщить("Не удалось установить соединение с сервером:" 
        + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
        Возврат "";
    КонецПопытки;
    
    ИмяФайлаРезультата = ПолучитьИмяВременногоФайла();
    
    РесурсПараметры = РесурсНаСервере+"?"+_Параметры;
    Если СтрДлина(РесурсПараметры) < 2000 Тогда // GET 
		
		//Геннадий #4377 01.12.2020 ->
		текстЗапросаНаСервис = РесурсПараметры;
		//Геннадий #4377 01.12.2020 <-
		
        Попытка
            Соединение.Получить(РесурсПараметры, ИмяФайлаРезультата);
            Соединение = Неопределено;
        Исключение 
            Сообщить("Не удалось получить данные с сервера", СтатусСообщения.Важное);
            Возврат "";
        КонецПопытки;
        
    Иначе // POST	
        
        //Создаём файл отправки - содержимое POST-запроса. 
        ИмяФайлаОтправки = ПолучитьИмяВременногоФайла();
        ФайлОтправки = Новый ЗаписьТекста(ИмяФайлаОтправки, КодировкаТекста.ANSI, Символы.ПС, ЛОЖЬ);
        ФайлОтправки.ЗаписатьСтроку(_Параметры); 
        ФайлОтправки.Закрыть(); 
        
        //Формируем заголовок POST-запроса.
        ЗаголовокHTTP = Новый Соответствие();
        ЗаголовокHTTP.Вставить("Content-Type", "application/x-www-form-urlencoded");
        ФайлОтправки = Новый Файл(ИмяФайлаОтправки); 
        РазмерФайлаОтправки = XMLСтрока(ФайлОтправки.Размер()); 
        ЗаголовокHTTP.Вставить("Content-Length", Строка(РазмерФайлаОтправки)); 
        
        Попытка
            Соединение.ОтправитьДляОбработки(ИмяФайлаОтправки, РесурсНаСервере, ИмяФайлаРезультата, ЗаголовокHTTP);
            Соединение = Неопределено;
        Исключение 
            Сообщить("Не удалось получить данные с сервера:" + Символы.ПС + ИнформацияОбОшибке().Описание, СтатусСообщения.Важное);
            Возврат "";
        КонецПопытки;
        
    КонецЕсли;	
    
    ФайлРезультата = Новый ЧтениеТекста(ИмяФайлаРезультата);
    Рез = ФайлРезультата.ПрочитатьСтроку();
    
    Возврат Рез;
    
КонецФункции //_SMSC_ПрочитатьАдрес()

//Геннадий #3995 21.05.2020 <-

//Асеев 31.05.2022 (Задача № 4813)>>>
Процедура ОтправитьСМССоСсылкойНаЛКПолучателяЗаказа(МассивЗаказов) Экспорт
	
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказы", МассивЗаказов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДополнительныеПараметрыЗаказа.Заказ.Телефон КАК Телефон,
	|	ТелоСсылкиЛКПолучателяЗаказа.Значение + ДополнительныеПараметрыЗаказа.СсылкаНаОтслеживание КАК СсылкаНаОтслеживание,
	|	ДополнительныеПараметрыЗаказа.Заказ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
	|	ДополнительныеПараметрыЗаказа.Заказ.Дата КАК Дата,
	|	ДополнительныеПараметрыЗаказа.Заказ.ВладелецТовара КАК ВладелецТовара
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ТелоСсылкиЛКПолучателяЗаказа КАК ТелоСсылкиЛКПолучателяЗаказа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДополнительныеПараметрыЗаказа.Заказ В(&Заказы)
	|	И ДополнительныеПараметрыЗаказа.Заказ.Телефон ПОДОБНО ""%9%""
	|	И ДополнительныеПараметрыЗаказа.СсылкаНаОтслеживание <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыКонтрагентовСрезПоследних.Контрагент КАК Контрагент,
	|	ПараметрыКонтрагентовСрезПоследних.ШаблонSMSОтправкиСсылкиЛКПолучателяЗаказа КАК ШаблонSMSОтправкиСсылкиЛКПолучателяЗаказа,
	|	ПараметрыКонтрагентовСрезПоследних.НаименованиеЛатиницей КАК НаименованиеЛатиницей
	|ПОМЕСТИТЬ ВТ_ШаблоныСМС
	|ИЗ
	|	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(
	|			,
	|			Контрагент В
	|				(ВЫБРАТЬ
	|					ВТ_Заказы.ВладелецТовара КАК ВладелецТовара
	|				ИЗ
	|					ВТ_Заказы КАК ВТ_Заказы)) КАК ПараметрыКонтрагентовСрезПоследних
	|ГДЕ
	|	ПараметрыКонтрагентовСрезПоследних.ШаблонSMSОтправкиСсылкиЛКПолучателяЗаказа <> ЗНАЧЕНИЕ(Справочник.ШаблоныСМСРассылок.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Телефон КАК Телефон,
	|	ВТ_Заказы.СсылкаНаОтслеживание КАК СсылкаНаОтслеживание,
	|	ВТ_Заказы.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
	|	ВТ_Заказы.Дата КАК Дата,
	|	ВТ_ШаблоныСМС.ШаблонSMSОтправкиСсылкиЛКПолучателяЗаказа.ТекстШаблона КАК ТекстШаблона,
	|	ВТ_ШаблоныСМС.ШаблонSMSОтправкиСсылкиЛКПолучателяЗаказа.Отправитель КАК Отправитель,
	|	ВТ_ШаблоныСМС.НаименованиеЛатиницей КАК НаименованиеМагазинаЛатиницей,
	|	ВТ_Заказы.ВладелецТовара.Наименование КАК НаименованиеМагазина
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ШаблоныСМС КАК ВТ_ШаблоныСМС
	|		ПО ВТ_Заказы.ВладелецТовара = ВТ_ШаблоныСМС.Контрагент";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Оператор = Справочники.ОператорыСМСРассылки.SMSC;
    SMSC_LOGIN 			= Оператор.Логин;
    SMSC_PASSWORD 		= Оператор.Пароль;
	
	//SMSC_DEBUG = 1;
	
	ДатаОтправкиСтрока = ПолучитьДатуОтправкиСМС();
	ДатаОтправки = ТекущаяДата();
	СрокЖизниSMS = 24;
	
    заполнить_по_умолчанию();
 	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НомерТелефона = СокрЛП(smv.ПолучитьНомерДляОтправкиСМС(Выборка.Телефон));
		Если НомерТелефона <> "" Тогда
			
			ТекстСМС = Выборка.ТекстШаблона;
			ТекстСМС = СтрЗаменить(ТекстСМС, "[ExNumber]", Выборка.НомерВнешнегоЗаказа);
			ТекстСМС = СтрЗаменить(ТекстСМС, "[Date]", Формат(Выборка.Дата, "ДФ=dd.MM.yyyy"));
			//ТекстСМС = СтрЗаменить(ТекстСМС, "[IntervalS]", Формат(Выборка.ВремяПрибытияС, "ДФ=HH:mm"));
			//ТекстСМС = СтрЗаменить(ТекстСМС, "[IntervalPO]", Формат(Выборка.ВремяПрибытияПо, "ДФ=HH:mm"));
			
			НаименованиеМагазина = СокрЛП(Выборка.НаименованиеМагазина);
			НаименованиеМагазинаЛатиницей = СокрЛП(Выборка.НаименованиеМагазинаЛатиницей);
			Если НаименованиеМагазинаЛатиницей = "" Тогда
				НаименованиеМагазинаЛатиницей = НаименованиеМагазина;
			КонецЕсли;
			
			ТекстСМС = СтрЗаменить(ТекстСМС, "[IM]", НаименованиеМагазина);
			ТекстСМС = СтрЗаменить(ТекстСМС, "[IMLat]", НаименованиеМагазинаЛатиницей);
			//ТекстСМС = СтрЗаменить(ТекстСМС, "[customerIdentificationCode]", Выборка.КодИдентификацииКлиента);
			ТекстСМС = СтрЗаменить(ТекстСМС, "[RecipientHL]", Выборка.СсылкаНаОтслеживание);
			
			ТекстСМС = НомерТелефона + ":" + ТекстСМС;
			
			SMSC_Отправитель = Выборка.Отправитель;
			
			requestXML 	= "";
			Ответ 		= ПослатьSMS("", "", Транслит, ДатаОтправкиСтрока, 0, флФлэш, SMSC_Отправитель, "tz=" + SMSC_ЧасовойПояс + "&valid=" + СрокЖизниSMS + "&list=" + URLEncode(ТекстСМС), requestXML);
			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры
//Асеев 31.05.2022 (Задача № 4813)<<<
