Перем МасЗ Экспорт;
Перем Таб Экспорт;
Перем ПодключениеКМагазину Экспорт;
Перем МакетСтрока Экспорт;
Перем ТабЗаказовМашин Экспорт;


Процедура УстановкаРайонов()
	
	Зап = Новый Запрос;	
	//+Степанов Задача № 3837
	Если ДатаДоставки < '20200416000000' Тогда
		Зап.Текст = "ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
		|	ТарифныеСеткиДоступныеЗоныТарификации.Зона.Ссылка КАК ЗонаТарификации,
		|	ТарифныеСеткиДоступныеЗоныТарификации.Ссылка.КлассификаторТарификации,
		|	новаМестнаяДоставка.Ссылка КАК Доставка,
		|	ГруппыРайоновРайоны.Район
		|ПОМЕСТИТЬ ВТДоступныеЗоныТарификации
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
		|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТарифныеСетки.ДоступныеЗоныТарификации КАК ТарифныеСеткиДоступныеЗоныТарификации
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов.Районы КАК ГруппыРайоновРайоны
		|			ПО ТарифныеСеткиДоступныеЗоныТарификации.Зона.Ссылка = ГруппыРайоновРайоны.Ссылка.Ссылка
		|		ПО РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.Ссылка = ТарифныеСеткиДоступныеЗоныТарификации.Ссылка.Ссылка
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&Мас)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДоступныеЗоныТарификации.Реализация,
		|	ВТДоступныеЗоныТарификации.КлассификаторТарификации,
		|	ВТДоступныеЗоныТарификации.Доставка,
		|	новаРайоныАдресов.Район,
		|	ВТДоступныеЗоныТарификации.ЗонаТарификации
		|ИЗ
		|	ВТДоступныеЗоныТарификации КАК ВТДоступныеЗоныТарификации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.новаРайоныАдресов КАК новаРайоныАдресов
		|		ПО ВТДоступныеЗоныТарификации.Доставка.ТочкаПрибытия.Адрес.Ссылка = новаРайоныАдресов.Адрес.Ссылка
		|			И ВТДоступныеЗоныТарификации.КлассификаторТарификации.Ссылка = новаРайоныАдресов.Классификатор.Ссылка
		|			И ВТДоступныеЗоныТарификации.Район.Ссылка = новаРайоныАдресов.Район.Ссылка";
	Иначе
		Зап.Текст =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
		|	ТарифныеСеткиДоступныеЗоныТарификации.Зона КАК ЗонаТарификации,
		|	ТарифныеСеткиДоступныеЗоныТарификации.Ссылка.КлассификаторТарификации КАК КлассификаторТарификации,
		|	новаМестнаяДоставка.Ссылка КАК Доставка,
		|	ГруппыРайоновРайоны.Район КАК Район
		|ПОМЕСТИТЬ ВТДоступныеЗоныТарификации
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
		|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(, Заказ В (&Мас)) КАК ПараметрыТарифаЗаказаСрезПоследних
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТарифныеСетки.ДоступныеЗоныТарификации КАК ТарифныеСеткиДоступныеЗоныТарификации
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов.Районы КАК ГруппыРайоновРайоны
		|				ПО ТарифныеСеткиДоступныеЗоныТарификации.Зона = ГруппыРайоновРайоны.Ссылка
		|			ПО ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка = ТарифныеСеткиДоступныеЗоныТарификации.Ссылка
		|		ПО (ПараметрыТарифаЗаказаСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&Мас)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДоступныеЗоныТарификации.Реализация КАК Реализация,
		|	ВТДоступныеЗоныТарификации.КлассификаторТарификации КАК КлассификаторТарификации,
		|	ВТДоступныеЗоныТарификации.Доставка КАК Доставка,
		|	новаРайоныАдресов.Район КАК Район,
		|	ВТДоступныеЗоныТарификации.ЗонаТарификации КАК ЗонаТарификации
		|ИЗ
		|	ВТДоступныеЗоныТарификации КАК ВТДоступныеЗоныТарификации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.новаРайоныАдресов КАК новаРайоныАдресов
		|		ПО ВТДоступныеЗоныТарификации.Доставка.ТочкаПрибытия.Адрес = новаРайоныАдресов.Адрес
		|			И ВТДоступныеЗоныТарификации.КлассификаторТарификации = новаРайоныАдресов.Классификатор
		|			И ВТДоступныеЗоныТарификации.Район = новаРайоныАдресов.Район";
	КонецЕсли;
	//-Степанов Задача № 3837
				
	Мас = ТабЗаказовМашин.ВыгрузитьКолонку("Реализация");
	
	Зап.УстановитьПараметр("Мас", Мас);
	
	Рез = Зап.Выполнить().Выгрузить();
	Для Каждого Тек Из рез Цикл
		Най = ТабЗаказовМашин.Найти(Тек.Реализация);
		Если Най <> Неопределено Тогда
			Най.Зона = Тек.ЗонаТарификации;
		КонецеСли;	
	Конеццикла;
КонецПроцедуры	


Функция ВыгрузитьВывестиПоСписку(Режим, Строки)
	
	ТабЗаказовМашин = Новый ТаблицаЗначений;
	
	ТабЗаказовМашин.Колонки.Добавить("Доставка");
	ТабЗаказовМашин.Колонки.Добавить("Реализация");
	ТабЗаказовМашин.Колонки.Добавить("НомерДоставки");
	ТабЗаказовМашин.Колонки.Добавить("Москва");
	ТабЗаказовМашин.Колонки.Добавить("Район");
	ТабЗаказовМашин.Колонки.Добавить("Зона");
	ТабЗаказовМашин.Колонки.Добавить("Машина");
	ТабЗаказовМашин.Колонки.Добавить("Кол");
	
	
	Запрос = Новый Запрос;
	//+Степанов Задача № 3837
	Если ДатаДоставки < '20200416000000' Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	новаРейсМестнойДоставки.Ссылка,
		|	новаЗаданияРейсов.Доставка,
		|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации КАК НомерМашины,
		|	новаЗаданияРейсов.Доставка.Номер КАК НомерДоставки,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование КАК Адрес,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса КАК АдресИзЯндекса,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва КАК Москва,
		|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Машина,
		|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
		|	новаРейсМестнойДоставки.Номер КАК НомерРейса,
		|	новаРейсМестнойДоставки.Водитель.Наименование КАК Водитель,
		|	новаРейсМестнойДоставки.Экспедитор.Наименование КАК Экспедитор
		|ИЗ
		|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
		|		ПОЛНОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаРейсМестнойДоставки КАК новаРейсМестнойДоставки
		|			ЛЕВОЕ СОЕДИНЕНИЕ Задача.новаЗадачаРейсаМестнойДоставки КАК ЗадачаРейса
		|			ПО новаРейсМестнойДоставки.Ссылка = ЗадачаРейса.БизнесПроцесс
		|		ПО новаЗаданияРейсов.Рейс = новаРейсМестнойДоставки.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО новаЗаданияРейсов.Доставка.Номер = РеализацияТоваровУслуг.Номер
		|ГДЕ
		|	новаРейсМестнойДоставки.ПометкаУдаления = ЛОЖЬ
		//|	И новаРейсМестнойДоставки.Стартован = ИСТИНА
		//|	И ЗадачаРейса.ТочкаМаршрута = &ТочкаМаршрута
		//|	И ЗадачаРейса.РейсЗапланирован = ИСТИНА
		|	И новаЗаданияРейсов.Доставка.Номер В(&Номера)
		|
		|СГРУППИРОВАТЬ ПО
		|	новаРейсМестнойДоставки.Ссылка,
		|	новаЗаданияРейсов.Доставка,
		|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации,
		|	новаЗаданияРейсов.Доставка.Номер,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва,
		|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка,
		|	РеализацияТоваровУслуг.Ссылка";
	Иначе	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	новаРейсМестнойДоставки.Ссылка КАК Ссылка,
		|	новаЗаданияРейсов.Доставка КАК Доставка,
		|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации КАК НомерМашины,
		|	новаЗаданияРейсов.Доставка.Номер КАК НомерДоставки,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование КАК Адрес,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса КАК АдресИзЯндекса,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва КАК Москва,
		|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Машина,
		|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
		|	новаРейсМестнойДоставки.Номер КАК НомерРейса,
		|	новаРейсМестнойДоставки.Водитель.Наименование КАК Водитель,
		|	новаРейсМестнойДоставки.Экспедитор.Наименование КАК Экспедитор
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
		|		ПОЛНОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаРейсМестнойДоставки КАК новаРейсМестнойДоставки
		|			ЛЕВОЕ СОЕДИНЕНИЕ Задача.новаЗадачаРейсаМестнойДоставки КАК ЗадачаРейса
		|			ПО новаРейсМестнойДоставки.Ссылка = ЗадачаРейса.БизнесПроцесс
		|		ПО новаЗаданияРейсов.Рейс = новаРейсМестнойДоставки.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО новаЗаданияРейсов.Доставка.Номер = РеализацияТоваровУслуг.Номер
		|ГДЕ
		|	новаРейсМестнойДоставки.ПометкаУдаления = ЛОЖЬ
		|	И новаЗаданияРейсов.Доставка.Номер В(&Номера)
		|
		|СГРУППИРОВАТЬ ПО
		|	новаРейсМестнойДоставки.Ссылка,
		|	новаЗаданияРейсов.Доставка,
		|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации,
		|	новаЗаданияРейсов.Доставка.Номер,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва,
		|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка,
		|	РеализацияТоваровУслуг.Ссылка,
		|	новаРейсМестнойДоставки.Номер,
		|	новаРейсМестнойДоставки.Водитель.Наименование,
		|	новаРейсМестнойДоставки.Экспедитор.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Ссылка КАК Ссылка,
		|	ВТ.Доставка КАК Доставка,
		|	ВТ.НомерМашины КАК НомерМашины,
		|	ВТ.НомерДоставки КАК НомерДоставки,
		|	ВТ.Адрес КАК Адрес,
		|	ВТ.АдресИзЯндекса КАК АдресИзЯндекса,
		|	ВТ.Москва КАК Москва,
		|	ВТ.Машина КАК Машина,
		|	ВТ.Реализация КАК Реализация,
		|	ВТ.НомерРейса КАК НомерРейса,
		|	ВТ.Водитель КАК Водитель,
		|	ВТ.Экспедитор КАК Экспедитор,
		|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСетка
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ.Реализация КАК Реализация
		|					ИЗ
		|						ВТ КАК ВТ)) КАК ПараметрыТарифаЗаказаСрезПоследних
		|		ПО ВТ.Реализация = ПараметрыТарифаЗаказаСрезПоследних.Заказ";
		
	КонецЕсли;
	//-Степанов Задача № 3837

	
	//Запрос.УстановитьПараметр("Дата1", ДатаДоставки);
	//Запрос.УстановитьПараметр("Дата2", КонецДня(ДатаДоставки));
	Номера = Новый Массив;
	
	Для Сч = 1 По СтрЧислоСтрок(строки) Цикл
		Номера.Добавить(СтрПолучитьСтроку(Строки, Сч));
	КонецЦикла;	
	Запрос.УстановитьПараметр("Номера", Номера);
	Запрос.УстановитьПараметр("ТочкаМаршрута", БизнесПроцессы.новаРейсМестнойДоставки.ТочкиМаршрута.ПланированиеРейсаМестнойДоставки);
    РезЗ = Запрос.Выполнить();
	Выборка = РезЗ.Выбрать();
	ТекПроцент = -1;
	н = 0;	
	МасЗ = Новый Массив;
	Стр = "";
	Стр2 = "";
	кол = Выборка.Количество();
	//Сообщить("Выгружается " + кол + " доставок");
	
	Пока Выборка.Следующий() Цикл
		
		Нов = ТабЗаказовМашин.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Выборка);
		Нов.Кол = 1;
	КонецЦикла;
	УстановкаРайонов();	
	Выборка = РезЗ.Выбрать();
	
	// - Дробница Р. 2482
	МассивПараметров = Новый Массив;
	// Дробница Р. 2482 - 
	
	// Задача № 3143
	МассивНомеровЗаказов = новый Массив;
	// Задача № 3143

	Пока Выборка.Следующий() Цикл
		//ОбработкаПрерыванияПользователя();
		н = н +1;
		Процент = Окр(н * 100 / кол);
		Если ТекПроцент <> Процент Тогда
			ТекПроцент = Процент;
			#Если Клиент Тогда
			Состояние("" + ТекПроцент + "%");
			#КонецеСли
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.АдресИзЯндекса) Тогда
			Адрес = Выборка.АдресИзЯндекса;
		Иначе
			Адрес = Выборка.Адрес;
		КонецЕсли;
				
		
		Если Режим = "Выгрузить" Тогда
			//+Степанов Задача № 3837
			Если ДатаДоставки < '20200416000000' Тогда 
				// - Дробница Р. 2482
				ДобавитьМашинуВТаб_до_16042020(СокрЛП(Выборка.НомерДоставки), Выборка.НомерМашины, ДатаДоставки, Адрес, Выборка.Москва, Стр, Стр2, Выборка.НомерРейса, Выборка.Водитель, Выборка.Экспедитор, МассивПараметров, МассивНомеровЗаказов);					
				// Дробница Р. 2482 - 
			Иначе
			    ДобавитьМашинуВТаб(СокрЛП(Выборка.НомерДоставки), Выборка.НомерМашины, ДатаДоставки, Адрес, Выборка.Москва, Стр, Стр2, Выборка.НомерРейса, Выборка.Водитель, Выборка.Экспедитор, МассивПараметров, МассивНомеровЗаказов, Выборка.ТарифнаяСетка);
			КонецЕсли;
			//-Степанов Задача № 3837
		ИначеЕсли Режим = "Вывести" Тогда
			ВывестиМашину(Выборка, н);
        КонецЕсли;
	КонецЦикла;
	Рез = "";
	Если Режим = "Выгрузить" Тогда
		Если Стр = "" Тогда
			Возврат "Отсутствуют рейсы";
		Иначе	
			Рез = ВыгрузитьМашину(Стр, Стр2, МассивПараметров, МассивНомеровЗаказов);
		КонецеСли;	
	КонецЕсли;
	Возврат Рез;
КонецФункции


Функция ВыгрузитьВывести(Режим, Терминал = Неопределено) Экспорт
	
	ТабЗаказовМашин = Новый ТаблицаЗначений;
	
	//ТабЗаказовМашин.Колонки.Добавить("Доставка");
	//ТабЗаказовМашин.Колонки.Добавить("Реализация");
	//ТабЗаказовМашин.Колонки.Добавить("НомерДоставки");
	//ТабЗаказовМашин.Колонки.Добавить("Москва");
	//ТабЗаказовМашин.Колонки.Добавить("Район");
	//ТабЗаказовМашин.Колонки.Добавить("Зона");
	//ТабЗаказовМашин.Колонки.Добавить("Машина");
	//ТабЗаказовМашин.Колонки.Добавить("Кол");
	//ТабЗаказовМашин.Колонки.Добавить("Маршрут");
	
	Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	новаРейсМестнойДоставки.Ссылка,
	//|	новаЗаданияРейсов.Доставка,
	//|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации КАК НомерМашины,
	//|	новаЗаданияРейсов.Доставка.Номер КАК НомерДоставки,
	//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование КАК Адрес,
	//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса КАК АдресИзЯндекса,
	//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва КАК Москва,
	//|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Машина,
	//|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	//|	новаРейсМестнойДоставки.Номер КАК НомерРейса,
	//|	новаРейсМестнойДоставки.Водитель.Наименование КАК Водитель,
	//|	новаРейсМестнойДоставки.Экспедитор.Наименование КАК Экспедитор,
	//|	ДокументРейс.НомерПалетты КАК Маршрут
	//|ИЗ
	//|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	//|		ПОЛНОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаРейсМестнойДоставки КАК новаРейсМестнойДоставки
	//|			ЛЕВОЕ СОЕДИНЕНИЕ Задача.новаЗадачаРейсаМестнойДоставки КАК ЗадачаРейса
	//|			ПО новаРейсМестнойДоставки.Ссылка = ЗадачаРейса.БизнесПроцесс
	//|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК ДокументРейс
	//|			ПО новаРейсМестнойДоставки.Ссылка = ДокументРейс.РейсМестнойДоставки
	//|		ПО новаЗаданияРейсов.Рейс = новаРейсМестнойДоставки.Ссылка
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//|		ПО новаЗаданияРейсов.Доставка.Номер = РеализацияТоваровУслуг.Номер
	//|ГДЕ
	//|	новаРейсМестнойДоставки.ДатаНачала МЕЖДУ &Дата1 И &Дата2
	//|	И новаРейсМестнойДоставки.ПометкаУдаления = ЛОЖЬ
	//|	И новаРейсМестнойДоставки.Стартован = ИСТИНА
	//|	И новаРейсМестнойДоставки.РейсОтменен = ЛОЖЬ
	//|	И &УСЛОВИЕ_ТЕРМИНАЛ
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	новаРейсМестнойДоставки.Ссылка,
	//|	новаЗаданияРейсов.Доставка,
	//|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации,
	//|	новаЗаданияРейсов.Доставка.Номер,
	//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса,
	//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование,
	//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва,
	//|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка,
	//|	РеализацияТоваровУслуг.Ссылка,
	//|	новаРейсМестнойДоставки.Водитель.Наименование,
	//|	новаРейсМестнойДоставки.Номер,
	//|	новаРейсМестнойДоставки.Экспедитор.Наименование,
	//|	ДокументРейс.НомерПалетты";
	//+Степанов Задача № 3837
	Если ДатаДоставки < '20200416000000' Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	новаРейсМестнойДоставки.Ссылка КАК Ссылка,
		|	новаЗаданияРейсов.Доставка КАК Доставка,
		|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации КАК НомерМашины,
		|	новаЗаданияРейсов.Доставка.Номер КАК НомерДоставки,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование КАК Адрес,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса КАК АдресИзЯндекса,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва КАК Москва,
		|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Машина,
		|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
		|	новаРейсМестнойДоставки.Номер КАК НомерРейса,
		|	новаРейсМестнойДоставки.Водитель.Наименование КАК Водитель,
		|	новаРейсМестнойДоставки.Экспедитор.Наименование КАК Экспедитор,
		|	ДокументРейс.НомерПалетты КАК Маршрут,
		|	1 КАК Кол,
		|	ВЫБОР
		|		КОГДА КатегорииДоставки2014.Родитель = &СГТ
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СГТ,
		|	ВЫБОР
		|		КОГДА КатегорииДоставки2014.Родитель = &МГТ
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК МГТ,
		|	ВЫБОР
		|		КОГДА КатегорииДоставки2014.Родитель = &КГТ
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КГТ,
		|	новаРейсМестнойДоставки.Транспорт КАК Транспорт,
		|	ЕСТЬNULL(ПолигоныМаршрутизацииЗаказовСрезПоследних.ПолигонМаршрутизации.Порядок, ""БЗ"") КАК ПолигонМаршрутизацииПорядок
		|ИЗ
		|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
		|		ПОЛНОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаРейсМестнойДоставки КАК новаРейсМестнойДоставки
		|			ЛЕВОЕ СОЕДИНЕНИЕ Задача.новаЗадачаРейсаМестнойДоставки КАК ЗадачаРейса
		|			ПО новаРейсМестнойДоставки.Ссылка = ЗадачаРейса.БизнесПроцесс
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК ДокументРейс
		|			ПО новаРейсМестнойДоставки.Ссылка = ДокументРейс.РейсМестнойДоставки
		|		ПО новаЗаданияРейсов.Рейс = новаРейсМестнойДоставки.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
		|			ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолигоныМаршрутизацииЗаказов.СрезПоследних(, СхемаМаршрутизации В (&СхемаМаршрутизации)) КАК ПолигоныМаршрутизацииЗаказовСрезПоследних
		|			ПО РеализацияТоваровУслуг.Ссылка = ПолигоныМаршрутизацииЗаказовСрезПоследних.Заказ
		|		ПО новаЗаданияРейсов.Доставка.Номер = РеализацияТоваровУслуг.Номер
		|ГДЕ
		|	новаРейсМестнойДоставки.ДатаНачала МЕЖДУ &Дата1 И &Дата2
		|	И новаРейсМестнойДоставки.ПометкаУдаления = ЛОЖЬ
		|	И новаРейсМестнойДоставки.Стартован = ИСТИНА
		|	И новаРейсМестнойДоставки.РейсОтменен = ЛОЖЬ
		|	И &УСЛОВИЕ_ТЕРМИНАЛ
		|
		|СГРУППИРОВАТЬ ПО
		|	новаРейсМестнойДоставки.Ссылка,
		|	новаЗаданияРейсов.Доставка,
		|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации,
		|	новаЗаданияРейсов.Доставка.Номер,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва,
		|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка,
		|	РеализацияТоваровУслуг.Ссылка,
		|	новаРейсМестнойДоставки.Водитель.Наименование,
		|	новаРейсМестнойДоставки.Номер,
		|	новаРейсМестнойДоставки.Экспедитор.Наименование,
		|	ДокументРейс.НомерПалетты,
		|	КатегорииДоставки2014.Родитель,
		|	новаРейсМестнойДоставки.Транспорт,
		|	ЕСТЬNULL(ПолигоныМаршрутизацииЗаказовСрезПоследних.ПолигонМаршрутизации.Порядок, ""БЗ"")";
	Иначе
		//Асеев 28.01.2021 (Задача № 4353)>>>
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	новаРейсМестнойДоставки.Ссылка КАК Ссылка,
		//|	новаЗаданияРейсов.Доставка КАК Доставка,
		//|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации КАК НомерМашины,
		//|	новаЗаданияРейсов.Доставка.Номер КАК НомерДоставки,
		//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование КАК Адрес,
		//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса КАК АдресИзЯндекса,
		//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва КАК Москва,
		//|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Машина,
		//|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
		//|	новаРейсМестнойДоставки.Номер КАК НомерРейса,
		//|	новаРейсМестнойДоставки.Водитель.Наименование КАК Водитель,
		//|	новаРейсМестнойДоставки.Экспедитор.Наименование КАК Экспедитор,
		//|	ДокументРейс.НомерПалетты КАК Маршрут,
		//|	1 КАК Кол,
		//|	новаРейсМестнойДоставки.Транспорт КАК Транспорт,
		//|	ЕСТЬNULL(ПолигоныМаршрутизацииЗаказовСрезПоследних.ПолигонМаршрутизации.Порядок, ""БЗ"") КАК ПолигонМаршрутизацииПорядок
		//|ПОМЕСТИТЬ ВТ
		//|ИЗ
		//|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
		//|		ПОЛНОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаРейсМестнойДоставки КАК новаРейсМестнойДоставки
		//|			ЛЕВОЕ СОЕДИНЕНИЕ Задача.новаЗадачаРейсаМестнойДоставки КАК ЗадачаРейса
		//|			ПО новаРейсМестнойДоставки.Ссылка = ЗадачаРейса.БизнесПроцесс
		//|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК ДокументРейс
		//|			ПО новаРейсМестнойДоставки.Ссылка = ДокументРейс.РейсМестнойДоставки
		//|		ПО новаЗаданияРейсов.Рейс = новаРейсМестнойДоставки.Ссылка
		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		//|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПолигоныМаршрутизацииЗаказов.СрезПоследних(, СхемаМаршрутизации В (&СхемаМаршрутизации)) КАК ПолигоныМаршрутизацииЗаказовСрезПоследних
		//|			ПО РеализацияТоваровУслуг.Ссылка = ПолигоныМаршрутизацииЗаказовСрезПоследних.Заказ
		//|		ПО новаЗаданияРейсов.Доставка.Номер = РеализацияТоваровУслуг.Номер
		//|ГДЕ
		//|	новаРейсМестнойДоставки.ДатаНачала МЕЖДУ &Дата1 И &Дата2
		//|	И новаРейсМестнойДоставки.ПометкаУдаления = ЛОЖЬ
		//|	И новаРейсМестнойДоставки.Стартован = ИСТИНА
		//|	И новаРейсМестнойДоставки.РейсОтменен = ЛОЖЬ
		//|	И &УСЛОВИЕ_ТЕРМИНАЛ
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	новаРейсМестнойДоставки.Ссылка,
		//|	новаЗаданияРейсов.Доставка,
		//|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации,
		//|	новаЗаданияРейсов.Доставка.Номер,
		//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса,
		//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование,
		//|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва,
		//|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка,
		//|	РеализацияТоваровУслуг.Ссылка,
		//|	новаРейсМестнойДоставки.Водитель.Наименование,
		//|	новаРейсМестнойДоставки.Номер,
		//|	новаРейсМестнойДоставки.Экспедитор.Наименование,
		//|	ДокументРейс.НомерПалетты,
		//|	новаРейсМестнойДоставки.Транспорт,
		//|	ЕСТЬNULL(ПолигоныМаршрутизацииЗаказовСрезПоследних.ПолигонМаршрутизации.Порядок, ""БЗ"")
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	ВТ.Ссылка КАК Ссылка,
		//|	ВТ.Доставка КАК Доставка,
		//|	ВТ.НомерМашины КАК НомерМашины,
		//|	ВТ.НомерДоставки КАК НомерДоставки,
		//|	ВТ.Адрес КАК Адрес,
		//|	ВТ.АдресИзЯндекса КАК АдресИзЯндекса,
		//|	ВТ.Москва КАК Москва,
		//|	ВТ.Машина КАК Машина,
		//|	ВТ.Реализация КАК Реализация,
		//|	ВТ.НомерРейса КАК НомерРейса,
		//|	ВТ.Водитель КАК Водитель,
		//|	ВТ.Экспедитор КАК Экспедитор,
		//|	ВТ.Маршрут КАК Маршрут,
		//|	ВТ.Кол КАК Кол,
		//|	ВЫБОР
		//|		КОГДА ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки.Родитель = &СГТ
		//|			ТОГДА 1
		//|		ИНАЧЕ 0
		//|	КОНЕЦ КАК СГТ,
		//|	ВЫБОР
		//|		КОГДА ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки.Родитель = &МГТ
		//|			ТОГДА 1
		//|		ИНАЧЕ 0
		//|	КОНЕЦ КАК МГТ,
		//|	ВЫБОР
		//|		КОГДА ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки.Родитель = &КГТ
		//|			ТОГДА 1
		//|		ИНАЧЕ 0
		//|	КОНЕЦ КАК КГТ,
		//|	ВТ.Транспорт КАК Транспорт,
		//|	ВТ.ПолигонМаршрутизацииПорядок КАК ПолигонМаршрутизацииПорядок,
		//|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСетка
		//|ИЗ
		//|	ВТ КАК ВТ
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
		//|				,
		//|				Заказ В
		//|					(ВЫБРАТЬ
		//|						ВТ.Реализация КАК Реализация
		//|					ИЗ
		//|						ВТ КАК ВТ)) КАК ПараметрыТарифаЗаказаСрезПоследних
		//|		ПО ВТ.Реализация = ПараметрыТарифаЗаказаСрезПоследних.Заказ";
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	новаРейсМестнойДоставки.Ссылка КАК Ссылка,
		|	новаЗаданияРейсов.Доставка КАК Доставка,
		|	РеализацияТоваровУслуг.Ссылка КАК Реализация
		|ПОМЕСТИТЬ ВТ_новаРейсМестнойДоставки
		|ИЗ
		|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаРейсМестнойДоставки КАК новаРейсМестнойДоставки
		|		ПО новаЗаданияРейсов.Рейс = новаРейсМестнойДоставки.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО новаЗаданияРейсов.Доставка.Номер = РеализацияТоваровУслуг.Номер
		|ГДЕ
		|	новаРейсМестнойДоставки.ДатаНачала МЕЖДУ &Дата1 И &Дата2
		|	И новаРейсМестнойДоставки.ПометкаУдаления = ЛОЖЬ
		|	И новаРейсМестнойДоставки.Стартован = ИСТИНА
		|	И новаРейсМестнойДоставки.РейсОтменен = ЛОЖЬ
		|	И &УСЛОВИЕ_ТЕРМИНАЛ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_новаРейсМестнойДоставки.Реализация КАК Реализация,
		|	МАКСИМУМ(РейсЗаказы.Ссылка.ДатаРейса) КАК ДатаРейса
		|ПОМЕСТИТЬ ВТ_ДатыПоследнихРейсов
		|ИЗ
		|	ВТ_новаРейсМестнойДоставки КАК ВТ_новаРейсМестнойДоставки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс.Заказы КАК РейсЗаказы
		|		ПО ВТ_новаРейсМестнойДоставки.Реализация = РейсЗаказы.Заказ
		|			И (НЕ РейсЗаказы.УдаленИзРейса)
		|			И (РейсЗаказы.Ссылка.Проведен)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_новаРейсМестнойДоставки.Реализация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДатыПоследнихРейсов.Реализация КАК Реализация,
		|	МАКСИМУМ(РейсЗаказы.Ссылка) КАК Рейс
		|ПОМЕСТИТЬ ВТ_Рейсы
		|ИЗ
		|	ВТ_ДатыПоследнихРейсов КАК ВТ_ДатыПоследнихРейсов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс.Заказы КАК РейсЗаказы
		|		ПО ВТ_ДатыПоследнихРейсов.Реализация = РейсЗаказы.Заказ
		|			И (НЕ РейсЗаказы.УдаленИзРейса)
		|			И (РейсЗаказы.Ссылка.Проведен)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДатыПоследнихРейсов.Реализация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПривязкаМашинКРейсамСрезПоследних.Рейс КАК Рейс,
		|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
		|	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
		|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор
		|ПОМЕСТИТЬ ВТ_Экипажи
		|ИЗ
		|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(
		|			,
		|			Рейс В
		|				(ВЫБРАТЬ
		|					ВТ_Рейсы.Рейс КАК Рейс
		|				ИЗ
		|					ВТ_Рейсы КАК ВТ_Рейсы)) КАК ПривязкаМашинКРейсамСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПолигоныМаршрутизацииЗаказовСрезПоследних.Заказ КАК Заказ,
		|	ПолигоныМаршрутизацииЗаказовСрезПоследних.ПолигонМаршрутизации КАК ПолигонМаршрутизации
		|ПОМЕСТИТЬ ВТ_ПолигоныМаршрутизацииЗаказов
		|ИЗ
		|	РегистрСведений.ПолигоныМаршрутизацииЗаказов.СрезПоследних(
		|			,
		|			Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_новаРейсМестнойДоставки.Реализация КАК Реализация
		|					ИЗ
		|						ВТ_новаРейсМестнойДоставки КАК ВТ_новаРейсМестнойДоставки)
		|				И СхемаМаршрутизации В (&СхемаМаршрутизации)) КАК ПолигоныМаршрутизацииЗаказовСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыТарифаЗаказаСрезПоследних.Заказ КАК Заказ,
		|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСетка,
		|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки
		|ПОМЕСТИТЬ ВТ_ПараметрыТарифаЗаказа
		|ИЗ
		|	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
		|			,
		|			Заказ В
		|				(ВЫБРАТЬ
		|					ВТ_новаРейсМестнойДоставки.Реализация КАК Реализация
		|				ИЗ
		|					ВТ_новаРейсМестнойДоставки КАК ВТ_новаРейсМестнойДоставки)) КАК ПараметрыТарифаЗаказаСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_новаРейсМестнойДоставки.Ссылка КАК Ссылка,
		|	ВТ_новаРейсМестнойДоставки.Доставка КАК Доставка,
		|	ВТ_Экипажи.Транспорт.НомерГосударственнойРегистрации КАК НомерМашины,
		|	ВТ_новаРейсМестнойДоставки.Доставка.Номер КАК НомерДоставки,
		|	ВТ_новаРейсМестнойДоставки.Доставка.ТочкаПрибытия.Наименование КАК Адрес,
		|	ВТ_новаРейсМестнойДоставки.Доставка.ТочкаПрибытия.АдресИзЯндекса КАК АдресИзЯндекса,
		|	ВТ_новаРейсМестнойДоставки.Доставка.ТочкаПрибытия.Москва КАК Москва,
		|	ВТ_Экипажи.Транспорт КАК Машина,
		|	ВТ_новаРейсМестнойДоставки.Реализация КАК Реализация,
		|	ВТ_Рейсы.Рейс.РейсМестнойДоставки.Номер КАК НомерРейса,
		|	ВТ_Экипажи.Водитель.Наименование КАК Водитель,
		|	ВТ_Экипажи.Экспедитор.Наименование КАК Экспедитор,
		|	ВТ_Экипажи.Рейс.НомерПалетты КАК Маршрут,
		|	1 КАК Кол,
		|	ВЫБОР
		|		КОГДА ВТ_ПараметрыТарифаЗаказа.КатегорияДоставки.Родитель = &СГТ
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СГТ,
		|	ВЫБОР
		|		КОГДА ВТ_ПараметрыТарифаЗаказа.КатегорияДоставки.Родитель = &МГТ
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК МГТ,
		|	ВЫБОР
		|		КОГДА ВТ_ПараметрыТарифаЗаказа.КатегорияДоставки.Родитель = &КГТ
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КГТ,
		|	ВТ_Экипажи.Транспорт КАК Транспорт,
		|	ЕСТЬNULL(ВТ_ПолигоныМаршрутизацииЗаказов.ПолигонМаршрутизации.Порядок, ""БЗ"") КАК ПолигонМаршрутизацииПорядок,
		|	ВТ_ПараметрыТарифаЗаказа.ТарифнаяСетка КАК ТарифнаяСетка
		|ИЗ
		|	ВТ_новаРейсМестнойДоставки КАК ВТ_новаРейсМестнойДоставки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Рейсы КАК ВТ_Рейсы
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Экипажи КАК ВТ_Экипажи
		|			ПО ВТ_Рейсы.Рейс = ВТ_Экипажи.Рейс
		|		ПО ВТ_новаРейсМестнойДоставки.Реализация = ВТ_Рейсы.Реализация
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПолигоныМаршрутизацииЗаказов КАК ВТ_ПолигоныМаршрутизацииЗаказов
		|		ПО ВТ_новаРейсМестнойДоставки.Реализация = ВТ_ПолигоныМаршрутизацииЗаказов.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыТарифаЗаказа КАК ВТ_ПараметрыТарифаЗаказа
		|		ПО ВТ_новаРейсМестнойДоставки.Реализация = ВТ_ПараметрыТарифаЗаказа.Заказ";
		//Асеев 28.01.2021 (Задача № 4353)<<<
	КонецЕсли;
	//-Степанов Задача № 3837
	Запрос.УстановитьПараметр("Дата1", ДатаДоставки);
	Запрос.УстановитьПараметр("Дата2", КонецДня(ДатаДоставки));
	Запрос.УстановитьПараметр("МГТ", Справочники.КатегорииДоставки2014.МГТ);
	Запрос.УстановитьПараметр("СГТ", Справочники.КатегорииДоставки2014.СГТ);
	Запрос.УстановитьПараметр("КГТ", Справочники.КатегорииДоставки2014.КГТ);
	//Запрос.УстановитьПараметр("ТочкаМаршрута", БизнесПроцессы.новаРейсМестнойДоставки.ТочкиМаршрута.ПланированиеРейсаМестнойДоставки);
	// Михушкин --->> 	
	// Закомментировать для теста 2596 
	Если Терминал <> Неопределено Тогда	
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УСЛОВИЕ_ТЕРМИНАЛ", "РеализацияТоваровУслуг.ТерминалДоставки = &ТерминалДоставки");
		Запрос.УстановитьПараметр("ТерминалДоставки", Терминал);
		
		АктивнаяСхема = ПолигональнаяМаршрутизацияСервер.АктивнаяСхемаПолигональнойМаршрутизации(Терминал, КонецДня(ДатаДоставки));
		Запрос.УстановитьПараметр("СхемаМаршрутизации", АктивнаяСхема);
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УСЛОВИЕ_ТЕРМИНАЛ", "ИСТИНА");
		
		АктивныеСхемы = Новый Массив;		
		АктивныеСхемы.Добавить(ПолигональнаяМаршрутизацияСервер.АктивнаяСхемаПолигональнойМаршрутизации(Справочники.РегиональныеТерминалы.МоскваСтриж,КонецДня(ДатаДоставки)));
		АктивныеСхемы.Добавить(ПолигональнаяМаршрутизацияСервер.АктивнаяСхемаПолигональнойМаршрутизации(Справочники.РегиональныеТерминалы.СПбСтриж, КонецДня(ДатаДоставки)));
		Запрос.УстановитьПараметр("СхемаМаршрутизации", АктивнаяСхема);

	КонецЕсли;
	// <<--- Михушкин 	
	
	РезЗ = Запрос.Выполнить();
	ТабЗаказовМашин = РезЗ.Выгрузить();
	ТабЗаказовМашин.Колонки.Добавить("Зона");
	
	Выборка = РезЗ.Выбрать();
	ТекПроцент = -1;
	н = 0;
	Стр = "";
	Стр2 = "";
	МасЗ = Новый Массив;
	кол = Выборка.Количество();
	//Сообщить("Выгружается " + кол + " доставок");
	//Пока Выборка.Следующий() Цикл
	//	
	//	Нов = ТабЗаказовМашин.Добавить();
	//	ЗаполнитьЗначенияСвойств(Нов, Выборка);
	//	Нов.Кол = 1;
	//КонецЦикла;
	УстановкаРайонов();	
	
	// - Дробница Р. 2482
	МассивПараметров = Новый Массив;
	// Дробница Р. 2482 - 
	
	// Задача № 3143
	МассивНомеровЗаказов = новый Массив;
	// Задача № 3143
	
	//Выборка = РезЗ.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.Доставка) Тогда
			Продолжить;
		КонецЕСли;	
		//ОбработкаПрерыванияПользователя();
		н = н +1;
		Процент = Окр(н * 100 / кол);
		Если ТекПроцент <> Процент Тогда
			ТекПроцент = Процент;
			#Если Клиент Тогда
			Состояние("" + ТекПроцент + "%");
			#КонецеСли
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.АдресИзЯндекса) Тогда
			Адрес = Выборка.АдресИзЯндекса;
		Иначе
			Адрес = Выборка.Адрес;
		КонецЕсли;
		
		
		Если Режим = "Выгрузить" Тогда
			//+Степанов Задача № 3837
			Если ДатаДоставки < '20200416000000' Тогда
				// - Дробница Р. 2482
				ДобавитьМашинуВТаб_до_16042020(СокрЛП(Выборка.НомерДоставки), Выборка.НомерМашины, ДатаДоставки, Адрес, Выборка.Москва, Стр, Стр2, Выборка.НомерРейса, Выборка.Водитель, Выборка.Экспедитор, МассивПараметров, МассивНомеровЗаказов);
				// Дробница Р. 2482 - 		
			Иначе
				ДобавитьМашинуВТаб(СокрЛП(Выборка.НомерДоставки), Выборка.НомерМашины, ДатаДоставки, Адрес, Выборка.Москва, Стр, Стр2, Выборка.НомерРейса, Выборка.Водитель, Выборка.Экспедитор, МассивПараметров, МассивНомеровЗаказов, Выборка.ТарифнаяСетка);
			КонецЕсли;	
		ИначеЕсли Режим = "Вывести" Тогда
			ВывестиМашину(Выборка, н);
        КонецЕсли;
	КонецЦикла;
	Рез = "";
	Если Режим = "Выгрузить" Тогда
		Если Стр = "" Тогда
			Возврат "Отсутствуют рейсы";
		Иначе	
			// Закомментировать для теста 2596 
			Рез = ВыгрузитьМашину(Стр, Стр2, Терминал, МассивПараметров, МассивНомеровЗаказов);
			
			Рез = "";
		КонецеСли;	
	КонецЕсли;
	Возврат Рез;
КонецФункции

Процедура ДобавитьМашинуВТаб(НомерДоставки, НомерМашины, ДатаДоставки, Адрес, флМосква, Стр, Стр2, НомерРейса, Водитель, Экспедитор, МассивПараметров = Неопределено, МассивНомеровЗаказов = Неопределено, ТарифнаяСетка) Экспорт
	НомерДоставки = СтрЗаменить(НомерДоставки, "abc", "");
	НомерДоставки = СтрЗаменить(НомерДоставки, "def", "");
	#Если Клиент Тогда
	Сообщить(""+НомерДоставки + ": "+НомерМашины);
	#КонецеСли
	Если Стр = "" Тогда
		Стр = "DECLARE @t TOrderCar   ";
	КонецеСли;
	
	Если Стр2 = "" Тогда
		Стр2 = "DECLARE @t TOrderTrip   ";
	КонецеСли;
	
	
	МасЗ.Добавить(НомерДоставки);
	Р = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(НомерДоставки);
	
	НайР = ТабЗаказовМашин.Найти(Р.Ссылка);
	
	ОпрЗона = 0;
	
	Москва = ?(флМосква, 0, 1);
	
	Если НайР <> Неопределено Тогда
		Если Р.ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
			ОпрЗонаСпр = НайР.Зона;
			Если ЗначениеЗаполнено(ОпрЗонаСпр) Тогда
				ОпрЗона = Формат(ОпрЗонаСпр.КодТарифа, "ЧН=0; ЧГ=");
			Иначе
				// МАС - 09.06.2017 - №1022 --->> 			
				
				//Если Москва = 1 Тогда
				//	ОпрЗонСпр = Справочники.ГруппыРайонов.ЗаМкад;
				//Иначе
				//	ОпрЗонСпр = Справочники.ГруппыРайонов.Москва;
				//КонецеСли;
				//НайР.Зона = ОпрЗонСпр;
				//ОпрЗона = Формат(Москва, "ЧН=0; ЧГ=");
				
				ОпрЗонСпр = ТарифнаяСетка.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе;
				Если НЕ ЗначениеЗаполнено(ОпрЗонСпр) Тогда
				    Если Москва = 1 Тогда
						ОпрЗонСпр = Справочники.ГруппыРайонов.ЗаМкад;
					Иначе
						ОпрЗонСпр = Справочники.ГруппыРайонов.Москва;
					КонецеСли;
				КонецЕсли;  		
				НайР.Зона = ОпрЗонСпр;
				ОпрЗона = Формат(ОпрЗонСпр.КодТарифа, "ЧН=0; ЧГ=");
				
				// <<--- МАС
			КонецеСли;
		Иначе
			// МАС - 07.06.2017 - №992 --->> 		 
			//НайР.Зона = Р.ЗонаТарификации;
			//ОпрЗона = Формат(Р.ЗонаТарификации.КодТарифа, "ЧН=0; ЧГ=");	
			ОпрЗонаСпр = НайР.Зона;
			Если НЕ ЗначениеЗаполнено(ОпрЗонаСпр) Тогда
				// МАС - 09.06.2017 - №1022 --->> 			
				//ОпрЗонаСпр = Справочники.ГруппыРайонов.КАД_30;
				ОпрЗонаСпр = ТарифнаяСетка.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе;
				Если НЕ ЗначениеЗаполнено(ОпрЗонаСпр) Тогда
				    ОпрЗонаСпр = Справочники.ГруппыРайонов.КАД_30;
				КонецЕсли;
			    // <<--- МАС 
			КонецЕсли;		
			ОпрЗона = Формат(ОпрЗонаСпр.КодТарифа, "ЧН=0; ЧГ=");
			// <<--- МАС
		КонецеСли;
	КонецеСли;
	
	
	Стр = Стр + "
	|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(НомерДоставки) + ",'" + НомерМашины + "','" + ПараметрыСеанса.ТекущийПользователь + "', '"+ДатаИз1С(ДатаДоставки, Ложь)+"', " + ?(Адрес="NULL", "NULL", "'" + СтрЗаменить(Адрес, "'", "") + "',") + ОпрЗона + ")";
	
	// - Дробница Р. 2482
	Если Не МассивПараметров = Неопределено Тогда
		ПараметрыЗапроса = Новый Структура();
		ПараметрыЗапроса.Вставить("Address", ?(Адрес="NULL", "NULL", "'" + СтрЗаменить(Адрес, "'", "") + "'"));
		ПараметрыЗапроса.Вставить("Car", СокрЛП(НомерМашины));
		ПараметрыЗапроса.Вставить("DeliveryDate", ДатаДоставки);
		ПараметрыЗапроса.Вставить("IsRegion", Строка(ОпрЗона));
		ПараметрыЗапроса.Вставить("OrderId", СокрЛП(НомерДоставки));
		ПараметрыЗапроса.Вставить("Who", СокрЛП(ПараметрыСеанса.ТекущийПользователь));
		
		МассивПараметров.Добавить(ПараметрыЗапроса);
	КонецЕсли;
	// Дробница Р. 2482 - 
	
	// Задача № 3143
	Если Не МассивНомеровЗаказов = Неопределено Тогда
		
		Если МассивНомеровЗаказов.Найти(СокрЛП(НомерДоставки)) = Неопределено Тогда
			
			МассивНомеровЗаказов.Добавить(СокрЛП(НомерДоставки));
			
		КонецЕсли;
	
	Конецесли;
	// Задача № 3143
	
	Стр2 = Стр2 + "
	|INSERT INTO @t ([orderId],[tripId],[car],[fio1],[fio2]) VALUES (" + СокрЛП(НомерДоставки) + "," + Формат(Число(НомерРейса), "ЧГ=") + ",'" + НомерМашины + "','" + Водитель + "', '"+Экспедитор+"')";
	
КонецПроцедуры

Процедура ДобавитьМашинуВТаб_до_16042020(НомерДоставки, НомерМашины, ДатаДоставки, Адрес, флМосква, Стр, Стр2, НомерРейса, Водитель, Экспедитор, МассивПараметров = Неопределено, МассивНомеровЗаказов = Неопределено) Экспорт
	НомерДоставки = СтрЗаменить(НомерДоставки, "abc", "");
	НомерДоставки = СтрЗаменить(НомерДоставки, "def", "");
	#Если Клиент Тогда
	Сообщить(""+НомерДоставки + ": "+НомерМашины);
	#КонецеСли
	Если Стр = "" Тогда
		Стр = "DECLARE @t TOrderCar   ";
	КонецеСли;
	
	Если Стр2 = "" Тогда
		Стр2 = "DECLARE @t TOrderTrip   ";
	КонецеСли;
	
	
	МасЗ.Добавить(НомерДоставки);
	Р = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(НомерДоставки);
	
	НайР = ТабЗаказовМашин.Найти(Р.Ссылка);
	
	ОпрЗона = 0;
	
	Москва = ?(флМосква, 0, 1);
	
	Если НайР <> Неопределено Тогда
		Если Р.ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
			ОпрЗонаСпр = НайР.Зона;
			Если ЗначениеЗаполнено(ОпрЗонаСпр) Тогда
				ОпрЗона = Формат(ОпрЗонаСпр.КодТарифа, "ЧН=0; ЧГ=");
			Иначе
				// МАС - 09.06.2017 - №1022 --->> 			
				
				//Если Москва = 1 Тогда
				//	ОпрЗонСпр = Справочники.ГруппыРайонов.ЗаМкад;
				//Иначе
				//	ОпрЗонСпр = Справочники.ГруппыРайонов.Москва;
				//КонецеСли;
				//НайР.Зона = ОпрЗонСпр;
				//ОпрЗона = Формат(Москва, "ЧН=0; ЧГ=");
				
				ОпрЗонСпр = Р.ТарифнаяСеткаПартнера.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе;
				Если НЕ ЗначениеЗаполнено(ОпрЗонСпр) Тогда
				    Если Москва = 1 Тогда
						ОпрЗонСпр = Справочники.ГруппыРайонов.ЗаМкад;
					Иначе
						ОпрЗонСпр = Справочники.ГруппыРайонов.Москва;
					КонецеСли;
				КонецЕсли;  		
				НайР.Зона = ОпрЗонСпр;
				ОпрЗона = Формат(ОпрЗонСпр.КодТарифа, "ЧН=0; ЧГ=");
				
				// <<--- МАС
			КонецеСли;
		Иначе
			// МАС - 07.06.2017 - №992 --->> 		 
			//НайР.Зона = Р.ЗонаТарификации;
			//ОпрЗона = Формат(Р.ЗонаТарификации.КодТарифа, "ЧН=0; ЧГ=");	
			ОпрЗонаСпр = НайР.Зона;
			Если НЕ ЗначениеЗаполнено(ОпрЗонаСпр) Тогда
				// МАС - 09.06.2017 - №1022 --->> 			
				//ОпрЗонаСпр = Справочники.ГруппыРайонов.КАД_30;
				ОпрЗонаСпр = Р.ТарифнаяСеткаПартнера.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе;
				Если НЕ ЗначениеЗаполнено(ОпрЗонаСпр) Тогда
				    ОпрЗонаСпр = Справочники.ГруппыРайонов.КАД_30;
				КонецЕсли;
			    // <<--- МАС 
			КонецЕсли;		
			ОпрЗона = Формат(ОпрЗонаСпр.КодТарифа, "ЧН=0; ЧГ=");
			// <<--- МАС
		КонецеСли;
	КонецеСли;
	
	
	Стр = Стр + "
	|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(НомерДоставки) + ",'" + НомерМашины + "','" + ПараметрыСеанса.ТекущийПользователь + "', '"+ДатаИз1С(ДатаДоставки, Ложь)+"', " + ?(Адрес="NULL", "NULL", "'" + СтрЗаменить(Адрес, "'", "") + "',") + ОпрЗона + ")";
	
	// - Дробница Р. 2482
	Если Не МассивПараметров = Неопределено Тогда
		ПараметрыЗапроса = Новый Структура();
		ПараметрыЗапроса.Вставить("Address", ?(Адрес="NULL", "NULL", "'" + СтрЗаменить(Адрес, "'", "") + "'"));
		ПараметрыЗапроса.Вставить("Car", СокрЛП(НомерМашины));
		ПараметрыЗапроса.Вставить("DeliveryDate", ДатаДоставки);
		ПараметрыЗапроса.Вставить("IsRegion", Строка(ОпрЗона));
		ПараметрыЗапроса.Вставить("OrderId", СокрЛП(НомерДоставки));
		ПараметрыЗапроса.Вставить("Who", СокрЛП(ПараметрыСеанса.ТекущийПользователь));
		
		МассивПараметров.Добавить(ПараметрыЗапроса);
	КонецЕсли;
	// Дробница Р. 2482 - 
	
	// Задача № 3143
	Если Не МассивНомеровЗаказов = Неопределено Тогда
		
		Если МассивНомеровЗаказов.Найти(СокрЛП(НомерДоставки)) = Неопределено Тогда
			
			МассивНомеровЗаказов.Добавить(СокрЛП(НомерДоставки));
			
		КонецЕсли;
	
	Конецесли;
	// Задача № 3143
	
	Стр2 = Стр2 + "
	|INSERT INTO @t ([orderId],[tripId],[car],[fio1],[fio2]) VALUES (" + СокрЛП(НомерДоставки) + "," + Формат(Число(НомерРейса), "ЧГ=") + ",'" + НомерМашины + "','" + Водитель + "', '"+Экспедитор+"')";
	
КонецПроцедуры

Функция ДатаИз1С(Д, ЭтоКонец) Экспорт
	Возврат Формат(Год(Д),"ЧГ=0") + ЛидирующийНоль(Месяц(Д)) + ЛидирующийНоль(День(Д)) + " " +
			ЛидирующийНоль(Час(Д)) + ":" + ЛидирующийНоль(Минута(Д)) + ":" + ЛидирующийНоль(Секунда(Д)) +
			?(ЭтоКонец, ".998", "");
КонецФункции // ДатаИз1С()

Функция ЛидирующийНоль(зн) Экспорт
	Если Зн < 10 Тогда
		Возврат "0"+Зн;
	Иначе
		Возврат Зн;
	КонецЕсли;	
КонецФункции

Процедура ВывестиМашину(Выборка, н) Экспорт
	МакетСтрока.Параметры.Заполнить(Выборка);
	Если ЗначениеЗаполнено(Выборка.АдресИзЯндекса) Тогда
		МакетСтрока.Параметры.Адрес = Выборка.АдресИзЯндекса;
	КонецЕсли;
	МакетСтрока.Параметры.н = н;
	Таб.Вывести(МакетСтрока);
КонецПроцедуры

Функция ЗапросКИнтернетМагазину(ТекстЗапроса) Экспорт
	Cmd = Новый COMОбъект("ADODB.Command");
	Cmd.ActiveConnection = ПодключениеКМагазину;
	Cmd.CommandText = ТекстЗапроса;
	Cmd.CommandType = 1;
	Возврат Cmd.Execute();
КонецФункции

Функция ВыгрузитьМашину(Стр, Стр2, Терминал = Неопределено, МассивПараметров = Неопределено, МассивНомеровЗаказов = Неопределено) Экспорт
	
	//+Степанов Задача № 3837
	Если ДатаДоставки < '20200416000000' Тогда
		Возврат ВыгрузитьМашину_до_16042020(Стр, Стр2, Терминал = Неопределено, МассивПараметров = Неопределено, МассивНомеровЗаказов = Неопределено)
	КонецЕсли;	
	//-Степанов Задача № 3837
	
	// МАС - 14.11.2017 - №2018 --->> 
	ДокВыгрузка = Документы.ВыгрузкаДанныхМаршрутизацииВАдминку.СоздатьДокумент();
	ДокВыгрузка.Дата = ТекущаяДата();
	ДокВыгрузка.ДатаМаршрутизации = ДатаДоставки;
	ДокВыгрузка.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	ДокВыгрузка.ЗапросSQL = Стр;	
	//Если НЕ ЗначениеЗаполнено(Терминал) Тогда	
	//	Терминал = ПараметрыСеанса.ТерминалДоставки;		
	//КонецЕсли;
	// <<--- МАС 
		
	Попытка		
		
		// - Дробница Р. 2482 /К замене
		Если Не МассивПараметров = Неопределено тогда
			Если МассивПараметров.Количество() > 0 Тогда
				
				ПараметрыЗапроса = Новый Структура;		
				ПараметрыЗапроса.Вставить("orderCars", МассивПараметров);
				СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetOrderCarsResult, ПараметрыЗапроса,,,Истина);
				Если НЕ СтруктураВозврата.Успешно Тогда
					ВызватьИсключение СтруктураВозврата.ОписаниеОшибки;
				Иначе
					#Если Клиент Тогда
						Сообщить(Стр);
					#КонецеСли
				КонецЕсли;
				
			КонецЕсли;
		Иначе
			Евген.ЗапросКИнтернетМагазину(Стр + "
			|EXEC import_setOrderCarsFrom1C @t
			|", ПодключениеКМагазину, 800);
			#Если Клиент Тогда
				Сообщить(Стр);
			#КонецеСли
		КонецЕсли;
		// Дробница Р. 2482 - 

		// Задача № 3143
		Если Не МассивНомеровЗаказов = Неопределено Тогда
			ТарификацияУслугСервер.УстановитьКомпонентыТарифовИзАдминки(МассивНомеровЗаказов);
	    КонецЕсли;
		// Задача № 3143

		//Асеев 09.09.2020 (Задача № 4205)>>>
		//добавлен КонтекстВызова
		Евген.ЗапросКИнтернетМагазину(Стр2 + "
		|EXEC import_setTripFrom1C @t
		|", ПодключениеКМагазину, 800,, "Обработка.ВыгрузкаМашин.МодульОбъекта.ВыгрузитьМашину");
		//Асеев 09.09.2020 (Задача № 4205)<<<
		
	Исключение
		
		#Если Клиент Тогда
			Сообщить("Ошибка выгрузки машин. " + ОписаниеОшибки(), СтатусСообщения.Важное);
		#КонецеСли		
		// МАС - 14.11.2017 - №2018 --->> 
		ДокВыгрузка.ОписаниеОшибки = ОписаниеОшибки();
		ДокВыгрузка.Записать(РежимЗаписиДокумента.Запись);
		// <<--- МАС 	
		
		// МАС - 02.04.2018 - № --->> 
		МасОш = Новый Массив;
		МасОш.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		МасОш.Добавить("v.yakurnov@strizh-logistic.ru");
		lem.ОтправитьСообщение(МасОш, "Ошибка выгрузки данных в админку", "При выгрузке данных в админку произошла ошибка!" + Символы.ПС + "Текст ошибки: " + ОписаниеОшибки());
		// <<--- МАС
		
		Возврат "Ошибка выгрузки машин. " + ОписаниеОшибки();		
		
	КонецПопытки;	
	
	// МАС - 14.11.2017 - №2018 --->> 
	ДокВыгрузка.ДанныеВыгруженыВАдминку = Истина;
	ДокВыгрузка.Записать(РежимЗаписиДокумента.Запись);
	// <<--- МАС 
	
	
	Попытка
		
		Мас = "";	
		Для Сч = 0 По МасЗ.Количество() -1  Цикл
			Если Сч <> МасЗ.Количество() - 1 Тогда			
				Мас = Мас + МасЗ[сч] + ",";			
			Иначе
				Мас = Мас + МасЗ[сч];			
			КонецеСли;
		КонецЦикла;	
		
		Ткст = "select dbo.mv_orders.orderIDStr, dbo.mv_orders.serviceDC, dbo.mv_orders.serviceDCClean, dbo.mv_orders.typeDelivery, dbo.mv_orders.tariffCategoryId, dbo.mv_orders.chargeableWeight from dbo.mv_orders where dbo.mv_orders.orderID in (" + Мас + ")";
		Рез_ = ЗапросКИнтернетМагазину(Ткст);
		Рез = Евген.СоздатьТаблицу(Рез_, "orderIDStr, serviceDC_Ч, serviceDCClean_Ч, typeDelivery_Ч, tariffCategoryId_Ч, chargeableWeight_Ч");
		
		//+Степанов Задача № 3833
		//Асеев 11.09.2024 (Задача № 5321)>>>
		ТаблицаПараметровТарифовЗаказов = ТарификацияУслугСервер.СоздатьТаблицуПараметровТарифовЗаказов();
		//Асеев 11.09.2024 (Задача № 5321)<<<
		//-Степанов Задача № 3833
		
		//+Степанов Задача № 3837
		МассивНомеровИзРезультатаЗапросаКАдминке = Рез.ВыгрузитьКолонку("orderIDStr");
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПараметрыТарифаЗаказаСрезПоследних.Заказ КАК Заказ,
		               |	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСетка
		               |ИЗ
		               |	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(, Заказ.Номер В (&НомераЗаказов)) КАК ПараметрыТарифаЗаказаСрезПоследних";
		Запрос.УстановитьПараметр("НомераЗаказов",МассивНомеровИзРезультатаЗапросаКАдминке);
		ТЗТарифныхСеток = Запрос.Выполнить().Выгрузить();
		//-Степанов Задача № 3837

		
		Для Каждого Тек Из Рез Цикл
			
			// МАС - 14.11.2017 - №2018 --->> 
			НСтр = ДокВыгрузка.Заказы.Добавить();
			// <<--- МАС 		
			НайД = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Тек.orderIDStr);
			
			НайР = ТабЗаказовМашин.Найти(НайД.Ссылка);
				
			
			Если Не Найд.Пустая() Тогда
				
				// МАС - 14.11.2017 - №2018 --->> 
				НСтр.Заказ = НайД.Ссылка;
				НСтр.УслугиСД = Тек.serviceDC_Ч;
				НСтр.УслугиСДЧистые = Тек.serviceDCClean_Ч;
				НСтр.КатегорияДоставки = Справочники.КатегорииДоставки2014.НайтиПоРеквизиту("Категория", Тек.typeDelivery_Ч);
				
				ЗапросРейс = Новый Запрос("ВЫБРАТЬ
				                          |	РейсЗаказы.Ссылка КАК Рейс,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Транспорт КАК Транспорт,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Водитель КАК Водитель,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Экспедитор КАК Экспедитор
				                          |ИЗ
				                          |	Документ.Рейс.Заказы КАК РейсЗаказы
				                          |ГДЕ
				                          |	РейсЗаказы.Заказ = &Заказ
				                          |	И РейсЗаказы.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
				                          |	И РейсЗаказы.Ссылка.ПометкаУдаления = ЛОЖЬ");
				
				// Якурнов 30.07.2018 16:22:57 изменено Рейс.Дата на Рейс.ДатаРейса
				
				ЗапросРейс = Новый Запрос("ВЫБРАТЬ
				                          |	РейсЗаказы.Ссылка КАК Рейс,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Транспорт КАК Транспорт,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Водитель КАК Водитель,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Экспедитор КАК Экспедитор
				                          |ИЗ
				                          |	Документ.Рейс.Заказы КАК РейсЗаказы
				                          |ГДЕ
				                          |	РейсЗаказы.Заказ = &Заказ
				                          |	И РейсЗаказы.Ссылка.ДатаРейса МЕЖДУ &Дата1 И &Дата2
				                          |	И РейсЗаказы.Ссылка.ПометкаУдаления = ЛОЖЬ");
				ЗапросРейс.УстановитьПараметр("Заказ", НайД.Ссылка);
				ЗапросРейс.УстановитьПараметр("Дата1", НачалоДня(ДатаДоставки));
				ЗапросРейс.УстановитьПараметр("Дата2", КонецДня(ДатаДоставки));
				РезРейс = ЗапросРейс.Выполнить().Выбрать();
				
				Если РезРейс.Следующий() Тогда					
					НСтр.Рейс       = РезРейс.Рейс;
					НСтр.Транспорт  = РезРейс.Транспорт;
					НСтр.Водитель   = РезРейс.Водитель;
					НСтр.Экспедитор = РезРейс.Экспедитор;		
				КонецЕсли;
				// <<--- МАС 
				Д = НайД.ПолучитьОбъект();
				Д.УслугиСД = Тек.serviceDC_Ч;
				Д.УслугиСДЧистые = Тек.serviceDCClean_Ч;
				Если НайР <> Неопределено Тогда
					Если ЗначениеЗаполнено(НайР.Зона) Тогда
						Д.ЗонаТарификации = НайР.Зона;
						// МАС - 14.11.2017 - №2018 --->> 
						НСтр.ЗонаТарификации = НайР.Зона;
						// <<--- МАС 
					КонецеСли;	
				КонецеСли;
				Д.КатегорияДоставки = Тек.typeDelivery_Ч;
				Р_Бр = "";
				//+Степанов Задача № 3837
				СтрокаТЗтарифныхСеток = ТЗТарифныхСеток.Найти(НайД, "Заказ");
				Если СтрокаТЗтарифныхСеток <> Неопределено Тогда
					ТарифнаяСеткаПартнера = СтрокаТЗтарифныхСеток.ТарифнаяСетка;
				Иначе
					ТарифнаяСеткаПартнера = Справочники.ТарифныеСетки.ПустаяСсылка();
				КонецЕсли;	
				Если ЗначениеЗаполнено(ТарифнаяСеткаПартнера) Тогда
					Р_Бр = Справочники.РасчетныеБрейки.НайтиПоРеквизиту("КодБрейка", Тек.tariffCategoryId_Ч,, ТарифнаяСеткаПартнера);
				КонецеСли;			
				//Если ЗначениеЗаполнено(д.ТарифнаяСеткаПартнера) Тогда
				//	Р_Бр = Справочники.РасчетныеБрейки.НайтиПоРеквизиту("КодБрейка", Тек.tariffCategoryId_Ч,, д.ТарифнаяСеткаПартнера.Ссылка);
				//КонецеСли;
				//-Степанов Задача № 3837
				Если ЗначениеЗаполнено(Р_Бр) Тогда
					Д.РасчетныйБрейк = Р_Бр.Ссылка;
					// МАС - 14.11.2017 - №2018 --->> 
					НСтр.РасчетныйБрейк = Р_Бр.Ссылка;
					// <<--- МАС 	
				КонецЕСли;	
				#Если Клиент Тогда
					Сообщить("Обновление доставки № " + Тек.orderIDStr);
				#КонецеСли
			КонецеСли;
			Д.Записать(РежимЗаписиДокумента.Запись);
			//+Степанов Задача № 3833
			Если ТипЗнч(НайД) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЗначениеЗаполнено(НайД) Тогда
				СтрокаПараметровТарифа = ТаблицаПараметровТарифовЗаказов.Добавить();
				СтрокаПараметровТарифа.Заказ = НайД;
				СтрокаПараметровТарифа.УслугиСД = ?(Тек.serviceDC_Ч = 0, -1, Тек.serviceDC_Ч);
				СтрокаПараметровТарифа.УслугиСДЧистые = ?(Тек.serviceDC_Ч = 0, -1, Тек.serviceDC_Ч);
				Если НайР <> Неопределено Тогда
					Если ЗначениеЗаполнено(НайР.Зона) Тогда
						СтрокаПараметровТарифа.ЗонаТарификации = НайР.Зона;
					КонецЕсли;
				КонецЕсли;
				Если ЗначениеЗаполнено(Р_Бр) Тогда
					СтрокаПараметровТарифа.РасчетныйБрейк = Р_Бр.Ссылка;
				КонецЕсли;
				СтрокаПараметровТарифа.КатегорияДоставки =  Тек.typeDelivery_Ч;
			КонецЕсли;
			//-Степанов Задача № 3833

						
			// Установка категории для расчета ЗП
			Попытка
				mas.УстановитьКатегориюДляРасчетаЗП(Д.Ссылка);
			Исключение	
			КонецПопытки;		
			
			// Михушкин - Подгрузка тарифицируемого веса в Доп. Параметры заказа - 16.11.2016 --->>
			Если Не Найд.Пустая() Тогда
				НаборТВ = РегистрыСведений.ДополнительныеПараметрыЗаказа.СоздатьНаборЗаписей();
				НаборТВ.Отбор.Заказ.Установить(Найд.Ссылка);
				НаборТВ.Прочитать();
				Если НаборТВ.Количество() Тогда
					НаборТВ[0].ТарифицируемыйВес = Тек.chargeableWeight_Ч;
					// МАС - 14.11.2017 - №2018 --->> 
					НСтр.ТарифицируемыйВес = Тек.chargeableWeight_Ч;
					// <<--- МАС
				КонецЕсли;
				НаборТВ.Записать();
			КонецЕсли;
			// <<--- Михушкин 	            
		КонецЦикла;	
		//+Степанов Задача № 3833
		Если ТаблицаПараметровТарифовЗаказов.Количество() Тогда
			ТарификацияУслугСервер.ЗаписатьПараметрыТарифаЗаказа(ТаблицаПараметровТарифовЗаказов);
		КонецЕсли;	
		//-Степанов Задача № 3833

		
		// МАС - 14.11.2017 - №2018 --->> 
		Если НЕ ЗначениеЗаполнено(Терминал) И ДокВыгрузка.Заказы.Количество() Тогда	
			Попытка
				Терминал = ДокВыгрузка.Заказы[0].Рейс.ТерминалДоставки;		
			Исключение		
			КонецПопытки;			
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Терминал) Тогда	
			ДокВыгрузка.Терминал = Терминал;	
		КонецЕсли;
		
		ДокВыгрузка.ДанныеПоТарификацииЗагруженыВ1С = Истина;
		ДокВыгрузка.Записать(РежимЗаписиДокумента.Запись);
		// <<--- МАС
		
	Исключение
		
		// МАС - 14.11.2017 - №2018 --->> 
		ДокВыгрузка.ОписаниеОшибки = ОписаниеОшибки();
		ДокВыгрузка.Записать(РежимЗаписиДокумента.Запись);
		// <<--- МАС
		
		// МАС - 02.04.2018 - № --->> 
		МасОш = Новый Массив;
		МасОш.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		МасОш.Добавить("v.yakurnov@strizh-logistic.ru");
		lem.ОтправитьСообщение(МасОш, "Ошибка при загрузке данных тарификации из админки", "При загрузке данных тарификации из админки произошла ошибка!" + Символы.ПС + "Текст ошибки: " + ОписаниеОшибки());
		// <<--- МАС 		
		
		Возврат ОписаниеОшибки();	
		
	КонецПопытки;
	
		
	Возврат "";
	
КонецФункции

Функция ВыгрузитьМашину_до_16042020(Стр, Стр2, Терминал = Неопределено, МассивПараметров = Неопределено, МассивНомеровЗаказов = Неопределено) Экспорт
	
	// МАС - 14.11.2017 - №2018 --->> 
	ДокВыгрузка = Документы.ВыгрузкаДанныхМаршрутизацииВАдминку.СоздатьДокумент();
	ДокВыгрузка.Дата = ТекущаяДата();
	ДокВыгрузка.ДатаМаршрутизации = ДатаДоставки;
	ДокВыгрузка.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	ДокВыгрузка.ЗапросSQL = Стр;	
	//Если НЕ ЗначениеЗаполнено(Терминал) Тогда	
	//	Терминал = ПараметрыСеанса.ТерминалДоставки;		
	//КонецЕсли;
	// <<--- МАС 
		
	Попытка		
		
		// - Дробница Р. 2482 /К замене
		Если Не МассивПараметров = Неопределено тогда
			Если МассивПараметров.Количество() > 0 Тогда
				
				ПараметрыЗапроса = Новый Структура;		
				ПараметрыЗапроса.Вставить("orderCars", МассивПараметров);
				СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetOrderCarsResult, ПараметрыЗапроса,,,Истина);
				Если НЕ СтруктураВозврата.Успешно Тогда
					ВызватьИсключение СтруктураВозврата.ОписаниеОшибки;
				Иначе
					#Если Клиент Тогда
						Сообщить(Стр);
					#КонецеСли
				КонецЕсли;
				
			КонецЕсли;
		Иначе
			Евген.ЗапросКИнтернетМагазину(Стр + "
			|EXEC import_setOrderCarsFrom1C @t
			|", ПодключениеКМагазину, 800);
			#Если Клиент Тогда
				Сообщить(Стр);
			#КонецеСли
		КонецЕсли;
		// Дробница Р. 2482 - 

		// Задача № 3143
		Если Не МассивНомеровЗаказов = Неопределено Тогда
			ТарификацияУслугСервер.УстановитьКомпонентыТарифовИзАдминки(МассивНомеровЗаказов);
	    КонецЕсли;
		// Задача № 3143
		
		//Асеев 09.09.2020 (Задача № 4205)>>>
		//добавлен КонтекстВызова
		Евген.ЗапросКИнтернетМагазину(Стр2 + "
		|EXEC import_setTripFrom1C @t
		|", ПодключениеКМагазину, 800,, "Обработка.ВыгрузкаМашин.МодульОбъекта.ВыгрузитьМашину_до_16042020");	
		//Асеев 09.09.2020 (Задача № 4205)<<<
		
	Исключение
		
		#Если Клиент Тогда
			Сообщить("Ошибка выгрузки машин. " + ОписаниеОшибки(), СтатусСообщения.Важное);
		#КонецеСли		
		// МАС - 14.11.2017 - №2018 --->> 
		ДокВыгрузка.ОписаниеОшибки = ОписаниеОшибки();
		ДокВыгрузка.Записать(РежимЗаписиДокумента.Запись);
		// <<--- МАС 	
		
		// МАС - 02.04.2018 - № --->> 
		МасОш = Новый Массив;
		МасОш.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		МасОш.Добавить("v.yakurnov@strizh-logistic.ru");
		lem.ОтправитьСообщение(МасОш, "Ошибка выгрузки данных в админку", "При выгрузке данных в админку произошла ошибка!" + Символы.ПС + "Текст ошибки: " + ОписаниеОшибки());
		// <<--- МАС
		
		Возврат "Ошибка выгрузки машин. " + ОписаниеОшибки();		
		
	КонецПопытки;	
	
	// МАС - 14.11.2017 - №2018 --->> 
	ДокВыгрузка.ДанныеВыгруженыВАдминку = Истина;
	ДокВыгрузка.Записать(РежимЗаписиДокумента.Запись);
	// <<--- МАС 
	
	
	Попытка
		
		Мас = "";	
		Для Сч = 0 По МасЗ.Количество() -1  Цикл
			Если Сч <> МасЗ.Количество() - 1 Тогда			
				Мас = Мас + МасЗ[сч] + ",";			
			Иначе
				Мас = Мас + МасЗ[сч];			
			КонецеСли;
		КонецЦикла;	
		
		Ткст = "select dbo.mv_orders.orderIDStr, dbo.mv_orders.serviceDC, dbo.mv_orders.serviceDCClean, dbo.mv_orders.typeDelivery, dbo.mv_orders.tariffCategoryId, dbo.mv_orders.chargeableWeight from dbo.mv_orders where dbo.mv_orders.orderID in (" + Мас + ")";
		Рез_ = ЗапросКИнтернетМагазину(Ткст);
		Рез = Евген.СоздатьТаблицу(Рез_, "orderIDStr, serviceDC_Ч, serviceDCClean_Ч, typeDelivery_Ч, tariffCategoryId_Ч, chargeableWeight_Ч");
		
		//+Степанов Задача № 3833
		//Асеев 11.09.2024 (Задача № 5321)>>>
		ТаблицаПараметровТарифовЗаказов = ТарификацияУслугСервер.СоздатьТаблицуПараметровТарифовЗаказов();
		//Асеев 11.09.2024 (Задача № 5321)<<<
		//-Степанов Задача № 3833

		
		Для Каждого Тек Из Рез Цикл
			
			// МАС - 14.11.2017 - №2018 --->> 
			НСтр = ДокВыгрузка.Заказы.Добавить();
			// <<--- МАС 		
			НайД = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Тек.orderIDStr);
			
			НайР = ТабЗаказовМашин.Найти(НайД.Ссылка);
				
			
			Если Не Найд.Пустая() Тогда
				
				// МАС - 14.11.2017 - №2018 --->> 
				НСтр.Заказ = НайД.Ссылка;
				НСтр.УслугиСД = Тек.serviceDC_Ч;
				НСтр.УслугиСДЧистые = Тек.serviceDCClean_Ч;
				НСтр.КатегорияДоставки = Справочники.КатегорииДоставки2014.НайтиПоРеквизиту("Категория", Тек.typeDelivery_Ч);
				
				ЗапросРейс = Новый Запрос("ВЫБРАТЬ
				                          |	РейсЗаказы.Ссылка КАК Рейс,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Транспорт КАК Транспорт,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Водитель КАК Водитель,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Экспедитор КАК Экспедитор
				                          |ИЗ
				                          |	Документ.Рейс.Заказы КАК РейсЗаказы
				                          |ГДЕ
				                          |	РейсЗаказы.Заказ = &Заказ
				                          |	И РейсЗаказы.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
				                          |	И РейсЗаказы.Ссылка.ПометкаУдаления = ЛОЖЬ");
				
				// Якурнов 30.07.2018 16:22:57 изменено Рейс.Дата на Рейс.ДатаРейса
				
				ЗапросРейс = Новый Запрос("ВЫБРАТЬ
				                          |	РейсЗаказы.Ссылка КАК Рейс,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Транспорт КАК Транспорт,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Водитель КАК Водитель,
				                          |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Экспедитор КАК Экспедитор
				                          |ИЗ
				                          |	Документ.Рейс.Заказы КАК РейсЗаказы
				                          |ГДЕ
				                          |	РейсЗаказы.Заказ = &Заказ
				                          |	И РейсЗаказы.Ссылка.ДатаРейса МЕЖДУ &Дата1 И &Дата2
				                          |	И РейсЗаказы.Ссылка.ПометкаУдаления = ЛОЖЬ");
				ЗапросРейс.УстановитьПараметр("Заказ", НайД.Ссылка);
				ЗапросРейс.УстановитьПараметр("Дата1", НачалоДня(ДатаДоставки));
				ЗапросРейс.УстановитьПараметр("Дата2", КонецДня(ДатаДоставки));
				РезРейс = ЗапросРейс.Выполнить().Выбрать();
				
				Если РезРейс.Следующий() Тогда					
					НСтр.Рейс       = РезРейс.Рейс;
					НСтр.Транспорт  = РезРейс.Транспорт;
					НСтр.Водитель   = РезРейс.Водитель;
					НСтр.Экспедитор = РезРейс.Экспедитор;		
				КонецЕсли;
				// <<--- МАС 
				Д = НайД.ПолучитьОбъект();
				Д.УслугиСД = Тек.serviceDC_Ч;
				Д.УслугиСДЧистые = Тек.serviceDCClean_Ч;
				Если НайР <> Неопределено Тогда
					Если ЗначениеЗаполнено(НайР.Зона) Тогда
						Д.ЗонаТарификации = НайР.Зона;
						// МАС - 14.11.2017 - №2018 --->> 
						НСтр.ЗонаТарификации = НайР.Зона;
						// <<--- МАС 
					КонецеСли;	
				КонецеСли;
				Д.КатегорияДоставки = Тек.typeDelivery_Ч;
				Р_Бр = "";
				Если ЗначениеЗаполнено(д.ТарифнаяСеткаПартнера) Тогда
					Р_Бр = Справочники.РасчетныеБрейки.НайтиПоРеквизиту("КодБрейка", Тек.tariffCategoryId_Ч,, д.ТарифнаяСеткаПартнера.Ссылка);
				КонецеСли;	
				Если ЗначениеЗаполнено(Р_Бр) Тогда
					Д.РасчетныйБрейк = Р_Бр.Ссылка;
					// МАС - 14.11.2017 - №2018 --->> 
					НСтр.РасчетныйБрейк = Р_Бр.Ссылка;
					// <<--- МАС 	
				КонецЕСли;	
				#Если Клиент Тогда
					Сообщить("Обновление доставки № " + Тек.orderIDStr);
				#КонецеСли
			КонецеСли;
			Д.Записать(РежимЗаписиДокумента.Запись);
			//+Степанов Задача № 3833
			Если ТипЗнч(НайД) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЗначениеЗаполнено(НайД) Тогда
				СтрокаПараметровТарифа = ТаблицаПараметровТарифовЗаказов.Добавить();
				СтрокаПараметровТарифа.Заказ = НайД;
				СтрокаПараметровТарифа.УслугиСД = ?(Тек.serviceDC_Ч = 0, -1, Тек.serviceDC_Ч);
				СтрокаПараметровТарифа.УслугиСДЧистые = ?(Тек.serviceDC_Ч = 0, -1, Тек.serviceDC_Ч);
				Если НайР <> Неопределено Тогда
					Если ЗначениеЗаполнено(НайР.Зона) Тогда
						СтрокаПараметровТарифа.ЗонаТарификации = НайР.Зона;
					КонецЕсли;
				КонецЕсли;
				Если ЗначениеЗаполнено(Р_Бр) Тогда
					СтрокаПараметровТарифа.РасчетныйБрейк = Р_Бр.Ссылка;
				КонецЕсли;
				СтрокаПараметровТарифа.КатегорияДоставки =  Тек.typeDelivery_Ч;
			КонецЕсли;
			//-Степанов Задача № 3833

						
			// Установка категории для расчета ЗП
			Попытка
				mas.УстановитьКатегориюДляРасчетаЗП(Д.Ссылка);
			Исключение	
			КонецПопытки;		
			
			// Михушкин - Подгрузка тарифицируемого веса в Доп. Параметры заказа - 16.11.2016 --->>
			Если Не Найд.Пустая() Тогда
				НаборТВ = РегистрыСведений.ДополнительныеПараметрыЗаказа.СоздатьНаборЗаписей();
				НаборТВ.Отбор.Заказ.Установить(Найд.Ссылка);
				НаборТВ.Прочитать();
				Если НаборТВ.Количество() Тогда
					НаборТВ[0].ТарифицируемыйВес = Тек.chargeableWeight_Ч;
					// МАС - 14.11.2017 - №2018 --->> 
					НСтр.ТарифицируемыйВес = Тек.chargeableWeight_Ч;
					// <<--- МАС
				КонецЕсли;
				НаборТВ.Записать();
			КонецЕсли;
			// <<--- Михушкин 	            
		КонецЦикла;	
		//+Степанов Задача № 3833
		Если ТаблицаПараметровТарифовЗаказов.Количество() Тогда
			ТарификацияУслугСервер.ЗаписатьПараметрыТарифаЗаказа(ТаблицаПараметровТарифовЗаказов);
		КонецЕсли;	
		//-Степанов Задача № 3833

		
		// МАС - 14.11.2017 - №2018 --->> 
		Если НЕ ЗначениеЗаполнено(Терминал) И ДокВыгрузка.Заказы.Количество() Тогда	
			Попытка
				Терминал = ДокВыгрузка.Заказы[0].Рейс.ТерминалДоставки;		
			Исключение		
			КонецПопытки;			
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Терминал) Тогда	
			ДокВыгрузка.Терминал = Терминал;	
		КонецЕсли;
		
		ДокВыгрузка.ДанныеПоТарификацииЗагруженыВ1С = Истина;
		ДокВыгрузка.Записать(РежимЗаписиДокумента.Запись);
		// <<--- МАС
		
	Исключение
		
		// МАС - 14.11.2017 - №2018 --->> 
		ДокВыгрузка.ОписаниеОшибки = ОписаниеОшибки();
		ДокВыгрузка.Записать(РежимЗаписиДокумента.Запись);
		// <<--- МАС
		
		// МАС - 02.04.2018 - № --->> 
		МасОш = Новый Массив;
		МасОш.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		МасОш.Добавить("v.yakurnov@strizh-logistic.ru");
		lem.ОтправитьСообщение(МасОш, "Ошибка при загрузке данных тарификации из админки", "При загрузке данных тарификации из админки произошла ошибка!" + Символы.ПС + "Текст ошибки: " + ОписаниеОшибки());
		// <<--- МАС 		
		
		Возврат ОписаниеОшибки();	
		
	КонецПопытки;
	
		
	Возврат "";
	
КонецФункции


Функция ВыгрузитьМашины(Парам, Терминал = Неопределено) Экспорт
	
	// Закомментировать для теста 2596 
	Попытка
		ПодключениеКМагазину = Евген.СоздатьПодключениеКИнтернетМагазину(800); 
	Исключение
		#Если Клиент Тогда
		Сообщить("Не удалось создать подключение: "+ОписаниеОшибки(), СтатусСообщения.Важное);
		#КонецЕсли
		Возврат "Не удалось создать подключение: "+ОписаниеОшибки();
	КонецПопытки;
	
	
	
	Рез = ВыгрузитьВывести("Выгрузить", Терминал);
	#Если Клиент Тогда
	Сообщить("Выгрузка окончена!");	
	#КонецЕсли
    Парам = ТабЗаказовМашин;
	Возврат Рез;
	
КонецФункции


Функция ВыгрузитьМашиныПоСписку(Парам, Строки) Экспорт
	Попытка
		ПодключениеКМагазину = Евген.СоздатьПодключениеКИнтернетМагазину(1200);
	Исключение
		#Если Клиент Тогда
		Сообщить("Не удалось создать подключение: "+ОписаниеОшибки(), СтатусСообщения.Важное);
		#КонецЕсли
		Возврат "Не удалось создать подключение: "+ОписаниеОшибки();
	КонецПопытки;
	
	Рез = ВыгрузитьВывестиПоСписку("Выгрузить", Строки);
	#Если Клиент Тогда
	Сообщить("Выгрузка окончена!");	
	#КонецЕсли
    Парам = ТабЗаказовМашин;
	Возврат Рез;
КонецФункции


Функция ВыгрузитьМашиныПоДате() Экспорт 
	
	ТабЗаказовМашин = Новый ТаблицаЗначений;
	
	ТабЗаказовМашин.Колонки.Добавить("Доставка");
	ТабЗаказовМашин.Колонки.Добавить("Реализация");
	ТабЗаказовМашин.Колонки.Добавить("НомерДоставки");
	ТабЗаказовМашин.Колонки.Добавить("Москва");
	ТабЗаказовМашин.Колонки.Добавить("Район");
	ТабЗаказовМашин.Колонки.Добавить("Зона");
	ТабЗаказовМашин.Колонки.Добавить("Машина");
	ТабЗаказовМашин.Колонки.Добавить("Кол");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	новаРейсМестнойДоставки.Ссылка,
	|	новаЗаданияРейсов.Доставка,
	|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации КАК НомерМашины,
	|	новаЗаданияРейсов.Доставка.Номер КАК НомерДоставки,
	|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование КАК Адрес,
	|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса КАК АдресИзЯндекса,
	|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва КАК Москва,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Машина,
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	новаРейсМестнойДоставки.Номер КАК НомерРейса,
	|	новаРейсМестнойДоставки.Водитель.Наименование КАК Водитель,
	|	новаРейсМестнойДоставки.Экспедитор.Наименование КАК Экспедитор
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|		ПОЛНОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаРейсМестнойДоставки КАК новаРейсМестнойДоставки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Задача.новаЗадачаРейсаМестнойДоставки КАК ЗадачаРейса
	|			ПО новаРейсМестнойДоставки.Ссылка = ЗадачаРейса.БизнесПроцесс
	|		ПО новаЗаданияРейсов.Рейс = новаРейсМестнойДоставки.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО новаЗаданияРейсов.Доставка.Номер = РеализацияТоваровУслуг.Номер
	|ГДЕ
	|	новаРейсМестнойДоставки.ДатаНачала МЕЖДУ &Дата1 И &Дата2
	|	И новаРейсМестнойДоставки.ПометкаУдаления = ЛОЖЬ
	|	И новаРейсМестнойДоставки.Стартован = ИСТИНА
	|	И новаРейсМестнойДоставки.РейсОтменен = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	новаРейсМестнойДоставки.Ссылка,
	|	новаЗаданияРейсов.Доставка,
	|	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации,
	|	новаЗаданияРейсов.Доставка.Номер,
	|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.АдресИзЯндекса,
	|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Наименование,
	|	новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка,
	|	РеализацияТоваровУслуг.Ссылка,
	|	новаРейсМестнойДоставки.Водитель.Наименование,
	|	новаРейсМестнойДоставки.Номер,
	|	новаРейсМестнойДоставки.Экспедитор.Наименование";
	
	Запрос.УстановитьПараметр("Дата1", ДатаДоставки);
	Запрос.УстановитьПараметр("Дата2", КонецДня(ДатаДоставки));
	
	РезЗ = Запрос.Выполнить();
	Выборка = РезЗ.Выбрать();
	ТекПроцент = -1;
	н = 0;
	Стр = "";
	Стр2 = "";
	МасЗ = Новый Массив;
	кол = Выборка.Количество();
	
	Пока Выборка.Следующий() Цикл
		
		Нов = ТабЗаказовМашин.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Выборка);
		Нов.Кол = 1;
	КонецЦикла;
	
	Если ТабЗаказовМашин.Количество() > 0 Тогда
		
		ТабМ = ТабЗаказовМашин.Скопировать();
		ТабМ.Свернуть("Машина", "Кол");
		ТабМ.Сортировать("Кол Убыв");
		
		МакетHTML = ПолучитьМакет("МакетHTML");
		ТекстHTMLМакет = МакетHTML.ПолучитьТекст();
		ТекстHTMLМакет = СтрЗаменить(ТекстHTMLМакет,"[КоличествоМашин]",ТабМ.Количество());
		ТекстHTMLМакет = СтрЗаменить(ТекстHTMLМакет,"[КоличествоЗаказов]",ТабМ.Итог("Кол"));
		
		ТекстHTMLМакет = СтрЗаменить(ТекстHTMLМакет,"</tbody></table></body></html>","");

		
		Н = 0;
		Для Каждого Стр Из ТабМ Цикл	
			Н = Н+1;
			ТекстHTMLМакет = ТекстHTMLМакет + 
			"<TR style='BACKGROUND-COLOR: #F5F5DC';'HEIGHT: 11.25pt' height=15>" +
			"<TD class=xl67 style='BORDER-TOP: windowtext 0.5pt solid; HEIGHT: 11.25pt; BORDER-RIGHT:  2px solid; windowtext 0.5pt solid; BORDER-BOTTOM: windowtext 0.5pt solid; BORDER-LEFT:  2px solid; windowtext 0.5pt solid; ' height=15><FONT size=2 face=Arial>"+Н+"</FONT></TD>"+
			"<TD align='CENTER'; class=xl70 style='BORDER-TOP: windowtext 0.5pt solid; BORDER-RIGHT: 2px solid; windowtext 0.5pt solid; BORDER-BOTTOM: windowtext 0.5pt solid; BORDER-LEFT:  2px solid; windowtext; ' colSpan=2><FONT size=2 face=Arial>"+Стр.Машина.НомерГосударственнойРегистрации+"</FONT></TD>"+
			"<TD align='CENTER';class=xl68 style='BORDER-TOP: windowtext 0.5pt solid; BORDER-RIGHT: 2px solid;windowtext 0.5pt solid; BORDER-BOTTOM: windowtext 0.5pt solid; BORDER-LEFT:  2px solid; windowtext; '><FONT size=2 face=Arial>"+Стр.Кол+"</FONT></TD></TR>";
		КонецЦикла;
		                                   
		ТекстHTMLМакет = ТекстHTMLМакет + "</TBODY></TABLE></BODY></HTML>";
		
		Возврат ТекстHTMLМакет;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции
