
// Формирует доставки на заданную дату согласно расписанию доставки.
//
// Параметры:
//  ДатаФормирования <Дата>
//  Индикатор        <Индикатор>: индикатор для отображения прогресса.
//
Процедура СформироватьДоставки(ДатаФормирования, Индикатор = Неопределено) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	День
	|ИЗ
	|	РегистрСведений.новаКалендарьПраздничныхДней
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(День, Месяц) = &Месяц
	| И ВидДня <> ЗНАЧЕНИЕ(Перечисление.новаВидыДнейКалендаряПраздничныхДней.ПеренесенныйРабочий)";
	
	Запрос.УстановитьПараметр("Месяц", НачалоМесяца(ДатаФормирования));
	
	соПраздники = Новый Соответствие;	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		соПраздники.Вставить(Выборка.День, Истина);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	новаТочкиДоставки.РежимПосещения КАК РежимПосещения,
	|	новаТочкиДоставки.Ссылка КАК ТочкаДоставки,
	|	МАКСИМУМ(новаОбслуживаемыеРайоныСкладов.Склад) КАК Склад,
	|	МАКСИМУМ(новаОбслуживаемыеРайоныСкладов.Склад.ТочкаДоставки) КАК ТочкаДоставкиСклада,
	|	ЕСТЬNULL(новаРайоныАдресов.Район, НЕОПРЕДЕЛЕНО) КАК Район,
	|	МАКСИМУМ(ЕСТЬNULL(новаОбслуживаемыеРайоныСкладов.Склад, НЕОПРЕДЕЛЕНО)) КАК СкладСчетчик,
	|	новаТочкиДоставки.ВладелецТочки КАК ВладелецТочки
	|ИЗ
	|	Справочник.новаТочкиДоставки КАК новаТочкиДоставки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.новаРайоныАдресов КАК новаРайоныАдресов
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.новаОбслуживаемыеРайоныСкладов КАК новаОбслуживаемыеРайоныСкладов
	|			ПО новаРайоныАдресов.Район = новаОбслуживаемыеРайоныСкладов.ГеоРайон
	|		ПО новаТочкиДоставки.Адрес = новаРайоныАдресов.Адрес
	|ГДЕ
	|	НЕ новаТочкиДоставки.ПометкаУдаления
	|	И НЕ новаТочкиДоставки.ВладелецТочки.ПометкаУдаления
	|	И новаТочкиДоставки.ВладелецТочки ССЫЛКА Справочник.новаКонтрагенты
	|	И новаТочкиДоставки.РежимПосещения <> ЗНАЧЕНИЕ(Справочник.новаРежимыПосещенияТочекДоставки.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	новаТочкиДоставки.Ссылка,
	|	новаТочкиДоставки.РежимПосещения,
	|	ЕСТЬNULL(новаРайоныАдресов.Район, НЕОПРЕДЕЛЕНО),
	|	новаТочкиДоставки.ВладелецТочки
	|ИТОГИ
	|	МАКСИМУМ(РежимПосещения),
	|	МАКСИМУМ(Склад),
	|	МАКСИМУМ(ТочкаДоставкиСклада),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СкладСчетчик),
	|	МАКСИМУМ(ВладелецТочки)
	|ПО
	|	ТочкаДоставки";
	    		
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если Индикатор <> Неопределено Тогда
		Индикатор.МинимальноеЗначение = 0;
		Индикатор.МаксимальноеЗначение = Выборка.Количество() - 1; 
	КонецЕсли;
	
	соДатыРежимовПосещения = Новый Соответствие;
	
	ъ = 0;
	ЗаписаноДоставок = 0;
	Пока Выборка.Следующий() Цикл
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
		#КонецЕсли
		Отказ = Ложь;
		
		Если Индикатор <> Неопределено Тогда
			Индикатор.Значение = ъ;
			ъ = ъ + 1;
		КонецЕсли;                                           
		
		соДаты = соДатыРежимовПосещения[Выборка.РежимПосещения];
		Если соДаты = Неопределено Тогда
			обРежимПосещения = Выборка.РежимПосещения.ПолучитьОбъект();
			соДаты = обРежимПосещения.ПолучитьДниПосещения(ДатаФормирования, соПраздники);
			соДатыРежимовПосещения.Вставить(Выборка.РежимПосещения, соДаты);
		КонецЕсли;
		
		стОкно = соДаты[ДатаФормирования];
		Если стОкно = Неопределено Тогда Продолжить; КонецЕсли;
		
		Если ЗначениеЗаполнено(стОкно.ВремяНачала) Тогда
			ВремяПрибытияС = стОкно.ВремяНачала;
		Иначе
			ВремяПрибытияС = Выборка.ТочкаДоставки.ВремяРаботыНачало;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(стОкно.ВремяОкончания) Тогда
			ВремяПрибытияПо = стОкно.ВремяОкончания;
		Иначе
			ВремяПрибытияПо = Выборка.ТочкаДоставки.ВремяРаботыОкончание;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(стОкно.ВремяПребывания) Тогда
			ВремяПребыванияГрузополучателя = стОкно.ВремяПребывания;
		Иначе
			ВремяПребыванияГрузополучателя = Выборка.ТочкаДоставки.ВремяПребывания;
		КонецЕсли;
		
		НачатьТранзакцию();
		обГруз = Документы.новаГруз.СоздатьДокумент();
		обГруз.Дата = ДатаФормирования;
		
		Для Каждого стрТовар Из Выборка.ТочкаДоставки.ОбъемВывоза Цикл
			стрСпецификация = обГруз.Спецификация.Добавить();
			стрСпецификация.Артикул = стрТовар.Товар.Код;
			стрСпецификация.Товар = стрТовар.Товар;
			
			Если стрТовар.ЕдиницаИзмерения.Владелец = стрТовар.Товар Тогда
				стрСпецификация.ЕдиницаИзмерения = стрТовар.ЕдиницаИзмерения;
			Иначе
				стрСпецификация.ЕдиницаИзмерения = Справочники.новаЕдиницыНоменклатуры.НайтиПоНаименованию("шт",,, стрТовар.Товар);
			КонецЕсли;
			
			стрСпецификация.Количество = стрТовар.Количество;
			стрСпецификация.Объем = стрСпецификация.ЕдиницаИзмерения.Объем * стрТовар.Количество;
			стрСпецификация.Вес = стрСпецификация.ЕдиницаИзмерения.Вес * стрТовар.Количество;
		КонецЦикла;
		
		обГруз.Вес = обГруз.Спецификация.Итог("Вес");
		обГруз.Объем = обГруз.Спецификация.Итог("Объем");
		обГруз.Записать(РежимЗаписиДокумента.Проведение);
		
		обДоставка = БизнесПроцессы.новаМестнаяДоставка.СоздатьБизнесПроцесс();
		обДоставка.Дата = ДатаФормирования;
		обДоставка.Груз = обГруз.Ссылка;
		Если Грузополучатель = "Контрагент" Тогда
			обДоставка.Грузополучатель = Выборка.ВладелецТочки;
			обДоставка.ТочкаПрибытия = Выборка.ТочкаДоставки;
		ИначеЕсли Грузополучатель = "СкладПоРайону" Тогда
			
			Если Выборка.СкладСчетчик > 1 Тогда
				
				ВыборкаРайоны = Выборка.Выбрать();
				ТекстСообщения = "Не удалось определить грузополучателя для точки: " + Выборка.ТочкаДоставки + " - обнаружено пересечение районов (";
				Пока ВыборкаРайоны.Следующий() Цикл
					ТекстСообщения = ТекстСообщения + ВыборкаРайоны.Район + ", ";
				КонецЦикла;
				Если Прав(ТекстСообщения, 2) = ", " Тогда
					ТекстСообщения = Лев(ТекстСообщения, СтрДлина(ТекстСообщения) - 2);
				КонецЕсли;
				ТекстСообщения = ТекстСообщения + ")";							
				
				Сообщить(ТекстСообщения);
				Отказ = Истина;
				
			Иначе
				
				обДоставка.Грузополучатель = Выборка.Склад;
				обДоставка.ТочкаПрибытия = Выборка.ТочкаДоставкиСклада;
				Если обДоставка.Грузополучатель = Неопределено Тогда
					Сообщить("Не удалось определить грузополучателя для точки: " + Выборка.ТочкаДоставки);
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли Грузополучатель = "Склад" Тогда
			обДоставка.Грузополучатель = СкладГрузополучатель;
			обДоставка.ТочкаПрибытия = СкладГрузополучатель.ТочкаДоставки;
		КонецЕсли;
		Если Грузоотправитель = "Контрагент" Тогда
			обДоставка.Грузоотправитель = Выборка.ВладелецТочки;
			обДоставка.ТочкаОтправления = Выборка.ТочкаДоставки;
		ИначеЕсли Грузоотправитель = "СкладПоРайону" Тогда
			
			Если Выборка.СкладСчетчик > 1 Тогда
				
				ВыборкаРайоны = Выборка.Выбрать();
				ТекстСообщения = "Не удалось определить грузоотправителя для точки: " + Выборка.ТочкаДоставки + " - обнаружено пересечение районов (";
				Пока ВыборкаРайоны.Следующий() Цикл
					ТекстСообщения = ТекстСообщения + ВыборкаРайоны.Район + ", ";
				КонецЦикла;
				Если Прав(ТекстСообщения, 2) = ", " Тогда
					ТекстСообщения = Лев(ТекстСообщения, СтрДлина(ТекстСообщения) - 2);
				КонецЕсли;
				ТекстСообщения = ТекстСообщения + ")";							
				
				Сообщить(ТекстСообщения);
				Отказ = Истина;
				
			Иначе
				
				обДоставка.Грузоотправитель = Выборка.Склад;
				обДоставка.ТочкаОтправления = Выборка.ТочкаДоставкиСклада;
				Если обДоставка.Грузоотправитель = Неопределено Тогда
					Сообщить("Не удалось определить грузоотправителя для точки: " + Выборка.ТочкаДоставки);
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
			
			
		ИначеЕсли Грузоотправитель = "Склад" Тогда
			обДоставка.Грузоотправитель = Склад;
			обДоставка.ТочкаОтправления = Склад.ТочкаДоставки;
		КонецЕсли;
		
		обДоставка.ВремяОтправленияС = ДатаФормирования + (обДоставка.ТочкаОтправления.ВремяРаботыНачало - '00010101');
		обДоставка.ВремяОтправленияПо = ДатаФормирования + (обДоставка.ТочкаОтправления.ВремяРаботыОкончание - '00010101');
		обДоставка.ВремяПребыванияГрузоотправителя = обДоставка.ТочкаОтправления.ВремяПребывания;
		обДоставка.ВремяПрибытияС = ДатаФормирования + (ВремяПрибытияС - '00010101');
		обДоставка.ВремяПрибытияПо = ДатаФормирования + (ВремяПрибытияПо - '00010101');
		обДоставка.ВремяПребыванияГрузополучателя = ВремяПребыванияГрузополучателя;
		
		Для Каждого стрКатегория Из Выборка.ТочкаДоставки.КатегорииТранспорта Цикл
			ЗаполнитьЗначенияСвойств(обДоставка.КатегорииТранспорта.Добавить(), стрКатегория);
		КонецЦикла;
		обДоставка.КоличествоВыбранныхКатегорий = Выборка.ТочкаДоставки.КоличествоВыбранныхКатегорий;
		
		Если НЕ Отказ Тогда
			обДоставка.Записать();
			обДоставка.Старт();
			ЗаписаноДоставок = ЗаписаноДоставок + 1;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	КонецЦикла;
	
	Сообщить("Создано " + ЗаписаноДоставок + " доставок");
КонецПроцедуры          