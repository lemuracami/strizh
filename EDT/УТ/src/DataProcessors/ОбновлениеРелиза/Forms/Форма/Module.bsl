&НаКлиенте
Процедура ВыполнитьОбновление() Экспорт 

	ВыполнитьОбновлениеНаСервере(Объект.ПоследняяДатаОбработчика, Объект.ПоследняяДатаОбновленияКонфигурации);
	ПодключитьОбработчикОжидания("ОбработатьОжиданияЗавершенияФоновыхНаКлиенте", 1);

КонецПроцедуры

&НаСервере
Процедура ВыполнитьОбновлениеНаСервере(ПоследняяДатаОбработчика, ПоследняяДатаОбновленияКонфигурации) Экспорт 
	
	НаборПараметров = Новый Массив;
	
	МассивОбработчиков = Новый Массив;
	
	Для Каждого Строка Из Объект.Обработчики Цикл 
		
		Если Строка.Галка Тогда 
			МассивОбработчиков.Добавить(Строка.Обработчик);
		КонецЕсли;	
		
	КонецЦикла;	
	
	НаборПараметров.Добавить(ПоследняяДатаОбработчика);
	НаборПараметров.Добавить(ПоследняяДатаОбновленияКонфигурации);
	НаборПараметров.Добавить(Ложь);
	НаборПараметров.Добавить(МассивОбработчиков);
	
	Задание = ФоновыеЗадания.Выполнить("ОбновлениеРелиза.ВыполнитьОбновлениеРелизаВФоне", НаборПараметров, "ОбновлениеРелиза.ВыполнитьОбновлениеРелизаВФоне", "ОбновлениеРелиза.ВыполнитьОбновлениеРелизаВФоне");
	
	ГУИД = Задание.УникальныйИдентификатор;
		
КонецПроцедуры	

&НаКлиенте
Процедура ОбработатьОжиданияЗавершенияФоновыхНаКлиенте() Экспорт 
	
	МассивВозврата = ОбработатьЗавершенныеЗадания(ГУИД);          
	
	Для Каждого Элемент Из МассивВозврата Цикл 
		
		СтруктураВозврата = Элемент;
		
		Если СтруктураВозврата.Свойство("Прогресс") Тогда
			
			Прогресс = СтруктураВозврата.Прогресс;
			
		ИначеЕсли СтруктураВозврата.Свойство("Обработчик") Тогда
			
			Обработчик = СтруктураВозврата.Обработчик;   
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = Обработчик;
			СообщениеПользователю.Сообщить();

			
		ИначеЕсли СтруктураВозврата.Свойство("Ошибка") Тогда
			
			Ошибка = СтруктураВозврата.Ошибка; 	
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = Ошибка;
			СообщениеПользователю.Сообщить();
			
		ИначеЕсли СтруктураВозврата.Свойство("ОбновлениеЗавершено") Тогда

			Обработчик = "Обновление завершено";
			Прогресс = 100;
			ОтключитьОбработчикОжидания("ОбработатьОжиданияЗавершенияФоновыхНаКлиенте");
			
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ОбработатьЗавершенныеЗадания(ГУИД)
	
	   	МассивВозврата = Новый Массив;
		
		
		Отбор = Новый Структура;
		Отбор.Вставить("УникальныйИдентификатор", Новый УникальныйИдентификатор(ГУИД));
		
		ФоновоеЗадание = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
		
		//На всякий случай
		Если ФоновоеЗадание = Неопределено Тогда
						
			Возврат МассивВозврата.Добавить(Новый Структура);
			
		КонецЕсли;
		
		ФоновоеЗадание = ФоновоеЗадание[0];

		
		Если ФоновоеЗадание.Состояние <> СостояниеФоновогоЗадания.Активно И ФоновоеЗадание.Состояние <> СостояниеФоновогоЗадания.Завершено Тогда
			
			СтруктураВозврата = Новый Структура;
			СтруктураВозврата.Вставить("Состояние", ФоновоеЗадание.Состояние);

		КонецЕсли;	
		
		МассивСообщений = ФоновоеЗадание.ПолучитьСообщенияПользователю(Истина);
		
		Если МассивСообщений = Неопределено Тогда
			
			Возврат МассивВозврата.Добавить(Новый Структура);
			
		КонецЕсли;
		
		Количество = МассивСообщений.Количество();
		
		Для Каждого Сообщение Из МассивСообщений Цикл 
			
			СтруктураВозврата = Новый Структура;

			Если Сообщение.Текст = "" Тогда
				
			ИначеЕсли СтрНайти(Сообщение.Текст,"Прогресс") > 0 Тогда
				
				Прогресс =  Число(СтрЗаменить(Сообщение.Текст, "Прогресс" + Символы.ПС, ""));
				
				СтруктураВозврата.Вставить("Прогресс", Прогресс);
				
			ИначеЕсли СтрНайти(Сообщение.Текст,"Обработчик") > 0 Тогда
				
				Обработчик =  (СтрЗаменить(Сообщение.Текст, "Обработчик" + Символы.ПС, ""));
				
				СтруктураВозврата.Вставить("Обработчик", Обработчик);
				
			ИначеЕсли СтрНайти(Сообщение.Текст,"Ошибка") > 0 Тогда
				
				Ошибка =  (СтрЗаменить(Сообщение.Текст, "Ошибка" + Символы.ПС, ""));
				
				СтруктураВозврата.Вставить("Ошибка", Ошибка);
				
			ИначеЕсли СтрНайти(Сообщение.Текст,"ОбновлениеЗавершено") > 0 Тогда
				
				СтруктураВозврата.Вставить("ОбновлениеЗавершено", Истина);
	
					
			Иначе 
				
				//Сообщение.Сообщить();
				
			КонецЕсли;	
			
			МассивВозврата.Добавить(СтруктураВозврата);
			
		КонецЦикла;	
		
		Возврат МассивВозврата;

КонецФункции







