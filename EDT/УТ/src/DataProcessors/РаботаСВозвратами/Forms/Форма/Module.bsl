
Процедура ЗаполнитьВозвратыНаСервере(ТекТерминал = Неопределено)
		
	ТекВр = ТекущаяДата();
	
	//Если НЕ УбогиеЗаказы Тогда
		
	//	//Запрос = Новый Запрос("ВЫБРАТЬ
	//	//                      |	СтатусыСкладскогоУчета.Период КАК Период,
	//	//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ
	//	//                      |ПОМЕСТИТЬ ВТ_РегЗаписи
	//	//                      |ИЗ
	//	//                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//	//                      |ГДЕ
	//	//                      |	СтатусыСкладскогоУчета.Период >= &ДатаНач
	//	//                      |;
	//	//                      |
	//	//                      |////////////////////////////////////////////////////////////////////////////////
	//	//                      |ВЫБРАТЬ
	//	//                      |	ВТ_РегЗаписи.Заказ КАК Заказ,
	//	//                      |	МАКСИМУМ(ВТ_РегЗаписи.Период) КАК Период
	//	//                      |ПОМЕСТИТЬ ВТ_срез
	//	//                      |ИЗ
	//	//                      |	ВТ_РегЗаписи КАК ВТ_РегЗаписи
	//	//                      |
	//	//                      |СГРУППИРОВАТЬ ПО
	//	//                      |	ВТ_РегЗаписи.Заказ
	//	//                      |
	//	//                      |ИНДЕКСИРОВАТЬ ПО
	//	//                      |	Заказ,
	//	//                      |	Период
	//	//                      |;
	//	//                      |
	//	//                      |////////////////////////////////////////////////////////////////////////////////
	//	//                      |ВЫБРАТЬ
	//	//                      |	ВТ_срез.Заказ КАК Заказ,
	//	//                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета
	//	//                      |ПОМЕСТИТЬ ВТ_Статусы
	//	//                      |ИЗ
	//	//                      |	ВТ_срез КАК ВТ_срез
	//	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//	//                      |		ПО ВТ_срез.Заказ = СтатусыСкладскогоУчета.Заказ
	//	//                      |			И ВТ_срез.Период = СтатусыСкладскогоУчета.Период
	//	//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	//                      |		ПО (ВТ_срез.Заказ.Ссылка = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	//	//                      |ГДЕ
	//	//                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//	//                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	//	//                      |
	//	//                      |СГРУППИРОВАТЬ ПО
	//	//                      |	ВТ_срез.Заказ,
	//	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//	//                      |	СтатусыСкладскогоУчета.ТипЗаказа
	//	//                      |;
	//	//                      |
	//	//                      |////////////////////////////////////////////////////////////////////////////////
	//	//                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
	//	//                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
	//	//                      |	ДополнительныеПараметрыЗаказа.СкладМагазина КАК СкладВозврата,
	//	//                      |	1 КАК Кол,
	//	//                      |	ВЫБОР
	//	//                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//	//                      |			ТОГДА 1
	//	//                      |		ИНАЧЕ 0
	//	//                      |	КОНЕЦ КАК НеВскрытые,
	//	//                      |	ВЫБОР
	//	//                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2)
	//	//                      |			ТОГДА 1
	//	//                      |		ИНАЧЕ 0
	//	//                      |	КОНЕЦ КАК Вскрытые,
	//	//                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема КАК Регион
	//	//                      |ПОМЕСТИТЬ ВТ_Итоги
	//	//                      |ИЗ
	//	//                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//	//                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	//                      |		ПО (СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	//	//                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//	//                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод)
	//	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//	//                      |ГДЕ
	//	//                      |	(СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 3
	//	//                      |			ИЛИ СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 4)
	//	//                      |;
	//	//                      |
	//	//                      |////////////////////////////////////////////////////////////////////////////////
	//	//                      |ВЫБРАТЬ
	//	//                      |	ВТ_Итоги.Регион КАК Регион,
	//	//                      |	ВТ_Итоги.Контрагент КАК Партнер,
	//	//                      |	ВТ_Итоги.СкладВозврата КАК СкладВозвратаПартнера,
	//	//                      |	СУММА(ВТ_Итоги.Кол) КАК ЗаказовКВозврату,
	//	//                      |	СУММА(ВТ_Итоги.Вскрытые) КАК Вскрытые,
	//	//                      |	СУММА(ВТ_Итоги.НеВскрытые) КАК НеВскрытые,
	//	//                      |	ВТ_Итоги.СкладВозврата.ОграниченияПоВозвратам КАК Ограничения,
	//	//                      |	ВТ_Итоги.СкладВозврата.ГрафикРаботы КАК График
	//	//                      |ИЗ
	//	//                      |	ВТ_Итоги КАК ВТ_Итоги
	//	//                      |ГДЕ
	//	//                      |	ВЫБОР
	//	//                      |			КОГДА ВТ_Итоги.Заказ.ТерминалДоставки <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	//	//                      |					И ВТ_Итоги.Заказ.ТерминалПриема <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	//	//                      |					И ВТ_Итоги.Заказ.ТерминалДоставки <> ВТ_Итоги.Заказ.ТерминалПриема
	//	//                      |				ТОГДА ИСТИНА
	//	//                      |			ИНАЧЕ ВТ_Итоги.Регион = &Терминал
	//	//                      |		КОНЕЦ
	//	//                      |
	//	//                      |СГРУППИРОВАТЬ ПО
	//	//                      |	ВТ_Итоги.Регион,
	//	//                      |	ВТ_Итоги.Контрагент,
	//	//                      |	ВТ_Итоги.СкладВозврата,
	//	//                      |	ВТ_Итоги.СкладВозврата.ОграниченияПоВозвратам,
	//	//                      |	ВТ_Итоги.СкладВозврата.ГрафикРаботы");
	//	//	
	//	//ТипыЗагрузки = Новый СписокЗначений;
	//	//ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFi);
	//	//ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute);
	//	//ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом);
	//	//Запрос.УстановитьПараметр("ТипЗагрузкиТСД", ТипыЗагрузки);	
	//	//Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-3));
	//	//Запрос.УстановитьПараметр("Терминал", ТекТерминал);
	//	//
	//	//РезТЗ = Запрос.Выполнить().Выгрузить();
	//	
	//	
	//	
	//	
	//	
	//	
	//	Запрос = Новый Запрос("ВЫБРАТЬ
	//	                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//	                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	//	                      |	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период
	//	                      |ПОМЕСТИТЬ ВТ_СтатусыВсе
	//	                      |ИЗ
	//	                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//	                      |ГДЕ
	//	                      |	СтатусыСкладскогоУчета.Период >= &ДатаНач
	//	                      |
	//	                      |СГРУППИРОВАТЬ ПО
	//	                      |	СтатусыСкладскогоУчета.Заказ,
	//	                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета
	//	                      |
	//	                      |ИНДЕКСИРОВАТЬ ПО
	//	                      |	Заказ
	//	                      |;
	//	                      |
	//	                      |////////////////////////////////////////////////////////////////////////////////
	//	                      |ВЫБРАТЬ
	//	                      |	ВТ_СтатусыВсе.Заказ КАК Заказ
	//	                      |ПОМЕСТИТЬ ВТ_ЗаказыМимо
	//	                      |ИЗ
	//	                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
	//	                      |ГДЕ
	//	                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета В(&СтатусыМинус)
	//	                      |
	//	                      |ИНДЕКСИРОВАТЬ ПО
	//	                      |	Заказ
	//	                      |;
	//	                      |
	//	                      |////////////////////////////////////////////////////////////////////////////////
	//	                      |ВЫБРАТЬ
	//	                      |	ВТ_СтатусыВсе.Заказ КАК Заказ,
	//	                      |	МАКСИМУМ(ВТ_СтатусыВсе.Период) КАК Период,
	//	                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета
	//	                      |ПОМЕСТИТЬ ВТ_СписокЗаказов
	//	                      |ИЗ
	//	                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе,
	//	                      |	ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо
	//	                      |ГДЕ
	//	                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
	//	                      |	И НЕ ВТ_СтатусыВсе.Заказ В
	//	                      |				(ВЫБРАТЬ
	//	                      |					ВТ_ЗаказыМимо.Заказ
	//	                      |				ИЗ
	//	                      |					ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо)
	//	                      |
	//	                      |СГРУППИРОВАТЬ ПО
	//	                      |	ВТ_СтатусыВсе.Заказ,
	//	                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета
	//	                      |
	//	                      |ИНДЕКСИРОВАТЬ ПО
	//	                      |	Заказ,
	//	                      |	Период
	//	                      |;
	//	                      |
	//	                      |////////////////////////////////////////////////////////////////////////////////
	//	                      |ВЫБРАТЬ
	//	                      |	ВТ_СписокЗаказов.Заказ КАК Заказ,
	//	                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//	                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета
	//	                      |ПОМЕСТИТЬ ВТ_Статусы
	//	                      |ИЗ
	//	                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
	//	                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//	                      |			ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
	//	                      |				И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
	//	                      |		ПО (ВТ_СписокЗаказов.Заказ = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	//	                      |ГДЕ
	//	                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//	                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	//	                      |
	//	                      |СГРУППИРОВАТЬ ПО
	//	                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//	                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//	                      |	ВТ_СписокЗаказов.Заказ
	//	                      |;
	//	                      |
	//	                      |////////////////////////////////////////////////////////////////////////////////
	//	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//	                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
	//	                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
	//	                      |	ДополнительныеПараметрыЗаказа.СкладМагазина КАК СкладВозврата,
	//	                      |	1 КАК Кол,
	//	                      |	ВЫБОР
	//	                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//	                      |			ТОГДА 1
	//	                      |		ИНАЧЕ 0
	//	                      |	КОНЕЦ КАК НеВскрытые,
	//	                      |	ВЫБОР
	//	                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2)
	//	                      |			ТОГДА 1
	//	                      |		ИНАЧЕ 0
	//	                      |	КОНЕЦ КАК Вскрытые,
	//	                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема КАК Регион
	//	                      |ПОМЕСТИТЬ ВТ_Итоги
	//	                      |ИЗ
	//	                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//	                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	                      |		ПО (СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	//	                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//	                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод)
	//	                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//	                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//	                      |ГДЕ
	//	                      |	(СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 3
	//	                      |			ИЛИ СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 4)
	//	                      |;
	//	                      |
	//	                      |////////////////////////////////////////////////////////////////////////////////
	//	                      |ВЫБРАТЬ
	//	                      |	ВТ_Итоги.Регион КАК Регион,
	//	                      |	ВТ_Итоги.Контрагент КАК Партнер,
	//	                      |	ВТ_Итоги.СкладВозврата КАК СкладВозвратаПартнера,
	//	                      |	СУММА(ВТ_Итоги.Кол) КАК ЗаказовКВозврату,
	//	                      |	СУММА(ВТ_Итоги.Вскрытые) КАК Вскрытые,
	//	                      |	СУММА(ВТ_Итоги.НеВскрытые) КАК НеВскрытые,
	//	                      |	ВТ_Итоги.СкладВозврата.ОграниченияПоВозвратам КАК Ограничения,
	//	                      |	ВТ_Итоги.СкладВозврата.ГрафикРаботы КАК График
	//	                      |ИЗ
	//	                      |	ВТ_Итоги КАК ВТ_Итоги
	//	                      |ГДЕ
	//	                      |	ВЫБОР
	//	                      |			КОГДА ВТ_Итоги.Заказ.ТерминалДоставки <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	//	                      |					И ВТ_Итоги.Заказ.ТерминалПриема <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	//	                      |					И ВТ_Итоги.Заказ.ТерминалДоставки <> ВТ_Итоги.Заказ.ТерминалПриема
	//	                      |				ТОГДА ИСТИНА
	//	                      |			ИНАЧЕ ВТ_Итоги.Регион = &Терминал
	//	                      |		КОНЕЦ
	//	                      |
	//	                      |СГРУППИРОВАТЬ ПО
	//	                      |	ВТ_Итоги.Регион,
	//	                      |	ВТ_Итоги.Контрагент,
	//	                      |	ВТ_Итоги.СкладВозврата,
	//	                      |	ВТ_Итоги.СкладВозврата.ОграниченияПоВозвратам,
	//	                      |	ВТ_Итоги.СкладВозврата.ГрафикРаботы");
	//		
	//	ТипыЗагрузки = Новый СписокЗначений;
	//    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFi);
	//    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute);
	//	ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом);
	//    Запрос.УстановитьПараметр("ТипЗагрузкиТСД", ТипыЗагрузки);	
	//	Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-3));
	//	Запрос.УстановитьПараметр("Терминал", ТекТерминал);
	//	СтатусыМинус = новый Массив;
	//	СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратОтправлен"));
	//	СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином"));
	//	СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ПодготовленКВозврату"));
	//	Запрос.УстановитьПараметр("СтатусыМинус", СтатусыМинус);
	//	ВозвратныеСтатусы = новый Массив;
	//	ВозвратныеСтатусы.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат1"));
	//	ВозвратныеСтатусы.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат2"));
	//	Запрос.УстановитьПараметр("ВозвратныеСтатусы", ВозвратныеСтатусы);
	//	
	//	РезТЗ = Запрос.Выполнить().Выгрузить();
	//	
	//
	//Иначе
	
	
	
		//// закомментил 15.03.2018
		//Запрос = Новый Запрос("ВЫБРАТЬ
		//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
		//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
		//                      |	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период
		//                      |ПОМЕСТИТЬ ВТ_СтатусыВсе
		//                      |ИЗ
		//                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
		//                      |ГДЕ
		//                      |	СтатусыСкладскогоУчета.Период >= &ДатаНач
		//                      |
		//                      |СГРУППИРОВАТЬ ПО
		//                      |	СтатусыСкладскогоУчета.Заказ,
		//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета
		//                      |
		//                      |ИНДЕКСИРОВАТЬ ПО
		//                      |	Заказ
		//                      |;
		//                      |
		//                      |////////////////////////////////////////////////////////////////////////////////
		//                      |ВЫБРАТЬ
		//                      |	ВТ_СтатусыВсе.Заказ КАК Заказ
		//                      |ПОМЕСТИТЬ ВТ_ЗаказыМимо
		//                      |ИЗ
		//                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
		//                      |ГДЕ
		//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета В(&СтатусыМинус)
		//                      |
		//                      |ИНДЕКСИРОВАТЬ ПО
		//                      |	Заказ
		//                      |;
		//                      |
		//                      |////////////////////////////////////////////////////////////////////////////////
		//                      |ВЫБРАТЬ
		//                      |	ВТ_СтатусыВсе.Заказ КАК Заказ,
		//                      |	МАКСИМУМ(ВТ_СтатусыВсе.Период) КАК Период,
		//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
		//                      |	МАКСИМУМ(ВЫБОР
		//                      |			КОГДА ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.УчетЗаказовПоМестам, ЛОЖЬ)
		//                      |					И МестаПоЗаказам.Ссылка ЕСТЬ NULL
		//                      |				ТОГДА ИСТИНА
		//                      |			ИНАЧЕ ЛОЖЬ
		//                      |		КОНЕЦ) КАК УбогийЗаказ
		//                      |ПОМЕСТИТЬ ВТ_СписокЗаказов
		//                      |ИЗ
		//                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
		//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
		//                      |		ПО ВТ_СтатусыВсе.Заказ = МестаПоЗаказам.Заказ
		//                      |			И (МестаПоЗаказам.ПометкаУдаления = ЛОЖЬ)
		//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних КАК ПараметрыКонтрагентовСрезПоследних
		//                      |		ПО ВТ_СтатусыВсе.Заказ.ВладелецТовара = ПараметрыКонтрагентовСрезПоследних.Контрагент,
		//                      |	ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо
		//                      |ГДЕ
		//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
		//                      |	И НЕ ВТ_СтатусыВсе.Заказ В
		//                      |				(ВЫБРАТЬ
		//                      |					ВТ_ЗаказыМимо.Заказ
		//                      |				ИЗ
		//                      |					ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо)
		//                      |
		//                      |СГРУППИРОВАТЬ ПО
		//                      |	ВТ_СтатусыВсе.Заказ,
		//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета
		//                      |
		//                      |ИНДЕКСИРОВАТЬ ПО
		//                      |	Заказ,
		//                      |	Период
		//                      |;
		//                      |
		//                      |////////////////////////////////////////////////////////////////////////////////
		//                      |ВЫБРАТЬ
		//                      |	ВТ_СписокЗаказов.Заказ КАК Заказ,
		//                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
		//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
		//                      |	ВТ_СписокЗаказов.УбогийЗаказ КАК УбогийЗаказ
		//                      |ПОМЕСТИТЬ ВТ_Статусы
		//                      |ИЗ
		//                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
		//                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
		//                      |			ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
		//                      |				И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
		//                      |		ПО (ВТ_СписокЗаказов.Заказ = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
		//                      |ГДЕ
		//                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
		//                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
		//                      |
		//                      |СГРУППИРОВАТЬ ПО
		//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
		//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
		//                      |	ВТ_СписокЗаказов.Заказ,
		//                      |	ВТ_СписокЗаказов.УбогийЗаказ
		//                      |;
		//                      |
		//                      |////////////////////////////////////////////////////////////////////////////////
		//                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
		//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
		//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
		//                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
		//                      |	ВЫБОР
		//                      |		КОГДА ДополнительныеПараметрыЗаказа.СкладМагазина ЕСТЬ NULL
		//                      |				ИЛИ ДополнительныеПараметрыЗаказа.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
		//                      |			ТОГДА ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
		//                      |		ИНАЧЕ ДополнительныеПараметрыЗаказа.СкладМагазина
		//                      |	КОНЕЦ КАК СкладВозврата,
		//                      |	1 КАК Кол,
		//                      |	ВЫБОР
		//                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
		//                      |			ТОГДА 1
		//                      |		ИНАЧЕ 0
		//                      |	КОНЕЦ КАК НеВскрытые,
		//                      |	ВЫБОР
		//                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2)
		//                      |			ТОГДА 1
		//                      |		ИНАЧЕ 0
		//                      |	КОНЕЦ КАК Вскрытые,
		//                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема КАК Регион,
		//                      |	СтатусыСкладскогоУчета.УбогийЗаказ КАК УбогийЗаказ
		//                      |ПОМЕСТИТЬ ВТ_Итоги
		//                      |ИЗ
		//                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
		//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
		//                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
		//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		//                      |		ПО (СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
		//                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
		//                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод)
		//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
		//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
		//					  //// МАС - 12.03.2018 - № --->> 
		//					  //|ГДЕ
		//					  //|	(СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 3
		//					  //|			ИЛИ СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 4)
		//					  //// <<--- МАС
		//                      |;
		//                      |
		//                      |////////////////////////////////////////////////////////////////////////////////
		//                      |ВЫБРАТЬ
		//                      |	ВТ_Итоги.Регион КАК Регион,
		//                      |	ВЫБОР
		//                      |		КОГДА НЕ ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин ЕСТЬ NULL
		//                      |				И ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		//                      |			ТОГДА ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин
		//                      |		ИНАЧЕ ВТ_Итоги.Контрагент
		//                      |	КОНЕЦ КАК Партнер,
		//                      |	ВТ_Итоги.СкладВозврата КАК СкладВозвратаПартнера,
		//                      |	СУММА(ВТ_Итоги.Кол) КАК ЗаказовКВозврату,
		//                      |	СУММА(ВТ_Итоги.Вскрытые) КАК Вскрытые,
		//                      |	СУММА(ВТ_Итоги.НеВскрытые) КАК НеВскрытые,
		//                      |	ВТ_Итоги.СкладВозврата.ОграниченияПоВозвратам КАК Ограничения,
		//                      |	ВТ_Итоги.СкладВозврата.ГрафикРаботы КАК График,
		//                      |	ВТ_Итоги.УбогийЗаказ КАК Убогие
		//                      |ИЗ
		//                      |	ВТ_Итоги КАК ВТ_Итоги
		//                      |ГДЕ
		//                      |	ВЫБОР
		//                      |			КОГДА ВТ_Итоги.Заказ.ТерминалДоставки <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
		//                      |					И ВТ_Итоги.Заказ.ТерминалПриема <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
		//                      |					И ВТ_Итоги.Заказ.ТерминалДоставки <> ВТ_Итоги.Заказ.ТерминалПриема
		//                      |				ТОГДА ИСТИНА
		//                      |			ИНАЧЕ ВТ_Итоги.Регион = &Терминал
		//                      |		КОНЕЦ
		//                      |	И НЕ ВТ_Итоги.Контрагент В (&КонтрагентыИсключения)
		//                      |
		//                      |СГРУППИРОВАТЬ ПО
		//                      |	ВТ_Итоги.Регион,
		//                      |	ВТ_Итоги.СкладВозврата.ОграниченияПоВозвратам,
		//                      |	ВТ_Итоги.СкладВозврата.ГрафикРаботы,
		//                      |	ВТ_Итоги.УбогийЗаказ,
		//                      |	ВТ_Итоги.СкладВозврата,
		//                      |	ВЫБОР
		//                      |		КОГДА НЕ ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин ЕСТЬ NULL
		//                      |				И ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		//                      |			ТОГДА ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин
		//                      |		ИНАЧЕ ВТ_Итоги.Контрагент
		//                      |	КОНЕЦ
		//                      |
		//                      |УПОРЯДОЧИТЬ ПО
		//                      |	Регион,
		//                      |	Партнер,
		//                      |	СкладВозвратаПартнера");
							  
							  
		// с учетом обменных/возвратных заказов					  
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
		                      |	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период
		                      |ПОМЕСТИТЬ ВТ_СтатусыКрайние
		                      |ИЗ
		                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
		                      |ГДЕ
		                      |	СтатусыСкладскогоУчета.Период >= &ДатаНач
		                      |	И СтатусыСкладскогоУчета.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	СтатусыСкладскогоУчета.Заказ
		                      |
		                      |ИНДЕКСИРОВАТЬ ПО
		                      |	Заказ
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
		                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
		                      |	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период,
		                      |	ВЫБОР
		                      |		КОГДА СтатусыЗаказов.Период ЕСТЬ NULL
		                      |			ТОГДА ЛОЖЬ
		                      |		ИНАЧЕ ИСТИНА
		                      |	КОНЕЦ КАК Выполнен
		                      |ПОМЕСТИТЬ ВТ_СтатусыВсе
		                      |ИЗ
		                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
		                      |		ПО СтатусыСкладскогоУчета.Заказ = СтатусыЗаказов.Заказ
		                      |			И (СтатусыЗаказов.Статус = 301)
		                      |			И (СтатусыСкладскогоУчета.СтатусСкладскогоУчета В (&ВозвратныеСтатусы))
		                      |			И (НЕ СтатусыСкладскогоУчета.ТипЗаказа В (&ВозвратыОбмены))
		                      |ГДЕ
		                      |	СтатусыСкладскогоУчета.Период >= &ДатаНач
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	СтатусыСкладскогоУчета.Заказ,
		                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
		                      |	ВЫБОР
		                      |		КОГДА СтатусыЗаказов.Период ЕСТЬ NULL
		                      |			ТОГДА ЛОЖЬ
		                      |		ИНАЧЕ ИСТИНА
		                      |	КОНЕЦ
		                      |
		                      |ИНДЕКСИРОВАТЬ ПО
		                      |	Заказ
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВТ_СтатусыВсе.Заказ КАК Заказ
		                      |ПОМЕСТИТЬ ВТ_ЗаказыМимо
		                      |ИЗ
		                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
		                      |ГДЕ
		                      |	(ВТ_СтатусыВсе.СтатусСкладскогоУчета В (&СтатусыМинус)
		                      |			ИЛИ ВТ_СтатусыВсе.Выполнен = ИСТИНА)
		                      |
		                      |ИНДЕКСИРОВАТЬ ПО
		                      |	Заказ
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВТ_СтатусыВсе.Заказ КАК Заказ,
		                      |	МАКСИМУМ(ВТ_СтатусыВсе.Период) КАК Период,
		                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
		                      |	МАКСИМУМ(ВЫБОР
		                      |			КОГДА ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.УчетЗаказовПоМестам, ЛОЖЬ)
		                      |					И МестаПоЗаказам.Ссылка ЕСТЬ NULL
		                      |				ТОГДА ИСТИНА
		                      |			ИНАЧЕ ЛОЖЬ
		                      |		КОНЕЦ) КАК УбогийЗаказ
		                      |ПОМЕСТИТЬ ВТ_СписокЗаказов
		                      |ИЗ
		                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
		                      |		ПО ВТ_СтатусыВсе.Заказ = МестаПоЗаказам.Заказ
		                      |			И (МестаПоЗаказам.ПометкаУдаления = ЛОЖЬ)
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних КАК ПараметрыКонтрагентовСрезПоследних
		                      |		ПО ВТ_СтатусыВсе.Заказ.ВладелецТовара = ПараметрыКонтрагентовСрезПоследних.Контрагент,
		                      |	ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо
		                      |ГДЕ
		                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
		                      |	И НЕ ВТ_СтатусыВсе.Заказ В
		                      |				(ВЫБРАТЬ
		                      |					ВТ_ЗаказыМимо.Заказ
		                      |				ИЗ
		                      |					ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо)
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ВТ_СтатусыВсе.Заказ,
		                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета
		                      |
		                      |ИНДЕКСИРОВАТЬ ПО
		                      |	Заказ,
		                      |	Период
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВТ_СписокЗаказов.Заказ КАК Заказ,
		                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
		                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
		                      |	ВТ_СписокЗаказов.УбогийЗаказ КАК УбогийЗаказ
		                      |ПОМЕСТИТЬ ВТ_Статусы
		                      |ИЗ
		                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
		                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
		                      |			ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
		                      |				И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
		                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатусыКрайние КАК ВТ_СтатусыКрайние
		                      |			ПО ВТ_СписокЗаказов.Заказ = ВТ_СтатусыКрайние.Заказ
		                      |				И ВТ_СписокЗаказов.Период = ВТ_СтатусыКрайние.Период
		                      |		ПО (ВТ_СписокЗаказов.Заказ = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
		                      |ГДЕ
		                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
		                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
		                      |	И СтатусыСкладскогоУчета.ТипЗаказа <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
		                      |	И СтатусыСкладскогоУчета.ТипЗаказа <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
		                      |	СтатусыСкладскогоУчета.ТипЗаказа,
		                      |	ВТ_СписокЗаказов.Заказ,
		                      |	ВТ_СписокЗаказов.УбогийЗаказ
		                      |
		                      |ОБЪЕДИНИТЬ ВСЕ
		                      |
		                      |ВЫБРАТЬ
		                      |	ВТ_СписокЗаказов.Заказ,
		                      |	СтатусыСкладскогоУчета.ТипЗаказа,
		                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
		                      |	ВТ_СписокЗаказов.УбогийЗаказ
		                      |ИЗ
		                      |	ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
		                      |		ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
		                      |			И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатусыКрайние КАК ВТ_СтатусыКрайние
		                      |		ПО ВТ_СписокЗаказов.Заказ = ВТ_СтатусыКрайние.Заказ
		                      |			И ВТ_СписокЗаказов.Период = ВТ_СтатусыКрайние.Период
		                      |ГДЕ
		                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
		                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
		                      |	И СтатусыСкладскогоУчета.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
		                      |	СтатусыСкладскогоУчета.ТипЗаказа,
		                      |	ВТ_СписокЗаказов.Заказ,
		                      |	ВТ_СписокЗаказов.УбогийЗаказ
		                      |
		                      |ОБЪЕДИНИТЬ ВСЕ
		                      |
		                      |ВЫБРАТЬ
		                      |	ВТ_СписокЗаказов.Заказ,
		                      |	СтатусыСкладскогоУчета.ТипЗаказа,
		                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
		                      |	ВТ_СписокЗаказов.УбогийЗаказ
		                      |ИЗ
		                      |	ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
		                      |		ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
		                      |			И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатусыКрайние КАК ВТ_СтатусыКрайние
		                      |		ПО ВТ_СписокЗаказов.Заказ = ВТ_СтатусыКрайние.Заказ
		                      |			И ВТ_СписокЗаказов.Период = ВТ_СтатусыКрайние.Период
		                      |ГДЕ
		                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
		                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
		                      |	И СтатусыСкладскогоУчета.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
		                      |	СтатусыСкладскогоУчета.ТипЗаказа,
		                      |	ВТ_СписокЗаказов.Заказ,
		                      |	ВТ_СписокЗаказов.УбогийЗаказ
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
		                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
		                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
		                      |	ВЫБОР
		                      |		КОГДА ДополнительныеПараметрыЗаказа.СкладМагазина ЕСТЬ NULL
		                      |				ИЛИ ДополнительныеПараметрыЗаказа.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
		                      |			ТОГДА ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
		                      |		ИНАЧЕ ДополнительныеПараметрыЗаказа.СкладМагазина
		                      |	КОНЕЦ КАК СкладВозврата,
		                      |	1 КАК Кол,
		                      |	ВЫБОР
		                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
		                      |			ТОГДА 1
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК НеВскрытые,
		                      |	ВЫБОР
		                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2)
		                      |			ТОГДА 1
		                      |		ИНАЧЕ 0
		                      |	КОНЕЦ КАК Вскрытые,
		                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема КАК Регион,
		                      |	СтатусыСкладскогоУчета.УбогийЗаказ КАК УбогийЗаказ,
		                      |	МестонахождениеЗаказаСрезПоследних.Терминал КАК ТерминалМестонахождения
		                      |ПОМЕСТИТЬ ВТ_Итоги
		                      |ИЗ
		                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
		                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		                      |		ПО (СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
		                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
		                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод)
		                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
		                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеЗаказа.СрезПоследних КАК МестонахождениеЗаказаСрезПоследних
		                      |		ПО СтатусыСкладскогоУчета.Заказ = МестонахождениеЗаказаСрезПоследних.Заказ
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВТ_Итоги.Регион КАК Регион,
		                      |	ВЫБОР
		                      |		КОГДА НЕ ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин ЕСТЬ NULL
		                      |				И ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		                      |			ТОГДА ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин
		                      |		ИНАЧЕ ВТ_Итоги.Контрагент
		                      |	КОНЕЦ КАК Партнер,
		                      |	ВТ_Итоги.СкладВозврата КАК СкладВозвратаПартнера,
		                      |	СУММА(ВТ_Итоги.Кол) КАК ЗаказовКВозврату,
		                      |	СУММА(ВТ_Итоги.Вскрытые) КАК Вскрытые,
		                      |	СУММА(ВТ_Итоги.НеВскрытые) КАК НеВскрытые,
		                      |	ЕСТЬNULL(ВТ_Итоги.СкладВозврата.ОграниченияПоВозвратам, СкладыМагазинов.ОграниченияПоВозвратам) КАК Ограничения,
		                      |	ЕСТЬNULL(ВТ_Итоги.СкладВозврата.ГрафикРаботы, СкладыМагазинов.ГрафикРаботы) КАК График,
		                      |	ВТ_Итоги.УбогийЗаказ КАК Убогие,
		                      |	ВТ_Итоги.Заказ.ТерминалПриема КАК ЗаказТерминалПриема
							  //CeHbKA 15.06.2020
							  |ПОМЕСТИТЬ ВТ1
							  //CeHbKA 15.06.2020
		                      |ИЗ
		                      |	ВТ_Итоги КАК ВТ_Итоги
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладыМагазинов КАК СкладыМагазинов
		                      |		ПО ВТ_Итоги.Контрагент = СкладыМагазинов.Владелец
		                      |			И (СкладыМагазинов.СкладПоУмолчанию)
							  |ГДЕ
		                      |	НЕ ВТ_Итоги.Контрагент В (&КонтрагентыИсключения)
		                      |	И ВТ_Итоги.Заказ.ТерминалПриема = &Терминал
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ВТ_Итоги.Регион,
		                      |	ВТ_Итоги.УбогийЗаказ,
		                      |	ВТ_Итоги.СкладВозврата,
		                      |	ВЫБОР
		                      |		КОГДА НЕ ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин ЕСТЬ NULL
		                      |				И ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		                      |			ТОГДА ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин
		                      |		ИНАЧЕ ВТ_Итоги.Контрагент
		                      |	КОНЕЦ,
		                      |	ЕСТЬNULL(ВТ_Итоги.СкладВозврата.ОграниченияПоВозвратам, СкладыМагазинов.ОграниченияПоВозвратам),
		                      |	ЕСТЬNULL(ВТ_Итоги.СкладВозврата.ГрафикРаботы, СкладыМагазинов.ГрафикРаботы),
		                      |	ВТ_Итоги.Заказ.ТерминалПриема
		                      |
							  //|УПОРЯДОЧИТЬ ПО
							  //|	Регион,
							  //|	Партнер,
							  //|	СкладВозвратаПартнера
							  //CeHbKA 15.06.2020
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
							  |
							  |ВЫБРАТЬ 
							  |	ВТ1.Регион,
							  |	ВТ1.Партнер,
							  |	ВТ1.СкладВозвратаПартнера,
							  |	ВТ1.ЗаказовКВозврату,
							  |	ВТ1.Вскрытые,
							  |	ВТ1.НеВскрытые,
							  |	ВТ1.Ограничения,
							  |	ВТ1.График,
							  |	ВТ1.Убогие,
							  |	ВТ1.ЗаказТерминалПриема
							  |
							  |ИЗ 
							  |	ВТ1 КАК ВТ1
							  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(
							  |				,
							  |				Контрагент В
							  |					(ВЫБРАТЬ
							  |						ВТ1.Партнер КАК Партнер
							  |					ИЗ
							  |						ВТ1 КАК ВТ1)) КАК ПараметрыКонтрагентовСрезПоследних
							  |		ПО ВТ1.Партнер = ПараметрыКонтрагентовСрезПоследних.Контрагент
							  |ГДЕ
							  |	ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.СкладскаяОбработкаОтсутствует, ЛОЖЬ) = ЛОЖЬ	
							  |УПОРЯДОЧИТЬ ПО
							  |	Регион,
							  |	Партнер,
							  |	СкладВозвратаПартнера
							  |");
							  //CeHbKA 15.06.2020
					  
		
		ТипыЗагрузки = Новый СписокЗначений;
	    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFi);
	    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute);
		ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом);
	    Запрос.УстановитьПараметр("ТипЗагрузкиТСД", ТипыЗагрузки);	
		Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-3));
		//Запрос.УстановитьПараметр("ДатаНач", '20220101');//тест
		Запрос.УстановитьПараметр("Терминал", ТекТерминал);
		СтатусыМинус = новый Массив;
		СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратОтправлен"));
		СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином"));
		СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ПодготовленКВозврату"));
		// МАС - 16.02.2018 - № --->> 
		СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ЗаказНеВозвратный"));
		// <<--- МАС 	
		//// МАС - 02.03.2018 - ЭКСПЕРИМЕНТ - (потерпел неудачу) --->> 
		//СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ЗаказВыполнен"));
		//// <<--- МАС 
				
		// МАС - 06.03.2018 - Исключим ряд контрагентов --->> 
		КонтрагентыИсключения = Новый Массив;
		КонтрагентыИсключения.Добавить(Справочники.Контрагенты.НайтиПоКоду("248_131"));
		Запрос.УстановитьПараметр("КонтрагентыИсключения", КонтрагентыИсключения);	
		// <<--- МАС 
			
		Запрос.УстановитьПараметр("СтатусыМинус", СтатусыМинус);
		ВозвратныеСтатусы = новый Массив;
		ВозвратныеСтатусы.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат1"));
		ВозвратныеСтатусы.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат2"));
		Запрос.УстановитьПараметр("ВозвратныеСтатусы", ВозвратныеСтатусы);
		
		ВозвратыОбмены = Новый Массив;
		ВозвратыОбмены.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЗаказов.Возврат"));
		ВозвратыОбмены.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЗаказов.Обмен"));
		Запрос.УстановитьПараметр("ВозвратыОбмены", ВозвратыОбмены);

		
		РезТЗ = Запрос.Выполнить().Выгрузить();
		

	//КонецЕсли;
		
		
	СписокПодготовкиВозвратов.Загрузить(РезТЗ);
	
	Элементы.СписокПодготовкиВозвратов.Обновить();
	

КонецПроцедуры


Функция ПолучитьТерминалПользователя()

 	Возврат ПараметрыСеанса.ТерминалДоставки;	

КонецФункции // ()


&НаКлиенте
Процедура СоздатьНаборнуюПоНеВскрытым(Команда)
	ЗаполнитьДок(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат1"));	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьНаборнуюПоВскрытым(Команда)	
	ЗаполнитьДок(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат2"));	
КонецПроцедуры


&НаКлиенте
Процедура СписокПодготовкиВозвратовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)	
	
	Отказ = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьДок(ВозвратМ, ЭтоМагистраль = Ложь)
	
	Если ЭтоМагистраль Тогда
		
		СписКонтр = новый СписокЗначений;
		Для каждого Стр Из МагистральныеВозвраты Цикл
		    Если Стр.СоздатьВозврат Тогда		
				СписКонтр.Добавить(Стр.Партнер);			
			КонецЕсли;		
		КонецЦикла;
			
		Док = ПроверитьНаличиеДанныхДляМагистрали(СписКонтр, ПолучитьСкладНаСервере(Терминал), Терминал, ВозвратМ);
	    Если ЗначениеЗаполнено(Док) Тогда		
			ОткрытьФорму("Документ.НаборнаяВедомостьДляВозврата.Форма.ФормаДокументаНовая", Новый Структура("Ключ", Док), ЭтаФорма);						
		Иначе
			Сообщить("Нет данных для создания документа");
		КонецЕсли;
		
	Иначе		
		ТекДанные = Элементы.СписокПодготовкиВозвратов.ТекущиеДанные;
		Контр = ТекДанные.Партнер;
		
		Если ЗначениеЗаполнено(Контр) Тогда		
			Док = ПроверитьНаличиеДанных(Контр, ТекДанные.СкладВозвратаПартнера, ТекДанные.Регион, ВозвратМ, ТекДанные.Убогие);					
			Если ЗначениеЗаполнено(Док) Тогда		
				ОткрытьФорму("Документ.НаборнаяВедомостьДляВозврата.Форма.ФормаДокументаНовая", Новый Структура("Ключ", Док), ЭтаФорма);						
			Иначе
				Сообщить("Нет данных для создания документа");
			КонецЕсли;		
		КонецЕсли;
	
	КонецЕсли;
	
		
КонецПроцедуры


Функция ПолучитьСкладНаСервере(Терминал)
	
	Возврат Терминал.Склад;	
	
КонецФункции // ()


Функция ПроверитьНаличиеДанных(Контр, Склад, Регион, ВозвратМ, Убогие = Ложь)
	
	
	ТабЗн = ПолучитьРезультатЗапроса(Контр, Убогие);

	Отбор = Новый Структура;
	Отбор.Вставить("СкладВозврата", Склад);
	Отбор.Вставить("Регион", Регион);
	Отбор.Вставить("ТекущийСтатус", ВозвратМ);
	КопияТаб = ТабЗн.Скопировать(Отбор);
	
	
	Если КопияТаб.Количество() Тогда		
		Док = Документы.НаборнаяВедомостьДляВозврата.СоздатьДокумент();
		Док.НовыйМеханизм = Истина;
		//Док.Магистраль = ЭтоМагистраль;
		
		//Асеев 20.05.2022 (Задача № 4809)>>>
		//Док.Вскрытые = ?(ВозвратМ = ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат2"), Истина, Ложь);
		Если ВозвратМ = Справочники.СтатусыСкладскогоУчета.Возврат1 Тогда
			Док.ТипВозврата = Справочники.ТипыВозврата.НеВскрытыеЗаказы;
		ИначеЕсли ВозвратМ = Справочники.СтатусыСкладскогоУчета.Возврат2 Тогда
			Док.ТипВозврата = Справочники.ТипыВозврата.ВскрытыеЗаказы;
			Док.Вскрытые = Истина;
		КонецЕсли;
		//Асеев 20.05.2022 (Задача № 4809)<<<
		
		Док.ИнтернетМагазин = Контр;
		Док.СтатусВозврата = ВозвратМ;
		Док.Дата = ТекущаяДата();
		
		ШКПоМестамТоварам = УчитыватьШКМестТоваровПоЗаказу(Контр);
		Док.ШКПоМестам    = ШКПоМестамТоварам.ШКПоМестам;
		Док.ШКПоТоварам   = ШКПоМестамТоварам.ШКПоТоварам;
		
		Док.СкладМагазина = Склад;
		Док.ЗаполнитьСерверМ(КопияТаб, Ложь);
		МассивЗаказов = КопияТаб.ВыгрузитьКолонку("Заказ");
		Док.ЗаполнитьШтрихкоды(МассивЗаказов);		
		Если Док.ШКПоМестам Тогда	
			Док.ЗаполнитьМестаПоЗаказам(МассивЗаказов);		
		КонецЕсли;	
		
		Док.Записать(РежимЗаписиДокумента.Запись);
		//Док.Записать(РежимЗаписиДокумента.Проведение);  // ??? 
				
		Возврат Док.Ссылка;	
	Иначе	
		Возврат Неопределено;	
	КонецЕсли;
		

КонецФункции // ()


Функция УчитыватьШКМестТоваровПоЗаказу(Контр)

	СтрВозвр = Новый Структура();	
	Запрос = новый Запрос("ВЫБРАТЬ
	                      |	ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.УчетЗаказовПоМестам, ЛОЖЬ) КАК ШКПоМестам,
	                      |	ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.УчетШКПоТоварам, ЛОЖЬ) КАК ШКПоТоварам
	                      |ИЗ
	                      |	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(, Контрагент В (&Контрагент)) КАК ПараметрыКонтрагентовСрезПоследних");	
	Запрос.УстановитьПараметр("Контрагент", Контр);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
		СтрВозвр.Вставить("ШКПоТоварам", Рез.ШКПоТоварам);
		СтрВозвр.Вставить("ШКПоМестам", Рез.ШКПоМестам);
		Возврат СтрВозвр;	
	Иначе
		//+Степанов
		СтрВозвр.Вставить("ШКПоТоварам", Ложь);
		СтрВозвр.Вставить("ШКПоМестам", Ложь);
		//-Степанов
		Возврат СтрВозвр;
	КонецЕсли;
	
КонецФункции // ()


&НаСервере
Функция ПолучитьРезультатЗапроса(Контр, Убогие = Ложь)
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	СтатусыСкладскогоУчета.Период КАК Период,
	//	|	СтатусыСкладскогоУчета.Заказ КАК Заказ
	//	|ПОМЕСТИТЬ ВТ_РегЗаписи
	//	|ИЗ
	//	|	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//	|ГДЕ
	//	|	(СтатусыСкладскогоУчета.Заказ.ВладелецТовара = &Контр
	//	|			ИЛИ СтатусыСкладскогоУчета.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин = &Контр)
	//	|	И СтатусыСкладскогоУчета.Период >= &ДатаНач
	//	|
	//	|ИНДЕКСИРОВАТЬ ПО
	//	|	Период,
	//	|	Заказ
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_РегЗаписи.Заказ КАК Заказ,
	//	|	МАКСИМУМ(ВТ_РегЗаписи.Период) КАК Период
	//	|ПОМЕСТИТЬ ВТ_срез
	//	|ИЗ
	//	|	ВТ_РегЗаписи КАК ВТ_РегЗаписи
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВТ_РегЗаписи.Заказ
	//	|
	//	|ИНДЕКСИРОВАТЬ ПО
	//	|	Заказ,
	//	|	Период
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_срез.Заказ КАК Заказ,
	//	|	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	//	|	ВТ_срез.Заказ.Номер КАК Номер,
	//	|	ВТ_срез.Заказ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа
	//	|ПОМЕСТИТЬ ВТ_Статусы
	//	|ИЗ
	//	|	ВТ_срез КАК ВТ_срез
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//	|		ПО ВТ_срез.Заказ = СтатусыСкладскогоУчета.Заказ
	//	|			И ВТ_срез.Период = СтатусыСкладскогоУчета.Период
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	|		ПО (ВТ_срез.Заказ.Ссылка = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	//	|ГДЕ
	//	|	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//	|			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	//	|	И (СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 3
	//	|			ИЛИ СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 4)
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВТ_срез.Заказ,
	//	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//	|	СтатусыСкладскогоУчета.ТипЗаказа,
	//	|	ВТ_срез.Заказ.Номер,
	//	|	ВТ_срез.Заказ.НомерВнешнегоЗаказа
	//	|
	//	|ИНДЕКСИРОВАТЬ ПО
	//	|	Заказ,
	//	|	Номер,
	//	|	НомерВнешнегоЗаказа
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
	//	|	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
	//	|	СтатусыСкладскогоУчета.Заказ.Номер КАК ЗаказНомер,
	//	|	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.Дата КАК Дата,
	//	|	ДополнительныеПараметрыЗаказа.СкладМагазина КАК СкладВозврата,
	//	|	СтатусыСкладскогоУчета.Заказ.ТерминалПриема КАК Регион,
	//	|	ВЫБОР
	//	|		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//	|			ТОГДА ЛОЖЬ
	//	|		ИНАЧЕ ИСТИНА
	//	|	КОНЕЦ КАК ЕстьНаТСД,
	//	|	СтатусыСкладскогоУчета.Заказ.КоличествоМест КАК КоличествоМестТовара
	//	|ПОМЕСТИТЬ ВТ_ИТОГ
	//	|ИЗ
	//	|	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//	|		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	|		ПО СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//	|
	//	|ОБЪЕДИНИТЬ ВСЕ
	//	|
	//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	СтатусыСкладскогоУчета.Заказ,
	//	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//	|	СтатусыСкладскогоУчета.ТипЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара,
	//	|	СтатусыСкладскогоУчета.Заказ.Номер,
	//	|	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.Дата,
	//	|	ДополнительныеПараметрыЗаказа.СкладМагазина,
	//	|	СтатусыСкладскогоУчета.Заказ.ТерминалПриема,
	//	|	ВЫБОР
	//	|		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//	|			ТОГДА ЛОЖЬ
	//	|		ИНАЧЕ ИСТИНА
	//	|	КОНЕЦ,
	//	|	СтатусыСкладскогоУчета.Заказ.КоличествоМест
	//	|ИЗ
	//	|	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//	|		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	|		ПО СтатусыСкладскогоУчета.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//	|
	//	|ОБЪЕДИНИТЬ ВСЕ
	//	|
	//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	СтатусыСкладскогоУчета.Заказ,
	//	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//	|	СтатусыСкладскогоУчета.ТипЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара,
	//	|	СтатусыСкладскогоУчета.Заказ.Номер,
	//	|	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.Дата,
	//	|	ДополнительныеПараметрыЗаказа.СкладМагазина,
	//	|	СтатусыСкладскогоУчета.Заказ.ТерминалПриема,
	//	|	ВЫБОР
	//	|		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//	|			ТОГДА ЛОЖЬ
	//	|		ИНАЧЕ ИСТИНА
	//	|	КОНЕЦ,
	//	|	СтатусыСкладскогоУчета.Заказ.КоличествоМест
	//	|ИЗ
	//	|	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//	|		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	|		ПО СтатусыСкладскогоУчета.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_ИТОГ.Заказ КАК Заказ,
	//	|	ВТ_ИТОГ.ТекущийСтатус КАК ТекущийСтатус,
	//	|	ВТ_ИТОГ.ТипЗаказа КАК ТипЗаказа,
	//	|	ВТ_ИТОГ.Контрагент КАК Контрагент,
	//	|	ВТ_ИТОГ.ЗаказНомер КАК ЗаказНомер,
	//	|	ВТ_ИТОГ.ЗаказНомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	//	|	ВТ_ИТОГ.Дата КАК Дата,
	//	|	ВТ_ИТОГ.СкладВозврата КАК СкладВозврата,
	//	|	ВТ_ИТОГ.Регион КАК Регион,
	//	|	МАКСИМУМ(ВТ_ИТОГ.ЕстьНаТСД) КАК ЕстьНаТСД,
	//	|	ВТ_ИТОГ.КоличествоМестТовара КАК КоличествоМестТовара
	//	|ИЗ
	//	|	ВТ_ИТОГ КАК ВТ_ИТОГ
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВТ_ИТОГ.ТипЗаказа,
	//	|	ВТ_ИТОГ.ТекущийСтатус,
	//	|	ВТ_ИТОГ.Заказ,
	//	|	ВТ_ИТОГ.Контрагент,
	//	|	ВТ_ИТОГ.ЗаказНомер,
	//	|	ВТ_ИТОГ.ЗаказНомерВнешнегоЗаказа,
	//	|	ВТ_ИТОГ.Дата,
	//	|	ВТ_ИТОГ.СкладВозврата,
	//	|	ВТ_ИТОГ.Регион,
	//	|	ВТ_ИТОГ.КоличествоМестТовара";
	//
	//ТипыЗагрузки = Новый СписокЗначений;
	//ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFi);
	//ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute);
	//ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом);
	//Запрос.УстановитьПараметр("ТипЗагрузкиТСД", ТипыЗагрузки);	
	//Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-3));
	//Запрос.УстановитьПараметр("Контр", Контр);
	//Запрос.УстановитьПараметр("Терминал", Терминал);	
	
	//Если ЭтоМагистраль Тогда		
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УСЛОВИЕ_МАГИСТРАЛЬ", "СтатусыСкладскогоУчета.Заказ.ТерминалПриема <> СтатусыСкладскогоУчета.Заказ.ТерминалДоставки");	
	//Иначе	
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УСЛОВИЕ_МАГИСТРАЛЬ", "ИСТИНА");	
	//КонецЕсли;
	
	
	
	
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	//                      |	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период
	//                      |ПОМЕСТИТЬ ВТ_СтатусыВсе
	//                      |ИЗ
	//                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//                      |ГДЕ
	//                      |	СтатусыСкладскогоУчета.Период >= &ДатаНач
	//                      |	И (СтатусыСкладскогоУчета.Заказ.ВладелецТовара = &Контр
	//                      |			ИЛИ СтатусыСкладскогоУчета.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин = &Контр)
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	СтатусыСкладскогоУчета.Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_СтатусыВсе.Заказ КАК Заказ
	//                      |ПОМЕСТИТЬ ВТ_ЗаказыМимо
	//                      |ИЗ
	//                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
	//                      |ГДЕ
	//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета В(&СтатусыМинус)
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_СтатусыВсе.Заказ КАК Заказ,
	//                      |	МАКСИМУМ(ВТ_СтатусыВсе.Период) КАК Период,
	//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета
	//                      |ПОМЕСТИТЬ ВТ_СписокЗаказов
	//                      |ИЗ
	//                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе,
	//                      |	ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо
	//                      |ГДЕ
	//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
	//                      |	И НЕ ВТ_СтатусыВсе.Заказ В
	//                      |				(ВЫБРАТЬ
	//                      |					ВТ_ЗаказыМимо.Заказ
	//                      |				ИЗ
	//                      |					ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо)
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	ВТ_СтатусыВсе.Заказ,
	//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ,
	//                      |	Период
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_СписокЗаказов.Заказ КАК Заказ,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета
	//                      |ПОМЕСТИТЬ ВТ_Статусы
	//                      |ИЗ
	//                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
	//                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//                      |			ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
	//                      |				И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
	//                      |		ПО (ВТ_СписокЗаказов.Заказ = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	//                      |ГДЕ
	//                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//                      |	ВТ_СписокЗаказов.Заказ
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
	//                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
	//                      |	ДополнительныеПараметрыЗаказа.СкладМагазина КАК СкладВозврата,
	//                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема КАК Регион,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//                      |	ВЫБОР
	//                      |		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//                      |			ТОГДА ЛОЖЬ
	//                      |		ИНАЧЕ ИСТИНА
	//                      |	КОНЕЦ КАК ЕстьНаТСД,
	//                      |	СтатусыСкладскогоУчета.Заказ.КоличествоМест КАК КоличествоМестТовара,
	//                      |	СтатусыСкладскогоУчета.Заказ.Дата КАК Дата,
	//                      |	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	//                      |	СтатусыСкладскогоУчета.Заказ.Номер КАК ЗаказНомер
	//                      |ПОМЕСТИТЬ ВТ_Итоги
	//                      |ИЗ
	//                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ПО (СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	//                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод)
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//                      |ГДЕ
	//                      |	(СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 3
	//                      |			ИЛИ СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 4)
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_Итоги.Заказ КАК Заказ,
	//                      |	ВТ_Итоги.ТекущийСтатус КАК ТекущийСтатус,
	//                      |	ВТ_Итоги.Контрагент КАК Контрагент,
	//                      |	ВТ_Итоги.СкладВозврата КАК СкладВозврата,
	//                      |	ВТ_Итоги.Регион КАК Регион,
	//                      |	ВТ_Итоги.ТипЗаказа КАК ТипЗаказа,
	//                      |	МАКСИМУМ(ВТ_Итоги.ЕстьНаТСД) КАК ЕстьНаТСД,
	//                      |	ВТ_Итоги.КоличествоМестТовара КАК КоличествоМестТовара,
	//                      |	ВТ_Итоги.Дата КАК Дата,
	//                      |	ВТ_Итоги.ЗаказНомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	//                      |	ВТ_Итоги.ЗаказНомер КАК ЗаказНомер
	//                      |ИЗ
	//                      |	ВТ_Итоги КАК ВТ_Итоги
	//                      |ГДЕ
	//                      |	ВЫБОР
	//                      |			КОГДА ВТ_Итоги.Заказ.ТерминалДоставки <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	//                      |					И ВТ_Итоги.Заказ.ТерминалПриема <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	//                      |					И ВТ_Итоги.Заказ.ТерминалДоставки <> ВТ_Итоги.Заказ.ТерминалПриема
	//                      |				ТОГДА ИСТИНА
	//                      |			ИНАЧЕ ВТ_Итоги.Регион = &Терминал
	//                      |		КОНЕЦ
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	ВТ_Итоги.ТипЗаказа,
	//                      |	ВТ_Итоги.ТекущийСтатус,
	//                      |	ВТ_Итоги.ЗаказНомер,
	//                      |	ВТ_Итоги.Заказ,
	//                      |	ВТ_Итоги.ЗаказНомерВнешнегоЗаказа,
	//                      |	ВТ_Итоги.Регион,
	//                      |	ВТ_Итоги.Дата,
	//                      |	ВТ_Итоги.Контрагент,
	//                      |	ВТ_Итоги.СкладВозврата,
	//                      |	ВТ_Итоги.КоличествоМестТовара");
	
	
	
	//// 15.03.2018	
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	//                      |	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период
	//                      |ПОМЕСТИТЬ ВТ_СтатусыВсе
	//                      |ИЗ
	//                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//                      |ГДЕ
	//                      |	СтатусыСкладскогоУчета.Период >= &ДатаНач
	//                      |	И (СтатусыСкладскогоУчета.Заказ.ВладелецТовара = &Контр
	//                      |			ИЛИ СтатусыСкладскогоУчета.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин = &Контр)
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	СтатусыСкладскогоУчета.Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_СтатусыВсе.Заказ КАК Заказ
	//                      |ПОМЕСТИТЬ ВТ_ЗаказыМимо
	//                      |ИЗ
	//                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
	//                      |ГДЕ
	//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета В(&СтатусыМинус)
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_СтатусыВсе.Заказ КАК Заказ,
	//                      |	МАКСИМУМ(ВТ_СтатусыВсе.Период) КАК Период,
	//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	//                      |	МАКСИМУМ(ВЫБОР
	//                      |			КОГДА ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.УчетЗаказовПоМестам, ЛОЖЬ)
	//                      |					И МестаПоЗаказам.Ссылка ЕСТЬ NULL
	//                      |				ТОГДА ИСТИНА
	//                      |			ИНАЧЕ ЛОЖЬ
	//                      |		КОНЕЦ) КАК УбогийЗаказ
	//                      |ПОМЕСТИТЬ ВТ_СписокЗаказов
	//                      |ИЗ
	//                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
	//                      |		ПО ВТ_СтатусыВсе.Заказ = МестаПоЗаказам.Заказ
	//                      |			И (МестаПоЗаказам.ПометкаУдаления = ЛОЖЬ)
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних КАК ПараметрыКонтрагентовСрезПоследних
	//                      |		ПО ВТ_СтатусыВсе.Заказ.ВладелецТовара = ПараметрыКонтрагентовСрезПоследних.Контрагент,
	//                      |	ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо
	//                      |ГДЕ
	//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
	//                      |	И НЕ ВТ_СтатусыВсе.Заказ В
	//                      |				(ВЫБРАТЬ
	//                      |					ВТ_ЗаказыМимо.Заказ
	//                      |				ИЗ
	//                      |					ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо)
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	ВТ_СтатусыВсе.Заказ,
	//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ,
	//                      |	Период
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_СписокЗаказов.Заказ КАК Заказ,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	//                      |	ВТ_СписокЗаказов.УбогийЗаказ КАК УбогийЗаказ
	//                      |ПОМЕСТИТЬ ВТ_Статусы
	//                      |ИЗ
	//                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
	//                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//                      |			ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
	//                      |				И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
	//                      |		ПО (ВТ_СписокЗаказов.Заказ = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	//                      |ГДЕ
	//                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//                      |	ВТ_СписокЗаказов.Заказ,
	//                      |	ВТ_СписокЗаказов.УбогийЗаказ
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
	//                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
	//                      |	ДополнительныеПараметрыЗаказа.СкладМагазина КАК СкладВозврата,
	//                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема КАК Регион,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//                      |	ВЫБОР
	//                      |		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//                      |			ТОГДА ЛОЖЬ
	//                      |		ИНАЧЕ ИСТИНА
	//                      |	КОНЕЦ КАК ЕстьНаТСД,
	//                      |	СтатусыСкладскогоУчета.Заказ.КоличествоМест КАК КоличествоМестТовара,
	//                      |	СтатусыСкладскогоУчета.Заказ.Дата КАК Дата,
	//                      |	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	//                      |	СтатусыСкладскогоУчета.Заказ.Номер КАК ЗаказНомер,
	//                      |	СтатусыСкладскогоУчета.УбогийЗаказ КАК УбогийЗаказ
	//                      |ПОМЕСТИТЬ ВТ_Итоги
	//                      |ИЗ
	//                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//					  //|ГДЕ
	//					  //|	(СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 3
	//					  //|			ИЛИ СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 4)
	//                      |
	//                      |ОБЪЕДИНИТЬ ВСЕ
	//                      |
	//                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//                      |	СтатусыСкладскогоУчета.Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара,
	//                      |	ДополнительныеПараметрыЗаказа.СкладМагазина,
	//                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//                      |	ВЫБОР
	//                      |		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//                      |			ТОГДА ЛОЖЬ
	//                      |		ИНАЧЕ ИСТИНА
	//                      |	КОНЕЦ,
	//                      |	СтатусыСкладскогоУчета.Заказ.КоличествоМест,
	//                      |	СтатусыСкладскогоУчета.Заказ.Дата,
	//                      |	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа,
	//                      |	СтатусыСкладскогоУчета.Заказ.Номер,
	//                      |	NULL
	//                      |ИЗ
	//                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ПО СтатусыСкладскогоУчета.Заказ.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//					  //|ГДЕ
	//					  //|	(СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 3
	//					  //|			ИЛИ СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 4)
	//                      |
	//                      |ОБЪЕДИНИТЬ ВСЕ
	//                      |
	//                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//                      |	СтатусыСкладскогоУчета.Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара,
	//                      |	ДополнительныеПараметрыЗаказа.СкладМагазина,
	//                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//                      |	ВЫБОР
	//                      |		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//                      |			ТОГДА ЛОЖЬ
	//                      |		ИНАЧЕ ИСТИНА
	//                      |	КОНЕЦ,
	//                      |	СтатусыСкладскогоУчета.Заказ.КоличествоМест,
	//                      |	СтатусыСкладскогоУчета.Заказ.Дата,
	//                      |	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа,
	//                      |	СтатусыСкладскогоУчета.Заказ.Номер,
	//                      |	NULL
	//                      |ИЗ
	//                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ПО СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//					  //|ГДЕ
	//					  //|	(СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 3
	//					  //|			ИЛИ СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 4)
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_Итоги.Заказ КАК Заказ,
	//                      |	ВТ_Итоги.ТекущийСтатус КАК ТекущийСтатус,
	//                      |	ВЫБОР
	//                      |		КОГДА НЕ ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин ЕСТЬ NULL
	//                      |				И ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	//                      |			ТОГДА ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин
	//                      |		ИНАЧЕ ВТ_Итоги.Контрагент
	//                      |	КОНЕЦ КАК КонтрагентРодитель,
	//                      |	ВТ_Итоги.СкладВозврата КАК СкладВозврата,
	//                      |	ВТ_Итоги.Регион КАК Регион,
	//                      |	ВТ_Итоги.ТипЗаказа КАК ТипЗаказа,
	//                      |	МАКСИМУМ(ВТ_Итоги.ЕстьНаТСД) КАК ЕстьНаТСД,
	//                      |	ВТ_Итоги.КоличествоМестТовара КАК КоличествоМестТовара,
	//                      |	ВТ_Итоги.Дата КАК Дата,
	//                      |	ВТ_Итоги.ЗаказНомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	//                      |	ВТ_Итоги.ЗаказНомер КАК ЗаказНомер,
	//                      |	ВТ_Итоги.УбогийЗаказ КАК УбогийЗаказ,
	//                      |	ВТ_Итоги.Контрагент КАК Контрагент
	//                      |ИЗ
	//                      |	ВТ_Итоги КАК ВТ_Итоги
	//                      |ГДЕ
	//                      |	ВЫБОР
	//                      |			КОГДА ВТ_Итоги.Заказ.ТерминалДоставки <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	//                      |					И ВТ_Итоги.Заказ.ТерминалПриема <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	//                      |					И ВТ_Итоги.Заказ.ТерминалДоставки <> ВТ_Итоги.Заказ.ТерминалПриема
	//                      |				ТОГДА ИСТИНА
	//                      |			ИНАЧЕ ВТ_Итоги.Регион = &Терминал
	//                      |		КОНЕЦ
	//                      |	И ВТ_Итоги.УбогийЗаказ = &УбогийЗаказ
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	ВТ_Итоги.ТипЗаказа,
	//                      |	ВТ_Итоги.ТекущийСтатус,
	//                      |	ВТ_Итоги.ЗаказНомер,
	//                      |	ВТ_Итоги.Заказ,
	//                      |	ВТ_Итоги.ЗаказНомерВнешнегоЗаказа,
	//                      |	ВТ_Итоги.Регион,
	//                      |	ВТ_Итоги.Дата,
	//                      |	ВТ_Итоги.СкладВозврата,
	//                      |	ВТ_Итоги.КоличествоМестТовара,
	//                      |	ВТ_Итоги.УбогийЗаказ,
	//                      |	ВЫБОР
	//                      |		КОГДА НЕ ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин ЕСТЬ NULL
	//                      |				И ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	//                      |			ТОГДА ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин
	//                      |		ИНАЧЕ ВТ_Итоги.Контрагент
	//                      |	КОНЕЦ,
	//                      |	ВТ_Итоги.Контрагент");
	
	//Асеев 22.01.2021 (Задача № 4429)>>>
	// с учетом обменных/возвратных заказов
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//                      |	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период
	//                      |ПОМЕСТИТЬ ВТ_СтатусыКрайние
	//                      |ИЗ
	//                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//                      |ГДЕ
	//                      |	СтатусыСкладскогоУчета.Период >= &ДатаНач
	//                      |	И (СтатусыСкладскогоУчета.Заказ.ВладелецТовара = &Контр
	//                      |			ИЛИ СтатусыСкладскогоУчета.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин = &Контр)
	//                      |	И СтатусыСкладскогоУчета.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	СтатусыСкладскогоУчета.Заказ
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ,
	//                      |	Период
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	//                      |	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период,
	//                      |	ВЫБОР
	//                      |		КОГДА СтатусыЗаказов.Период ЕСТЬ NULL
	//                      |			ТОГДА ЛОЖЬ
	//                      |		ИНАЧЕ ИСТИНА
	//                      |	КОНЕЦ КАК Выполнен
	//                      |ПОМЕСТИТЬ ВТ_СтатусыВсе
	//                      |ИЗ
	//                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = СтатусыЗаказов.Заказ
	//                      |			И (СтатусыСкладскогоУчета.СтатусСкладскогоУчета В (&ВозвратныеСтатусы))
	//                      |			И (СтатусыЗаказов.Статус = 301)
	//                      |			И (НЕ СтатусыСкладскогоУчета.ТипЗаказа В (&ВозвратыОбмены))
	//                      |ГДЕ
	//                      |	СтатусыСкладскогоУчета.Период >= &ДатаНач
	//                      |	И (СтатусыСкладскогоУчета.Заказ.ВладелецТовара = &Контр
	//                      |			ИЛИ СтатусыСкладскогоУчета.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин = &Контр)
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	СтатусыСкладскогоУчета.Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	ВЫБОР
	//                      |		КОГДА СтатусыЗаказов.Период ЕСТЬ NULL
	//                      |			ТОГДА ЛОЖЬ
	//                      |		ИНАЧЕ ИСТИНА
	//                      |	КОНЕЦ
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ,
	//                      |	Период
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_СтатусыВсе.Заказ КАК Заказ
	//                      |ПОМЕСТИТЬ ВТ_ЗаказыМимо
	//                      |ИЗ
	//                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
	//                      |ГДЕ
	//                      |	(ВТ_СтатусыВсе.СтатусСкладскогоУчета В (&СтатусыМинус)
	//                      |			ИЛИ ВТ_СтатусыВсе.Выполнен = ИСТИНА)
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_СтатусыВсе.Заказ КАК Заказ,
	//                      |	МАКСИМУМ(ВТ_СтатусыВсе.Период) КАК Период,
	//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	//                      |	МАКСИМУМ(ВЫБОР
	//                      |			КОГДА ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.УчетЗаказовПоМестам, ЛОЖЬ)
	//                      |					И МестаПоЗаказам.Ссылка ЕСТЬ NULL
	//                      |				ТОГДА ИСТИНА
	//                      |			ИНАЧЕ ЛОЖЬ
	//                      |		КОНЕЦ) КАК УбогийЗаказ
	//                      |ПОМЕСТИТЬ ВТ_СписокЗаказов
	//                      |ИЗ
	//                      |	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
	//                      |		ПО ВТ_СтатусыВсе.Заказ = МестаПоЗаказам.Заказ
	//                      |			И (МестаПоЗаказам.ПометкаУдаления = ЛОЖЬ)
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних КАК ПараметрыКонтрагентовСрезПоследних
	//                      |		ПО ВТ_СтатусыВсе.Заказ.ВладелецТовара = ПараметрыКонтрагентовСрезПоследних.Контрагент
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо
	//                      |		ПО ВТ_СтатусыВсе.Заказ = ВТ_ЗаказыМимо.Заказ
	//                      |ГДЕ
	//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
	//                      |	И ВТ_ЗаказыМимо.Заказ ЕСТЬ NULL
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	ВТ_СтатусыВсе.Заказ,
	//                      |	ВТ_СтатусыВсе.СтатусСкладскогоУчета
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ,
	//                      |	Период
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_СписокЗаказов.Заказ КАК Заказ,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	//                      |	ВТ_СписокЗаказов.УбогийЗаказ КАК УбогийЗаказ
	//                      |ПОМЕСТИТЬ ВТ_Статусы
	//                      |ИЗ
	//                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
	//                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//                      |			ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
	//                      |				И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
	//                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатусыКрайние КАК ВТ_СтатусыКрайние
	//                      |			ПО ВТ_СписокЗаказов.Заказ = ВТ_СтатусыКрайние.Заказ
	//                      |				И ВТ_СписокЗаказов.Период = ВТ_СтатусыКрайние.Период
	//                      |		ПО (ВТ_СписокЗаказов.Заказ = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	//                      |ГДЕ
	//                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	//                      |	И СтатусыСкладскогоУчета.ТипЗаказа <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
	//                      |	И СтатусыСкладскогоУчета.ТипЗаказа <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//                      |	ВТ_СписокЗаказов.Заказ,
	//                      |	ВТ_СписокЗаказов.УбогийЗаказ
	//                      |
	//                      |ОБЪЕДИНИТЬ ВСЕ
	//                      |
	//                      |ВЫБРАТЬ
	//                      |	ВТ_СписокЗаказов.Заказ,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	ВТ_СписокЗаказов.УбогийЗаказ
	//                      |ИЗ
	//                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды,
	//                      |	ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//                      |		ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
	//                      |			И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
	//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатусыКрайние КАК ВТ_СтатусыКрайние
	//                      |		ПО ВТ_СписокЗаказов.Заказ = ВТ_СтатусыКрайние.Заказ
	//                      |			И ВТ_СписокЗаказов.Период = ВТ_СтатусыКрайние.Период
	//                      |ГДЕ
	//                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	//                      |	И СтатусыСкладскогоУчета.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//                      |	ВТ_СписокЗаказов.Заказ,
	//                      |	ВТ_СписокЗаказов.УбогийЗаказ
	//                      |
	//                      |ОБЪЕДИНИТЬ ВСЕ
	//                      |
	//                      |ВЫБРАТЬ
	//                      |	ВТ_СписокЗаказов.Заказ,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	ВТ_СписокЗаказов.УбогийЗаказ
	//                      |ИЗ
	//                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды,
	//                      |	ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//                      |		ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
	//                      |			И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
	//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатусыКрайние КАК ВТ_СтатусыКрайние
	//                      |		ПО ВТ_СписокЗаказов.Заказ = ВТ_СтатусыКрайние.Заказ
	//                      |			И ВТ_СписокЗаказов.Период = ВТ_СтатусыКрайние.Период
	//                      |ГДЕ
	//                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	//                      |	И СтатусыСкладскогоУчета.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//                      |	ВТ_СписокЗаказов.Заказ,
	//                      |	ВТ_СписокЗаказов.УбогийЗаказ
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
	//                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
	//                      |	ДополнительныеПараметрыЗаказа.СкладМагазина КАК СкладВозврата,
	//                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема КАК Регион,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//                      |	ВЫБОР
	//                      |		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//                      |			ТОГДА ЛОЖЬ
	//                      |		ИНАЧЕ ИСТИНА
	//                      |	КОНЕЦ КАК ЕстьНаТСД,
	//                      |	СтатусыСкладскогоУчета.Заказ.КоличествоМест КАК КоличествоМестТовара,
	//                      |	СтатусыСкладскогоУчета.Заказ.Дата КАК Дата,
	//                      |	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	//                      |	СтатусыСкладскогоУчета.Заказ.Номер КАК ЗаказНомер,
	//                      |	СтатусыСкладскогоУчета.УбогийЗаказ КАК УбогийЗаказ,
	//                      |	МестонахождениеЗаказаСрезПоследних.Терминал КАК ТерминалМестонахождения,
	//                      |	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки
	//                      |ПОМЕСТИТЬ ВТ_Итоги
	//                      |ИЗ
	//                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеЗаказа.СрезПоследних(
	//                      |				,
	//                      |				Заказ В
	//                      |					(ВЫБРАТЬ
	//                      |						ВТ_Статусы.Заказ КАК Заказ
	//                      |					ИЗ
	//                      |						ВТ_Статусы КАК ВТ_Статусы)) КАК МестонахождениеЗаказаСрезПоследних
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = МестонахождениеЗаказаСрезПоследних.Заказ
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(
	//                      |				,
	//                      |				Заказ В
	//                      |					(ВЫБРАТЬ
	//                      |						ВТ_Статусы.Заказ КАК Заказ
	//                      |					ИЗ
	//                      |						ВТ_Статусы КАК ВТ_Статусы)) КАК СостоянияЗаказовСрезПоследних
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = СостоянияЗаказовСрезПоследних.Заказ
	//                      |
	//                      |ОБЪЕДИНИТЬ ВСЕ
	//                      |
	//                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//                      |	СтатусыСкладскогоУчета.Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара,
	//                      |	ДополнительныеПараметрыЗаказа.СкладМагазина,
	//                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//                      |	ВЫБОР
	//                      |		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//                      |			ТОГДА ЛОЖЬ
	//                      |		ИНАЧЕ ИСТИНА
	//                      |	КОНЕЦ,
	//                      |	СтатусыСкладскогоУчета.Заказ.КоличествоМест,
	//                      |	СтатусыСкладскогоУчета.Заказ.Дата,
	//                      |	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа,
	//                      |	СтатусыСкладскогоУчета.Заказ.Номер,
	//                      |	NULL,
	//                      |	МестонахождениеЗаказаСрезПоследних.Терминал,
	//                      |	СостоянияЗаказовСрезПоследних.РезультатДоставки
	//                      |ИЗ
	//                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ПО СтатусыСкладскогоУчета.Заказ.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеЗаказа.СрезПоследних(
	//                      |				,
	//                      |				Заказ В
	//                      |					(ВЫБРАТЬ
	//                      |						ВТ_Статусы.Заказ КАК Заказ
	//                      |					ИЗ
	//                      |						ВТ_Статусы КАК ВТ_Статусы)) КАК МестонахождениеЗаказаСрезПоследних
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = МестонахождениеЗаказаСрезПоследних.Заказ
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(
	//                      |				,
	//                      |				Заказ В
	//                      |					(ВЫБРАТЬ
	//                      |						ВТ_Статусы.Заказ КАК Заказ
	//                      |					ИЗ
	//                      |						ВТ_Статусы КАК ВТ_Статусы)) КАК СостоянияЗаказовСрезПоследних
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = СостоянияЗаказовСрезПоследних.Заказ
	//                      |
	//                      |ОБЪЕДИНИТЬ ВСЕ
	//                      |
	//                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//                      |	СтатусыСкладскогоУчета.Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара,
	//                      |	ДополнительныеПараметрыЗаказа.СкладМагазина,
	//                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа,
	//                      |	ВЫБОР
	//                      |		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//                      |			ТОГДА ЛОЖЬ
	//                      |		ИНАЧЕ ИСТИНА
	//                      |	КОНЕЦ,
	//                      |	СтатусыСкладскогоУчета.Заказ.КоличествоМест,
	//                      |	СтатусыСкладскогоУчета.Заказ.Дата,
	//                      |	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа,
	//                      |	СтатусыСкладскогоУчета.Заказ.Номер,
	//                      |	NULL,
	//                      |	МестонахождениеЗаказаСрезПоследних.Терминал,
	//                      |	СостоянияЗаказовСрезПоследних.РезультатДоставки
	//                      |ИЗ
	//                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ПО СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеЗаказа.СрезПоследних(
	//                      |				,
	//                      |				Заказ В
	//                      |					(ВЫБРАТЬ
	//                      |						ВТ_Статусы.Заказ КАК Заказ
	//                      |					ИЗ
	//                      |						ВТ_Статусы КАК ВТ_Статусы)) КАК МестонахождениеЗаказаСрезПоследних
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = МестонахождениеЗаказаСрезПоследних.Заказ
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(
	//                      |				,
	//                      |				Заказ В
	//                      |					(ВЫБРАТЬ
	//                      |						ВТ_Статусы.Заказ КАК Заказ
	//                      |					ИЗ
	//                      |						ВТ_Статусы КАК ВТ_Статусы)) КАК СостоянияЗаказовСрезПоследних
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = СостоянияЗаказовСрезПоследних.Заказ
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_Итоги.Заказ КАК Заказ,
	//                      |	ВТ_Итоги.ТекущийСтатус КАК ТекущийСтатус,
	//                      |	ВЫБОР
	//                      |		КОГДА НЕ ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин ЕСТЬ NULL
	//                      |				И ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	//                      |			ТОГДА ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин
	//                      |		ИНАЧЕ ВТ_Итоги.Контрагент
	//                      |	КОНЕЦ КАК КонтрагентРодитель,
	//                      |	ВТ_Итоги.СкладВозврата КАК СкладВозврата,
	//                      |	ВТ_Итоги.Регион КАК Регион,
	//                      |	ВТ_Итоги.ТипЗаказа КАК ТипЗаказа,
	//                      |	МАКСИМУМ(ВТ_Итоги.ЕстьНаТСД) КАК ЕстьНаТСД,
	//                      |	ВТ_Итоги.КоличествоМестТовара КАК КоличествоМестТовара,
	//                      |	ВТ_Итоги.Дата КАК Дата,
	//                      |	ВТ_Итоги.ЗаказНомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	//                      |	ВТ_Итоги.ЗаказНомер КАК ЗаказНомер,
	//                      |	ВТ_Итоги.УбогийЗаказ КАК УбогийЗаказ,
	//                      |	ВТ_Итоги.Контрагент КАК Контрагент,
	//                      |	ВТ_Итоги.РезультатДоставки КАК РезультатДоставки
	//                      |ИЗ
	//                      |	ВТ_Итоги КАК ВТ_Итоги
	//                      |ГДЕ
	//                      |	ВТ_Итоги.Заказ.ТерминалПриема = &Терминал
	//                      |	И ВТ_Итоги.УбогийЗаказ = &УбогийЗаказ
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	ВТ_Итоги.ТипЗаказа,
	//                      |	ВТ_Итоги.ТекущийСтатус,
	//                      |	ВТ_Итоги.ЗаказНомер,
	//                      |	ВТ_Итоги.Заказ,
	//                      |	ВТ_Итоги.ЗаказНомерВнешнегоЗаказа,
	//                      |	ВТ_Итоги.Регион,
	//                      |	ВТ_Итоги.Дата,
	//                      |	ВТ_Итоги.СкладВозврата,
	//                      |	ВТ_Итоги.КоличествоМестТовара,
	//                      |	ВТ_Итоги.УбогийЗаказ,
	//                      |	ВЫБОР
	//                      |		КОГДА НЕ ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин ЕСТЬ NULL
	//                      |				И ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	//                      |			ТОГДА ВТ_Итоги.Контрагент.Родитель.ОсновнойМагазин
	//                      |		ИНАЧЕ ВТ_Итоги.Контрагент
	//                      |	КОНЕЦ,
	//                      |	ВТ_Итоги.Контрагент,
	//                      |	ВТ_Итоги.РезультатДоставки");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК ВладелецТовара,
	|	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_СтатусыКрайние
	|ИЗ
	|	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	|ГДЕ
	|	СтатусыСкладскогоУчета.Период >= &ДатаНач
	|	И (СтатусыСкладскогоУчета.Заказ.ВладелецТовара = &Контр
	|			ИЛИ СтатусыСкладскогоУчета.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин = &Контр)
	|	И СтатусыСкладскогоУчета.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыСкладскогоУчета.Заказ,
	|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	|	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период,
	|	ВЫБОР
	|		КОГДА СтатусыЗаказов.Период ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Выполнен,
	|	ВТ_СтатусыКрайние.ВладелецТовара КАК ВладелецТовара
	|ПОМЕСТИТЬ ВТ_СтатусыВсе
	|ИЗ
	|	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатусыКрайние КАК ВТ_СтатусыКрайние
	|		ПО (СтатусыСкладскогоУчета.Период >= &ДатаНач)
	|			И СтатусыСкладскогоУчета.Заказ = ВТ_СтатусыКрайние.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|		ПО СтатусыСкладскогоУчета.Заказ = СтатусыЗаказов.Заказ
	|			И (СтатусыСкладскогоУчета.СтатусСкладскогоУчета В (&ВозвратныеСтатусы))
	|			И (СтатусыЗаказов.Статус = 301)
	|			И (НЕ СтатусыСкладскогоУчета.ТипЗаказа В (&ВозвратыОбмены))
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыСкладскогоУчета.Заказ,
	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	|	ВЫБОР
	|		КОГДА СтатусыЗаказов.Период ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВТ_СтатусыКрайние.ВладелецТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СтатусыВсе.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_ЗаказыМимо
	|ИЗ
	|	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
	|ГДЕ
	|	(ВТ_СтатусыВсе.СтатусСкладскогоУчета В (&СтатусыМинус)
	|			ИЛИ ВТ_СтатусыВсе.Выполнен = ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыКонтрагентовСрезПоследних.Контрагент КАК Контрагент,
	|	ПараметрыКонтрагентовСрезПоследних.УчетЗаказовПоМестам КАК УчетЗаказовПоМестам
	|ПОМЕСТИТЬ ВТ_ПараметрыКонтрагентов
	|ИЗ
	|	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(
	|			,
	|			Контрагент В
	|				(ВЫБРАТЬ
	|					ВТ_СтатусыКрайние.ВладелецТовара КАК ВладелецТовара
	|				ИЗ
	|					ВТ_СтатусыКрайние КАК ВТ_СтатусыКрайние)) КАК ПараметрыКонтрагентовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СтатусыВсе.Заказ КАК Заказ,
	|	МАКСИМУМ(ВТ_СтатусыВсе.Период) КАК Период,
	|	ВТ_СтатусыВсе.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_ПараметрыКонтрагентов.УчетЗаказовПоМестам, ЛОЖЬ)
	|					И МестаПоЗаказам.Ссылка ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК УбогийЗаказ
	|ПОМЕСТИТЬ ВТ_СписокЗаказов
	|ИЗ
	|	ВТ_СтатусыВсе КАК ВТ_СтатусыВсе
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
	|		ПО ВТ_СтатусыВсе.Заказ = МестаПоЗаказам.Заказ
	|			И (МестаПоЗаказам.ПометкаУдаления = ЛОЖЬ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыМимо КАК ВТ_ЗаказыМимо
	|		ПО ВТ_СтатусыВсе.Заказ = ВТ_ЗаказыМимо.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыКонтрагентов КАК ВТ_ПараметрыКонтрагентов
	|		ПО ВТ_СтатусыВсе.ВладелецТовара = ВТ_ПараметрыКонтрагентов.Контрагент
	|ГДЕ
	|	ВТ_СтатусыВсе.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
	|	И ВТ_ЗаказыМимо.Заказ ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СтатусыВсе.Заказ,
	|	ВТ_СтатусыВсе.СтатусСкладскогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СписокЗаказов.Заказ КАК Заказ,
	|	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	|	ВТ_СписокЗаказов.УбогийЗаказ КАК УбогийЗаказ
	|ПОМЕСТИТЬ ВТ_Статусы
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	|			ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
	|				И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатусыКрайние КАК ВТ_СтатусыКрайние
	|			ПО ВТ_СписокЗаказов.Заказ = ВТ_СтатусыКрайние.Заказ
	|				И ВТ_СписокЗаказов.Период = ВТ_СтатусыКрайние.Период
	|		ПО (ВТ_СписокЗаказов.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ)
	|ГДЕ
	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
	|	И НЕ СтатусыСкладскогоУчета.ТипЗаказа В (&ВозвратыОбмены)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СписокЗаказов.Заказ,
	|	СтатусыСкладскогоУчета.ТипЗаказа,
	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	|	ВТ_СписокЗаказов.УбогийЗаказ
	|ИЗ
	|	ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	|		ПО ВТ_СписокЗаказов.Заказ = СтатусыСкладскогоУчета.Заказ
	|			И ВТ_СписокЗаказов.Период = СтатусыСкладскогоУчета.Период
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатусыКрайние КАК ВТ_СтатусыКрайние
	|		ПО ВТ_СписокЗаказов.Заказ = ВТ_СтатусыКрайние.Заказ
	|			И ВТ_СписокЗаказов.Период = ВТ_СтатусыКрайние.Период
	|ГДЕ
	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета В(&ВозвратныеСтатусы)
	|	И СтатусыСкладскогоУчета.ТипЗаказа В(&ВозвратыОбмены)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияЗаказовСрезПоследних.Заказ КАК Заказ,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки
	|ПОМЕСТИТЬ ВТ_СостоянияЗаказов
	|ИЗ
	|	РегистрСведений.СостоянияЗаказов.СрезПоследних(
	|			,
	|			Заказ В
	|				(ВЫБРАТЬ
	|					ВТ_Статусы.Заказ КАК Заказ
	|				ИЗ
	|					ВТ_Статусы КАК ВТ_Статусы)) КАК СостоянияЗаказовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
	|	ВЫБОР
	|		КОГДА НЕ СтатусыСкладскогоУчета.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин ЕСТЬ NULL
	|				И СтатусыСкладскогоУчета.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА СтатусыСкладскогоУчета.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин
	|		ИНАЧЕ СтатусыСкладскогоУчета.Заказ.ВладелецТовара
	|	КОНЕЦ КАК КонтрагентРодитель,
	|	ДополнительныеПараметрыЗаказа.СкладМагазина КАК СкладВозврата,
	|	СтатусыСкладскогоУчета.Заказ.ТерминалПриема КАК Регион,
	|	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	|	НЕ ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL КАК ЕстьНаТСД,
	|	СтатусыСкладскогоУчета.Заказ.КоличествоМест КАК КоличествоМестТовара,
	|	СтатусыСкладскогоУчета.Заказ.Дата КАК Дата,
	|	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	|	СтатусыСкладскогоУчета.Заказ.Номер КАК ЗаказНомер,
	|	СтатусыСкладскогоУчета.УбогийЗаказ КАК УбогийЗаказ,
	|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
	|	ВТ_СостоянияЗаказов.РезультатДоставки КАК РезультатДоставки
	|ИЗ
	|	ВТ_Статусы КАК СтатусыСкладскогоУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ПО СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СостоянияЗаказов КАК ВТ_СостоянияЗаказов
	|		ПО СтатусыСкладскогоУчета.Заказ = ВТ_СостоянияЗаказов.Заказ
	|ГДЕ
	|	СтатусыСкладскогоУчета.Заказ.ТерминалПриема = &Терминал
	|	И СтатусыСкладскогоУчета.УбогийЗаказ = &УбогийЗаказ";
	//Асеев 22.01.2021 (Задача № 4429)<<<
		
	ТипыЗагрузки = Новый СписокЗначений;
    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFi);
    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute);
	ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом);
    Запрос.УстановитьПараметр("ТипЗагрузкиТСД", ТипыЗагрузки);	
	Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-3));
	//Запрос.УстановитьПараметр("ДатаНач", '20220101');//тест
	Запрос.УстановитьПараметр("Контр", Контр);
	Запрос.УстановитьПараметр("Терминал", Терминал);
	Запрос.УстановитьПараметр("УбогийЗаказ", Убогие);
	СтатусыМинус = новый Массив;
	СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратОтправлен"));
	СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином"));
	СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ПодготовленКВозврату"));
	// МАС - 16.02.2018 - № --->> 
	СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ЗаказНеВозвратный"));
	// <<--- МАС 
	//// МАС - 02.03.2018 - ЭКСПЕРИМЕНТ --->> 
	//СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ЗаказВыполнен"));
	//// <<--- МАС
	Запрос.УстановитьПараметр("СтатусыМинус", СтатусыМинус);
	ВозвратныеСтатусы = новый Массив;
	ВозвратныеСтатусы.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат1"));
	ВозвратныеСтатусы.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат2"));
	Запрос.УстановитьПараметр("ВозвратныеСтатусы", ВозвратныеСтатусы);

	ВозвратыОбмены = Новый Массив;
	ВозвратыОбмены.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЗаказов.Возврат"));
	ВозвратыОбмены.Добавить(ПредопределенноеЗначение("Перечисление.ТипыЗаказов.Обмен"));
	Запрос.УстановитьПараметр("ВозвратыОбмены", ВозвратыОбмены);
	
	
	Возврат Запрос.Выполнить().Выгрузить();		
	
	
Конецфункции


&НаКлиенте
Процедура СписокПодготовкиВозвратовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокПодготовкиВозвратовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//ТекДанные = Элементы.СписокПодготовкиВозвратов.ТекущиеДанные;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьКВозврату(Команда)
	
	ЗаполнитьВозвратыНаСервере(Терминал);	
	//Элементы.СписокПодготовкиВозвратов.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура СменитьСтатус(Команда)
	
	//ТекДанные = Элементы.Список.ТекущиеДанные;
	//Парам = Новый Структура;
	//Парам.Вставить("ДокВозврат", ТекДанные.Ссылка);
	//Парам.Вставить("ДокВозврат", ТекДанные.Ссылка);
	//Парам.Вставить("ДокВозврат", ТекДанные.Ссылка);

	//ОткрытьФорму("Документ.УстановкаСтатусовСкладскогоУчета.ФормаОбъекта", , ЭтаФорма);
	
	
КонецПроцедуры


Процедура УстановитьСтатусПоВозврату(ДокВозврат, НовыйСтатус)
	
	ДокУстановкаСтатусов = Документы.ГрупповаяУстановкаСтатусовСкладскогоУчета.СоздатьДокумент();
	ДокУстановкаСтатусов.Дата = ТекущаяДата();
	ДокУстановкаСтатусов.Основание = ДокВозврат;
	ДокУстановкаСтатусов.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	ДокУстановкаСтатусов.СтатусСкладскогоУчета = НовыйСтатус;
	
	ДокУстановкаСтатусов.ТерминалОбработки = Терминал; // Задача № 3047 
	
	ТЗЗаказы = ДокВозврат.Товары.Выгрузить();	
	ТЗЗаказы.Свернуть("Заказ, ТипЗаказа");
	
	Для каждого Стр Из ТЗЗаказы Цикл	
		НСтр = ДокУстановкаСтатусов.СтатусыЗаказов.Добавить();	
		НСтр.Заказ = Стр.Заказ;
		НСтр.СтатусСкладскогоУчета = НовыйСтатус;
		НСтр.ТипЗаказа = Стр.ТипЗаказа	
	КонецЦикла;
	
	ДокУстановкаСтатусов.Записать(РежимЗаписиДокумента.Запись);
	ДокУстановкаСтатусов.Записать(РежимЗаписиДокумента.Проведение);
	
	Элементы.Список.Обновить(); 

КонецПроцедуры


&НаКлиенте
Процедура РасформироватьОтправку(Команда)
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные.ТекущийСтатус = ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином") Тогда
		Сообщить("Нельзя расформировать отправление. Возврат принят магазином");	
	Иначе
		ОО = Новый ОписаниеОповещения("ТочноРасформироватьОтправкуПослеОтвета", ЭтаФорма, Новый Структура("ОтправкаСсылка", ТекДанные.Ссылка));	
		ПоказатьВопрос(ОО, "Вы уверены, что хотите расформировать отправку?", РежимДиалогаВопрос.ДаНет);
		
		//РасформироватьОтправлениеНаСервере(ТекДанные.Ссылка);	
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура ТочноРасформироватьОтправкуПослеОтвета(Результат, Парам) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда		
		РасформироватьОтправлениеНаСервере(Парам.ОтправкаСсылка);
	КонецЕсли;		

КонецПроцедуры


&НаСервере
Процедура РасформироватьОтправлениеНаСервере(ДокВозврат)
	
	// Распроводим и помечаем документ возврат
	ВозвратОбъект = ДокВозврат.ПолучитьОбъект();
	ВозвратОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	ВозвратОбъект.ПометкаУдаления = Истина;
	ВозвратОбъект.ОтправлениеРасформировано = Истина;
	ВозвратОбъект.Комментарий = ВозвратОбъект.Комментарий + " (Отправление расформировано " + ТекущаяДата() + ")";
	ВозвратОбъект.Записать();			
	
	//распроводим связанные статусы. Вообще, по правильному, эти статусы надо не распроводить а перебить предыдущим статусам, но это на потом, сейчас нет времени
	
	Зап = Новый Запрос;
	зап.Текст = "ВЫБРАТЬ
	            |	ГрупповаяУстановкаСтатусовСкладскогоУчета.Ссылка КАК Док
	            |ИЗ
	            |	Документ.ГрупповаяУстановкаСтатусовСкладскогоУчета КАК ГрупповаяУстановкаСтатусовСкладскогоУчета
	            |ГДЕ
	            |	ГрупповаяУстановкаСтатусовСкладскогоУчета.Основание.Ссылка = &Возврат
	            |	И ГрупповаяУстановкаСтатусовСкладскогоУчета.Проведен = ИСТИНА";
	Зап.УстановитьПараметр("Возврат", ДокВозврат.Ссылка);
	
	Выб = Зап.Выполнить().Выбрать();
	Пока Выб.Следующий() Цикл
		Д = Выб.Док.ПолучитьОбъект();
		Д.Проведен = Ложь;
		Д.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЦикла;	
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НаборнаяВедомостьДляВозврата.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.НаборнаяВедомостьДляВозврата КАК НаборнаяВедомостьДляВозврата
	                      |ГДЕ
	                      |	НаборнаяВедомостьДляВозврата.ВозвратПоставщику = &ВозвратПоставщику
	                      |	И НаборнаяВедомостьДляВозврата.НовыйМеханизм = ИСТИНА
	                      |	И НаборнаяВедомостьДляВозврата.ПометкаУдаления = ЛОЖЬ");
	Запрос.УстановитьПараметр("ВозвратПоставщику", ДокВозврат);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда		
		НаборкаОбъект = Рез.Ссылка.ПолучитьОбъект();	
		НаборкаОбъект.Проведен = Ложь;
		НаборкаОбъект.ПометкаУдаления = Истина;
		НаборкаОбъект.Записать(РежимЗаписиДокумента.Запись);		
	КонецЕсли;
	
	Элементы.Список.Обновить();

КонецПроцедуры


&НаСервере
Процедура ТерминалПриИзмененииНаСервере()
	
	СписокПодготовкиВозвратов.Очистить();		
	МагистральныеВозвраты.Очистить();	
	//ЗаполнитьВозвратыНаСервере();
	//Элементы.СписокПодготовкиВозвратов.Обновить();
	//+Степанов
	УстановитьПараметрыДинамическихСписковФормы();
	//-Степанов
	ЗаполнитьВозвратыНаСервере(Терминал);	
	
КонецПроцедуры

&НаКлиенте
Процедура ТерминалПриИзменении(Элемент)
	
	ТерминалПриИзмененииНаСервере();
	
КонецПроцедуры


//Асеев 20.01.2021 (по письму Re: Оптимизация 1с)>>>
&НаКлиенте
Процедура ПослеВыбораФайлаЛокальная(Результат, АдресВХ, ПомещаемыйФайл, ДополнительныеПараметры) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСПрикрепленнымиФайламиКлиент.ПослеВыбораФайла(Результат, АдресВХ, ПомещаемыйФайл, ДополнительныеПараметры);
	
	УстановитьВозвращенВИМ();
		
	Элементы.Список.Обновить();
	
КонецПроцедуры
//Асеев 20.01.2021 (по письму Re: Оптимизация 1с)<<<

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//CeHbKA 31.07.2019 #3319 
	Если Поле.Имя = "ПрикрепитьФайл" Тогда
		
		//Асеев 21.06.2022 (Задача № 4821)>>>
		//Если НЕ ПроверитьВозвратПоставщику(Элемент.ТекущиеДанные.Ссылка) Тогда
		//	ПоказатьПредупреждение(,"Нельзя прикрепить файл к пустому документу!");
		//	Возврат;
		//КонецЕсли; 
		РезультатПроверки = ПроверитьВозвратПоставщику(Элемент.ТекущиеДанные.Ссылка);
		Если Не (РезультатПроверки.ЕстьРеализация Или РезультатПроверки.ЭтоВнесистемныйВозврат) Тогда
			ПоказатьПредупреждение(,"Нельзя прикрепить файл к пустому документу!");
			Возврат;
		КонецЕсли;
		//Асеев 21.06.2022 (Задача № 4821)<<<
		
		Д = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		
		Д.ПолноеИмяФайла = "";
		Фильтр = "Документы PDF" 
		+ "(*.pdf)|*.pdf";
		Д.Фильтр = Фильтр;
		Д.МножественныйВыбор = Ложь;
		Д.Заголовок = "Выберите документ";
		Д.Каталог = "\\192.168.5.144\ScanSklad";
		КаталогПеремещения = "\\192.168.5.144\ScanArh";
		//Д.Каталог = "\\192.168.5.144\aseev.m\out";//тест
		//КаталогПеремещения = "\\192.168.5.144\aseev.m\in";//тест
		
		//Асеев 20.01.2021 (по письму Re: Оптимизация 1с)>>>
		//ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораФайла", РаботаСПрикрепленнымиФайламиКлиент, Новый Структура("Каталог, Документ, РасширениеФайла, КаталогПеремещения, ТипДокумента, Форма", Д.Каталог, Элемент.ТекущиеДанные.Ссылка, "pdf", КаталогПеремещения, ПредопределенноеЗначение("Справочник.ТипыПрикрепленныхДокументов.НакладнаяНаВозврат"), ЭтаФорма));
		//Асеев 21.06.2022 (Задача № 4821)>>>
		//ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораФайлаЛокальная", ЭтотОбъект, Новый Структура("Каталог, Документ, РасширениеФайла, КаталогПеремещения, ТипДокумента", Д.Каталог, Элемент.ТекущиеДанные.Ссылка, "pdf", КаталогПеремещения, ПредопределенноеЗначение("Справочник.ТипыПрикрепленныхДокументов.НакладнаяНаВозврат"), ЭтаФорма));
		ДопПараметры = Новый Структура("Каталог, Документ, РасширениеФайла, КаталогПеремещения, ТипДокумента", Д.Каталог, Элемент.ТекущиеДанные.Ссылка, "pdf", КаталогПеремещения, ПредопределенноеЗначение("Справочник.ТипыПрикрепленныхДокументов.НакладнаяНаВозврат"));
		Если РезультатПроверки.ЭтоВнесистемныйВозврат Тогда
			ДопПараметры.Вставить("ФайлБезЗаказов", Истина);
			ДопПараметры.Вставить("ИнтернетМагазин", РезультатПроверки.ИнтернетМагазин);
		КонецЕсли;
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораФайлаЛокальная", ЭтотОбъект, ДопПараметры);
		//Асеев 21.06.2022 (Задача № 4821)<<<
		//Асеев 20.01.2021 (по письму Re: Оптимизация 1с)<<<
		
		НачатьПомещениеФайла(ОписаниеОповещения,,Д,Истина,ЭтаФорма.УникальныйИдентификатор);
		
	ИначеЕсли Поле.Имя = "КоличествоФото" Тогда
		
		Если Элементы.Список.ТекущиеДанные.КоличествоФото = "" Тогда		
			Возврат;
		КонецЕсли;
		
		//СписокФайлов = ПолучитьСписокЗначенийПрикрепленныеФайлы(Элемент.ТекущиеДанные.Ссылка);		
		
		//CeHbKA 05.08.2020
		//СписокФайлов = РаботаСПрикрепленнымиФайламиСервер.ПолучитьСписокЗначенийПрикрепленныеФайлы(Элемент.ТекущиеДанные.Ссылка);		
		//CeHbKA 05.08.2020
		
		//CeHbKA 15.01.2020
		ДокСсылка = Элемент.ТекущиеДанные.Ссылка;
		АдресВХ = РаботаСПрикрепленнымиФайламиСервер.ПолучитьСписокЗначенийПрикрепленныеФайлы(ДокСсылка);		
		СписокФайлов = ПолучитьИзВременногоХранилища(АдресВХ);
		//CeHbKA 15.01.2020
		
		Если СписокФайлов.Количество() > 1 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораФайлаДляПросмотра", ЭтаФорма);
			СписокФайлов.ПоказатьВыборЭлемента(ОписаниеОповещения,"Выберите файл");
		Иначе
			ПослеВыбораФайлаДляПросмотра(СписокФайлов[0], Неопределено);
		КонецЕсли; 
		
		//Ф = ПолучитьФорму("ОбщаяФорма.РаботаСФотографиями");
		//Ф.Заказ = ПредопределенноеЗначение("Документ.РеализацияТоваровУслуг.ПустаяСсылка");
		//Ф.Документ = Элемент.ТекущиеДанные.Ссылка;
		//Ф.ТипПрикрепляемыхДокументов = ПредопределенноеЗначение("Справочник.ТипыПрикрепленныхДокументов.НакладнаяНаВозврат");
		//Ф.Открыть();
	ИначеЕсли Поле.Имя = "ИндексКартинки" Тогда
		
		Если Элементы.Список.ТекущиеДанные.ИндексКартинки = 0 Тогда
			ПараметрыПрикреплённыхФайлов = Новый Структура("Документ", Элементы.Список.ТекущиеДанные.Ссылка); 
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбновлениеДанныхСпискаВозвратов", ЭтаФорма);
			ОткрытьФорму("Обработка.РаботаСПрикрепленнымиФайлами.Форма.Форма",ПараметрыПрикреплённыхФайлов,ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		КонецЕсли; 
		
	Иначе	
		ОткрытьФорму("Документ.ВозвратТоваровПоставщику.Форма.ФормаДокументаУпр", Новый Структура("Ключ", Элементы.Список.ТекущиеДанные.Ссылка), ЭтаФорма);	
	КонецеСли;	
	//CeHbKA 31.07.2019 #3319 
	
КонецПроцедуры

//CeHbKA 10.09.2019 #3319 
//CeHbKA 10.09.2019 #3319 

&НаСервереБезКонтекста
Функция ПроверитьВозвратПоставщику(Знач ДокументСсылка)

	//Асеев 21.06.2022 (Задача № 4821)>>>
	//ЕстьРеализация = Ложь;
	//
	//Для каждого СтрокаТовары Из ДокументСсылка.Товары Цикл
	//	
	//	Если НЕ СтрокаТовары.Реализация.Пустая() Тогда			
	//		ЕстьРеализация = Истина;
	//		Прервать;
	//	КонецЕсли; 
	//	
	//КонецЦикла; 

	//Возврат ЕстьРеализация;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВозвратТоваровПоставщику.ТипВозврата = ЗНАЧЕНИЕ(Справочник.ТипыВозврата.ВнесистемныйВозврат) КАК ЭтоВнесистемныйВозврат,
	|	ВозвратТоваровПоставщику.Контрагент КАК ИнтернетМагазин,
	|	НЕ ВозвратТоваровПоставщикуТовары.Ссылка ЕСТЬ NULL КАК ЕстьРеализация
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ПО ВозвратТоваровПоставщику.Ссылка = ВозвратТоваровПоставщикуТовары.Ссылка
	|			И (ВозвратТоваровПоставщикуТовары.Реализация <> ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка))
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Новый Структура("ЭтоВнесистемныйВозврат,ЕстьРеализация,ИнтернетМагазин", Выборка.ЭтоВнесистемныйВозврат, Выборка.ЕстьРеализация, Выборка.ИнтернетМагазин);
	
	//Асеев 21.06.2022 (Задача № 4821)<<<
	
КонецФункции // ()
 

&НаКлиенте
Процедура ОбновлениеДанныхСпискаВозвратов(Результат, ДопПараметры) Экспорт

	Если ОбновитьСписокВозвратов Тогда
		Элементы.Список.Обновить();	
		ОбновитьСписокВозвратов = Ложь;
	КонецЕсли; 

КонецПроцедуры // ()
 
&НаКлиенте
Процедура ПослеВыбораФайлаДляПросмотра(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт 

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ИмяВрФайла = ПолучитьИмяВременногоФайла(".pdf");	
	
	ПолучитьФайл(ВыбранныйЭлемент.Значение, ИмяВрФайла, Ложь);
	
	ЗапуститьПриложение(ИмяВрФайла);
	
	
КонецПроцедуры // ()
 
&НаСервере
Функция ПолучитьСписокЗначенийПрикрепленныеФайлы(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПрикрепленныеФайлы.Данные КАК Файл
		|ПОМЕСТИТЬ ВТ_ПрикрепленныеФайлы
		|ИЗ
		|	РегистрСведений.ПрикрепленныеФайлы КАК ПрикрепленныеФайлы
		|ГДЕ
		|	ПрикрепленныеФайлы.Документ = &ДокументСсылка
		|	И ПрикрепленныеФайлы.Данные <> Значение(Справочник.ПрикрепленныеФайлы.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПрикрепленныеФайлы.Файл КАК Файл,
		|	ЕСТЬNULL(СостоянияПрикрепленныхФайловСрезПоследних.СостояниеФайла, Значение(Перечисление.СостоянияПрикрепленныхФайлов.ФайлДобавлен)) КАК Состояние
		|ИЗ
		|	ВТ_ПрикрепленныеФайлы КАК ВТ_ПрикрепленныеФайлы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПрикрепленныхФайлов.СрезПоследних(
		|				,
		|				ПрикрепленныйФайл В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ПрикрепленныеФайлы.Файл КАК Файл
		|					ИЗ
		|						ВТ_ПрикрепленныеФайлы КАК ВТ_ПрикрепленныеФайлы)) КАК СостоянияПрикрепленныхФайловСрезПоследних
		|		ПО ВТ_ПрикрепленныеФайлы.Файл = СостоянияПрикрепленныхФайловСрезПоследних.ПрикрепленныйФайл";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокФайлов = Новый СписокЗначений;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.Состояние = Перечисления.СостоянияПрикрепленныхФайлов.ФайлУдален Тогда
			Продолжить;
		КонецЕсли; 
		
		ДД = ВыборкаДетальныеЗаписи.Файл.Данные.Получить();		
		СписокФайлов.Добавить(ПоместитьВоВременноеХранилище(ДД), ВыборкаДетальныеЗаписи.Файл.Наименование);
		
	КонецЦикла;
	
	СписокФайловНовый = ПолучитьСписокЗначенийПрикрепленныеФайлы_Новая(ДокументСсылка);		
	
	//CeHbKA 17.06.2020
	Для каждого СтрокаСЗ из СписокФайловНовый цикл
		НС = СписокФайлов.Добавить();
		ЗаполнитьЗначенияСвойств(НС, СтрокаСЗ);
	КонецЦикла;
	//CeHbKA 17.06.2020
	
	Возврат СписокФайлов;

КонецФункции // ()

//CeHbKA #3931 27.04.2020
&НаСервере
Функция ПолучитьСписокЗначенийПрикрепленныеФайлы_Новая(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПрикрепленныеФайлы.ИдентификаторВнешнихДанных КАК ИдентификаторВнешнихДанных
		|ПОМЕСТИТЬ ВТ_ПрикрепленныеФайлы
		|ИЗ
		|	РегистрСведений.ПрикрепленныеФайлы КАК ПрикрепленныеФайлы
		|ГДЕ
		|	ПрикрепленныеФайлы.Документ = &ДокументСсылка
		|	И ПрикрепленныеФайлы.ИдентификаторВнешнихДанных <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПрикрепленныеФайлы.ИдентификаторВнешнихДанных КАК ИдентификаторВнешнихДанных,
		|	ЕСТЬNULL(СостоянияПрикрепленныхФайловСрезПоследних.СостояниеФайла, ЗНАЧЕНИЕ(Перечисление.СостоянияПрикрепленныхФайлов.ФайлДобавлен)) КАК Состояние
		|ИЗ
		|	ВТ_ПрикрепленныеФайлы КАК ВТ_ПрикрепленныеФайлы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПрикрепленныхФайлов.СрезПоследних(
		|				,
		|				ИдентификаторВнешнихДанных В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ПрикрепленныеФайлы.ИдентификаторВнешнихДанных КАК ИдентификаторВнешнихДанных
		|					ИЗ
		|						ВТ_ПрикрепленныеФайлы КАК ВТ_ПрикрепленныеФайлы)) КАК СостоянияПрикрепленныхФайловСрезПоследних
		|		ПО ВТ_ПрикрепленныеФайлы.ИдентификаторВнешнихДанных = СостоянияПрикрепленныхФайловСрезПоследних.ИдентификаторВнешнихДанных";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокID = Новый СписокЗначений;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.Состояние = Перечисления.СостоянияПрикрепленныхФайлов.ФайлУдален Тогда
			Продолжить;
		КонецЕсли; 
		
		СписокID.Добавить(ВыборкаДетальныеЗаписи.ИдентификаторВнешнихДанных);
		
		//ДД = ВыборкаДетальныеЗаписи.Файл.Данные.Получить();		
		//СписокФайлов.Добавить(ПоместитьВоВременноеХранилище(ДД), ВыборкаДетальныеЗаписи.Файл.Наименование);
		
	КонецЦикла;
	
	СписокТипыДокументов = Новый СписокЗначений();
	СписокТипыДокументов.Добавить(Справочники.ТипыПрикрепленныхДокументов.НакладнаяНаВозврат.Код);
	
	СписокФайлов = ВнешниеДанныеСервер.ПолучитьДанныеИзВнешнегоХранилища(СписокID, СписокТипыДокументов);
	
	Возврат СписокФайлов;

КонецФункции // ()
//CeHbKA #3931 27.04.2020



&НаКлиенте
Процедура НайтиВозврат(Команда)
		
	Подсказка = "Введите номер заказа";
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки", ЭтотОбъект);
	ПоказатьВводСтроки(Оповещение, "", Подсказка, 0, Ложь);
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВводаСтроки(Строка, Параметры) Экспорт
	
	//Асеев 04.03.2021 (по письму Re: Оптимизация 1с)>>>
	Если Не (Строка = Неопределено Или ПустаяСтрока(Строка)) Тогда
	//Если НЕ Строка = Неопределено Тогда
		//Асеев 04.03.2021 (по письму Re: Оптимизация 1с)>>>
		//СписокДокументов = НайтиДокиНаСервере(СокрЛП(Строка));
		//Отбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		//Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		//Отбор.Представление = "ПоискЗаказа";
		//Отбор.ПравоеЗначение = СписокДокументов;
		//Отбор.Использование = Истина;
		НайтиДокиНаСервере(СокрЛП(Строка));
		//Асеев 04.03.2021 (№ задачи Re: Оптимизация 1с)<<<
	КонецЕсли;	
	
КонецПроцедуры


&НаСервере
Процедура НайтиДокиНаСервере(НомерЗаказа)

	//Асеев 04.03.2021 (по письму Re: Оптимизация 1с)>>>
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	ВозвратТоваровПоставщикуТовары.Ссылка КАК Ссылка
	//                      |ИЗ
	//                      |	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	//                      |ГДЕ
	//                      |	ВозвратТоваровПоставщикуТовары.Реализация.Номер = &Номер");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратТоваровПоставщикуТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (РеализацияТоваровУслуг.Номер = &Номер)
	|			И ВозвратТоваровПоставщикуТовары.Реализация = РеализацияТоваровУслуг.Ссылка";
	Запрос.УстановитьПараметр("Номер", НомерЗаказа);
	//Рез = Запрос.Выполнить().Выбрать();
	
	Спис = Новый СписокЗначений;
	Спис.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	//Пока Рез.Следующий() Цикл	
	//	Спис.Добавить(Рез.Ссылка);				
	//КонецЦикла;
	
	//Возврат Спис;
	Отбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	Отбор.Представление = "ПоискЗаказа";
	Отбор.ПравоеЗначение = Спис;
	Отбор.Использование = Истина;
	//Асеев 04.03.2021 (№ задачи Re: Оптимизация 1с)<<<
	
КонецПроцедуры


&НаКлиенте
Процедура ОтменитьПоиск(Команда)
	
	ОтменитьПоискНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьПоискНаСервере()

	Для каждого Стр Из Список.Отбор.Элементы Цикл
		Если Стр.Представление = "ПоискЗаказа" Тогда			
			Стр.Использование = Ложь;		
		КонецЕсли;	
	КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура ПереданНаДоставкуВИМ(Команда)
	
	//ТекЗнач = Элементы.Список.ТекущаяСтрока;
	ТекЗнач = Элементы.Список.ТекущиеДанные;
	Если ТекЗнач <> Неопределено Тогда
		МассивДокументов = Новый Массив;
		МассивДокументов.Добавить(ТекЗнач.Ссылка);
		РаботаСВозвратамиСервер.УстановитьСтатусОтправки(МассивДокументов, ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратОтправлен"));
		
		//УстановитьСтатусОтправки(ТекЗнач, ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратОтправлен"));
		Элементы.Список.Обновить();
	КонецЕсли;		
	
КонецПроцедуры


//Процедура УстановитьСтатусОтправки(ТекЗнач, Статус)
//	
//	// МАС - 09.01.2018 - № --->> 
//	ОбъектВозврат = ТекЗнач.ПолучитьОбъект();
//	ОбъектВозврат.СтатусВозврата = Статус;
//	ОбъектВозврат.Записать(РежимЗаписиДокумента.Запись);
//	ОбъектВозврат.Записать(РежимЗаписиДокумента.Проведение);
//	// <<--- МАС
//	
//	// Якурнов: Отправляем данные в Озон 
//	// >>>>>>>> Начало 30.10.2018 16:27:53 >>>>>>>>
//	Если Статус = Справочники.СтатусыСкладскогоУчета.ВозвратОтправлен Тогда
//		ОбъектВозврат.oz_ОтправитьДанныеВозвратовВОзон();
//	КонецЕсли;	
//	// <<<<<<<< Конец 30.10.2018 16:27:53 <<<<<<<<
//	
//	ЕСли Статус = Справочники.СтатусыСкладскогоУчета.ПодготовленКВозврату Тогда
//		ДокументОбъектГУССУ = Документы.ГрупповаяУстановкаСтатусовСкладскогоУчета.СоздатьДокумент();
//		ДокументОбъектГУССУ.Дата = ТекущаяДата();
//		ДокументОбъектГУССУ.Основание = ТекЗнач;
//		ДокументОбъектГУССУ.Ответственный = ПараметрыСеанса.ТекущийПользователь;
//		ДокументОбъектГУССУ.СтатусСкладскогоУчета = Статус;
//		
//		Выборка = ПолучитьДанныеЗаказы(ТекЗнач);
//		Пока Выборка.Следующий() Цикл
//			СтрокаТЧ = ДокументОбъектГУССУ.СтатусыЗаказов.Добавить();
//			ЗаполнитьЗначенияСвойств(СтрокаТЧ,Выборка);
//			СтрокаТЧ.СтатусСкладскогоУчета = Статус;
//		КонецЦикла;
//		
//		ДокументОбъектГУССУ.Записать(РежимЗаписиДокумента.Проведение);
//	КонецеСли;
//КонецПроцедуры


//Функция ПолучитьДанныеЗаказы(ДокСсылка)
//    
//    Запрос = Новый Запрос;
//    Запрос.Текст = 
//        "ВЫБРАТЬ
//        |   ВозвратТоваровПоставщикуТовары.Ссылка.СтатусВозврата КАК СтатусСкладскогоУчета,
//        |   РеализацияТоваровУслуг.Ссылка КАК Заказ,
//        |   ВозвратТоваровПоставщикуТовары.ТипЗаказа КАК ТипЗаказа
//        |ИЗ
//        |   Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
//        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
//        |       ПО (ЕСТЬNULL(ВозвратТоваровПоставщикуТовары.ДокументПоступления.Номер, ВозвратТоваровПоставщикуТовары.ВозвратТоваровОтПокупателя.Номер) = РеализацияТоваровУслуг.Номер)
//        |ГДЕ
//        |   ВозвратТоваровПоставщикуТовары.Ссылка.Ссылка = &Ссылка
//        |
//        |СГРУППИРОВАТЬ ПО
//        |   ВозвратТоваровПоставщикуТовары.Ссылка.СтатусВозврата,
//        |   РеализацияТоваровУслуг.Ссылка,
//        |   ВозвратТоваровПоставщикуТовары.ТипЗаказа";
//    
//    Запрос.УстановитьПараметр("Ссылка", ДокСсылка);
//    
//    РезультатЗапроса = Запрос.Выполнить();
//    
//    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//    Возврат ВыборкаДетальныеЗаписи;


//КонецФункции 

//Асеев 20.01.2021 (по письму Re: Оптимизация 1с)>>>
&НаКлиенте
Функция УстановитьВозвращенВИМ()
	
	РезультатВыполнения = Ложь;
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ТекДанные.ТекущийСтатус <> ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином") Тогда
		МассивДокументов = Новый Массив;
		МассивДокументов.Добавить(ТекДанные.Ссылка);
		РаботаСВозвратамиСервер.УстановитьСтатусОтправки(МассивДокументов, ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином"));
		//УстановитьСтатусОтправки(ТекДанные.Ссылка, ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином"));
		РезультатВыполнения = Истина;
	КонецЕсли;
	
	Возврат РезультатВыполнения;
	
КонецФункции
//Асеев 20.01.2021 (по письму Re: Оптимизация 1с)<<<

&НаКлиенте
Процедура ВозвращенВИМ(Команда)
	
	//ТекЗнач = Элементы.Список.ТекущаяСтрока;
	//Если ТекЗнач <> Неопределено Тогда
	//	УстановитьСтатусОтправки(ТекЗнач, ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином"));
	//	Элементы.Список.Обновить();
	//КонецЕсли;	
	
	//Асеев 20.01.2021 (по письму Re: Оптимизация 1с)>>>
	//ТекДанные = Элементы.Список.ТекущиеДанные;
	//Если ТекДанные <> Неопределено И ТекДанные.ТекущийСтатус <> ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином") Тогда
	//	МассивДокументов = Новый Массив;
	//	МассивДокументов.Добавить(ТекДанные.Ссылка);
	//	РаботаСВозвратамиСервер.УстановитьСтатусОтправки(МассивДокументов, ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином"));
	//	//УстановитьСтатусОтправки(ТекДанные.Ссылка, ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином"));
	//	Элементы.Список.Обновить();
	//КонецЕсли;
	Если УстановитьВозвращенВИМ() Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	//Асеев 20.01.2021 (по письму Re: Оптимизация 1с)<<<
	
КонецПроцедуры


&НаКлиенте
Процедура ПодготовленКВозврату(Команда)
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ТекДанные.ТекущийСтатус <> ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином") Тогда
		МассивДокументов = Новый Массив;
		МассивДокументов.Добавить(ТекДанные.Ссылка);
		РаботаСВозвратамиСервер.УстановитьСтатусОтправки(МассивДокументов, ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ПодготовленКВозврату"));
		
		//УстановитьСтатусОтправки(ТекДанные.Ссылка, ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ПодготовленКВозврату"));
		Элементы.Список.Обновить();
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьДанные(Команда)
	
	Элементы.Список.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьМагистраль(Команда)
	
	ЗаполнитьВозвратыНаМагистраль(Терминал);		
	
	Для каждого Стр Из МагистральныеВозвраты Цикл		
		Стр.СоздатьВозврат = Истина;	
	КонецЦикла;
	
КонецПроцедуры


Процедура ЗаполнитьВозвратыНаМагистраль(ТекТерминал = Неопределено)

	
	ТекВр = ТекущаяДата();	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СтатусыСкладскогоУчета.Период КАК Период,
	                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ
	                      |ПОМЕСТИТЬ ВТ_РегЗаписи
	                      |ИЗ
	                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	                      |ГДЕ
	                      |	СтатусыСкладскогоУчета.Период >= &ДатаНач
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_РегЗаписи.Заказ КАК Заказ,
	                      |	МАКСИМУМ(ВТ_РегЗаписи.Период) КАК Период
	                      |ПОМЕСТИТЬ ВТ_срез
	                      |ИЗ
	                      |	ВТ_РегЗаписи КАК ВТ_РегЗаписи
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_РегЗаписи.Заказ
	                      |
	                      |ИНДЕКСИРОВАТЬ ПО
	                      |	Заказ,
	                      |	Период
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_срез.Заказ КАК Заказ,
	                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета
	                      |ПОМЕСТИТЬ ВТ_Статусы
	                      |ИЗ
	                      |	ВТ_срез КАК ВТ_срез
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	                      |		ПО ВТ_срез.Заказ = СтатусыСкладскогоУчета.Заказ
	                      |			И ВТ_срез.Период = СтатусыСкладскогоУчета.Период
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	                      |		ПО (ВТ_срез.Заказ.Ссылка = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	                      |ГДЕ
	                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_срез.Заказ,
	                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	                      |	СтатусыСкладскогоУчета.ТипЗаказа
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
	                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
	                      |	ДополнительныеПараметрыЗаказа.СкладМагазина КАК СкладВозврата,
	                      |	1 КАК Кол,
	                      |	ВЫБОР
	                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	                      |			ТОГДА 1
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК НеВскрытые,
	                      |	ВЫБОР
	                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2)
	                      |			ТОГДА 1
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК Вскрытые,
	                      |	СтатусыСкладскогоУчета.Заказ.ТерминалДоставки КАК Регион,
	                      |	МестонахождениеЗаказаСрезПоследних.Терминал КАК ТерминалМестонахождения
	                      |ПОМЕСТИТЬ ВТ_Итоги
	                      |ИЗ
	                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	                      |		ПО (СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
	                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод)
	                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеЗаказа.СрезПоследних КАК МестонахождениеЗаказаСрезПоследних
	                      |		ПО СтатусыСкладскогоУчета.Заказ = МестонахождениеЗаказаСрезПоследних.Заказ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_Итоги.Заказ КАК Заказ
	                      |ПОМЕСТИТЬ ВТ_НаМагистраль
	                      |ИЗ
	                      |	ВТ_Итоги КАК ВТ_Итоги
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПеремещениеЗаказов.Заказы КАК ВнутреннееПеремещениеЗаказовЗаказы
	                      |		ПО ВТ_Итоги.Заказ = ВнутреннееПеремещениеЗаказовЗаказы.Заказ
	                      |			И (ВнутреннееПеремещениеЗаказовЗаказы.Ссылка.Проведен)
	                      |			И (ВнутреннееПеремещениеЗаказовЗаказы.КОтправлению)
	                      |			И ВТ_Итоги.Заказ.ТерминалПриема = ВнутреннееПеремещениеЗаказовЗаказы.Ссылка.ТерминалПолучения
	                      |			И ВТ_Итоги.Заказ.ТерминалДоставки = ВнутреннееПеремещениеЗаказовЗаказы.Ссылка.ТерминалОтправки
	                      |ГДЕ
	                      |	ВнутреннееПеремещениеЗаказовЗаказы.Ссылка ЕСТЬ НЕ NULL 
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_Итоги.Регион КАК Регион,
	                      |	ВТ_Итоги.Контрагент КАК Партнер,
	                      |	ВТ_Итоги.СкладВозврата КАК СкладВозвратаПартнера,
	                      |	СУММА(ВТ_Итоги.Кол) КАК ЗаказовКВозврату,
	                      |	СУММА(ВТ_Итоги.Вскрытые) КАК Вскрытые,
	                      |	СУММА(ВТ_Итоги.НеВскрытые) КАК НеВскрытые,
	                      |	ВТ_Итоги.СкладВозврата.ОграниченияПоВозвратам КАК Ограничения,
	                      |	ВТ_Итоги.СкладВозврата.ГрафикРаботы КАК График,
	                      |	ВЫБОР
	                      |		КОГДА ВТ_Итоги.Заказ.ТерминалДоставки <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	                      |				И ВТ_Итоги.Заказ.ТерминалПриема <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	                      |				И ВТ_Итоги.Заказ.ТерминалДоставки <> ВТ_Итоги.Заказ.ТерминалПриема
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК Магистраль
	                      |ПОМЕСТИТЬ ВТ_ИтогиМагистраль
	                      |ИЗ
	                      |	ВТ_Итоги КАК ВТ_Итоги
	                      |ГДЕ
	                      |	ВЫБОР
	                      |			КОГДА ВТ_Итоги.Заказ.ТерминалДоставки <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	                      |					И ВТ_Итоги.Заказ.ТерминалПриема <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	                      |					И ВТ_Итоги.Заказ.ТерминалДоставки <> ВТ_Итоги.Заказ.ТерминалПриема
	                      |				ТОГДА ВТ_Итоги.ТерминалМестонахождения = &Терминал
	                      |						И ВТ_Итоги.Заказ.ТерминалПриема <> &Терминал
	                      |			ИНАЧЕ ВТ_Итоги.Регион <> &Терминал
	                      |		КОНЕЦ
	                      |	И НЕ ВТ_Итоги.Заказ В
	                      |				(ВЫБРАТЬ
	                      |					ВТ_НаМагистраль.Заказ
	                      |				ИЗ
	                      |					ВТ_НаМагистраль КАК ВТ_НаМагистраль)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_Итоги.Регион,
	                      |	ВТ_Итоги.Контрагент,
	                      |	ВТ_Итоги.СкладВозврата,
	                      |	ВТ_Итоги.СкладВозврата.ОграниченияПоВозвратам,
	                      |	ВТ_Итоги.СкладВозврата.ГрафикРаботы,
	                      |	ВЫБОР
	                      |		КОГДА ВТ_Итоги.Заказ.ТерминалДоставки <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	                      |				И ВТ_Итоги.Заказ.ТерминалПриема <> ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
	                      |				И ВТ_Итоги.Заказ.ТерминалДоставки <> ВТ_Итоги.Заказ.ТерминалПриема
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ИтогиМагистраль.Партнер КАК Партнер,
	                      |	СУММА(ВТ_ИтогиМагистраль.ЗаказовКВозврату) КАК ЗаказовКВозврату,
	                      |	ВТ_ИтогиМагистраль.Регион КАК Регион
	                      |ИЗ
	                      |	ВТ_ИтогиМагистраль КАК ВТ_ИтогиМагистраль
	                      |ГДЕ
	                      |	ВТ_ИтогиМагистраль.Магистраль = ИСТИНА
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_ИтогиМагистраль.Партнер,
	                      |	ВТ_ИтогиМагистраль.Регион");
	
	
	ТипыЗагрузки = Новый СписокЗначений;
    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFi);
    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute);
	ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом);
    Запрос.УстановитьПараметр("ТипЗагрузкиТСД", ТипыЗагрузки);	
	Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-3));
	//Запрос.УстановитьПараметр("ДатаНач", '20220101');//тест
	//Запрос.УстановитьПараметр("Терминал", ТекТерминал);
	Запрос.УстановитьПараметр("Терминал", Терминал);
	
	РезТЗ = Запрос.Выполнить().Выгрузить();
	
	
	МагистральныеВозвраты.Загрузить(РезТЗ);
	
	Элементы.МагистральныеВозвраты1.Обновить();


КонецПроцедуры


&НаКлиенте
Процедура СоздатьОтправкуНаМагистраль(Команда)
	
	СоздатьОтправкуНаМагистральНаСервере();
	
КонецПроцедуры


Процедура СоздатьОтправкуНаМагистральНаСервере()

	
	СписокКонтрагентов = Новый СписокЗначений;
	
	
	Для каждого Стр Из МагистральныеВозвраты Цикл
		
		Если Стр.СоздатьВозврат Тогда
		
			СписокКонтрагентов.Добавить(Стр.Партнер);	
		
		КонецЕсли;		
	
	КонецЦикла;
	
	
	Если СписокКонтрагентов.Количество() Тогда
	
		
	Иначе
		Сообщить("Не выбрана ни одна строка для создания возвратов");
	КонецЕсли;
	
	
	
	//ТекВр = ТекущаяДата();	
	//
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	СтатусыСкладскогоУчета.Период КАК Период,
	//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ
	//                      |ПОМЕСТИТЬ ВТ_РегЗаписи
	//                      |ИЗ
	//                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//                      |ГДЕ
	//                      |	СтатусыСкладскогоУчета.Период >= &ДатаНач
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_РегЗаписи.Заказ КАК Заказ,
	//                      |	МАКСИМУМ(ВТ_РегЗаписи.Период) КАК Период
	//                      |ПОМЕСТИТЬ ВТ_срез
	//                      |ИЗ
	//                      |	ВТ_РегЗаписи КАК ВТ_РегЗаписи
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	ВТ_РегЗаписи.Заказ
	//                      |
	//                      |ИНДЕКСИРОВАТЬ ПО
	//                      |	Заказ,
	//                      |	Период
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_срез.Заказ КАК Заказ,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета
	//                      |ПОМЕСТИТЬ ВТ_Статусы
	//                      |ИЗ
	//                      |	ВТ_срез КАК ВТ_срез
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//                      |		ПО ВТ_срез.Заказ = СтатусыСкладскогоУчета.Заказ
	//                      |			И ВТ_срез.Период = СтатусыСкладскогоУчета.Период
	//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ПО (ВТ_срез.Заказ.Ссылка = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	//                      |ГДЕ
	//                      |	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//                      |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	ВТ_срез.Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//                      |	СтатусыСкладскогоУчета.ТипЗаказа
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
	//                      |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
	//                      |	ДополнительныеПараметрыЗаказа.СкладМагазина КАК СкладВозврата,
	//                      |	ВЫБОР
	//                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//                      |			ТОГДА 1
	//                      |		ИНАЧЕ 0
	//                      |	КОНЕЦ КАК НеВскрытые,
	//                      |	ВЫБОР
	//                      |		КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2)
	//                      |			ТОГДА 1
	//                      |		ИНАЧЕ 0
	//                      |	КОНЕЦ КАК Вскрытые,
	//                      |	СтатусыСкладскогоУчета.Заказ.ТерминалПриема КАК Регион,
	//                      |	СтатусыСкладскогоУчета.Заказ.КоличествоМест КАК КоличествоМест
	//                      |ИЗ
	//                      |	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//                      |		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//                      |		ПО (СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	//                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//                      |				ИЛИ СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод)
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//                      |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//                      |ГДЕ
	//                      |	(СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 3
	//                      |			ИЛИ СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 4)");
	//
	//
	//ТипыЗагрузки = Новый СписокЗначений;
	//ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFi);
	//ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute);
	//ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом);
	//Запрос.УстановитьПараметр("ТипЗагрузкиТСД", ТипыЗагрузки);	
	//Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-3));                     
	//Запрос.УстановитьПараметр("Терминал", Терминал);
	//
	//РезТЗ = Запрос.Выполнить().Выгрузить();
	//
	//Если НЕ РезТЗ.Количество() Тогда	
	//	Сообщить("Нет заказов на магистраль");	
	//    Возврат;	
	//КонецЕсли;
	//
	//
	//// генерим отправку
	//ДокМаг = Документы.ВнутреннееПеремещениеЗаказов.СоздатьДокумент();
	//ДокМаг.Дата = ТекВр;
	//ДокМаг.ТерминалОтправки  = ЭтотОбъект.Терминал;
	//ДокМаг.ТерминалПолучения = ?(ЭтотОбъект.Терминал = ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.МоскваСтриж"), ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.СПбСтриж"), ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.МоскваСтриж"));
	//ДокМаг.Пользователь      = ПараметрыСеанса.ТекущийПользователь;
	//
	//Для каждого Стр Из РезТЗ Цикл	
	//	НСтр = ДокМаг.Заказы.Добавить();
	//	НСтр.Заказ          = Стр.Заказ;
	//	НСтр.КоличествоМест = Стр.КоличествоМест;	
	//	НСтр.КОтправлению   = Истина;
	//	НСтр.Отправлено     = Истина;
	//КонецЦикла;
	////ДокМаг.ОтправленНаМагистраль = Истина;
	//	
	//
	//ДокМаг.Записать(РежимЗаписиДокумента.Запись);
	//
	//Попытка	
	//	//ДокМаг.Записать(РежимЗаписиДокумента.Проведение);		
	//Исключение
	//КонецПопытки;
	

КонецПроцедуры


&НаКлиенте
Процедура СоздатьМагистральнуюНаборкуПоНеВскрытым(Команда)
	
	ЗаполнитьДок(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат1"), Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьМагистральнуюНаборкуПоВскрытым(Команда)
	
	ЗаполнитьДок(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат2"), Истина);
	
КонецПроцедуры


&НаСервере
Функция ПолучитьРезультатЗапросаДляМагистрали(СписокКонтрагентов)
	
	Запрос = Новый Запрос;
	//Асеев 25.01.2021 (Задача № 4429)>>>
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	СтатусыСкладскогоУчета.Период КАК Период,
	//	|	СтатусыСкладскогоУчета.Заказ КАК Заказ
	//	|ПОМЕСТИТЬ ВТ_РегЗаписи
	//	|ИЗ
	//	|	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//	|ГДЕ
	//	|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара В(&Контр)
	//	|	И СтатусыСкладскогоУчета.Период >= &ДатаНач
	//	|
	//	|ИНДЕКСИРОВАТЬ ПО
	//	|	Период,
	//	|	Заказ
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_РегЗаписи.Заказ КАК Заказ,
	//	|	МАКСИМУМ(ВТ_РегЗаписи.Период) КАК Период
	//	|ПОМЕСТИТЬ ВТ_срез
	//	|ИЗ
	//	|	ВТ_РегЗаписи КАК ВТ_РегЗаписи
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВТ_РегЗаписи.Заказ
	//	|
	//	|ИНДЕКСИРОВАТЬ ПО
	//	|	Заказ,
	//	|	Период
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_срез.Заказ КАК Заказ,
	//	|	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	//	|	ВТ_срез.Заказ.Номер КАК Номер,
	//	|	ВТ_срез.Заказ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа
	//	|ПОМЕСТИТЬ ВТ_Статусы
	//	|ИЗ
	//	|	ВТ_срез КАК ВТ_срез
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	//	|		ПО ВТ_срез.Заказ = СтатусыСкладскогоУчета.Заказ
	//	|			И ВТ_срез.Период = СтатусыСкладскогоУчета.Период
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	|		ПО (ВТ_срез.Заказ.Ссылка = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	//	|ГДЕ
	//	|	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
	//	|			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	//	|	И ВТ_срез.Заказ.ТерминалПриема <> ВТ_срез.Заказ.ТерминалДоставки
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВТ_срез.Заказ,
	//	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//	|	СтатусыСкладскогоУчета.ТипЗаказа,
	//	|	ВТ_срез.Заказ.Номер,
	//	|	ВТ_срез.Заказ.НомерВнешнегоЗаказа
	//	|
	//	|ИНДЕКСИРОВАТЬ ПО
	//	|	Заказ,
	//	|	Номер,
	//	|	НомерВнешнегоЗаказа
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_Статусы.Заказ КАК Заказ
	//	|ПОМЕСТИТЬ ВТ_НаМагистрале
	//	|ИЗ
	//	|	ВТ_Статусы КАК ВТ_Статусы
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПеремещениеЗаказов.Заказы КАК ВнутреннееПеремещениеЗаказовЗаказы
	//	|		ПО ВТ_Статусы.Заказ = ВнутреннееПеремещениеЗаказовЗаказы.Заказ
	//	|			И (ВнутреннееПеремещениеЗаказовЗаказы.КОтправлению)
	//	|			И (ВнутреннееПеремещениеЗаказовЗаказы.Ссылка.Проведен)
	//	|			И ВТ_Статусы.Заказ.ТерминалПриема = ВнутреннееПеремещениеЗаказовЗаказы.Ссылка.ТерминалПолучения
	//	|			И ВТ_Статусы.Заказ.ТерминалДоставки = ВнутреннееПеремещениеЗаказовЗаказы.Ссылка.ТерминалОтправки
	//	|ГДЕ
	//	|	ВнутреннееПеремещениеЗаказовЗаказы.Ссылка ЕСТЬ НЕ NULL 
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	//	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
	//	|	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
	//	|	СтатусыСкладскогоУчета.Заказ.Номер КАК ЗаказНомер,
	//	|	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.Дата КАК Дата,
	//	|	ДополнительныеПараметрыЗаказа.СкладМагазина КАК СкладВозврата,
	//	|	СтатусыСкладскогоУчета.Заказ.ТерминалДоставки КАК Регион,
	//	|	ВЫБОР
	//	|		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//	|			ТОГДА ЛОЖЬ
	//	|		ИНАЧЕ ИСТИНА
	//	|	КОНЕЦ КАК ЕстьНаТСД,
	//	|	СтатусыСкладскогоУчета.Заказ.КоличествоМест КАК КоличествоМестТовара,
	//	|	МестонахождениеЗаказаСрезПоследних.Терминал КАК ТерминалМестонахождения,
	//	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки
	//	|ПОМЕСТИТЬ ВТ_ИТОГ
	//	|ИЗ
	//	|	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//	|		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	|		ПО СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеЗаказа.СрезПоследних(
	//	|				,
	//	|				Заказ В
	//	|					(ВЫБРАТЬ
	//	|						ВТ_Статусы.Заказ КАК Заказ
	//	|					ИЗ
	//	|						ВТ_Статусы КАК ВТ_Статусы)) КАК МестонахождениеЗаказаСрезПоследних
	//	|		ПО СтатусыСкладскогоУчета.Заказ = МестонахождениеЗаказаСрезПоследних.Заказ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(
	//	|				,
	//	|				Заказ В
	//	|					(ВЫБРАТЬ
	//	|						ВТ_Статусы.Заказ КАК Заказ
	//	|					ИЗ
	//	|						ВТ_Статусы КАК ВТ_Статусы)) КАК СостоянияЗаказовСрезПоследних
	//	|		ПО СтатусыСкладскогоУчета.Заказ = СостоянияЗаказовСрезПоследних.Заказ
	//	|
	//	|ОБЪЕДИНИТЬ ВСЕ
	//	|
	//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	СтатусыСкладскогоУчета.Заказ,
	//	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//	|	СтатусыСкладскогоУчета.ТипЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара,
	//	|	СтатусыСкладскогоУчета.Заказ.Номер,
	//	|	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.Дата,
	//	|	ДополнительныеПараметрыЗаказа.СкладМагазина,
	//	|	СтатусыСкладскогоУчета.Заказ.ТерминалДоставки,
	//	|	ВЫБОР
	//	|		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//	|			ТОГДА ЛОЖЬ
	//	|		ИНАЧЕ ИСТИНА
	//	|	КОНЕЦ,
	//	|	СтатусыСкладскогоУчета.Заказ.КоличествоМест,
	//	|	МестонахождениеЗаказаСрезПоследних.Терминал,
	//	|	СостоянияЗаказовСрезПоследних.РезультатДоставки
	//	|ИЗ
	//	|	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//	|		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	|		ПО СтатусыСкладскогоУчета.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеЗаказа.СрезПоследних(
	//	|				,
	//	|				Заказ В
	//	|					(ВЫБРАТЬ
	//	|						ВТ_Статусы.Заказ КАК Заказ
	//	|					ИЗ
	//	|						ВТ_Статусы КАК ВТ_Статусы)) КАК МестонахождениеЗаказаСрезПоследних
	//	|		ПО СтатусыСкладскогоУчета.Заказ = МестонахождениеЗаказаСрезПоследних.Заказ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(
	//	|				,
	//	|				Заказ В
	//	|					(ВЫБРАТЬ
	//	|						ВТ_Статусы.Заказ КАК Заказ
	//	|					ИЗ
	//	|						ВТ_Статусы КАК ВТ_Статусы)) КАК СостоянияЗаказовСрезПоследних
	//	|		ПО СтатусыСкладскогоУчета.Заказ = СостоянияЗаказовСрезПоследних.Заказ
	//	|
	//	|ОБЪЕДИНИТЬ ВСЕ
	//	|
	//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	СтатусыСкладскогоУчета.Заказ,
	//	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
	//	|	СтатусыСкладскогоУчета.ТипЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара,
	//	|	СтатусыСкладскогоУчета.Заказ.Номер,
	//	|	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа,
	//	|	СтатусыСкладскогоУчета.Заказ.Дата,
	//	|	ДополнительныеПараметрыЗаказа.СкладМагазина,
	//	|	СтатусыСкладскогоУчета.Заказ.ТерминалДоставки,
	//	|	ВЫБОР
	//	|		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
	//	|			ТОГДА ЛОЖЬ
	//	|		ИНАЧЕ ИСТИНА
	//	|	КОНЕЦ,
	//	|	СтатусыСкладскогоУчета.Заказ.КоличествоМест,
	//	|	МестонахождениеЗаказаСрезПоследних.Терминал,
	//	|	СостоянияЗаказовСрезПоследних.РезультатДоставки
	//	|ИЗ
	//	|	ВТ_Статусы КАК СтатусыСкладскогоУчета
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//	|		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//	|		ПО СтатусыСкладскогоУчета.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	//	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеЗаказа.СрезПоследних(
	//	|				,
	//	|				Заказ В
	//	|					(ВЫБРАТЬ
	//	|						ВТ_Статусы.Заказ КАК Заказ
	//	|					ИЗ
	//	|						ВТ_Статусы КАК ВТ_Статусы)) КАК МестонахождениеЗаказаСрезПоследних
	//	|		ПО СтатусыСкладскогоУчета.Заказ = МестонахождениеЗаказаСрезПоследних.Заказ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(
	//	|				,
	//	|				Заказ В
	//	|					(ВЫБРАТЬ
	//	|						ВТ_Статусы.Заказ КАК Заказ
	//	|					ИЗ
	//	|						ВТ_Статусы КАК ВТ_Статусы)) КАК СостоянияЗаказовСрезПоследних
	//	|		ПО СтатусыСкладскогоУчета.Заказ = СостоянияЗаказовСрезПоследних.Заказ
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_ИТОГ.Заказ КАК Заказ,
	//	|	ВТ_ИТОГ.ТекущийСтатус КАК ТекущийСтатус,
	//	|	ВТ_ИТОГ.ТипЗаказа КАК ТипЗаказа,
	//	|	ВТ_ИТОГ.Контрагент КАК Контрагент,
	//	|	ВТ_ИТОГ.ЗаказНомер КАК ЗаказНомер,
	//	|	ВТ_ИТОГ.ЗаказНомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	//	|	ВТ_ИТОГ.Дата КАК Дата,
	//	|	ВТ_ИТОГ.СкладВозврата КАК СкладВозврата1,
	//	|	ВТ_ИТОГ.Регион КАК Регион,
	//	|	МАКСИМУМ(ВТ_ИТОГ.ЕстьНаТСД) КАК ЕстьНаТСД,
	//	|	ВТ_ИТОГ.КоличествоМестТовара КАК КоличествоМестТовара,
	//	|	МАКСИМУМ(РеализацияТоваровУслугТовары.СкладМагазина) КАК СкладВозврата,
	//	|	ВТ_ИТОГ.РезультатДоставки КАК РезультатДоставки
	//	|ИЗ
	//	|	ВТ_ИТОГ КАК ВТ_ИТОГ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	//	|		ПО ВТ_ИТОГ.Заказ = РеализацияТоваровУслугТовары.Ссылка
	//	|ГДЕ
	//	|	ВТ_ИТОГ.ТерминалМестонахождения = &Терминал
	//	|	И НЕ ВТ_ИТОГ.Заказ В
	//	|				(ВЫБРАТЬ
	//	|					ВТ_НаМагистрале.Заказ
	//	|				ИЗ
	//	|					ВТ_НаМагистрале КАК ВТ_НаМагистрале)
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВТ_ИТОГ.ТипЗаказа,
	//	|	ВТ_ИТОГ.ТекущийСтатус,
	//	|	ВТ_ИТОГ.Заказ,
	//	|	ВТ_ИТОГ.Контрагент,
	//	|	ВТ_ИТОГ.ЗаказНомер,
	//	|	ВТ_ИТОГ.ЗаказНомерВнешнегоЗаказа,
	//	|	ВТ_ИТОГ.Дата,
	//	|	ВТ_ИТОГ.СкладВозврата,
	//	|	ВТ_ИТОГ.Регион,
	//	|	ВТ_ИТОГ.КоличествоМестТовара,
	//	|	ВТ_ИТОГ.РезультатДоставки";
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатусыСкладскогоУчета.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	|ГДЕ
	|	СтатусыСкладскогоУчета.Период >= &ДатаНач
	|	И СтатусыСкладскогоУчета.Заказ.ВладелецТовара В(&Контр)
	|	И СтатусыСкладскогоУчета.СтатусСкладскогоУчета В (ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1), ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	|	ВТ_Заказы.Заказ.ТерминалПриема КАК ТерминалПриема,
	|	ВТ_Заказы.Заказ.ТерминалДоставки КАК ТерминалДоставки,
	|	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_срез
	|ИЗ
	|	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО (ВТ_Заказы.Заказ.ТерминалПриема <> ВТ_Заказы.Заказ.ТерминалДоставки)
	|			И (СтатусыСкладскогоУчета.Период >= &ДатаНач)
	|			И СтатусыСкладскогоУчета.Заказ = ВТ_Заказы.Заказ
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыСкладскогоУчета.Заказ,
	|	ВТ_Заказы.Заказ.ТерминалПриема,
	|	ВТ_Заказы.Заказ.ТерминалДоставки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_срез.Заказ КАК Заказ,
	|	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
	|	ВТ_срез.ТерминалПриема КАК ТерминалПриема,
	|	ВТ_срез.ТерминалДоставки КАК ТерминалДоставки
	|ПОМЕСТИТЬ ВТ_Статусы
	|ИЗ
	|	ВТ_срез КАК ВТ_срез
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	|		ПО ВТ_срез.Заказ = СтатусыСкладскогоУчета.Заказ
	|			И ВТ_срез.Период = СтатусыСкладскогоУчета.Период
	|			И (СтатусыСкладскогоУчета.СтатусСкладскогоУчета В (ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1), ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2)))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ПО ВТ_срез.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Статусы.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_НаМагистрале
	|ИЗ
	|	ВТ_Статусы КАК ВТ_Статусы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПеремещениеЗаказов.Заказы КАК ВнутреннееПеремещениеЗаказовЗаказы
	|		ПО ВТ_Статусы.Заказ = ВнутреннееПеремещениеЗаказовЗаказы.Заказ
	|			И (ВнутреннееПеремещениеЗаказовЗаказы.КОтправлению)
	|			И (ВнутреннееПеремещениеЗаказовЗаказы.Ссылка.Проведен)
	|			И ВТ_Статусы.ТерминалПриема = ВнутреннееПеремещениеЗаказовЗаказы.Ссылка.ТерминалПолучения
	|			И ВТ_Статусы.ТерминалДоставки = ВнутреннееПеремещениеЗаказовЗаказы.Ссылка.ТерминалОтправки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеЗаказаСрезПоследних.Заказ КАК Заказ,
	|	МестонахождениеЗаказаСрезПоследних.Терминал КАК Терминал
	|ПОМЕСТИТЬ ВТ_МестонахождениеЗаказа
	|ИЗ
	|	РегистрСведений.МестонахождениеЗаказа.СрезПоследних(
	|			,
	|			Заказ В
	|				(ВЫБРАТЬ
	|					ВТ_Статусы.Заказ КАК Заказ
	|				ИЗ
	|					ВТ_Статусы КАК ВТ_Статусы)) КАК МестонахождениеЗаказаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияЗаказовСрезПоследних.Заказ КАК Заказ,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки
	|ПОМЕСТИТЬ ВТ_СостоянияЗаказов
	|ИЗ
	|	РегистрСведений.СостоянияЗаказов.СрезПоследних(
	|			,
	|			Заказ В
	|				(ВЫБРАТЬ
	|					ВТ_Статусы.Заказ КАК Заказ
	|				ИЗ
	|					ВТ_Статусы КАК ВТ_Статусы)) КАК СостоянияЗаказовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатусыСкладскогоУчета.Заказ КАК Заказ,
	|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
	|	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
	|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
	|	СтатусыСкладскогоУчета.Заказ.Номер КАК ЗаказНомер,
	|	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
	|	СтатусыСкладскогоУчета.Заказ.Дата КАК Дата,
	|	СтатусыСкладскогоУчета.Заказ.ТерминалДоставки КАК Регион,
	|	НЕ ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL КАК ЕстьНаТСД,
	|	СтатусыСкладскогоУчета.Заказ.КоличествоМест КАК КоличествоМестТовара,
	|	РеализацияТоваровУслугТовары.СкладМагазина КАК СкладВозврата,
	|	ВТ_СостоянияЗаказов.РезультатДоставки КАК РезультатДоставки
	|ИЗ
	|	ВТ_Статусы КАК СтатусыСкладскогоУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ПО СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестонахождениеЗаказа КАК ВТ_МестонахождениеЗаказа
	|		ПО СтатусыСкладскогоУчета.Заказ = ВТ_МестонахождениеЗаказа.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СостоянияЗаказов КАК ВТ_СостоянияЗаказов
	|		ПО СтатусыСкладскогоУчета.Заказ = ВТ_СостоянияЗаказов.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НаМагистрале КАК ВТ_НаМагистрале
	|		ПО СтатусыСкладскогоУчета.Заказ = ВТ_НаМагистрале.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ПО СтатусыСкладскогоУчета.Заказ = РеализацияТоваровУслугТовары.Ссылка
	|			И (РеализацияТоваровУслугТовары.НомерСтроки = 1)
	|ГДЕ
	|	ВТ_МестонахождениеЗаказа.Терминал = &Терминал
	|	И ВТ_НаМагистрале.Заказ ЕСТЬ NULL";
	//Асеев 22.01.2021 (Задача № 4429)<<<
	
	ТипыЗагрузки = Новый СписокЗначений;
	ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFi);
	ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute);
	ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом);
	Запрос.УстановитьПараметр("ТипЗагрузкиТСД", ТипыЗагрузки);	
	Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-3));
	//Запрос.УстановитьПараметр("ДатаНач", '20220101');//тест
	Запрос.УстановитьПараметр("Контр", СписокКонтрагентов);
	Запрос.УстановитьПараметр("Терминал", Терминал);	
	
	Возврат Запрос.Выполнить().Выгрузить();		
	
		
Конецфункции


Функция ПроверитьНаличиеДанныхДляМагистрали(СписокКонтрагентов, Склад, Регион, ВозвратМ)
	
	
	ТабЗн = ПолучитьРезультатЗапросаДляМагистрали(СписокКонтрагентов);

	Отбор = Новый Структура;
	//Отбор.Вставить("СкладВозврата", Склад);
	Отбор.Вставить("Регион", Регион);
	Отбор.Вставить("ТекущийСтатус", ВозвратМ);
	КопияТаб = ТабЗн.Скопировать(Отбор);
	
	
	Если КопияТаб.Количество() Тогда		
		
		Док = Документы.НаборнаяВедомостьДляВозврата.СоздатьДокумент();
		Док.НовыйМеханизм = Истина;
		Док.Магистраль = Истина;
		
		//Асеев 20.05.2022 (Задача № 4809)>>>
		//Док.Вскрытые = ?(ВозвратМ = ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат2"), Истина, Ложь);
		Если ВозвратМ = Справочники.СтатусыСкладскогоУчета.Возврат1 Тогда
			Док.ТипВозврата = Справочники.ТипыВозврата.НеВскрытыеЗаказы;
		ИначеЕсли ВозвратМ = Справочники.СтатусыСкладскогоУчета.Возврат2 Тогда
			Док.ТипВозврата = Справочники.ТипыВозврата.ВскрытыеЗаказы;
			Док.Вскрытые = Истина;
		КонецЕсли;
		//Асеев 20.05.2022 (Задача № 4809)<<<
		
		//Док.ИнтернетМагазин = Контр;
		Док.СтатусВозврата = ВозвратМ;
		Док.Дата = ТекущаяДата();
		
		
		Для каждого СтКон Из СписокКонтрагентов Цикл		
			НСтр = Док.Контрагенты.Добавить();	
			НСтр.Контрагент = СтКон.Значение;
			
			ШКПоМестамТоварам = УчитыватьШКМестТоваровПоЗаказу(СтКон.Значение);
			Если ШКПоМестамТоварам.ШКПоМестам Тогда
				Док.ШКПоМестам = Истина;
			КонецЕсли;
		КонецЦикла;
		
		
		//ШКПоМестамТоварам = УчитыватьШКМестТоваровПоЗаказу(Контр);	
		//Док.ШКПоМестам    = ШКПоМестамТоварам.ШКПоМестам;
		//Док.ШКПоТоварам = Ложь;
		//Док.СкладМагазина = Склад;
		
		Док.ЗаполнитьСерверМ(КопияТаб, Ложь);
		МассивЗаказов = КопияТаб.ВыгрузитьКолонку("Заказ");
		Док.ЗаполнитьШтрихкоды(МассивЗаказов);		
		Если Док.ШКПоМестам Тогда	
			Док.ЗаполнитьМестаПоЗаказам(МассивЗаказов);		
		КонецЕсли;	
		
		Док.Записать(РежимЗаписиДокумента.Запись);
		//Док.Записать(РежимЗаписиДокумента.Проведение);  // ??? 
				
		Возврат Док.Ссылка;	
	Иначе	
		Возврат Неопределено;	
	КонецЕсли;
		

КонецФункции // ()


&НаКлиенте
Процедура ВозвратыСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Документ.ВозвратТоваровПоставщику.Форма.ФормаДокументаУпр", Новый Структура("Ключ", Элементы.ВозвратыСписок.ТекущаяСтрока), ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	Для каждого Стр Из МагистральныеВозвраты Цикл		
		Стр.СоздатьВозврат = Истина;	
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для каждого Стр Из МагистральныеВозвраты Цикл		
		Стр.СоздатьВозврат = Ложь;	
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьСкрытьМагистральныеНаборки(Команда)
	
	Элементы.СписокМагистральныхВозвратов.Видимость = НЕ Элементы.СписокМагистральныхВозвратов.Видимость;
	Элементы.ПоказатьСкрытьМагистральныеНаборки.Пометка = Элементы.СписокМагистральныхВозвратов.Видимость;
	
КонецПроцедуры


&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	//Если ТекущаяСтраница.Имя = "МагистральныеВозвраты" Тогда	
	//	ЗаполнитьВозвратыНаМагистраль(Терминал);	
	//КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьМагистральныеНаборки" Тогда
	
		Элементы.МагистральныеНаборки.Обновить();	
	
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьСправку(Команда)
	
	Строка = "";
	ОО = Новый ОписаниеОповещения("ПослеВводаНомера", ЭтаФорма, Новый Структура());	
	ПоказатьВводСтроки(ОО, Строка, "Введите номер заказа Стриж");	
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВводаНомера(Результат, Парам) Экспорт
	
	
	Если ЗначениеЗаполнено(Результат) Тогда
		ТабДок = новый ТабличныйДокумент;		
		Рез = ПолучитьДанныеПозаказуНаСервере(СокрЛП(Результат), ТабДок);		
		Если Рез Тогда			
			ТабДок.Защита = Истина;
			ТабДок.АвтоМасштаб = Истина;
			ТабДок.ОтображатьСетку = Ложь;		
			ТабДок.Показать();		
		Иначе	
			Сообщить("Нет данных по заказу. Проверьте корректность номера заказа");
		КонецЕсли;			
	Иначе		
		//Сообщить("Не заполнен номер заказа");
	КонецЕсли;
	

КонецПроцедуры


Функция ПолучитьДанныеПозаказуНаСервере(Номер, ТабДок)

	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	РеализацияТоваровУслуг.Ссылка КАК Ссылка
	                      |ПОМЕСТИТЬ ВТ
	                      |ИЗ
	                      |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	                      |ГДЕ
	                      |	РеализацияТоваровУслуг.Номер = &Номер
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ.Ссылка КАК Ссылка,
	                      |	МАКСИМУМ(ВЫБОР
	                      |			КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета ЕСТЬ NULL
	                      |				ТОГДА ЛОЖЬ
	                      |			ИНАЧЕ ИСТИНА
	                      |		КОНЕЦ) КАК ЕстьВозвратныйСтатус,
	                      |	МАКСИМУМ(ВЫБОР
	                      |			КОГДА СтатусыСкладскогоУчета1.СтатусСкладскогоУчета ЕСТЬ NULL
	                      |				ТОГДА ЛОЖЬ
	                      |			ИНАЧЕ ИСТИНА
	                      |		КОНЕЦ) КАК ЕстьСтатусМинус,
	                      |	МестонахождениеЗаказаСрезПоследних.Терминал КАК Терминал,
	                      |	ВТ.Ссылка.ТерминалПриема КАК ТерминалПриема,
	                      |	ВТ.Ссылка.ТерминалДоставки КАК ТерминалДоставки,
	                      |	ЗакрытыеЗаказы.СтатусЗаказа КАК СтатусЗаказа,
	                      |	ВТ.Ссылка.ВладелецТовара КАК ИнтернетМагазин,
	                      |	ЗакрытыеЗаказы.ПричинаНевыполнения КАК ПричинаНевыполнения,
	                      |	ЗакрытыеЗаказы.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	                      |	ЗакрытыеЗаказы.СтатусИнтернетМагазина КАК СтатусИнтернетМагазина,
	                      |	ЕСТЬNULL(ЗакрытыеЗаказы.ТипЗаказа, СтатусыСкладскогоУчетаСрезПоследних.ТипЗаказа) КАК ТипЗаказа,
	                      |	ЗакрытыеЗаказы.Период КАК ДатаЗакрытия,
	                      |	ВЫБОР
	                      |		КОГДА СтатусыЗаказов.Период ЕСТЬ NULL
	                      |			ТОГДА ЛОЖЬ
	                      |		ИНАЧЕ ИСТИНА
	                      |	КОНЕЦ КАК Выполнен,
	                      |	ВЫБОР
	                      |		КОГДА ВТ.Ссылка.ТерминалПриема <> ВТ.Ссылка.ТерминалДоставки
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК Магистраль
	                      |ИЗ
	                      |	ВТ КАК ВТ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	                      |		ПО ВТ.Ссылка = СтатусыСкладскогоУчета.Заказ
	                      |			И (СтатусыСкладскогоУчета.СтатусСкладскогоУчета В (&ВозвратныеСтатусы))
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета1
	                      |		ПО ВТ.Ссылка = СтатусыСкладскогоУчета1.Заказ
	                      |			И (СтатусыСкладскогоУчета1.СтатусСкладскогоУчета В (&СтатусыМинус))
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеЗаказа.СрезПоследних КАК МестонахождениеЗаказаСрезПоследних
	                      |		ПО ВТ.Ссылка = МестонахождениеЗаказаСрезПоследних.Заказ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	                      |		ПО ВТ.Ссылка = СтатусыЗаказов.Заказ
	                      |			И (СтатусыЗаказов.Статус = 301)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	                      |		ПО (ВТ.Ссылка = ВЫРАЗИТЬ(ЗакрытыеЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета.СрезПоследних КАК СтатусыСкладскогоУчетаСрезПоследних
	                      |		ПО ВТ.Ссылка = СтатусыСкладскогоУчетаСрезПоследних.Заказ
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ.Ссылка,
	                      |	МестонахождениеЗаказаСрезПоследних.Терминал,
	                      |	ВТ.Ссылка.ТерминалПриема,
	                      |	ВТ.Ссылка.ТерминалДоставки,
	                      |	ЗакрытыеЗаказы.СтатусЗаказа,
	                      |	ЗакрытыеЗаказы.ПричинаНевыполнения,
	                      |	ЗакрытыеЗаказы.ПричинаОтклоненияЗаказа,
	                      |	ЗакрытыеЗаказы.СтатусИнтернетМагазина,
	                      |	ЗакрытыеЗаказы.Период,
	                      |	ВЫБОР
	                      |		КОГДА СтатусыЗаказов.Период ЕСТЬ NULL
	                      |			ТОГДА ЛОЖЬ
	                      |		ИНАЧЕ ИСТИНА
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА ВТ.Ссылка.ТерминалПриема <> ВТ.Ссылка.ТерминалДоставки
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ,
	                      |	ВТ.Ссылка.ВладелецТовара,
	                      |	ЕСТЬNULL(ЗакрытыеЗаказы.ТипЗаказа, СтатусыСкладскогоУчетаСрезПоследних.ТипЗаказа)");
	Запрос.УстановитьПараметр("Номер", Номер);	
	СтатусыМинус = новый Массив;
	СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратОтправлен"));
	СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином"));
	СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ПодготовленКВозврату"));
	СтатусыМинус.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ЗаказНеВозвратный"));
	Запрос.УстановитьПараметр("СтатусыМинус", СтатусыМинус);	
	ВозвратныеСтатусы = новый Массив;
	ВозвратныеСтатусы.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат1"));
	ВозвратныеСтатусы.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат2"));
	Запрос.УстановитьПараметр("ВозвратныеСтатусы", ВозвратныеСтатусы);
	
	Рез = Запрос.Выполнить().Выбрать();	
	
	Если Рез.Следующий() Тогда
		
		Макет = Обработки.РаботаСВозвратами.ПолучитьМакет("Макет");	
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовок.Параметры.Заказ = "" + Номер;
		ОбластьЗаголовок.Параметры.ИнтернетМагазин = Рез.ИнтернетМагазин;
		ТабДок.Вывести(ОбластьЗаголовок);	
		
				
		Если Рез.ЕстьВозвратныйСтатус Тогда
			ОбластьВозвратныйСтатус = Макет.ПолучитьОбласть("ВозвратныйСтатус_ЕСТЬ");		
		Иначе
			ОбластьВозвратныйСтатус = Макет.ПолучитьОбласть("ВозвратныйСтатус_НЕТ");
		КонецЕсли;	
		ТабДок.Вывести(ОбластьВозвратныйСтатус);
				
		ВывестиВозвратныеСтатусы = Ложь;	
		Если Рез.ЕстьСтатусМинус Тогда
			ОбластьСтатусМинус = Макет.ПолучитьОбласть("СтопСтатусы_ЕСТЬ");		
			ВывестиВозвратныеСтатусы = Истина;	
		Иначе
			ОбластьСтатусМинус = Макет.ПолучитьОбласть("СтопСтатусы_НЕТ");
		КонецЕсли;
		ТабДок.Вывести(ОбластьСтатусМинус);
		
		
		Если ВывестиВозвратныеСтатусы Тогда	
			ЗапросСтатусыМинус = Новый Запрос("ВЫБРАТЬ
			                                  |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета
			                                  |ИЗ
			                                  |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
			                                  |ГДЕ
			                                  |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета В(&СтатусыМинус)
			                                  |	И СтатусыСкладскогоУчета.Заказ.Номер = &Заказ");
			ЗапросСтатусыМинус.УстановитьПараметр("СтатусыМинус", СтатусыМинус);
			ЗапросСтатусыМинус.УстановитьПараметр("Заказ", Номер);
			РезСтатусыМинус = ЗапросСтатусыМинус.Выполнить().Выбрать();			
			
			Пока РезСтатусыМинус.Следующий() Цикл	
				Область_СтатусМинус = Макет.ПолучитьОбласть("СтопСтатусы_Статус");
				Область_СтатусМинус.Параметры.Статус = РезСтатусыМинус.СтатусСкладскогоУчета;
				ТабДок.Вывести(Область_СтатусМинус);
			КонецЦикла;		
		КонецЕсли;
				
		
		Если (Рез.ТипЗаказа = ПредопределенноеЗначение("Перечисление.ТипыЗаказов.Доставка") И НЕ Рез.Выполнен)
			ИЛИ (Рез.ТипЗаказа = ПредопределенноеЗначение("Перечисление.ТипыЗаказов.Возврат") И Рез.Выполнен)
			ИЛИ (Рез.ТипЗаказа = ПредопределенноеЗначение("Перечисление.ТипыЗаказов.Обмен") И Рез.Выполнен) Тогда		
			ОбластьВыполнениеТипЗаказа = Макет.ПолучитьОбласть("ВыполнениеТипЗаказа_ДА");				
		Иначе
		    ОбластьВыполнениеТипЗаказа = Макет.ПолучитьОбласть("ВыполнениеТипЗаказа_НЕТ");	
		КонецЕсли;	
		ОбластьВыполнениеТипЗаказа.Параметры.ТипЗаказа = Рез.ТипЗаказа;
		ОбластьВыполнениеТипЗаказа.Параметры.Выполнение = Рез.Выполнен;
		ТабДок.Вывести(ОбластьВыполнениеТипЗаказа);
						
		
		ОбластьТерминалы = Макет.ПолучитьОбласть("Терминалы");
		ОбластьТерминалы.Параметры.Заполнить(Рез);
		ТабДок.Вывести(ОбластьТерминалы);
		
		
		Если ЗначениеЗаполнено(Рез.ДатаЗакрытия) Тогда		
			ОбластьПараметрыЗакрытия = Макет.ПолучитьОбласть("ПараметрыЗакрытия");
			ОбластьПараметрыЗакрытия.Параметры.Заполнить(Рез);		
		Иначе
		    ОбластьПараметрыЗакрытия = Макет.ПолучитьОбласть("Параметры_НетЗакрытия");	
		КонецЕсли;	
		ТабДок.Вывести(ОбластьПараметрыЗакрытия);
		
		
		Возврат ИСТИНА;
	Иначе
		
		Возврат ЛОЖЬ;
		
	КонецЕсли;
	
	

КонецФункции // ()

&НаКлиенте
Процедура СписокВнутреннихПеремещенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Документ.ВнутреннееПеремещениеЗаказов.Форма.ФормаДокументаУпр", Новый Структура("Ключ", Элементы.СписокВнутреннихПеремещений.ТекущаяСтрока), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрупповаяОтправкаДМ(Команда)
	// Вставить содержимое обработчика.
	МассивСтрок = Элементы.Список.ВыделенныеСтроки;
	
	МассивВозвратов = Новый Массив;
	Для Каждого Строка Из МассивСтрок Цикл
		СтрокаСписка = Элементы.Список.ДанныеСтроки(Строка);
		МассивВозвратов.Добавить(СтрокаСписка.Ссылка);
	КонецЦикла;	
	
	ПроверкаОшибок = ПроверитьГрупповуюОтправкуДМНаСервере(МассивВозвратов);
	Если ПроверкаОшибок.ЕстьОшибки Тогда
		Для Каждого Тек Из ПроверкаОшибок.СписокОшибок Цикл
			Сообщить("Накладная " + Тек.НомерДокумента + ", " + Тек.ОписаниеОшибки, СтатусСообщения.ОченьВажное);
		КонецЦикла;	
		Возврат;
	КонецеСли;
	
	СписокВозвратов = Новый СписокЗначений;
	СписокВозвратов.ЗагрузитьЗначения(МассивВозвратов);
	Струк = Новый Структура;
	Струк.Вставить("СписокВозвратов", СписокВозвратов);
	
	ФормаДокумента = ПолучитьФорму("Документ.Транспортировка.Форма.ФормаДокумента", Струк, ЭтаФорма);
	ФормаДокумента.Открыть();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьГрупповуюОтправкуДМНаСервере(МассивВозвратов)
	Возврат РаботаСВозвратамиСервер.ПроверитьГрупповуюОтправкуДМНаСервере(МассивВозвратов);
КонецФункции	


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+Степанов 
	Элементы.Терминал.Доступность = РольДоступна("Админы") Или РольДоступна("ОперационныйДиректор");
	//-Степанов
	
	//Асеев 04.03.2021 (по письму Re: Оптимизация 1с)>>>
	//Список.Параметры.УстановитьЗначениеПараметра("ТекДата", НачалоДня(ТекущаяДата()));
	Сегодня = НачалоДня(ТекущаяДата());
	Список.Параметры.УстановитьЗначениеПараметра("ТекДата", Сегодня);
	Список.Параметры.УстановитьЗначениеПараметра("НачалоПериода", ДобавитьМесяц(Сегодня, -24));
	//Асеев 04.03.2021 (№ задачи Re: Оптимизация 1с)<<<
	
	ТекТерминал = ПолучитьТерминалПользователя();	
		
	Если НЕ ЗначениеЗаполнено(ТекТерминал) Тогда
		ТекТерминал = ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.МоскваСтриж");		
	КонецЕсли;	
	
	ЭтотОбъект.Терминал = ТекТерминал;	
	
	//+Степанов
	//Если НЕ ЗначениеЗаполнено(ТекТерминал) Тогда	
	//	ТекТерминал = Новый Массив;	
	//	ТекТерминал.Добавить(ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.МоскваСтриж"));
	//	ТекТерминал.Добавить(ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.СПбСтриж"));	
	//КонецЕсли;
	//Список.Параметры.УстановитьЗначениеПараметра("Терминал", ТекТерминал);
	//-Степанов
	//+Степанов
	УстановитьПараметрыДинамическихСписковФормы();
	//-Степанов
	
	//Асеев 17.05.2022 (Задача № 4801)>>>
	СкладыМагазинов.Параметры.УстановитьЗначениеПараметра("СкладНеИспользуется", Ложь);
	//Асеев 17.05.2022 (Задача № 4801)<<<
	
	ЗаполнитьВозвратыНаСервере(ТекТерминал);
	
КонецПроцедуры

//+Степанов
&НаСервере
Процедура УстановитьПараметрыДинамическихСписковФормы()
	Список.Параметры.УстановитьЗначениеПараметра("Терминал",Терминал);	
	МагистральныеНаборки.Параметры.УстановитьЗначениеПараметра("Терминал",Терминал);
	НаборныеСписок.Параметры.УстановитьЗначениеПараметра("Терминал",Терминал);
	ВозвратыСписок.Параметры.УстановитьЗначениеПараметра("Терминал",Терминал);
	СписокВнутреннихПеремещений.Параметры.УстановитьЗначениеПараметра("Терминал",Терминал);
	СписокВнутреннихПеремещений.Параметры.УстановитьЗначениеПараметра("Терминал",Терминал);
	Транспортировки.Параметры.УстановитьЗначениеПараметра("Терминал",Терминал);

КонецПроцедуры	

//Асеев 17.05.2022 (Задача № 4801)>>>
&НаСервере
Процедура СкладНеИспользуетсяПриИзмененииНаСервере()
	
	СкладыМагазинов.Параметры.УстановитьЗначениеПараметра("СкладНеИспользуется", Булево(СкладНеИспользуется));
	
КонецПроцедуры

&НаКлиенте
Процедура СкладНеИспользуетсяПриИзменении(Элемент)
	СкладНеИспользуетсяПриИзмененииНаСервере();
КонецПроцедуры
//Асеев 17.05.2022 (Задача № 4801)<<<

//Асеев 20.05.2022 (Задача № 4809)>>>
&НаСервере
Функция СоздатьНаборкуВнесистемныйВозврат(ДанныеЗаполнения)
	
	НаборкаОбъект = Документы.НаборнаяВедомостьДляВозврата.СоздатьДокумент();
	НаборкаОбъект.Дата = ТекущаяДата();
	ЗаполнитьЗначенияСвойств(НаборкаОбъект, ДанныеЗаполнения);
	НаборкаОбъект.ТерминалДоставки = Терминал;
	НаборкаОбъект.НовыйМеханизм = Истина;
	НаборкаОбъект.ТипВозврата = Справочники.ТипыВозврата.ВнесистемныйВозврат;
	НаборкаОбъект.Записать();
	Возврат НаборкаОбъект.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура СоздатьВнесистемныйВозврат(Команда)
	
	СтрокаСклада = Элементы.СкладыМагазинов.ТекущиеДанные;
	Если СтрокаСклада = Неопределено Или Не СтрокаСклада.Свойство("Ссылка") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура("ИнтернетМагазин,СкладМагазина", СтрокаСклада.Владелец, СтрокаСклада.Ссылка);
	
	ОткрытьЗначение(СоздатьНаборкуВнесистемныйВозврат(ДанныеЗаполнения));
	
КонецПроцедуры
//Асеев 20.05.2022 (Задача № 4809)<<<

//Асеев 01.03.2023 (Задача № 4999)>>>
&НаСервереБезКонтекста
Функция ПолучитьВозвратныеНакладные(Знач СкладМагазина)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ДобавитьМесяц(НачалоДня(ТекущаяДата()), -1));
	Запрос.УстановитьПараметр("СкладМагазина", СкладМагазина);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсторияСтатусовСкладскогоУчетаВозвратовПоставщикуСрезПоследних.ВозвратПоставщику КАК ВозвратПоставщику,
	|	ИсторияСтатусовСкладскогоУчетаВозвратовПоставщикуСрезПоследних.ВозвратПоставщику.Номер КАК Номер
	|ИЗ
	|	РегистрСведений.ИсторияСтатусовСкладскогоУчетаВозвратовПоставщику.СрезПоследних(
	|			,
	|			ВозвратПоставщику В
	|				(ВЫБРАТЬ
	|					ВозвратТоваровПоставщику.Ссылка КАК Ссылка
	|				ИЗ
	|					Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|				ГДЕ
	|					ВозвратТоваровПоставщику.Дата >= &Период
	|					И ВозвратТоваровПоставщику.СкладМагазина = &СкладМагазина
	|					И ВозвратТоваровПоставщику.ТипВозврата В (ЗНАЧЕНИЕ(Справочник.ТипыВозврата.ВскрытыеЗаказы), ЗНАЧЕНИЕ(Справочник.ТипыВозврата.НеВскрытыеЗаказы)))) КАК ИсторияСтатусовСкладскогоУчетаВозвратовПоставщикуСрезПоследних
	|ГДЕ
	|	ИсторияСтатусовСкладскогоУчетаВозвратовПоставщикуСрезПоследних.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ВозвратОтправлен)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ВозвратныеНакладные = Неопределено;
	Иначе
		ТаблицаРезультата = Результат.Выгрузить();
		
		ВозвратыПоставщику = ТаблицаРезультата.ВыгрузитьКолонку("ВозвратПоставщику");
		Номера = ТаблицаРезультата.ВыгрузитьКолонку("Номер");
		Номера = СтрСоединить(Номера, Символы.ПС);
		
		ВозвратныеНакладные = Новый Структура("ВозвратыПоставщику,НомераСтрокой,СкладМагазина", ВозвратыПоставщику, Номера, СкладМагазина);
		
	КонецЕсли;
	
	Возврат ВозвратныеНакладные;
	
КонецФункции

&НаКлиенте
Процедура СводПоСоставуВозврата(Команда)
	
	СтрокаСклада = Элементы.СкладыМагазинов.ТекущиеДанные;
	Если СтрокаСклада = Неопределено Или Не СтрокаСклада.Свойство("Ссылка") Тогда
		Возврат;
	КонецЕсли;
	
	ВозвратныеНакладные = ПолучитьВозвратныеНакладные(СтрокаСклада.Ссылка);
	Если ВозвратныеНакладные = Неопределено Тогда
		ПоказатьПредупреждение(, "Нет накладных в статусе ""Возврат отправлен""");
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = "Список накладных к отправке в своде:" + Символы.ПС + ВозвратныеНакладные.НомераСтрокой + Символы.ПС + "Отправить свод на адреса email склада партнера?";
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ВопросСводПоСоставуВозврата", ЭтотОбъект, ВозвратныеНакладные), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСводПоСоставуВозврата(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		РезультатФормирования = ОтправитьСводПоСоставуВозврата(ДополнительныеПараметры);
		Если ТипЗнч(РезультатФормирования) = Тип("Строка") Тогда
			Сообщить(РезультатФормирования);
		Иначе
			РезультатФормирования.Показать("Свод по составу возврата " + ДополнительныеПараметры.СкладМагазина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтправитьСводПоСоставуВозврата(Знач ВозвратныеНакладные)
	
	СкладМагазина = ВозвратныеНакладные.СкладМагазина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СкладМагазина", СкладМагазина);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СкладыМагазиновАдресаРассылкиУведомлений.Почта КАК Почта
	|ИЗ
	|	Справочник.СкладыМагазинов.АдресаРассылкиУведомлений КАК СкладыМагазиновАдресаРассылкиУведомлений
	|ГДЕ
	|	СкладыМагазиновАдресаРассылкиУведомлений.Ссылка = &СкладМагазина
	|	И СкладыМагазиновАдресаРассылкиУведомлений.Уведомлять
	|	И СкладыМагазиновАдресаРассылкиУведомлений.Почта ПОДОБНО ""%@%""";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат "Нет ни одного активного email склада магазина";
	КонецЕсли;
	
	МассивПолучателей = Результат.Выгрузить().ВыгрузитьКолонку("Почта");
	
	ДатаОтчета = ТекущаяДата();
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = Обработки.РаботаСВозвратами.ПолучитьМакет("СводПоСоставуВозврата");
	
	Запрос.УстановитьПараметр("ВозвратыПоставщику", ВозвратныеНакладные.ВозвратыПоставщику);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СкладыМагазинов.Владелец.НаименованиеПолное КАК Партнер,
	|	СкладыМагазинов.Наименование КАК Склад,
	|	СкладыМагазинов.Адрес КАК Адрес,
	|	СкладыМагазинов.Владелец КАК Контрагент
	|ИЗ
	|	Справочник.СкладыМагазинов КАК СкладыМагазинов
	|ГДЕ
	|	СкладыМагазинов.Ссылка = &СкладМагазина
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратТоваровПоставщикуТовары.Ссылка КАК ВозвратПоставщику,
	|	ВозвратТоваровПоставщикуТовары.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|ГДЕ
	|	ВозвратТоваровПоставщикуТовары.Ссылка В(&ВозвратыПоставщику)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.ВозвратПоставщику.Номер КАК НомерВН,
	|	ВТ_Заказы.Реализация.НомерВнешнегоЗаказа КАК НомерЗаказа,
	|	ВТ_Заказы.ВозвратПоставщику.ТипВозврата.Наименование КАК ТипВозврата,
	|	НаборнаяВедомостьДляВозвратаМестаПоЗаказам.Штрихкод КАК ШКГрузовогоМеста
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НаборнаяВедомостьДляВозврата.МестаПоЗаказам КАК НаборнаяВедомостьДляВозвратаМестаПоЗаказам
	|		ПО ВТ_Заказы.ВозвратПоставщику.Сделка = НаборнаяВедомостьДляВозвратаМестаПоЗаказам.Ссылка
	|			И ВТ_Заказы.Реализация = НаборнаяВедомостьДляВозвратаМестаПоЗаказам.Заказ
	|			И (НаборнаяВедомостьДляВозвратаМестаПоЗаказам.Подтверждено)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерВН,
	|	НомерЗаказа";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	ВыборкаШапка = РезультатПакета[0].Выбрать();
	ВыборкаШапка.Следующий();
	
	Область = Макет.ПолучитьОбласть("Шапка");
	ПараметрыОбласти = Область.Параметры;
	ПараметрыОбласти.Заполнить(ВыборкаШапка);
	ПараметрыОбласти.ДатаОтчета = ДатаОтчета;
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка");
	ПараметрыОбласти = Область.Параметры;
	
	Выборка = РезультатПакета[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		ПараметрыОбласти.Заполнить(Выборка);
		ТабДок.Вывести(Область);
	КонецЦикла;
	
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	
	ТемаПисьма = "Свод по составу возврата " + ВыборкаШапка.Склад + " " + Формат(ДатаОтчета, "ДФ=dd.MM.yyyy");
	ТекстПисьма = "Свод по составу возврата " + ВыборкаШапка.Склад + " " + ДатаОтчета;
	
	ИмяФайла = КаталогВременныхФайлов() + Формат(ДатаОтчета, "ДФ=ddMMyyyyHHmmss") + ".xls";
	
	ТабДок.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.XLS);
	
	ПараметрыЗаписи = ВнешнееЛогированиеСервер.ПараметрыЗаписиЛогаОтправкиОтчета(Справочники.ТипыОтправкиОтчетов.ОтчетПартнерамПочтойПользователь);
	ПараметрыЗаписи.ВидОтчета = Перечисления.ВидыОтправляемыхОтчетов.СводПоВозвратнымНакладным;
	//ПараметрыЗаписи.НастройкаОтправки = Настройка;
	ПараметрыЗаписи.Контрагент = ВыборкаШапка.Контрагент;
	ПараметрыЗаписи.ПериодФормирования = ДатаОтчета;
	ПараметрыЗаписи.ДвоичныеДанныеВыгрузки = Новый ДвоичныеДанные(ИмяФайла);
	ПараметрыЗаписи.GUID = Новый УникальныйИдентификатор;
	ПараметрыЗаписи.СписокПолучателей = СтрСоединить(МассивПолучателей, "; ");
	
	ТекстОшибки = "";
	ОбработкаUnion = Обработки.СТРИЖ_ИнтеграцияUniOne.Создать();
	Отпр = ОбработкаUnion.ОтправитьEMAIL_HTTP(МассивПолучателей, ТемаПисьма, ТекстПисьма, ИмяФайла, "Логистическая компания ""Стриж""",, ТипТекстаПочтовогоСообщения.ПростойТекст,, ТекстОшибки,,,, Ложь);
	
	ПараметрыЗаписи.ОтчетОтправлен = Отпр;
	ПараметрыЗаписи.ТекстОшибки = ТекстОшибки;
	ПараметрыЗаписи.ОператорРассылки = Справочники.ОператорыСМСРассылки.union.КлючДанныхТаблицыВнешнегоЛогирования;
	
	РезультатЛогирования = ВнешнееЛогированиеСервер.ЗаписатьСтрокуЛогаОтчетыКОтправке(ПараметрыЗаписи);
	
	Попытка
		УдалитьФайлы(ИмяФайла);
	Исключение
	КонецПопытки;
	
	Возврат ТабДок;
	
КонецФункции
//Асеев 01.03.2023 (Задача № 4999)<<<



