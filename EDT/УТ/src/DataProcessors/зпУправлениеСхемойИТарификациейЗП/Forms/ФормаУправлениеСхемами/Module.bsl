&НаКлиенте
Процедура ДобавитьСхему(Команда)
	
	ЗначениеОтбора = Новый Структура("Регион", Регион);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначениеОтбора);
	
	ОповещениеОЗакрытииФормы = Новый ОписаниеОповещения("ЗакрытиеФормыСхемыТарифа", ЭтаФорма);
	
	Форма = ОткрытьФорму("Справочник.зпСхемыРасчетаЗП.ФормаОбъекта", ПараметрыФормы, ЭтаФорма,,,, ОповещениеОЗакрытииФормы, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	Форма.Элементы.Регион.Доступность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТариф(Команда)
	
	ЗначениеОтбора = Новый Структура("Регион", Регион);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначениеОтбора);
	
	ОповещениеОЗакрытииФормы = Новый ОписаниеОповещения("ЗакрытиеФормыСхемыТарифа", ЭтаФорма);
	
	Форма = ОткрытьФорму("Справочник.зпТарифыРасчетаЗП.ФормаОбъекта", ПараметрыФормы, ЭтаФорма,,,, ОповещениеОЗакрытииФормы, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	Форма.Элементы.Регион.Доступность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеФормыСхемыТарифа(Результат, ДополнительныеПараметры) Экспорт
	ЗаполнитьТаблицы();	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
    Если Параметры.Свойство("Регион") Тогда
		Регион = Параметры.Регион;
    КонецЕсли;		
	Если Параметры.Свойство("СхемаРасчетаЗП") Тогда
		СхемаРасчетаЗП = Параметры.СхемаРасчетаЗП; 
    КонецЕсли;		
	Если Параметры.Свойство("ТарифРасчетаЗП") Тогда
		ТарифРасчетаЗП = Параметры.ТарифРасчетаЗП; 
    КонецЕсли;		
	ЗаполнитьТаблицы();
	УправлениеДоступностьюЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицы()
	
	ЗаполнитьТаблицыСхем();
	ЗаполнитьТаблицуТарифов(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыСхем()
	СхемыРасчетаЗарплатыТЗ.Очистить();
	Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	зпАктивнаяСхемаРасчетаЗПСрезПоследних.Период КАК Период,
	//|	зпСхемыРасчетаЗП.Ссылка КАК зпСхемыРасчетаЗП,
	//|	зпСхемыРасчетаЗП.Регион КАК Регион,
	//|	ВЫБОР
	//|		КОГДА зпАктивнаяСхемаРасчетаЗПСрезПоследних.Период ЕСТЬ NULL
	//|			ТОГДА ЛОЖЬ
	//|		ИНАЧЕ ИСТИНА
	//|	КОНЕЦ КАК Актуальность
	//|ПОМЕСТИТЬ ВТ_АктуальныеСхемы
	//|ИЗ
	//|	Справочник.зпСхемыРасчетаЗП КАК зпСхемыРасчетаЗП
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.зпАктивнаяСхемаРасчетаЗП.СрезПоследних КАК зпАктивнаяСхемаРасчетаЗПСрезПоследних
	//|		ПО (зпАктивнаяСхемаРасчетаЗПСрезПоследних.СхемаРасчетаЗП = зпСхемыРасчетаЗП.Ссылка)
	//|ГДЕ
	//|	зпСхемыРасчетаЗП.Регион = &Регион
	//|	И НЕ зпСхемыРасчетаЗП.ПометкаУдаления
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	зпАктивнаяСхемаРасчетаЗП.Период КАК Период,
	//|	зпСхемыРасчетаЗП.Ссылка КАК зпСхемыРасчетаЗП,
	//|	зпСхемыРасчетаЗП.Регион КАК Регион
	//|ПОМЕСТИТЬ ВТ_ВсеЗаписиСхемы
	//|ИЗ
	//|	Справочник.зпСхемыРасчетаЗП КАК зпСхемыРасчетаЗП
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.зпАктивнаяСхемаРасчетаЗП КАК зпАктивнаяСхемаРасчетаЗП
	//|		ПО (зпАктивнаяСхемаРасчетаЗП.СхемаРасчетаЗП = зпСхемыРасчетаЗП.Ссылка)
	//|ГДЕ
	//|	зпСхемыРасчетаЗП.Регион = &Регион
	//|	И НЕ зпСхемыРасчетаЗП.ПометкаУдаления
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ВсеЗаписиСхемы.Период КАК Период,
	//|	ВТ_ВсеЗаписиСхемы.зпСхемыРасчетаЗП КАК СхемаРасчетаЗП,
	//|	ЕСТЬNULL(ВТ_АктуальныеСхемы.Актуальность, ЛОЖЬ) КАК Актуальность,
	//|	ВЫБОР
	//|		КОГДА ВТ_АктуальныеСхемы.Актуальность
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК ФлВыбор
	//|ИЗ
	//|	ВТ_ВсеЗаписиСхемы КАК ВТ_ВсеЗаписиСхемы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АктуальныеСхемы КАК ВТ_АктуальныеСхемы
	//|		ПО ВТ_ВсеЗаписиСхемы.зпСхемыРасчетаЗП = ВТ_АктуальныеСхемы.зпСхемыРасчетаЗП
	//|			И ВТ_ВсеЗаписиСхемы.Период = ВТ_АктуальныеСхемы.Период";
	//Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(зпАктивнаяСхемаРасчетаЗП.Период) КАК Период,
	|	зпСхемыРасчетаЗП.Ссылка КАК СхемаРасчетаЗП,
	|	НЕ зпАктивнаяСхемаРасчетаЗПСрезПоследних.СхемаРасчетаЗП ЕСТЬ NULL КАК Актуальность,
	|	зпСхемыРасчетаЗП.Ссылка = &СхемаРасчетаЗП КАК ФлВыбор
	|ИЗ
	|	Справочник.зпСхемыРасчетаЗП КАК зпСхемыРасчетаЗП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.зпАктивнаяСхемаРасчетаЗП.СрезПоследних(, Регион = &Регион) КАК зпАктивнаяСхемаРасчетаЗПСрезПоследних
	|		ПО зпСхемыРасчетаЗП.Ссылка = зпАктивнаяСхемаРасчетаЗПСрезПоследних.СхемаРасчетаЗП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.зпАктивнаяСхемаРасчетаЗП КАК зпАктивнаяСхемаРасчетаЗП
	|		ПО (зпАктивнаяСхемаРасчетаЗП.Регион = &Регион)
	|			И зпСхемыРасчетаЗП.Ссылка = зпАктивнаяСхемаРасчетаЗП.СхемаРасчетаЗП
	|ГДЕ
	|	зпСхемыРасчетаЗП.Регион = &Регион
	|	И НЕ зпСхемыРасчетаЗП.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	зпСхемыРасчетаЗП.Ссылка,
	|	НЕ зпАктивнаяСхемаРасчетаЗПСрезПоследних.СхемаРасчетаЗП ЕСТЬ NULL,
	|	зпСхемыРасчетаЗП.Ссылка = &СхемаРасчетаЗП
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Запрос.УстановитьПараметр("Регион", Регион);
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", СхемаРасчетаЗП);
	РезультатЗапроса = Запрос.Выполнить();	
	СхемыРасчетаЗарплатыТЗ.Загрузить(РезультатЗапроса.Выгрузить());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТарифов(ПодсвечиватьАктуальныеДляСРЗП)
	ТарифыРасчетаЗП.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	зпАктивныйТарифРасчетаЗП.Период КАК Период,
		|	зпТарифыРасчетаЗП.Ссылка КАК ТарифРасчетаЗП,
		|	ВЫБОР
		|		КОГДА (НЕ зпАктивныйТарифРасчетаЗПСрехПоследних.Период ЕСТЬ NULL) И &ПодсвечиватьАктуальныеДляСРЗП И &СхемаРасчетаЗП = зпАктивныйТарифРасчетаЗПСрехПоследних.СхемаРасчетаЗП
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Актуальность,
		|	ВЫБОР
		|		КОГДА зпТарифыРасчетаЗП.Ссылка = &зпТарифыРасчетаЗП 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ФлВыбор
		|ИЗ
		|	Справочник.зпТарифыРасчетаЗП КАК зпТарифыРасчетаЗП
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.зпАктивныйТарифРасчетаЗП КАК зпАктивныйТарифРасчетаЗП
		|		ПО зпТарифыРасчетаЗП.Ссылка = зпАктивныйТарифРасчетаЗП.ТарифРасчетаЗП
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.зпАктивныйТарифРасчетаЗП.СрезПоследних(&ТекДата, ) КАК зпАктивныйТарифРасчетаЗПСрехПоследних
		|			ПО зпТарифыРасчетаЗП.Ссылка = зпАктивныйТарифРасчетаЗПСрехПоследних.ТарифРасчетаЗП
		|ГДЕ
		|	зпТарифыРасчетаЗП.Регион = &Регион
		|	И НЕ зпТарифыРасчетаЗП.ПометкаУдаления ";
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Регион", Регион);
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", СхемаРасчетаЗП);
	Запрос.УстановитьПараметр("зпТарифыРасчетаЗП", ТарифРасчетаЗП);
	Запрос.УстановитьПараметр("ПодсвечиватьАктуальныеДляСРЗП", ПодсвечиватьАктуальныеДляСРЗП);
	РезультатЗапроса = Запрос.Выполнить();
	ТарифыРасчетаЗП.Загрузить(РезультатЗапроса.Выгрузить());
КонецПроцедуры

&НаСервере
Процедура УстановитьСхемуАктивнойНаСервере(СхемаРасчетаЗП, ДатаАктивизации)
	
	СхемаРСМенеджер = РегистрыСведений.зпАктивнаяСхемаРасчетаЗП.СоздатьМенеджерЗаписи();
	СхемаРСМенеджер.Период 			= ДатаАктивизации;
	СхемаРСМенеджер.СхемаРасчетаЗП 	= СхемаРасчетаЗП;
	СхемаРСМенеджер.Регион 			= Регион;
	СхемаРСМенеджер.Пользователь 	= ПараметрыСеанса.ТекущийПользователь;
	СхемаРСМенеджер.Записать();
	
	//CeHbKA #4101 27.10.2020
	Для каждого СтрокаТЧ из СхемаРасчетаЗП.СхемыЗонДоставки цикл
		зпРаботаСРасчетомЗарплатыСервер.УстановитьАктуальнуюСхемуЗоныДоставкиЗПВСистеме(СтрокаТЧ.СхемаЗон.id_Админка, СхемаРасчетаЗП.Регион.Код);		
	КонецЦикла;
	//CeHbKA #4101 27.10.2020
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСхемуАктивной(Команда)
	
	ДатаАктивизации = Неопределено;
	Если Элементы.СхемыРасчетаЗарплатыТЗ.ТекущиеДанные.ФлВыбор И Элементы.СхемыРасчетаЗарплатыТЗ.ТекущиеДанные.СхемаРасчетаЗП = СхемаРасчетаЗП Тогда//проверка соответствия выбранной строки и текущей активной схеме
		Если НЕ СхемаРасчетаЗП = зпРаботаСРасчетомЗарплатыСервер.ПолучитьАктивнуюСхемуРасчетаЗП(ТекущаяДата(), Регион) Тогда
			Оповещение = Новый ОписаниеОповещения("ПослеВводаДатыАктивацииСхемы", ЭтотОбъект);
			ПоказатьВводДаты(Оповещение, ДатаАктивизации, "Введите дату с которой будет активна схема", ЧастиДаты.Дата);
		Иначе
			ПоказатьОповещениеПользователя("Данная схема уже активирована!");	
		КонецЕсли;
	Иначе
		ПоказатьОповещениеПользователя("Схема не выбрана!");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаДатыАктивацииСхемы(Дата, Параметры) Экспорт
	
	Если Не Дата = Неопределено Тогда
		Если НачалоДня(Дата) > НачалоДня(ТекущаяДата()) Тогда
			УстановитьСхемуАктивнойНаСервере(СхемаРасчетаЗП, Дата);
			ЗаполнитьТаблицыСхем();
			ПоказатьОповещениеПользователя("Успешно активирована схема!");	
		ИначеЕсли НачалоДня(Дата) <= НачалоДня(ТекущаяДата()) Тогда
			ПоказатьОповещениеПользователя("Ошибка! Активация схемы на указанную дату запрещена!");	
		КонецЕсли 
	КонецЕсли 
	
КонецПроцедуры

&НаСервере
Функция УстановитьТарифАктвинымНаСервере(СхемаРасчетаЗП, ТарифРасчетаЗП, ДатаАктивизации)
	
	Если ЗначениеЗаполнено(СхемаРасчетаЗП) Тогда
		СхемаРСМенеджер = РегистрыСведений.зпАктивныйТарифРасчетаЗП.СоздатьМенеджерЗаписи();
		СхемаРСМенеджер.Период 			= ДатаАктивизации;
		СхемаРСМенеджер.СхемаРасчетаЗП 	= СхемаРасчетаЗП;
		СхемаРСМенеджер.ТарифРасчетаЗП 	= ТарифРасчетаЗП;
		СхемаРСМенеджер.Пользователь 	= ПараметрыСеанса.ТекущийПользователь;
		СхемаРСМенеджер.Записать();
		Возврат Истина;
	Иначе
		Сообщить("Внимание! Схема расчета ЗП не выбрана! Активация тарифа невозможна!");	
		Возврат Ложь;
	КонецЕсли;	                                        
		
КонецФункции

&НаКлиенте
Процедура УстановитьТарифАктвиным(Команда)
	
	ДатаАктивизации = Неопределено;
	Если Элементы.ТарифыРасчетаЗП.ТекущиеДанные.ФлВыбор И Элементы.ТарифыРасчетаЗП.ТекущиеДанные.ТарифРасчетаЗП = ТарифРасчетаЗП Тогда//проверка соответствия выбранной строки и текущему активному тарифу
		Оповещение = Новый ОписаниеОповещения("ПослеВводаДатыАктивацииТарифа", ЭтотОбъект);
		ПоказатьВводДаты(Оповещение, ДатаАктивизации, "Введите дату с которой будет активен тариф", ЧастиДаты.Дата);
	Иначе
		ПоказатьОповещениеПользователя("Внимание! Тариф не выбран!");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаДатыАктивацииТарифа(Дата, Параметры) Экспорт
	Если НачалоДня(Дата) > НачалоДня(ТекущаяДата()) Тогда
		флТарифАктивирован = УстановитьТарифАктвинымНаСервере(СхемаРасчетаЗП, ТарифРасчетаЗП, Дата);
		Если флТарифАктивирован Тогда
			ЗаполнитьТаблицуТарифов(Истина);
			ПоказатьОповещениеПользователя("Успешно активирован тариф!");	
		КонецЕсли;
	ИначеЕсли НачалоДня(Дата) <= НачалоДня(ТекущаяДата()) Тогда
		//проверим есть ли записи в РС по данному тарифу...				
		Если РазрешитьАктивироватьТариф(ТарифРасчетаЗП) Тогда
			УстановитьТарифАктвинымНаСервере(СхемаРасчетаЗП, ТарифРасчетаЗП, Дата);
			ЗаполнитьТаблицуТарифов(Истина);
			ПоказатьОповещениеПользователя("Успешно активирован тариф!");	
		Иначе
			ПоказатьОповещениеПользователя("В этом периоде " + Формат(Дата, "ДФ=dd.MM.yyyy") + " обнаружены данные расчета ЗП! Сперва отмените проведение документа расчета ЗП и перезаполните этот документ!");	
		КонецЕсли
	КонецЕсли 
КонецПроцедуры

&НаСервере
Функция РазрешитьАктивироватьТариф(ТарифРасчетаЗП)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	зпНачислениеЗП.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.зпНачислениеЗП КАК зпНачислениеЗП
		|ГДЕ
		|	зпНачислениеЗП.ТарифРасчетаЗП = &ТарифРасчетаЗП";
	
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифРасчетаЗП);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Ложь;	
	Иначе
		Возврат Истина;	
	КонецЕсли;
	
КонецФункции

/////////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура СнятьФлажкиВСтроках(ТаблЗначений, номерТекСтроки)
	
	Для Каждого строка Из ТаблЗначений Цикл
		Если строка.ФлВыбор И Не ТаблЗначений.Индекс(строка) = номерТекСтроки Тогда
			строка.ФлВыбор = Ложь;
		КонецЕсли;
	КонецЦикла;		
	
КонецПроцедуры

&НаКлиенте
Процедура СхемыРасчетаЗарплатыТЗФлВыборПриИзменении(Элемент)
	Если Элементы.СхемыРасчетаЗарплатыТЗ.ТекущиеДанные.ФлВыбор Тогда//если флаг выставляем, то надо снять флаг в любой иной строке
		флВыбораСхемы  = Истина;
		СхемаРасчетаЗП = Элементы.СхемыРасчетаЗарплатыТЗ.ТекущиеДанные.СхемаРасчетаЗП;//обновим значение реквизита формы
		Если СхемыРасчетаЗарплатыТЗ.Количество() > 1 Тогда
			СнятьФлажкиВСтроках(СхемыРасчетаЗарплатыТЗ, СхемыРасчетаЗарплатыТЗ.Индекс(Элементы.СхемыРасчетаЗарплатыТЗ.ТекущиеДанные));	
		КонецЕсли;		
		ЗаполнитьТаблицуТарифов(Истина);
	Иначе
		флВыбораСхемы  = Ложь;
		СхемаРасчетаЗП = Неопределено;
	КонецЕсли;
	УправлениеДоступностьюЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ТарифыРасчетаЗПФлВыборПриИзменении(Элемент)
	Если Элементы.ТарифыРасчетаЗП.ТекущиеДанные.ФлВыбор Тогда//если флаг выставляем, то надо снять флаг в любой иной строке
		флВыбораТарифа = Истина;
		ТарифРасчетаЗП = Элементы.ТарифыРасчетаЗП.ТекущиеДанные.ТарифРасчетаЗП;//обновим значение реквизита
		Если ТарифыРасчетаЗП.Количество() > 1 Тогда
			СнятьФлажкиВСтроках(ТарифыРасчетаЗП, ТарифыРасчетаЗП.Индекс(Элементы.ТарифыРасчетаЗП.ТекущиеДанные));	
		КонецЕсли;
	Иначе
		флВыбораТарифа = Ложь;
		ТарифРасчетаЗП = Неопределено;
		//Элементы.ТарифыРасчетаЗП.ТекущиеДанные.ФлВыбор = Истина;
	КонецЕсли;
	УправлениеДоступностьюЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВыбранныеЗначения = Новый Структура;
	ВыбранныеЗначения.Вставить("СхемаРасчетаЗП", СхемаРасчетаЗП);
	ВыбранныеЗначения.Вставить("ТарифРасчетаЗП", ТарифРасчетаЗП);
	ОповеститьОВыборе(ВыбранныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Процедура УправлениеДоступностьюЭлементов()
	
	Элементы.Выбрать.Доступность = Истина;//флВыбораСхемы Или флВыбораТарифа;
	
КонецПроцедуры

&НаКлиенте
Процедура СхемыРасчетаЗарплатыТЗВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("Ключ", Элемент.ТекущиеДанные.СхемаРасчетаЗП);
	Форма = ОткрытьФорму("Справочник.зпСхемыРасчетаЗП.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	Форма.Элементы.Регион.Доступность = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура ТарифыРасчетаЗПВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", Элемент.ТекущиеДанные.ТарифРасчетаЗП);
	Форма = ОткрытьФорму("Справочник.зпТарифыРасчетаЗП.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	Форма.Элементы.Регион.Доступность = Ложь;
	
КонецПроцедуры

//блокировка кнопок ins и del
&НаКлиенте
Процедура СхемыРасчетаЗарплатыТЗПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТарифыРасчетаЗППередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СхемыРасчетаЗарплатыТЗПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТарифыРасчетаЗППередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

//Асеев 27.11.2023 (Задача № 5175)>>>
&НаСервереБезКонтекста
Функция ПроверкаТарифаПриемника(Знач ТарифПриемник)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифПриемник);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	""Обнаружены рассчитанные данные по выбранному тарифу-приемнику"" КАК Ошибка
	|ИЗ
	|	РегистрСведений.зпИсходныеДанныеРасчетаЗППоЗаказам КАК зпИсходныеДанныеРасчетаЗППоЗаказам
	|ГДЕ
	|	зпИсходныеДанныеРасчетаЗППоЗаказам.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Не разрешено редактирование выбранного тарифа-приемника""
	|ИЗ
	|	Справочник.зпТарифыРасчетаЗП КАК зпТарифыРасчетаЗП
	|ГДЕ
	|	зпТарифыРасчетаЗП.Ссылка = &ТарифРасчетаЗП
	|	И НЕ зпТарифыРасчетаЗП.РазрешитьРедактирование";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Сообщить(Выборка.Ошибка);
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверкаДанныхТарифаПриемника(Знач ТарифПриемник)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифПриемник);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	РегистрСведений.зпТарификацияЗППоЗаказам КАК зпТарификацияЗППоЗаказам
	|ГДЕ
	|	зпТарификацияЗППоЗаказам.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.зпМинимальныеСтавки КАК зпМинимальныеСтавки
	|ГДЕ
	|	зпМинимальныеСтавки.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям
	|ГДЕ
	|	зпСтавкиОплатыПоНачислениям.ТарифРасчетаЗП = &ТарифРасчетаЗП";
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверкаДанныхТарифаПриемникаМинимальныеИПоНачислениям(Знач ТарифПриемник)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифПриемник);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	РегистрСведений.зпМинимальныеСтавки КАК зпМинимальныеСтавки
	|ГДЕ
	|	зпМинимальныеСтавки.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям
	|ГДЕ
	|	зпСтавкиОплатыПоНачислениям.ТарифРасчетаЗП = &ТарифРасчетаЗП";
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверкаДанныхТарифаПриемникаПоЗаказам(Знач ТарифПриемник)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифПриемник);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	РегистрСведений.зпТарификацияЗППоЗаказам КАК зпТарификацияЗППоЗаказам
	|ГДЕ
	|	зпТарификацияЗППоЗаказам.ТарифРасчетаЗП = &ТарифРасчетаЗП";
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервереБезКонтекста
Процедура ВыполнитьКопированиеДанныхТарифа(Знач ТарифИсточник, Знач ТарифПриемник, Знач Регион)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регион", Регион);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифИсточник);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	зпАктивнаяСхемаРасчетаЗПСрезПоследних.СхемаРасчетаЗП КАК СхемаРасчетаЗП
	|ИЗ
	|	РегистрСведений.зпАктивнаяСхемаРасчетаЗП.СрезПоследних(&Период, Регион = &Регион) КАК зпАктивнаяСхемаРасчетаЗПСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.зпТарификацияЗППоЗаказам КАК зпТарификацияЗППоЗаказам
	|ГДЕ
	|	зпТарификацияЗППоЗаказам.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.зпМинимальныеСтавки КАК зпМинимальныеСтавки
	|ГДЕ
	|	зпМинимальныеСтавки.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям
	|ГДЕ
	|	зпСтавкиОплатыПоНачислениям.ТарифРасчетаЗП = &ТарифРасчетаЗП";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатПакета[0].Выбрать();
	Выборка.Следующий();
	
	СхемаРасчетаЗП = Выборка.СхемаРасчетаЗП;
	//Сообщить(СхемаРасчетаЗП);
	
	ТаблицаЗаписей = РезультатПакета[1].Выгрузить();
	ТаблицаЗаписей.ЗаполнитьЗначения(СхемаРасчетаЗП, "СхемаРасчетаЗП");
	ТаблицаЗаписей.ЗаполнитьЗначения(ТарифПриемник, "ТарифРасчетаЗП");
	
	НаборЗаписей_зпТарификацияЗППоЗаказам = РегистрыСведений.зпТарификацияЗППоЗаказам.СоздатьНаборЗаписей();
	НаборЗаписей_зпТарификацияЗППоЗаказам.Отбор.СхемаРасчетаЗП.Установить(СхемаРасчетаЗП);
	НаборЗаписей_зпТарификацияЗППоЗаказам.Отбор.ТарифРасчетаЗП.Установить(ТарифПриемник);
	НаборЗаписей_зпТарификацияЗППоЗаказам.Загрузить(ТаблицаЗаписей);
	
	ТаблицаЗаписей = РезультатПакета[2].Выгрузить();
	ТаблицаЗаписей.ЗаполнитьЗначения(СхемаРасчетаЗП, "СхемаРасчетаЗП");
	ТаблицаЗаписей.ЗаполнитьЗначения(ТарифПриемник, "ТарифРасчетаЗП");
	
	НаборЗаписей_зпМинимальныеСтавки = РегистрыСведений.зпМинимальныеСтавки.СоздатьНаборЗаписей();
	НаборЗаписей_зпМинимальныеСтавки.Отбор.СхемаРасчетаЗП.Установить(СхемаРасчетаЗП);
	НаборЗаписей_зпМинимальныеСтавки.Отбор.ТарифРасчетаЗП.Установить(ТарифПриемник);
	НаборЗаписей_зпМинимальныеСтавки.Загрузить(ТаблицаЗаписей);
	
	ТаблицаЗаписей = РезультатПакета[3].Выгрузить();
	ТаблицаЗаписей.ЗаполнитьЗначения(СхемаРасчетаЗП, "СхемаРасчетаЗП");
	ТаблицаЗаписей.ЗаполнитьЗначения(ТарифПриемник, "ТарифРасчетаЗП");
	
	НаборЗаписей_зпСтавкиОплатыПоНачислениям = РегистрыСведений.зпСтавкиОплатыПоНачислениям.СоздатьНаборЗаписей();
	НаборЗаписей_зпСтавкиОплатыПоНачислениям.Отбор.СхемаРасчетаЗП.Установить(СхемаРасчетаЗП);
	НаборЗаписей_зпСтавкиОплатыПоНачислениям.Отбор.ТарифРасчетаЗП.Установить(ТарифПриемник);
	НаборЗаписей_зпСтавкиОплатыПоНачислениям.Загрузить(ТаблицаЗаписей);
	
	ФиксацияТранзакции = Истина;
	
	НачатьТранзакцию();
	Попытка
		НаборЗаписей_зпТарификацияЗППоЗаказам.Записать();
		НаборЗаписей_зпМинимальныеСтавки.Записать();
		НаборЗаписей_зпСтавкиОплатыПоНачислениям.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();
		ФиксацияТранзакции = Ложь;
	КонецПопытки;
	
	Если ФиксацияТранзакции Тогда
		Сообщить("Данные тарифа " + ТарифИсточник + " скопированы в тариф " + ТарифПриемник);
	Иначе
		Сообщить("Ошибка копирования данных тарифа " + ТарифИсточник + " в тариф " + ТарифПриемник + "!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыполнитьКопированиеДанныхТарифаМинимальныеИПоНачислениям(Знач ТарифИсточник, Знач ТарифПриемник, Знач СхемаРасчетаЗП)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифИсточник);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.зпМинимальныеСтавки КАК зпМинимальныеСтавки
	|ГДЕ
	|	зпМинимальныеСтавки.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям
	|ГДЕ
	|	зпСтавкиОплатыПоНачислениям.ТарифРасчетаЗП = &ТарифРасчетаЗП";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	ТаблицаЗаписей = РезультатПакета[0].Выгрузить();
	ТаблицаЗаписей.ЗаполнитьЗначения(СхемаРасчетаЗП, "СхемаРасчетаЗП");
	ТаблицаЗаписей.ЗаполнитьЗначения(ТарифПриемник, "ТарифРасчетаЗП");
	
	НаборЗаписей_зпМинимальныеСтавки = РегистрыСведений.зпМинимальныеСтавки.СоздатьНаборЗаписей();
	НаборЗаписей_зпМинимальныеСтавки.Отбор.СхемаРасчетаЗП.Установить(СхемаРасчетаЗП);
	НаборЗаписей_зпМинимальныеСтавки.Отбор.ТарифРасчетаЗП.Установить(ТарифПриемник);
	НаборЗаписей_зпМинимальныеСтавки.Загрузить(ТаблицаЗаписей);
	
	ТаблицаЗаписей = РезультатПакета[1].Выгрузить();
	ТаблицаЗаписей.ЗаполнитьЗначения(СхемаРасчетаЗП, "СхемаРасчетаЗП");
	ТаблицаЗаписей.ЗаполнитьЗначения(ТарифПриемник, "ТарифРасчетаЗП");
	
	НаборЗаписей_зпСтавкиОплатыПоНачислениям = РегистрыСведений.зпСтавкиОплатыПоНачислениям.СоздатьНаборЗаписей();
	НаборЗаписей_зпСтавкиОплатыПоНачислениям.Отбор.СхемаРасчетаЗП.Установить(СхемаРасчетаЗП);
	НаборЗаписей_зпСтавкиОплатыПоНачислениям.Отбор.ТарифРасчетаЗП.Установить(ТарифПриемник);
	НаборЗаписей_зпСтавкиОплатыПоНачислениям.Загрузить(ТаблицаЗаписей);
	
	ФиксацияТранзакции = Истина;
	
	НачатьТранзакцию();
	Попытка
		НаборЗаписей_зпМинимальныеСтавки.Записать();
		НаборЗаписей_зпСтавкиОплатыПоНачислениям.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();
		ФиксацияТранзакции = Ложь;
	КонецПопытки;
	
	Если ФиксацияТранзакции Тогда
		Сообщить("Данные тарифа " + ТарифИсточник + " скопированы в тариф " + ТарифПриемник);
	Иначе
		Сообщить("Ошибка копирования данных тарифа " + ТарифИсточник + " в тариф " + ТарифПриемник + "!");
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьКопированиеДанныхТарифаПоЗаказам(Знач ТарифИсточник, Знач ТарифПриемник, Знач СхемаРасчетаЗП)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифИсточник);
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", СхемаРасчетаЗП);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	зпТарификацияЗППоЗаказам.ТипЗаказа КАК ТипЗаказа,
	|	зпТарификацияЗППоЗаказам.КатегорияЗаказа КАК КатегорияЗаказа
	|ПОМЕСТИТЬ ВТ_Категории
	|ИЗ
	|	РегистрСведений.зпТарификацияЗППоЗаказам КАК зпТарификацияЗППоЗаказам
	|ГДЕ
	|	зпТарификацияЗППоЗаказам.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	зпСхемыРасчетаЗПСхемыКатегорийЗаказов.ТипЗаказа КАК ТипЗаказа,
	|	зпСхемыРасчетаЗПСхемыКатегорийЗаказов.СхемаКатегорий КАК СхемаКатегорий
	|ПОМЕСТИТЬ ВТ_СхемыКатегорий_СхемыРасчета
	|ИЗ
	|	ВТ_Категории КАК ВТ_Категории
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.зпСхемыРасчетаЗП.СхемыКатегорийЗаказов КАК зпСхемыРасчетаЗПСхемыКатегорийЗаказов
	|		ПО (зпСхемыРасчетаЗПСхемыКатегорийЗаказов.Ссылка = &СхемаРасчетаЗП)
	|			И ВТ_Категории.ТипЗаказа = зпСхемыРасчетаЗПСхемыКатегорийЗаказов.ТипЗаказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Категории.ТипЗаказа КАК ТипЗаказа,
	|	ВТ_Категории.КатегорияЗаказа КАК КатегорияЗаказа
	|ПОМЕСТИТЬ ВТ_ПростойПеренос
	|ИЗ
	|	ВТ_Категории КАК ВТ_Категории
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СхемыКатегорий_СхемыРасчета КАК ВТ_СхемыКатегорий_СхемыРасчета
	|		ПО ВТ_Категории.ТипЗаказа = ВТ_СхемыКатегорий_СхемыРасчета.ТипЗаказа
	|			И ВТ_Категории.КатегорияЗаказа.Владелец = ВТ_СхемыКатегорий_СхемыРасчета.СхемаКатегорий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Категории.ТипЗаказа КАК ТипЗаказа,
	|	ВТ_Категории.КатегорияЗаказа КАК КатегорияЗаказа,
	|	зпКатегорииЗаказовПоказателиКатегории.ВидПоказателя КАК ВидПоказателя,
	|	зпКатегорииЗаказовПоказателиКатегории.Значение1 КАК Значение1,
	|	зпКатегорииЗаказовПоказателиКатегории.Значение2 КАК Значение2,
	|	ВТ_СхемыКатегорий_СхемыРасчета.СхемаКатегорий КАК СхемаКатегорий
	|ПОМЕСТИТЬ ВТ_НовыеСхемыКатегорий
	|ИЗ
	|	ВТ_Категории КАК ВТ_Категории
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СхемыКатегорий_СхемыРасчета КАК ВТ_СхемыКатегорий_СхемыРасчета
	|		ПО ВТ_Категории.ТипЗаказа = ВТ_СхемыКатегорий_СхемыРасчета.ТипЗаказа
	|			И ВТ_Категории.КатегорияЗаказа.Владелец <> ВТ_СхемыКатегорий_СхемыРасчета.СхемаКатегорий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.зпКатегорииЗаказов.ПоказателиКатегории КАК зпКатегорииЗаказовПоказателиКатегории
	|		ПО ВТ_Категории.КатегорияЗаказа = зпКатегорииЗаказовПоказателиКатегории.Ссылка
	|			И (зпКатегорииЗаказовПоказателиКатегории.НомерСтроки = 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	зпКатегорииЗаказов.Владелец КАК СхемаКатегорий,
	|	зпКатегорииЗаказов.Ссылка КАК КатегорияЗаказов,
	|	зпКатегорииЗаказовПоказателиКатегории.ВидПоказателя КАК ВидПоказателя,
	|	зпКатегорииЗаказовПоказателиКатегории.Значение1 КАК Значение1,
	|	зпКатегорииЗаказовПоказателиКатегории.Значение2 КАК Значение2
	|ПОМЕСТИТЬ ВТ_НовыеКатегории
	|ИЗ
	|	ВТ_НовыеСхемыКатегорий КАК ВТ_НовыеСхемыКатегорий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.зпКатегорииЗаказов КАК зпКатегорииЗаказов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.зпКатегорииЗаказов.ПоказателиКатегории КАК зпКатегорииЗаказовПоказателиКатегории
	|			ПО зпКатегорииЗаказов.Ссылка = зпКатегорииЗаказовПоказателиКатегории.Ссылка
	|				И (зпКатегорииЗаказовПоказателиКатегории.НомерСтроки = 1)
	|		ПО ВТ_НовыеСхемыКатегорий.СхемаКатегорий = зпКатегорииЗаказов.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НовыеСхемыКатегорий.ТипЗаказа КАК ТипЗаказа,
	|	ВТ_НовыеСхемыКатегорий.КатегорияЗаказа КАК КатегорияЗаказа,
	|	ВТ_НовыеКатегории.КатегорияЗаказов КАК НоваяКатегорияЗаказа
	|ПОМЕСТИТЬ ВТ_ПодменаКатегорий
	|ИЗ
	|	ВТ_НовыеСхемыКатегорий КАК ВТ_НовыеСхемыКатегорий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НовыеКатегории КАК ВТ_НовыеКатегории
	|		ПО ВТ_НовыеСхемыКатегорий.СхемаКатегорий = ВТ_НовыеКатегории.СхемаКатегорий
	|			И ВТ_НовыеСхемыКатегорий.ВидПоказателя = ВТ_НовыеКатегории.ВидПоказателя
	|			И ВТ_НовыеСхемыКатегорий.Значение1 = ВТ_НовыеКатегории.Значение1
	|			И ВТ_НовыеСхемыКатегорий.Значение2 = ВТ_НовыеКатегории.Значение2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	зпТарификацияЗППоЗаказам.СхемаРасчетаЗП КАК СхемаРасчетаЗП,
	|	зпТарификацияЗППоЗаказам.ТарифРасчетаЗП КАК ТарифРасчетаЗП,
	|	зпТарификацияЗППоЗаказам.Должность КАК Должность,
	|	зпТарификацияЗППоЗаказам.Роль КАК Роль,
	|	зпТарификацияЗППоЗаказам.ОсновноеНачисление КАК ОсновноеНачисление,
	|	зпТарификацияЗППоЗаказам.СоставЭкипажа КАК СоставЭкипажа,
	|	зпТарификацияЗППоЗаказам.ТипЗаказа КАК ТипЗаказа,
	|	зпТарификацияЗППоЗаказам.КатегорияЗаказа КАК КатегорияЗаказа,
	|	зпТарификацияЗППоЗаказам.ЗонаДоставки КАК ЗонаДоставки,
	|	зпТарификацияЗППоЗаказам.Тариф КАК Тариф
	|ИЗ
	|	РегистрСведений.зпТарификацияЗППоЗаказам КАК зпТарификацияЗППоЗаказам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПростойПеренос КАК ВТ_ПростойПеренос
	|		ПО (зпТарификацияЗППоЗаказам.ТарифРасчетаЗП = &ТарифРасчетаЗП)
	|			И зпТарификацияЗППоЗаказам.ТипЗаказа = ВТ_ПростойПеренос.ТипЗаказа
	|			И зпТарификацияЗППоЗаказам.КатегорияЗаказа = ВТ_ПростойПеренос.КатегорияЗаказа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	зпТарификацияЗППоЗаказам.СхемаРасчетаЗП,
	|	зпТарификацияЗППоЗаказам.ТарифРасчетаЗП,
	|	зпТарификацияЗППоЗаказам.Должность,
	|	зпТарификацияЗППоЗаказам.Роль,
	|	зпТарификацияЗППоЗаказам.ОсновноеНачисление,
	|	зпТарификацияЗППоЗаказам.СоставЭкипажа,
	|	зпТарификацияЗППоЗаказам.ТипЗаказа,
	|	ВТ_ПодменаКатегорий.НоваяКатегорияЗаказа,
	|	зпТарификацияЗППоЗаказам.ЗонаДоставки,
	|	зпТарификацияЗППоЗаказам.Тариф
	|ИЗ
	|	РегистрСведений.зпТарификацияЗППоЗаказам КАК зпТарификацияЗППоЗаказам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПодменаКатегорий КАК ВТ_ПодменаКатегорий
	|		ПО (зпТарификацияЗППоЗаказам.ТарифРасчетаЗП = &ТарифРасчетаЗП)
	|			И зпТарификацияЗППоЗаказам.ТипЗаказа = ВТ_ПодменаКатегорий.ТипЗаказа
	|			И зпТарификацияЗППоЗаказам.КатегорияЗаказа = ВТ_ПодменаКатегорий.КатегорияЗаказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(зпТарификацияЗППоЗаказам.СхемаРасчетаЗП) КАК СхемаРасчетаЗП,
	|	ПРЕДСТАВЛЕНИЕ(зпТарификацияЗППоЗаказам.ТарифРасчетаЗП) КАК ТарифРасчетаЗП,
	|	ПРЕДСТАВЛЕНИЕ(зпТарификацияЗППоЗаказам.Должность) КАК Должность,
	|	ПРЕДСТАВЛЕНИЕ(зпТарификацияЗППоЗаказам.Роль) КАК Роль,
	|	ПРЕДСТАВЛЕНИЕ(зпТарификацияЗППоЗаказам.ОсновноеНачисление) КАК ОсновноеНачисление,
	|	ПРЕДСТАВЛЕНИЕ(зпТарификацияЗППоЗаказам.СоставЭкипажа) КАК СоставЭкипажа,
	|	ПРЕДСТАВЛЕНИЕ(зпТарификацияЗППоЗаказам.ТипЗаказа) КАК ТипЗаказа,
	|	ПРЕДСТАВЛЕНИЕ(зпТарификацияЗППоЗаказам.КатегорияЗаказа) КАК КатегорияЗаказа,
	|	ПРЕДСТАВЛЕНИЕ(зпТарификацияЗППоЗаказам.ЗонаДоставки) КАК ЗонаДоставки,
	|	зпТарификацияЗППоЗаказам.Тариф КАК Тариф
	|ИЗ
	|	РегистрСведений.зпТарификацияЗППоЗаказам КАК зпТарификацияЗППоЗаказам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПростойПеренос КАК ВТ_ПростойПеренос
	|		ПО зпТарификацияЗППоЗаказам.ТипЗаказа = ВТ_ПростойПеренос.ТипЗаказа
	|			И зпТарификацияЗППоЗаказам.КатегорияЗаказа = ВТ_ПростойПеренос.КатегорияЗаказа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодменаКатегорий КАК ВТ_ПодменаКатегорий
	|		ПО зпТарификацияЗППоЗаказам.ТипЗаказа = ВТ_ПодменаКатегорий.ТипЗаказа
	|			И зпТарификацияЗППоЗаказам.КатегорияЗаказа = ВТ_ПодменаКатегорий.КатегорияЗаказа
	|ГДЕ
	|	зпТарификацияЗППоЗаказам.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|	И ВТ_ПростойПеренос.ТипЗаказа ЕСТЬ NULL
	|	И ВТ_ПодменаКатегорий.ТипЗаказа ЕСТЬ NULL";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	ТаблицаЗаписей = РезультатПакета[6].Выгрузить();
	ТаблицаЗаписей.ЗаполнитьЗначения(СхемаРасчетаЗП, "СхемаРасчетаЗП");
	ТаблицаЗаписей.ЗаполнитьЗначения(ТарифПриемник, "ТарифРасчетаЗП");
	
	НаборЗаписей_зпТарификацияЗППоЗаказам = РегистрыСведений.зпТарификацияЗППоЗаказам.СоздатьНаборЗаписей();
	НаборЗаписей_зпТарификацияЗППоЗаказам.Отбор.СхемаРасчетаЗП.Установить(СхемаРасчетаЗП);
	НаборЗаписей_зпТарификацияЗППоЗаказам.Отбор.ТарифРасчетаЗП.Установить(ТарифПриемник);
	НаборЗаписей_зпТарификацияЗППоЗаказам.Загрузить(ТаблицаЗаписей);
	
	Результат = РезультатПакета[7];
	
	ФиксацияТранзакции = Истина;
	
	НачатьТранзакцию();
	Попытка
		НаборЗаписей_зпТарификацияЗППоЗаказам.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();
		ФиксацияТранзакции = Ложь;
	КонецПопытки;
	
	Если ФиксацияТранзакции Тогда
		Сообщить("Данные тарифа " + ТарифИсточник + " скопированы в тариф " + ТарифПриемник);
	Иначе
		Сообщить("Ошибка копирования данных тарифа " + ТарифИсточник + " в тариф " + ТарифПриемник + "!");
	КонецЕсли;
	
	Если ФиксацияТранзакции Тогда
		Если Результат.Пустой() Тогда
			Возврат Неопределено;
		Иначе
			ТабДок = Новый ТабличныйДокумент;
			ТабДок.Очистить();
			Построитель = Новый ПостроительОтчета;
			Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(Результат);       
			Построитель.Вывести(ТабДок);
			ТабДок.ОтображатьЗаголовки = Ложь;
			ТабДок.ОтображатьСетку = Ложь;
			Возврат ТабДок;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура КопированиеДанныхТарифа(Команда)
	
	ПустойТариф = ПредопределенноеЗначение("Справочник.зпТарифыРасчетаЗП.ПустаяСсылка");
	
	ТарифПриемник = ПустойТариф;
	Если Не ВвестиЗначение(ТарифПриемник, "Укажите новый тариф-приемник копирования данных...") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроверкаТарифаПриемника(ТарифПриемник) Тогда
		Сообщить("Невозможно произвести копирование данных тарифа!");
		Возврат;
	КонецЕсли;
	
	ТарифИсточник = ПустойТариф;
	Если Не ВвестиЗначение(ТарифИсточник, "Укажите тариф-источник для копирования данных...") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТарифИсточник = ТарифПриемник Тогда
		Сообщить("Тариф-источник не должен совпадать с тарифом-приемником");
		Возврат;
	КонецЕсли;
	
	Если Не ПроверкаДанныхТарифаПриемника(ТарифПриемник) Тогда
		Если Вопрос("Обнаружены настройки по тарифу " + ТарифПриемник + ", в который предполагается копировать данные из тарифа-источника. При копировании данных из тарифа-источника эти настройки будут удалены. Продолжить?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ВыполнитьКопированиеДанныхТарифа(ТарифИсточник, ТарифПриемник, Регион);
	
КонецПроцедуры

&НаКлиенте
Процедура КопированиеМинимальныхСтавокИСтавокПоНачислениям(Команда)
	
	ПустойТариф = ПредопределенноеЗначение("Справочник.зпТарифыРасчетаЗП.ПустаяСсылка");
	
	ТарифПриемник = ПустойТариф;
	Если Не ВвестиЗначение(ТарифПриемник, "Укажите новый тариф-приемник копирования данных...") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроверкаТарифаПриемника(ТарифПриемник) Тогда
		Сообщить("Невозможно произвести копирование данных тарифа!");
		Возврат;
	КонецЕсли;
	
	ТарифИсточник = ПустойТариф;
	Если Не ВвестиЗначение(ТарифИсточник, "Укажите тариф-источник для копирования данных...") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТарифИсточник = ТарифПриемник Тогда
		Сообщить("Тариф-источник не должен совпадать с тарифом-приемником");
		Возврат;
	КонецЕсли;
	
	Если Не ПроверкаДанныхТарифаПриемникаМинимальныеИПоНачислениям(ТарифПриемник) Тогда
		Если Вопрос("Обнаружены настройки по тарифу " + ТарифПриемник + ", в который предполагается копировать данные из тарифа-источника. При копировании данных из тарифа-источника эти настройки будут удалены. Продолжить?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПустаяСхема = ПредопределенноеЗначение("Справочник.зпСхемыРасчетаЗП.ПустаяСсылка");
	
	СхемаПриемник = ПустаяСхема;
	Если Не ВвестиЗначение(СхемаПриемник, "Укажите схему-приемник копирования данных...") Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьКопированиеДанныхТарифаМинимальныеИПоНачислениям(ТарифИсточник, ТарифПриемник, СхемаПриемник);
	
КонецПроцедуры

&НаКлиенте
Процедура КопированиеТарификацииПоЗаказам(Команда)
	
	ПустойТариф = ПредопределенноеЗначение("Справочник.зпТарифыРасчетаЗП.ПустаяСсылка");
	
	ТарифПриемник = ПустойТариф;
	Если Не ВвестиЗначение(ТарифПриемник, "Укажите новый тариф-приемник копирования данных...") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроверкаТарифаПриемника(ТарифПриемник) Тогда
		Сообщить("Невозможно произвести копирование данных тарифа!");
		Возврат;
	КонецЕсли;
	
	ТарифИсточник = ПустойТариф;
	Если Не ВвестиЗначение(ТарифИсточник, "Укажите тариф-источник для копирования данных...") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТарифИсточник = ТарифПриемник Тогда
		Сообщить("Тариф-источник не должен совпадать с тарифом-приемником");
		Возврат;
	КонецЕсли;
	
	Если Не ПроверкаДанныхТарифаПриемникаПоЗаказам(ТарифПриемник) Тогда
		Если Вопрос("Обнаружены настройки по тарифу " + ТарифПриемник + ", в который предполагается копировать данные из тарифа-источника. При копировании данных из тарифа-источника эти настройки будут удалены. Продолжить?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПустаяСхема = ПредопределенноеЗначение("Справочник.зпСхемыРасчетаЗП.ПустаяСсылка");
	
	СхемаПриемник = ПустаяСхема;
	Если Не ВвестиЗначение(СхемаПриемник, "Укажите схему-приемник копирования данных...") Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ВыполнитьКопированиеДанныхТарифаПоЗаказам(ТарифИсточник, ТарифПриемник, СхемаПриемник);
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат.Показать("Неперенесенные данные тарифа");
	
КонецПроцедуры
//Асеев 27.11.2023 (Задача № 5175)<<<


