&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПраваДоступаНаРедактирование 			= ПроверкаПравДоступа();
	
	Элементы.СхемаРасчетаЗП.Доступность 	= ПраваДоступаНаРедактирование;
	Элементы.ТарифРасчетаЗП.Доступность 	= ПраваДоступаНаРедактирование;
	
	Регион = ПолучитьРегионПользователя();
	Если Не ЗначениеЗаполнено(Регион) Тогда 
		Сообщить("Внимание!!! Для текущего пользователя не установлен регион!"); 
	Иначе
		Элементы.Регион.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	//Асеев 27.11.2023 (Задача № 5175)>>>
	Элементы.УправлениеСхемами.Доступность 	= ПраваДоступаНаРедактирование И Не Регион.Пустая();
	//Асеев 27.11.2023 (Задача № 5175)<<<
	
	СхемаРасчетаЗП 	= зпРаботаСРасчетомЗарплатыСервер.ПолучитьАктивнуюСхемуРасчетаЗП(ТекущаяДата(), Регион);//ПолучитьСхемаРасчетаЗП();
	Если СхемаРасчетаЗП.Пустая() Тогда 
		Сообщить("Внимание!!! Схема расчета ЗП не найдена!"); 
	КонецЕсли;
	
	ТарифРасчетаЗП 	= ПолучитьТарифРасчетаЗП();
	Если ТарифРасчетаЗП.Пустая() Тогда 
		Сообщить("Внимание!!! Тариф расчета ЗП не найден!"); 
	КонецЕсли;
	
	УстановитьОтборыТарификацияМинСтавки();//отбор в ДС по выбранным схеме и тарифу
	
	ЗаполнитьТаблицы();
	
	ВидимостьКартинок();//в данный ситуации тариф всегда будет соответствовать, если заполнен
	
	//по наличию записей в РС и РН
	УправлениеДоступностьюКнопок();
	
	//Геннадий 31.05.2021 ->
	УправлениеДоступностьюСписков();
	 
КонецПроцедуры

&НаКлиенте
Процедура РегионПриИзменении(Элемент)
	
	СхемаРасчетаЗП 	= зпРаботаСРасчетомЗарплатыСервер.ПолучитьАктивнуюСхемуРасчетаЗП(ТекущаяДата(), Регион);//ПолучитьСхемаРасчетаЗП();
	Если СхемаРасчетаЗП.Пустая() Тогда 
		Сообщить("Внимание!!! Схема расчета ЗП не найдена!"); 
	КонецЕсли;
	
	ТарифРасчетаЗП 	= ПолучитьТарифРасчетаЗП();
	Если ТарифРасчетаЗП.Пустая() Тогда 
		Сообщить("Внимание!!! Тариф расчета ЗП не найден!"); 
	КонецЕсли;
	
	ВидимостьКартинок();//в данный ситуации тариф всегда будет соответствовать, если заполнен
	
	//по наличию записей в РС и РН
	УправлениеДоступностьюКнопок();
	
	//Геннадий 31.05.2021 ->
	УправлениеДоступностьюСписков();
	
	Если СхемаРасчетаЗП.Пустая() Или ТарифРасчетаЗП.Пустая() Тогда 
		СхемыКатегорийЗаказовТЗ.Очистить();
		СхемыЗонДоставкиТЗ.Очистить();
	КонецЕсли;
	
	//CeHbKA #4085 30.11.2020
	ЗаполнитьТаблицы();
	//CeHbKA #4085 30.11.2020
	
	//CeHbKA #4085 14.12.2020
	УстановитьОтборыТарификацияМинСтавки();//отбор в ДС по выбранным схеме и тарифу
	//CeHbKA #4085 14.12.2020

	//Асеев 27.11.2023 (Задача № 5175)>>>
	Элементы.УправлениеСхемами.Доступность 	= ПраваДоступаНаРедактирование И Не Регион.Пустая();
	//Асеев 27.11.2023 (Задача № 5175)<<<
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРегионПользователя()
	Возврат ПараметрыСеанса.ТерминалДоставки;
КонецФункции

&НаКлиенте
Процедура УстановитьОтборыТарификацияМинСтавки()
	
	ТарификацияЗППоЗаказам.Отбор.Элементы.Очистить();
	МинимальныеСтавки.Отбор.Элементы.Очистить();
	СтавкиОплатыПоНачислениямЗП.Отбор.Элементы.Очистить();
	
	//--
	Отбор = ТарификацияЗППоЗаказам.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("СхемаРасчетаЗП");
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	Отбор.ПравоеЗначение 	= СхемаРасчетаЗП;
	
	Отбор = ТарификацияЗППоЗаказам.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ТарифРасчетаЗП");
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	Отбор.ПравоеЗначение 	= ТарифРасчетаЗП;
	
	//--
	Отбор = МинимальныеСтавки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("СхемаРасчетаЗП");
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	Отбор.ПравоеЗначение 	= СхемаРасчетаЗП;
	
	Отбор = МинимальныеСтавки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ТарифРасчетаЗП");
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	Отбор.ПравоеЗначение 	= ТарифРасчетаЗП;
	
	//--
	Отбор = СтавкиОплатыПоНачислениямЗП.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("СхемаРасчетаЗП");
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	Отбор.ПравоеЗначение 	= СхемаРасчетаЗП;
	
	Отбор = СтавкиОплатыПоНачислениямЗП.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ТарифРасчетаЗП");
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	Отбор.ПравоеЗначение 	= ТарифРасчетаЗП;
	
	
	Элементы.ТарификацияЗППоЗаказам.Обновить();	
	Элементы.МинимальныеСтавки.Обновить();	
	Элементы.СтавкиОплатыПоНачислениямЗП.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьКартинок(ИсточникПроверки = Неопределено)
	
	ОчиститьСообщения();  
	НетОшибкиВыбораСЗРП 	= Истина;
	НетОшибкиВыбораТариф 	= Истина;
	
	Если ИсточникПроверки = "СРЗП" Тогда
		НетОшибкиВыбораСЗРП = ПроверимСРЗП();
		Элементы.СхемаСостояниеОбменаДаннымиУспех.Видимость 	= НетОшибкиВыбораСЗРП И ЗначениеЗаполнено(СхемаРасчетаЗП);
		Элементы.СхемаСостояниеОбменаДаннымиОшибка.Видимость 	= Не НетОшибкиВыбораСЗРП ИЛИ Не ЗначениеЗаполнено(СхемаРасчетаЗП);
	ИначеЕсли ИсточникПроверки = "Тариф" Тогда
		НетОшибкиВыбораТариф = ПроверимТариф();
		Элементы.ТарифСостояниеОбменаДаннымиУспех.Видимость 	= НетОшибкиВыбораТариф И ЗначениеЗаполнено(ТарифРасчетаЗП);
		Элементы.ТарифСостояниеОбменаДаннымиОшибка.Видимость 	= Не НетОшибкиВыбораТариф ИЛИ Не ЗначениеЗаполнено(ТарифРасчетаЗП);
	Иначе	
		НетОшибкиВыбораСЗРП 	= ПроверимСРЗП();
		НетОшибкиВыбораТариф 	= ПроверимТариф();
		Элементы.СхемаСостояниеОбменаДаннымиУспех.Видимость 	= НетОшибкиВыбораСЗРП И ЗначениеЗаполнено(СхемаРасчетаЗП);
		Элементы.СхемаСостояниеОбменаДаннымиОшибка.Видимость 	= Не НетОшибкиВыбораСЗРП ИЛИ Не ЗначениеЗаполнено(СхемаРасчетаЗП);
		Элементы.ТарифСостояниеОбменаДаннымиУспех.Видимость 	= НетОшибкиВыбораТариф И ЗначениеЗаполнено(ТарифРасчетаЗП);
		Элементы.ТарифСостояниеОбменаДаннымиОшибка.Видимость 	= Не НетОшибкиВыбораТариф ИЛИ Не ЗначениеЗаполнено(ТарифРасчетаЗП);
	КонецЕсли;
	
	Если Не НетОшибкиВыбораСЗРП Тогда
		Сообщить("Выбранная Схема расчета ЗП неактивна!");
		Элементы.ПериодСозданияСхемыРасчета.Заголовок = "";
	КонецЕсли;
	Если НЕ НетОшибкиВыбораТариф Тогда		
		Сообщить("Выбранный Тариф расчета ЗП не соответствует Схеме расчета ЗП!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверимСРЗП()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	зпАктивнаяСхемаРасчетаЗПСрезПоследних.СхемаРасчетаЗП КАК СхемаРасчетаЗП
		|ИЗ
		|	РегистрСведений.зпАктивнаяСхемаРасчетаЗП.СрезПоследних(&ТекДата, СхемаРасчетаЗП = &СхемаРасчетаЗП) КАК зпАктивнаяСхемаРасчетаЗПСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", СхемаРасчетаЗП);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Истина;//срзп выбрана верно
	Иначе
		Возврат Ложь;//неверно выбран эл справочнкиа
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПроверимТариф()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	зпАктивныйТарифРасчетаЗПСрезПоследних.ТарифРасчетаЗП КАК ТарифРасчетаЗП
		|ИЗ
		|	РегистрСведений.зпАктивныйТарифРасчетаЗП.СрезПоследних(
		|			&ТекДата,
		|			СхемаРасчетаЗП = &СхемаРасчетаЗП
		|				И ТарифРасчетаЗП = &ТарифРасчетаЗП) КАК зпАктивныйТарифРасчетаЗПСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", СхемаРасчетаЗП);
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифРасчетаЗП);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Истина;//тариф выбран верно
	Иначе
		Возврат Ложь;//неверно выбран эл справочнкиа
	КонецЕсли;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Управление доступностью кнопок по результатам проверки РС
&НаКлиенте
Процедура УправлениеДоступностьюКнопок()

	естьДвиженияРС = ПроверитьДвиженияВРС();
	Если естьДвиженияРС И Не СхемаРасчетаЗП.РазрешитьРедактирование Тогда 
		
		Элементы.СхемыКатегорийЗаказовТЗДобавитьСхемуКатегорииДоставки.Доступность 	= Ложь;		
		Элементы.СхемыЗонДоставкиТЗДобавитьСхемуЗоныДоставки.Доступность 			= Ложь;
		Элементы.СхемыКатегорийЗаказовТЗВыбратьСуществующий.Доступность 			= Ложь;
		Элементы.СхемыЗонДоставкиТЗВыбратьСуществующийСхемаЗонДоставки.Доступность 	= Ложь;
		
		Элементы.ПодчиненныеСправочникиТЗДобавитьЭлПодчиненногоСпр.Доступность 		= Ложь;
		Элементы.СхемыКатегорийЗаказовТЗУдалитьСхемуКатегорииДоставки.Доступность 	= Ложь;
		Элементы.СхемыЗонДоставкиТЗУдалитьСхемуЗоныДоставки.Доступность 			= Ложь;
		Элементы.ПодчиненныеСправочникиТЗУдалитьЭлПодчиненногоСпр.Доступность 		= Ложь;
		
		Элементы.НадписьБлокировкаРедактирования.Видимость = Истина;
		Элементы.НадписьБлокировкаРедактирования.Заголовок = "По дайнной схеме найдены движения! Редактирование ограничено!";
		
	Иначе
		
		Элементы.СхемыКатегорийЗаказовТЗДобавитьСхемуКатегорииДоставки.Доступность 	= Истина;
		Элементы.СхемыЗонДоставкиТЗДобавитьСхемуЗоныДоставки.Доступность 			= Истина;
		Элементы.СхемыКатегорийЗаказовТЗВыбратьСуществующий.Доступность 			= Истина;
		Элементы.СхемыЗонДоставкиТЗВыбратьСуществующийСхемаЗонДоставки.Доступность 	= Истина;
		
		Элементы.ПодчиненныеСправочникиТЗДобавитьЭлПодчиненногоСпр.Доступность 		= Истина;
		Элементы.СхемыКатегорийЗаказовТЗУдалитьСхемуКатегорииДоставки.Доступность 	= Истина;
		Элементы.СхемыЗонДоставкиТЗУдалитьСхемуЗоныДоставки.Доступность 			= Истина;
		Элементы.ПодчиненныеСправочникиТЗУдалитьЭлПодчиненногоСпр.Доступность 		= Истина;
		
		Элементы.НадписьБлокировкаРедактирования.Видимость = Ложь;
		Элементы.НадписьБлокировкаРедактирования.Заголовок = "";
		
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура УправлениеДоступностьюСписков()
	
	естьДвиженияРН = ПроверитьДвиженияВРН();
	//Геннадий 31.05.2021 ->
	//добавлена проверка разрешения на редактирование
	Если естьДвиженияРН И Не ТарифРасчетаЗП.РазрешитьРедактирование Тогда
		Элементы.ТарификацияЗППоЗаказам.ТолькоПросмотр 		= Истина;
		Элементы.МинимальныеСтавки.ТолькоПросмотр 			= Истина;		
		Элементы.СтавкиОплатыПоНачислениямЗП.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ТарификацияЗППоЗаказам.ТолькоПросмотр 		= Ложь;
		Элементы.МинимальныеСтавки.ТолькоПросмотр 			= Ложь;
		Элементы.СтавкиОплатыПоНачислениямЗП.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Функция ПроверитьДвиженияВРС(схемаКатЗаказов = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	зпИсходныеДанныеРасчетаЗППоЗаказам.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.зпИсходныеДанныеРасчетаЗППоЗаказам КАК зпИсходныеДанныеРасчетаЗППоЗаказам
		|ГДЕ
		|	зпИсходныеДанныеРасчетаЗППоЗаказам.СхемаРасчетаЗП = &СхемаРасчетаЗП";
	
	Если ЗначениеЗаполнено(схемаКатЗаказов) Тогда
		Запрос.Текст = Запрос.Текст + " И зпИсходныеДанныеРасчетаЗППоЗаказам.КатегорияЗаказа.Владелец = &Владелец";
		Запрос.УстановитьПараметр("Владелец", схемаКатЗаказов);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", СхемаРасчетаЗП);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Истина;
	Иначе
	    Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПроверитьДвиженияВРН()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	зпНачислениеЗП.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.зпНачислениеЗП КАК зпНачислениеЗП
		|ГДЕ
		|	зпНачислениеЗП.СхемаРасчетаЗП = &СхемаРасчетаЗП
		|	И зпНачислениеЗП.ТарифРасчетаЗП = &ТарифРасчетаЗП";
	
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", СхемаРасчетаЗП);
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифРасчетаЗП);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Истина;
	Иначе
	    Возврат Ложь;
	КонецЕсли;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//ЗАПОЛНЕНИЕ ТАБЛИЦ, получение схемы, тарифа при открытии формы
&НаСервере
Процедура ЗаполнитьТаблицы()
	
	СхемыКатегорийЗаказовТЗ.Очистить();
	СхемыЗонДоставкиТЗ.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	зпСхемыРасчетаЗПСхемыКатегорийЗаказов.СхемаКатегорий КАК СхемаКатегорий,
		|	зпСхемыРасчетаЗПСхемыКатегорийЗаказов.ТипЗаказа КАК ТипЗаказа,
		|	зпСхемыРасчетаЗПСхемыКатегорийЗаказов.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Справочник.зпСхемыРасчетаЗП.СхемыКатегорийЗаказов КАК зпСхемыРасчетаЗПСхемыКатегорийЗаказов
		|ГДЕ
		|	НЕ зпСхемыРасчетаЗПСхемыКатегорийЗаказов.СхемаКатегорий.ПометкаУдаления
		|	И зпСхемыРасчетаЗПСхемыКатегорийЗаказов.Ссылка.Регион = &Регион
		|	И зпСхемыРасчетаЗПСхемыКатегорийЗаказов.Ссылка = &СРЗП
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	зпСхемыРасчетаЗПСхемыЗонДоставки.СхемаЗон КАК СхемаЗон,
		|	зпСхемыРасчетаЗПСхемыЗонДоставки.ТипЗаказа КАК ТипЗаказа,
		|	зпСхемыРасчетаЗПСхемыЗонДоставки.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Справочник.зпСхемыРасчетаЗП.СхемыЗонДоставки КАК зпСхемыРасчетаЗПСхемыЗонДоставки
		|ГДЕ
		|	зпСхемыРасчетаЗПСхемыЗонДоставки.Ссылка.Регион = &Регион
		|	И НЕ зпСхемыРасчетаЗПСхемыЗонДоставки.СхемаЗон.ПометкаУдаления
		|	И зпСхемыРасчетаЗПСхемыЗонДоставки.Ссылка = &СРЗП";
	
	Запрос.УстановитьПараметр("Регион", Регион);
	Запрос.УстановитьПараметр("СРЗП", СхемаРасчетаЗП);
	
	РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
	
	СхемыКатегорийЗаказовТЗ.Загрузить(РезультатЗапросаПакет[0].Выгрузить());
	СхемыЗонДоставкиТЗ.Загрузить(РезультатЗапросаПакет[1].Выгрузить());
		
КонецПроцедуры

&НаСервере
//добавлен параметр, т.к. используется и для проверки при изменении активного тарифа
Функция ПолучитьТарифРасчетаЗП()
	
	трфРасчетаЗП = Справочники.зпТарифыРасчетаЗП.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	зпАктивныйТарифРасчетаЗПСрезПоследних.ТарифРасчетаЗП КАК ТарифРасчетаЗП
		|ИЗ
		|	РегистрСведений.зпАктивныйТарифРасчетаЗП.СрезПоследних(&ТекДата, СхемаРасчетаЗП = &СхемаРасчетаЗП) КАК зпАктивныйТарифРасчетаЗПСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", СхемаРасчетаЗП);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		трфРасчетаЗП = ВыборкаДетальныеЗаписи.ТарифРасчетаЗП; 			
		
	КонецЕсли;
	
	Возврат трфРасчетаЗП;
	
КонецФункции

&НаСервере
Функция ПроверкаПравДоступа()
	
	Если Не РольДоступна("зпРедактированиеСхемыРасчетаЗП") Тогда 
		Сообщить("Внимание!!! Ошибка прав доступа!");
		Возврат Ложь;		
	Иначе
		Возврат Истина;		
	КонецЕсли;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//ОБРАБОТЧИКИ событий

&НаКлиенте
Процедура СхемаРасчетаЗППриИзменении(Элемент)
	
	//проверим, соответствует ли выбранная схема расчета с тарифом расчета зп	
	ЗаполнитьТаблицы();
	Элементы.ПериодСозданияСхемыРасчета.Заголовок = ПолучитьПериодАктивацииСхемыРасчетаЗП();
	
	ВидимостьКартинок("СРЗП");

	УправлениеДоступностьюКнопок();//проверим наличие записией в РС
	
	УстановитьОтборыТарификацияМинСтавки();//отбор в ДС по выбранным схеме и тарифу
	
	//Геннадий 31.05.2021 ->
	УправлениеДоступностьюСписков();//блокировка списков, если есть движения по РН
	
КонецПроцедуры

&НаКлиенте
Процедура ТарифРасчетаЗППриИзменении(Элемент)
	
	ВидимостьКартинок("Тариф");
	
	УправлениеДоступностьюКнопок();
	
	УстановитьОтборыТарификацияМинСтавки();//отбор в ДС по выбранным схеме и тарифу

	УправлениеДоступностьюСписков();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПериодАктивацииСхемыРасчетаЗП()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	зпАктивнаяСхемаРасчетаЗП.Период КАК Период
		|ИЗ
		|	РегистрСведений.зпАктивнаяСхемаРасчетаЗП КАК зпАктивнаяСхемаРасчетаЗП
		|ГДЕ
		|	зпАктивнаяСхемаРасчетаЗП.Регион = &Регион
		|	И зпАктивнаяСхемаРасчетаЗП.СхемаРасчетаЗП = &СхемаРасчетаЗП";
	
	Запрос.УстановитьПараметр("Регион", Регион);
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", СхемаРасчетаЗП);
	РезультатЗапроса 		= Запрос.Выполнить();
	ВыборкаДетальныеЗаписи 	= РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат Формат(ВыборкаДетальныеЗаписи.Период, "ДФ=dd.MM.yyyy");
	Иначе
		Возврат "";
	КонецЕсли;	
	
КонецФункции

&НаКлиенте
Процедура СхемыКатегорийЗаказовТЗПриАктивизацииЯчейки(Элемент)
	
	ПодчиненныеСправочникиТЗ.Очистить();
	
 	Если Не Элемент.ТекущиеДанные = Неопределено Тогда
		Элементы.ЗаголовокКатегорииЗаказов.Видимость 	= Истина;
		Элементы.ЗаголовокЗоныДоставки.Видимость 		= Ложь;
		
		Элементы.ПодчиненныеСправочникиТЗДобавитьЭлПодчиненногоСпр.Доступность = Истина;
		ЗаполнитьТЗПоВладельцу("Справочник.зпКатегорииЗаказов", Элемент.ТекущиеДанные.СхемаКатегорий);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СхемыЗонДоставкиТЗПриАктивизацииЯчейки(Элемент)
	
	ПодчиненныеСправочникиТЗ.Очистить();
	
	Если Не Элемент.ТекущиеДанные = Неопределено Тогда
		Элементы.ЗаголовокКатегорииЗаказов.Видимость 	= Ложь;
		Элементы.ЗаголовокЗоныДоставки.Видимость 		= Истина;
		
		Элементы.ПодчиненныеСправочникиТЗДобавитьЭлПодчиненногоСпр.Доступность = Ложь;
		ЗаполнитьТЗПоВладельцу("Справочник.зпЗоныДоставки", Элемент.ТекущиеДанные.СхемаЗон);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЗПоВладельцу(СправочникНаименование, Владелец)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	зпСправочник.Ссылка КАК ЭлементСпр
		|ИЗ
		|	" + СправочникНаименование + " КАК зпСправочник
		|ГДЕ
		|	НЕ зпСправочник.ПометкаУдаления
		|	И зпСправочник.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	
	ПодчиненныеСправочникиТЗ.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

//---------------------------------------------------------------------------------------------------------------------------------
//КНОПКИ
&НаКлиенте
Процедура ДобавитьСхемуКатегорииЗаказов(Команда)
	
	ЗначенияЗаполнения = Новый Структура("Регион", Регион);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Форма = ОткрытьФорму("Справочник.зпСхемыКатегорийЗаказов.Форма.РедактированиеСхемыКатегорийЗаказов", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСхемуЗоныДоставки(Команда)
	
	ЗначенияЗаполнения = Новый Структура("Регион", Регион);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Форма = ОткрытьФорму("Справочник.зпСхемыЗонДоставки.Форма.ФормаРедактированияСхемыЗоныДоставки", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлПодчиненногоСпр(Команда)
	
	Если ЭтаФорма.ТекущийЭлемент.Имя = "СхемыКатегорийЗаказовТЗ" Тогда
		Если НЕ Элементы.СхемыКатегорийЗаказовТЗ.ТекущиеДанные = Неопределено Тогда
			схемаКатЗаказов = Элементы.СхемыКатегорийЗаказовТЗ.ТекущиеДанные.СхемаКатегорий;
			Если НЕ ПроверитьДвиженияВРС(схемаКатЗаказов) Или СхемаРасчетаЗП.РазрешитьРедактирование Тогда
				ЗначениеОтбора = Новый Структура("Владелец", схемаКатЗаказов);
				ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначениеОтбора);
				ОткрытьФорму("Справочник.зпКатегорииЗаказов.Форма.РедактированиеКатегорииЗаказов", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			Иначе
				Сообщить("Внимание!!! По выбранной схеме категорий заказов есть движения, редактирование запрещено!");
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЭтаФорма.ТекущийЭлемент.Имя = "СхемыЗонДоставкиТЗ" Тогда
		Если Не Элементы.СхемыЗонДоставкиТЗ.ТекущиеДанные = Неопределено Тогда
			ЗначениеОтбора = Новый Структура("Владелец", Элементы.СхемыЗонДоставкиТЗ.ТекущиеДанные.СхемаЗон);
			ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначениеОтбора);
			ОткрытьФорму("Справочник.зпЗоныДоставки.ФормаОбъекта", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСуществующийСхемаКатегорийЗаказов(Команда)
	
	Если Не СхемаРасчетаЗП.Пустая() Тогда
		ЗначениеОтбора = Новый Структура("Регион", Регион);
		ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
		
		ОткрытьФорму("Справочник.зпСхемыКатегорийЗаказов.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
		//Форма = 
		//Форма.Отбор.Регион.Значение = Регион;
		//Форма.Отбор.Регион.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСуществующийСхемаЗонДоставки(Команда)
	
	Если Не СхемаРасчетаЗП.Пустая() Тогда
		ЗначениеОтбора = Новый Структура("Регион", Регион);
		ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
		Форма = ОткрытьФорму("Справочник.зпСхемыЗонДоставки.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
		
		Форма.Отбор.Регион.Значение = Регион;
		Форма.Отбор.Регион.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдаления(Команда)
	
	Если Команда.Имя = "УдалитьЭлПодчиненногоСпр" Тогда
		
		Если Не Элементы.ПодчиненныеСправочникиТЗ.ТекущиеДанные = Неопределено Тогда
			ЗадатьВопросУдаление(Элементы.ПодчиненныеСправочникиТЗ.ТекущиеДанные.ЭлементСпр);
		КонецЕсли;	
			
	ИначеЕсли Команда.Имя = "УдалитьСхемуКатегорииДоставки" Тогда
		
		Если Не Элементы.СхемыКатегорийЗаказовТЗ.ТекущиеДанные = Неопределено Тогда
			ЗадатьВопросУдаление(Элементы.СхемыКатегорийЗаказовТЗ.ТекущиеДанные.СхемаКатегорий);
		КонецЕсли;	
		
	ИначеЕсли Команда.Имя = "УдалитьСхемуЗоныДоставки" Тогда
		
		Если Не Элементы.СхемыЗонДоставкиТЗ.ТекущиеДанные = Неопределено Тогда
			ЗадатьВопросУдаление(Элементы.СхемыЗонДоставкиТЗ.ТекущиеДанные.СхемаЗон);
		КонецЕсли;	
		
	КонецЕсли;
			
КонецПроцедуры

//---------------------------------------------------------------------------------------------------------------------------------
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.зпСхемыКатегорийЗаказов") Тогда 

		ОбработатьВыборСхемыКатегорииЗаказов(ВыбранноеЗначение);
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.зпСхемыЗонДоставки") Тогда 
		
		ОбработатьВыборСхемыЗоныДоставки(ВыбранноеЗначение);
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.зпКатегорииЗаказов") Или ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.зпЗоныДоставки") Тогда 
		
		ОбработатьВыборЭлПодчиненногоСпр(ВыбранноеЗначение);
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда 
		
		Если (ЗначениеЗаполнено(ВыбранноеЗначение.СхемаРасчетаЗП) И ЗначениеЗаполнено(ВыбранноеЗначение.ТарифРасчетаЗП)) ИЛИ
			НЕ (ЗначениеЗаполнено(ВыбранноеЗначение.СхемаРасчетаЗП) И ЗначениеЗаполнено(ВыбранноеЗначение.ТарифРасчетаЗП)) Тогда
			СхемаРасчетаЗП = ВыбранноеЗначение.СхемаРасчетаЗП;
			ТарифРасчетаЗП = ВыбранноеЗначение.ТарифРасчетаЗП;
			ЗаполнитьТаблицы();
			ВидимостьКартинок();			
		ИначеЕсли ЗначениеЗаполнено(ВыбранноеЗначение.СхемаРасчетаЗП) Тогда
			СхемаРасчетаЗП = ВыбранноеЗначение.СхемаРасчетаЗП;
			ЗаполнитьТаблицы();
			ВидимостьКартинок("СРЗП");			
		ИначеЕсли ЗначениеЗаполнено(ВыбранноеЗначение.ТарифРасчетаЗП) Тогда 
			ТарифРасчетаЗП = ВыбранноеЗначение.ТарифРасчетаЗП;
			ЗаполнитьТаблицы();
			ВидимостьКартинок("Тариф");			
		КонецЕсли;
		
		УстановитьОтборыТарификацияМинСтавки();//при смене тарифа/срзп меняем отборы на вкладке "Управление тарифом СРЗП" 
		
		//Геннадий 31.05.2021 ->
		УправлениеДоступностьюКнопок();
		УправлениеДоступностьюСписков();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ОбработатьВыборСхемыЗоныДоставки(ВыбранноеЗначение)
	
	строкаТЧ = СхемаРасчетаЗП.СхемыЗонДоставки.Найти(ВыбранноеЗначение.ТипЗаказа, "ТипЗаказа");
	Если строкаТЧ = Неопределено Тогда
		СРЗП = СхемаРасчетаЗП.ПолучитьОбъект();
		схемыЗонДоставкиТЧ 	= СРЗП.СхемыЗонДоставки;
		строкаТЧ 			= схемыЗонДоставкиТЧ.Добавить();
		строкаТЧ.СхемаЗон 	= ВыбранноеЗначение;
		строкаТЧ.ТипЗаказа 	= ВыбранноеЗначение.ТипЗаказа;
		СРЗП.Записать();
		
		ЗаполнитьТаблицы();
	Иначе
		Сообщить("Схема зоны доставки с типом заказа " + ВыбранноеЗначение.ТипЗаказа + " уже есть в данной Схеме расчета ЗП!");
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ОбработатьВыборСхемыКатегорииЗаказов(ВыбранноеЗначение)
	
	строкаТЧ = СхемаРасчетаЗП.СхемыКатегорийЗаказов.Найти(ВыбранноеЗначение.ТипЗаказа, "ТипЗаказа");
	Если строкаТЧ = Неопределено Тогда
		СРЗП = СхемаРасчетаЗП.ПолучитьОбъект();
		схемыКатегорийЗаказовТЧ	= СРЗП.СхемыКатегорийЗаказов;
		строкаТЧ 				= схемыКатегорийЗаказовТЧ.Добавить();
		строкаТЧ.СхемаКатегорий	= ВыбранноеЗначение;
		строкаТЧ.ТипЗаказа 		= ВыбранноеЗначение.ТипЗаказа;
		СРЗП.Записать();
		
		ЗаполнитьТаблицы();
	Иначе
		Сообщить("Схема категории заказов с типом заказа " + ВыбранноеЗначение.ТипЗаказа + " уже есть в данной Схеме расчета ЗП!");
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ОбработатьВыборЭлПодчиненногоСпр(ВыбранноеЗначение)
	
	строка = ПодчиненныеСправочникиТЗ.Добавить();
	строка.ЭлементСпр = ВыбранноеЗначение;
	
КонецФункции

//---------------------------------------------------------------------------------------------------------------------------------
//задать вопрос об удалении, пометке на удаление
&НаКлиенте
Процедура ЗадатьВопросУдаление(ЭлСправочника) 
	
	ДопПараметры 	= Новый Структура("ЭлСправочника", ЭлСправочника);
	Оповещение 		= Новый ОписаниеОповещения("ОбработатьВопросНаУдаление", ЭтотОбъект, ДопПараметры); // Прописываем название процедуры-обработчика.
	
	ПоказатьВопрос(	Оповещение, "Вы действительно хотите удалить элемент из текущей Схемы расчета ЗП?", 
					РежимДиалогаВопрос.ДаНет, 0, 
					КодВозвратаДиалога.Нет, "Внимание!!!");
					
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВопросНаУдаление(Результат, Параметры) Экспорт// здесь, думаю, комментировать нечего

	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ПометитьНаУдалениеЭлементСправочника(Параметры.ЭлСправочника);		
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеЭлементСправочника(ЭлСправочника)
	
	Если ТипЗнч(ЭлСправочника) = Тип("СправочникСсылка.зпСхемыКатегорийЗаказов") Тогда
		
		СРЗП 	 = СхемаРасчетаЗП.ПолучитьОбъект();
		строкаТЧ = СРЗП.СхемыКатегорийЗаказов.Найти(ЭлСправочника, "СхемаКатегорий");
		Если Не строкаТЧ = Неопределено Тогда 
			СРЗП.СхемыКатегорийЗаказов.Удалить(строкаТЧ);
			СРЗП.Записать();
			ЗаполнитьТаблицы();
		КонецЕсли;
		 
	ИначеЕсли ТипЗнч(ЭлСправочника) = Тип("СправочникСсылка.зпСхемыЗонДоставки") Тогда
		
		СРЗП = СхемаРасчетаЗП.ПолучитьОбъект();
		строкаТЧ = СРЗП.СхемыЗонДоставки.Найти(ЭлСправочника, "СхемаЗон");
		Если Не строкаТЧ = Неопределено Тогда 
			СРЗП.СхемыЗонДоставки.Удалить(строкаТЧ);
			СРЗП.Записать();
			ЗаполнитьТаблицы();
		КонецЕсли;
		
	Иначе 
		
		ЭлСправочникаОбъект = ЭлСправочника.ПолучитьОбъект();
		ЭлСправочникаОбъект.ПометкаУдаления = Истина;
		ЭлСправочникаОбъект.Записать();
		
		Если ТипЗнч(ЭлСправочника) = Тип("СправочникСсылка.зпКатегорииЗаказов") Тогда
			ЗаполнитьТЗПоВладельцу("Справочник.зпКатегорииЗаказов", ЭлСправочника.Владелец);
		ИначеЕсли ТипЗнч(ЭлСправочника) = Тип("СправочникСсылка.зпЗоныДоставки") Тогда
			ЗаполнитьТЗПоВладельцу("Справочник.зпЗоныДоставки", ЭлСправочника.Владелец);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеСхемами(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Регион", Регион);
	ПараметрыФормы.Вставить("СхемаРасчетаЗП", СхемаРасчетаЗП);
	ПараметрыФормы.Вставить("ТарифРасчетаЗП", ТарифРасчетаЗП);
	ОписаниеВыборСРЗПиТарифа = Новый ОписаниеОповещения("ОбработкаВыборСРЗПиТарифа", ЭтотОбъект);
	//ОткрытьФорму("Обработка.зпУправлениеСхемойИТарификациейЗП.Форма.ФормаУправлениеСхемами", ПараметрыФормы, ЭтаФорма,,,,ОписаниеВыборСРЗПиТарифа, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	ОткрытьФорму("Обработка.зпУправлениеСхемойИТарификациейЗП.Форма.ФормаУправлениеСхемами", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыборСРЗПиТарифа(Результат, ДополнительныеПараметры) Экспорт
	
	//ЗаполнитьТаблицы();
	//ВидимостьКартинок();
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура СхемыКатегорийЗаказовТЗВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", Элемент.ТекущиеДанные.СхемаКатегорий);
	ОткрытьФорму("Справочник.зпСхемыКатегорийЗаказов.Форма.РедактированиеСхемыКатегорийЗаказов", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура СхемыЗонДоставкиТЗВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", Элемент.ТекущиеДанные.СхемаЗон);
	ОткрытьФорму("Справочник.зпСхемыЗонДоставки.Форма.ФормаРедактированияСхемыЗоныДоставки", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПодчиненныеСправочникиТЗВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Элемент.ТекущиеДанные.ЭлементСпр) = Тип("СправочникСсылка.зпКатегорииЗаказов") Тогда
		ПараметрыФормы = Новый Структура("Ключ", Элемент.ТекущиеДанные.ЭлементСпр);
		Форма = ОткрытьФорму("Справочник.зпКатегорииЗаказов.Форма.РедактированиеКатегорииЗаказов", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
	   	ПоказатьЗначение(, Элемент.ТекущиеДанные.ЭлементСпр);
	КонецЕсли;	
		
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//блокировка кнопок ins del
&НаКлиенте
Процедура СхемыКатегорийЗаказовТЗПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СхемыЗонДоставкиТЗПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПодчиненныеСправочникиТЗПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СхемыКатегорийЗаказовТЗПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СхемыЗонДоставкиТЗПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПодчиненныеСправочникиТЗПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборыСписков()
	
	ТарификацияЗППоЗаказам.Отбор.Элементы.Очистить();
	МинимальныеСтавки.Отбор.Элементы.Очистить();
	//СтавкиОплатыПоНачислениямЗП.Отбор.Элементы.Очистить();
	
	//--
	Отбор = ТарификацияЗППоЗаказам.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ДобавитьОтбор(Отбор, "СхемаРасчетаЗП", СхемаРасчетаЗП);
	Отбор = ТарификацияЗППоЗаказам.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ДобавитьОтбор(Отбор, "ТарифРасчетаЗП", ТарифРасчетаЗП);
	
	//--
	Отбор = МинимальныеСтавки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ДобавитьОтбор(Отбор, "Должность", Должность);
	Отбор = МинимальныеСтавки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ДобавитьОтбор(Отбор, "ТарифРасчетаЗП", ТарифРасчетаЗП);
	
	//--
	//Отбор = СтавкиОплатыПоНачислениямЗП.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ДобавитьОтбор(Отбор, "СхемаРасчетаЗП", СхемаРасчетаЗП);
	//Отбор = СтавкиОплатыПоНачислениямЗП.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ДобавитьОтбор(Отбор, "ТарифРасчетаЗП", ТарифРасчетаЗП);
	
	//-----------------------------------------------------------------------------------------------
	Если ЗначениеЗаполнено(Должность) Тогда
		Отбор = ТарификацияЗППоЗаказам.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ДобавитьОтбор(Отбор, "Должность", Должность);
		
		Отбор = МинимальныеСтавки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ДобавитьОтбор(Отбор, "Должность", Должность);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Роль) Тогда
		Отбор = ТарификацияЗППоЗаказам.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ДобавитьОтбор(Отбор, "Роль", Роль);
		
		Отбор = МинимальныеСтавки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ДобавитьОтбор(Отбор, "Роль", Роль);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипЗаказа) Тогда
		Отбор = ТарификацияЗППоЗаказам.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ДобавитьОтбор(Отбор, "ТипЗаказа", ТипЗаказа);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СоставЭкипажа) Тогда
		Отбор = ТарификацияЗППоЗаказам.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ДобавитьОтбор(Отбор, "СоставЭкипажа", СоставЭкипажа);
		
		Отбор = МинимальныеСтавки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ДобавитьОтбор(Отбор, "СоставЭкипажа", СоставЭкипажа);
	КонецЕсли;
	
	//-----------------------------------------------------------------------------------------------
	Элементы.ТарификацияЗППоЗаказам.Обновить();	
	Элементы.МинимальныеСтавки.Обновить();	
	//Элементы.СтавкиОплатыПоНачислениямЗП.Обновить();	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОтбор(Отбор, ЛевЗнч, ПравЗнч)
	
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных(ЛевЗнч);
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	Отбор.ПравоеЗначение 	= ПравЗнч;
		
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ТарификацияЗППоЗаказамПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	//Отказ = Истина;
	//ПараметрыФормы = Новый Структура;
	//ПараметрыФормы.Вставить("СхемаРасчетаЗП", СхемаРасчетаЗП);
	//ПараметрыФормы.Вставить("ТарифРасчетаЗП", ТарифРасчетаЗП);
	//Если Копирование Тогда
	//	
	//	ПараметрыФормы.Вставить("Должность", 		Элемент.ТекущиеДанные.Должность);
	//	ПараметрыФормы.Вставить("Роль", 			Элемент.ТекущиеДанные.Роль);
	//	ПараметрыФормы.Вставить("СоставЭкипажа",	Элемент.ТекущиеДанные.СоставЭкипажа);
	//	ПараметрыФормы.Вставить("ТипЗаказа", 		Элемент.ТекущиеДанные.ТипЗаказа);
	//	ПараметрыФормы.Вставить("КатегорияЗаказа", 	Элемент.ТекущиеДанные.КатегорияЗаказа);
	//	ПараметрыФормы.Вставить("ЗонаДоставки", 	Элемент.ТекущиеДанные.ЗонаДоставки);
	//	ПараметрыФормы.Вставить("Тариф", 			Элемент.ТекущиеДанные.Тариф);
	//	
	//КонецЕсли;
	////ОткрытьФорму("Обработка.зпУправлениеСхемойИТарификациейЗП.Форма.ФормаВводаДанныхТариф", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	//ОткрытьФорму("РегистрСведений.зпТарификацияЗППоЗаказам.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
КонецПроцедуры

&НаСервере
Процедура ОтборВидМинимальнойСтавкиПриИзмененииНаСервере()
	
	ИмяОтбора = "ВидМинимальнойСтавки";
	
	ОбщегоНазначенияКлиентСервер83.УдалитьЭлементыГруппыОтбора(МинимальныеСтавки.Отбор,, ИмяОтбора);
	
	Если ОтборВидМинимальнойСтавки = 1 Тогда
		ГруппаЭлементовОтбора = ОбщегоНазначенияКлиентСервер83.СоздатьГруппуЭлементовОтбора(МинимальныеСтавки.Отбор.Элементы, ИмяОтбора, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(ГруппаЭлементовОтбора, "ВидМинимальнойСтавки", Перечисления.зпВидыМинимальныхСтавок.ЗаДень, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	ИначеЕсли ОтборВидМинимальнойСтавки = 2 Тогда
		ГруппаЭлементовОтбора = ОбщегоНазначенияКлиентСервер83.СоздатьГруппуЭлементовОтбора(МинимальныеСтавки.Отбор.Элементы, ИмяОтбора, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(ГруппаЭлементовОтбора, "ВидМинимальнойСтавки", Перечисления.зпВидыМинимальныхСтавок.ЗаМесяц, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидМинимальнойСтавкиПриИзменении(Элемент)
	ОтборВидМинимальнойСтавкиПриИзмененииНаСервере();
КонецПроцедуры



