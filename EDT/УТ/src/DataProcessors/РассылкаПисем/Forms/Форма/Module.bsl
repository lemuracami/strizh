
&НаКлиенте
Процедура ТипРассылкиПриИзменении(Элемент)
	ТипРассылкиПриИзмененииНаСервере();
	Вариант = 0;
	ПриСменеВарианта();
КонецПроцедуры


&НаКлиенте
Процедура ПриСменеВарианта()
	Если Вариант = 0 Тогда
		Элементы.Контрагенты.Видимость = Ложь;
	ИначеЕсли Вариант = 1 Тогда
		Элементы.Контрагенты.Видимость = Истина;
	КонецеСли;	
	ПриСменеВариантаНаСервере(Вариант);	
КонецПроцедуры	

&НаСервере
Процедура ТипРассылкиПриИзмененииНаСервере()
	Объект.Контрагенты.Очистить();
	ПапкаАрхив = Справочники.Контрагенты.НайтиПоКоду("Shop_9911",Истина);
	ПапкаКомитенты = Справочники.Контрагенты.НайтиПоКоду("000000004",Истина);
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	РассылкиКонтрагентов.Контрагент КАК Контрагент,
	            |	РассылкиКонтрагентов.Контрагент.Родитель.ОсновнойМагазин КАК ОсновнойМагазин
	            |ИЗ
	            |	РегистрСведений.РассылкиКонтрагентов КАК РассылкиКонтрагентов
	            |ГДЕ
	            |	РассылкиКонтрагентов.ТипРассылки = &ТипРассылки
	            |	И РассылкиКонтрагентов.Почта <> """"
	            |	И РассылкиКонтрагентов.Контрагент.Родитель = &Родитель
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	РассылкиКонтрагентов.Контрагент,
	            |	РассылкиКонтрагентов.Контрагент.Родитель.ОсновнойМагазин
	            |
	            |УПОРЯДОЧИТЬ ПО
	            |	ОсновнойМагазин,
	            |	РассылкиКонтрагентов.Контрагент.Наименование";
	зап.УстановитьПараметр("ТипРассылки", Объект.ТипРассылки);			
	//зап.УстановитьПараметр("Родитель", ПапкаАрхив);			
	зап.УстановитьПараметр("Родитель", ПапкаКомитенты);			
	Рез = Зап.Выполнить().Выгрузить();
	Для каждого Тек Из Рез Цикл
		Нов = Объект.Контрагенты.Добавить();
		Нов.Контрагент = Тек.Контрагент;
		Нов.ОсновнойМагазин = Тек.ОсновнойМагазин;
		Нов.Пометка = Истина;
	КонецЦикла;	
КонецПроцедуры

Процедура ПриСменеВариантаНаСервере(Вар)
	Если Вар = 1 Тогда
		Для Каждого Тек Из Объект.Контрагенты Цикл
			Тек.Пометка = Истина;
		КонецЦикла;	
	КонецеСли;	
КонецПроцедуры	
	

&НаКлиенте
Процедура ВариантПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПриСменеВарианта();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Вариант = 0;
	Объект.ТипРассылки = Перечисления.ТипыРассылки.БухгалтерскаяРассылка;
	ТипРассылкиПриИзмененииНаСервере();
	Объект.ОтКого = "Логистическая компания ""Стриж""";
	
	//Геннадий 29.06.2022 ++
	ОператорРассылки = Справочники.ОператорыСМСРассылки.union;
	//Геннадий 29.06.2022 --
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриСменеВарианта();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = истина;
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПередУдалением(Элемент, Отказ)
	Отказ = истина;
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЕстьКомуОтправлять()
	Для Каждого Тек Из Объект.Контрагенты Цикл
		Если Тек.Пометка Тогда
			Возврат Истина;
		КонецеСли;	
	КонецЦикла;	
	Возврат Ложь;
КонецФункции	

&НаКлиенте
Процедура ВыполнитьРассылку(Команда)
	Если Не ПроверитьЕстьКомуОтправлять() Тогда
		Предупреждение("Нет получателей!",,"Ошибка");
		Возврат;
	КонецеСли;	
	Если Не ЗначениеЗаполнено(Объект.ОтКого) Или Не ЗначениеЗаполнено(Объект.Текст) Или Не ЗначениеЗаполнено(Объект.ТемаПисьма) Тогда
		Предупреждение("Не все реквизиты письма заполнены!",,"Ошибка");
		Возврат;
	КонецеСли;	
	ВыполнитьРассылкуНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРассылкуНаКлиенте()
	// Вставить содержимое обработчика.
	
	МасФ = Неопределено;
	Для Каждого Тек Из Объект.Файлы Цикл
		Ф = Новый Файл(Тек.ИмяФайла);
		Если Не Ф.Существует() Тогда
			Ответ = Вопрос("Файл " + Тек.ИмяФайла + " не существует! Продолжить отправку?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецеСли;	
		Иначе
			Если МасФ = Неопределено Тогда
				МасФ = Новый Массив;
			КонецеСли;
			МасФ.Добавить(Тек.ИмяФайла);
		КонецеСли;	
	КонецЦикла;	
	
	
	СтрОш = "";
	Для Каждого Тек Из Объект.Контрагенты Цикл
		Если тек.Пометка Тогда
			Мас = Новый Массив;
			
			Мас.Добавить(Тек.Контрагент.Ссылка);
			Зап = Новый Запрос;
			Зап.Текст = "ВЫБРАТЬ
			|	РассылкиКонтрагентов.Почта
			|ИЗ
			|	РегистрСведений.РассылкиКонтрагентов КАК РассылкиКонтрагентов
			|ГДЕ
			|	РассылкиКонтрагентов.ТипРассылки = &ТипРассылки
			|	И РассылкиКонтрагентов.Контрагент В(&Мас)
			|
			|УПОРЯДОЧИТЬ ПО
			|	РассылкиКонтрагентов.Контрагент,
			|	РассылкиКонтрагентов.Почта";
			
			Зап.УстановитьПараметр("Мас", Мас);
			Зап.УстановитьПараметр("ТипРассылки", Объект.ТипРассылки);
			
			МасП = Зап.Выполнить().Выгрузить().ВыгрузитьКолонку("Почта");
			МасП.Добавить("info@strizh-logistic.ru");
			Попытка
				ОбратныйАдрес = "noreply_strizh@mail.ru";   //info@strizh-logistic.ru
				
				//Геннадий 29.06.2022 ++
				Если Не РассылкаUnione() Тогда
					Если Не ОтправитьСообщение(МасП, Объект.ТемаПисьма, Объект.Текст, МасФ,Объект.ОтКого, ОбратныйАдрес,,,,Объект.ТипРассылки, Ложь) Тогда
						СтрОш = СтрОш + СокрЛП(Тек.Контрагент.Наименование) + Символы.ПС;
					КонецЕсли;
				Иначе 
					
					ТекстОшибки 	= "";
					ОбратныйАдрес 	= "noreply2@strizh-logistic.ru";
					ОтправитьUnioneНаСервере(МасП, МасФ, ОбратныйАдрес, ТекстОшибки);
					СтрОш 			= ТекстОшибки;
					
				КонецЕсли;
				//Геннадий 29.06.2022 --
				
			Исключение
				//Предупреждение("Ошибка при отправке письма!",,"Ошибка");
				//Возврат;
				СтрОш = СтрОш + СокрЛП(Тек.Контрагент.Наименование) + " (" + ОписаниеОшибки() + ")" + Символы.ПС;
				
			КонецПопытки;
		КонецеСли;
		
	КонецЦикла;
	
	
	Если СтрОш = "" Тогда
		Предупреждение("Успешно!",,"Успех");	
	Иначе
		СтрОш = СтрОш + Символы.ПС + Символы.ПС + "Пользователь: " + ПараметрыСеанса.ТекущийПользователь;
		МасП = Новый Массив;
		МасП.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		lem.ОтправитьСообщение(МасП, "Ошибка при выполнении рассылки", СтрОш);
		Предупреждение("Ошибки при отправке письма!" + Символы.ПС + СтрОш,,"Ошибка");
	КонецЕСли;	
КонецПроцедуры

//Геннадий 29.06.2022 ++
&НаСервере
Функция РассылкаUnione()
	
	Возврат ОператорРассылки = Справочники.ОператорыСМСРассылки.union;
	
КонецФункции

&НаСервере
Функция ОтправитьUnioneНаСервере(МасП, МасФ, ОбратныйАдрес, ТекстОшибки)
	ОбработкаUnion = Обработки.СТРИЖ_ИнтеграцияUniOne.Создать();
	
	ТекстПисьма = СтрЗаменить(Объект.Текст, Символы.ПС, "<br>");
	
	отпр = ОбработкаUnion.ОтправитьEMAIL_HTTP(МасП, Объект.ТемаПисьма, ТекстПисьма, МасФ, Объект.ОтКого, ОбратныйАдрес,,,ТекстОшибки, Объект.ТипРассылки, Ложь);
	Возврат отпр;
КонецФункции
//Геннадий 29.06.2022 --

&НаКлиенте
Функция ОтправитьСообщение(СписокПолучателей = Неопределено, ТемаС = Неопределено, Знач ТекстС = Неопределено, ФайлС = Неопределено, ИмяОтправителя = "Сервер 1С", ОбратныйАдрес = "noreply_strizh@mail.ru", ТипТекста = Неопределено, Сообщение = Неопределено, Ошибка = "", ТипРассылки = Неопределено, ДополнитьАдреса = Истина, ТекстыПисьма = Неопределено) Экспорт//ОбратныйАдрес = "noreply2@strizh-logistic.ru"
	П = Новый ИнтернетПочтовыйПрофиль;
	П.АдресСервераSMTP = "smtp.mail.ru";
	П.ПортSMTP = 465;
	//П.ПользовательSMTP = "noreply@strizh-logistic.ru";
	//П.ПарольSMTP = "4gbZuXsEaz";
	П.ПользовательSMTP = "noreply_strizh@mail.ru";
	П.ПарольSMTP = "OMVVXOwduiJVoGfzIMcz";//пришлось создать пароль для внешних приложений//"losir7_^534qtg";
	
	П.ИспользоватьSSLSMTP= Истина;
	П.АутентификацияSMTP = СпособSMTPАутентификации.Login;
	
	Поч= Новый ИнтернетПочта;
	Поч.Подключиться(п);
	Если ДополнитьАдреса Тогда 
		Если ТипРассылки <> Неопределено Тогда
			Если ТипЗнч(ТипРассылки) = Тип("Массив") Тогда
				Для Сч = 0 По ТипРассылки.Количество() - 1 Цикл
					lem.ДополнитьМассивАдресов(СписокПолучателей, ТипРассылки[Сч]);
				КонецЦикла;	
			Иначе	
				lem.ДополнитьМассивАдресов(СписокПолучателей, ТипРассылки);
			КонецеСли;
		КонецеСли;
	Иначе 
		//СписокПолучателей.Добавить("evgeniy.marochkin@strizh-logistic.ru"); 
		//СписокПолучателей.Добавить("aleksandr.mihushkin@strizh-logistic.ru"); 
	КонецЕсли;
	
	Если Сообщение = "" Или Сообщение = Неопределено Тогда
		
		Сооб = Новый ИнтернетПочтовоеСообщение;
		Сооб.ИмяОтправителя = ИмяОтправителя;
		
		Сооб.ИмяОтправителя = ИмяОтправителя;
		Сооб.Отправитель = ОбратныйАдрес;
		
		//+++ БАО 07.09.2017 №1798 
		//Если ОбщегоНазначенияПривелигированный.ЭтоТестоваяБД() Тогда
		Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
			
			ТемаС = СтрокаСоединенияИнформационнойБазы()  + ". " + ТемаС;
			
			СписокПолучателейСтрока = "Список получателей: ";
			
			Для Каждого Тек Из СписокПолучателей Цикл
				
				СписокПолучателейСтрока = СписокПолучателейСтрока + ",  " + Тек; 
				
			КонецЦикла;
			
			СписокПолучателей.Очистить();
			СписокПолучателей = ОбщегоНазначенияПривелигированный.ПолучитьМылоАдминов();
			
			
			Если ТипТекста = Неопределено Или ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст  Тогда
				ТекстС = СписокПолучателейСтрока + Символы.ПС + ТекстС;
			Иначе
				ТемаС = ТемаС + " " + СписокПолучателейСтрока;
			КонецеСли;
			
			
		КонецЕсли;	
		//--- БАО 07.09.2017 №1798
		
		Сооб.Тема = ТемаС;
		
		если ТипТекста = Неопределено Тогда
			Сооб.Тексты.Добавить(ТекстС);
		Иначе
			Сооб.Тексты.Добавить(ТекстС, ТипТекста);
		КонецеСли;
		
		// в рамках 3307
		Если Не ТекстыПисьма = Неопределено Тогда
			Сооб.Тексты.Очистить();
			Для Каждого СтрокаТекст Из ТекстыПисьма Цикл
				Сооб.Тексты.Добавить(СтрокаТекст.Текст, СтрокаТекст.ТипТекста);
			КонецЦикла;	
		КонецЕсли;	
		// в рамках 3307
		
		Если ФайлС <> Неопределено Тогда
			Если ТипЗнч(ФайлС) = Тип("Строка") Тогда
				Сооб.Вложения.Добавить(ФайлС);
			ИначеЕсли ТипЗнч(ФайлС) = Тип("Массив") Тогда	
				Для Каждого Тек Из ФайлС Цикл
					Сооб.Вложения.Добавить(Тек);
				КонецЦикла;	
			КонецеСли;	
		КонецеСли;	
		
		
		Для Каждого Тек Из СписокПолучателей Цикл
			Сооб.Получатели.Добавить(СокрЛП(Тек));
		КонецЦикла;
		
		
		Сообщение = Сооб;
	Иначе
		
		//+++ БАО 07.09.2017 №1798
		Если ОбщегоНазначенияПривелигированный.ЭтоТестоваяБД() Тогда
			ВызватьИсключение "Недокостылял"; 
		КонецЕсли;	
		//--- БАО 07.09.2017 №1798
		
		Сооб = Сообщение;
	КонецеСли;
	попытка
		Поч.Послать(Сооб);
	Исключение
		Ошибка = ОписаниеОшибки();
		Поч.Отключиться();
		Возврат Ложь;
	КонецПопытки;	
	
	Возврат Истина;
КонецФункции


&НаКлиенте
Процедура ФайлыИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Д = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Д.МножественныйВыбор = Ложь;
	Д.ПроверятьСуществованиеФайла = Истина;
	Если Д.Выбрать() Тогда
		Элементы.Файлы.ТекущиеДанные.ИмяФайла = Д.ПолноеИмяФайла;
		Элементы.Файлы.ЗакончитьРедактированиеСтроки(Ложь);
	КонецеСли;	
КонецПроцедуры
