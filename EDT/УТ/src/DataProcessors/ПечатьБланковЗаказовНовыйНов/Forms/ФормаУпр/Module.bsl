
#Область КомандаСформировать

&НаКлиенте
Процедура ПечатьОзон(Заказ, Ном) 
	
	// вывод квитанции	
	Рез = oz_РаботаССервисом.ReportGet(Заказ, 1,, Истина, Ном); 	
	Если Рез.Код = 0 Тогда					
		ДвоичныеДанные = Рез.ReportData;	
		ПутьКФайлу = КаталогВременныхФайлов() +  "\" + Формат(ТекущаяДата(), "ДФ=yyyy-MM-dd") + "_Квитанция_" + СокрЛП(Заказ.Номер) + ".pdf";		
		ДвоичныеДанные.Записать(ПутьКФайлу);
		//ЭлементыФормы.PDF.LoadFile(ПутьКФайлу);
		//ЭлементыФормы.PDF.printAll();
		//ЭлементыФормы.PDF.printAll();
		ЗапуститьПриложение(ПутьКФайлу);
		СчетчикОзон = СчетчикОзон + 1;
		Элементы.НадписьOZON.Заголовок = "Печать OZON, кол. заказов " + Формат(СчетчикОзон, "");
	КонецЕсли;
	
	// вывод товарного чека
	Рез = oz_РаботаССервисом.ReportGet(Заказ, 1, "SAPostingCashMemo", Истина);		
	Если Рез.Код = 0 Тогда
		ДвоичныеДанные = Рез.ReportData;	
		ПутьКФайлу = КаталогВременныхФайлов() +  "\" + Формат(ТекущаяДата(), "ДФ=yyyy-MM-dd") + "_ТоварныйЧек_" + СокрЛП(Заказ.Номер) + ".pdf";		
		ДвоичныеДанные.Записать(ПутьКФайлу);
		//ЭлементыФормы.PDF2.LoadFile(ПутьКФайлу);
		////ЭлементыФормы.PDF.printAll();
		//ЭлементыФормы.PDF2.printAll();
		
		ЗапуститьПриложение(ПутьКФайлу);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СформироватьНаСервереПоРейсу()
		
	ТабличныйДокументПечати = Новый ТабличныйДокумент;
	ОбраоботкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбраоботкаОбъект.ПечатьПоРейсу(Объект.Рейс, ТабличныйДокументПечати);

	//CeHbKA 02.07.2019 #3283
	Событие = Справочники.СобытияКонтроляВремени.РаспечаткаБланковЗаказов;
	УчетКонтроляВремениСервер.ЗаписатьРСКонтрольВремени(Событие, Объект.Рейс, Истина);
	//CeHbKA 02.07.2019 #3283
	
	Возврат ТабличныйДокументПечати;
	
КонецФункции

&НаСервере
Функция СформироватьНаСервереПоДоставке()
	
	ТабличныйДокументПечати = Новый ТабличныйДокумент;
	ОбраоботкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбраоботкаОбъект.ПечатьПоДоставке2(Объект.Доставка, ТабличныйДокументПечати);
	
	Возврат ТабличныйДокументПечати;
	
КонецФункции

&НаСервере
Функция ЕстьДоставкаOZON(ПараметрыOZON)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ШтрихкодOZON, 0) КАК ШКОзон,
	|	ДополнительныеПараметрыЗаказа.Заказ,
	|	ДополнительныеПараметрыЗаказа.ДополнительныйНомерЗаказа
	|ИЗ
	|	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|ГДЕ
	|	ДополнительныеПараметрыЗаказа.Заказ.Номер = &Номер");
	Запрос.УстановитьПараметр("Номер", СокрЛП(Объект.Доставка.Номер));		
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() И ЗначениеЗаполнено(Рез.ШКОзон) Тогда
		
		ПараметрыOZON = Новый Структура;
		ПараметрыOZON.Вставить("Ном", Рез.ДополнительныйНомерЗаказа);
		ПараметрыOZON.Вставить("Заказ",Рез.Заказ); 
		
		Возврат Истина;
		
	КОнецЕслИ;			
	
	Возврат Ложь;
		
КонецФункции	

&НаКлиенте
Процедура Сформировать(Команда)
	
	ТабличныйДокумент.Очистить();
	СчетчикОзон = 0;
	Элементы.НадписьOZON.Заголовок = "";
	Если ЗначениеЗаполнено(Объект.Рейс) Тогда
			
        ТабличныйДокумент = СформироватьНаСервереПоРейсу();   		
		 
	ИначеЕсли ЗначениеЗаполнено(Объект.Доставка) Тогда
		
		//ПараметрыOZON = Неопределено;
		//Если ЕстьДоставкаOZON(ПараметрыOZON) ТОгда			
		//	
		//	ТекстСообщения = "Заказ ОЗОН, номер заказа: " + СокрЛП(Объект.Доставка.Номер) + " ; Печать внешнего бланка (квитанции) + товарного чека OZONE";
		//	Сообщить(ТекстСообщения);
		//	
		//	Попытка		
		//		
		//		ПечатьОзон(ПараметрыOZON.Заказ, ПараметрыOZON.Ном);
		//		
		//	Исключение
		//		
		//		Сообщить("Не удалось вывести бланк, возможно, он уже открыт.");
		//		
		//	КонецПопытки;
		//	
		//Иначе
			
			ТабличныйДокумент = СформироватьНаСервереПоДоставке();
				
		//КонецЕсли;	
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область КомандаПечатьПоРейсуБезЯндекса

&НаСервере
Функция ПечатьПоРейсуБезЯндексаНаСервере()
	
	ТабличныйДокументПечати = Новый ТабличныйДокумент;
	ОбраоботкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбраоботкаОбъект.ПечатьПоРейсу(Объект.Рейс, ТабличныйДокументПечати, "БезДоставокЯндекс");

	Возврат ТабличныйДокументПечати;

КонецФункции

&НаКлиенте
Процедура ПечатьПоРейсуБезЯндекса(Команда)
	
	ТабличныйДокумент.Очистить();
	Если ЗначениеЗаполнено(Объект.Рейс) Тогда
		
		ТабличныйДокумент = ПечатьПоРейсуБезЯндексаНаСервере();
    
	КонецеСли;	

КонецПроцедуры

#КонецОбласти

#Область КомандаПечатьДоставокЯндекса

&НаСервере
Функция ПечатьДоставокЯндексаНаСервере()

	ТабличныйДокументПечати = Новый ТабличныйДокумент;
	ОбраоботкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбраоботкаОбъект.ПечатьПоРейсу(Объект.Рейс, ТабличныйДокументПечати, "ТолькоДоставкиЯндекс", Период);//Новый СтандартныйПериод(НачалоДня(Период.ДатаНачала), КонецДня(Период.ДатаОкончания))); 

	Возврат ТабличныйДокументПечати;

КонецФункции


&НаКлиенте
Процедура ПечатьДоставокЯндекса(Команда)
	
	ТабличныйДокумент.Очистить();
	
	Если Не ЗначениеЗаполнено(Период.ДатаНачала) И Не ЗначениеЗаполнено(Период.ДатаОкончания)  Тогда
		Предупреждение("Укажите период!!");
		ТекущийЭлемент = Элементы.НачПериода;
		Возврат;
	КонецеСли;
	
	ТабличныйДокумент = ПечатьДоставокЯндексаНаСервере();

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура РейсПриИзменении(Элемент)
	
	Объект.Доставка = ПредопределенноеЗначение("БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка");

КонецПроцедуры

&НаКлиенте
Процедура ДоставкаПриИзменении(Элемент)
	
	Объект.Рейс = ПредопределенноеЗначение("БизнесПроцесс.новаРейсМестнойДоставки.ПустаяСсылка");
	
КонецПроцедуры

//CeHbKA #3283 02.07.2019 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ТекущийЧас = Час(ТекущаяДата());
	ДатаРейса = ?(ТекущийЧас>=0 И ТекущийЧас < 21, ТекущаяДата(), ТекущаяДата()+86400);
	ЗаполнитьСписокРейсов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРейсов(ИсточникДеревоРейсов = Неопределено)
	
	Если ИсточникДеревоРейсов <> Неопределено Тогда
		НовоеДерево = ДанныеФормыВЗначение(ИсточникДеревоРейсов, Тип("ДеревоЗначений"));
		ЗначениеВРеквизитФормы(НовоеДерево, "ДеревоРейсовПоГруппам");
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Рейс.Ссылка КАК Рейс,
		|	Рейс.ДатаРейса КАК ДатаРейса,
		|	Рейс.НомерПалетты КАК НомерПалетты
		|ИЗ
		|	Документ.Рейс КАК Рейс
		|ГДЕ
		|	Рейс.Проведен
		|	И Рейс.ДатаРейса = &ДатаРейса
		|	И Рейс.ТерминалДоставки = &ТерминалДоставки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерПалетты";
	
	Запрос.УстановитьПараметр("ДатаРейса", НачалоДня(ДатаРейса));
	Запрос.УстановитьПараметр("ТерминалДоставки", ПараметрыСеанса.ТерминалДоставки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Элементы.ФормаПечатьПоГруппам.Доступность = НЕ РезультатЗапроса.Пустой();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокРейсов = Новый СписокЗначений;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НС = СписокРейсов.Добавить();
		НС.Значение = ВыборкаДетальныеЗаписи.Рейс;
		НС.Представление = ""+ВыборкаДетальныеЗаписи.НомерПалетты + " (Рейс "+ВыборкаДетальныеЗаписи.Рейс + ")";
		
	КонецЦикла;
	
	ДеревоРейсовПоГруппам.ПолучитьЭлементы().Очистить();
	
	НоваяГруппа = Истина;
	НомерГруппы = 1;
	
	Для каждого СтрокаСпискаРейс Из СписокРейсов Цикл
		
		ИндексСтроки = СписокРейсов.Индекс(СтрокаСпискаРейс);
		Если ИндексСтроки > 0 Тогда
			НоваяГруппа = ИндексСтроки%10 = 0;
		КонецЕсли; 
		
		Если НоваяГруппа Тогда
			
			СтрокаДереваГруппа = ДеревоРейсовПоГруппам.ПолучитьЭлементы().Добавить();
			СтрокаДереваГруппа.Значение = НомерГруппы;
			СтрокаДереваГруппа.Отметка = Истина;
			
			НомерГруппы = НомерГруппы + 1;	
			
			НоваяГруппа = Ложь;
		КонецЕсли;
		
		СтрокаРейс = СтрокаДереваГруппа.ПолучитьЭлементы().Добавить();
		СтрокаРейс.Значение = СтрокаСпискаРейс.Значение;
		СтрокаРейс.Отметка = Истина;
		
	КонецЦикла; 
		
КонецПроцедуры // ()

&НаКлиенте
Процедура ПечатьПоГруппамИзменитьСостав(Команда)
	
	ОткрытьФорму("Обработка.ПечатьБланковЗаказовНовый.Форма.ФормаПечатиПоГруппам", Новый Структура("ДеревоРейсовПоГруппам", ДеревоРейсовПоГруппам), ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ПечатьПоГруппам(Команда)
		
	ПечатьПоГруппамНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПечатьПоГруппамНаСервере()

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");	
	//Макет = ОбработкаОбъект.ПолучитьМакет("МакетСписокРейсовПоГруппам");
	Макет = ОбработкаОбъект.ПолучитьМакет("МакетУрезанный2");

	ВывестиСписокРейсовПоГруппам(Макет);
	ВывестиБланкиЗаказовПоГруппам(Макет, ОбработкаОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСписокРейсовПоГруппам(Макет)

	ОбластьЗаголовок	= Макет.ПолучитьОбласть("Заголовок");
	ОбластьСтрокаГруппа = Макет.ПолучитьОбласть("СтрокаГруппа");
	ОбластьСтрокаРейс	= Макет.ПолучитьОбласть("СтрокаРейс");
	
	ОбластьЗаголовок.Параметры.Дата = Формат(ДатаРейса, "ДФ=dd.MM.yyyy");
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	НоваяГруппа = Истина;
	НомерГруппы = 1;
	
	Для каждого СтрокаДереваГруппа Из ДеревоРейсовПоГруппам.ПолучитьЭлементы() Цикл
		
		Если НЕ СтрокаДереваГруппа.Отметка Тогда
			Продолжить;
		КонецЕсли; 
		
		ОбластьСтрокаГруппа.Параметры.НомерГруппы = СтрокаДереваГруппа.Значение;
		ТабличныйДокумент.Вывести(ОбластьСтрокаГруппа);
		
		Сч = 0;
		
		Для каждого СтрокаДереваРейс Из СтрокаДереваГруппа.ПолучитьЭлементы() Цикл
			
			Если НЕ СтрокаДереваРейс.Отметка Тогда
				Продолжить;	
			КонецЕсли; 	
			
			ОбластьСтрокаРейс.Параметры.Рейс			= СтрокаДереваРейс.Значение;
			ОбластьСтрокаРейс.Параметры.НомерСтроки		= Сч+1;
			ОбластьСтрокаРейс.Параметры.Номер			= СтрокаДереваРейс.Значение.Номер;
			ОбластьСтрокаРейс.Параметры.Водитель		= СтрокаДереваРейс.Значение.РейсМестнойДоставки.Водитель;
			ОбластьСтрокаРейс.Параметры.ГосНомер		= СтрокаДереваРейс.Значение.РейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации;
			ОбластьСтрокаРейс.Параметры.НомерПалетты	= СтрокаДереваРейс.Значение.НомерПалетты;
			
			ТабличныйДокумент.Вывести(ОбластьСтрокаРейс);

		КонецЦикла; 	
		
	КонецЦикла; 
	//Для каждого СтрокаСпискаРейс Из СписокРейсов Цикл
	//	
	//	ИндексСтроки = СписокРейсов.Индекс(СтрокаСпискаРейс);
	//	Если ИндексСтроки > 0 Тогда
	//		НоваяГруппа = ИндексСтроки%10 = 0;
	//	КонецЕсли; 
	//	
	//	Если НоваяГруппа Тогда
	//		ОбластьСтрокаГруппа.Параметры.НомерГруппы = НомерГруппы;
	//		ТабличныйДокумент.Вывести(ОбластьСтрокаГруппа);
	//		
	//		НомерГруппы = НомерГруппы + 1;	
	//		
	//		НоваяГруппа = Ложь;
	//	КонецЕсли; 
	//					
	//	ОбластьСтрокаРейс.Параметры.Рейс			= СтрокаСпискаРейс.Значение;
	//	ОбластьСтрокаРейс.Параметры.НомерСтроки		= ИндексСтроки+1;
	//	ОбластьСтрокаРейс.Параметры.Номер			= СтрокаСпискаРейс.Значение.Номер;
	//	ОбластьСтрокаРейс.Параметры.Водитель		= СтрокаСпискаРейс.Значение.РейсМестнойДоставки.Водитель;
	//	ОбластьСтрокаРейс.Параметры.ГосНомер		= СтрокаСпискаРейс.Значение.РейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации;
	//	ОбластьСтрокаРейс.Параметры.НомерПалетты	= СтрокаСпискаРейс.Значение.НомерПалетты;
	//	
	//	ТабличныйДокумент.Вывести(ОбластьСтрокаРейс);
	//	
	//КонецЦикла; 
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
КонецПроцедуры // ()

&НаСервере
Процедура ВывестиБланкиЗаказовПоГруппам(Макет, ОбработкаОбъект)
	
	ОбластьЗаголовокРейса = Макет.ПолучитьОбласть("ЗаголовокРейса");
	ОбластьСтрокаГруппа = Макет.ПолучитьОбласть("СтрокаГруппа");
	
	Для каждого СтрокаДереваГруппа Из ДеревоРейсовПоГруппам.ПолучитьЭлементы() Цикл
		
		Если НЕ СтрокаДереваГруппа.Отметка Тогда
			Продолжить;
		КонецЕсли; 
		
		ОбластьСтрокаГруппа.Параметры.НомерГруппы = СтрокаДереваГруппа.Значение;
		ТабличныйДокумент.Вывести(ОбластьСтрокаГруппа);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		Для каждого СтрокаДереваРейс Из СтрокаДереваГруппа.ПолучитьЭлементы() Цикл
			
			Если НЕ СтрокаДереваРейс.Отметка Тогда
				Продолжить;	
			КонецЕсли; 	
			
			ОбластьЗаголовокРейса.Параметры.ГосНомер		= СтрокаДереваРейс.Значение.РейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации;
			ОбластьЗаголовокРейса.Параметры.Водитель		= СтрокаДереваРейс.Значение.РейсМестнойДоставки.Водитель;
			ТабличныйДокумент.Вывести(ОбластьЗаголовокРейса);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			ОбработкаОбъект.ПечатьПоРейсу(СтрокаДереваРейс.Значение, ТабличныйДокумент);
			
			//CeHbKA 02.07.2019 #3283
			Событие = Справочники.СобытияКонтроляВремени.РаспечаткаБланковЗаказов;
			УчетКонтроляВремениСервер.ЗаписатьРСКонтрольВремени(Событие, СтрокаДереваРейс.Значение, Истина);
			//CeHbKA 02.07.2019 #3283
									
		КонецЦикла;
		
	КонецЦикла;		
	//Для каждого СтрокаСпискаРейс Из СписокРейсов Цикл
	//	
	//	ТабДок = Новый ТабличныйДокумент;
	//	
	//	ОбластьЗаголовокРейса.Параметры.ГосНомер		= СтрокаСпискаРейс.Значение.РейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации;
	//	ОбластьЗаголовокРейса.Параметры.Водитель		= СтрокаСпискаРейс.Значение.РейсМестнойДоставки.Водитель;
	//	ТабДок.Вывести(ОбластьЗаголовокРейса);
	//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	//			
	//	ОбработкаОбъект.ПечатьПоРейсу(СтрокаСпискаРейс.Значение, ТабДок);

	//	//CeHbKA 02.07.2019 #3283
	//	Событие = Справочники.СобытияКонтроляВремени.РаспечаткаБланковЗаказов;
	//	УчетКонтроляВремениСервер.ЗаписатьРСКонтрольВремени(Событие, Объект.Рейс, Истина);
	//	//CeHbKA 02.07.2019 #3283
	//	
	//	ТабличныйДокумент.Вывести(ТабДок);
	//	
	//КонецЦикла; 	
	
КонецПроцедуры // ()
 
&НаКлиенте
Процедура ДатаРейсаПриИзменении(Элемент)
	ЗаполнитьСписокРейсов();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)

	СтандартнаяОбработка = Ложь;
	
	ЗаполнитьСписокРейсов(ВыбранноеЗначение);
	
КонецПроцедуры
 
//CeHbKA #3283 02.07.2019 
