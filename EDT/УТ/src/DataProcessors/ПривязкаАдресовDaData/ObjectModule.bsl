
Процедура ВыполнитьПривязкуАдресов() Экспорт
	Если Не ЗначениеЗаполнено(НомерЗаказа) Тогда
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		|	новаМестнаяДоставка.Номер КАК НомерЗаказа
		|ИЗ
		|	БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспознаваниеАдресовDaData КАК РаспознаваниеАдресовDaData
		|			ПО РеализацияТоваровУслуг.Ссылка = РаспознаваниеАдресовDaData.Заказ.Ссылка
		|		ПО новаМестнаяДоставка.Номер = РеализацияТоваровУслуг.Номер
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.новаАдреса КАК новаАдреса
		|		ПО новаМестнаяДоставка.ТочкаПрибытия.Адрес.Ссылка = новаАдреса.Ссылка
		|ГДЕ
		|	новаМестнаяДоставка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И (ЕСТЬNULL(новаАдреса.Широта, 0) = 0
		|			ИЛИ ЕСТЬNULL(новаАдреса.Долгота, 0) = 0)
		|	И РеализацияТоваровУслуг.СтатусИнтернетМагазина = 2
		|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
		|	И ЕСТЬNULL(РаспознаваниеАдресовDaData.Период, ИСТИНА) = ИСТИНА";
		Зап.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНачала));			
		Зап.УстановитьПараметр("ДатаКон", КонецДня(ДатаОкончания));			
	Иначе
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		|	новаМестнаяДоставка.Номер КАК НомерЗаказа
		|ИЗ
		|	БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспознаваниеАдресовDaData КАК РаспознаваниеАдресовDaData
		|			ПО РеализацияТоваровУслуг.Ссылка = РаспознаваниеАдресовDaData.Заказ.Ссылка
		|		ПО новаМестнаяДоставка.Номер = РеализацияТоваровУслуг.Номер
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.новаАдреса КАК новаАдреса
		|		ПО новаМестнаяДоставка.ТочкаПрибытия.Адрес.Ссылка = новаАдреса.Ссылка
		|ГДЕ
		|	 РеализацияТоваровУслуг.Номер = &НомерЗаказа";
		Зап.УстановитьПараметр("НомерЗаказа", НомерЗаказа);			
	КонецеСли;
	
	Рез = Зап.Выполнить();
	
	Если Рез.Пустой() Тогда
		Сообщить("Нет данных для привязки!", СтатусСообщения.ОченьВажное);
		Возврат
	КонецЕсли;	
	
	Выб = Рез.Выбрать();
	
	Прокси =  WSСсылки.FrontDelivery.СоздатьWSПрокси("http://tempuri.org/","Service1C","BasicHttpBinding_IService1C");
	
	Фабрика = Прокси.ФабрикаXDTO;    
	
	Тип_orders = Фабрика.Пакеты.Получить("http://schemas.microsoft.com/2003/10/Serialization/Arrays").Получить("ArrayOfint");
	orders = Фабрика.Создать(Тип_orders);
	
	
	Пока Выб.Следующий() Цикл
		Попытка
			orders.int.Добавить(Число(Выб.НомерЗаказа));
		Исключение
			
		КонецПопытки;	
	КонецЦикла;	
	
	Рез = Прокси.AddressSuggest(orders);
	
	Таб = Новый ТаблицаЗначений;
	Таб.Колонки.Добавить("АдресПосле", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(500)));
	Таб.Колонки.Добавить("Широта", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(20, 13)));
	Таб.Колонки.Добавить("Долгота", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(20, 13)));
	Таб.Колонки.Добавить("Качество", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(2)));
	Таб.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата",,,,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	Таб.Колонки.Добавить("НомерЗаказа", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(11)));
	
	
	Таб.Колонки.Добавить("Страна", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(20)));
	Таб.Колонки.Добавить("Регион", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(50)));
	Таб.Колонки.Добавить("НаселенныйПункт", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(100)));
	Таб.Колонки.Добавить("Улица", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(100)));
	Таб.Колонки.Добавить("Дом", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(10)));
	Таб.Колонки.Добавить("Корпус", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(10)));	
	
	МомВремени = ТекущаяДата();
	//+Степанов Берем только первый адрес
	//Для Сч = 0 По Рез.AddressSuggest.Количество() - 1 Цикл
	Если Рез.AddressSuggest.Количество() > 0 Тогда
		Сч = 0;
		СтрокаДанных = Рез.AddressSuggest[Сч];
		Нов = Таб.Добавить();
		Нов.НомерЗаказа = Формат(СтрокаДанных.OrderID, "ЧГ=");
		Нов.Широта = СтрокаДанных.Geo_lat;
		Нов.Долгота = СтрокаДанных.Geo_lon;
		Если ЗначениеЗаполнено(СтрокаДанных.Qc_geo) Тогда
			Нов.Качество = Число(СтрокаДанных.Qc_geo);
		Иначе
			Нов.Качество = -1;
		КонецеСли;	
		Нов.АдресПосле = СтрокаДанных.Value;
		Нов.Период = МомВремени;
		Нов.Страна = "Россия";
		Нов.Регион = СтрокаДанных.Region;
		Нов.НаселенныйПункт = СтрокаДанных.Settlement;
		Нов.Дом = СтрокаДанных.House;
		Нов.Корпус = СтрокаДанных.Block;
	КонецЕсли;
	//КонецЦикла;
	//-Степанов
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	|	Таб.АдресПосле,
	|	Таб.Широта,
	|	Таб.Долгота,
	|	Таб.Качество,
	|	Таб.НомерЗаказа,
	|	Таб.Период,
	|	Таб.Страна,
	|	Таб.Регион,
	|	Таб.НаселенныйПункт,
	|	Таб.Улица,
	|	Таб.Дом,
	|	Таб.Корпус
	|ПОМЕСТИТЬ ВТ_таб
	|ИЗ
	|	&Таб КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_таб.АдресПосле,
	|	ВТ_таб.Широта,
	|	ВТ_таб.Долгота,
	|	ВТ_таб.Качество,
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|	ВТ_таб.Период,
	|	ВТ_таб.Страна,
	|	ВТ_таб.Регион,
	|	ВТ_таб.НаселенныйПункт,
	|	ВТ_таб.Улица,
	|	ВТ_таб.Дом,
	|	ВТ_таб.Корпус
	|ИЗ
	|	ВТ_таб КАК ВТ_таб
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ВТ_таб.НомерЗаказа = РеализацияТоваровУслуг.Номер";
	Зап.УстановитьПараметр("Таб", Таб);
	
	Рез = Зап.Выполнить().Выгрузить();
	Набор = РегистрыСведений.РаспознаваниеАдресовDaData.СоздатьНаборЗаписей();
	
	Набор.Отбор.Период.Установить(МомВремени);
	
	Набор.Загрузить(Рез);
	
	Набор.Записать(Истина);
	
	
	Зап = Новый Запрос;
	
	Зап.Текст = "ВЫБРАТЬ
	            |	новаТочкиДоставки.Ссылка КАК ТочкаДоставки,
	            |	РаспознаваниеАдресовDaData.Заказ.Ссылка КАК Заказ,
	            |	РаспознаваниеАдресовDaData.Широта КАК Широта,
	            |	РаспознаваниеАдресовDaData.Долгота КАК Долгота,
	            |	РаспознаваниеАдресовDaData.Регион КАК Регион,
	            |	РаспознаваниеАдресовDaData.НаселенныйПункт КАК НаселенныйПункт,
	            |	РаспознаваниеАдресовDaData.Улица КАК Улица,
	            |	РаспознаваниеАдресовDaData.Дом КАК Дом,
	            |	РаспознаваниеАдресовDaData.Корпус КАК Корпус,
	            |	""Россия"" КАК Страна,
	            |	РаспознаваниеАдресовDaData.АдресПосле КАК АдресПосле,
	            |	РаспознаваниеАдресовDaData.Заказ.ТерминалДоставки.Код КАК ТерминалДоставкиКод,
	            |	РаспознаваниеАдресовDaData.Заказ.Номер КАК НомерЗаказа
	            |ИЗ
	            |	Справочник.новаТочкиДоставки КАК новаТочкиДоставки
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	            |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаспознаваниеАдресовDaData КАК РаспознаваниеАдресовDaData
	            |			ПО (РаспознаваниеАдресовDaData.Заказ.Номер = новаМестнаяДоставка.Номер)
	            |		ПО новаТочкиДоставки.Ссылка = новаМестнаяДоставка.ТочкаПрибытия.Ссылка
	            |ГДЕ
	            |	РаспознаваниеАдресовDaData.Период = &Период
	            |	И РаспознаваниеАдресовDaData.Качество <> -1
	            |	И РаспознаваниеАдресовDaData.Качество <= 1";
	Зап.УстановитьПараметр("Период", МомВремени);			
	//Код qc_geo Описание
	//0 Точные координаты
	//1 Ближайший дом
	//2 Улица
	//3 Населенный пункт
	//4 Город
	//5 Координаты не определены	
	
	//Асеев 14.10.2022 (Задача № 4913)>>>
	МассивЗаказовЗон = Новый Массив;
	//Асеев 14.10.2022 (Задача № 4913)<<<
	
	Кол = 0;
	Рез = Зап.Выполнить().Выбрать();
	Пока Рез.Следующий() Цикл
		Т = Рез.ТочкаДоставки.ПолучитьОбъект();
		А = Справочники.новаАдреса.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(А, Рез);
		А.Наименование = Рез.АдресПосле;
		А.НаименованиеТочкиИнтереса = Рез.АдресПосле; // определившийся адрес для выгрузки в админку
		А.ВходитВКлассификатор = Ложь;
		Попытка
			А.Записать();
		Исключение
			
			А.УстановитьНовыйКод("А");
			А.Записать();
		Конецпопытки;
		Т.Адрес = А.Ссылка;
		Т.Записать();
		
		
		Набор = РегистрыСведений.РаспознаваниеАдресовDaData.СоздатьНаборЗаписей();
		
		Набор.Отбор.Период.Установить(МомВремени);
		Набор.Отбор.Заказ.Установить(Рез.Заказ);
		Набор.Прочитать();
		
		Набор[0].Адрес = А.Ссылка;
		
		Набор.Записать(Истина);
		
		//mel установка полигонального адреса 08.02.2018
		Если Рез.ТерминалДоставкиКод = 1 Тогда
			Если ЗначениеЗаполнено(СокрЛП(Рез.Долгота)) И ЗначениеЗаполнено(СокрЛП(Рез.Широта)) Тогда
				МассивСтрук = Новый Массив;
				
				Струк = Новый Структура;
				
				Струк.Вставить("НомерЗаказа", Число(Рез.НомерЗаказа));
				Струк.Вставить("Широта", Рез.Широта);
				Струк.Вставить("Долгота", Рез.Долгота);
				МассивСтрук.Добавить(Струк);
				
		//+Широков 24.12.2020 по письму
				//ПолигональнаяМаршрутизацияСервер.ПолучитьПолигоныЗаказов(МассивСтрук);	
				ПолигональнаяМаршрутизацияСервер.ПолучитьПолигоныЗаказов(МассивСтрук, Неопределено, "Обработка.ПривязкаАдресовDaData.ВыполнитьПривязкуАдресов (236, 5)");	
		//-Широков 24.12.2020 по письму
		
				//Асеев 14.10.2022 (Задача № 4913)>>>
				МассивЗаказовЗон.Добавить(Рез.Заказ);
				//Асеев 14.10.2022 (Задача № 4913)<<<
		
			КонецеСли;
		КонецеСли;
		//mel установка полигонального адреса 08.02.2018
		
		
		Кол = Кол + 1;
	КонецЦикла; 
	
	//Асеев 14.10.2022 (Задача № 4913)>>>
	ТарификацияУслугСервер.УстановитьЗонуЗаказов(МассивЗаказовЗон);
	//Асеев 14.10.2022 (Задача № 4913)<<<
	
	#Если Клиент Тогда
		
		Если Кол <> 0 Тогда
			
			Сообщить("Привязка выполнена! Количество привязанных адресов " + Строка(Кол), СтатусСообщения.Внимание);
		Иначе
			Сообщить("Привязка не выполнена! Кривые адреса!", СтатусСообщения.Внимание);
		КонецеСли;	
	#КонецЕсли
КонецПроцедуры	
