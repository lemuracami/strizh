
Перем Форма Экспорт;

Перем ПолеТочкаДоставки;
Перем ФлажокДатаПо;
Перем ПолеДатаПрибытияПо, ПолеДатаПрибытияС;
Перем ПолеВремяПрибытияПо, ПолеВремяПрибытияС;
Перем ПолеДлительностьРазгрузки;
Перем ФлажокАдрес;
Перем ФлажокДоставка;

#Если Клиент Тогда
Процедура ПодключитьИнтерфейс() Экспорт
	
	ДоставкаВозможна = Ложь;
	ИмяДокумента = Форма.ЭтотОбъект.Метаданные().Имя;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|    ТипОбъекта
	|  ИЗ
	|   РегистрСведений.новаДокументыВводаБизнесПроцесса
	|  ГДЕ
	|    РежимВвода В ( ЗНАЧЕНИЕ(Перечисление.новаВводМестнойДоставки.Автоматически)
	|                  ,ЗНАЧЕНИЕ(Перечисление.новаВводМестнойДоставки.РучнойРежим))
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДоставкаВозможна = ДоставкаВозможна или (ИмяДокумента = Выборка.ТипОбъекта);
	КонецЦикла;
	
	Если не ДоставкаВозможна Тогда
		Возврат;
	КонецЕсли;
	
	Панель = Форма.ЭлементыФормы.Найти("ОсновнаяПанель");
	Если Панель = Неопределено Тогда
		Для Каждого Элемент Из Форма.ЭлементыФормы Цикл
			Если ТипЗнч(Элемент) = Тип("Панель") Тогда
				Панель = Элемент;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Панель = Неопределено Тогда
		ВызватьИсключение Форма.Расширение.ИмяФормы + ": Невозможно подключить интерфейс параметров доставки - не найдена панель!";
	КонецЕсли;
	
	Интерфейс = новаРасширениеФорм.ДобавитьОбъектНаФорму(Форма, ЭтотОбъект);
	
	ТекущаяСтраница = Панель.ТекущаяСтраница;
	Страница = Панель.Страницы.Добавить(, "Условия доставки");
	Панель.ТекущаяСтраница = Страница;
	
	Отступ = 8;
	Интервал = 6;
	Высота = 19;
	
	Х = Отступ;
	У = Отступ;
	
	ФлажокДоставка = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Флажок"), Панель);
	ФлажокДоставка.Лево = Х;
	ФлажокДоставка.Верх = У;
	ФлажокДоставка.Высота = Высота;
	ФлажокДоставка.Заголовок = "Требуется доставка";
	ФлажокДоставка.Ширина = 180;
	ФлажокДоставка.ИзменяетДанные = Истина;	
	
	У = У + ФлажокДоставка.Высота + Интервал;
	
	ФлажокАдрес = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Флажок"), Панель);
	ФлажокАдрес.Лево = Х;
	ФлажокАдрес.Верх = У;
	ФлажокАдрес.Высота = Высота;
	ФлажокАдрес.Заголовок = "Адрес:";
	ФлажокАдрес.Ширина = 65;
	ФлажокАдрес.ИзменяетДанные = Истина;
	
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ФлажокАдрес,
		"ПриИзменении",
		0,
		Интерфейс + ".НастроитьПолеТочкиДоставки();");
		
	Х = Х + ФлажокАдрес.Ширина + Отступ;
	
	ПолеТочкаДоставки = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	ПолеТочкаДоставки.Лево = Х;
	ПолеТочкаДоставки.Верх = У;
	ПолеТочкаДоставки.Высота = Высота;
	ПолеТочкаДоставки.Ширина = 280;
	ПолеТочкаДоставки.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.новаТочкиДоставки, СправочникСсылка.новаАдреса");
	ПолеТочкаДоставки.ИзменяетДанные = Истина;
	
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ПолеТочкаДоставки,
		"ПриИзменении",
		0,
		Интерфейс + ".НастроитьПолеТочкиДоставки();");
		
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ПолеТочкаДоставки,
		"НачалоВыбора",
		1,
		Интерфейс + ".ВыбратьТочкуДоставки(Параметр1, Параметр2);");
		
	Х = Отступ;
	У = У + ПолеТочкаДоставки.Высота + Интервал;
	
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = Высота;
	Надпись.Заголовок = "Прибытие с:";
	Надпись.Ширина = 65;
		
	Х = Х + Надпись.Ширина + Отступ;
	
	ПолеДатаПрибытияС = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	ПолеДатаПрибытияС.Лево = Х;
	ПолеДатаПрибытияС.Верх = У;
	ПолеДатаПрибытияС.Высота = Высота;
	ПолеДатаПрибытияС.Ширина = 76;
	ПолеДатаПрибытияС.ТипЗначения = Новый ОписаниеТипов("Дата",,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));
	ПолеДатаПрибытияС.ИзменяетДанные = Истина;
	ПолеДатаПрибытияС.Формат = "ДФ=dd.MM.yyyy";
	
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ПолеДатаПрибытияС,
		"ПриИзменении",
		0,
		Интерфейс + ".НастроитьРеквизитыОкнаДоставки();");
	
	Х = Х + ПолеДатаПрибытияС.Ширина + (Отступ / 2);
	
	ПолеВремяПрибытияС = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	ПолеВремяПрибытияС.Лево = Х;
	ПолеВремяПрибытияС.Верх = У;
	ПолеВремяПрибытияС.Высота = Высота;
	ПолеВремяПрибытияС.Ширина = 36;
	ПолеВремяПрибытияС.ТипЗначения = Новый ОписаниеТипов("Дата",,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));
	ПолеВремяПрибытияС.ИзменяетДанные = Истина;
	ПолеВремяПрибытияС.Формат = "ДФ=ЧЧ:мм";
	ПолеВремяПрибытияС.КнопкаВыбора = Ложь;
	
	Х = Х + ПолеВремяПрибытияС.Ширина + Отступ;
	
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = Высота;
	Надпись.Заголовок = "по:";
	Надпись.Ширина = новаОбщиеПроцедуры.ШиринаТекста(Надпись.Заголовок);		
	
	Х = Х + Надпись.Ширина + Отступ;
	
	ФлажокДатаПо = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Флажок"), Панель);
	ФлажокДатаПо.Лево = Х;
	ФлажокДатаПо.Верх = У;
	ФлажокДатаПо.Высота = Высота;
	ФлажокДатаПо.Ширина = 13;
	
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ФлажокДатаПо,
		"ПриИзменении",
		0,
		Интерфейс + ".НастроитьРеквизитыОкнаДоставки();");
	
	Х = Х + ФлажокДатаПо.Ширина + (Отступ / 2);
	
	ПолеДатаПрибытияПо = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	ПолеДатаПрибытияПо.Лево = Х;
	ПолеДатаПрибытияПо.Верх = У;
	ПолеДатаПрибытияПо.Высота = Высота;
	ПолеДатаПрибытияПо.Ширина = 76;
	ПолеДатаПрибытияПо.ТипЗначения = Новый ОписаниеТипов("Дата",,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));
	ПолеДатаПрибытияПо.ИзменяетДанные = Истина;
	ПолеДатаПрибытияПо.Формат = "ДФ=dd.MM.yyyy";
	
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ПолеДатаПрибытияПо,
		"ПриИзменении",
		0,
		Интерфейс + ".НастроитьРеквизитыОкнаДоставки();");
	
	Х = Х + ПолеДатаПрибытияПо.Ширина + (Отступ / 2);
	
	ПолеВремяПрибытияПо = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	ПолеВремяПрибытияПо.Лево = Х;
	ПолеВремяПрибытияПо.Верх = У;
	ПолеВремяПрибытияПо.Высота = Высота;
	ПолеВремяПрибытияПо.Ширина = 36;
	ПолеВремяПрибытияПо.ТипЗначения = Новый ОписаниеТипов("Дата",,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));
	ПолеВремяПрибытияПо.ИзменяетДанные = Истина;
	ПолеВремяПрибытияПо.Формат = "ДФ=ЧЧ:мм";
	ПолеВремяПрибытияПо.КнопкаВыбора = Ложь;
	
	Х = Отступ;
	У = У + ПолеВремяПрибытияПо.Высота + Интервал;
		
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = Высота;
	Надпись.Заголовок = "Длительность разгрузки:";
	Надпись.Ширина = 145;
		
	Х = Х + Надпись.Ширина + Отступ;
	
	ПолеДлительностьРазгрузки = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	ПолеДлительностьРазгрузки.Лево = Х;
	ПолеДлительностьРазгрузки.Верх = У;
	ПолеДлительностьРазгрузки.Высота = Высота;
	ПолеДлительностьРазгрузки.Ширина = 36;
	ПолеДлительностьРазгрузки.ТипЗначения = Новый ОписаниеТипов("Дата",,Новый КвалификаторыДаты(ЧастиДаты.Время));
	ПолеДлительностьРазгрузки.ИзменяетДанные = Истина;
	ПолеДлительностьРазгрузки.Формат = "ДФ=ЧЧ:мм";
	ПолеДлительностьРазгрузки.КнопкаВыбора = Ложь; 			
	
	У = У + ПолеДлительностьРазгрузки.Высота + Интервал;
	
	ТекстОбработчика = "ТочкаДоставки = ЭлементыФормы."+ПолеТочкаДоставки.Имя+".Значение;
		|Если ТипЗнч(ТочкаДоставки) = Тип(""СправочникСсылка.новаТочкиДоставки"") Тогда
	    |	ЭлементыФормы." + ПолеВремяПрибытияС.Имя + ".Значение = ТочкаДоставки.ВремяРаботыНачало;	 
	    |	ЭлементыФормы." + ПолеВремяПрибытияПо.Имя + ".Значение = ТочкаДоставки.ВремяРаботыОкончание;	 
	    |	ЭлементыФормы." + ПолеДлительностьРазгрузки.Имя + ".Значение = ТочкаДоставки.ВремяПребывания;	 
		|КонецЕсли;";
		
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ПолеТочкаДоставки,
		"ПриИзменении",
		0,
		ТекстОбработчика,
		,
		);	
		
		
	ПолеКонтрагент = Форма.ЭлементыФормы.Найти("Контрагент");
	Если ПолеКонтрагент <> Неопределено Тогда
		новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ПолеКонтрагент,
			"ПриИзменении",
			0,
			"ЭлементыФормы."+ПолеТочкаДоставки.Имя+".Значение = Справочники.новаТочкиДоставки.ПустаяСсылка();
			|новаКонтрагент = новаИнтеграцияСвязьОбъектов.ПолучитьОбъектУТЛ(Контрагент);
			|ЭлементыФормы."+ФлажокДоставка.Имя+".Значение = ?(новаКонтрагент = Неопределено, Ложь, новаКонтрагент.ТребуетсяДоставка);
			|ЭлементыФормы."+ФлажокАдрес.Имя+".Значение = Ложь;",
			,
			);	
	КонецЕсли;	
	
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, Форма,
		"ПередЗаписью",
		3,
		Интерфейс + ".ПередЗаписью(Параметр1, Параметр2, Параметр3);");	
	
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, Форма,
		"ПриЗаписи",
		1,
		Интерфейс + ".ПриЗаписи();");		
	
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, Форма,
		"ОбработкаОповещения",
		3,
		Интерфейс + ".ОбработкаОповещения(Параметр1, Параметр2, параметр3);");		
		
	Если Форма.ЭтоНовый() Тогда
		ДокументУсловийДоставки = Форма.ПараметрОснование;
		Если ДокументУсловийДоставки = Неопределено Тогда
			ДокументУсловийДоставки = Форма.ПараметрОбъектКопирования;
		КонецЕсли;
	Иначе
		ДокументУсловийДоставки = Форма.Ссылка;
	КонецЕсли;
	ЗагрузитьУсловияДоставки(ДокументУсловийДоставки);
	
	Если ЗначениеЗаполнено(ПолеТочкаДоставки.Значение) Тогда
		ФлажокАдрес.Значение = ТипЗнч(ПолеТочкаДоставки.Значение) = Тип("СправочникСсылка.новаАдреса");
	Иначе
		ФлажокАдрес.Значение = Ложь;
	КонецЕсли;
	НастроитьПолеТочкиДоставки();
	
	ФлажокДатаПо.Значение = НачалоДня(ПолеДатаПрибытияС.Значение) <> НачалоДня(ПолеДатаПрибытияПо.Значение);
	НастроитьРеквизитыОкнаДоставки();
	
	Если ЗначениеЗаполнено(Форма.Ссылка) Тогда
		ТекущаяДоставка = новаИнтеграция.ПолучитьМестнуюДоставкуПоОснованию(Форма.Ссылка);
		Если ТекущаяДоставка = Неопределено Тогда
			МестнаяДоставка = новаИнтеграция.ПолучитьЗавершеннуюМестнуюДоставкуПоОснованию(Форма.Ссылка);
		Иначе 
			МестнаяДоставка = ТекущаяДоставка;
		КонецЕсли;
		
		Если МестнаяДоставка <> Неопределено Тогда
			ЦветВажнойНадписи = Новый Цвет(50, 50, 255); 
			ФлажокДоставка.Доступность = Ложь;
			ЗаголовокНадписьДоставка = "Заказ на доставку "+МестнаяДоставка.Номер+" от "+Формат(МестнаяДоставка.Дата,"ДФ=dd.MM.yyyy");
			СостояниеДоставкиПланирование = ", в планировании.";
			СостояниеДоставкиВРейсе = ", включен в рейс.";
			
			КнопкаОтмена = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Кнопка"), Панель);
			КнопкаОтмена.Лево = 8;
			КнопкаОтмена.Верх = 8;
			КнопкаОтмена.Высота = Высота;
			КнопкаОтмена.Заголовок = "Отменить доставку";
			КнопкаОтмена.Ширина = 190;
				
			новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, КнопкаОтмена,
			"Нажатие",
			0,
			Интерфейс + ".КнопкаОтменитьДоставкуНажатие();");
			
			НадписьДоставка = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
			НадписьДоставка.Лево = 8;
			НадписьДоставка.Верх = У;
			НадписьДоставка.Высота = Высота;
			НадписьДоставка.Заголовок = ЗаголовокНадписьДоставка + СостояниеДоставкиПланирование;
			НадписьДоставка.ЦветТекста = ЦветВажнойНадписи;
			НадписьДоставка.Ширина = 500;
			У = У + НадписьДоставка.Высота + Интервал;

			Рейс = новаИнтеграция.ПолучитьРейсПоМестнойДоставке(МестнаяДоставка);
			
			Если Рейс <> Неопределено Тогда
				НадписьРейс = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
				НадписьРейс.Лево = 8;
				НадписьРейс.Верх = У;
				НадписьРейс.Высота = Высота;
				НадписьРейс.Заголовок = "Рейс "+Рейс.Номер+" от "+Формат(Рейс.Дата,"ДФ=dd.MM.yyyy")+". Состояние: "+новаИнтеграция.ТекущееСостояниеРейса(Рейс);
				НадписьРейс.ЦветТекста = ЦветВажнойНадписи;
				НадписьРейс.Ширина = 700;
				У = У + НадписьРейс.Высота + Интервал;
				НадписьДоставка.Заголовок = ЗаголовокНадписьДоставка + СостояниеДоставкиВРейсе;
				
				НадписьДанныеРейса = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
				НадписьДанныеРейса.Лево = 8;
				НадписьДанныеРейса.Верх = У;
				НадписьДанныеРейса.Высота = Высота;
				НадписьДанныеРейса.Заголовок = "Транспорт: "+Рейс.Транспорт+", Водитель: "+Рейс.Водитель+ ", Плановое прибытие: "+новаИнтеграция.ПолучитьПлановоеВремяПосещенияТочки(Рейс, ПолеТочкаДоставки.Значение);
				НадписьДанныеРейса.ЦветТекста = ЦветВажнойНадписи;
				НадписьДанныеРейса.Ширина = 700;
				У = У + НадписьДанныеРейса.Высота + Интервал;
				
				ФлажокДоставка.Доступность = Ложь;
				ФлажокАдрес.Доступность = Ложь;
				ФлажокДатаПо.Доступность = Ложь;
				КнопкаОтмена.Доступность = Ложь;
				ПолеДлительностьРазгрузки.Доступность = Ложь;
				ПолеТочкаДоставки.Доступность = Ложь;
				ПолеДатаПрибытияС.Доступность = Ложь;
				ПолеВремяПрибытияС.Доступность = Ложь;
				ПолеДатаПрибытияПо.Доступность = Ложь;
				ПолеВремяПрибытияПо.Доступность = Ложь;
			КонецЕсли;	
	    КонецЕсли;
	КонецЕсли;
	
	Панель.ТекущаяСтраница = ТекущаяСтраница;
КонецПроцедуры

Процедура ВыбратьТочкуДоставки(Элемент, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если не ФлажокАдрес.Значение Тогда
		
		ФормаВыбора = Справочники.новаТочкиДоставки.ПолучитьФормуВыбора(, ПолеТочкаДоставки);
		Если ТипЗнч(Форма.Ссылка) = Тип("ДокументСсылка.ВнутреннийЗаказ")
		  Или ТипЗнч(Форма.Ссылка) = Тип("ДокументСсылка.КорректировкаВнутреннегоЗаказа") Тогда
			
			ФормаВыбора.СправочникСписок.Отбор.ВладелецТочки.Установить(Новый ОписаниеТипов("СправочникСсылка.новаАдреса, СправочникСсылка.новаКонтрагенты"));
		Иначе	
			ФормаВыбора.СправочникСписок.Отбор.ВладелецТочки.Установить(новаИнтеграцияСвязьОбъектов.ПолучитьОбъектУТЛ(Форма.Контрагент));
		КонецЕСли;	
		ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ВладелецТочки.Доступность = Ложь;
		ФормаВыбора.РежимВыбора = Истина;
		ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
		ФормаВыбора.Открыть();
		
	Иначе
		
		ФормаВыбораАдреса = Справочники.новаАдреса.ПолучитьФормуВыбора(, Форма);
		ФормаВыбораАдреса.РежимВыбора = Истина;
		ФормаВыбораАдреса.НачальноеЗначениеВыбора = Элемент.Значение;
		ФормаВыбораАдреса.Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ИмяСобытия = "ВыбранАдресИзКлассификатора" Тогда
		Если (Источник.ВладелецФормы = ПолеТочкаДоставки) ИЛИ (Источник.ВладелецФормы = Форма) Тогда
			
			ПолеТочкаДоставки.Значение = Параметр;
		КонецЕсли;
	КонецЕсли;
	
Конецпроцедуры

Процедура НастроитьРеквизитыОкнаДоставки() Экспорт
	Если Не ФлажокДатаПо.Значение Тогда
		ПолеДатаПрибытияПо.Значение = Дата(Год(ПолеДатаПрибытияС.Значение),
			Месяц(ПолеДатаПрибытияС.Значение),
			День(ПолеДатаПрибытияС.Значение),
			Час(ПолеВремяПрибытияПо.Значение),
			Минута(ПолеВремяПрибытияПо.Значение),
			0);
	КонецЕсли;
	
	ПолеДатаПрибытияПо.Доступность = ФлажокДатаПо.Значение;
КонецПроцедуры

Процедура НастроитьПолеТочкиДоставки() Экспорт
	Если ФлажокАдрес.Значение Тогда
		ТипПоля = Новый ОписаниеТипов("СправочникСсылка.новаАдреса");
	Иначе	
		ТипПоля = Новый ОписаниеТипов("СправочникСсылка.новаТочкиДоставки");
	КонецЕсли;
	
	ПолеТочкаДоставки.Значение = ТипПоля.ПривестиЗначение(ПолеТочкаДоставки.Значение);
	ПолеТочкаДоставки.КнопкаОткрытия = Не ФлажокАдрес.Значение;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если ФлажокДоставка.Значение Тогда 
		
		СтрокаОшибки ="";
		Если Форма.ЭтотОбъект.ЭтоНовый() Тогда
			Если НачалоДня(ПолеДатаПрибытияС.Значение) < НачалоДня(ТекущаяДата()) Тогда
				СтрокаОшибки = "Начальная дата доставки не может быть меньше текущей!"+ Символы.ПС;
			КонецЕсли;
			
			Если НачалоДня(ПолеДатаПрибытияПо.Значение) < НачалоДня(ТекущаяДата()) Тогда
				СтрокаОшибки = СтрокаОшибки +"Конечная дата доставки не может быть меньше текущей!"+ Символы.ПС;
			КонецЕсли;
		КонецЕсли;
		
		Если Форма.ЭлементыФормы.Найти("Склад") <> Неопределено Тогда
		    СкладИС = Форма.ЭлементыФормы.Склад.Значение;
			
			Если НЕ ЗначениеЗаполнено(СкладИС) Тогда
				СтрокаОшибки = СтрокаОшибки +"Не указан склад!"+ Символы.ПС;
			Иначе
				Если ТипЗнч(СкладИС) = Тип("СправочникСсылка.Склады") Тогда	
					
					Если ЗначениеЗаполнено(СкладИС) Тогда
						СкладУТЛ = новаИнтеграцияСвязьОбъектов.ПолучитьОбъектУТЛ(СкладИС);
						Если (СкладУТЛ <> Неопределено) И (НЕ ЗначениеЗаполнено(СкладУТЛ.ТочкаДоставки)) Тогда
							СтрокаОшибки = СтрокаОшибки +"Не указан адрес склада!"+ Символы.ПС;
						КонецЕсли;
					КонецЕсли;
				//Иначе
					//СтрокаОшибки = СтрокаОшибки +"Следует выбрать склад, а не группу доступности складов!"+ Символы.ПС;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ПолеТочкаДоставки.Значение) Тогда
			СтрокаОшибки = СтрокаОшибки +"Не указан адрес доставки.";
		КонецЕсли;
		
		Если СтрокаОшибки <> "" Тогда
			Отказ = Истина;
			Предупреждение(СтрокаОшибки);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;	
	
	ДополнительныеСвойства = Новый Структура;
	ДополнительныеСвойства.Вставить("ТочкаДоставки", ПолеТочкаДоставки.Значение);
	ДополнительныеСвойства.Вставить("ДатаПрибытияС", ПолеДатаПрибытияС.Значение);
	ДополнительныеСвойства.Вставить("ВремяПрибытияС", НачалоДня(ПолеДатаПрибытияС.Значение)+ Час(ПолеВремяПрибытияС.Значение)*60*60+ Минута(ПолеВремяПрибытияС.Значение)*60);
	ДополнительныеСвойства.Вставить("ДатаПрибытияПо", ПолеДатаПрибытияПо.Значение);
	ДополнительныеСвойства.Вставить("ВремяПрибытияПо", НачалоДня(ПолеДатаПрибытияПо.Значение)+ Час(ПолеВремяПрибытияПо.Значение)*60*60+ Минута(ПолеВремяПрибытияПо.Значение)*60 );;
	ДополнительныеСвойства.Вставить("ДлительностьРазгрузки", ПолеДлительностьРазгрузки.Значение);
	ДополнительныеСвойства.Вставить("ТребуетсяДоставка", ФлажокДоставка.Значение);
	Форма.ЭтотОбъект.ДополнительныеСвойства.Вставить("ДополнительныеСвойства", ДополнительныеСвойства);
КонецПроцедуры

Процедура ПриЗаписи() Экспорт
	новаИнтеграция.ЗаписатьРеквизитыУсловийДоставки(Форма.ЭтотОбъект);	
	
КонецПроцедуры	

Процедура ЗагрузитьУсловияДоставки(ДокументУсловийДоставки)
	РеквизитыДоставки = новаИнтеграция.ПолучитьРеквизитыДоставкиИзБизнесПроцессаПоОснованию(ДокументУсловийДоставки);
	
	Если РеквизитыДоставки = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ТочкаДоставки,	
		|	ВремяПрибытияС,  	
		|   ВремяПрибытияПо,
		|   ДлительностьРазгрузки,
		|   ТребуетсяДоставка
		|ИЗ
		|	РегистрСведений.новаРеквизитыУсловийДоставки
		|ГДЕ
		|	Документ = &Документ";
		
		Запрос.УстановитьПараметр("Документ", ДокументУсловийДоставки);
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			РеквизитыДоставки = Результат.Выбрать();	
	    	РеквизитыДоставки.Следующий();
		КонецЕсли;
	КонецЕсли;
	
	Если РеквизитыДоставки <> Неопределено Тогда
		ПолеТочкаДоставки.Значение = РеквизитыДоставки.ТочкаДоставки;
		ПолеДатаПрибытияС.Значение = РеквизитыДоставки.ВремяПрибытияС;
		ПолеВремяПрибытияС.Значение = РеквизитыДоставки.ВремяПрибытияС;
		ПолеДатаПрибытияПо.Значение = РеквизитыДоставки.ВремяПрибытияПо;
		ПолеВремяПрибытияПо.Значение = РеквизитыДоставки.ВремяПрибытияПо;
		ПолеДлительностьРазгрузки.Значение = РеквизитыДоставки.ДлительностьРазгрузки;
		ФлажокДоставка.Значение = РеквизитыДоставки.ТребуетсяДоставка;
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаОтменитьДоставкуНажатие() Экспорт
	МестнаяДоставка = новаИнтеграция.ПолучитьМестнуюДоставкуПоОснованию(Форма.Ссылка);
	
	обМестнаяДоставка = МестнаяДоставка.ПолучитьОбъект();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	новаЗадачаМестнойДоставки.Ссылка
	|ИЗ
	|	Задача.новаЗадачаМестнойДоставки КАК новаЗадачаМестнойДоставки
	|ГДЕ
	|	новаЗадачаМестнойДоставки.БизнесПроцесс.ВедущаяЗадача В
	|			(ВЫБРАТЬ
	|				новаЗадачаМестнойДоставки.Ссылка
	|			ИЗ
	|				Задача.новаЗадачаМестнойДоставки КАК новаЗадачаМестнойДоставки
	|			ГДЕ
	|				новаЗадачаМестнойДоставки.БизнесПроцесс = &БизнесПроцесс
	|				И новаЗадачаМестнойДоставки.Выполнена = ЛОЖЬ)
	|	И новаЗадачаМестнойДоставки.Выполнена = ЛОЖЬ"
	
	;
	Запрос.УстановитьПараметр("БизнесПроцесс", МестнаяДоставка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Задача = Выборка.Ссылка.ПолучитьОбъект();
		Задача.ДоставкаОтменена = Истина;
		
		Задача.ВыполнитьЗадачу();
		
		мсОбъекты = Новый Массив;
		мсОбъекты.Добавить(обМестнаяДоставка);
		новаОбщиеПроцедуры.ОповеститьОбОбновлении(мсОбъекты);
	КонецЕсли;
	
КонецПроцедуры	

#КонецЕсли