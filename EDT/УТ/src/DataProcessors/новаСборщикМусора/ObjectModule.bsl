#Если Клиент Тогда

Перем РасширенияФорм;
Перем ДелегатыКСЛ;

//Регистрация формы с подключенным расширением
//
//  Параметры:
//    Форма - <Форма>, произвольная форма реализующая экспортную переменную Расширение
//
Процедура ЗарегистрироватьРасширениеФормы(Форма) Экспорт
	
	РасширенияФорм.Добавить(Форма);
	
КонецПроцедуры

//Отключение расширения у закрытой формы
//
Функция ОчиститьСледующееРасширениеФормы() Экспорт
	
	Результат = Ложь;
	
	Если РасширенияФорм.Количество() > 0 Тогда
		
		//Попытка
			Форма = РасширенияФорм[0];
			РасширенияФорм.Удалить(0);
			
			Если не Форма.Открыта() Тогда
				новаРасширениеФорм.ВыполнитьОсвобождениеРесурсов(Форма);
			Иначе
				РасширенияФорм.Добавить(Форма);
			КонецЕсли;
		//Исключение
		//	
		//КонецПопытки;
		
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//Объект требующий обязвтельной очистки ресурсов для корректного завершения работы
//
//  Параметры:
//    Объект - Произвольный объект платформы поддерживающий методы "ГотовОсвободитьРесурсы"
//             и "ВыполнитьОсвобождениеРесурсов"
//
Процедура ЗарегистрироватьОбъектТребующийОчистки(Объект) Экспорт
	
	ДелегатыКСЛ.Добавить(Объект);
	
КонецПроцедуры

//Отключение обработчиков событий КСЛ
//
Функция ОчиститьСледующийОбъект(Принудительно = Ложь) Экспорт
	
	Результат = Ложь;
	
	Если ДелегатыКСЛ.Количество() > 0 Тогда
		
		//Попытка
			Объект = ДелегатыКСЛ[0];
			ДелегатыКСЛ.Удалить(0);
			Если Объект.ГотовОсвободитьРесурсы() или Принудительно Тогда
				Объект.ВыполнитьОсвобождениеРесурсов();
			Иначе
				ДелегатыКСЛ.Добавить(Объект);
			КонецЕсли;
		//Исключение
		//	
		//КонецПопытки;
		
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

РасширенияФорм = Новый Массив;
ДелегатыКСЛ = Новый Массив;

#КонецЕсли
