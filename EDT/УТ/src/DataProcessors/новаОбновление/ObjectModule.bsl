
// Текущая версия конфигурации
//
Перем ТекущаяВерсияКонфигурации Экспорт; // <Строка>

// Версия конфигурации информационной базы
//
Перем ВерсияКонфигурацииИБ Экспорт; // <Строка>

// Выполняет обновление данных информационной базы, если это необходимо
//
Процедура новаВыполнитьОбновлениеИнформационнойБазы() Экспорт
	
	Если ПустаяСтрока(ВерсияКонфигурацииИБ) Тогда
		
		ЗаполнитьСправочникРезультатМестнойДоставки();	
		Константы.новаКоэффициентСкоростиПоУмолчанию.Установить(2);
		Константы.новаСпособОтображенияМаршрута.Установить(Перечисления.новаСпособыОтображенияМаршрутов.Полностью);
		Константы.новаВремяНахождениеТранспортаВРадиусеТочкиДоставки.Установить('00010101000500');
		Константы.новаДопустимоеФактическоеОпережениеГрафикаРейса.Установить('00010101010000');
		Константы.новаДопустимоеФактическоеОпережениеГрафикаРейсаУказаноОтносительно.Установить(Истина);
		Константы.новаДопустимоеФактическоеОпозданиеОтГрафикаРейса.Установить('00010101010000');
		Константы.новаДопустимоеФактическоеОпозданиеОтГрафикаРейсаУказаноОтносительно.Установить(Истина);
		Константы.новаТочкаДоставкиПриоритетПоУмолчанию.Установить(Перечисления.новаПриоритетыТочкиДоставки.Нормальный);
		
		новаИнтеграция.ПервыйЗапуск();
		
		Константы.новаТекущаяВерсияКонфигурации.Установить(ТекущаяВерсияКонфигурации);
		ПолучитьОбщуюФорму("новаФормаПомощникНачалаРаботы").Открыть();
		Возврат;		
	КонецЕсли;
	
	Если ВерсияКонфигурацииИБ <> ТекущаяВерсияКонфигурации Тогда
		СтрСообщения = "обновление информационной базы с версии " + ВерсияКонфигурацииИБ + " на версию " + ТекущаяВерсияКонфигурации;
		Сообщить("Выполняется " + СтрСообщения + Символы.ПС, СтатусСообщения.Информация);
		
		Если ВерсияИБМеньше("3.5.0.0") Тогда
			
			Обработки.новаИнициализацияБазыКСЛ.Создать().ПолучитьФорму().ОткрытьМодально();
			
		КонецЕсли;
		
		Если ВерсияИБМеньше("3.5.9.9") Тогда
			
			Константы.новаОповещатьОбОбновлениях.Установить(Ложь);
			
		КонецЕсли;
		
		Если ВерсияИБМеньше("3.5.9.13") Тогда
			
			УстановитьНастройкиПользователей();
			
		КонецЕсли;
		
		Если ВерсияИБМеньше("3.5.9.16") Тогда
			
			Константы.новаСпособОтображенияМаршрута.Установить(Перечисления.новаСпособыОтображенияМаршрутов.Полностью);
			
		КонецЕсли;
		
		Если ВерсияИБМеньше("3.5.9.18") Тогда
			
			ОбновитьСценарииАвтопланирования();
			
		КонецЕсли;
		
		Если ВерсияИБМеньше("3.6.9.22") Тогда
			
			ОбновитьНастройкиПланированияПоКарте();
			
		КонецЕсли;
		
		Если ВерсияИБМеньше("3.6.9.23") Тогда
			
			ОбновитьНастройкиИндексированияПланированияПоКарте();
			
		КонецЕсли;
		
		Если ВерсияИБМеньше("3.6.10.1") Тогда
			
			Константы.новаТочкаДоставкиПриоритетПоУмолчанию.Установить(Перечисления.новаПриоритетыТочкиДоставки.Нормальный);
			
		КонецЕсли;

		Константы.новаТекущаяВерсияКонфигурации.Установить(ТекущаяВерсияКонфигурации);
		
		ЭтотОбъект.ПолучитьФорму().Открыть();
	КонецЕсли;
	
КонецПроцедуры

//Обновление элементов справочника новаВаринтыНастройкиПланированияПоКарте (индексирование маркеров и группировка)
//
Процедура ОбновитьНастройкиИндексированияПланированияПоКарте()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|    Ссылка
	|  ИЗ
	|    Справочник.новаВаринтыНастройкиПланированияПоКарте 
	|");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			
			Объект.ЦветВектора = Новый ХранилищеЗначения(Новый Цвет(0, 0, 255)); 
			Объект.ЦветМаркераИндекса = Новый ХранилищеЗначения(Новый Цвет(0, 0, 128));
			Объект.ЦветШрифтаМаркераИндекса = Новый ХранилищеЗначения(Новый Цвет(255, 255, 255));
			Объект.НепрозрачностьВекторов = 100;
			Объект.ОтображениеТочекДоставкиНаКарте = Перечисления.новаСпособОтображенияТочекНаКарте.НеОтображать;
				
			Объект.Записать();
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//Обновление элементов справочника новаВаринтыНастройкиПланированияПоКарте
//
Процедура ОбновитьНастройкиПланированияПоКарте()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|    Ссылка
	|  ИЗ
	|    Справочник.новаВаринтыНастройкиПланированияПоКарте 
	|");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			НоваяСтрока = Объект.СвойстваДоставкиРасшифровки.Вставить(6);
			НоваяСтрока.СвойствоДоставки = Перечисления.новаСвойстваМестнойДоставки.Места;
			НоваяСтрока.Префикс = "Места";
			НоваяСтрока.Суффикс = "";
			НоваяСтрока.ПоложениеВСтроке = Перечисления.новаПоложениеВстроке.ВНовойСтроке;
			
			Объект.Записать();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//Обновление состояния сценариев автопланирования
//
Процедура ОбновитьСценарииАвтопланирования()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|    Ссылка
	|  ИЗ
	|    Справочник.новаСценарииАвтоматическогоПланирования
	|");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			обСценарий = Выборка.ссылка.ПолучитьОбъект();
			обСценарий.КоличествоТочекВКластере = 25;
			обСценарий.Записать();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//Установим настройки так, чтобы у пользователя ничего не поменялось
//
Процедура УстановитьНастройкиПользователей()
	
	НачатьТранзакцию();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|    Ссылка КАК Пользователь
	|  ИЗ
	|    Справочник.новаПользователи
	|  ДЛЯ ИЗМЕНЕНИЯ
	|    Справочник.новаПользователи
	|");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
		
		Попытка
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				обПользовтель = Выборка.Пользователь.ПолучитьОбъект();
				обПользовтель.УсекатьДоставкиПоРедактируемомуРейсу = Истина;
				обПользовтель.Записать();
			КонецЦикла;
			
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
		
		ЗафиксироватьТранзакцию();
		
	Иначе
		ОтменитьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСправочникРезультатМестнойДоставки()
	
	СтрСообщения = "Управление транспортной логистикой: "+ Символы.ПС+
				   "Заполнение предопределенных элементов в справочнике ""Результат местной доставки"".";
	Сообщить("Подсистема: " + СтрСообщения + Символы.ПС, СтатусСообщения.Информация);
	
	спрРезультатМестнойДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена;
	обРезультатМестнойДоставки = спрРезультатМестнойДоставки.ПолучитьОбъект();	
	обРезультатМестнойДоставки.РезультатВыполнения = Перечисления.новаРезультатВыполненияМестнойДоставки.Выполнена;
	обРезультатМестнойДоставки.ПроцентОплатыВодителю = 100;
	обРезультатМестнойДоставки.ТочкаПосещена = Истина;
	обРезультатМестнойДоставки.ОбменДанными.Загрузка = Истина;
	Попытка
		обРезультатМестнойДоставки.Записать();
	Исключение
		#Если Клиент Тогда
			Предупреждение("Не удалось записать объект """ + обРезультатМестнойДоставки + """
			|" + ОписаниеОшибки(), 60);
		#КонецЕсли		   
	КонецПопытки;
	ПроверитьИИсправитьКод(спрРезультатМестнойДоставки.Код);
	
	спрРезультатМестнойДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично;
	обРезультатМестнойДоставки = спрРезультатМестнойДоставки.ПолучитьОбъект();	
	обРезультатМестнойДоставки.РезультатВыполнения = Перечисления.новаРезультатВыполненияМестнойДоставки.ВыполненаЧастично;
	обРезультатМестнойДоставки.ПроцентОплатыВодителю = 100;
	обРезультатМестнойДоставки.ТочкаПосещена = Истина;
	обРезультатМестнойДоставки.ОбменДанными.Загрузка = Истина;
	Попытка
		обРезультатМестнойДоставки.Записать();
	Исключение
		#Если Клиент Тогда
			Предупреждение("Не удалось записать объект """ + обРезультатМестнойДоставки + """
			|" + ОписаниеОшибки(), 60);
		#КонецЕсли		   
	КонецПопытки;
	ПроверитьИИсправитьКод(спрРезультатМестнойДоставки.Код);
	
	спрРезультатМестнойДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена;
	обРезультатМестнойДоставки = спрРезультатМестнойДоставки.ПолучитьОбъект();	
	обРезультатМестнойДоставки.РезультатВыполнения = Перечисления.новаРезультатВыполненияМестнойДоставки.НеВыполнена;
	обРезультатМестнойДоставки.ПроцентОплатыВодителю = 0;
	обРезультатМестнойДоставки.ТочкаПосещена = Ложь;
	обРезультатМестнойДоставки.ОбменДанными.Загрузка = Истина;
	Попытка
		обРезультатМестнойДоставки.Записать();
	Исключение
		#Если Клиент Тогда
			Предупреждение("Не удалось записать объект """ + обРезультатМестнойДоставки + """
			|" + ОписаниеОшибки(), 60);
		#КонецЕсли		   
	КонецПопытки;
	ПроверитьИИсправитьКод(спрРезультатМестнойДоставки.Код);
КонецПроцедуры

Процедура ПроверитьИИсправитьКод(ОтборКод)
	Выборка = Справочники.новаРезультатМестнойДоставки.Выбрать(,,Новый Структура("Код",ОтборКод,));
	Пока Выборка.Следующий() Цикл
		Если  Выборка.Предопределенный Тогда Продолжить КонецЕсли;
		Объект = Выборка.ПолучитьОбъект();	
		Объект.Код = "";
		Объект.ОбменДанными.Загрузка = Истина;
	    Попытка
    	    Объект.Записать();
		Исключение
			#Если Клиент Тогда
        	Предупреждение("Не удалось записать объект """ + Объект + """
                       |" + ОписаниеОшибки(), 60);
			#КонецЕсли		   
    	КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Функция ВерсияИБМеньше(Версия)
	стрТекВерсия = СтрЗаменить(ВерсияКонфигурацииИБ, ".", Символы.ПС);
	стрВерсия = СтрЗаменить(Версия, ".", Символы.ПС);
	Для ъ = 1 По 4 Цикл
		ТекЧасть = Число(СтрПолучитьСтроку(стрТекВерсия, ъ));
		Часть = Число(СтрПолучитьСтроку(стрВерсия, ъ));
		
		Если ТекЧасть > Часть Тогда Возврат Ложь; КонецЕсли;
		Если ТекЧасть < Часть Тогда Возврат Истина; КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

ВерсияКонфигурацииИБ = Константы.новаТекущаяВерсияКонфигурации.Получить();
ТекущаяВерсияКонфигурации = новаОбщиеПроцедуры.ПолучитьВерсиюКонфигурации();
