
Перем Баланс Экспорт;
Перем НомерСообщения Экспорт;
Перем ТабОтправленныхСообщений Экспорт;
Перем Отправка Экспорт;


Функция ОтправитьФайлДляОбработки(ИмяФайла, СтрокаОперации) Экспорт
	
	Если СтрокаОперации = "BALANCE" Тогда
		Сервер = "json.gate.smsbliss.ru/credits";
	ИначеЕсли СтрокаОперации = "SENDERS" Тогда
		Сервер = "json.gate.smsbliss.ru/senders";
	ИначеЕсли СтрокаОперации = "SEND" Тогда
		Сервер = "json.gate.smsbliss.ru/send";
	КонецЕсли;	
     
    HTTP = Новый HTTPСоединение(Сервер); 
        	
	ИмяВходящегоФайла = ПолучитьСистемнуюПапку("MyDocuments") + "\TEMP.txt";
			                    
	Попытка
		HTTP.ОтправитьДляОбработки(ИмяФайла, "", ИмяВходящегоФайла);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Хр = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ИмяВходящегоФайла), Новый СжатиеДанных(9));
	Отправка.Ответ = Хр;
	Отправка.записать();
	
	РезультатОбработки = Новый ТекстовыйДокумент;
	РезультатОбработки.Прочитать(ИмяВходящегоФайла, КодировкаТекста.Системная );
	
	Возврат РезультатОбработки;
	
	
КонецФункции	

Функция ПерекодироватьТекст(ИсходныйТекст)
	
	ПолученныйТекст = "";
	
	//список исключений (знаки препинания)
	Если    ИсходныйТекст = ","
		ИЛИ ИсходныйТекст = "."
		ИЛИ ИсходныйТекст = " "
		ИЛИ ИсходныйТекст = "?"
		ИЛИ ИсходныйТекст = "<"
		ИЛИ ИсходныйТекст = ">"
		ИЛИ ИсходныйТекст = "-"
		ИЛИ ИсходныйТекст = "_"
		ИЛИ ИсходныйТекст = "+"
		ИЛИ ИсходныйТекст = "№"
		ИЛИ ИсходныйТекст = ";"
		ИЛИ ИсходныйТекст = ""
		ИЛИ ИсходныйТекст = ":"
		ИЛИ ИсходныйТекст = "*"
		ИЛИ ИсходныйТекст = "("
		ИЛИ ИсходныйТекст = ")"
		ИЛИ ИсходныйТекст = "="
		ИЛИ ИсходныйТекст = "/"
		ИЛИ ИсходныйТекст = "["
		ИЛИ ИсходныйТекст = "]"
		ИЛИ ИсходныйТекст = "!" Тогда
		ПолученныйТекст = ИсходныйТекст;
	ИначеЕсли ИсходныйТекст = Символ(34) Тогда// двойные кавычки "			
		ПолученныйТекст = "'";
	Иначе	
		Скрипт=Новый COMОбъект("MSScriptControl.ScriptControl");
	    Скрипт.language="jscript";
	    Стрим=Новый COMОбъект("adodb.stream");
	    Стрим.type=2;
	    Стрим.charset="Unicode";
	    Стрим.open();
	    Стрим.writetext(ИсходныйТекст);
	    Стрим.position=0;
	    Стрим.charset="Unicode";
	    Скрипт.AddObject("Стрим",Стрим);
	    ИсходныйТекст = Скрипт.Eval("escape(Стрим.readtext())");
		ПолученныйТекст = СтрЗаменить(ИсходныйТекст, "%", "\");
	КонецЕсли;
	
	Возврат ПолученныйТекст;
	
КонецФункции	

Функция ПолучитьСистемнуюПапку(Имя) Экспорт
	
	Попытка
		
		Ctrl = Новый COMОбъект("MSScriptControl.ScriptControl");
		Ctrl.Language = "vbscript";
		Ctrl.AddCode("
		|Function SpecialFolders(Name)
		|Set Shell = CreateObject(""Wscript.Shell"")
		|SpecialFolders = Shell.SpecialFolders(Name)
		|End Function");
		
		ИмяПапки = Ctrl.Run("SpecialFolders", Имя);
		
	Исключение
		ИмяПапки = Неопределено;
		
	КонецПопытки;
	
	Возврат ИмяПапки;
	
	
КонецФункции

Функция ПривестиТелефонКВиду(ИсходныйНомер)
	
	ДлинаНомера = СтрДлина(ИсходныйНомер);
	
	Буфер = ИсходныйНомер;
	
	ПриведенныйНомер = "";
	
	Для Символ=1 По Число(ДлинаНомера) Цикл
		
		ТекущийСимвол = Сред(Буфер, 1, 1);
		
		//Если Символ=1 
		//	И ТекущийСимвол = 8 Тогда 
		//КонецЕсли;		
		
		Если 	ТекущийСимвол = "0"
			ИЛИ ТекущийСимвол = "1"
			ИЛИ ТекущийСимвол = "2"
			ИЛИ ТекущийСимвол = "3"
			ИЛИ ТекущийСимвол = "4"
			ИЛИ ТекущийСимвол = "5"
			ИЛИ ТекущийСимвол = "6"
			ИЛИ ТекущийСимвол = "7"
			ИЛИ ТекущийСимвол = "8"
			ИЛИ ТекущийСимвол = "9"
			Тогда
			ПриведенныйНомер = ПриведенныйНомер + ТекущийСимвол;
		КонецЕсли;
				
		Если Число(СтрДлина(Буфер)) > 1 Тогда
			Буфер = Сред(Буфер, 2);
		КонецЕсли;
	КонецЦикла;	
	
	Если Число(СтрДлина(ПриведенныйНомер)) = 11
		И Сред(ПриведенныйНомер, 1, 1) = "8" Тогда
		ПриведенныйНомер = "7" + Сред(ПриведенныйНомер, 2, СтрДлина(ПриведенныйНомер) - 1);
	ИначеЕсли 	Число(СтрДлина(ПриведенныйНомер)) = 10 Тогда
		ПриведенныйНомер = "7" + ПриведенныйНомер;
	КонецЕсли;	
	
	//если получившийся номер < 9, то это не мобила
	Если Число(СтрДлина(ПриведенныйНомер)) < 9 Тогда
		Возврат Неопределено;
	Иначе	
		Возврат ПриведенныйНомер;
	КонецЕсли;
	
КонецФункции	

Функция СоздатьФайл(СтрокаОперации, ТелефоныКонтрагентов = Неопределено) Экспорт
	
	ИмяФайла = ПолучитьСистемнуюПапку("MyDocuments") + "\TEMP1.txt";
		
	ФайлДанных = Новый ТекстовыйДокумент;
	Попытка
		ФайлДанных.Прочитать(ИмяФайла, КодировкаТекста.Системная);
	Исключение
		FSO = Новый COMОбъект("Scripting.FileSystemObject");
		
		File = FSO.CreateTextFile(ИмяФайла);
		File.Close();
		
		Попытка 
			ФайлДанных.Прочитать(ИмяФайла, КодировкаТекста.Системная);
		Исключение
			Сообщить("Невозможно создать файл в папке <MyDocuments>");
		КонецПопытки;	
		
	КонецПопытки;	
		
		
	ФайлДанных.Очистить();
	
	//тут составим общий список телефонов: список тел. контрагентов + список доп. номеров
	Если СтрокаОперации = "SEND" Тогда
		СписокТелефоновДляРассылки = ТелефоныКонтрагентов.Скопировать();
		СписокДопНомеров = СформироватьСписокДопНомеров();
		Для Каждого ДопНомер Из СписокДопНомеров Цикл
			
			НовыйНомер = СписокТелефоновДляРассылки.Добавить();
			НовыйНомер.Телефон = ДопНомер.Значение;		
			
		КонецЦикла;
		
		Если СписокТелефоновДляРассылки.Количество() = 0 Тогда
			Предупреждение("Не выбрано ни одного номера для отправки сообщений!");
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;	

	Если СтрокаОперации = "BALANCE" 
		ИЛИ СтрокаОперации = "SENDERS" Тогда
	
		ФайлДанных.ДобавитьСтроку("{");
		ФайлДанных.ДобавитьСтроку("""login""" +    ": " + Символ(34) + Логин  + Символ(34) + ",");
		ФайлДанных.ДобавитьСтроку("""password""" + ": " + Символ(34) + Пароль + Символ(34));
		ФайлДанных.ДобавитьСтроку("}");
		
	ИначеЕсли СтрокаОперации = "SEND" Тогда	
		
		ФайлДанных.ДобавитьСтроку("{");
		ФайлДанных.ДобавитьСтроку("""login""" +    ": " + Символ(34) + Логин  + Символ(34) + ",");
		ФайлДанных.ДобавитьСтроку("""password""" + ": " + Символ(34) + Пароль + Символ(34) + ",");
		Если ДатаВремяОтправки > ТекущаяДата() Тогда
			ВремяСУчетомЧасовогоПояса = ДатаВремяОтправки - СуммаЧасовогоПояса();
			КонвертированнаяДата = Строка(Формат(ВремяСУчетомЧасовогоПояса, "ДФ=yyyy-MM-dd") + "T" + Формат(ВремяСУчетомЧасовогоПояса, "ДЛФ=T")+"+00:00");
			ДобавитьЛидирующийНоль(КонвертированнаяДата);
			ФайлДанных.ДобавитьСтроку("""scheduleTime""" + ": " + Символ(34) + КонвертированнаяДата + Символ(34) + ",");
		КонецЕсли;	
		
		ФайлДанных.ДобавитьСтроку("""messages""" + ":[");
		
		НомерСообщения = 0;
		Для Каждого СтрокаСписка Из СписокТелефоновДляРассылки Цикл
				
			КонтактныйТелефон =  ПривестиТелефонКВиду(СтрокаСписка.Телефон); 
			НомерСообщения = НомерСообщения + 1;
			
			ФайлДанных.ДобавитьСтроку("{");
			
			ТекстСПараметрами = ПодставитьПараметры(ТекстСообщения, СтрокаСписка.Ссылка);
			
			ТекущийСимвол = 1;
			НовыйТекст = "";
			Пока ТекущийСимвол <= СтрДлина(ТекстСПараметрами) Цикл
				
				НовыйТекст = НовыйТекст + ПерекодироватьТекст(Сред(ТекстСПараметрами, ТекущийСимвол, 1)); 
				
				ТекущийСимвол = ТекущийСимвол + 1;
			КонецЦикла;
			
			ФайлДанных.ДобавитьСтроку("""clientId""" + ": " + Символ(34) + НомерСообщения  + Символ(34) + ",");					
			ФайлДанных.ДобавитьСтроку("""phone""" +    ": " + Символ(34) + КонтактныйТелефон  + Символ(34) + ",");
			ФайлДанных.ДобавитьСтроку("""text""" +     ": " + Символ(34) + НовыйТекст + Символ(34) + ",");					
			ФайлДанных.ДобавитьСтроку("""sender""" +   ": " + ТекущаяПодпись);					
				
			Если НомерСообщения = СписокТелефоновДляРассылки.Количество() Тогда	
				ФайлДанных.ДобавитьСтроку("}");
			Иначе ФайлДанных.ДобавитьСтроку("},");	
			КонецЕсли;	
										
		КонецЦикла;		
			
		ФайлДанных.ДобавитьСтроку("]");
		
		ФайлДанных.ДобавитьСтроку("}");
		
	КонецЕсли;	
	
	ФайлДанных.Записать(ИмяФайла, КодировкаТекста.Системная);
	
	Возврат ИмяФайла;	
		
КонецФункции

Функция ПодставитьПараметры(ИсходныйТекст, Объект)
	
	Результат = ИсходныйТекст;
	
	Если НЕ ЗначениеЗаполнено(Объект) Тогда
		Результат = СтрЗаменить(Результат, "[F]", "");
		Результат = СтрЗаменить(Результат, "[I]", "");	
		Результат = СтрЗаменить(Результат, "[O]", "");
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
		Результат = СтрЗаменить(Результат, "[F]", Объект.Наименование);
	ИначеЕсли  ТипЗнч(Объект) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
		Результат = СтрЗаменить(Результат, "[F]", Объект.Фамилия);	
		Результат = СтрЗаменить(Результат, "[I]", Объект.Имя);	
		Результат = СтрЗаменить(Результат, "[O]", Объект.Отчество);
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции	

Функция ПодставитьПараметрыНовый(ИсходныйТекст, Объект)
	
	Результат = ИсходныйТекст;
	
	//Если НЕ ЗначениеЗаполнено(Объект) Тогда
	//	Результат = СтрЗаменить(Результат, "[F]", "");
	//	Результат = СтрЗаменить(Результат, "[I]", "");	
	//	Результат = СтрЗаменить(Результат, "[O]", "");
	//ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
	//	Результат = СтрЗаменить(Результат, "[F]", Объект.Наименование);
	//ИначеЕсли  ТипЗнч(Объект) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
	//	Результат = СтрЗаменить(Результат, "[F]", Объект.Фамилия);	
	//	Результат = СтрЗаменить(Результат, "[I]", Объект.Имя);	
	//	Результат = СтрЗаменить(Результат, "[O]", Объект.Отчество);
	//КонецЕсли;	
	
	Результат = СтрЗаменить(Результат, "[ExNumber]", Объект.НомерВнешнегоЗаказа);
	Результат = СтрЗаменить(Результат, "[PhoneCar]", Объект.ТелефонЭкипажа);
	
	Возврат Результат;
КонецФункции


Функция ОбработатьРезультат(СтрокаОтвета, Операция) Экспорт
	
	Если Операция = "BALANCE" или Операция = "GETPRICE" Тогда
		Попытка
			ЕстьОшибка = Найти(СтрокаОтвета, "error");
			Если ЕстьОшибка > 0 Тогда
				Предупреждение("Ошибка авторизации!");
			Иначе
				НачалоБаланса = Найти(СтрокаОтвета, "credits")+10;
				ДлиннаОтвета  = СтрДлина(СтрокаОтвета);
				Ответ = Сред(СтрокаОтвета, НачалоБаланса, ДлиннаОтвета-НачалоБаланса);
				
				Возврат Ответ;
			КонецЕсли;
		Исключение
			Предупреждение("Сервис недоступен!");
		КонецПопытки;
		
	ИначеЕсли Операция = "SENDERS" Тогда
		Попытка
			ЕстьОшибка = Число(Найти(СтрокаОтвета, "error"));
			Если ЕстьОшибка Тогда
				Предупреждение("Ошибка авторизации!");
			Иначе
				НачалоОтвета = Найти(СтрокаОтвета, "[") + 1;
				КонецОтвета = Найти(СтрокаОтвета, "]");
				Ответ = Сред(СтрокаОтвета, НачалоОтвета, КонецОтвета - НачалоОтвета);
				
				СписокПодписей.Очистить();
				
				Пока СтрДлина(Ответ) > 0 Цикл
					
					//НомерСообщения = НомерСообщения + 1;
					
					//ищем первую строку отчета                                              					
					НачалоПодписи = 1;
					КонецПодписи  = ?(Найти(Ответ, ",")>0, Найти(Ответ, ","), СтрДлина(Ответ)+1);
					СтрокаПодписи = Сред(Ответ, НачалоПодписи, (КонецПодписи - НачалоПодписи));
					
					СписокПодписей.Добавить(СокрЛП(СтрокаПодписи));
					//"отрезаем" обрабатываемую строку
					Ответ = Сред(Ответ, КонецПодписи+1, СтрДлина(Ответ) - КонецПодписи);
					
				КонецЦикла;	
					
				Возврат Ответ;
			КонецЕсли;
		Исключение
			Предупреждение("Сервис недоступен!");
		КонецПопытки;
				
	ИначеЕсли Операция = "SEND" Тогда
		Попытка
			ЕстьОшибка = Найти(СтрокаОтвета, "error");
			Если ЕстьОшибка > 0 Тогда
				Предупреждение("Ошибка авторизации!");
			Иначе
				НачалоОтчета = Найти(СтрокаОтвета, "[")+1;
				КонецОтчета  = Найти(СтрокаОтвета, "]");
				ТелоОтчета   = Сред(СтрокаОтвета, НачалоОтчета, КонецОтчета - НачалоОтчета);
				
				ЛокНомерСообщения = 1;
				//в цикле будем обрабатывать ответ построчно
				ДлиннаОтчета = СтрДлина(ТелоОтчета);
				Пока СтрДлина(ТелоОтчета) > 0 Цикл
					
					
					
					//ищем первую строку отчета
					НачалоОтвета = Найти(ТелоОтчета, "{")+1;
					КонецОтвета  = Найти(ТелоОтчета, "}");
					СтрокаОтвета = Сред(ТелоОтчета, НачалоОтвета, КонецОтвета - НачалоОтвета);
					
					//"отрезаем" обрабатываемую строку
					ТелоОтчета = Сред(ТелоОтчета, КонецОтвета+1, СтрДлина(ТелоОтчета) - КонецОтвета);
					
					//в цикле будем каждый параметр разбирать отдельно
					ДлиннаОтвета = СтрДлина(СтрокаОтвета);
					Пока СтрДлина(СтрокаОтвета) > 0 Цикл
						//ищем первую строку отчета
						НачалоПараметра = 1;
						КонецПараметра  = ?(Найти(СтрокаОтвета, ",")>0, Найти(СтрокаОтвета, ","), СтрДлина(СтрокаОтвета));
						СтрокаПараметра = Сред(СтрокаОтвета, НачалоПараметра, КонецПараметра - НачалоПараметра);
						
						//"отрезаем" обрабатываемую строку
						СтрокаОтвета = Сред(СтрокаОтвета, КонецПараметра+1, СтрДлина(СтрокаОтвета) - КонецПараметра);
						
						Если Найти(СтрокаПараметра, "status") > 0 Тогда
							//тогда это статус
							НачалоСтатуса = Найти(СтрокаПараметра, ":") + 3;
							СтрокаПараметра = Сред(СтрокаПараметра, НачалоСтатуса, КонецПараметра - НачалоСтатуса);
							Статус = Сред(СтрокаПараметра, 1, Найти(СтрокаПараметра, Символ(34)) - 1);
							
						
							
							Если Статус = "accepted" Тогда
								#Если Клиент Тогда
								Сообщить("Сообщение №" + ЛокНомерСообщения + " - Сообщение принято сервисом");
								#КонецЕсли
								Стат = Справочники.СтатусыСМССообщений.СообщениеПринятоСервисом;
							ИначеЕсли Статус = "invalid mobile phone" Тогда
								#Если Клиент Тогда
								Сообщить("Сообщение №" + ЛокНомерСообщения + " - Неверно задан номер тефона");
								#КонецЕсли
								Стат = Справочники.СтатусыСМССообщений.НеверноЗаданНомерТефона;
							ИначеЕсли Статус = "text is empty" Тогда
								#Если Клиент Тогда
								Сообщить("Сообщение №" + ЛокНомерСообщения + " - Отсутствует текст");
								#КонецЕсли
								Стат = Справочники.СтатусыСМССообщений.ОтсутствуетТекст;
							ИначеЕсли Статус = "sender address invalid" Тогда
								#Если Клиент Тогда
								Сообщить("Сообщение №" + ЛокНомерСообщения + " - Неверная (незарегистрированная) подпись отправителя");
								#КонецЕсли
								Стат = Справочники.СтатусыСМССообщений.НевернаяПодписьОтправителя;
							ИначеЕсли Статус = "wapurl invalid" Тогда
								#Если Клиент Тогда
								Сообщить("Сообщение №" + ЛокНомерСообщения + " - Неправильный формат wap-push ссылки");
								#КонецЕсли
								Стат = Справочники.СтатусыСМССообщений.НеправильныйФорматWapPushСсылки;
							ИначеЕсли Статус = "invalid schedule time format" Тогда
								#Если Клиент Тогда
								Сообщить("Сообщение №" + ЛокНомерСообщения + " - Неверный формат даты отложенной отправки сообщения");
								#КонецЕсли
								Стат = Справочники.СтатусыСМССообщений.НеверныйФорматДатыОтложеннойОтправкиСообщения;
							ИначеЕсли Статус = "invalid status queue name" Тогда
								#Если Клиент Тогда
								Сообщить("Сообщение №" + ЛокНомерСообщения + " - Неверное название очереди статусов сообщений");
								#КонецЕсли
								Стат = Справочники.СтатусыСМССообщений.НеверноеНазваниеОчередиСтатусовСообщений;
							ИначеЕсли Статус = "not enough credits" Тогда
								#Если Клиент Тогда
								Сообщить("Сообщение №" + ЛокНомерСообщения + " - Баланс пуст (проверьте баланс)");	
								#КонецЕсли
								Стат = Справочники.СтатусыСМССообщений.БалансПуст;
							КонецЕсли;	
							
							
							
							Най = ТабОтправленныхСообщений.Найти(ЛокНомерСообщения, "ИдентификаторСМСНаш");
							Если Най <> Неопределено Тогда
								Най.СтатусСообщения = Стат;
								
								СтрокаПараметра2 = СокрЛП(Сред(СтрокаОтвета, НачалоПараметра, КонецПараметра - НачалоПараметра + 1));
								СтрокаОтвета2 = Сред(СтрокаОтвета, КонецПараметра+1, СтрДлина(СтрокаОтвета) - КонецПараметра);
								
							НачалоСтатуса = Найти(СтрокаПараметра2, ":") + 2;
							СтрокаПараметра2 = Сред(СтрокаПараметра2, НачалоСтатуса, КонецПараметра - НачалоСтатуса);
							//Статус222 = Сред(СтрокаПараметра2, 1, Найти(СтрокаПараметра2, Символ(34)) - 1);
							Най.ИдентификаторСМС = СтрокаПараметра2;
								Если Найти(СтрокаПараметра2, "smscId") > 0 Тогда
									
								КонецеСли;	
							КонецЕСли;	
							
						ИначеЕсли Найти(СтрокаОтвета, "smscId") > 0 Тогда
							Продолжить;
						ИначеЕсли Найти(СтрокаОтвета, "clientId") > 0 Тогда
							Продолжить;
						КонецЕсли;	
						
					КонецЦикла;	
					ЛокНомерСообщения = ЛокНомерСообщения + 1;					
				КонецЦикла;				
				
				НачалоБаланса = Найти(СтрокаОтвета, "credits")+10;
				ДлиннаОтвета  = СтрДлина(СтрокаОтвета);
				Ответ = Сред(СтрокаОтвета, НачалоБаланса, ДлиннаОтвета-НачалоБаланса);
				
				Возврат Ответ;
			КонецЕсли;
		Исключение
			Предупреждение("Сервис недоступен!");
		КонецПопытки;	
			
	КонецЕсли;		
	
	Возврат Неопределено;
	
КонецФункции	

Процедура ОбновитьДанныеПоБалансу() Экспорт
	
	ИмяФайла = СоздатьФайл("BALANCE");
	
	Результат = ОтправитьФайлДляОбработки(ИмяФайла, "BALANCE");
	
	СтрокаРезультат = "";
	Для С = 1 По Результат.КоличествоСтрок() Цикл
		
		СтрокаРезультат = СтрокаРезультат + Результат.ПолучитьСтроку(С);
		
	КонецЦикла;
	
	Баланс = ОбработатьРезультат(СтрокаРезультат, "BALANCE");	
	
КонецПроцедуры	

Функция СформироватьСписокДопНомеров()
	
	СписокДопНомеров = Новый СписокЗначений;
	ЧислоСтрок = СтрЧислоВхождений(ДопНомера, Символы.ПС) + 1;
	Буфер = ДопНомера;
	Для ТекущаяСтрока = 1 По ЧислоСтрок Цикл
		
		Если ЧислоСтрок = 1 Тогда
			СтрокаТелефона = Буфер;
		Иначе
			СтрокаТелефона = Сред(Буфер, 1, Найти(Буфер, Символы.ПС)-1);
			Буфер = Сред(Буфер, Найти(Буфер, Символы.ПС) + 1);
		КонецЕсли;	
			
		КонтактныйТелефон = ПривестиТелефонКВиду(СтрокаТелефона);
		Если КонтактныйТелефон = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СписокДопНомеров.Добавить(КонтактныйТелефон);
		
	КонецЦикла;	
	
	Возврат СписокДопНомеров;
	
КонецФункции

Функция СуммаЧасовогоПояса()
			
	ДанныеОЧасовомПоясе = ЧасовойПояс;
	НачалоДанных = Найти(ДанныеОЧасовомПоясе, "[")+1;
	ДлиннаДанных = Найти(ДанныеОЧасовомПоясе, "]")-НачалоДанных;
	ДанныеОЧасовомПоясе = Сред(ДанныеОЧасовомПоясе, НачалоДанных, ДлиннаДанных);
	ЗнакПояса   = Сред(ДанныеОЧасовомПоясе, 1, 1);
	ЧасыПояса   = Сред(ДанныеОЧасовомПоясе, 2, 2);
	МинутыПояса = Сред(ДанныеОЧасовомПоясе, 5, 2);
	
	СуммаПоясаВСекундах = Число(ЧасыПояса) * 60 * 60 + Число(МинутыПояса) * 60;
	
	Если ЗнакПояса = "-" Тогда
		СуммаПоясаВСекундах = - СуммаПоясаВСекундах;
	КонецЕсли;
	
	Возврат СуммаПоясаВСекундах;
	
КонецФункции	

Процедура ДобавитьЛидирующийНоль(КонвертированнаяДата)
	
	ТочкаВремени  = Найти(КонвертированнаяДата, "T") + 1;
	СтрокаВремени = Сред(КонвертированнаяДата, ТочкаВремени);
	Если СтрДлина(СтрокаВремени) = 13 Тогда
		//добавим у часов лидирующий 0, как того требует чертов сервер
		КонвертированнаяДата = СтрЗаменить(КонвертированнаяДата, "T", "T0");
	КонецЕсли;	
		
	
КонецПроцедуры

Процедура ПроинизиализироватьОбработку() Экспорт
	Логин				 = ВосстановитьЗначение("Настройки_Логин");
	Пароль				 = ВосстановитьЗначение("Настройки_Пароль");
	ИспользоватьПрокси	 = ВосстановитьЗначение("Настройки_ИспользоватьПрокси");
	ПроксиСервер		 = ВосстановитьЗначение("Настройки_ПроксиСервер");
	ПроксиПорт			 = ВосстановитьЗначение("Настройки_ПроксиПорт");
	ПроксиПользователь	 = ВосстановитьЗначение("Настройки_ПроксиПользователь");
	ПроксиПароль		 = ВосстановитьЗначение("Настройки_ПроксиПароль");
	
	СписокПодписей 		 = ВосстановитьЗначение("СписокПодписей");	
	Баланс				 = ВосстановитьЗначение("Баланс"); 
	ТипСправочника 		 = ВосстановитьЗначение("СМС_ТипСправочника");
	ПолПолучателя 		 = ВосстановитьЗначение("ПолПолучателя");
	ТекущаяПодпись		 = ВосстановитьЗначение("ТекущаяПодпись");
	ЧасовойПояс			 = ВосстановитьЗначение("ЧасовойПояс");


	
	//Если НЕ ЗначениеЗаполнено(Логин)
	//	ИЛИ НЕ ЗначениеЗаполнено(Пароль) Тогда
	//	ФормаНастройки = ЭтотОбъект.ПолучитьФорму("Настройка");
	//	Настройки = ФормаНастройки.ОткрытьМодально();
	//КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЧасовойПояс) Тогда
		ЧасовойПояс = "[+04:00] — Московское время, Абхазия, Азербайджан";
	КонецЕсли;	
	
	ДатаВремяОтправки = ТекущаяДата();
	
	
	Если Не Оператор.Пустая() Тогда
		Логин = СокрЛП(Оператор.Логин);
		Пароль = СокрЛП(Оператор.Пароль);
	КонецеСли;	
	
	Если Не ШаблонРассылки.Пустая() Тогда
		ТекущаяПодпись = СокрЛП(ШаблонРассылки.Отправитель);
		ТекстСообщения = СокрЛП(ШаблонРассылки.ТекстШаблона);
		если Не ШаблонРассылки.ТипСМСРассылки.Пустая() Тогда
			Если ЗначениеЗаполнено(ШаблонРассылки.ТипСМСРассылки.ДатаВремяОтправки) Тогда
				ДатаВремяОтправки = ШаблонРассылки.ТипСМСРассылки.ДатаВремяОтправки;
			КонецеСли;	
		КонецеСли;	
	КонецеСли;	
КонецПроцедуры	

Функция СоздатьФайлНовый(СтрокаОперации, ТелефоныКонтрагентов = Неопределено) Экспорт
	
	ИмяФайла = ПолучитьСистемнуюПапку("MyDocuments") + "\TEMP1.txt";
		
	ФайлДанных = Новый ТекстовыйДокумент;
	Попытка
		ФайлДанных.Прочитать(ИмяФайла, КодировкаТекста.Системная);
	Исключение
		FSO = Новый COMОбъект("Scripting.FileSystemObject");
		
		File = FSO.CreateTextFile(ИмяФайла);
		File.Close();
		
		Попытка 
			ФайлДанных.Прочитать(ИмяФайла, КодировкаТекста.Системная);
		Исключение
			Сообщить("Невозможно создать файл в папке <MyDocuments>");
		КонецПопытки;	
		
	КонецПопытки;	
		
		
	ФайлДанных.Очистить();
	
	//тут составим общий список телефонов: список тел. контрагентов + список доп. номеров
	Если СтрокаОперации = "SEND" Тогда
		СписокТелефоновДляРассылки = ТелефоныКонтрагентов.Скопировать();
		//СписокДопНомеров = СформироватьСписокДопНомеров();
		//Для Каждого ДопНомер Из СписокДопНомеров Цикл
		//	
		//	НовыйНомер = СписокТелефоновДляРассылки.Добавить();
		//	НовыйНомер.Телефон = ДопНомер.Значение;		
		//	
		//КонецЦикла;
		
		Если СписокТелефоновДляРассылки.Количество() = 0 Тогда
			Предупреждение("Не выбрано ни одного номера для отправки сообщений!");
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;	

	Если СтрокаОперации = "BALANCE" 
		ИЛИ СтрокаОперации = "SENDERS" Тогда
	
		ФайлДанных.ДобавитьСтроку("{");
		ФайлДанных.ДобавитьСтроку("""login""" +    ": " + Символ(34) + Логин  + Символ(34) + ",");
		ФайлДанных.ДобавитьСтроку("""password""" + ": " + Символ(34) + Пароль + Символ(34));
		ФайлДанных.ДобавитьСтроку("}");
		
	ИначеЕсли СтрокаОперации = "SEND" Тогда	
		
		ФайлДанных.ДобавитьСтроку("{");
		ФайлДанных.ДобавитьСтроку("""login""" +    ": " + Символ(34) + Логин  + Символ(34) + ",");
		ФайлДанных.ДобавитьСтроку("""password""" + ": " + Символ(34) + Пароль + Символ(34) + ",");
		Если ДатаВремяОтправки > ТекущаяДата() Тогда
			ВремяСУчетомЧасовогоПояса = ДатаВремяОтправки - СуммаЧасовогоПояса();
			КонвертированнаяДата = Строка(Формат(ВремяСУчетомЧасовогоПояса, "ДФ=yyyy-MM-dd") + "T" + Формат(ВремяСУчетомЧасовогоПояса, "ДЛФ=T")+"+00:00");
			ДобавитьЛидирующийНоль(КонвертированнаяДата);
			ФайлДанных.ДобавитьСтроку("""scheduleTime""" + ": " + Символ(34) + КонвертированнаяДата + Символ(34) + ",");
		КонецЕсли;	
		
		ФайлДанных.ДобавитьСтроку("""messages""" + ":[");
		
		
		Для Каждого СтрокаСписка Из СписокТелефоновДляРассылки Цикл
				
			КонтактныйТелефон =  ПривестиТелефонКВиду(СтрокаСписка.Телефон); 
			
			
			ФайлДанных.ДобавитьСтроку("{");
			
			ТекстСПараметрами = ПодставитьПараметрыНовый(ТекстСообщения, СтрокаСписка);
			
			ТекущийСимвол = 1;
			НовыйТекст = "";
			Пока ТекущийСимвол <= СтрДлина(ТекстСПараметрами) Цикл
				
				НовыйТекст = НовыйТекст + ПерекодироватьТекст(Сред(ТекстСПараметрами, ТекущийСимвол, 1)); 
				
				ТекущийСимвол = ТекущийСимвол + 1;
			КонецЦикла;
			
			ФайлДанных.ДобавитьСтроку("""clientId""" + ": " + Символ(34) + НомерСообщения  + Символ(34) + ",");					
			ФайлДанных.ДобавитьСтроку("""phone""" +    ": " + Символ(34) + КонтактныйТелефон  + Символ(34) + ",");
			ФайлДанных.ДобавитьСтроку("""text""" +     ": " + Символ(34) + НовыйТекст + Символ(34) + ",");					
			ФайлДанных.ДобавитьСтроку("""sender""" +   ": " + Символ(34) + ТекущаяПодпись+ Символ(34));					
				
			Если НомерСообщения = СписокТелефоновДляРассылки.Количество() Тогда	
				ФайлДанных.ДобавитьСтроку("}");
			Иначе ФайлДанных.ДобавитьСтроку("},");	
			КонецЕсли;	
			
			
			Нов = ТабОтправленныхСообщений.Добавить();
			ЗаполнитьЗначенияСвойств(Нов, СтрокаСписка);
			Нов.ИдентификаторСМСНаш = НомерСообщения;
			Нов.ТелефонНовый = КонтактныйТелефон;
			
			НомерСообщения = НомерСообщения + 1;
		КонецЦикла;		
			
		ФайлДанных.ДобавитьСтроку("]");
		
		ФайлДанных.ДобавитьСтроку("}");
		
	КонецЕсли;	
	
	ФайлДанных.Записать(ИмяФайла, КодировкаТекста.Системная);
	
	Возврат ИмяФайла;	
		
КонецФункции


Процедура ОтправкаСМС() Экспорт
	
	НомерСообщения = 1;
	//Оператор.СчетчикСМС
	МассивАдресов = ПодготовитьДанныеПоУехавшимЗаказам();
	
	#Если Клиент Тогда
		КоличествоСМС = МассивАдресов.Количество();
		ОтветВ = Вопрос("Количество СМС = " + Строка(КоличествоСМС) + ". Продолжить отправку?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если ОтветВ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецеСли;	
	#КонецЕСли	
	
	Отправка = Справочники.ОтправкиСМС.СоздатьЭлемент();
	Отправка.ДатаОтправки = ТекущаяДата();
	Отправка.Оператор = Оператор;
	Отправка.Рейс = Рейс;
	Отправка.ТипОтправки = ШаблонРассылки.ТипСМСРассылки;
	
	
	ТабОтправленныхСообщений = МассивАдресов.Скопировать();
	
	ТабОтправленныхСообщений.Очистить();
	
	ТабОтправленныхСообщений.Колонки.Добавить("ИдентификаторСМС");
	ТабОтправленныхСообщений.Колонки.Добавить("НомерСообщения");
	ТабОтправленныхСообщений.Колонки.Добавить("СтатусСообщения");
	ТабОтправленныхСообщений.Колонки.Добавить("ИдентификаторСМСНаш");
	ТабОтправленныхСообщений.Колонки.Добавить("ТелефонНовый");
	
	
	ИмяФайла = СоздатьФайлНовый("SEND", МассивАдресов);
	
	Хр = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ИмяФайла), Новый СжатиеДанных(9));
	Отправка.Запрос = Хр;
	
	Если НЕ ИмяФайла = Ложь Тогда
		    	
		Результат = ОтправитьФайлДляОбработки(ИмяФайла, "SEND");
		
		СтрокаРезультат = "";
		Для С = 1 По Результат.КоличествоСтрок() Цикл
			СтрокаРезультат = СтрокаРезультат + Результат.ПолучитьСтроку(С);
		КонецЦикла;
		
		Ответ = ОбработатьРезультат(СтрокаРезультат, "SEND");
		
		//ОбновитьДанныеПоБалансу();
		
			
		//Сообщить(СтрокаРезультат);
	КонецЕсли;	
	
	//Об = Оператор.ПолучитьОбъект();
	//Об.СчетчикСМС = НомерСообщения;
	//Об.Записать();
	
	ТекВр = ТекущаяДата();
	
	Наб = РегистрыСведений.РассылкаСМС.СоздатьНаборЗаписей();
	Наб.Отбор.ОператорСМСРассылки.Установить(Оператор);
	Наб.Отбор.Период.Установить(ТекВр);
	Наб.Отбор.ТипСМСРассылки.Установить(ШаблонРассылки.ТипСМСРассылки);
	
	Для Каждого Тек Из ТабОтправленныхСообщений Цикл
		Нов = Наб.Добавить();
		Нов.Заказ = Тек.Реализация;
		Нов.Период = ТекВр;
		Нов.ОператорСМСРассылки = Оператор;
		Нов.ТипСМСРассылки = ШаблонРассылки.ТипСМСРассылки;
		Нов.ИдентификаторСМС = Тек.ИдентификаторСМС;
		Нов.ИдентификаторСМСНаш = Тек.ИдентификаторСМСНаш;
		Нов.Телефон = Тек.ТелефонНовый;
		Нов.СтатусСообщения = Тек.СтатусСообщения;
		Нов.ОтправкаСМС = Отправка;
		Нов.Шаблон = ШаблонРассылки;
	КонецЦикла;
	
	Наб.Записать();
КонецПроцедуры	

Функция ПодготовитьДанныеПоУехавшимЗаказам()
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	РассылкаСМС.Заказ,
	            |	ИСТИНА КАК Отправлено
	            |ПОМЕСТИТЬ ВТОтправленныеСообщения
	            |ИЗ
	            |	РегистрСведений.РассылкаСМС КАК РассылкаСМС
	            |ГДЕ
	            |	РассылкаСМС.ОператорСМСРассылки = &Оператор
	            |	И РассылкаСМС.ТипСМСРассылки = &ТипСМСРассылки
	            |	И РассылкаСМС.СтатусСообщения = ЗНАЧЕНИЕ(Справочник.СтатусыСМССообщений.СообщениеПринятоСервисом)
	            |	И РассылкаСМС.Период МЕЖДУ &Дата1 И &Дата2
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	РассылкаСМСПоКонтрагентамСрезПоследних.Контрагент.Ссылка
	            |ПОМЕСТИТЬ КонтрагентыКРассылке
	            |ИЗ
	            |	РегистрСведений.РассылкаСМСПоКонтрагентам.СрезПоследних(&Дата2, ) КАК РассылкаСМСПоКонтрагентамСрезПоследних
	            |ГДЕ
	            |	РассылкаСМСПоКонтрагентамСрезПоследних.ПроизводитьРассылку = ИСТИНА
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта,
	            |	новаЗаданияРейсов.Рейс.Транспорт.Наименование КАК Транспорт,
	            |	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	            |	РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
	            |	РеализацияТоваровУслуг.Дата,
	            |	новаЗаданияРейсов.Доставка.ВремяПрибытияС КАК ВремяПрибытияС,
	            |	новаЗаданияРейсов.Доставка.ВремяПрибытияПо КАК ПрибытияПо,
	            |	новаРейсМестнойДоставки.Водитель.Наименование КАК Водитель,
	            |	новаРейсМестнойДоставки.Экспедитор.Наименование КАК Экспедитор,
	            |	РеализацияТоваровУслуг.ВладелецТовара.Наименование КАК ИнтернетМагазин,
	            |	РеализацияТоваровУслуг.Контрагент.Наименование КАК Получатель,
	            |	ТелефонныеАппаратыТранспортаСрезПоследних.ТА.Телефон КАК ТелефонЭкипажа,
	            |	РеализацияТоваровУслуг.Телефон,
	            |	ВТОтправленныеСообщения.Отправлено
	            |ИЗ
	            |	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	            |		ПОЛНОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаРейсМестнойДоставки КАК новаРейсМестнойДоставки
	            |			ЛЕВОЕ СОЕДИНЕНИЕ Задача.новаЗадачаРейсаМестнойДоставки КАК ЗадачаРейса
	            |			ПО новаРейсМестнойДоставки.Ссылка = ЗадачаРейса.БизнесПроцесс
	            |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТелефонныеАппаратыТранспорта.СрезПоследних КАК ТелефонныеАппаратыТранспортаСрезПоследних
	            |			ПО новаРейсМестнойДоставки.Транспорт.Ссылка = ТелефонныеАппаратыТранспортаСрезПоследних.Транспорт.Ссылка
	            |		ПО новаЗаданияРейсов.Рейс = новаРейсМестнойДоставки.Ссылка
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	            |			ЛЕВОЕ СОЕДИНЕНИЕ ВТОтправленныеСообщения КАК ВТОтправленныеСообщения
	            |			ПО РеализацияТоваровУслуг.Ссылка = ВТОтправленныеСообщения.Заказ.Ссылка
	            |		ПО новаЗаданияРейсов.Доставка.Номер = РеализацияТоваровУслуг.Номер
	            |ГДЕ
	            |	новаРейсМестнойДоставки.ПометкаУдаления = ЛОЖЬ
	            |	И новаРейсМестнойДоставки.Стартован = ИСТИНА
	            //|	И ЗадачаРейса.РейсЗапланирован = ИСТИНА
	            |	И новаРейсМестнойДоставки.ДатаНачала МЕЖДУ &Дата1 И &Дата2
	            |	И ЕстьNull(ВТОтправленныеСообщения.Отправлено, Ложь) <> ИСТИНА";
				
				Если Не Рейс.Пустая() Тогда
					Зап.Текст = Зап.Текст + "
					|	И новаРейсМестнойДоставки.Ссылка = &Рейс";
					Зап.УстановитьПараметр("Рейс", Рейс);
				КонецеСли;
				Зап.Текст = Зап.Текст + "
	            |СГРУППИРОВАТЬ ПО
	            |	новаРейсМестнойДоставки.Транспорт.НомерГосударственнойРегистрации,
	            |	новаЗаданияРейсов.Рейс.Транспорт.Наименование,
	            |	РеализацияТоваровУслуг.Ссылка,
	            |	РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
	            |	РеализацияТоваровУслуг.Дата,
	            |	новаЗаданияРейсов.Доставка.ВремяПрибытияС,
	            |	новаЗаданияРейсов.Доставка.ВремяПрибытияПо,
	            |	новаРейсМестнойДоставки.Водитель.Наименование,
	            |	новаРейсМестнойДоставки.Экспедитор.Наименование,
	            |	РеализацияТоваровУслуг.ВладелецТовара.Наименование,
	            |	РеализацияТоваровУслуг.Контрагент.Наименование,
	            |	ТелефонныеАппаратыТранспортаСрезПоследних.ТА.Телефон,
	            |	РеализацияТоваровУслуг.Телефон,
	            |	ВТОтправленныеСообщения.Отправлено";
				
	Зап.УстановитьПараметр("Дата1", НачалоДня(ДатаСбораДанных));			
	Зап.УстановитьПараметр("Дата2", КонецДня(ДатаСбораДанных));			
	Зап.УстановитьПараметр("Оператор", Оператор);			
	Зап.УстановитьПараметр("ТипСМСРассылки", ШаблонРассылки.ТипСМСРассылки);			
	
	Рез = Зап.Выполнить().Выгрузить();
	
	Возврат Рез;
КонецФункции	


Баланс = Неопределено;


