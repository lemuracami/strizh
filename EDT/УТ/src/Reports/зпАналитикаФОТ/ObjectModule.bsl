
Функция ПолучитьЗначениеТекстаОбласти(ТекстОбласти, СообщатьОбОшибке)
	
	ЗначениеОбласти = 0;
	
	Если ТекстОбласти <> "" Тогда
		ПозицияРазделителя = СтрНайти(ТекстОбласти, ":");
		Если ПозицияРазделителя Тогда
			Попытка
				ЗначениеОбласти = Число(Лев(ТекстОбласти, ПозицияРазделителя - 1)) * 3600 + Число(Сред(ТекстОбласти, ПозицияРазделителя + 1)) * 60;
			Исключение
				Если СообщатьОбОшибке Тогда
					Сообщить("Ошибка получения значения времени (" + ТекстОбласти + ") " + ОписаниеОшибки());
					СообщатьОбОшибке = Ложь;
				КонецЕсли;
			КонецПопытки;
		Иначе
			Попытка
				ЗначениеОбласти = Число(ТекстОбласти);
			Исключение
				Если СообщатьОбОшибке Тогда
					Сообщить("Ошибка получения значения числа (" + ТекстОбласти + ") " + ОписаниеОшибки());
					СообщатьОбОшибке = Ложь;
				КонецЕсли;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
		
	Возврат ЗначениеОбласти;
	
КонецФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиКомпоновщика = КомпоновщикНастроек.ПолучитьНастройки();
	
	ЭлементыПараметров = НастройкиКомпоновщика.ПараметрыДанных.Элементы;
	
	СтандартныйПериод = ЭлементыПараметров.Найти("Период").Значение;

	Если ЗначениеЗаполнено(СтандартныйПериод) И ЗначениеЗаполнено(СтандартныйПериод.ДатаНачала) И ЗначениеЗаполнено(СтандартныйПериод.ДатаОкончания)Тогда
		
	Иначе
		ВызватьИсключение "Не заполнены обязательные параметры отчета";
	КонецЕсли;
	
	ТекПараметр = ЭлементыПараметров.Найти("ВажноеПроцентноеИзменение");
	ВажноеПроцентноеИзменение = ТекПараметр.Значение;
	
	//ТекПараметр = ЭлементыПараметров.Найти("ФиксацияСверху");
	//ФиксацияСверху = ТекПараметр.Значение;
	
	//ТекПараметр = ЭлементыПараметров.Найти("НачалоПериода");
	//ТекПараметр.Значение = СтандартныйПериод.ДатаНачала;
	//ТекПараметр.Использование = Истина;
	//
	//ТекПараметр = ЭлементыПараметров.Найти("ОкончаниеПериода");
	//ТекПараметр.Значение = СтандартныйПериод.ДатаОкончания;
	//ТекПараметр.Использование = Истина;
	//
	//ТекПараметр = ЭлементыПараметров.Найти("ТипФормированияОтчета");
	//ТекПараметр.Значение = "НЕЗАКРЫТЫЙ ПЕРИОД";
	//ТекПараметр.Использование = Истина;
	//
	//ТекПараметр = ЭлементыПараметров.Найти("ДатаВремяФормированияОтчета");
	//ТекПараметр.Значение = ТекущаяДата();
	//ТекПараметр.Использование = Истина;
	
	//ВнешниеНаборыДанных = ПолучитьВнешниеНаборыДанных(СтандартныйПериод.ДатаНачала, СтандартныйПериод.ДатаОкончания, Контрагент);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновщика, ДанныеРасшифровки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,, ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	//фиксация слева
	ПерваяКолонкаПоказателей = 2;
	
	ДокументРезультат.ФиксацияСлева = ПерваяКолонкаПоказателей - 1;
	
	//постобработка табличного документа
	ПоПериодамиРасчета = Ложь;
	Если НастройкиКомпоновщика.Структура.Количество() Тогда
		Если ТипЗнч(НастройкиКомпоновщика.Структура[0]) = Тип("ТаблицаКомпоновкиДанных") Тогда
			Для Каждого КолонкаКомпоновки Из НастройкиКомпоновщика.Структура[0].Колонки Цикл
				Если Строка(КолонкаКомпоновки.ПоляГруппировки) = "Период расчета" Тогда
					ПоПериодамиРасчета = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	//Сообщить("ПоПериодамРасчета = " + ПоПериодамиРасчета);
	
	Если Не (ПоПериодамиРасчета И ВажноеПроцентноеИзменение) Тогда
		Возврат;
	КонецЕсли;
	
	ВысотаТаблицы = ДокументРезультат.ВысотаТаблицы;
	ШиринаТаблицы = ДокументРезультат.ШиринаТаблицы;
	
	Если Не (ШиринаТаблицы > 1 И ВысотаТаблицы > 2) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаВозможныхПериодов = "январь,февраль,март,апрель,май,июнь,июль,август,сентябрь,октябрь,ноябрь,декабрь";
	МассивВозможныхПериодов = СтрРазделить(СтрокаВозможныхПериодов, ",");
	
	//расположение периодов
	НомерСтрокиПериодов = 0;
	КоличествоПериодов = 0;
	Для НомерСтроки = 1 По ВысотаТаблицы Цикл
		Для НомерКолонки = ПерваяКолонкаПоказателей По ШиринаТаблицы Цикл
			ТекОбласть = ДокументРезультат.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
			Если ТекОбласть.Текст <> "" Тогда
				ТекстОбласти = НРег(ТекОбласть.Текст);
				Для Каждого ВозможныйПериод Из МассивВозможныхПериодов Цикл
					Если СтрНайти(ТекстОбласти, ВозможныйПериод) Тогда
						НомерСтрокиПериодов = НомерСтроки;
						КоличествоПериодов = КоличествоПериодов + 1;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Если НомерСтрокиПериодов Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	//Сообщить("НомерСтрокиПериодов = " + НомерСтрокиПериодов);
	//Сообщить("КоличествоПериодов = " + КоличествоПериодов);
	
	Если Не НомерСтрокиПериодов Или КоличествоПериодов < 2 Тогда
		Возврат;
	КонецЕсли;
	
	//Если ФиксацияСверху Тогда
	//	ДокументРезультат.ФиксацияСверху = ФиксацияСверху;
	//КонецЕсли;
	НомерСтрокиПоказателей = ДокументРезультат.ФиксацияСверху;
	//Сообщить("ФиксацияСверху = " + ДокументРезультат.ФиксацияСверху);
	
	ЗначенийПоказателей = ШиринаТаблицы - ДокументРезультат.ФиксацияСлева;
	КоличествоПоказателей = ЗначенийПоказателей / КоличествоПериодов;
	
	//Сообщить("КоличествоПоказателей = " + КоличествоПоказателей);
	
	МаксИндексПериодов = КоличествоПериодов - 1;
	МаксИндексПоказателей = КоличествоПоказателей - 1;
	
	СообщатьОбОшибке = Истина;
	ЦветВозр = Новый Цвет(200, 255, 200);
	ЦветУбыв = Новый Цвет(255, 255, 125);
	ВажноеПроцентноеИзменениеОтриц = -ВажноеПроцентноеИзменение;
	
	НомерСтрокиЗначения = НомерСтрокиПоказателей + 1;
	Для НомерСтроки = НомерСтрокиЗначения По ВысотаТаблицы Цикл
		Для ИндексПериода = 1 По МаксИндексПериодов Цикл
			СдвигПервойКолонкиИПериода = ПерваяКолонкаПоказателей + КоличествоПоказателей * ИндексПериода;
			Для ИндексПоказателя = 0 По МаксИндексПоказателей Цикл
				НомерКолонкиТекущегоЗначения = СдвигПервойКолонкиИПериода + ИндексПоказателя;
				НомерКолонкиПредыдущегоЗначения = НомерКолонкиТекущегоЗначения - КоличествоПоказателей;
				
				ТекОбласть = ДокументРезультат.Область(НомерСтроки, НомерКолонкиТекущегоЗначения, НомерСтроки, НомерКолонкиТекущегоЗначения);
				ТекстТекОбласти = ТекОбласть.Текст;
				
				ПредОбласть = ДокументРезультат.Область(НомерСтроки, НомерКолонкиПредыдущегоЗначения, НомерСтроки, НомерКолонкиПредыдущегоЗначения);
				ТекстПредОбласти = ПредОбласть.Текст;
				
				//Сообщить("Сравнение " + ТекстТекОбласти + " vs " + ТекстПредОбласти);
				
				ЗначениеТекОбласти = ПолучитьЗначениеТекстаОбласти(ТекстТекОбласти, СообщатьОбОшибке);
				ЗначениеПредОбласти = ПолучитьЗначениеТекстаОбласти(ТекстПредОбласти, СообщатьОбОшибке);
				
				Если ЗначениеТекОбласти И ЗначениеПредОбласти Тогда
					ПроцентноеИзменение = (ЗначениеТекОбласти - ЗначениеПредОбласти) / ЗначениеПредОбласти * 100;
					Если ПроцентноеИзменение >= ВажноеПроцентноеИзменение Тогда
						ТекОбласть.ЦветФона = ЦветВозр;
					ИначеЕсли ПроцентноеИзменение <= ВажноеПроцентноеИзменениеОтриц Тогда
						ТекОбласть.ЦветФона = ЦветУбыв;
					КонецЕсли;
					//Если Макс(ПроцентноеИзменение, -ПроцентноеИзменение) >= ВажноеПроцентноеИзменение Тогда
					//	ТекОбласть.ЦветФона = WebЦвета.СветлоЗолотистый;
					//КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		//Прервать;
	КонецЦикла;
	
КонецПроцедуры
