
Перем ПараметрыОткрытия Экспорт;
Перем Форма Экспорт;
Перем соЗапросыДанных;
Перем ВыполненоЗапросов;
Перем КСЛ;

Процедура ПодключитьКСЛ()
	#Если Клиент Тогда
		КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	#Иначе
		КСЛ = новаСерверКСЛ.Подключиться();
	#КонецЕсли
КонецПроцедуры


Функция ПолучитьПараметрыПоУмолчанию() Экспорт
	стПараметры = Новый Структура;
	стПараметры.Вставить("ДатаНачала", НачалоМесяца(ТекущаяДата()));
	стПараметры.Вставить("ДатаОкончания", КонецМесяца(ТекущаяДата()));
	
	Возврат стПараметры;
КонецФункции

Процедура НачатьФормирование() Экспорт
	соЗапросыДанных = Новый Соответствие;
	ВыполненоЗапросов = 0;
КонецПроцедуры

Процедура НачатьПолучениеДанных(ИмяИсточникаДанных, стПараметры) Экспорт
	Если ИмяИсточникаДанных = "новаПробегТранспорта" Тогда
		ПодключитьКСЛ();
		
		ЗапросДанных = КСЛ.Мониторинг_ЗапросыДанных_ОбщийПробег();
		ЗапросДанных.Имя = ИмяИсточникаДанных;
		ЗапросДанных.Параметры.ДатаНачала = НачалоДня(стПараметры.ДатаНачала);
		ЗапросДанных.Параметры.ДатаОкончания = КонецДня(стПараметры.ДатаОкончания);
		
		соЗапросыДанных.Вставить(ИмяИсточникаДанных, ЗапросДанных);
		ЗапросДанных.ПриВыполнении(ЭтотОбъект, "ДанныеПолучены");
		
		ЗапросДанных.Выполнить();
	КонецЕсли;
КонецПроцедуры

Процедура ДанныеПолучены(ЗапросДанных, Ошибка) Экспорт
	ВыполненоЗапросов = ВыполненоЗапросов + 1;
	
	Если ВыполненоЗапросов = соЗапросыДанных.Количество() Тогда
		Форма.ВсеДанныеПолучены();
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьДанные(ИмяИсточникаДанных, стПараметры) Экспорт
	Если ИмяИсточникаДанных = "новаПробегТранспорта" Тогда
	
		ЗапросДанных = соЗапросыДанных[ИмяИсточникаДанных];
		
		Если ЗапросДанных.Ошибка <> Неопределено Тогда
			ВызватьИсключение ЗапросДанных.Ошибка.ВСтроку();
		КонецЕсли;
		
		ЗапросДанных.ОтключитьВсеОбработчики();
		
		//КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
		//
		//ЗапросДанных = КСЛ.Мониторинг_ЗапросыДанных_ОбщийПробег();
		//ЗапросДанных.Запрос.ДатаНачала = НачалоДня(стПараметры.ДатаНачала);
		//ЗапросДанных.Запрос.ДатаОкончания = КонецДня(стПараметры.ДатаОкончания);
		//
		//ЗапросДанных.ВыполнитьСинхронно();
		
		//Отчет = КСЛ.Мониторинг_Отчеты_ОтчетОбщийПробег();
		//Отчет.ДатаНачала = НачалоДня(стПараметры.ДатаНачала);
		//Отчет.ДатаОкончания = КонецДня(стПараметры.ДатаОкончания);
		//
		//КСЛ.Клиент_ДоступКСерверу.ВыполнитьДействиеСинхронно(Отчет);
		
		тзПробег = Новый ТаблицаЗначений;
		тзПробег.Колонки.Добавить("Транспорт", Новый ОписаниеТипов("СправочникСсылка.новаТранспорт"));
		тзПробег.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
		тзПробег.Колонки.Добавить("Пробег", Новый ОписаниеТипов("Число"));
		тзПробег.Колонки.Добавить("НачалоРаботы", Новый ОписаниеТипов("Дата"));
		тзПробег.Колонки.Добавить("ОкончаниеРаботы", Новый ОписаниеТипов("Дата"));
		тзПробег.Колонки.Добавить("ВремяДвижения", Новый ОписаниеТипов("Число"));
		тзПробег.Колонки.Добавить("ВремяСтоянок", Новый ОписаниеТипов("Число"));
		тзПробег.Колонки.Добавить("СредняяСкорость", Новый ОписаниеТипов("Число"));
		
		Результат = ЗапросДанных.Результат;
		КоличествоСтрок = Результат.Количество - 1;
		Для ъ = 0 По КоличествоСтрок Цикл
			Строка = Результат.Получить(ъ);
			стрПробег = тзПробег.Добавить();
			
			стрПробег.Транспорт = Справочники.новаТранспорт.ПолучитьСсылку(Новый УникальныйИдентификатор(Строка.Транспорт.Ид));
			стрПробег.Дата = Строка.Дата;
			стрПробег.Пробег = Строка.Пробег;
			стрПробег.НачалоРаботы = Строка.НачалоРаботы;
			стрПробег.ОкончаниеРаботы = Строка.ОкончаниеРаботы;
			стрПробег.ВремяДвижения = Строка.ВремяДвижения / 3600;
			стрПробег.ВремяСтоянок = Строка.ВремяСтоянок / 3600;
			стрПробег.СредняяСкорость = Строка.СредняяСкорость;
		КонецЦикла;
		
		Возврат тзПробег;
	КонецЕсли;
КонецФункции

Процедура Расшифровать(Элемент, Расшифровка, ОбработкаРасшифровки) Экспорт
	стПараметры = Новый Структура("ДатаНачала, ДатаОкончания");
	стПараметры.Вставить("Транспорт", Форма.ПолучитьРасшифровку("Транспорт"));
	
	Дата = Форма.ПолучитьРасшифровку("Дата");
	Если Дата = Неопределено Тогда
		стПараметры.ДатаНачала = НачалоДня(Форма.ПолучитьРасшифровку("ДатаНачала"));
		стПараметры.ДатаОкончания = КонецДня(Форма.ПолучитьРасшифровку("ДатаОкончания"));
	Иначе
		стПараметры.ДатаНачала = НачалоДня(Дата);
		стПараметры.ДатаОкончания = КонецДня(Дата);
	КонецЕсли;
	#Если Клиент Тогда
	сзРасшифровки = новаОтчетыСКД.ПолучитьРасшифровкиПоПараметрам(стПараметры, новаКонтекст);
	выбРасшифровка = Форма.ВыбратьИзМеню(сзРасшифровки, Элемент);
	Если выбРасшифровка = Неопределено Тогда Возврат; КонецЕсли;
	новаОтчетыСКД.Расшифровать(выбРасшифровка.Значение, стПараметры);
	#КонецЕсли
КонецПроцедуры