Перем ТаблицаДополнительнойИнформацииПоСФ, СоответствиеСтрокиДопИнформацииПоСчетуФактуре;
Перем ПрефиксыРИБиОрганизации;
Перем мСведенияОбОрганизации;
Перем мСтруктураОтбораПроведен, мСтруктураОтбораСчетФактуры;
Перем мСписокОрганизаций;

#Если КЛИЕНТ Тогда
	
// Формирует табличную часть отчета
Процедура СформироватьКнигуПокупок(ЭлементыФормы) Экспорт
	
	мСведенияОбОрганизации = Неопределено;

	ПрефиксыРИБиОрганизации = ОбщегоНазначения.СформироватьМассивПрефиксовДляРИБИОрганизации(Организация);
	ПанельРазделовКниги = ЭлементыФормы.ПанельРазделовКниги;
	ОсновнойРаздел = ПанельРазделовКниги.Страницы.ОсновнойРаздел;
	КоличествоОтображаемыхРазделов = ПанельРазделовКниги.Страницы.Количество();
	Для НомерСтраницы = 1 по КоличествоОтображаемыхРазделов Цикл
		Если ПанельРазделовКниги.Страницы[КоличествоОтображаемыхРазделов - НомерСтраницы] = ОсновнойРаздел Тогда
			Продолжить;
		КонецЕсли; 
		ПанельРазделовКниги.Страницы.Удалить(КоличествоОтображаемыхРазделов - НомерСтраницы);
	КонецЦикла; 

	мСписокОрганизаций = Новый СписокЗначений;
	мСписокОрганизаций.Добавить(Организация);
		
	Если Не (ВыводитьТолькоДопЛисты И ФормироватьДополнительныеЛисты) Тогда
		СформироватьОсновнойРаздел(ЭлементыФормы);
	КонецЕсли;
	
	СформироватьДополнительныеЛисты(ЭлементыФормы);
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуКнигиПокупок(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20)

	Секция.Параметры.Заполнить(ЗаписьКниги.Строки[0]);
	Секция.Параметры.ВсегоПокупок = 	ЗаписьКниги.ВсегоПокупок;
	Секция.Параметры.СуммаБезНДС18 = 	ЗаписьКниги.СуммаБезНДС18;
	Секция.Параметры.НДС18 = 			ЗаписьКниги.НДС18;
	Секция.Параметры.СуммаБезНДС10 = 	ЗаписьКниги.СуммаБезНДС10;
	Секция.Параметры.НДС10 = 			ЗаписьКниги.НДС10;
	Секция.Параметры.НДС0 = 			ЗаписьКниги.НДС0;
	Секция.Параметры.СуммаБезНДС20 = 	ЗаписьКниги.СуммаБезНДС20;
	Секция.Параметры.НДС20 = 			ЗаписьКниги.НДС20;
	Секция.Параметры.СуммаСовсемБезНДС= ЗаписьКниги.СуммаСовсемБезНДС;
	Если ЗначениеЗаполнено(ЗаписьКниги.СчетФактураДокумент) Тогда
		Если ЗаписьКниги.ОъединятьСчетФактуры = Истина Тогда
			Секция.Параметры.СчетФактура = Новый СписокЗначений;
		Иначе
			Секция.Параметры.СчетФактура = ЗаписьКниги.СчетФактураДокумент;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЕстьЗаписиПоКолонке20 И Не (ЗаписьКниги.СуммаБезНДС20 = 0 И ЗаписьКниги.НДС20 = 0) Тогда
		ЕстьЗаписиПоКолонке20 = Истина;
	КонецЕсли; 
	
	ДатаНомер = ОпределитьДатуИНомерСФ(ЗаписьКниги.Строки[0], Секция);	
	Секция.Параметры.ДатаНомер = ДатаНомер;
	
	НомерДатаИсправления = ОпределитьНомерИДатуИсправленногоСФ(ЗаписьКниги.Строки[0], Секция);	
	Секция.Параметры.НомерДатаИсправления = НомерДатаИсправления;	

	НомерДатаКорректировки = ОпределитьНомерИДатуКорректировочногоСФ(ЗаписьКниги.Строки[0], Секция);
	Секция.Параметры.НомерДатаКорректировки = НомерДатаКорректировки;	
	
	НомерДатаИсправленияКорректировки = ОпределитьНомерИДатуИсправленияКорректировочногоСФ(ЗаписьКниги.Строки[0], Секция);
	Секция.Параметры.НомерДатаИсправленияКорректировки = НомерДатаИсправленияКорректировки;	

	ТекстОплаты = "";
	ТекстДатаОприходования = "";
	СписокДатОплат = Новый СписокЗначений();
	СписокДатОприходования = Новый СписокЗначений();
	ТекстНомерГТД = "";
	
	СуммаСНДС = 0;
	
	Для Каждого СтрокаЗаписи Из ЗаписьКниги.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
			Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", ","+Символы.ПС) + Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
				СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОприходования) Тогда
			Если СписокДатОприходования.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстДатаОприходования = ТекстДатаОприходования + ?(Не ЗначениеЗаполнено(ТекстДатаОприходования), "", ","+Символы.ПС) + Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy");
				СписокДатОприходования.Добавить(Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаЗаписи.ОъединятьСчетФактуры = Истина Тогда
			Секция.Параметры.СчетФактура.Добавить(СтрокаЗаписи.СчетФактураДокументРасшифровка);
		КонецЕсли;
	КонецЦикла;
	
	// ГТД и страна происхождения, дополнительные оплаты
	СчетаФактуры = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ЗаписьКниги.Строки.ВыгрузитьКолонку("СчетФактура"));
	
	Для Каждого СчетФактура Из СчетаФактуры Цикл
		
		Если ЗначениеЗаполнено(СчетФактура) Тогда
			СтрокаДополнительнойИнформации = СоответствиеСтрокиДопИнформацииПоСчетуФактуре[Строка(СчетФактура.УникальныйИдентификатор())];
			Если Не СтрокаДополнительнойИнформации = Неопределено 
				И Не СтрокаДополнительнойИнформации.Строки.Количество() = 0 Тогда
				СтрокаДополнительнойИнформации = СтрокаДополнительнойИнформации.Строки[0];
			Иначе
				СтрокаДополнительнойИнформации = Неопределено;
			КонецЕсли; 
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли;
		
		Если Не СтрокаДополнительнойИнформации = Неопределено Тогда
			Если СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана) <> "" Тогда
				ТекстНомерГТД = ТекстНомерГТД + ?(ТекстНомерГТД = "", "", ", ") + СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана);
			КонецЕсли;

			// Проверим наличие дополнительных дат оплат
			Если ТипЗнч(СтрокаДополнительнойИнформации.ДатыОплаты) = Тип("Массив") Тогда
				Для Каждого ТекущаяДатаОплаты Из СтрокаДополнительнойИнформации.ДатыОплаты Цикл
					Если СписокДатОплат.НайтиПоЗначению(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
						ТекстОплаты = ТекстОплаты + ?(ПустаяСтрока(ТекстОплаты), "", ","+Символы.ПС) + Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy");
						СписокДатОплат.Добавить(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy"));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаДополнительнойИнформации.СуммаСНДС) Тогда
				СуммаСНДС = СуммаСНДС + СтрокаДополнительнойИнформации.СуммаСНДС;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;		
																   
	Секция.Параметры.ДатаОплаты = ТекстОплаты;
	Секция.Параметры.ДатаОприходования = ТекстДатаОприходования;
	Секция.Параметры.НомерГТД = ТекстНомерГТД;

КонецПроцедуры

Процедура СформироватьОсновнойРаздел(ЭлементыФормы);
	
	ТабличныйДокумент = ЭлементыФормы.ТабличныйДокумент;	
	
	СписокСчетовФактур = Неопределено;
	Результат = ПолучитьЗаписиКнигиПокупок(СписокСчетовФактур);
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПокупок";

	Макет = ПолучитьМакет("КнигаПокупок");
	
	ЕстьЗаписиПоКолонке20 = Ложь;	
	
	/////////////////////////////////////////////////////////////////////////
	// Вывод шапки книги покупок
	Если СформироватьОтчетПоСтандартнойФорме Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.УстановленныйОтбор = "";
	Секция.Параметры.НачалоПериода = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.КонецПериода = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, КонецПериода);
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
	Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	Секция.Параметры.ИННКППОрганизации = "" + Организация.ИНН + ?(НЕ ЗначениеЗаполнено(Организация.КПП), "", ("/" + Организация.КПП));
	Если Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту Тогда
		Секция.Параметры.УстановленныйОтбор = "Отбор: Контрагент " + ?(КонтрагентДляОтбора.ЭтоГруппа, "в группе ", "= ") + КонтрагентДляОтбора;
	КонецЕсли;
	ТабличныйДокумент.Вывести(Секция);
	// Вывод шапки книги покупок
	/////////////////////////////////////////////////////////////////////////
	
	/////////////////////////////////////////////////////////////////////////
	// Вывод пустой книги покупок, если данных нет
	Если Результат.Пустой() Тогда
		
		Секция = Макет.ПолучитьОбласть("Всего");
		ТабличныйДокумент.Вывести(Секция);
		
		/////////////////////////////////////////////////////////////////////////
		// Вывод подвала
		ВывестиПодвал(ТабличныйДокумент, Макет);
		// Вывод подвала
		/////////////////////////////////////////////////////////////////////////
		
		/////////////////////////////////////////////////////////////////////////
		// Удаление колонок 20% и связанного примечания
		Если СкрытьКолонкиПоСтавке20 Тогда
			УдалитьКолонки20ПроцентовОсновнойРаздел(ТабличныйДокумент);
		КонецЕсли; 
		// Удаление колонок 20% и связанного примечания
		/////////////////////////////////////////////////////////////////////////
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
		Возврат;
	КонецЕсли; 
	// Вывод пустой книги покупок, если данных нет
	/////////////////////////////////////////////////////////////////////////
	
	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ИтогПоОрганизации = ДеревоЗаписей.Строки[0];
	
	ТаблицаДополнительнойИнформацииПоСФ = ПолучитьДополнительнуюИнформациюПоСФ(СписокСчетовФактур);
	
	Секция = Макет.ПолучитьОбласть("Строка");
	Если ГруппироватьПоКонтрагентам Тогда
		СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
		СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
	КонецЕсли;
	
	Счетчик = 0; // Счетчик строк книги покупок
	
	Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
		Для Каждого ИтогПоКонтрагенту Из ИтогПоОрганизации.Строки Цикл
			СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Продавец;
			ТабличныйДокумент.Вывести(СекцияКонтрагент);
			ТабличныйДокумент.НачатьГруппуСтрок();
			Для Каждого ИтогПоНалоговыйПериод Из ИтогПоКонтрагенту.Строки Цикл
				Для Каждого ИтогПоДокументу Из ИтогПоНалоговыйПериод.Строки Цикл
					Для Каждого ИтогПоИсправлению Из ИтогПоДокументу.Строки Цикл
						Для Каждого ЗаписьКниги Из ИтогПоИсправлению.Строки Цикл
							
							Счетчик = Счетчик + 1;
							Секция.Параметры.Ном = Счетчик;
							
							ЗаполнитьСтрокуКнигиПокупок(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
							
							ТабличныйДокумент.Вывести(Секция);
							
						КонецЦикла; 
					КонецЦикла; 
				КонецЦикла; 
			КонецЦикла;
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
			ТабличныйДокумент.Вывести(СекцияВсегоКонтрагент);
		КонецЦикла;
	Иначе
		Для Каждого ИтогПоНалоговыйПериод Из ИтогПоОрганизации.Строки Цикл
			Для каждого ИтогПоДокументу Из ИтогПоНалоговыйПериод.Строки Цикл
				Для Каждого ИтогПоИсправлению Из ИтогПоДокументу.Строки Цикл
					Для каждого ЗаписьКниги Из ИтогПоИсправлению.Строки Цикл
						
						Счетчик = Счетчик + 1;
						Секция.Параметры.Ном = Счетчик;
						
						ЗаполнитьСтрокуКнигиПокупок(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
						
						ТабличныйДокумент.Вывести(Секция);
					КонецЦикла; 	
				КонецЦикла; 	
			КонецЦикла; 
		КонецЦикла;
	КонецЕсли;
	// Вывод всего
	Секция = Макет.ПолучитьОбласть("Всего");
	Секция.Параметры.Заполнить(ИтогПоОрганизации);
	
	ТабличныйДокумент.Вывести(Секция);
	
	/////////////////////////////////////////////////////////////////////////
	// Вывод подвала
	ВывестиПодвал(ТабличныйДокумент, Макет);
	// Вывод подвала
	/////////////////////////////////////////////////////////////////////////
	
	/////////////////////////////////////////////////////////////////////////
	// Повтор шапки таблицы на каждой строке
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область("СтрокиДляПовтора");
	// Повтор шапки таблицы на каждой строке
	/////////////////////////////////////////////////////////////////////////
	
	/////////////////////////////////////////////////////////////////////////
	// Удаление колонок 20% и связанного примечания
	Если СкрытьКолонкиПоСтавке20 Тогда
		Если ЕстьЗаписиПоКолонке20 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("В книге продаж организации <"+Организация+"> за период "+ПредставлениеПериода(НачалоПериода, ?(КонецПериода='00010101',КонецПериода,КонецДня(КонецПериода)))+" есть записи по ставке НДС 20%!
			|Отображение соотвествующих колонок не может быть отключено.");
		Иначе
			УдалитьКолонки20ПроцентовОсновнойРаздел(ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли; 
	// Удаление колонок 20% и связанного примечания
	/////////////////////////////////////////////////////////////////////////
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуДополнительногоЛиста(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20)
	
	СтрокаДополнительнойИнформации = Неопределено;
	ДатаНомер = ОпределитьДатуИНомерСФ(ЗаписьКниги.Строки[0], Секция);
	
	НомерДатаИсправления = ОпределитьНомерИДатуИсправленногоСФ(ЗаписьКниги.Строки[0], Секция);
	Секция.Параметры.НомерДатаИсправления = НомерДатаИсправления;	

	НомерДатаКорректировки = ОпределитьНомерИДатуКорректировочногоСФ(ЗаписьКниги.Строки[0], Секция);
	Секция.Параметры.НомерДатаКорректировки = НомерДатаКорректировки;
	
	НомерДатаИсправленияКорректировки = ОпределитьНомерИДатуИсправленияКорректировочногоСФ(ЗаписьКниги.Строки[0], Секция);
	Секция.Параметры.НомерДатаИсправленияКорректировки = НомерДатаИсправленияКорректировки;	

	Секция.Параметры.Заполнить(ЗаписьКниги);

	Секция.Параметры.Заполнить(ЗаписьКниги.Строки[0]);
	Секция.Параметры.ВсегоПокупок = 	ЗаписьКниги.ВсегоПокупок;
	Секция.Параметры.СуммаБезНДС18 = 	ЗаписьКниги.СуммаБезНДС18;
	Секция.Параметры.НДС18 = 			ЗаписьКниги.НДС18;
	Секция.Параметры.СуммаБезНДС10 = 	ЗаписьКниги.СуммаБезНДС10;
	Секция.Параметры.НДС10 = 			ЗаписьКниги.НДС10;
	Секция.Параметры.НДС0 = 			ЗаписьКниги.НДС0;
	Секция.Параметры.СуммаБезНДС20 = 	ЗаписьКниги.СуммаБезНДС20;
	Секция.Параметры.НДС20 = 			ЗаписьКниги.НДС20;
	Секция.Параметры.СуммаСовсемБезНДС= ЗаписьКниги.СуммаСовсемБезНДС;
	Если ЗначениеЗаполнено(ЗаписьКниги.Строки[0].СчетФактураДокумент) Тогда
		Секция.Параметры.СчетФактура = ЗаписьКниги.Строки[0].СчетФактураДокумент;
	КонецЕсли;

	Если не ЕстьЗаписиПоКолонке20 и не (ЗаписьКниги.СуммаБезНДС20 = 0 и ЗаписьКниги.НДС20 = 0) Тогда
		ЕстьЗаписиПоКолонке20 = Истина;
	КонецЕсли; 

	Секция.Параметры.ДатаНомер = ДатаНомер;
	Секция.Параметры.НомерГТД = ?(СтрокаДополнительнойИнформации = Неопределено, "", СтрокаДополнительнойИнформации.ГТДиСтрана);

	ТекстОплаты = "";
	ТекстДатаОприходования = "";
	СписокДатОплат = Новый СписокЗначений();
	СписокДатОприходования = Новый СписокЗначений();
	ТекстНомерГТД = "";
	
	Для Каждого СтрокаЗаписи Из ЗаписьКниги.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
			Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", ","+Символы.ПС) + Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
				СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОприходования) Тогда
			Если СписокДатОприходования.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстДатаОприходования = ТекстДатаОприходования + ?(Не ЗначениеЗаполнено(ТекстДатаОприходования), "", ","+Символы.ПС) + Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy");
				СписокДатОприходования.Добавить(Формат(СтрокаЗаписи.ДатаОприходования, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	// ГТД и страна происхождения, дополнительные оплаты
	СчетаФактуры = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(ЗаписьКниги.Строки.ВыгрузитьКолонку("СчетФактура"));
	
	Для Каждого СчетФактура из СчетаФактуры Цикл
		
		Если ЗначениеЗаполнено(СчетФактура) Тогда
			
			СтрокаДополнительнойИнформации = СоответствиеСтрокиДопИнформацииПоСчетуФактуре[Строка(СчетФактура.УникальныйИдентификатор())];
			Если Не СтрокаДополнительнойИнформации = Неопределено 
				И Не СтрокаДополнительнойИнформации.Строки.Количество() = 0 Тогда
				СтрокаДополнительнойИнформации = СтрокаДополнительнойИнформации.Строки[0];
			Иначе
				СтрокаДополнительнойИнформации = Неопределено;
			КонецЕсли; 
			
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли;
		
		Если Не СтрокаДополнительнойИнформации = Неопределено Тогда
			
			Если СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана) <> "" Тогда
				ТекстНомерГТД = ТекстНомерГТД + ?(ТекстНомерГТД = "", "", ";") + СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана);
			КонецЕсли;

			// Проверим наличие дополнительных дат оплат
			Если ТипЗнч(СтрокаДополнительнойИнформации.ДатыОплаты) = Тип("Массив") Тогда
				Для Каждого ТекущаяДатаОплаты Из СтрокаДополнительнойИнформации.ДатыОплаты Цикл
					Если СписокДатОплат.НайтиПоЗначению(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
						ТекстОплаты = ТекстОплаты + ?(ПустаяСтрока(ТекстОплаты), "", ","+Символы.ПС) + Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy");
						СписокДатОплат.Добавить(Формат(ТекущаяДатаОплаты, "ДФ=dd.MM.yyyy"));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;		

	Секция.Параметры.ДатаОплаты = ТекстОплаты;
	Секция.Параметры.ДатаОприходования = ТекстДатаОприходования;
	Секция.Параметры.НомерГТД = ТекстНомерГТД;
						
КонецПроцедуры
	
Процедура СформироватьДополнительныеЛисты(ЭлементыФормы)
	Перем Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента;
	Перем ТабличныйДокумент;
	
	// Получение налогового периода формирования отчета
	НДСНалоговыйПериод = УчетНДС.ПолучитьУПНДСНалоговыйПериод(Организация, КонецПериода);
	
	// Проверка наличия дополнительных листов за текущий период
	СтруктураПараметров = ПроверитьНаличиеДопЛистов(НДСНалоговыйПериод);
	
	СтрокаСообщения = "";
	Если ДополнительныеЛистыЗаТекущийПериод Или Не ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.КорректируемыйПериод Тогда
			Сообщить("В указанном периоде отчета были внесены изменения в предшествующие налоговые периоды. 
					|Дополнительные листы по корректируемым налоговым периодам, в которые внесены изменения, можно построить в текущем отчете. 
					|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за корректируемый период""", СтатусСообщения.Информация);
		КонецЕсли;
		Если ФормироватьДополнительныеЛисты И Не СтруктураПараметров.ТекущийПериод Тогда
			Сообщить("В указанном периоде отчета не вносились изменения в последующих налоговых периодах. 
					|Построение дополнительных листов за текущий налоговый период не требуется", СтатусСообщения.Информация);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если Не ДополнительныеЛистыЗаТекущийПериод Или Не ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.ТекущийПериод Тогда
			Сообщить("В указанном периоде отчета есть изменения, внесенные в последующих налоговых периодах. 
					|Дополнительные листы по текущему налоговому периоду можно построить в текущем отчете.
					|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за текущий период""!", СтатусСообщения.Информация);
		КонецЕсли;
		Если ФормироватьДополнительныеЛисты И Не СтруктураПараметров.КорректируемыйПериод Тогда
			Сообщить("В указанном периоде отчета не вносились изменения в предыдущие налоговые периоды. 
					|Построение дополнительных листов за корректируемый налоговый период не требуется", СтатусСообщения.Информация);
			Возврат;
		КонецЕсли;
	КонецЕсли;

	// Если флажок ФормироватьДополнительныеЛисты не установлен, продолжать не надо
	// При этом, если доп. листы есть, об этом было сообщено пользователю
	Если Не ФормироватьДополнительныеЛисты Тогда
		Возврат;
	КонецЕсли;
	
	СписокСчетовФактур = Неопределено;
	// Получение записей дополнительных листов
	Результат = ПолучитьЗаписиДополнительныхЛистов(НДСНалоговыйПериод, СписокСчетовФактур);
	
	Если Результат.Пустой() Тогда
	    Возврат;
	КонецЕсли; 
	
	НомерОтображаемогоПериода = 0;
	
	Макет = ПолучитьМакет("ДополнительныйЛист");
	Секция = Макет.ПолучитьОбласть("Строка");
	СтрокаИтого = Макет.ПолучитьОбласть("Итого");
	СтрокаВсего = Макет.ПолучитьОбласть("Всего");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	Если ГруппироватьПоКонтрагентам Тогда
		СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
		СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
	КонецЕсли;
	
	Если СкрытьКолонкиПоСтавке20 Тогда
	    ТаблицаОбластейДляКорректировки = Новый ТаблицаЗначений();
		ТаблицаОбластейДляКорректировки.Колонки.Добавить("Подпись20Процентов");
		ТаблицаОбластейДляКорректировки.Колонки.Добавить("КонецЛистаБезПодписи20Процентов");
	КонецЕсли; 
	
	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаДополнительнойИнформацииПоСФ = ПолучитьДополнительнуюИнформациюПоСФ(СписокСчетовФактур, Истина);
	
	Для Каждого ИтогПоПериодам ИЗ ДеревоЗаписей.Строки Цикл;
		
		НомерЛиста = 0;
		
		/////////////////////////////////////////////////////////////////////////
		// Добавление новой страницы панели разделов для вывода доп. листа
		НомерОтображаемогоПериода = НомерОтображаемогоПериода + 1;
		НалоговыйПериод = ПредставлениеПериода(ИтогПоПериодам.НалоговыйПериод, КонецДня(ИтогПоПериодам.КонецНалоговогоПериода), "ФП = Истина");
				
		ПанельРазделовКниги = ЭлементыФормы.ПанельРазделовКниги;
		НоваяСтраница = ПанельРазделовКниги.Страницы.Добавить("ДопЛист"+НомерОтображаемогоПериода,"Доп.листы за "+НалоговыйПериод);
		ПанельРазделовКниги.ТекущаяСтраница = НоваяСтраница;
		ТабличныйДокумент = ЭлементыФормы.Добавить(Тип("ПолеТабличногоДокумента"),"ТД_ДопЛист"+НомерОтображаемогоПериода, Истина,ПанельРазделовКниги);
		ТабличныйДокумент.Лево = ЭлементыФормы.ТабличныйДокумент.Лево;
		ТабличныйДокумент.Верх = ЭлементыФормы.ТабличныйДокумент.Верх;
		ТабличныйДокумент.Высота = ЭлементыФормы.ТабличныйДокумент.Высота;
		ТабличныйДокумент.Ширина = ЭлементыФормы.ТабличныйДокумент.Ширина;
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПокупокДопЛист";
		
		ЭлементыФормы.ТабличныйДокумент.ПолучитьПривязку(ГраницаЭлементаУправления.Низ,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.УстановитьПривязку(ГраницаЭлементаУправления.Низ,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ЭлементыФормы.ТабличныйДокумент.ПолучитьПривязку(ГраницаЭлементаУправления.Право,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.УстановитьПривязку(ГраницаЭлементаУправления.Право,Первый_элемент, Граница_первого_элемента, Второй_элемент, Граница_второго_элемента);
		ТабличныйДокумент.ТолькоПросмотр = Истина;
		
		Если СкрытьКолонкиПоСтавке20 Тогда
		    ТаблицаОбластейДляКорректировки.Очистить();
		КонецЕсли;
		// Добавление новой страницы панели разделов для вывода доп. листа
		/////////////////////////////////////////////////////////////////////////
		МожноСкрытьКолонкиПоСтавке20 = СкрытьКолонкиПоСтавке20;

		Для Каждого ИтогПоПериодамКорректировки ИЗ ИтогПоПериодам.Строки Цикл;
			// Формирование шапки доп. листа
			ОкончаниеПредыдущегоРаздела = ТабличныйДокумент.ВысотаТаблицы;
			НомерЛиста = НомерЛиста + 1;
				
			ВывестиШапкуДопЛиста(ТабличныйДокумент, Макет, ИтогПоПериодамКорректировки, НомерЛиста); //НачалоПериода, КонецПериода, НДСНалоговыйПериод,

			ИтогЗаПериод = ПолучитьИтогиЗаПериод(ИтогПоПериодамКорректировки.НалоговыйПериод, КонецДня(ИтогПоПериодамКорректировки.КонецНалоговогоПериода), ИтогПоПериодамКорректировки.ДатаОформления);
			Если Не ИтогЗаПериод.Пустой() Тогда
				ИтогЗаПериод = ИтогЗаПериод.Выгрузить()[0];
			Иначе
				ИтогЗаПериод = Новый Структура;
				ИтогЗаПериод.Вставить("ВсегоПокупок", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаБезНДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаБезНДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС0", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаБезНДС20", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("НДС20", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
				ИтогЗаПериод.Вставить("СуммаСовсемБезНДС", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
			КонецЕсли;
			СтрокаИтого.Параметры.Заполнить(ИтогЗаПериод);
			
			ЕстьЗаписиПоКолонке20 = не (ИтогЗаПериод.СуммаБезНДС20 = 0 и ИтогЗаПериод.НДС20 = 0);
			ТабличныйДокумент.Вывести(СтрокаИтого);

			Счетчик = 0;

			Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
				Для Каждого ИтогПоКонтрагенту Из ИтогПоПериодамКорректировки.Строки Цикл
					СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Продавец;
					ТабличныйДокумент.Вывести(СекцияКонтрагент);
					ТабличныйДокумент.НачатьГруппуСтрок();
					Для Каждого ЗаписьПоСФ Из ИтогПоКонтрагенту.Строки Цикл
						Для Каждого РазделениеПоСтавкамДляАванса Из ЗаписьПоСФ.Строки Цикл
							Для каждого ИтогПоИсправлениям Из РазделениеПоСтавкамДляАванса.Строки Цикл
								Для каждого ЗаписьКниги Из ИтогПоИсправлениям.Строки Цикл
									
									Счетчик = Счетчик + 1;
									Секция.Параметры.Ном = Счетчик;
									
									ЗаполнитьСтрокуДополнительногоЛиста(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
									
									ТабличныйДокумент.Вывести(Секция);
									
									ИтогЗаПериод.ВсегоПокупок = ИтогЗаПериод.ВсегоПокупок + ЗаписьКниги.ВсегоПокупок;
									ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
									ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
									ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
									ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
									ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
									ИтогЗаПериод.СуммаБезНДС20 = ИтогЗаПериод.СуммаБезНДС20 + ЗаписьКниги.СуммаБезНДС20;
									ИтогЗаПериод.НДС20 = ИтогЗаПериод.НДС20 + ЗаписьКниги.НДС20;
									ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
								КонецЦикла; 
							КонецЦикла; 
						КонецЦикла; 
					КонецЦикла; 
					ТабличныйДокумент.ЗакончитьГруппуСтрок();
					СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
					ТабличныйДокумент.Вывести(СекцияВсегоКонтрагент);
				КонецЦикла;
			Иначе
				Для Каждого ЗаписьПоСФ Из ИтогПоПериодамКорректировки.Строки Цикл
					Для Каждого РазделениеПоСтавкамДляАванса Из ЗаписьПоСФ.Строки Цикл
						Для каждого ИтогПоИсправлениям Из РазделениеПоСтавкамДляАванса.Строки Цикл
							Для каждого ЗаписьКниги Из ИтогПоИсправлениям.Строки Цикл
								
								Счетчик = Счетчик + 1;
								Секция.Параметры.Ном = Счетчик;
								
								ЗаполнитьСтрокуДополнительногоЛиста(Секция, ЗаписьКниги, ЕстьЗаписиПоКолонке20);
								
								ТабличныйДокумент.Вывести(Секция);
								
								ИтогЗаПериод.ВсегоПокупок = ИтогЗаПериод.ВсегоПокупок + ЗаписьКниги.ВсегоПокупок;
								ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
								ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
								ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
								ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
								ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
								ИтогЗаПериод.СуммаБезНДС20 = ИтогЗаПериод.СуммаБезНДС20 + ЗаписьКниги.СуммаБезНДС20;
								ИтогЗаПериод.НДС20 = ИтогЗаПериод.НДС20 + ЗаписьКниги.НДС20;
								ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
							КонецЦикла; 
						КонецЦикла; 
					КонецЦикла; 
				КонецЦикла; 
			КонецЕсли;
			СтрокаВсего.Параметры.Заполнить(ИтогЗаПериод);
			ТабличныйДокумент.Вывести(СтрокаВсего);
					
			/////////////////////////////////////////////////////////////////////////
			// Вывод подвала
			ВывестиПодвал(ТабличныйДокумент, Макет);
			// Вывод подвала
			/////////////////////////////////////////////////////////////////////////
			
			МожноСкрытьКолонкиПоСтавке20 = МожноСкрытьКолонкиПоСтавке20 и не ЕстьЗаписиПоКолонке20;

			Если МожноСкрытьКолонкиПоСтавке20 тогда
				МакетТекущегоЛиста = ТаблицаОбластейДляКорректировки.Добавить();
				МакетТекущегоЛиста.Подпись20Процентов = ТабличныйДокумент.Область("Подпись20Процентов");
				МакетТекущегоЛиста.КонецЛистаБезПодписи20Процентов = ТабличныйДокумент.Область(МакетТекущегоЛиста.Подпись20Процентов.Верх,,МакетТекущегоЛиста.Подпись20Процентов.Верх); 
			КонецЕсли;
			
		КонецЦикла; 
		
		Если СкрытьКолонкиПоСтавке20 Тогда
			Если не МожноСкрытьКолонкиПоСтавке20 Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В дополнительном листе книге покупок организации <"+Организация+"> за период "+ПредставлениеПериода(ИтогПоПериодамКорректировки.НалоговыйПериод, КонецДня(ИтогПоПериодамКорректировки.КонецНалоговогоПериода))+" есть записи по ставке НДС 20%!
				|Отображение соотвествующих колонок не может быть отключено.");
			Иначе
				Для каждого ОбластиДляКорректировки Из ТаблицаОбластейДляКорректировки Цикл
					ТабличныйДокумент.УдалитьОбласть(ОбластиДляКорректировки.Подпись20Процентов);
					
					ОбластиДляКорректировки.КонецЛистаБезПодписи20Процентов.КонецСтраницы = Истина;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЦикла; 	
				
				Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
				ЛеваяКолонка = Область20Процентов.Лево;
				ПраваяКолонка = Область20Процентов.Право;
				ОбластьКУдалению = ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка);
				ТабличныйДокумент.УдалитьОбласть(ОбластьКУдалению,ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			КонецЕсли;
		КонецЕсли; 
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиШапкуДопЛиста(ТабличныйДокумент, Макет, ЗаписьКниги, НомерЛиста)
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	Если СформироватьОтчетПоСтандартнойФорме Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Шапка");
	Если ДополнительныеЛистыЗаТекущийПериод Тогда
		Секция.Параметры.НомерЛиста = НомерЛиста;
	КонецЕсли;
	Секция.Параметры.УстановленныйОтбор = "";
	Секция.Параметры.Период = ПредставлениеПериода(ЗаписьКниги.НалоговыйПериод, КонецДня(ЗаписьКниги.КонецНалоговогоПериода), "ФП = Истина");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, КонецДня(ЗаписьКниги.КонецНалоговогоПериода));
	НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
	Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	Секция.Параметры.ИННКППОрганизации = "" + Организация.ИНН + ?(НЕ ЗначениеЗаполнено(Организация.КПП), "", ("/" + Организация.КПП));
	Секция.Параметры.ДатаСоставления = Формат(ЗаписьКниги.ДатаОформления, "ДФ=dd.MM.yyyy");
	Если Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту Тогда
		Секция.Параметры.УстановленныйОтбор = "Отбор: Контрагент " + ?(КонтрагентДляОтбора.ЭтоГруппа, "в группе ", "= ") + КонтрагентДляОтбора;
	КонецЕсли;
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры

// Процедура вызывается из тела процедуры "СформироватьКнигуПокупок". 
// Возвращает дату и номер счета-фактуры
// Определяет строку доп. информации, присваивает значение переменной СтрокаДополнительнойИнформации
Функция ОпределитьДатуИНомерСФ(ЗаписьКниги, Секция = Неопределено)
		
	Если Не ЗначениеЗаполнено(ЗаписьКниги.СчетФактура) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаписьКниги.ДатаСчетаФактуры) И ЗначениеЗаполнено(ЗаписьКниги.НомерСчетаФактуры) Тогда
		Если ЗаписьКниги.ОбрабатыватьНомерДокумента Тогда			
			ДатаНомер = "" + Формат(ЗаписьКниги.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy") + ";" + ОбщегоНазначения.ПолучитьНомерНаПечать(Новый Структура("Дата, Номер, Организация", ЗаписьКниги.ДатаСчетаФактуры, ЗаписьКниги.НомерСчетаФактуры, Организация), ПрефиксыРИБиОрганизации);
		Иначе
			ДатаНомер = "" + Формат(ЗаписьКниги.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy") + ";" + СокрЛП(ЗаписьКниги.НомерСчетаФактуры);
		КонецЕсли;
	Иначе
		
		ДатаНомер = "";
		
		Если ТипЗнч(ЗаписьКниги.СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			ДатаНомер = "" + Формат(ЗаписьКниги.СчетФактура.Дата, "ДФ=dd.MM.yyyy") + ";" + ОбщегоНазначения.ПолучитьНомерНаПечать(ЗаписьКниги.СчетФактура,ПрефиксыРИБиОрганизации);
		ИначеЕсли ТипЗнч(ЗаписьКниги.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			ДатаНомер = "" + Формат(ЗаписьКниги.СчетФактураДокумент.Дата, "ДФ=dd.MM.yyyy") + ";" + ОбщегоНазначения.ПолучитьНомерНаПечать(ЗаписьКниги.СчетФактураДокумент,ПрефиксыРИБиОрганизации);
		КонецЕсли;
		
	КонецЕсли;
		
	Возврат ДатаНомер;
		
КонецФункции

// Процедура вызывается из тела процедуры "СформироватьКнигуПокупок". 
// Возвращает номер и дату счета-фактуры корректировочного
Функция ОпределитьНомерИДатуКорректировочногоСФ(ЗаписьКниги, Секция = Неопределено)
	
	Если ЗначениеЗаполнено(ЗаписьКниги.НомерКорректировки) И ЗначениеЗаполнено(ЗаписьКниги.ДатаКорректировки) Тогда
		НомерДата = "" + ЗаписьКниги.НомерКорректировки + ";" + Формат(ЗаписьКниги.ДатаКорректировки, "ДФ=dd.MM.yyyy");
	Иначе
		НомерДата = "";
	КонецЕсли;
	
	Возврат НомерДата;
	
КонецФункции

// Процедура вызывается из тела процедуры "СформироватьКнигуПокупок". 
// Возвращает номер и дату счета-фактуры исправленного
Функция ОпределитьНомерИДатуИсправленногоСФ(ЗаписьКниги, Секция = Неопределено)

	Если ЗначениеЗаполнено(ЗаписьКниги.НомерИсправления) И ЗначениеЗаполнено(ЗаписьКниги.ДатаИсправления) Тогда
		НомерДата = "" + СокрЛП(ЗаписьКниги.НомерИсправления) + ";" + Формат(ЗаписьКниги.ДатаИсправления, "ДФ=dd.MM.yyyy") ;
	Иначе
		Возврат "";
	КонецЕсли;
	
	Возврат НомерДата;
	
КонецФункции

// Процедура вызывается из тела процедуры "СформироватьКнигуПокупок". 
// Возвращает номер и дату счета-фактуры корректировочного исправленного
Функция ОпределитьНомерИДатуИсправленияКорректировочногоСФ(ЗаписьКниги, Секция = Неопределено)
	
	Если ЗначениеЗаполнено(ЗаписьКниги.НомерИсправленияКорректировки) И ЗначениеЗаполнено(ЗаписьКниги.ДатаИсправленияКорректировки) Тогда
		НомерДата = "" + ЗаписьКниги.НомерИсправленияКорректировки  + ";" + Формат(ЗаписьКниги.ДатаИсправленияКорректировки, "ДФ=dd.MM.yyyy");
	Иначе
		Возврат "";
	КонецЕсли;
	
	Возврат НомерДата;
	
КонецФункции

Процедура ВывестиПодвал(ТабличныйДокумент, Макет)
	
	Если мСведенияОбОрганизации = Неопределено Тогда
		
		мСведенияОбОрганизации = Новый Структура;
		Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизации(Организация, ТекущаяДата(),);
		мСведенияОбОрганизации.Вставить("Руководитель", Руководители.Руководитель);
		СведенияОЮрФизЛице  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ТекущаяДата());
		мСведенияОбОрганизации.Вставить("Свидетельство", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,"));
		
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Подвал");	
	Секция.Параметры.ИмяРук = ?(Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо, "", мСведенияОбОрганизации.Руководитель);
	Секция.Параметры.ИмяОрг = ?(Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо, мСведенияОбОрганизации.Руководитель, "");
	Секция.Параметры.Свидетельство = мСведенияОбОрганизации.Свидетельство;
	
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры //ВывестиПодвал()

Процедура УдалитьКолонки20ПроцентовОсновнойРаздел(ТабличныйДокумент)
	
	Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
	ЛеваяКолонка = Область20Процентов.Лево;
	ПраваяКолонка = Область20Процентов.Право;
	ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
	ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
	
КонецПроцедуры // УдалитьКолонки20ПроцентовОсновнойРаздел()
 
#КонецЕсли 

Процедура УстановитьПараметрыЗапросаКнигиПокупок(Запрос)
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация", мСписокОрганизаций);
	Запрос.УстановитьПараметр("ОтбиратьПоКонтрагенту", Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту);
	Запрос.УстановитьПараметр("КонтрагентДляОтбора", КонтрагентДляОтбора);
	Запрос.УстановитьПараметр("ВыводитьПокупателейПоАвансам", ВыводитьПокупателейПоАвансам);

	СтавкиНДС20 = новый массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);

	СтавкиНДС18 = новый массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);

	СтавкиНДС10 = новый массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);

	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;

	Запрос.УстановитьПараметр("СтавкиНДС20"	, СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"		, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС"	, СтавкаБезНДС);
	 
	ВидыЦенностей_СобственныеСФ = новый массив;
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);

	Запрос.УстановитьПараметр("ВидыЦенностей_СобственныеСФ"	, ВидыЦенностей_СобственныеСФ);

	ВидыЦенностей_АвансыПолученные = новый массив;
	ВидыЦенностей_АвансыПолученные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_АвансыПолученные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_АвансыПолученные.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_АвансыПолученные", ВидыЦенностей_АвансыПолученные);
	Запрос.УстановитьПараметр("ВидыЦенностей_АвансыВыданные", Перечисления.ВидыЦенностей.АвансыВыданные);
	
	ВидыЦенностей_АвансСобственные = Новый Массив;
	ВидыЦенностей_АвансСобственные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_АвансСобственные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_АвансСобственные"	, ВидыЦенностей_АвансСобственные);
	
	МассивДокументовИсправлений = Новый Массив;
	МассивДокументовИсправлений.Добавить(Документы.КорректировкаПоступления.ПустаяСсылка());
	МассивДокументовИсправлений.Добавить(Документы.КорректировкаРеализации.ПустаяСсылка());
	МассивДокументовИсправлений.Добавить(Документы.СчетФактураПолученный.ПустаяСсылка());
	МассивДокументовИсправлений.Добавить(Документы.СчетФактураВыданный.ПустаяСсылка());
	МассивДокументовИсправлений.Добавить(Неопределено);	
	Запрос.УстановитьПараметр("ПустыеДокументыИсправления", МассивДокументовИсправлений);
	
КонецПроцедуры

// Получает записи книги покупок за период
//
Функция ПолучитьЗаписиКнигиПокупок(СписокСчетовФактур)
		
	// Создаем запрос по счетам-фактурам
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПараметрыЗапросаКнигиПокупок(Запрос);
	
	Запрос.Текст = 
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	НДСЗаписиКнигиПокупок.Период КАК Период,
	 |	НДСЗаписиКнигиПокупок.ВидЦенности,
	 |	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик
	 |	КОНЕЦ КАК Контрагент,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |	КОНЕЦ КАК ПродавецИНН,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |	КОНЕЦ КАК ПродавецКПП,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ КАК СчетФактура,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ВЫБОР
	 |					КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	 |						ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	 |					ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |				КОНЕЦ
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаОплаты
	 |	КОНЕЦ КАК ДатаОплаты,
	 |	НДСЗаписиКнигиПокупок.ДокументОплаты,
	 |	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.СчетФактура.Дата, МЕСЯЦ) КАК ПорядокОтраженияПоДатам,
	 |	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0)) КАК ВсегоПокупок,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС20)
	 |					И (НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаБезНДС20,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС20)
	 |				ТОГДА НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС20,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС18)
	 |					И (НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаБезНДС18,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС18)
	 |				ТОГДА НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС18,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС10)
	 |					И (НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаБезНДС10,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС10)
	 |				ТОГДА НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС10,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС = &СтавкаНДС0
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС + НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС0,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС = &СтавкаБезНДС
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС + НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаСовсемБезНДС,
	 |	ЕСТЬNULL(НДСЗаписиКнигиПокупок.СчетФактура.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК СчетФактураДата,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА ВЫБОР
	 |					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250) = """"
	 |						ТОГДА НДСЗаписиКнигиПокупок.Организация.Наименование
	 |					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |				КОНЕЦ
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |					И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |						ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |					И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |							И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА ВЫБОР
	 |					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250) = """"
	 |						ТОГДА НДСЗаписиКнигиПокупок.Организация.Наименование
	 |					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |				КОНЕЦ
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250) = """"
	 |					ТОГДА НДСЗаписиКнигиПокупок.Поставщик.Наименование
	 |				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250)
	 |			КОНЕЦ
	 |	КОНЕЦ КАК Продавец,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = &ВидыЦенностей_АвансыВыданные
	 |			ТОГДА """"
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.ДатаОплаты
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	 |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	 |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураПолученный).ДокументОснование.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |	КОНЕЦ КАК ДатаОприходования,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК НаАванс,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СтавкаНДС
	 |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	 |	КОНЕЦ КАК СтавкаНДС_Аванс,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДоговорАванса = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	 |			ТОГДА НЕОПРЕДЕЛЕНО
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДоговорАванса
	 |	КОНЕЦ КАК ДоговорАванса,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ КАК ДокументОснованиеСчетаФактуры,
	 |	ВЫБОР
	 |		КОГДА (НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	 |				ИЛИ НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаРеализации)
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		КОГДА НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.СчетФактураПолученный
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК Исправление,
	 |	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	 |	КОНЕЦ КАК ДатаСобытия
	 |ПОМЕСТИТЬ ЗаписиКнигиПокупок
	 |ИЗ
	 |	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	 |ГДЕ
	 |	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	 |	И НДСЗаписиКнигиПокупок.Организация В(&Организация)
	 |	И (НЕ НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста)
	 |	И ВЫБОР
	 |			КОГДА &ОтбиратьПоКонтрагенту = ИСТИНА
	 |				ТОГДА НДСЗаписиКнигиПокупок.Поставщик = &КонтрагентДляОтбора
	 |			ИНАЧЕ ИСТИНА
	 |		КОНЕЦ
	 |
	 |СГРУППИРОВАТЬ ПО
	 |	НДСЗаписиКнигиПокупок.ВидЦенности,
	 |	НДСЗаписиКнигиПокупок.Период,
	 |	НДСЗаписиКнигиПокупок.Организация,
	 |	НДСЗаписиКнигиПокупок.ДокументОплаты,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ВЫБОР
	 |					КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	 |						ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	 |					ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |				КОНЕЦ
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаОплаты
	 |	КОНЕЦ,
	 |	ЕСТЬNULL(НДСЗаписиКнигиПокупок.СчетФактура.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = &ВидыЦенностей_АвансыВыданные
	 |			ТОГДА """"
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.ДатаОплаты
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	 |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	 |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураПолученный).ДокументОснование.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СтавкаНДС
	 |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДоговорАванса = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	 |			ТОГДА НЕОПРЕДЕЛЕНО
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДоговорАванса
	 |	КОНЕЦ,
	 |	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА ВЫБОР
	 |					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250) = """"
	 |						ТОГДА НДСЗаписиКнигиПокупок.Организация.Наименование
	 |					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |				КОНЕЦ
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |					И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |						ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |					И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |							И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА ВЫБОР
	 |					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250) = """"
	 |						ТОГДА НДСЗаписиКнигиПокупок.Организация.Наименование
	 |					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |				КОНЕЦ
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250) = """"
	 |					ТОГДА НДСЗаписиКнигиПокупок.Поставщик.Наименование
	 |				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250)
	 |			КОНЕЦ
	 |	КОНЕЦ,
	 |	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.СчетФактура.Дата, МЕСЯЦ),
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА (НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	 |				ИЛИ НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаРеализации)
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		КОГДА НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.СчетФактураПолученный
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ
	 |
	 |ИНДЕКСИРОВАТЬ ПО
	 |	СчетФактура";
	 
	
	Если Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту И КонтрагентДляОтбора.ЭтоГруппа Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Поставщик = &КонтрагентДляОтбора", "Поставщик В ИЕРАРХИИ(&КонтрагентДляОтбора)");
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПокупок.СчетФактура КАК СчетФактура
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок";
	СписокСчетовФактур = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СчетФактура");
	
	ПолучитьСчетаФактурыДокументы(Запрос);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЗаписиКнигиПокупок.Период, КВАРТАЛ) КАК НалоговыйПериод,
	|	ЗаписиКнигиПокупок.ПорядокОтраженияПоДатам КАК ПорядокОтраженияПоДатам,
	|	ЗаписиКнигиПокупок.Организация КАК Организация,
	|	ЗаписиКнигиПокупок.Продавец КАК Продавец,
	|	ЗаписиКнигиПокупок.Контрагент КАК Контрагент,
	|	ЗаписиКнигиПокупок.ПродавецИНН КАК ПродавецИНН,
	|	ЗаписиКнигиПокупок.ПродавецКПП КАК ПродавецКПП,
	|	ЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПокупок.ДатаОплаты КАК ДатаОплаты,
	|	ЗаписиКнигиПокупок.СчетФактураДата КАК СчетФактураДата,
	|	ЗаписиКнигиПокупок.ДатаОприходования КАК ДатаОприходования,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СчетФактураДокумент, ЗаписиКнигиПокупок.СчетФактура) КАК СчетФактураДокумент,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ЕСТЬ NULL 
	|				И ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ЗаписиКнигиПокупок.СчетФактура.НомерВходящегоДокумента
	|		ИНАЧЕ ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ЕСТЬ NULL 
	|				И ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ЗаписиКнигиПокупок.СчетФактура.ДатаВходящегоДокумента
	|		ИНАЧЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	ЗаписиКнигиПокупок.НаАванс КАК НаАванс,
	|	ЗаписиКнигиПокупок.СтавкаНДС_Аванс КАК СтавкаНДС_Аванс,
	|	ЗаписиКнигиПокупок.ДоговорАванса КАК ДоговорАванса,
	|	ЗаписиКнигиПокупок.ВсегоПокупок КАК ВсегоПокупок,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС20
	|	КОНЕЦ КАК СуммаБезНДС20,
	|	ЗаписиКнигиПокупок.НДС20 КАК НДС20,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС18
	|	КОНЕЦ КАК СуммаБезНДС18,
	|	ЗаписиКнигиПокупок.НДС18 КАК НДС18,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС10
	|	КОНЕЦ КАК СуммаБезНДС10,
	|	ЗаписиКнигиПокупок.НДС10 КАК НДС10,
	|	ЗаписиКнигиПокупок.НДС0 КАК НДС0,
	|	ЗаписиКнигиПокупок.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СчетФактураДокументРасшифровка, ЗаписиКнигиПокупок.СчетФактура) КАК СчетФактураДокументРасшифровка,
	|	ТаблицаСчетаФактурыДокументы.ОъединятьСчетФактуры КАК ОъединятьСчетФактуры,
	|	ЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправления КАК НомерИсправления,
	|	ТаблицаСчетаФактурыДокументы.ДатаКорректировки КАК ДатаКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерКорректировки КАК НомерКорректировки,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ЗаписиКнигиПокупок.Исправление КАК Исправление,
	|	ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры КАК ДокументОснованиеСчетаФактуры,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ОбрабатыватьНомерДокумента, ЛОЖЬ) КАК ОбрабатыватьНомерДокумента,
	|	ЗаписиКнигиПокупок.ДатаСобытия КАК ДатаСобытия
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|			МИНИМУМ(ТаблицаСчетаФактурыДокументы.Приоритет) КАК МинимумПриоритет
	|		ИЗ
	|			ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаСчетаФактурыДокументы.СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса) КАК Приоритеты
	|		ПО ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры = Приоритеты.СчетФактура
	|			И ЗаписиКнигиПокупок.ДоговорАванса = Приоритеты.ДоговорАванса
	|			И ЗаписиКнигиПокупок.СтавкаНДС_Аванс = Приоритеты.СтавкаНДСАванса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		ПО (Приоритеты.СчетФактура = ТаблицаСчетаФактурыДокументы.СчетФактура)
	|			И (Приоритеты.МинимумПриоритет = ТаблицаСчетаФактурыДокументы.Приоритет)
	|			И (Приоритеты.ДоговорАванса = ТаблицаСчетаФактурыДокументы.ДоговорАванса)
	|			И (Приоритеты.СтавкаНДСАванса = ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НалоговыйПериод,
	|	ПорядокОтраженияПоДатам,
	|	ДатаСобытия,
	|	ЗаписиКнигиПокупок.СчетФактураДата,
	|	ДатаОплаты
	|ИТОГИ
	|	МАКСИМУМ(Продавец),
	|	МИНИМУМ(СчетФактураДата),
	|	МИНИМУМ(ДатаОприходования),
	|	МАКСИМУМ(НаАванс),
	|	СУММА(ВсегоПокупок),
	|	СУММА(СуммаБезНДС20),
	|	СУММА(НДС20),
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС),
	|	МАКСИМУМ(ОъединятьСчетФактуры)
	|ПО
	|	ОБЩИЕ,
	|	ПорядокОтраженияПоДатам,
	|	СчетФактураДокумент,
	|	ИсправленныйСчетФактура,
	|	Исправление";
				   
	Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПО
	               |	ОБЩИЕ,", "ПО
	               |	ОБЩИЕ, Контрагент, ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО Продавец, ");
	КонецЕсли;				   
	
	Возврат Запрос.Выполнить();

КонецФункции // ПолучитьЗаписиКнигиПокупок()

// Получает записи дополнительных листов за период
//
Функция ПолучитьЗаписиДополнительныхЛистов(НДСНалоговыйПериод, СписокСчетовФактур)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПараметрыЗапросаКнигиПокупок(Запрос);
	
	Запрос.Текст = 
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик
	 |	КОНЕЦ КАК Контрагент,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |	КОНЕЦ КАК ПродавецИНН,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |	КОНЕЦ КАК ПродавецКПП,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ КАК СчетФактура,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ВЫБОР
	 |					КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	 |						ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	 |					ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |				КОНЕЦ
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаОплаты
	 |	КОНЕЦ КАК ДатаОплаты,
	 |	НДСЗаписиКнигиПокупок.ДокументОплаты,
	 |	НАЧАЛОПЕРИОДА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата >= ДАТАВРЕМЯ(2006, 1, 1)
	 |				ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |			КОГДА (НЕ НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1))
	 |				ТОГДА НДСЗаписиКнигиПокупок.ДатаСобытия
	 |			КОГДА (НЕ НДСЗаписиКнигиПокупок.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1))
	 |				ТОГДА НДСЗаписиКнигиПокупок.ДатаОплаты
	 |			ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		КОНЕЦ, ДЕНЬ) КАК ПорядокОтраженияПоДатам,
	 |	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0)) КАК ВсегоПокупок,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС20)
	 |					И (НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаБезНДС20,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС20)
	 |				ТОГДА НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС20,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС18)
	 |					И (НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаБезНДС18,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС18)
	 |				ТОГДА НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС18,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС10)
	 |					И (НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаБезНДС10,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС10)
	 |				ТОГДА НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС10,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС = &СтавкаНДС0
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС + НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК НДС0,
	 |	СУММА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС = &СтавкаБезНДС
	 |				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС + НДСЗаписиКнигиПокупок.НДС
	 |			ИНАЧЕ 0
	 |		КОНЕЦ) КАК СуммаСовсемБезНДС,
	 |	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	 |	НДСЗаписиКнигиПокупок.СчетФактура.Дата КАК СчетФактураДата,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА ВЫБОР
	 |					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250) = """"
	 |						ТОГДА НДСЗаписиКнигиПокупок.Организация.Наименование
	 |					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |				КОНЕЦ
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |					И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |						ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |					И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |							И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА ВЫБОР
	 |					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250) = """"
	 |						ТОГДА НДСЗаписиКнигиПокупок.Организация.Наименование
	 |					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |				КОНЕЦ
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250) = """"
	 |					ТОГДА НДСЗаписиКнигиПокупок.Поставщик.Наименование
	 |				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250)
	 |			КОНЕЦ
	 |	КОНЕЦ КАК Продавец,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.ДатаОплаты
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	 |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	 |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураПолученный).ДокументОснование.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |	КОНЕЦ КАК ДатаОприходования,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК НаАванс,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СтавкаНДС
	 |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	 |	КОНЕЦ КАК СтавкаНДС_Аванс,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДоговорАванса = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	 |			ТОГДА НЕОПРЕДЕЛЕНО
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДоговорАванса
	 |	КОНЕЦ КАК ДоговорАванса,
	 |	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.КорректируемыйПериод, КВАРТАЛ) КАК НалоговыйПериод,
	 |	КОНЕЦПЕРИОДА(НДСЗаписиКнигиПокупок.КорректируемыйПериод, КВАРТАЛ) КАК КонецНалоговогоПериода,
	 |	НДСЗаписиКнигиПокупок.Период КАК ДатаОформления,
	 |	НДСЗаписиКнигиПокупок.ВидЦенности,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ КАК ДокументОснованиеСчетаФактуры,
	 |	ВЫБОР
	 |		КОГДА (НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	 |				ИЛИ НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаРеализации)
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		КОГДА НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.СчетФактураПолученный
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК Исправление,
	 |	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	 |	КОНЕЦ КАК ДатаСобытия
	 |ПОМЕСТИТЬ ЗаписиКнигиПокупок
	 |ИЗ
	 |	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	 |ГДЕ
	 |	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	 |	И НДСЗаписиКнигиПокупок.Организация В(&Организация)
	 |	И НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста = ИСТИНА
	 |	И ВЫБОР
	 |			КОГДА &ОтбиратьПоКонтрагенту = ИСТИНА
	 |				ТОГДА НДСЗаписиКнигиПокупок.Поставщик = &КонтрагентДляОтбора
	 |			ИНАЧЕ ИСТИНА
	 |		КОНЕЦ
	 |
	 |СГРУППИРОВАТЬ ПО
	 |	НДСЗаписиКнигиПокупок.ДокументОплаты,
	 |	НДСЗаписиКнигиПокупок.Событие,
	 |	НДСЗаписиКнигиПокупок.Организация,
	 |	НДСЗаписиКнигиПокупок.СчетФактура.Дата,
	 |	НДСЗаписиКнигиПокупок.Период,
	 |	НДСЗаписиКнигиПокупок.ВидЦенности,
	 |	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА ВЫБОР
	 |					КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	 |						ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	 |					ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |				КОНЕЦ
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаОплаты
	 |	КОНЕЦ,
	 |	НАЧАЛОПЕРИОДА(ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата >= ДАТАВРЕМЯ(2006, 1, 1)
	 |				ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |			КОГДА (НЕ НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1))
	 |				ТОГДА НДСЗаписиКнигиПокупок.ДатаСобытия
	 |			КОГДА (НЕ НДСЗаписиКнигиПокупок.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1))
	 |				ТОГДА НДСЗаписиКнигиПокупок.ДатаОплаты
	 |			ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		КОНЕЦ, ДЕНЬ),
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.ДатаОплаты
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	 |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураВыданный).ДокументОснование.Дата
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	 |			ТОГДА ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураПолученный).ДокументОснование.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СтавкаНДС
	 |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДоговорАванса = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	 |			ТОГДА НЕОПРЕДЕЛЕНО
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДоговорАванса
	 |	КОНЕЦ,
	 |	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.КорректируемыйПериод, КВАРТАЛ),
	 |	КОНЕЦПЕРИОДА(НДСЗаписиКнигиПокупок.КорректируемыйПериод, КВАРТАЛ),
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.ИНН
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.ИНН
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |				И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |					ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные)
	 |			ТОГДА НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |				И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |						И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА НДСЗаписиКнигиПокупок.Организация.КПП
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик.КПП
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	 |			ТОГДА ВЫБОР
	 |					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250) = """"
	 |						ТОГДА НДСЗаписиКнигиПокупок.Организация.Наименование
	 |					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |				КОНЕЦ
	 |		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	 |					И ((НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_АвансыПолученные))
	 |						ИЛИ (НЕ &ВыводитьПокупателейПоАвансам))
	 |				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	 |					И (НЕ(НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	 |							И ВЫРАЗИТЬ(НДСЗаписиКнигиПокупок.СчетФактура КАК Документ.ВозвратТоваровОтПокупателя).ПокупателемВыставляетсяСчетФактураНаВозврат))
	 |			ТОГДА ВЫБОР
	 |					КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250) = """"
	 |						ТОГДА НДСЗаписиКнигиПокупок.Организация.Наименование
	 |					ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Организация.НаименованиеПолное, 1, 250)
	 |				КОНЕЦ
	 |		ИНАЧЕ ВЫБОР
	 |				КОГДА ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250) = """"
	 |					ТОГДА НДСЗаписиКнигиПокупок.Поставщик.Наименование
	 |				ИНАЧЕ ПОДСТРОКА(НДСЗаписиКнигиПокупок.Поставщик.НаименованиеПолное, 1, 250)
	 |			КОНЕЦ
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	 |			ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА (НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	 |				ИЛИ НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаРеализации)
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		КОГДА НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.СчетФактураПолученный
	 |				И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ,
	 |	ВЫБОР
	 |		КОГДА (НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления))
	 |			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	 |		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	 |	КОНЕЦ";	 
	 
	Если ДополнительныеЛистыЗаТекущийПериод Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Период МЕЖДУ &НачалоПериода И &КонецПериода", "Период >= &НачалоПериода");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗаписьДополнительногоЛиста = ИСТИНА", 
								"ЗаписьДополнительногоЛиста = ИСТИНА 
								|И НДСЗаписиКнигиПокупок.КорректируемыйПериод >= &НачалоПериода 
								|И НДСЗаписиКнигиПокупок.КорректируемыйПериод <= &КонецПериода");
	КонецЕсли;
	
	Если Не СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту И КонтрагентДляОтбора.ЭтоГруппа Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Поставщик = &КонтрагентДляОтбора", "Поставщик В ИЕРАРХИИ(&КонтрагентДляОтбора)");
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПокупок.СчетФактура КАК СчетФактура
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок";
	СписокСчетовФактур = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СчетФактура");
	
	ПолучитьСчетаФактурыДокументы(Запрос);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЗаписиКнигиПокупок.НалоговыйПериод, КВАРТАЛ) КАК НалоговыйПериод,
	|	ЗаписиКнигиПокупок.ПорядокОтраженияПоДатам КАК ПорядокОтраженияПоДатам,
	|	ЗаписиКнигиПокупок.Организация КАК Организация,
	|	ЗаписиКнигиПокупок.Продавец КАК Продавец,
	|	ЗаписиКнигиПокупок.Контрагент КАК Контрагент,
	|	ЗаписиКнигиПокупок.ПродавецИНН КАК ПродавецИНН,
	|	ЗаписиКнигиПокупок.ПродавецКПП КАК ПродавецКПП,
	|	ЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПокупок.ДатаОплаты КАК ДатаОплаты,
	|	ЗаписиКнигиПокупок.СчетФактураДата КАК СчетФактураДата,
	|	ЗаписиКнигиПокупок.ДатаОприходования КАК ДатаОприходования,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СчетФактураДокумент, ЗаписиКнигиПокупок.СчетФактура) КАК СчетФактураДокумент,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ЕСТЬ NULL 
	|				И ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ЗаписиКнигиПокупок.СчетФактура.НомерВходящегоДокумента
	|		ИНАЧЕ ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ЕСТЬ NULL 
	|				И ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ЗаписиКнигиПокупок.СчетФактура.ДатаВходящегоДокумента
	|		ИНАЧЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	ЗаписиКнигиПокупок.НаАванс КАК НаАванс,
	|	ЗаписиКнигиПокупок.СтавкаНДС_Аванс КАК СтавкаНДС_Аванс,
	|	ЗаписиКнигиПокупок.ДоговорАванса КАК ДоговорАванса,
	|	ЗаписиКнигиПокупок.ВсегоПокупок КАК ВсегоПокупок,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС20
	|	КОНЕЦ КАК СуммаБезНДС20,
	|	ЗаписиКнигиПокупок.НДС20 КАК НДС20,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС18
	|	КОНЕЦ КАК СуммаБезНДС18,
	|	ЗаписиКнигиПокупок.НДС18 КАК НДС18,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС10
	|	КОНЕЦ КАК СуммаБезНДС10,
	|	ЗаписиКнигиПокупок.НДС10 КАК НДС10,
	|	ЗаписиКнигиПокупок.НДС0 КАК НДС0,
	|	ЗаписиКнигиПокупок.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	ЗаписиКнигиПокупок.ДатаОформления КАК ДатаОформления,
	|	ЗаписиКнигиПокупок.КонецНалоговогоПериода КАК КонецНалоговогоПериода,
	|	ЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправления КАК НомерИсправления,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаСчетаФактурыДокументы.НомерКорректировки КАК НомерКорректировки,
	|	ТаблицаСчетаФактурыДокументы.ДатаКорректировки КАК ДатаКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ОбрабатыватьНомерДокумента, ЛОЖЬ) КАК ОбрабатыватьНомерДокумента,
	|	ЗаписиКнигиПокупок.ДатаСобытия КАК ДатаСобытия
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|			МИНИМУМ(ТаблицаСчетаФактурыДокументы.Приоритет) КАК МинимумПриоритет
	|		ИЗ
	|			ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаСчетаФактурыДокументы.СчетФактура,
	|			ТаблицаСчетаФактурыДокументы.ДоговорАванса,
	|			ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса,
	|			ТаблицаСчетаФактурыДокументы.ОбрабатыватьНомерДокумента) КАК Приоритеты
	|		ПО ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры = Приоритеты.СчетФактура
	|			И ЗаписиКнигиПокупок.ДоговорАванса = Приоритеты.ДоговорАванса
	|			И ЗаписиКнигиПокупок.СтавкаНДС_Аванс = Приоритеты.СтавкаНДСАванса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		ПО (Приоритеты.СчетФактура = ТаблицаСчетаФактурыДокументы.СчетФактура)
	|			И (Приоритеты.МинимумПриоритет = ТаблицаСчетаФактурыДокументы.Приоритет)
	|			И (Приоритеты.ДоговорАванса = ТаблицаСчетаФактурыДокументы.ДоговорАванса)
	|			И (Приоритеты.СтавкаНДСАванса = ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НалоговыйПериод,
	|	ДатаСобытия,
	|	ДатаОформления,
	|	ЗаписиКнигиПокупок.СчетФактураДата,
	|	ДатаОплаты
	|ИТОГИ
	|	МАКСИМУМ(Продавец),
	|	МИНИМУМ(СчетФактураДата),
	|	МИНИМУМ(ДатаОприходования),
	|	МАКСИМУМ(НаАванс),
	|	СУММА(ВсегоПокупок),
	|	СУММА(СуммаБезНДС20),
	|	СУММА(НДС20),
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС),
	|	МАКСИМУМ(КонецНалоговогоПериода)
	|ПО
	|	НалоговыйПериод,
	|	ДатаОформления,
	|	СчетФактураДокумент,
	|	СтавкаНДС_Аванс,
	|	ДоговорАванса,
	|	ИсправленныйСчетФактура";
	
	Если ГруппироватьПоКонтрагентам И Не СформироватьОтчетПоСтандартнойФорме Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПО
	               |	НалоговыйПериод,
	               |	ДатаОформления,", "ПО
	               |	НалоговыйПериод,
	               |	ДатаОформления, Контрагент, ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО Продавец, ");
	КонецЕсли;				   
	
	Возврат Запрос.Выполнить();

КонецФункции // ПолучитьЗаписиКнигиПокупок()

// Получает страну происхождения и номер ГТД по списку счетов-фактур в виде, отражаемом в книге покупок
//
Функция ПолучитьДополнительнуюИнформациюПоСФ(СписокСчетовФактур, ЗаписьДополнительногоЛиста = Ложь)

	// Определить частичные оплаты
	// Определяем полную сумму по СФ
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НДСПредъявленныйОбороты.СчетФактура КАК СчетФактура,
	|	СУММА(НДСПредъявленныйОбороты.СуммаБезНДСПриход + НДСПредъявленныйОбороты.НДСПриход) КАК СуммаСНДС
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Обороты(
	|			,
	|			&КонецПериода,
	|			Период,
	|			Организация В (&Организация)
	|				И СчетФактура В (&СписокСчетовФактур)
	|				И (НЕ(ВидЦенности В (&ВидыЦенностей_ОплатаПоНДС)
	|						ИЛИ ВидЦенности В (&ВидыЦенностей_БезОплаты)))) КАК НДСПредъявленныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйОбороты.СчетФактура
	|ИТОГИ ПО
	|	СчетФактура";
	
	Запрос.УстановитьПараметр("Организация",  мСписокОрганизаций);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("СписокСчетовФактур",  СписокСчетовФактур);

	// Виды ценностей с особым порядком распределения оплат - по НДС выплаченному в бюджет
	ВидыЦенностей_ОплатаПоНДС = Новый СписокЗначений;
	ВидыЦенностей_ОплатаПоНДС.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностей_ОплатаПоНДС.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	ВидыЦенностей_ОплатаПоНДС.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностей_ОплатаПоНДС.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентКомитент);
	
	// Виды ценностей с особым порядком распределения оплат - оплата не определяется
	ВидыЦенностей_БезОплаты = Новый СписокЗначений;
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.ТаможенныеПлатежи);	
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_БезОплаты.Добавить(Перечисления.ВидыЦенностей.Возврат);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_ОплатаПоНДС", ВидыЦенностей_ОплатаПоНДС);
	Запрос.УстановитьПараметр("ВидыЦенностей_БезОплаты", ВидыЦенностей_БезОплаты);
	
	ДополнительнаяИнформацияПоСФ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СоответствиеСтрокиДопИнформацииПоСчетуФактуре = Новый Соответствие;
	
	ДополнительнаяИнформацияПоСФ.Колонки.Добавить("IDСчетФактура", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(0));
	Для Каждого СтрокаИнформации Из ДополнительнаяИнформацияПоСФ.Строки Цикл
		Если ЗначениеЗаполнено(СтрокаИнформации.СчетФактура) Тогда
			СоответствиеСтрокиДопИнформацииПоСчетуФактуре.Вставить(Строка(СтрокаИнформации.СчетФактура.УникальныйИдентификатор()), СтрокаИнформации);
		КонецЕсли; 
	КонецЦикла; 
	ДополнительнаяИнформацияПоСФ.Колонки.Добавить("ГТДиСтрана", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(0));
	
	// Дополнение по ГТД и стране происхождения
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТоваров.Ссылка КАК СчетФактура,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код КАК СтранаПроисхождения,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	|	СУММА(1) КАК КоличествоЭлементов
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В(&СписокСФ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.НомерГТД,
	|	СУММА(1)
	|ИЗ
	|	Документ.ОтражениеПоступленияТоваровИУслугНДС.ТоварыИУслуги КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В(&СписокСФ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СтранаПроисхождения,
	|	ТаблицаТоваров.НомерГТД,
	|	ТаблицаТоваров.СтранаПроисхождения.Код
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.Ссылка.НомерГТД,
	|	СУММА(1)
	|ИЗ
	|	Документ.ГТДИмпорт.Товары КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В(&СписокСФ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения,
	|	ТаблицаТоваров.Ссылка.НомерГТД,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.СчетФактура,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД,
	|	СУММА(1)
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.СчетФактура В(&СписокСФ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.СчетФактура,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД,
	|	СУММА(1)
	|ИЗ
	|	Документ.КорректировкаПоступления.Товары КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В(&СписокСФ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД
	|ИТОГИ
	|	СУММА(КоличествоЭлементов)
	|ПО
	|	СчетФактура,
	|	СтранаПроисхождения";
	
	Запрос.УстановитьПараметр("СписокСФ",СписокСчетовФактур);
	
	ГТДпоСФ =  Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого СтрокаСФ Из ГТДпоСФ.Строки Цикл
		Если Не ЗначениеЗаполнено(СтрокаСФ.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиИнформацииСФ = СоответствиеСтрокиДопИнформацииПоСчетуФактуре[Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор())];
		Если СтрокиИнформацииСФ = Неопределено Тогда
			НоваяСтрокаИнформацииСФ  = ДополнительнаяИнформацияПоСФ.Строки.Добавить();
			НоваяРазвернутаяСтрокаИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки.Добавить();
			НоваяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			НоваяРазвернутаяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			
			СоответствиеСтрокиДопИнформацииПоСчетуФактуре.Вставить(Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор()), НоваяСтрокаИнформацииСФ);
			
			СтрокиИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки;
		Иначе
			СтрокиИнформацииСФ = СтрокиИнформацииСФ.Строки;
		КонецЕсли; 
		
		СтрокаИнформации = "";
		Для Каждого СтрокаСтраныПроисхождения Из СтрокаСФ.Строки Цикл
			СтрокаИнформации = СтрокаИнформации + ?(ПустаяСтрока(СтрокаИнформации), "", Символы.ПС) + СокрЛП(СтрокаСтраныПроисхождения.СтранаПроисхождения);
			ГТДРез = "";
			Для каждого СтрокаНомерГТД Из СтрокаСтраныПроисхождения.Строки Цикл
				ГТДРез = ГТДРез+ ?(ГТДРез = "","",";") + СокрЛП(СтрокаНомерГТД.НомерГТД)
			КонецЦикла; 
			
			СтрокаИнформации = СтрокаИнформации + ?(СтрокаИнформации = "","",?(ГТДРез = "","",";")) + ГТДРез;
		КонецЦикла; 
		
		Для Каждого СтрокаИнформацииСФ Из СтрокиИнформацииСФ Цикл
			СтрокаИнформацииСФ.ГТДиСтрана = СтрокаИнформации;
		КонецЦикла; 
		
	КонецЦикла; 
	
	// дополняем информацию датами оплаты,
    // отраженными в регистре записей книг отдельно от сумм
	ДополнительнаяИнформацияПоСФ.Колонки.Добавить("ДатыОплаты");

	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
		|	НДСЗаписиКнигиПокупок.ДатаОплаты
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
		|ГДЕ
		|	НДСЗаписиКнигиПокупок.Организация В(&Организация)
		|	И ВЫБОР
		|			КОГДА &ЗаписьДополнительногоЛиста
		|					И &ДополнительныеЛистыЗаТекущийПериод
		|				ТОГДА НДСЗаписиКнигиПокупок.Период >= &НачалоПериода
		|						И (НДСЗаписиКнигиПокупок.КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)
		|			ИНАЧЕ НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|		КОНЕЦ
		|	И НДСЗаписиКнигиПокупок.СчетФактура В(&СписокСчетовФактур)
		|	И НДСЗаписиКнигиПокупок.СуммаБезНДС = 0
		|	И НДСЗаписиКнигиПокупок.НДС = 0
		|	И (НЕ НДСЗаписиКнигиПокупок.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1))
		|	И НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста = &ЗаписьДополнительногоЛиста
		|ИТОГИ ПО
		|	СчетФактура";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация", мСписокОрганизаций);
	Запрос.УстановитьПараметр("ЗаписьДополнительногоЛиста", ЗаписьДополнительногоЛиста);
	Запрос.УстановитьПараметр("ДополнительныеЛистыЗаТекущийПериод", ДополнительныеЛистыЗаТекущийПериод);
	Запрос.УстановитьПараметр("СписокСчетовФактур", СписокСчетовФактур);
	
	ДатыОплатСФ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

	Для Каждого СтрокаСФ Из ДатыОплатСФ.Строки Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаСФ.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиИнформацииСФ = СоответствиеСтрокиДопИнформацииПоСчетуФактуре[Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор())];
		Если СтрокиИнформацииСФ = Неопределено Тогда
			НоваяСтрокаИнформацииСФ  = ДополнительнаяИнформацияПоСФ.Строки.Добавить();
			НоваяРазвернутаяСтрокаИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки.Добавить();
			НоваяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			НоваяРазвернутаяСтрокаИнформацииСФ.СчетФактура = СтрокаСФ.СчетФактура;
			СоответствиеСтрокиДопИнформацииПоСчетуФактуре.Вставить(Строка(СтрокаСФ.СчетФактура.УникальныйИдентификатор()), НоваяСтрокаИнформацииСФ);
			СтрокиИнформацииСФ = НоваяСтрокаИнформацииСФ.Строки;
		Иначе
			СтрокиИнформацииСФ = СтрокиИнформацииСФ.Строки;
		КонецЕсли; 
		
		Для каждого СтрокаИнформацииСФ Из СтрокиИнформацииСФ Цикл
			СтрокаИнформацииСФ.ДатыОплаты = СтрокаСФ.Строки.ВыгрузитьКолонку("ДатаОплаты");;
		КонецЦикла; 
		
	КонецЦикла; 
	
	Возврат ДополнительнаяИнформацияПоСФ;
	
КонецФункции // ПолучитьДополнительнуюИнформациюПоСФ()

// Получает итоги книги покупок за период
//
// Параметры
//  Организация    – <СправочникСсылка.Организации> - организация по которой строится книга 
//  НачалоПериода  – <Дата> – дата начала периода
//  НачалоПериода  – <Дата> – дата окончания периода
//
// Возвращаемое значение:
//   <ТаблицаЗначений>   – Таблица значений
//
Функция ПолучитьИтогиЗаПериод(НачалоПериода, КонецПериода, ДатаФормированияДопЛиста)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.ВсегоПокупок), 0) КАК ВсегоПокупок,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.СуммаБезНДС20), 0) КАК СуммаБезНДС20,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.НДС20), 0) КАК НДС20,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.СуммаБезНДС18), 0) КАК СуммаБезНДС18,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.НДС18), 0) КАК НДС18,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.СуммаБезНДС10), 0) КАК СуммаБезНДС10,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.НДС10), 0) КАК НДС10,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.НДС0), 0) КАК НДС0,
	 |	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.СуммаСовсемБезНДС), 0) КАК СуммаСовсемБезНДС
	 |ИЗ
	 |	(ВЫБРАТЬ
	 |		НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот КАК ВсегоПокупок,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС20)
	 |					И (НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы))
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК СуммаБезНДС20,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС20)
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК НДС20,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	 |					И (НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы))
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК СуммаБезНДС18,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК НДС18,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	 |					И (НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы))
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК СуммаБезНДС10,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК НДС10,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаНДС0
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК НДС0,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаБезНДС
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ КАК СуммаСовсемБезНДС
	 |	ИЗ
	 |		РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	 |				&НачалоПериода,
	 |				&КонецПериода,
	 |				Период,
	 |				Организация В (&Организация)
	 |					И (НЕ ЗаписьДополнительногоЛиста = ИСТИНА)) КАК НДСЗаписиКнигиПокупокОбороты
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС20)
	 |					И (НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы))
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС20)
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	 |					И (НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы))
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	 |					И (НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы))
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаНДС0
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ,
	 |		ВЫБОР
	 |			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаБезНДС
	 |				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	 |			ИНАЧЕ 0
	 |		КОНЕЦ
	 |	ИЗ
	 |		РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	 |				&НачалоПериода,
	 |				&МоментФормированияДопЛиста,
	 |				Период,
	 |				Организация В (&Организация)
	 |					И ЗаписьДополнительногоЛиста = ИСТИНА
	 |					И КорректируемыйПериод >= &НачалоПериода
	 |					И КорректируемыйПериод <= &КонецПериода) КАК НДСЗаписиКнигиПокупокОбороты) КАК ИтогиКнигиПокупок";
	 
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("МоментФормированияДопЛиста",Новый Граница(НачалоДня(ДатаФормированияДопЛиста),ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация"	, мСписокОрганизаций);

	СтавкиНДС20 = новый массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);

	СтавкиНДС18 = новый массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);

	СтавкиНДС10 = новый массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);

	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;

	Запрос.УстановитьПараметр("СтавкиНДС20"	, СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18"	, СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10"	, СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0"	, СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС", СтавкаБезНДС);
	 
	ВидыЦенностей_Авансы = Новый Массив;
	ВидыЦенностей_Авансы.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Авансы.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_Авансы.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Авансы", ВидыЦенностей_Авансы);
	
	НДСНалоговыйПериод = УчетНДС.ПолучитьУПНДСНалоговыйПериод(Организация, КонецПериода);
	Если НДСНалоговыйПериод = Перечисления.Периодичность.Квартал Тогда
	    Запрос.Текст = СтрЗаменить(Запрос.Текст,"Месяц,", "Квартал,");
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ПолучитьСчетаФактурыДокументы(Запрос)
	
	МассивДокументовСДаннымиСФ = Новый Массив;
	
	ТекстЗапросаПоДокументамСДаннымиСФ = "";
	Если МассивДокументовСДаннымиСФ.Количество() <> 0 Тогда
		
		Для Каждого ИмяДокумента Из МассивДокументовСДаннымиСФ Цикл
			ТекстЗапросаПоДокументамСДаннымиСФ = ТекстЗапросаПоДокументамСДаннымиСФ + " ОБЪЕДИНИТЬ ВСЕ 
	               |		ВЫБРАТЬ
	               |			ДокументСДаннымиСФ.Ссылка,
	               |			ДокументСДаннымиСФ.НомерВходящегоСчетаФактуры,
	               |			ДокументСДаннымиСФ.ДатаВходящегоСчетаФактуры,
	               |			ДокументСДаннымиСФ.Ссылка,
	               |			ЛОЖЬ,
	               |			НЕОПРЕДЕЛЕНО,
	               |			НЕОПРЕДЕЛЕНО,
	               |			1,
	               |			NULL
	               |		ИЗ
	               |			Документ." + ИмяДокумента + " КАК ДокументСДаннымиСФ
	               |		ГДЕ
	               |			ДокументСДаннымиСФ.ПредъявленСчетФактура 
				   |			И ДокументСДаннымиСФ.Проведен
	               |			И (НЕ ДокументСДаннымиСФ.ПометкаУдаления)
	               |			И ДокументСДаннымиСФ.Организация В (&Организация)";
		КонецЦикла;
		
	КонецЕсли;
				   
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СчетаФактурыДокументы.СчетФактура,
	               |	СчетаФактурыДокументы.ДатаСчетаФактуры,
	               |	СчетаФактурыДокументы.НомерСчетаФактуры,
	               |	СчетаФактурыДокументы.СчетФактураДокумент,
	               |	СчетаФактурыДокументы.ДоговорАванса,
	               |	СчетаФактурыДокументы.СтавкаНДСАванса,
	               |	СчетаФактурыДокументы.Приоритет,
	               |	СчетаФактурыДокументы.СчетФактураДокумент КАК СчетФактураДокументРасшифровка,
	               |	СчетаФактурыДокументы.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ ТаблицаСчетаФактурыДокументыПредварительная
	               |ИЗ
	               |	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВЫБОР
	               |				КОГДА СчетФактураПолученный.Ссылка.Исправление
	               |						И СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	               |					ТОГДА СчетФактураПолученный.Ссылка
	               |				ИНАЧЕ СчетФактураПолученный.ДокументОснование
	               |			КОНЕЦ КАК СчетФактура,
	               |			ВЫБОР
	               |				КОГДА СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	               |					ТОГДА СчетФактураПолученный.Ссылка.НомерИсходногоДокумента
	               |				ИНАЧЕ СчетФактураПолученный.Ссылка.НомерВходящегоДокумента
	               |			КОНЕЦ КАК НомерСчетаФактуры,
	               |			ВЫБОР
	               |				КОГДА СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	               |					ТОГДА СчетФактураПолученный.Ссылка.ДатаИсходногоДокумента
	               |				ИНАЧЕ СчетФактураПолученный.Ссылка.ДатаВходящегоДокумента
	               |			КОНЕЦ КАК ДатаСчетаФактуры,
	               |			СчетФактураПолученный.Ссылка КАК СчетФактураДокумент,
	               |			ВЫБОР
	               |				КОГДА СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ КАК НаАванс,
	               |			ВЫБОР
	               |				КОГДА СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	               |					ТОГДА ЕСТЬNULL(Авансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ КАК СтавкаНДСАванса,
	               |			ВЫБОР
	               |				КОГДА СчетФактураПолученный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	               |					ТОГДА СчетФактураПолученный.Ссылка.ДоговорКонтрагента
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ КАК ДоговорАванса,
	               |			2 КАК Приоритет,
	               |			СчетФактураПолученный.Ссылка КАК Ссылка
	               |		ИЗ
	               |			Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	               |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.Авансы КАК Авансы
	               |				ПО СчетФактураПолученный.Ссылка = Авансы.Ссылка
	               |		ГДЕ
	               |			СчетФактураПолученный.Ссылка.Проведен
	               |			И (НЕ СчетФактураПолученный.Ссылка.ПометкаУдаления)
	               |			И СчетФактураПолученный.Ссылка.Организация В(&Организация)
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ВЫБОР
	               |				КОГДА СчетФактураВыданный.Ссылка.Исправление
	               |						И СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	               |						И (НЕ СчетФактураВыданный.Ссылка.СформированПриВводеНачальныхОстатковНДС)
	               |					ТОГДА СчетФактураВыданный.Ссылка
	               |				ИНАЧЕ СчетФактураВыданный.ДокументОснование
	               |			КОНЕЦ,
	               |			ВЫБОР
	               |				КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	               |						ИЛИ СчетФактураВыданный.Ссылка.Исправление
	               |					ТОГДА СчетФактураВыданный.Ссылка.НомерИсходногоДокумента
	               |				ИНАЧЕ СчетФактураВыданный.Ссылка.Номер
	               |			КОНЕЦ,
	               |			ВЫБОР
	               |				КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	               |						ИЛИ СчетФактураВыданный.Ссылка.Исправление
	               |					ТОГДА СчетФактураВыданный.Ссылка.ДатаИсходногоДокумента
	               |				ИНАЧЕ СчетФактураВыданный.Ссылка.Дата
	               |			КОНЕЦ,
	               |			СчетФактураВыданный.Ссылка,
	               |			ВЫБОР
	               |				КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ,
	               |			ВЫБОР
	               |				КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	               |					ТОГДА ЕСТЬNULL(Авансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ,
	               |			ВЫБОР
	               |				КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	               |					ТОГДА СчетФактураВыданный.Ссылка.ДоговорКонтрагента
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ,
	               |			3,
	               |			СчетФактураВыданный.Ссылка
	               |		ИЗ
	               |			Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	               |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Авансы КАК Авансы
	               |				ПО СчетФактураВыданный.Ссылка = Авансы.Ссылка
	               |		ГДЕ
	               |			СчетФактураВыданный.Ссылка.Проведен
	               |			И (НЕ СчетФактураВыданный.Ссылка.ПометкаУдаления)
	               |			И СчетФактураВыданный.Ссылка.Организация В(&Организация)
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ГТДИмпорт.Ссылка,
	               |			ГТДИмпорт.НомерГТД,
	               |			ГТДИмпорт.Дата,
	               |			ГТДИмпорт.Ссылка,
	               |			ЛОЖЬ,
	               |			НЕОПРЕДЕЛЕНО,
	               |			НЕОПРЕДЕЛЕНО,
	               |			4,
	               |			NULL
	               |		ИЗ
	               |			Документ.ГТДИмпорт КАК ГТДИмпорт
	               |		ГДЕ
	               |			ГТДИмпорт.Проведен
	               |			И (НЕ ГТДИмпорт.ПометкаУдаления)
	               |			И ГТДИмпорт.Организация В(&Организация)) КАК СчетаФактурыДокументы
	               |		ПО (ЗаписиКнигиПокупок.СчетФактура = СчетаФактурыДокументы.СчетФактура
	               |				ИЛИ ЗаписиКнигиПокупок.ДокументОплаты = СчетаФактурыДокументы.СчетФактура)
	               |			И ЗаписиКнигиПокупок.ДоговорАванса = СчетаФактурыДокументы.ДоговорАванса
	               |			И ((НЕ ЗаписиКнигиПокупок.НаАванс)
	               |				ИЛИ СчетаФактурыДокументы.НаАванс
	               |					И ЗаписиКнигиПокупок.СтавкаНДС_Аванс = СчетаФактурыДокументы.СтавкаНДСАванса)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВложенныйЗапрос.СчетФактураДокументКонтрагент,
	               |	ВложенныйЗапрос.ДоговорАванса,
	               |	ВложенныйЗапрос.НомерСчетаФактуры,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.КолвоСФ = 1
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ВложенныйЗапрос.УчитыватьСФ
	               |	КОНЕЦ КАК ОъединятьСФ,
	               |	ВложенныйЗапрос.СчетФактураДокумент
	               |ПОМЕСТИТЬ ВТ_ОбъединениеСФ
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ТаблицаСчетаФактурыДокументы.СчетФактураДокумент.Контрагент КАК СчетФактураДокументКонтрагент,
	               |		ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	               |		ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры КАК НомерСчетаФактуры,
	               |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаСчетаФактурыДокументы.СчетФактураДокумент) КАК КолвоСФ,
	               |		ВЫБОР
	               |			КОГДА ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.СчетФактураПолученный
	               |				ТОГДА ЛОЖЬ
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ КАК УчитыватьСФ,
	               |		МАКСИМУМ(ТаблицаСчетаФактурыДокументы.СчетФактураДокумент) КАК СчетФактураДокумент
	               |	ИЗ
	               |		ТаблицаСчетаФактурыДокументыПредварительная КАК ТаблицаСчетаФактурыДокументы
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ТаблицаСчетаФактурыДокументы.СчетФактураДокумент.Контрагент,
	               |		ТаблицаСчетаФактурыДокументы.ДоговорАванса,
	               |		ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры,
	               |		ВЫБОР
	               |			КОГДА ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.СчетФактураПолученный
	               |				ТОГДА ЛОЖЬ
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ) КАК ВложенныйЗапрос
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаСчетаФактурыДокументыПредварительная.СчетФактура,
	               |	ТаблицаСчетаФактурыДокументыПредварительная.ДатаСчетаФактуры,
	               |	ТаблицаСчетаФактурыДокументыПредварительная.НомерСчетаФактуры,
	               |	ВТ_ОбъединениеСФ.СчетФактураДокумент,
	               |	ТаблицаСчетаФактурыДокументыПредварительная.ДоговорАванса,
	               |	ТаблицаСчетаФактурыДокументыПредварительная.СтавкаНДСАванса,
	               |	ТаблицаСчетаФактурыДокументыПредварительная.Приоритет,
	               |	ВТ_ОбъединениеСФ.ОъединятьСФ КАК ОъединятьСчетФактуры,
	               |	ТаблицаСчетаФактурыДокументыПредварительная.СчетФактураДокументРасшифровка,
	               |	ТаблицаСчетаФактурыДокументыПредварительная.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ ВТ_ТаблицаСчетаФактурыДокументы
	               |ИЗ
	               |	ТаблицаСчетаФактурыДокументыПредварительная КАК ТаблицаСчетаФактурыДокументыПредварительная
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОбъединениеСФ КАК ВТ_ОбъединениеСФ
	               |		ПО ТаблицаСчетаФактурыДокументыПредварительная.СчетФактураДокумент.Контрагент = ВТ_ОбъединениеСФ.СчетФактураДокументКонтрагент
	               |			И ТаблицаСчетаФактурыДокументыПредварительная.ДоговорАванса = ВТ_ОбъединениеСФ.ДоговорАванса
	               |			И ТаблицаСчетаФактурыДокументыПредварительная.НомерСчетаФактуры = ВТ_ОбъединениеСФ.НомерСчетаФактуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЖурналУчетаСчетовФактур.Регистратор,
	               |	ЖурналУчетаСчетовФактур.НомерСчетаФактуры,
	               |	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры,
	               |	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры,
	               |	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	               |	ВЫБОР
	               |		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	               |			ТОГДА ВЫБОР
	               |					КОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	               |						ТОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).НомерИсправленияИсходногоДокумента
	               |					ИНАЧЕ ЖурналУчетаСчетовФактур.НомерИсправления
	               |				КОНЕЦ
	               |		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	               |			ТОГДА ВЫБОР
	               |					КОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	               |						ТОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).НомерИсправленияИсходногоДокумента
	               |					ИНАЧЕ ЖурналУчетаСчетовФактур.НомерИсправления
	               |				КОНЕЦ
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК НомерИсправления,
	               |	ВЫБОР
	               |		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	               |			ТОГДА ВЫБОР
	               |					КОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	               |						ТОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).ДатаИсправленияИсходногоДокумента
	               |					ИНАЧЕ ЖурналУчетаСчетовФактур.ДатаИсправления
	               |				КОНЕЦ
	               |		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	               |			ТОГДА ВЫБОР
	               |					КОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	               |						ТОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ДатаИсправленияИсходногоДокумента
	               |					ИНАЧЕ ЖурналУчетаСчетовФактур.ДатаИсправления
	               |				КОНЕЦ
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК ДатаИсправления,
	               |	ВЫБОР
	               |		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	               |			ТОГДА ВЫБОР
	               |					КОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	               |						ТОГДА ЖурналУчетаСчетовФактур.НомерИсправления
	               |					ИНАЧЕ """"
	               |				КОНЕЦ
	               |		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	               |			ТОГДА ВЫБОР
	               |					КОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	               |						ТОГДА ЖурналУчетаСчетовФактур.НомерИсправления
	               |					ИНАЧЕ """"
	               |				КОНЕЦ
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК НомерИсправленияКорректировки,
	               |	ВЫБОР
	               |		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	               |			ТОГДА ВЫБОР
	               |					КОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	               |						ТОГДА ЖурналУчетаСчетовФактур.ДатаИсправления
	               |					ИНАЧЕ """"
	               |				КОНЕЦ
	               |		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	               |			ТОГДА ВЫБОР
	               |					КОГДА ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	               |						ТОГДА ЖурналУчетаСчетовФактур.ДатаИсправления
	               |					ИНАЧЕ """"
	               |				КОНЕЦ
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК ДатаИсправленияКорректировки,
	               |	ЖурналУчетаСчетовФактур.СчетФактура
	               |ПОМЕСТИТЬ ВТ_РегистрацияСчетовФактур
	               |ИЗ
	               |	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	               |ГДЕ
	               |	ЖурналУчетаСчетовФактур.СчетФактура В
	               |			(ВЫБРАТЬ
	               |				ВТ_ТаблицаСчетаФактурыДокументы.Ссылка
	               |			ИЗ
	               |				ВТ_ТаблицаСчетаФактурыДокументы)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	               |	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры) КАК ДатаСчетаФактуры,
	               |	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.НомерСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры) КАК НомерСчетаФактуры,
	               |	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.СчетФактура, ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент) КАК СчетФактураДокумент,
	               |	ВТ_ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	               |	ВТ_ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	               |	ВТ_ТаблицаСчетаФактурыДокументы.Приоритет КАК Приоритет,
	               |	ВТ_ТаблицаСчетаФактурыДокументы.ОъединятьСчетФактуры КАК ОъединятьСчетФактуры,
	               |	ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокументРасшифровка КАК СчетФактураДокументРасшифровка,
	               |	ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировки,
	               |	ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировки,
	               |	ВТ_РегистрацияСчетовФактур.НомерИсправления КАК НомерИсправления,
	               |	ВТ_РегистрацияСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	               |	ВТ_РегистрацияСчетовФактур.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	               |	ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	               |	ВЫБОР
	               |		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.Ссылка ССЫЛКА Документ.СчетФактураВыданный
	               |			ТОГДА ВЫБОР
	               |					КОГДА ВТ_РегистрацияСчетовФактур.СчетФактура ЕСТЬ NULL 
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ ЛОЖЬ
	               |				КОНЕЦ
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ОбрабатыватьНомерДокумента
	               |ПОМЕСТИТЬ ТаблицаСчетаФактурыДокументы
	               |ИЗ
	               |	ВТ_ТаблицаСчетаФактурыДокументы КАК ВТ_ТаблицаСчетаФактурыДокументы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацияСчетовФактур КАК ВТ_РегистрацияСчетовФактур
	               |		ПО ВТ_ТаблицаСчетаФактурыДокументы.Ссылка = ВТ_РегистрацияСчетовФактур.СчетФактура";
				   
	Если ТекстЗапросаПоДокументамСДаннымиСФ <> "" Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ") КАК СчетаФактурыДокументы", ТекстЗапросаПоДокументамСДаннымиСФ + ") КАК СчетаФактурыДокументы");
		
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает структуру с полями "ТекущийПериод" и "КорректируемыйПериод",
// принимающие значение булевого типа - требуется ли формировать доп. листы
Функция ПроверитьНаличиеДопЛистов(НДСНалоговыйПериод)
	
	СтруктураПараметров = Новый Структура("ТекущийПериод, КорректируемыйПериод");
	СтруктураПараметров.ТекущийПериод = Ложь;
	СтруктураПараметров.КорректируемыйПериод = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК Порядок,
		|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
		|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
		|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) <> 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьДопЛисты,
		|	НДСЗаписиКнигиПокупокОбороты.КорректируемыйПериод
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			День,
		|			Организация В (&Организация)
		|				И ЗаписьДополнительногоЛиста = ИСТИНА) КАК НДСЗаписиКнигиПокупокОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
		|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
		|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
		|	НДСЗаписиКнигиПокупокОбороты.КорректируемыйПериод,
		|	НДСЗаписиКнигиПокупокОбороты.Период
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	2,
		|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
		|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
		|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) <> 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	&НачалоПериода
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
		|			&НачалоПериода,
		|			,
		|			День,
		|			Организация В (&Организация)
		|				И ЗаписьДополнительногоЛиста = ИСТИНА
		|				И КорректируемыйПериод >= &НачалоПериода
		|				И КорректируемыйПериод <= &КонецПериода) КАК НДСЗаписиКнигиПокупокОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
		|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
		|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
		|	НДСЗаписиКнигиПокупокОбороты.Период";
				   
	Запрос.УстановитьПараметр("НачалоПериода"	, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"	, КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"		, мСписокОрганизаций);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат СтруктураПараметров;
	КонецЕсли;
	
	Результат = Результат.Выгрузить();
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		Если СтрокаРезультата.Порядок = 1 И СтрокаРезультата.ЕстьДопЛисты Тогда 
			СтруктураПараметров.КорректируемыйПериод = Истина;
		ИначеЕсли СтрокаРезультата.ЕстьДопЛисты Тогда
			СтруктураПараметров.ТекущийПериод = Истина;
		КонецЕсли;
		Если СтруктураПараметров.КорректируемыйПериод И СтруктураПараметров.ТекущийПериод Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПараметров;
	
КонецФункции

мСтруктураОтбораПроведен = Новый Структура("Проведен", Истина);
мСтруктураОтбораСчетФактуры = Новый Структура("Проведен, ВидСчетаФактуры", Истина);