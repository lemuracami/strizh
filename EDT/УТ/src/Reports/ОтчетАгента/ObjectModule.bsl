Процедура ВыводНаПечать(Таб, Контрагент,Контрагенты, НачДата, КонДата, МасОтб, ТипДанных = "Доставки", ТабУслугДоставки = Неопределено, Терминал = Неопределено) Экспорт
    
    
    ЗапОбмены = Новый Запрос;                                                                                                    
    ЗапОбмены.Текст = "ВЫБРАТЬ
                      |	РеализацияТоваровУслугТовары.Ссылка.Номер,
                      |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма
                      |ИЗ
                      |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
                      |		ПО РеализацияТоваровУслугТовары.Ссылка.Номер = ВозвратТоваровОтПокупателя.Номер
                      |ГДЕ
                      |	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
                      |	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
                      |	И РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара В(&Контрагент)
                      |	И &УСЛОВИЕ_ТЕРМИНАЛ
                      |
                      |СГРУППИРОВАТЬ ПО
                      |	РеализацияТоваровУслугТовары.Ссылка.Номер";
    ЗапОбмены.УстановитьПараметр("Контрагент", Контрагенты);	
    ЗапОбмены.УстановитьПараметр("ДатаНач", НачалоДня(НачДата));	
    ЗапОбмены.УстановитьПараметр("ДатаКон", КонецДня(КонДата));	
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		ЗапОбмены.Текст = СтрЗаменить(ЗапОбмены.Текст, "&УСЛОВИЕ_ТЕРМИНАЛ", "РеализацияТоваровУслугТовары.Ссылка.ТерминалДоставки = &ТерминалДоставки");
		ЗапОбмены.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
	    ЗапОбмены.Текст = СтрЗаменить(ЗапОбмены.Текст, "&УСЛОВИЕ_ТЕРМИНАЛ", "ИСТИНА");	
	КонецЕсли;
	
    РезОбмены = ЗапОбмены.Выполнить().Выгрузить();
    
   //+++++Серегин М.В. 16.09.2015 11:36:27 костыль на заказы по РН.РасчетУслугСд
   ТаблицаКостыльныхЗаказов = ПолучитьТаблицуКостыльныхЗаказов(Контрагенты,НачалоДня(НачДата),КонецДня(КонДата), Терминал);
   //-----Серегин М.В. 16.09.2015 11:37:51  
    
    Зап = Новый Запрос;
    Зап.Текст = "ВЫБРАТЬ
                |	ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
                |	ЗакрытыеЗаказыОбороты.Реализация.Дата КАК ДатаДоставки,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот < 0
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот
                |	КОНЕЦ КАК ОценочнаяСтоимость,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
                |				И ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот <> 0
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот
                |	КОНЕЦ КАК ПолученоСКлиента,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.Наличные)
                |			ТОГДА ВЫБОР
                |					КОГДА ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |						ТОГДА 0
                |					ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот
                |				КОНЕЦ
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК ЗаДоставку,
                |	ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждение,
                |	ЗакрытыеЗаказыОбороты.УслугиСДОборот КАК УслугиСД,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
                |				И ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот
                |	КОНЕЦ КАК БанковскаяКомиссия,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
                |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК Возврат,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                |				И ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот - ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК ЧастичныйВозврат,
                |	ЕСТЬNULL(РасчетУслугСД.ПоказательУслуг, ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)) КАК ПоказательУслуг,
                |	ЕСТЬNULL(РасчетУслугСД.Сумма, 0) КАК СуммаУслуг,
                |	ЗакрытыеЗаказыОбороты.Реализация.Номер КАК Номер,
                |	ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот КАК СуммаОценочнаяКостыль
                |ИЗ
                |	РегистрНакопления.ЗакрытыеЗаказы.Обороты(
                |			&НачДата,
                |			&КонДата,
                |			,
                |			ИнтернетМагазин.Ссылка В (&ИнтернетМагазин)
                |				И &УСЛОВИЕ_ТЕРМИНАЛ) КАК ЗакрытыеЗаказыОбороты
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетУслугСД КАК РасчетУслугСД
                |		ПО ЗакрытыеЗаказыОбороты.Реализация.Ссылка = РасчетУслугСД.Реализация.Ссылка
                |ГДЕ
                |	ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
                |	И ЗакрытыеЗаказыОбороты.ТипЗаказа.Ссылка В(&МасОтб)
                |
                |ОБЪЕДИНИТЬ ВСЕ
                |
                |ВЫБРАТЬ
                |	ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.НомерВнешнегоЗаказа, """"),
                |	ЗакрытыеЗаказыОбороты.Реализация.Дата,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот < 0
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот
                |	КОНЕЦ,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
                |				И ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот <> 0
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот
                |	КОНЕЦ,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.Наличные)
                |			ТОГДА ВЫБОР
                |					КОГДА ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |						ТОГДА 0
                |					ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот
                |				КОНЕЦ
                |		ИНАЧЕ 0
                |	КОНЕЦ,
                |	ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот,
                |	ЗакрытыеЗаказыОбороты.УслугиСДОборот,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
                |				И ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот
                |	КОНЕЦ,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
                |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот
                |		ИНАЧЕ 0
                |	КОНЕЦ,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                |				И ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот - ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот
                |		ИНАЧЕ 0
                |	КОНЕЦ,
                |	ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть),
                |	ЕСТЬNULL(РасчетУслугСД.Сумма, 0),
                |	ЗакрытыеЗаказыОбороты.Реализация.Номер,
                |	ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот
                |ИЗ
                |	РегистрНакопления.РасчетУслугСД КАК РасчетУслугСД
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы.Обороты(, , , ИнтернетМагазин.Ссылка В (&ИнтернетМагазин)) КАК ЗакрытыеЗаказыОбороты
                |		ПО (ЗакрытыеЗаказыОбороты.Реализация.Ссылка = РасчетУслугСД.Реализация.Ссылка)
                |ГДЕ
                |	ЗакрытыеЗаказыОбороты.ТипЗаказа.Ссылка В(&МасОтб)
                |	И РасчетУслугСД.Период МЕЖДУ &НачДата И &КонДата
                |	И РасчетУслугСД.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ВозвратТоваровПоставщику)
                |
                |УПОРЯДОЧИТЬ ПО
                |	НомерЗаказа
                |ИТОГИ ПО
                |	НомерЗаказа";
    Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
    Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
    Зап.УстановитьПараметр("ИнтернетМагазин", Контрагенты);
    Зап.УстановитьПараметр("МасОтб", МасОтб);
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		Зап.Текст = СтрЗаменить(Зап.Текст, "&УСЛОВИЕ_ТЕРМИНАЛ", "ТерминалДоставки = &ТерминалДоставки");
		Зап.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
	    Зап.Текст = СтрЗаменить(Зап.Текст, "&УСЛОВИЕ_ТЕРМИНАЛ", "ИСТИНА");	
	КонецЕсли;
	
    
    Мак = ПолучитьМакет("Макет");
    ОблШ = Мак.ПолучитьОбласть("Шапка|Основное");
    ОблС = Мак.ПолучитьОбласть("Строка|Основное");
    
    
    ОблШП = Мак.ПолучитьОбласть("Шапка|Показатель");
    ОблСП = Мак.ПолучитьОбласть("Строка|Показатель");
    //Серегин М.В. 06.05.2015 11:15:34 Получим данные для печати
    ДанныеДляПечати =  СобратьДанныеДляПечати(Контрагент,КонДата);

    
    Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование,ИНН,КПП");
    //Серегин М.В. 06.05.2015 11:16:40 
    //Агент = "ООО ""Логистическая компания ""Стриж"" ИНН 7715876568 КПП 771501001";
    Агент = ДанныеДляПечати.Агент;
    Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    ОблШ.Параметры.Параметр1 = Параметр1;
    ОблШ.Параметры.Параметр2 = Параметр2;
    ОблШ.Параметры.Принципал = Принципал;
    ОблШ.Параметры.Агент = Агент;
    ОблШ.Параметры.ИнтернетМагазин = Контрагент.Наименование;
    ОблШ.Параметры.Период = ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
    ОблШ.Параметры.ПериодДоставки = "период доставки: " + ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		ОблШ.Параметры.Терминал = Терминал;
	КонецЕсли;
	
    
    
    ////Серегин М.В. 05.05.2015 12:52:26 Старый вариант 
    //Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем Принципал, в лице " + Должность + "" + ДиректорПринципала + ", с одной стороны, и Общество с ограниченной ответственностью ""Логистическая компания ""Стриж"", именуемое в дальнейшем Агент, в лице генерального директора Копытина А.А., именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агенсткого договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
    //Серегин М.В. 05.05.2015 12:52:41 новый вариант
    Должность = ДанныеДляПечати.ДолжностьВЛице;
    ДиректорПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
    ОрганизацияПолноеНаименование = ДанныеДляПечати.Организация.НаименованиеПолное;
    ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице;
    ФИОРуководителяАгента = ДанныеДляПечати.ФИОРуководителяВлице;
    Если Контрагент.Код = "Shop_169 " Тогда
        Если ТипДанных = "Отказы" Тогда
            Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности №929/14 от 25.12.2014, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были обработаны следующие заказы";
        Иначе    
            Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности №929/14 от 25.12.2014, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
        КонецЕсли;
    Иначе
        Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + ", с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
    КонецЕсли;
    //Серегин М.В. 05.05.2015 12:52:46 
    
    ОблШ.Параметры.Стр = Стр;
    
    Таб.Вывести(ОблШ);
    
    Для Каждого Тек Из ТабУслугДоставки Цикл
        ОблШП.Параметры.ИмяПоказателя = СокрЛП(Тек.Показатель.Наименование);
        Таб.Присоединить(ОблШП);
    КонецЦикла;	
    
    ИТОц = 0;
    ИтПол = 0;
    ИТДост = 0;
    ИтАг = 0;
    ИТУсл = 0;
    ИТБанк = 0;
    ИТВозв = 0;
    
    НПП = 1;
    Выб = Зап.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    Пока Выб.Следующий() Цикл
        ВыбДет = Выб.Выбрать();
        ТП = Новый ТаблицаЗначений;
        ТП.Колонки.Добавить("ПоказательУслуг");
        ТП.Колонки.Добавить("СуммаУслуг");
        Пока Выбдет.Следующий() Цикл
            Если ВыбДет.ПоказательУслуг = Справочники.ПоказателиРасчетаУслугСД.ОсновнаяЧасть Тогда
                ЗаполнитьЗначенияСвойств(ОблС.Параметры, ВыбДет);
                ОблС.Параметры.НПП = НПП;
                
                НайОбм = РезОбмены.Найти(ВыбДет.Номер);
                Если НайОбм <> Неопределено Тогда
                    ОблС.Параметры.ОценочнаяСтоимость = НайОбм.Сумма;
                КонецеСли;
                
                //+++++Серегин М.В. 16.09.2015 11:48:16 продолжение костыля на заказы по РН.РасчетУслугСд 
                НайденаяСтрока = ТаблицаКостыльныхЗаказов.Найти(ВыбДет.Номер);
                Если НайденаяСтрока <> Неопределено Тогда
                    ОблС.Параметры.ОценочнаяСтоимость = ВыбДет.СуммаОценочнаяКостыль;
                    ОблС.Параметры.УслугиСД = НайденаяСтрока.Сумма;
                КонецеСли;
                //-----Серегин М.В. 16.09.2015 11:48:18
                
                Таб.Вывести(ОблС);
                НПП = НПП + 1;
                
                ИТОц = ИТОц + ОблС.Параметры.ОценочнаяСтоимость;
                ИтПол = ИтПол + ВыбДет.ПолученоСКлиента;
                ИТДост = ИТДост + ВыбДет.ЗаДоставку;
                ИтАг = ИтАг + ВыбДет.АгентскоеВознаграждение;
                ИТУсл = ИТУсл + ОблС.Параметры.УслугиСД;
                ИТБанк = ИТБанк + ВыбДет.БанковскаяКомиссия;
                ИТВозв = ИТВозв + ВыбДет.Возврат;
            ////+++++Серегин М.В. 16.09.2015 12:15:43 продолжение костыля на заказы по РН.РасчетУслугСд
            //ИначеЕсли ВыбДет.ПоказательУслуг = Справочники.ПоказателиРасчетаУслугСД.ВозвратТоваровПоставщику Тогда
            //    ЗаполнитьЗначенияСвойств(ОблС.Параметры, ВыбДет);
            //    ОблС.Параметры.НПП = НПП;
            //    Таб.Вывести(ОблС);
            //    НПП = НПП + 1;
            //    ИТОц = ИТОц + ВыбДет.ОценочнаяСтоимость;
            //    ИтПол = ИтПол + ВыбДет.ПолученоСКлиента;
            //    ИТДост = ИТДост + ВыбДет.ЗаДоставку;
            //    ИтАг = ИтАг + ВыбДет.АгентскоеВознаграждение;
            //    ИТУсл = ИТУсл + ВыбДет.УслугиСД;
            //    ИТБанк = ИТБанк + ВыбДет.БанковскаяКомиссия;
            //    ИТВозв = ИТВозв + ВыбДет.Возврат;
            ////-----Серегин М.В. 16.09.2015 12:15:47 
            Иначе
                Нов = ТП.Добавить();
                ЗаполнитьЗначенияСвойств(Нов, ВыбДет);
            КонецеСли;	
        КонецЦикла;
        
        Для Каждого Тек Из ТабУслугДоставки Цикл
            Най = ТП.Найти(Тек.Показатель);
            Если Най <> Неопределено Тогда
                ОблСП.Параметры.ЗначениеПоказателя = Най.СуммаУслуг;
                Тек.Итог = Тек.Итог + Най.СуммаУслуг;
            Иначе
                ОблСП.Параметры.ЗначениеПоказателя = 0;
            КонецеСли;	
            Таб.Присоединить(ОблСП);
        КонецЦикла;	
    КонецЦикла;	
    НПП = НПП - 1;
    
    ОблП = Мак.получитьОбласть("Подвал|Основное");
    ОблПП = Мак.получитьОбласть("Подвал|Показатель");
    
    ОблП.Параметры.СтрокаИтого = "Итого по " + Строка(НПП) + " заказу(ам): ";
    ОблП.Параметры.ИТОц = ИТОц;
    ОблП.Параметры.ИтПол = ИтПол;
    ОблП.Параметры.ИТДост = ИТДост;
    ОблП.Параметры.ИтАг = ИтАг;
    ОблП.Параметры.ИТУсл = ИТУсл;
    ОблП.Параметры.ИТБанк = ИТБанк;
    ОблП.Параметры.ИТВозв = ИТВозв;
    
    СумВозн = ИтАг+ИТУсл+ИТБанк;
    СумКВыплате = 0;
    
    ////Серегин М.В. 05.05.2015 12:59:21 Старый вариант
    //ОблП.Параметры.Стр = "Общая сумма вознаграждения составила " + СумВозн + " руб. НДС не облагается в связи с применением УСН (п.2 ст.346.11). Стороны не имеют претензий по выполнению работ. Сумма к выплате с учетом удержаний за услуги и агентское вознаграждение составляет " + СумКВыплате + " руб. Услуги по доставке оказаны в полном объеме.";
    //Серегин М.В. 05.05.2015 13:04:50 новый вариант
    ОблП.Параметры.Стр = "Общая сумма вознаграждения "+Параметр2+"а по данному отчету "+СумВозн+" руб. "+"(" + ЧислоПрописью(СумВозн,"Л = ru_RU; ДП = Истина","рубль,рубля,рублей,м,копейка,копейки,копеек,ж")+" (прописью))"  + " руб. НДС не облагается  (УСН).Счет-фактура не выставляется (ст.346.11 п.2 НК РФ).";
    Если ТипДанных = "Отказы" Тогда
        ОблП.Параметры.Стр2 = "Общее количество обработанных заказов "+Строка(НПП)+" "+"("+ЧислоПрописью(НПП,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+")"+Символы.ПС+"Заказы обработаны в полном объеме. Стороны не имеют претензий по выполнению работ."+Символы.ПС+"Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";
    Иначе
        ОблП.Параметры.Стр2 = "Общее количество обработанных заказов "+Строка(НПП)+" "+"("+ЧислоПрописью(НПП,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+")"+Символы.ПС+"Услуги по доставке заказов оказаны в полном объеме. Стороны не имеют претензий по выполнению работ."+Символы.ПС+"Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";
    КонецЕсли;
    ОблП.Параметры.Параметр1 = Параметр1;
    ОблП.Параметры.Параметр2 = Параметр2;
    ОблП.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
    ОблП.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
    ОблП.Параметры.ДожностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
    ОблП.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
    
    
    Таб.Вывести(ОблП);
    
    Для Каждого Тек Из ТабУслугДоставки Цикл
        ОблПП.Параметры.ИтогПоПоказателю = Тек.Итог;
        Таб.Присоединить(ОблПП);
    КонецЦикла;	
    
    Таб.Показать("Отчет агента");
КонецПроцедуры	


Процедура ВыводНаПечатьДД(Таб, Контрагент,Контрагенты, НачДата, КонДата, МасОтб, ТипДанных = "Доставки", НовыйВариантДМ, Терминал = Неопределено) Экспорт
    Зап = Новый Запрос;
	если ТипДанных = "Доставки" Тогда
		// Задача № 2901 Справочник.Типыоплат.БезРасчетов
        Зап.Текст = "ВЫБРАТЬ
                    |	ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
                    |	ЗакрытыеЗаказыОбороты.Реализация.Дата КАК ДатаДоставки,
                    |	ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот КАК ОценочнаяСтоимость,
                    |	ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот КАК ПолученоСКлиента,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине) ИЛИ ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.БезРасчетов)
                    |			ТОГДА 0
                    |		ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот
                    |	КОНЕЦ КАК ЗаДоставкуСтарая,
                    |	ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждение,
                    |	ЗакрытыеЗаказыОбороты.УслугиСДОборот КАК УслугиСД,
                    |	ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот КАК БанковскаяКомиссия,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
                    |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК Возврат,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                    |				И ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот - ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                    |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК ЧастичныйВозврат,
                    |	ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот КАК ЗаДоставку
                    |ИЗ
                    |	РегистрНакопления.ЗакрытыеЗаказы.Обороты(
                    |			&НачДата,
                    |			&КонДата,
                    |			,
                    |			ИнтернетМагазин.Ссылка В (&ИнтернетМагазин)
                    |				И ТерминалДоставки В (&ТерминалДоставки)) КАК ЗакрытыеЗаказыОбороты
                    |ГДЕ
                    |	ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
                    |	И ЗакрытыеЗаказыОбороты.ТипЗаказа.Ссылка В(&МасОтб)
                    |	И ЗакрытыеЗаказыОбороты.ПричинаНевыполнения <> ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |
                    |УПОРЯДОЧИТЬ ПО
                    |	НомерЗаказа";					
					
                Иначеесли ТипДанных = "Отказы" Тогда        // И ЗакрытыеЗаказы.ТипОплаты.Ссылка <> ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине)
                    Если НовыйВариантДМ Тогда
                        Зап.Текст = ПолучитьТекстЗапросаДМНовый();   
					Иначе
					// Задача № 2901 Справочники.ТипыОплат.БезРасчетов
                    Зап.Текст = "ВЫБРАТЬ
                                |	ВложенныйЗапрос.Ссылка,
                                |	СУММА(ВложенныйЗапрос.СуммаТовары) КАК СуммаТовары,
                                |	СУММА(ВложенныйЗапрос.СуммаУслуги) КАК СуммаУслуги
                                |ПОМЕСТИТЬ ВТ_СуммаРеализации
                                |ИЗ
                                |	(ВЫБРАТЬ
                                |		РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
                                |		РеализацияТоваровУслугТовары.Сумма КАК СуммаТовары,
                                |		0 КАК СуммаУслуги
                                |	ИЗ
                                |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
                                |	ГДЕ
                                |		РеализацияТоваровУслугТовары.Ссылка.ТерминалДоставки В(&ТерминалДоставки)
                                |	
                                |	ОБЪЕДИНИТЬ ВСЕ
                                |	
                                |	ВЫБРАТЬ
                                |		РеализацияТоваровУслугУслуги.Ссылка,
                                |		0,
                                |		РеализацияТоваровУслугУслуги.Сумма
                                |	ИЗ
                                |		Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
                                |	ГДЕ
                                |		РеализацияТоваровУслугУслуги.Ссылка.ТерминалДоставки В(&ТерминалДоставки)) КАК ВложенныйЗапрос
                                |
                                |СГРУППИРОВАТЬ ПО
                                |	ВложенныйЗапрос.Ссылка
                                |;
                                |
                                |////////////////////////////////////////////////////////////////////////////////
                                |ВЫБРАТЬ
                                |	ЕСТЬNULL(ЗакрытыеЗаказы.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(ЗакрытыеЗаказы.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
                                |	ЗакрытыеЗаказы.Реализация.Дата КАК ДатаДоставки,
                                |	ЗакрытыеЗаказы.СуммаОценочная КАК ОценочнаяСтоимостьТовары,
                                |	ВЫБОР
                                |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                                |			ТОГДА ЗакрытыеЗаказы.ОплаченоКлиентовНал
                                |		ИНАЧЕ 0
                                |	КОНЕЦ КАК ПолученоСКлиента,
                                |	ВЫБОР
                                |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                                |			ТОГДА ВЫБОР
                                |					КОГДА ЗакрытыеЗаказы.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине) ИЛИ ЗакрытыеЗаказы.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.БезРасчетов)
                                |						ТОГДА 0
                                |					ИНАЧЕ ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД
                                |				КОНЕЦ
                                |		ИНАЧЕ 0
                                |	КОНЕЦ КАК ЗаДоставкуСтарая,
                                |	ВЫБОР
                                |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                                |			ТОГДА ЗакрытыеЗаказы.КассовоеОбслуживание + ЗакрытыеЗаказы.АгентскоеВознаграждение
                                |		ИНАЧЕ 0
                                |	КОНЕЦ КАК АгентскоеВознаграждение,
                                |	ВЫБОР
                                |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                                |			ТОГДА ЗакрытыеЗаказы.УслугиСД - (ЗакрытыеЗаказы.КассовоеОбслуживание + ЗакрытыеЗаказы.АгентскоеВознаграждение)
                                |		ИНАЧЕ 0
                                |	КОНЕЦ КАК УслугиСД,
                                |	ВЫБОР
                                |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                                |			ТОГДА ЗакрытыеЗаказы.БанковскаяКомиссия
                                |		ИНАЧЕ 0
                                |	КОНЕЦ КАК БанковскаяКомиссия,
                                |	ВЫБОР
                                |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                                |			ТОГДА ВЫБОР
                                |					КОГДА ЗакрытыеЗаказы.СуммаОценочная <> 0
                                |						ТОГДА ЗакрытыеЗаказы.СуммаВозврата
                                |					ИНАЧЕ 0
                                |				КОНЕЦ
                                |		ИНАЧЕ 0
                                |	КОНЕЦ КАК Возврат,
                                |	ЗакрытыеЗаказы.СуммаОценочная КАК ЧастичныйВозвратТовары,
                                |	ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД КАК ЗаДоставку
                                |ПОМЕСТИТЬ ВТ_Объединение
                                |ИЗ
                                |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
                                |ГДЕ
                                |	ЗакрытыеЗаказы.ТипЗаказа.Ссылка В(&МасОтб)
                                |	И (ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                                |			ИЛИ ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаБезЗаезда)
                                |			ИЛИ ЗакрытыеЗаказы.СтатусИнтернетМагазина = ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.ЗаказОтклонен))
                                |	И ЗакрытыеЗаказы.Период МЕЖДУ &НачДата И &КонДата
                                |	И ЗакрытыеЗаказы.ИнтернетМагазин В(&ИнтернетМагазин)
                                |	И ЗакрытыеЗаказы.ТерминалДоставки В(&ТерминалДоставки)
                                |
                                |ОБЪЕДИНИТЬ ВСЕ
                                |
                                |ВЫБРАТЬ
                                |	ЕСТЬNULL(РеализацияТоваровУслуг.Номер, """") + ""/"" + ЕСТЬNULL(РеализацияТоваровУслуг.НомерВнешнегоЗаказа, """"),
                                |	РеализацияТоваровУслуг.Дата,
                                |	ЕСТЬNULL(ВТ_СуммаРеализации.СуммаТовары, 0),
                                |	0,
                                |	0,
                                |	0,
                                |	0,
                                |	0,
                                |	0,
                                |	ЕСТЬNULL(ВТ_СуммаРеализации.СуммаТовары, 0),
                                |	ЕСТЬNULL(ВТ_СуммаРеализации.СуммаУслуги, 0)
                                |ИЗ
                                |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
                                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммаРеализации КАК ВТ_СуммаРеализации
                                |		ПО (ВТ_СуммаРеализации.Ссылка = РеализацияТоваровУслуг.Ссылка)
                                |ГДЕ
                                |	(РеализацияТоваровУслуг.СтатусИнтернетМагазина = 4
                                |			ИЛИ РеализацияТоваровУслуг.ПометкаУдаления)
                                |	И РеализацияТоваровУслуг.ВладелецТовара В(&ИнтернетМагазин)
                                |	И РеализацияТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
                                |	И РеализацияТоваровУслуг.ТерминалДоставки В (&ТерминалДоставки)
                                |;
                                |
                                |////////////////////////////////////////////////////////////////////////////////
                                |ВЫБРАТЬ
                                |	ВТ_Объединение.НомерЗаказа,
                                |	ВТ_Объединение.ДатаДоставки,
                                |	СУММА(ВТ_Объединение.ОценочнаяСтоимостьТовары) КАК ОценочнаяСтоимостьТовары,
                                |	СУММА(ВТ_Объединение.ПолученоСКлиента) КАК ПолученоСКлиента,
                                |	СУММА(ВТ_Объединение.ЗаДоставкуСтарая) КАК ЗаДоставкуСтарая,
                                |	СУММА(ВТ_Объединение.АгентскоеВознаграждение) КАК АгентскоеВознаграждение,
                                |	СУММА(ВТ_Объединение.УслугиСД) КАК УслугиСД,
                                |	СУММА(ВТ_Объединение.БанковскаяКомиссия) КАК БанковскаяКомиссия,
                                |	СУММА(ВТ_Объединение.Возврат) КАК Возврат,
                                |	СУММА(ВТ_Объединение.ЧастичныйВозвратТовары) КАК ЧастичныйВозвратТовары,
                                |	ВТ_Объединение.ЗаДоставку
                                |ПОМЕСТИТЬ ВТ_Итог
                                |ИЗ
                                |	ВТ_Объединение КАК ВТ_Объединение
                                |
                                |СГРУППИРОВАТЬ ПО
                                |	ВТ_Объединение.НомерЗаказа,
                                |	ВТ_Объединение.ДатаДоставки,
                                |	ВТ_Объединение.ЗаДоставку
                                |;
                                |
                                |////////////////////////////////////////////////////////////////////////////////
                                |ВЫБРАТЬ
                                |	ВТ_Итог.НомерЗаказа,
                                |	ВТ_Итог.ДатаДоставки,
                                |	ВТ_Итог.ОценочнаяСтоимостьТовары,
                                |	ВТ_Итог.ПолученоСКлиента,
                                |	ВТ_Итог.ЗаДоставкуСтарая,
                                |	ВТ_Итог.АгентскоеВознаграждение,
                                |	ВТ_Итог.УслугиСД,
                                |	ВТ_Итог.БанковскаяКомиссия,
                                |	ВТ_Итог.Возврат,
                                |	ВТ_Итог.ЧастичныйВозвратТовары,
                                |	ВТ_Итог.ЗаДоставку,
                                |	ВТ_Итог.ОценочнаяСтоимостьТовары + ВТ_Итог.ЗаДоставку КАК ОценочнаяСтоимость,
                                |	ВТ_Итог.ЧастичныйВозвратТовары + ВТ_Итог.ЗаДоставку КАК ЧастичныйВозврат
                                |ИЗ
                                |	ВТ_Итог КАК ВТ_Итог";
                    //Зап.Текст = "ВЫБРАТЬ
                    //            |   ЕСТЬNULL(ЗакрытыеЗаказы.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(ЗакрытыеЗаказы.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
                    //            |   ЗакрытыеЗаказы.Реализация.Дата КАК ДатаДоставки,
                    //            |   ВЫБОР
                    //            |       КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    //            |           ТОГДА ЗакрытыеЗаказы.СуммаОценочная + ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД
                    //            |       ИНАЧЕ 0
                    //            |   КОНЕЦ КАК ОценочнаяСтоимость,
                    //            |   ВЫБОР
                    //            |       КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    //            |           ТОГДА ЗакрытыеЗаказы.ОплаченоКлиентовНал
                    //            |       ИНАЧЕ 0
                    //            |   КОНЕЦ КАК ПолученоСКлиента,
                    //            |   ВЫБОР
                    //            |       КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    //            |           ТОГДА ВЫБОР
                    //            |                   КОГДА ЗакрытыеЗаказы.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине)
                    //            |                       ТОГДА 0
                    //            |                   ИНАЧЕ ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД
                    //            |               КОНЕЦ
                    //            |       ИНАЧЕ 0
                    //            |   КОНЕЦ КАК ЗаДоставкуСтарая,
                    //            |   ВЫБОР
                    //            |       КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    //            |           ТОГДА ЗакрытыеЗаказы.КассовоеОбслуживание + ЗакрытыеЗаказы.АгентскоеВознаграждение
                    //            |       ИНАЧЕ 0
                    //            |   КОНЕЦ КАК АгентскоеВознаграждение,
                    //            |   ВЫБОР
                    //            |       КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    //            |           ТОГДА ЗакрытыеЗаказы.УслугиСД - (ЗакрытыеЗаказы.КассовоеОбслуживание + ЗакрытыеЗаказы.АгентскоеВознаграждение)
                    //            |       ИНАЧЕ 0
                    //            |   КОНЕЦ КАК УслугиСД,
                    //            |   ВЫБОР
                    //            |       КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    //            |           ТОГДА ЗакрытыеЗаказы.БанковскаяКомиссия
                    //            |       ИНАЧЕ 0
                    //            |   КОНЕЦ КАК БанковскаяКомиссия,
                    //            |   ВЫБОР
                    //            |       КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    //            |           ТОГДА ВЫБОР
                    //            |                   КОГДА ЗакрытыеЗаказы.СуммаОценочная <> 0
                    //            |                       ТОГДА ЗакрытыеЗаказы.СуммаВозврата
                    //            |                   ИНАЧЕ 0
                    //            |               КОНЕЦ
                    //            |       ИНАЧЕ 0
                    //            |   КОНЕЦ КАК Возврат,
                    //            |   ВЫБОР
                    //            |       КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    //            |           ТОГДА ВЫБОР
                    //            |                   КОГДА ЗакрытыеЗаказы.СуммаЧастичногоВозврата > 0
                    //            |                       ТОГДА ЗакрытыеЗаказы.СуммаЧастичногоВозврата + ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД
                    //            |                   ИНАЧЕ 0
                    //            |               КОНЕЦ
                    //            |       ИНАЧЕ 0
                    //            |   КОНЕЦ КАК ЧастичныйВозврат,
                    //            |   ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД КАК ЗаДоставку
                    //            |ИЗ
                    //            |   РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
                    //            |ГДЕ
                    //            |   ЗакрытыеЗаказы.ТипЗаказа.Ссылка В(&МасОтб)
                    //            |   И (ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    //            |           ИЛИ ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаБезЗаезда)
                    //            |           ИЛИ ЗакрытыеЗаказы.СтатусИнтернетМагазина = ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.ЗаказОтклонен))
                    //            |   И ЗакрытыеЗаказы.Период МЕЖДУ &НачДата И &КонДата
                    //            |   И ЗакрытыеЗаказы.ИнтернетМагазин В(&ИнтернетМагазин)
                    //            |
                    //            |ОБЪЕДИНИТЬ ВСЕ
                    //            |
                    //            |ВЫБРАТЬ
                    //            |   ЕСТЬNULL(РеализацияТоваровУслуг.Номер, """") + ""/"" + ЕСТЬNULL(РеализацияТоваровУслуг.НомерВнешнегоЗаказа, """"),
                    //            |   РеализацияТоваровУслуг.Дата,
                    //            |   0,
                    //            |   0,
                    //            |   0,
                    //            |   0,
                    //            |   0,
                    //            |   0,
                    //            |   0,
                    //            |   0,
                    //            |   0
                    //            |ИЗ
                    //            |   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
                    //            |ГДЕ
                    //            |   (РеализацияТоваровУслуг.СтатусИнтернетМагазина = 4
                    //            |           ИЛИ РеализацияТоваровУслуг.ПометкаУдаления)
                    //            |   И РеализацияТоваровУслуг.ВладелецТовара В(&ИнтернетМагазин)
                    //            |   И РеализацияТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
                    //            |
                    //            |УПОРЯДОЧИТЬ ПО
                    //            |   НомерЗаказа";
                    КонецЕсли;
                КонецеСли;	
    Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
    Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
    Зап.УстановитьПараметр("ИнтернетМагазин", Контрагенты);
    Зап.УстановитьПараметр("МасОтб", МасОтб);
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		Зап.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
		СписокТерминалов = Новый СписокЗначений;
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
	    Зап.УстановитьПараметр("ТерминалДоставки", СписокТерминалов);
	КонецЕсли;
	
    
    если ТипДанных = "Доставки" Тогда
        Мак = ПолучитьМакет("МакетДД");
    Иначе
        Мак = ПолучитьМакет("МакетДДОтказы");
    КонецеСли;
    
    ОблШ = Мак.ПолучитьОбласть("Шапка");
    ОблС = Мак.ПолучитьОбласть("Строка");
    
    //Серегин М.В. 06.05.2015 11:15:34 Получим данные для печати
    ДанныеДляПечати =  СобратьДанныеДляПечати(Контрагент,КонДата);
    
    Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование,ИНН,КПП");
    //Серегин М.В. 06.05.2015 11:16:40 
    //Агент = "ООО ""Логистическая компания ""Стриж"" ИНН 7715876568 КПП 771501001";
    Агент = ДанныеДляПечати.Агент;
    
    Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    ОблШ.Параметры.Параметр2 = Параметр2;
    если ТипДанных = "Доставки" Тогда
        ОблШ.Параметры.Параметр1 = Параметр1;
        ОблШ.Параметры.Принципал = Принципал;
        ОблШ.Параметры.Агент = Агент;
        ОблШ.Параметры.ИнтернетМагазин = Контрагент.Наименование;
        ОблШ.Параметры.Период = ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
        ОблШ.Параметры.ПериодДоставки = "период доставки: " + ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
		
		Если ЗначениеЗаполнено(Терминал) Тогда
			ОблШ.Параметры.Терминал = Терминал;
		КонецЕсли;
    КонецеСли;	
    
    ////Серегин М.В. 06.05.2015 11:53:36 не нужно
    //ДиректорПринципала = "";
    //Зап2 = Новый Запрос;
    //Зап2.Текст = "ВЫБРАТЬ
    //             |  КонтактныеЛицаКонтрагентов.Наименование КАК ИмяЛица,
    //             |  КонтактныеЛицаКонтрагентов.РольКонтактногоЛица.Наименование КАК Должность,
    //             |  КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Фамилия + "" "" + КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Имя + "" "" + КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Отчество КАК ФИО,
    //             |  КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Пол КАК Пол
    //             |ИЗ
    //             |  Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
    //             |ГДЕ
    //             |  КонтактныеЛицаКонтрагентов.РольКонтактногоЛица В (ЗНАЧЕНИЕ(справочник.роликонтактныхлиц.директор), ЗНАЧЕНИЕ(справочник.роликонтактныхлиц.Гендиректор))
    //             |  И КонтактныеЛицаКонтрагентов.Владелец = &Владелец";
    //зап2.УстановитьПараметр("Владелец", Контрагент);	
    //Выб = Зап2.Выполнить().Выбрать();
    //Должность = "";
    //Если Выб.Следующий() Тогда
    //	ДиректорПринципала = Выб.ИмяЛица;
    //	Должность = Выб.Должность;
    //    ФИО = Выб.ФИО;
    //    Пол = Выб.Пол;
    //КонецеСли;
    ////Серегин М.В. 06.05.2015 11:53:44 
    //Серегин М.В. 06.05.2015 11:28:00 
    
    
    ////Серегин М.В. 05.05.2015 12:52:26 Старый вариант 
    //Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем Принципал, в лице " + Должность + "" + ДиректорПринципала + ", с одной стороны, и Общество с ограниченной ответственностью ""Логистическая компания ""Стриж"", именуемое в дальнейшем Агент, в лице генерального директора Копытина А.А., именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агенсткого договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
    //Серегин М.В. 05.05.2015 12:52:41 новый вариант
    Должность = ДанныеДляПечати.ДолжностьВЛице;
    ДиректорПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
    ОрганизацияПолноеНаименование = ДанныеДляПечати.Организация.НаименованиеПолное;
    ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице;
    ФИОРуководителяАгента = ДанныеДляПечати.ФИОРуководителяВлице;
    
    Если Контрагент.Код = "Shop_169 " Тогда
        Если ТипДанных = "Отказы" Тогда
            Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности №929/14 от 25.12.2014, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были обработаны следующие заказы";
        Иначе    
            Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности №929/14 от 25.12.2014, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
        КонецЕсли;
    Иначе
        Если ТипДанных = "Отказы" Тогда
        Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + ", с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были обработаны следующие заказы";
        Иначе    
        Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + ", с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
        КонецЕсли;
    КонецЕсли;
    //Серегин М.В. 05.05.2015 12:52:46 
    
    ОблШ.Параметры.Стр = Стр;
    Таб.Вывести(ОблШ);
    
    НПП = 1;
    Рез = Зап.Выполнить().Выгрузить();
    Рез.Свернуть("НомерЗаказа, ДатаДоставки", "ОценочнаяСтоимость, ПолученоСКлиента, ЗаДоставку, АгентскоеВознаграждение, УслугиСД, БанковскаяКомиссия, Возврат, ЧастичныйВозврат");
    Рез.Сортировать("НомерЗаказа");
    Для каждого Тек Из Рез Цикл
        ЗаполнитьЗначенияСвойств(ОблС.Параметры, Тек);
        ОблС.Параметры.НПП = НПП;
        Таб.Вывести(ОблС);
        НПП = НПП + 1;
    КонецЦикла;	
    НПП = НПП - 1;
    
    ОблП = Мак.получитьОбласть("Подвал");
    ОблП.Параметры.СтрокаИтого = "Итого по " + Строка(НПП) + " заказу(ам): ";
    ОблП.Параметры.ИТОц = Рез.Итог("ОценочнаяСтоимость");
    ОблП.Параметры.ИТУсл = Рез.Итог("УслугиСД");
    ОблП.Параметры.ИТЧВ = Рез.Итог("ЧастичныйВозврат");
    
    
    
    если ТипДанных = "Доставки" Тогда
        ОблП.Параметры.ИтАг = Рез.Итог("АгентскоеВознаграждение");
        ОблП.Параметры.ИТБанк = Рез.Итог("БанковскаяКомиссия");
        ОблП.Параметры.ИтПол = Рез.Итог("ПолученоСКлиента");
        ОблП.Параметры.ИТВозв = Рез.Итог("Возврат");
		ОблП.Параметры.ИТДост = Рез.Итог("ЗаДоставку");
    КонецеСли;
    СумВозн = Рез.Итог("УслугиСД")+Рез.Итог("БанковскаяКомиссия")+Рез.Итог("АгентскоеВознаграждение");
    СумКВыплате = 0;
    
    ////Серегин М.В. 05.05.2015 12:59:21 Старый вариант
    //ОблП.Параметры.Стр = "Общая сумма вознаграждения составила " + СумВозн + " руб. НДС не облагается в связи с применением УСН (п.2 ст.346.11). Стороны не имеют претензий по выполнению работ. Сумма к выплате с учетом удержаний за услуги и агентское вознаграждение составляет " + СумКВыплате + " руб. Услуги по доставке оказаны в полном объеме.";
    //Серегин М.В. 05.05.2015 13:04:50 новый вариант
    ОблП.Параметры.Стр = "Общая сумма вознаграждения "+Параметр2+"а по данному отчету "+СумВозн+" руб. "+"(" + ЧислоПрописью(СумВозн,"Л = ru_RU; ДП = Истина","рубль,рубля,рублей,м,копейка,копейки,копеек,ж")+" (прописью))"  + " руб. НДС не облагается  (УСН).Счет-фактура не выставляется (ст.346.11 п.2 НК РФ).";
    Если ТипДанных = "Отказы" Тогда
        ОблП.Параметры.Стр2 = "Общее количество обработанных заказов "+Строка(НПП)+" "+"("+ЧислоПрописью(НПП,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+")"+Символы.ПС+"Заказы обработаны в полном объеме. Стороны не имеют претензий по выполнению работ."+Символы.ПС+"Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";
    Иначе
        ОблП.Параметры.Стр2 = "Общее количество обработанных заказов "+Строка(НПП)+" "+"("+ЧислоПрописью(НПП,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+")"+Символы.ПС+"Услуги по доставке заказов оказаны в полном объеме. Стороны не имеют претензий по выполнению работ."+Символы.ПС+"Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";
    КонецЕсли;
    ОблП.Параметры.Параметр1 = Параметр1;
    ОблП.Параметры.Параметр2 = Параметр2;
    ОблП.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
    ОблП.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
    ОблП.Параметры.ДожностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
    ОблП.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
    
    
    Таб.Вывести(ОблП);
    Таб.Показать("Отчет агента");
КонецПроцедуры	



Процедура ВыводНаПечатьУлыбкино(Таб, Контрагент,Контрагенты, НачДата, КонДата, МасОтб, ТипДанных = "Доставки", Терминал = Неопределено) Экспорт
    Зап = Новый Запрос;
	если ТипДанных = "Доставки" Тогда
		// Задача № 2901 Справочники.ТипыОплат.БезРасчетов
        Зап.Текст = "ВЫБРАТЬ
                    |	ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
                    |	ЗакрытыеЗаказыОбороты.Реализация.Дата КАК ДатаДоставки,
                    |	ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот КАК ОценочнаяСтоимость,
                    |	ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот КАК ПолученоСКлиента,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине) ИЛИ ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.БезРасчетов)
                    |			ТОГДА 0
                    |		ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот
                    |	КОНЕЦ КАК ЗаДоставкуСтарая,
                    |	ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждение,
                    |	ЗакрытыеЗаказыОбороты.УслугиСДОборот КАК УслугиСД,
                    |	ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот КАК БанковскаяКомиссия,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
                    |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК Возврат,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                    |				И ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот - ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                    |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК ЧастичныйВозврат,
                    |	ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот КАК ЗаДоставку
                    |ИЗ
                    |	РегистрНакопления.ЗакрытыеЗаказы.Обороты(
                    |			&НачДата,
                    |			&КонДата,
                    |			,
                    |			ИнтернетМагазин.Ссылка В (&ИнтернетМагазин)
                    |				И ТерминалДоставки В (&ТерминалДоставки)) КАК ЗакрытыеЗаказыОбороты
                    |ГДЕ
                    |	ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
                    |	И ЗакрытыеЗаказыОбороты.ТипЗаказа.Ссылка В(&МасОтб)
                    |	И ЗакрытыеЗаказыОбороты.ПричинаНевыполнения <> ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |
                    |УПОРЯДОЧИТЬ ПО
                    |	НомерЗаказа";
    Иначеесли ТипДанных = "Отказы" Тогда        // И ЗакрытыеЗаказы.ТипОплаты.Ссылка <> ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине)
		// Задача № 2901 Справочники.ТипыОплат.БезРасчетов
		Зап.Текст = "ВЫБРАТЬ
                    |	ЕСТЬNULL(ЗакрытыеЗаказы.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(ЗакрытыеЗаказы.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
                    |	ЗакрытыеЗаказы.Реализация.Дата КАК ДатаДоставки,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |			ТОГДА ЗакрытыеЗаказы.СуммаОценочная + ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК ОценочнаяСтоимость,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |			ТОГДА ЗакрытыеЗаказы.ОплаченоКлиентовНал
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК ПолученоСКлиента,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |			ТОГДА ВЫБОР
                    |					КОГДА ЗакрытыеЗаказы.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине) ИЛИ ЗакрытыеЗаказы.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.БезРасчетов)
                    |						ТОГДА 0
                    |					ИНАЧЕ ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД
                    |				КОНЕЦ
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК ЗаДоставкуСтарая,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |			ТОГДА ЗакрытыеЗаказы.КассовоеОбслуживание + ЗакрытыеЗаказы.АгентскоеВознаграждение
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК АгентскоеВознаграждение,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |			ТОГДА ЗакрытыеЗаказы.УслугиСД - (ЗакрытыеЗаказы.КассовоеОбслуживание + ЗакрытыеЗаказы.АгентскоеВознаграждение)
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК УслугиСД,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |			ТОГДА ЗакрытыеЗаказы.БанковскаяКомиссия
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК БанковскаяКомиссия,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |			ТОГДА ВЫБОР
                    |					КОГДА ЗакрытыеЗаказы.СуммаОценочная <> 0
                    |						ТОГДА ЗакрытыеЗаказы.СуммаВозврата
                    |					ИНАЧЕ 0
                    |				КОНЕЦ
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК Возврат,
                    |	ВЫБОР
                    |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |			ТОГДА ВЫБОР
                    |					КОГДА ЗакрытыеЗаказы.СуммаЧастичногоВозврата > 0
                    |						ТОГДА ЗакрытыеЗаказы.СуммаЧастичногоВозврата + ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД
                    |					ИНАЧЕ 0
                    |				КОНЕЦ
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК ЧастичныйВозврат,
                    |	ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД КАК ЗаДоставку
                    |ИЗ
                    |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
                    |ГДЕ
                    |	ЗакрытыеЗаказы.ТипЗаказа.Ссылка В(&МасОтб)
                    |	И (ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |			ИЛИ ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаБезЗаезда)
                    |			ИЛИ ЗакрытыеЗаказы.СтатусИнтернетМагазина = ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.ЗаказОтклонен))
                    |	И ЗакрытыеЗаказы.Период МЕЖДУ &НачДата И &КонДата
                    |	И ЗакрытыеЗаказы.ИнтернетМагазин В(&ИнтернетМагазин)
                    |	И ЗакрытыеЗаказы.ТерминалДоставки В(&ТерминалДоставки)
                    |
                    |ОБЪЕДИНИТЬ ВСЕ
                    |
                    |ВЫБРАТЬ
                    |	ЕСТЬNULL(РеализацияТоваровУслуг.Номер, """") + ""/"" + ЕСТЬNULL(РеализацияТоваровУслуг.НомерВнешнегоЗаказа, """"),
                    |	РеализацияТоваровУслуг.Дата,
                    |	0,
                    |	0,
                    |	0,
                    |	0,
                    |	0,
                    |	0,
                    |	0,
                    |	0,
                    |	0
                    |ИЗ
                    |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
                    |ГДЕ
                    |	(РеализацияТоваровУслуг.СтатусИнтернетМагазина = 4
                    |			ИЛИ РеализацияТоваровУслуг.ПометкаУдаления)
                    |	И РеализацияТоваровУслуг.ВладелецТовара В(&ИнтернетМагазин)
                    |	И РеализацияТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
                    |	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалДоставки)
                    |
                    |УПОРЯДОЧИТЬ ПО
                    |	НомерЗаказа";
    КонецеСли;	
    Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
    Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
    Зап.УстановитьПараметр("ИнтернетМагазин", Контрагенты);
    Зап.УстановитьПараметр("МасОтб", МасОтб);
	
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		Зап.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
		СписокТерминалов = Новый СписокЗначений;
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
	    Зап.УстановитьПараметр("ТерминалДоставки", СписокТерминалов);
	КонецЕсли;
	
    
    если ТипДанных = "Доставки" Тогда
        Мак = ПолучитьМакет("МакетУлыбкино");
    Иначе
        Мак = ПолучитьМакет("МакетУлыбкиноОтказы");
    КонецеСли;
    
    ОблШ = Мак.ПолучитьОбласть("Шапка");
    ОблС = Мак.ПолучитьОбласть("Строка");
    //Серегин М.В. 06.05.2015 11:15:34 Получим данные для печати
    ДанныеДляПечати =  СобратьДанныеДляПечати(Контрагент,КонДата);
    
    Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование,ИНН,КПП");
    //Агент = "ООО ""Логистическая компания ""Стриж"" ИНН 7715876568 КПП 771501001";
    Агент = ДанныеДляПечати.Агент;
    Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    ОблШ.Параметры.Параметр2 = Параметр2;
    если ТипДанных = "Доставки"  Тогда
        //ОблШ.Параметры.Год = Год(ТекущаяДата());
        //ОблШ.Параметры.ТекДата = ТекущаяДата();
        //Серегин М.В. 22.05.2015 13:27:05 
        ОблШ.Параметры.Параметр1 = Параметр1;
        ОблШ.Параметры.Принципал = Принципал;
        ОблШ.Параметры.Агент = Агент;
        ОблШ.Параметры.ИнтернетМагазин = Контрагент.Наименование;
        ОблШ.Параметры.Период = ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
        ОблШ.Параметры.ПериодДоставки = "период доставки: " + ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
		
		Если ЗначениеЗаполнено(Терминал) Тогда
			ОблШ.Параметры.Терминал = Терминал;
		КонецЕсли;
        //Серегин М.В. 22.05.2015 13:27:06 
    КонецеСли;	
    
    ////Серегин М.В. 05.05.2015 12:52:26 Старый вариант 
    //Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем Принципал, в лице " + Должность + "" + ДиректорПринципала + ", с одной стороны, и Общество с ограниченной ответственностью ""Логистическая компания ""Стриж"", именуемое в дальнейшем Агент, в лице генерального директора Копытина А.А., именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агенсткого договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
    //Серегин М.В. 05.05.2015 12:52:41 новый вариант
    Должность = ДанныеДляПечати.ДолжностьВЛице;
    ДиректорПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
    ОрганизацияПолноеНаименование = ДанныеДляПечати.Организация.НаименованиеПолное;
    ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице;
    ФИОРуководителяАгента = ДанныеДляПечати.ФИОРуководителяВлице;
    
    Если Контрагент.Код = "Shop_169 " Тогда
        Если ТипДанных = "Отказы" Тогда
            Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности №929/14 от 25.12.2014, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были обработаны следующие заказы";
        Иначе    
            Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности №929/14 от 25.12.2014, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
        КонецЕсли;
    ИначеЕсли  Контрагент.Код = "Shop_256 " Тогда
        Если ТипДанных = "Отказы" Тогда
        Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности № 01-МС0С5 от 02.02.2015, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были обработаны следующие заказы";
        Иначе    
        Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности № 01-МС0С5 от 02.02.2015, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
        КонецЕсли;
    Иначе
        Если ТипДанных = "Отказы" Тогда
        Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + ", с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были обработаны следующие заказы";
        Иначе    
        Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + ", с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
        КонецЕсли;
    КонецЕсли;
    //Серегин М.В. 05.05.2015 12:52:46 
    
    ОблШ.Параметры.Стр = Стр;
    
    Таб.Вывести(ОблШ);
    
    ////Серегин М.В. 22.05.2015 14:35:20 старый код
    //НПП = 1;
    //Рез = Зап.Выполнить().Выгрузить();
    //Рез.Свернуть("НомерЗаказа, ДатаДоставки", "ОценочнаяСтоимость, ПолученоСКлиента, ЗаДоставку, АгентскоеВознаграждение, УслугиСД, БанковскаяКомиссия, Возврат, ЧастичныйВозврат");
    //Рез.Сортировать("НомерЗаказа");
    //Для каждого Тек Из Рез Цикл
    //    ЗаполнитьЗначенияСвойств(ОблС.Параметры, Тек);
    //    ОблС.Параметры.НПП = НПП;
    //    Таб.Вывести(ОблС);
    //    НПП = НПП + 1;
    //КонецЦикла;	
    //НПП = НПП - 1;
    //
    //ОблП = Мак.получитьОбласть("Подвал");
    //ОблП.Параметры.СтрокаИтого = "Итого: ";
    //ОблП.Параметры.ИТОц = Рез.Итог("ОценочнаяСтоимость");
    //ОблП.Параметры.ИТУсл = Рез.Итог("УслугиСД");
    //ОблП.Параметры.ИТЧВ = Рез.Итог("ЧастичныйВозврат");
    //
    //
    //если ТипДанных = "Доставки" Тогда
    //    //ОблП.Параметры.ИТДост = Рез.Итог("ЗаДоставку");
    //    ОблП.Параметры.ИтАг = Рез.Итог("АгентскоеВознаграждение");
    //    //ОблП.Параметры.ИТБанк = Рез.Итог("БанковскаяКомиссия");
    //    ОблП.Параметры.ИтПол = Рез.Итог("ПолученоСКлиента");
    //    //ОблП.Параметры.ИТВозв = Рез.Итог("Возврат");
    //КонецеСли;
    //СумВозн = Рез.Итог("УслугиСД")+Рез.Итог("АгентскоеВознаграждение");
    //СумКВыплате = 0;
    ////Серегин М.В. 22.05.2015 14:35:26 
    
    //Серегин М.В. 22.05.2015 14:35:34 новый
    НПП = 1;
    Рез = Зап.Выполнить().Выгрузить();
    Рез.Свернуть("НомерЗаказа, ДатаДоставки", "ОценочнаяСтоимость, ПолученоСКлиента, ЗаДоставку, АгентскоеВознаграждение, УслугиСД, БанковскаяКомиссия, Возврат, ЧастичныйВозврат");
    Рез.Сортировать("НомерЗаказа");
    Для каждого Тек Из Рез Цикл
        ЗаполнитьЗначенияСвойств(ОблС.Параметры, Тек);
        ОблС.Параметры.НПП = НПП;
        Таб.Вывести(ОблС);
        НПП = НПП + 1;
    КонецЦикла;	
    НПП = НПП - 1;
    
    ОблП = Мак.получитьОбласть("Подвал");
    ОблП.Параметры.СтрокаИтого = "Итого по " + Строка(НПП) + " заказу(ам): ";
    ОблП.Параметры.ИТОц = Рез.Итог("ОценочнаяСтоимость");
    ОблП.Параметры.ИТУсл = Рез.Итог("УслугиСД");
    ОблП.Параметры.ИТЧВ = Рез.Итог("ЧастичныйВозврат");
    ОблП.Параметры.ИТДост = Рез.Итог("ЗаДоставку");
    
    если ТипДанных = "Доставки" Тогда
        ОблП.Параметры.ИтАг = Рез.Итог("АгентскоеВознаграждение");
        ОблП.Параметры.ИТБанк = Рез.Итог("БанковскаяКомиссия");
        ОблП.Параметры.ИтПол = Рез.Итог("ПолученоСКлиента");
        ОблП.Параметры.ИТВозв = Рез.Итог("Возврат");
    КонецеСли;
    СумВозн = Рез.Итог("УслугиСД")+Рез.Итог("БанковскаяКомиссия")+Рез.Итог("АгентскоеВознаграждение");
    СумКВыплате = 0;

    
    ////Серегин М.В. 05.05.2015 12:59:21 Старый вариант
    //ОблП.Параметры.Стр = "Общая сумма вознаграждения составила " + СумВозн + " руб. НДС не облагается в связи с применением УСН (п.2 ст.346.11). Стороны не имеют претензий по выполнению работ. Сумма к выплате с учетом удержаний за услуги и агентское вознаграждение составляет " + СумКВыплате + " руб. Услуги по доставке оказаны в полном объеме.";
    //Серегин М.В. 05.05.2015 13:04:50 новый вариант
    ОблП.Параметры.Стр = "Общая сумма вознаграждения "+Параметр2+"а по данному отчету "+СумВозн+" руб. "+"(" + ЧислоПрописью(СумВозн,"Л = ru_RU; ДП = Истина","рубль,рубля,рублей,м,копейка,копейки,копеек,ж")+" (прописью))"  + " руб. НДС не облагается  (УСН).Счет-фактура не выставляется (ст.346.11 п.2 НК РФ).";
    Если ТипДанных = "Отказы" Тогда
        ОблП.Параметры.Стр2 = "Общее количество обработанных заказов "+Строка(НПП)+" "+"("+ЧислоПрописью(НПП,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+")"+Символы.ПС+"Заказы обработаны в полном объеме. Стороны не имеют претензий по выполнению работ."+Символы.ПС+"Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";
    Иначе
        ОблП.Параметры.Стр2 = "Общее количество обработанных заказов "+Строка(НПП)+" "+"("+ЧислоПрописью(НПП,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+")"+Символы.ПС+"Услуги по доставке заказов оказаны в полном объеме. Стороны не имеют претензий по выполнению работ."+Символы.ПС+"Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";
    КонецЕсли;
    ОблП.Параметры.Параметр1 = Параметр1;
    ОблП.Параметры.Параметр2 = Параметр2;
    ОблП.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
    ОблП.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
    ОблП.Параметры.ДожностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
    ОблП.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
    
    
    Таб.Вывести(ОблП);
    Таб.Показать("Отчет агента");
КонецПроцедуры	


Процедура ВыводНаПечатьTD(Таб, Контрагент,Контрагенты, НачДата, КонДата, МасОтб, ТипДанных = "Доставки", ТабУслугДоставки = Неопределено, Терминал = Неопределено) Экспорт
    
    
    ЗапОбмены = Новый Запрос;
    ЗапОбмены.Текст = "ВЫБРАТЬ
                      |	РеализацияТоваровУслугТовары.Ссылка.Номер,
                      |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма
                      |ИЗ
                      |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
                      |		ПО РеализацияТоваровУслугТовары.Ссылка.Номер = ВозвратТоваровОтПокупателя.Номер
                      |ГДЕ
                      |	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
                      |	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
                      |	И РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара В(&Контрагент)
                      |	И РеализацияТоваровУслугТовары.Ссылка.ТерминалДоставки В(&ТерминалДоставки)
                      |
                      |СГРУППИРОВАТЬ ПО
                      |	РеализацияТоваровУслугТовары.Ссылка.Номер";
    ЗапОбмены.УстановитьПараметр("Контрагент", Контрагенты);	
    ЗапОбмены.УстановитьПараметр("ДатаНач", НачалоДня(НачДата));	
    ЗапОбмены.УстановитьПараметр("ДатаКон", КонецДня(КонДата));	
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		ЗапОбмены.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
		СписокТерминалов = Новый СписокЗначений;
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
	    ЗапОбмены.УстановитьПараметр("ТерминалДоставки", СписокТерминалов);
	КонецЕсли;
	
    РезОбмены = ЗапОбмены.Выполнить().Выгрузить();
    
    
    Зап = Новый Запрос;
    Зап.Текст = "ВЫБРАТЬ
                |	ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.Номер, """") КАК НомерЗаказа,
                |	ЗакрытыеЗаказыОбороты.Реализация.Дата КАК ДатаДоставки,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот < 0
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот
                |	КОНЕЦ КАК ОценочнаяСтоимость,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
                |				И ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот <> 0
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот
                |	КОНЕЦ КАК ПолученоСКлиента,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.Наличные)
                |			ТОГДА ВЫБОР
                |					КОГДА ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |						ТОГДА 0
                |					ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот
                |				КОНЕЦ
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК ЗаДоставку,
                |	ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждение,
                |	ЗакрытыеЗаказыОбороты.УслугиСДОборот КАК УслугиЗаДоставку,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
                |				И ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот
                |	КОНЕЦ КАК БанковскаяКомиссия,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
                |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК Возврат,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                |				И ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот - ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК ЧастичныйВозврат,
                |	ЕСТЬNULL(РасчетУслугСДОбороты.ПоказательУслуг, ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)) КАК ПоказательУслуг,
                |	ЗакрытыеЗаказыОбороты.Реализация.Номер КАК Номер,
                |	ЗакрытыеЗаказыОбороты.УслугиСДОборот + ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК УслугиСД,
                |	ВЫБОР
                |		КОГДА ЕСТЬNULL(новаМестнаяДоставка.ТочкаПрибытия.Москва, ИСТИНА) = ИСТИНА
                |			ТОГДА ""Москва""
                |		ИНАЧЕ ВЫБОР
                |				КОГДА новаМестнаяДоставка.ТочкаПрибытия.Москва = ИСТИНА
                |					ТОГДА ""Москва""
                |				ИНАЧЕ ""МО""
                |			КОНЕЦ
                |	КОНЕЦ КАК Терр,
                |	ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.НомерВнешнегоЗаказа, """""""") КАК ВнешнийНомерЗаказа,
                |	ЕСТЬNULL(РасчетУслугСДОбороты.СуммаОборот, 0) КАК СуммаУслуг
                |ИЗ
                |	РегистрНакопления.ЗакрытыеЗаказы.Обороты(
                |			&НачДата,
                |			&КонДата,
                |			,
                |			ИнтернетМагазин.Ссылка В (&ИнтернетМагазин)
                |				И ТерминалДоставки В (&ТерминалДоставки)) КАК ЗакрытыеЗаказыОбороты
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетУслугСД.Обороты(&НачДата, &КонДата, , ) КАК РасчетУслугСДОбороты
                |		ПО ЗакрытыеЗаказыОбороты.Реализация.Ссылка = РасчетУслугСДОбороты.Реализация.Ссылка
                |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
                |		ПО (ВЫРАЗИТЬ(ЗакрытыеЗаказыОбороты.Реализация КАК Документ.РеализацияТоваровУслуг).Номер = новаМестнаяДоставка.Номер)
                |ГДЕ
                |	ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
                |	И ЗакрытыеЗаказыОбороты.ТипЗаказа.Ссылка В(&МасОтб)
                |
                |УПОРЯДОЧИТЬ ПО
                |	НомерЗаказа
                |ИТОГИ ПО
                |	НомерЗаказа";
    Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
    Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
    Зап.УстановитьПараметр("ИнтернетМагазин", Контрагенты);
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		Зап.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
		СписокТерминалов = Новый СписокЗначений;
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
	    Зап.УстановитьПараметр("ТерминалДоставки", СписокТерминалов);
	КонецЕсли;

    
    //КонтрагентПапка = Справочники.Контрагенты.НайтиПоКоду("Shop_92");
    
    //Зап.УстановитьПараметр("ИнтернетМагазинПапка", КонтрагентПапка);
    Зап.УстановитьПараметр("МасОтб", МасОтб);
    
    Мак = ПолучитьМакет("МакетTD");
    ОблШ = Мак.ПолучитьОбласть("Шапка|Основное");
    ОблС = Мак.ПолучитьОбласть("Строка|Основное");
    
    
    ОблШП = Мак.ПолучитьОбласть("Шапка|Показатель");
    ОблСП = Мак.ПолучитьОбласть("Строка|Показатель");
    
    ОблШТ = Мак.ПолучитьОбласть("Шапка|Терр");
    ОблСТ = Мак.ПолучитьОбласть("Строка|Терр");
    
    //Серегин М.В. 06.05.2015 11:15:34 Получим данные для печати
    ДанныеДляПечати =  СобратьДанныеДляПечати(Контрагент,КонДата);
    //Серегин М.В. 06.05.2015 14:05:11 
    
    Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование,ИНН,КПП");
    //Агент = "ООО ""Логистическая компания ""Стриж"" ИНН 7715876568 КПП 771501001";
    Агент = ДанныеДляПечати.Агент;
    Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    ОблШ.Параметры.Параметр1 = Параметр1;
    ОблШ.Параметры.Параметр2 = Параметр2;
    ОблШ.Параметры.Принципал = Принципал;
    ОблШ.Параметры.Агент = Агент;
    ОблШ.Параметры.ИнтернетМагазин = Контрагент.Наименование;
    ОблШ.Параметры.Период = ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
    ОблШ.Параметры.ПериодДоставки = "период доставки: " + ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		ОблШ.Параметры.Терминал = Терминал;
	КонецЕсли;
    

    ////Серегин М.В. 05.05.2015 12:52:26 Старый вариант 
    //Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем Принципал, в лице " + Должность + "" + ДиректорПринципала + ", с одной стороны, и Общество с ограниченной ответственностью ""Логистическая компания ""Стриж"", именуемое в дальнейшем Агент, в лице генерального директора Копытина А.А., именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агенсткого договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
    //Серегин М.В. 05.05.2015 12:52:41 новый вариант
    Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    Должность = ДанныеДляПечати.ДолжностьВЛице;
    ДиректорПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
    ОрганизацияПолноеНаименование = ДанныеДляПечати.Организация.НаименованиеПолное;
    ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице;
    ФИОРуководителяАгента = ДанныеДляПечати.ФИОРуководителяВлице;
    
    Если Контрагент.Код = "Shop_169 " Тогда
        Если ТипДанных = "Отказы" Тогда
            Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности №929/14 от 25.12.2014, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были обработаны следующие заказы";
        Иначе    
            Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности №929/14 от 25.12.2014, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
        КонецЕсли;
    Иначе
        Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + ", с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
    КонецЕсли;
    //Серегин М.В. 05.05.2015 12:52:46 
    
    ОблШ.Параметры.Стр = Стр;
    
    Таб.Вывести(ОблШ);
    //
    Для Каждого Тек Из ТабУслугДоставки Цикл
        ОблШП.Параметры.ИмяПоказателя = СокрЛП(Тек.Показатель.Наименование);
        Таб.Присоединить(ОблШП);
    КонецЦикла;	
    
    Таб.Присоединить(ОблШТ);
    
    ИТОц = 0;
    ИтПол = 0;
    ИТДост = 0;
    ИтАг = 0;
    ИТУсл = 0;
    ИТБанк = 0;
    ИТВозв = 0;
    ИТУслЗаДост = 0;
    
    НПП = 1;
    Выб = Зап.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    Пока Выб.Следующий() Цикл
        ВыбДет = Выб.Выбрать();
        Терр = "";
        ТП = Новый ТаблицаЗначений;
        ТП.Колонки.Добавить("ПоказательУслуг");
        ТП.Колонки.Добавить("СуммаУслуг");
        ИтСум = Выб.СуммаУслуг;
        Пока Выбдет.Следующий() Цикл
            Если ВыбДет.ПоказательУслуг = Справочники.ПоказателиРасчетаУслугСД.ОсновнаяЧасть Тогда
                ЗаполнитьЗначенияСвойств(ОблС.Параметры, ВыбДет);
                ОблС.Параметры.НПП = НПП;
                
                //ОблС.Параметры.УслугиСД = ОблС.Параметры.УслугиСД + ИтСум - ОблС.Параметры.УслугиЗаДоставку;  
                ОблС.Параметры.УслугиЗаДоставку = ВыбДет.СуммаУслуг;
                НайОбм = РезОбмены.Найти(ВыбДет.Номер);
                Если НайОбм <> Неопределено Тогда
                    ОблС.Параметры.ОценочнаяСтоимость = НайОбм.Сумма;
                КонецеСли;	
                
                Таб.Вывести(ОблС);
                НПП = НПП + 1;
                
                Если НайОбм <> Неопределено Тогда
                    ИТОц = ИТОц + НайОбм.Сумма;
                Иначе	
                    ИТОц = ИТОц + ВыбДет.ОценочнаяСтоимость;
                КонецеСли;	
                ИтПол = ИтПол + ВыбДет.ПолученоСКлиента;
                ИТДост = ИТДост + ВыбДет.ЗаДоставку;
                ИтАг = ИтАг + ВыбДет.АгентскоеВознаграждение;
                ИТУсл = ИТУсл + ВыбДет.УслугиСД;
                ИТБанк = ИТБанк + ВыбДет.БанковскаяКомиссия;
                ИТВозв = ИТВозв + ВыбДет.Возврат;
                ИТУслЗаДост = ИТУслЗаДост + ОблС.Параметры.УслугиЗаДоставку;
                Терр = ВыбДет.Терр;
            Иначе
                Нов = ТП.Добавить();
                ЗаполнитьЗначенияСвойств(Нов, ВыбДет);
            КонецеСли;	
        КонецЦикла;
        
        Для Каждого Тек Из ТабУслугДоставки Цикл
            Най = ТП.Найти(Тек.Показатель);
            Если Най <> Неопределено Тогда
                ОблСП.Параметры.ЗначениеПоказателя = Най.СуммаУслуг;
                Тек.Итог = Тек.Итог + Най.СуммаУслуг;
            Иначе
                ОблСП.Параметры.ЗначениеПоказателя = 0;
            КонецеСли;	
            Таб.Присоединить(ОблСП);
        КонецЦикла;	
        ОблСт.Параметры.Терр = Терр;
        Таб.Присоединить(ОблСТ);
    КонецЦикла;	
    НПП = НПП - 1;
    
    ОблП = Мак.получитьОбласть("Подвал|Основное");
    ОблПП = Мак.получитьОбласть("Подвал|Показатель");
    ОблПТ = Мак.получитьОбласть("Подвал|Терр");
    
    ОблП.Параметры.СтрокаИтого = "Итого по " + Строка(НПП) + " заказу(ам): ";
    ОблП.Параметры.ИТОц = ИТОц;
    ОблП.Параметры.ИтПол = ИтПол;
    ОблП.Параметры.ИТДост = ИТДост;
    ОблП.Параметры.ИтАг = ИтАг;
    ОблП.Параметры.ИТУсл = ИТУсл;
    ОблП.Параметры.ИТБанк = ИТБанк;
    ОблП.Параметры.ИТВозв = ИТВозв;
    ОблП.Параметры.ИТУслЗаДост = ИТУслЗаДост;
    
    СумВозн = ИТБанк+ИТУсл;
    СумКВыплате = 0;
    
    ////Серегин М.В. 05.05.2015 12:59:21 Старый вариант
    //ОблП.Параметры.Стр = "Общая сумма вознаграждения составила " + СумВозн + " руб. НДС не облагается в связи с применением УСН (п.2 ст.346.11). Стороны не имеют претензий по выполнению работ. Сумма к выплате с учетом удержаний за услуги и агентское вознаграждение составляет " + СумКВыплате + " руб. Услуги по доставке оказаны в полном объеме.";
    //Серегин М.В. 05.05.2015 13:04:50 новый вариант
    ОблП.Параметры.Стр = "Общая сумма вознаграждения "+Параметр2+"а по данному отчету "+СумВозн+" руб. "+"(" + ЧислоПрописью(СумВозн,"Л = ru_RU; ДП = Истина","рубль,рубля,рублей,м,копейка,копейки,копеек,ж")+" (прописью))"  + " руб. НДС не облагается  (УСН).Счет-фактура не выставляется (ст.346.11 п.2 НК РФ).";
    Если ТипДанных = "Отказы" Тогда
        ОблП.Параметры.Стр2 = "Общее количество обработанных заказов "+Строка(НПП)+" "+"("+ЧислоПрописью(НПП,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+")"+Символы.ПС+"Заказы обработаны в полном объеме. Стороны не имеют претензий по выполнению работ."+Символы.ПС+"Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";
    Иначе
        ОблП.Параметры.Стр2 = "Общее количество обработанных заказов "+Строка(НПП)+" "+"("+ЧислоПрописью(НПП,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+")"+Символы.ПС+"Услуги по доставке заказов оказаны в полном объеме. Стороны не имеют претензий по выполнению работ."+Символы.ПС+"Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";
    КонецЕсли;
    ОблП.Параметры.Параметр1 = Параметр1;
    ОблП.Параметры.Параметр2 = Параметр2;
    ОблП.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
    ОблП.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
    ОблП.Параметры.ДожностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
    ОблП.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
    
    
    Таб.Вывести(ОблП);
    
    Для Каждого Тек Из ТабУслугДоставки Цикл
        ОблПП.Параметры.ИтогПоПоказателю = Тек.Итог;
        Таб.Присоединить(ОблПП);
    КонецЦикла;	
    Таб.Присоединить(ОблПТ);
    
    Таб.Показать("Отчет агента");
КонецПроцедуры	

//Серегин М.В. 08.07.2015 12:52:12 
Процедура ВыводНаПечатьЯндекс(Таб, Контрагент,Контрагенты, НачДата, КонДата, МасОтб, ТипДанных = "Доставки", ТабУслугДоставки = Неопределено, Терминал = Неопределено) Экспорт
    ЗапОбмены = Новый Запрос;
    ЗапОбмены.Текст = "ВЫБРАТЬ
                      |	РеализацияТоваровУслугТовары.Ссылка.Номер,
                      |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК СуммаСтарая,
                      |	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК Сумма
                      |ИЗ
                      |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
                      |		ПО РеализацияТоваровУслугТовары.Ссылка.Номер = ВозвратТоваровОтПокупателя.Номер
                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
                      |		ПО РеализацияТоваровУслугТовары.Ссылка = ДополнительныеПараметрыЗаказа.Заказ
                      |ГДЕ
                      |	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
                      |	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
                      |	И РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара В(&Контрагент)
                      |	И РеализацияТоваровУслугТовары.Ссылка.ТерминалДоставки В(&ТерминалДоставки)
                      |
                      |СГРУППИРОВАТЬ ПО
                      |	РеализацияТоваровУслугТовары.Ссылка.Номер,
                      |	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0)";
    ЗапОбмены.УстановитьПараметр("Контрагент", Контрагенты);	
    ЗапОбмены.УстановитьПараметр("ДатаНач", НачалоДня(НачДата));	
    ЗапОбмены.УстановитьПараметр("ДатаКон", КонецДня(КонДата));	
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		ЗапОбмены.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
		СписокТерминалов = Новый СписокЗначений;
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
	    ЗапОбмены.УстановитьПараметр("ТерминалДоставки", СписокТерминалов);
	КонецЕсли;
	
    РезОбмены = ЗапОбмены.Выполнить().Выгрузить();
    
    ////Серегин М.В. 19.08.2015 11:43:48 старый запрос
    //Зап = Новый Запрос;
    //Зап.Текст = "ВЫБРАТЬ
    //            |   СУММА(ВЫБОР
    //            |           КОГДА РасчетУслугСД.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)
    //            |               ТОГДА РасчетУслугСД.Сумма
    //            |           ИНАЧЕ 0
    //            |       КОНЕЦ) КАК Сумма,
    //            |   СУММА(ВЫБОР
    //            |           КОГДА РасчетУслугСД.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.Подъем)
    //            |               ТОГДА РасчетУслугСД.Сумма
    //            |           ИНАЧЕ 0
    //            |       КОНЕЦ) КАК СуммаПодъем,
    //            |   МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)) КАК ПоказательУслуг,
    //            |   РасчетУслугСД.Реализация
    //            |ПОМЕСТИТЬ ВТ_РасчетУслугСД
    //            |ИЗ
    //            |   РегистрНакопления.РасчетУслугСД КАК РасчетУслугСД
    //            |ГДЕ
    //            |   РасчетУслугСД.ПоказательУслуг В (ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть), ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.Подъем))
    //            |
    //            |СГРУППИРОВАТЬ ПО
    //            |   РасчетУслугСД.Реализация
    //            |;
    //            |
    //            |////////////////////////////////////////////////////////////////////////////////
    //            |ВЫБРАТЬ
    //            |   ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.Номер, """") КАК НомерЗаказа,
    //            |   ЗакрытыеЗаказыОбороты.Реализация.Дата КАК ДатаДоставки,
    //            |   ВЫБОР
    //            |       КОГДА ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот < 0
    //            |           ТОГДА 0
    //            |       ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот
    //            |   КОНЕЦ КАК ОценочнаяСтоимость,
    //            |   ВЫБОР
    //            |       КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
    //            |               И ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот <> 0
    //            |           ТОГДА 0
    //            |       ИНАЧЕ ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот
    //            |   КОНЕЦ КАК ПолученоСКлиента,
    //            |   ВЫБОР
    //            |       КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.Наличные)
    //            |           ТОГДА ВЫБОР
    //            |                   КОГДА ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
    //            |                       ТОГДА 0
    //            |                   ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот
    //            |               КОНЕЦ
    //            |       ИНАЧЕ 0
    //            |   КОНЕЦ КАК ЗаДоставку,
    //            |   ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждение,
    //            |   ЗакрытыеЗаказыОбороты.УслугиСДОборот КАК УслугиЗаДоставку,
    //            |   ВЫБОР
    //            |       КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
    //            |               И ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
    //            |           ТОГДА 0
    //            |       ИНАЧЕ ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот
    //            |   КОНЕЦ КАК БанковскаяКомиссия,
    //            |   ВЫБОР
    //            |       КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
    //            |           ТОГДА ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот
    //            |       ИНАЧЕ 0
    //            |   КОНЕЦ КАК Возврат,
    //            |   ВЫБОР
    //            |       КОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
    //            |               И ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот - ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
    //            |           ТОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот
    //            |       ИНАЧЕ 0
    //            |   КОНЕЦ КАК ЧастичныйВозврат,
    //            |   ЕСТЬNULL(ВТ_РасчетУслугСД.ПоказательУслуг, ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)) КАК ПоказательУслуг,
    //            |   ЕСТЬNULL(ВТ_РасчетУслугСД.Сумма, 0) КАК СуммаУслуг,
    //            |   ЗакрытыеЗаказыОбороты.Реализация.Номер КАК Номер,
    //            |   ЗакрытыеЗаказыОбороты.УслугиСДОборот + ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК УслугиСД,
    //            |   ВЫБОР
    //            |       КОГДА ЕСТЬNULL(новаМестнаяДоставка.ТочкаПрибытия.Москва, ИСТИНА) = ИСТИНА
    //            |           ТОГДА ""Москва""
    //            |       ИНАЧЕ ВЫБОР
    //            |               КОГДА новаМестнаяДоставка.ТочкаПрибытия.Москва = ИСТИНА
    //            |                   ТОГДА ""Москва""
    //            |               ИНАЧЕ ""МО""
    //            |           КОНЕЦ
    //            |   КОНЕЦ КАК Терр,
    //            |   ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.НомерВнешнегоЗаказа, """""""") КАК ВнешнийНомерЗаказа,
    //            |   ЕСТЬNULL(ВТ_РасчетУслугСД.СуммаПодъем, 0) КАК Подъем,
    //            |   0 КАК ОжиданиеНаАдресе,
    //            |   0 КАК Страхование,
    //            |   ЗакрытыеЗаказыОбороты.ТипЗаказа
    //            |ИЗ
    //            |   РегистрНакопления.ЗакрытыеЗаказы.Обороты(&НачДата, &КонДата, , ИнтернетМагазин.Ссылка В (&ИнтернетМагазин)) КАК ЗакрытыеЗаказыОбороты
    //            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетУслугСД КАК ВТ_РасчетУслугСД
    //            |       ПО ЗакрытыеЗаказыОбороты.Реализация.Ссылка = ВТ_РасчетУслугСД.Реализация.Ссылка
    //            |       ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
    //            |       ПО (ВЫРАЗИТЬ(ЗакрытыеЗаказыОбороты.Реализация КАК Документ.РеализацияТоваровУслуг).Номер = новаМестнаяДоставка.Номер)
    //            |ГДЕ
    //            |   ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
    //            |   И ЗакрытыеЗаказыОбороты.ТипЗаказа.Ссылка В(&МасОтб)
    //            |
    //            |УПОРЯДОЧИТЬ ПО
    //            |   НомерЗаказа
    //            |ИТОГИ
    //            |   СУММА(СуммаУслуг)
    //            |ПО
    //            |   НомерЗаказа";
    //Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
    //Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
    //Зап.УстановитьПараметр("ИнтернетМагазин", Контрагенты);
    //
    ////Серегин М.В. 19.08.2015 11:44:21 новый запрос
	
	
	
	
	
	// Михушкин --->> 
	//Зап = Новый Запрос;
	//Зап.Текст = "ВЫБРАТЬ
	//            |	СУММА(ВЫБОР
	//            |			КОГДА РасчетУслугСДОбороты.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)
	//            |				ТОГДА РасчетУслугСДОбороты.СуммаОборот
	//            |			ИНАЧЕ 0
	//            |		КОНЕЦ) КАК Сумма,
	//            |	СУММА(ВЫБОР
	//            |			КОГДА РасчетУслугСДОбороты.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.Подъем)
	//            |				ТОГДА РасчетУслугСДОбороты.СуммаОборот
	//            |			ИНАЧЕ 0
	//            |		КОНЕЦ) КАК СуммаПодъем,
	//            |	МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)) КАК ПоказательУслуг,
	//            |	РасчетУслугСДОбороты.Реализация
	//            |ПОМЕСТИТЬ ВТ_РасчетУслугСД
	//            |ИЗ
	//            |	РегистрНакопления.РасчетУслугСД.Обороты(
	//            |			&НачДата,
	//            |			&КонДата,
	//            |			,
	//            |			ПоказательУслуг В (ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть), ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.Подъем))
	//            |				И ТерминалДоставки В (&ТерминалДоставки)) КАК РасчетУслугСДОбороты
	//            |
	//            |СГРУППИРОВАТЬ ПО
	//            |	РасчетУслугСДОбороты.Реализация
	//            |;
	//            |
	//            |////////////////////////////////////////////////////////////////////////////////
	//            |ВЫБРАТЬ
	//            |	ЗакрытиеЗаказовЗаказы.Номер КАК НомерЗаказа,
	//            |	ЗакрытиеЗаказовЗаказы.ОценочнаяСтоимость,
	//            |	ЗакрытиеЗаказовЗаказы.Ссылка
	//            |ПОМЕСТИТЬ ВТ_ТЧЗакрытиеЗаказов
	//            |ИЗ
	//            |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	//            |ГДЕ
	//            |	ЗакрытиеЗаказовЗаказы.Ссылка.ТипДоставки В(&МасОтб)
	//            |	И ЗакрытиеЗаказовЗаказы.Ссылка.Контрагент В(&ИнтернетМагазин)
	//            |	И ЗакрытиеЗаказовЗаказы.Ссылка.Проведен
	//            |	И ЗакрытиеЗаказовЗаказы.Закрыть
	//            |	И ЗакрытиеЗаказовЗаказы.ТерминалДоставки В(&ТерминалДоставки)
	//            |;
	//            |
	//            |////////////////////////////////////////////////////////////////////////////////
	//            |ВЫБРАТЬ
	//            |	ВЫРАЗИТЬ(ЗакрытиеЗаказовУслуги.Реализация КАК Документ.РеализацияТоваровУслуг).Номер КАК НомерЗаказа,
	//            |	ЗакрытиеЗаказовУслуги.Ссылка КАК ЗакрытиеЗаказов,
	//            |	ЗакрытиеЗаказовУслуги.СуммаДляИзменения
	//            |ПОМЕСТИТЬ ВТ_Страхование
	//            |ИЗ
	//            |	Документ.ЗакрытиеЗаказов.Услуги КАК ЗакрытиеЗаказовУслуги
	//            |ГДЕ
	//            |	ЗакрытиеЗаказовУслуги.Ссылка.ТипДоставки В(&МасОтб)
	//            |	И ЗакрытиеЗаказовУслуги.Ссылка.Контрагент В(&ИнтернетМагазин)
	//            |	И ЗакрытиеЗаказовУслуги.Ссылка.Проведен
	//            |	И ЗакрытиеЗаказовУслуги.Услуга = &Страхование
	//            |	И ЗакрытиеЗаказовУслуги.Реализация.ТерминалДоставки В(&ТерминалДоставки)
	//            |;
	//            |
	//            |////////////////////////////////////////////////////////////////////////////////
	//            |ВЫБРАТЬ
	//            |	ВЫРАЗИТЬ(ЗакрытиеЗаказовУслуги.Реализация КАК Документ.РеализацияТоваровУслуг).Номер КАК НомерЗаказа,
	//            |	ЗакрытиеЗаказовУслуги.Ссылка КАК ЗакрытиеЗаказов,
	//            |	ЗакрытиеЗаказовУслуги.СуммаДляИзменения
	//            |ПОМЕСТИТЬ ВТ_Ожидание
	//            |ИЗ
	//            |	Документ.ЗакрытиеЗаказов.Услуги КАК ЗакрытиеЗаказовУслуги
	//            |ГДЕ
	//            |	ЗакрытиеЗаказовУслуги.Ссылка.ТипДоставки В(&МасОтб)
	//            |	И ЗакрытиеЗаказовУслуги.Ссылка.Контрагент В(&ИнтернетМагазин)
	//            |	И ЗакрытиеЗаказовУслуги.Ссылка.Проведен
	//            |	И ЗакрытиеЗаказовУслуги.Услуга = &Ожидание
	//            |	И ЗакрытиеЗаказовУслуги.Реализация.ТерминалДоставки В(&ТерминалДоставки)
	//            |;
	//            |
	//            |////////////////////////////////////////////////////////////////////////////////
	//            |ВЫБРАТЬ
	//            |	ЗакрытыеЗаказыОбороты.Период,
	//            |	ЗакрытыеЗаказыОбороты.ЮрЛицо,
	//            |	ЗакрытыеЗаказыОбороты.ТипЗаказа,
	//            |	ЗакрытыеЗаказыОбороты.Транспорт,
	//            |	ЗакрытыеЗаказыОбороты.ИнтернетМагазин,
	//            |	ЗакрытыеЗаказыОбороты.КатегорияДоставки,
	//            |	ЗакрытыеЗаказыОбороты.Водитель,
	//            |	ЗакрытыеЗаказыОбороты.Экспедитор,
	//            |	ЗакрытыеЗаказыОбороты.Клиент,
	//            |	ЗакрытыеЗаказыОбороты.Реализация,
	//            |	ЗакрытыеЗаказыОбороты.ТипОплаты,
	//            |	ЗакрытыеЗаказыОбороты.СтатусЗаказа,
	//            |	ЗакрытыеЗаказыОбороты.ПричинаНевыполнения,
	//            |	ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина,
	//            |	ЗакрытыеЗаказыОбороты.ПричинаОтказа,
	//            |	ЗакрытыеЗаказыОбороты.VIPДоставка,
	//            |	ЗакрытыеЗаказыОбороты.ВидVip,
	//            |	ЗакрытыеЗаказыОбороты.ТарифнаяСетка,
	//            |	ЗакрытыеЗаказыОбороты.РасчетныйБрейк,
	//            |	ЗакрытыеЗаказыОбороты.ТарифнаяСеткаПартнера,
	//            |	ЗакрытыеЗаказыОбороты.ЗонаТарификации,
	//            |	ЗакрытыеЗаказыОбороты.ПричинаОтклоненияЗаказа,
	//            |	ЗакрытыеЗаказыОбороты.Партнер,
	//            |	ЗакрытыеЗаказыОбороты.ТерминалДоставки,
	//            |	ЗакрытыеЗаказыОбороты.ТерминалПриёма,
	//            |	ЗакрытыеЗаказыОбороты.ОбъемныйБрейк,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот) КАК СуммаОценочнаяОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот) КАК СуммаПолученнаяОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот) КАК СуммаДоставкиДоМКАДОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот) КАК СуммаДоставкиЗаМКАДОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.УслугиСДОборот) КАК УслугиСДОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот) КАК БанковскаяКомиссияОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот) КАК КассовоеОбслуживаниеОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот) КАК СуммаВозвратаОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.МассаОборот) КАК МассаОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот) КАК СуммаЧастичногоВозвратаОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот) КАК ОплаченоКлиентовНалОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот) КАК АгентскоеВознаграждениеОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.ПредоплатаПоКредитуОборот) КАК ПредоплатаПоКредитуОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.УслугиСДЧистыеОборот) КАК УслугиСДЧистыеОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.СтраховойСборОборот) КАК СтраховойСборОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.ФактическийВесОборот) КАК ФактическийВесОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.ОбъемЗабораОборот) КАК ОбъемЗабораОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.ОбъемЗабораПоЗаказамОборот) КАК ОбъемЗабораПоЗаказамОборот,
	//            |	СУММА(ЗакрытыеЗаказыОбороты.ВыгруженныйОбъемОборот) КАК ВыгруженныйОбъемОборот
	//            |ПОМЕСТИТЬ ВТ_ЗакрытыеЗаказыОбороты
	//            |ИЗ
	//            |	РегистрНакопления.ЗакрытыеЗаказы.Обороты(
	//            |			&НачДата,
	//            |			&КонДата,
	//            |			Регистратор,
	//            |			СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
	//            |				И ТипЗаказа.Ссылка В (&МасОтб)
	//            |				И ИнтернетМагазин В (&ИнтернетМагазин)
	//            |				И ТерминалДоставки В (&ТерминалДоставки)) КАК ЗакрытыеЗаказыОбороты
	//            |
	//            |СГРУППИРОВАТЬ ПО
	//            |	ЗакрытыеЗаказыОбороты.ТипЗаказа,
	//            |	ЗакрытыеЗаказыОбороты.ЮрЛицо,
	//            |	ЗакрытыеЗаказыОбороты.ОбъемныйБрейк,
	//            |	ЗакрытыеЗаказыОбороты.ТерминалПриёма,
	//            |	ЗакрытыеЗаказыОбороты.ПричинаОтклоненияЗаказа,
	//            |	ЗакрытыеЗаказыОбороты.ЗонаТарификации,
	//            |	ЗакрытыеЗаказыОбороты.ТарифнаяСеткаПартнера,
	//            |	ЗакрытыеЗаказыОбороты.РасчетныйБрейк,
	//            |	ЗакрытыеЗаказыОбороты.ТарифнаяСетка,
	//            |	ЗакрытыеЗаказыОбороты.ВидVip,
	//            |	ЗакрытыеЗаказыОбороты.VIPДоставка,
	//            |	ЗакрытыеЗаказыОбороты.ПричинаОтказа,
	//            |	ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина,
	//            |	ЗакрытыеЗаказыОбороты.ПричинаНевыполнения,
	//            |	ЗакрытыеЗаказыОбороты.СтатусЗаказа,
	//            |	ЗакрытыеЗаказыОбороты.ТипОплаты,
	//            |	ЗакрытыеЗаказыОбороты.Реализация,
	//            |	ЗакрытыеЗаказыОбороты.Клиент,
	//            |	ЗакрытыеЗаказыОбороты.Экспедитор,
	//            |	ЗакрытыеЗаказыОбороты.Водитель,
	//            |	ЗакрытыеЗаказыОбороты.КатегорияДоставки,
	//            |	ЗакрытыеЗаказыОбороты.ИнтернетМагазин,
	//            |	ЗакрытыеЗаказыОбороты.Транспорт,
	//            |	ЗакрытыеЗаказыОбороты.Период,
	//            |	ЗакрытыеЗаказыОбороты.ТерминалДоставки,
	//            |	ЗакрытыеЗаказыОбороты.Партнер
	//            |;
	//            |
	//            |////////////////////////////////////////////////////////////////////////////////
	//            |ВЫБРАТЬ
	//            |	МАКСИМУМ(ФактическийПриходЗаказовНаСкладЗаказы.Ссылка) КАК Ссылка,
	//            |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ
	//            |ПОМЕСТИТЬ ВТ_ФактическийПриход
	//            |ИЗ
	//            |	Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы,
	//            |	ВТ_ЗакрытыеЗаказыОбороты КАК ВТ_ЗакрытыеЗаказыОбороты
	//            |
	//            |СГРУППИРОВАТЬ ПО
	//            |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ
	//            |;
	//            |
	//            |////////////////////////////////////////////////////////////////////////////////
	//            |ВЫБРАТЬ
	//            |	ЕСТЬNULL(ВТ_ЗакрытыеЗаказыОбороты.Реализация.Номер, """") КАК НомерЗаказа,
	//            |	ВТ_ЗакрытыеЗаказыОбороты.Реализация.Дата КАК ДатаДоставки,
	//            |	ВЫБОР
	//            |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот < 0
	//            |			ТОГДА 0
	//            |		ИНАЧЕ ВТ_ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот
	//            |	КОНЕЦ КАК ОценочнаяСтоимостьСтарая,
	//            |	ВЫБОР
	//            |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
	//            |				И ВТ_ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот <> 0
	//            |			ТОГДА 0
	//            |		ИНАЧЕ ВТ_ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот
	//            |	КОНЕЦ КАК ПолученоСКлиентаСтарая,
	//            |	ВЫБОР
	//            |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.Наличные)
	//            |			ТОГДА ВЫБОР
	//            |					КОГДА ВТ_ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
	//            |						ТОГДА 0
	//            |					ИНАЧЕ ВТ_ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ВТ_ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот
	//            |				КОНЕЦ
	//            |		ИНАЧЕ 0
	//            |	КОНЕЦ КАК ЗаДоставку,
	//            |	ВТ_ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ВТ_ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждение,
	//            |	ВТ_ЗакрытыеЗаказыОбороты.УслугиСДЧистыеОборот КАК УслугиЗаДоставку,
	//            |	ВЫБОР
	//            |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
	//            |				И ВТ_ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
	//            |			ТОГДА 0
	//            |		ИНАЧЕ ВТ_ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот
	//            |	КОНЕЦ КАК БанковскаяКомиссия,
	//            |	ВЫБОР
	//            |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
	//            |			ТОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот
	//            |		ИНАЧЕ 0
	//            |	КОНЕЦ КАК Возврат,
	//            |	ВЫБОР
	//            |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
	//            |				И ВТ_ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот - ВТ_ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
	//            |			ТОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот
	//            |		ИНАЧЕ 0
	//            |	КОНЕЦ КАК ЧастичныйВозврат,
	//            |	ЕСТЬNULL(ВТ_РасчетУслугСД.ПоказательУслуг, ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)) КАК ПоказательУслуг,
	//            |	ЕСТЬNULL(ВТ_РасчетУслугСД.Сумма, 0) КАК СуммаУслуг,
	//            |	ВТ_ЗакрытыеЗаказыОбороты.Реализация.Номер КАК Номер,
	//            |	ВТ_ЗакрытыеЗаказыОбороты.УслугиСДОборот + ВТ_ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ВТ_ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот + ЕСТЬNULL(ВТ_Страхование.СуммаДляИзменения, 0) + ЕСТЬNULL(ВТ_Ожидание.СуммаДляИзменения, 0) КАК УслугиСД,
	//            |	ВЫБОР
	//            |		КОГДА ЕСТЬNULL(новаМестнаяДоставка.ТочкаПрибытия.Москва, ИСТИНА) = ИСТИНА
	//            |			ТОГДА ""Москва""
	//            |		ИНАЧЕ ВЫБОР
	//            |				КОГДА новаМестнаяДоставка.ТочкаПрибытия.Москва = ИСТИНА
	//            |					ТОГДА ""Москва""
	//            |				ИНАЧЕ ""МО""
	//            |			КОНЕЦ
	//            |	КОНЕЦ КАК Терр,
	//            |	ЕСТЬNULL(ВТ_ЗакрытыеЗаказыОбороты.Реализация.НомерВнешнегоЗаказа, """""""") КАК ВнешнийНомерЗаказа,
	//            |	ЕСТЬNULL(ВТ_РасчетУслугСД.СуммаПодъем, 0) КАК Подъем,
	//            |	ЕСТЬNULL(ВТ_Страхование.СуммаДляИзменения, 0) КАК Страхование,
	//            |	ЕСТЬNULL(ВТ_Ожидание.СуммаДляИзменения, 0) КАК ОжиданиеНаАдресе,
	//            |	ВТ_ЗакрытыеЗаказыОбороты.ТипЗаказа,
	//            |	ВТ_ТЧЗакрытиеЗаказов.ОценочнаяСтоимость КАК ОценочнаяСтоимостьЯндекс,
	//            |	ВТ_ТЧЗакрытиеЗаказов.Ссылка,
	//            |	0 КАК ОценочнаяСтоимость,
	//            |	ВТ_ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот КАК ПолученоСКлиента,
	//            |	ВТ_ЗакрытыеЗаказыОбороты.ТипОплаты,
	//            |	ВТ_ФактическийПриход.Ссылка.ДатаНачалаВыборки КАК ДатаЗабора,
	//            |	ВТ_ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот КАК СуммаОценочная,
	//            |	ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость КАК ОценочнаяСтоимостьДопПараметры
	//            |ИЗ
	//            |	ВТ_ЗакрытыеЗаказыОбороты КАК ВТ_ЗакрытыеЗаказыОбороты
	//            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетУслугСД КАК ВТ_РасчетУслугСД
	//            |		ПО ВТ_ЗакрытыеЗаказыОбороты.Реализация.Ссылка = ВТ_РасчетУслугСД.Реализация.Ссылка
	//            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЧЗакрытиеЗаказов КАК ВТ_ТЧЗакрытиеЗаказов
	//            |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Страхование КАК ВТ_Страхование
	//            |			ПО ВТ_ТЧЗакрытиеЗаказов.Ссылка = ВТ_Страхование.ЗакрытиеЗаказов
	//            |				И ВТ_ТЧЗакрытиеЗаказов.НомерЗаказа = ВТ_Страхование.НомерЗаказа
	//            |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ожидание КАК ВТ_Ожидание
	//            |			ПО ВТ_ТЧЗакрытиеЗаказов.Ссылка = ВТ_Ожидание.ЗакрытиеЗаказов
	//            |				И ВТ_ТЧЗакрытиеЗаказов.НомерЗаказа = ВТ_Ожидание.НомерЗаказа
	//            |		ПО (ВТ_ТЧЗакрытиеЗаказов.НомерЗаказа = ВЫРАЗИТЬ(ВТ_ЗакрытыеЗаказыОбороты.Реализация КАК Документ.РеализацияТоваровУслуг).Номер)
	//            |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	//            |		ПО (ВЫРАЗИТЬ(ВТ_ЗакрытыеЗаказыОбороты.Реализация КАК Документ.РеализацияТоваровУслуг).Номер = новаМестнаяДоставка.Номер)
	//            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	//            |		ПО (ВЫРАЗИТЬ(ВТ_ЗакрытыеЗаказыОбороты.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка = ДополнительныеПараметрыЗаказа.Заказ)
	//            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФактическийПриход КАК ВТ_ФактическийПриход
	//            |		ПО ВТ_ЗакрытыеЗаказыОбороты.Реализация = ВТ_ФактическийПриход.Заказ
	//            |ГДЕ
	//            |	ВТ_ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
	//            |	И ВТ_ЗакрытыеЗаказыОбороты.ТипЗаказа.Ссылка В(&МасОтб)
	//            |
	//            |УПОРЯДОЧИТЬ ПО
	//            |	НомерЗаказа
	//            |ИТОГИ
	//            |	СУММА(СуммаУслуг)
	//            |ПО
	//            |	НомерЗаказа";
	// <<--- Михушкин 
	
	
	
	
	
	
	
	
	
        Зап = Новый Запрос;
    Зап.Текст = "ВЫБРАТЬ
                |	СУММА(ВЫБОР
                |			КОГДА РасчетУслугСДОбороты.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)
                |				ТОГДА РасчетУслугСДОбороты.СуммаОборот
                |			ИНАЧЕ 0
                |		КОНЕЦ) КАК Сумма,
                |	СУММА(ВЫБОР
                |			КОГДА РасчетУслугСДОбороты.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.Подъем)
                |				ТОГДА РасчетУслугСДОбороты.СуммаОборот
                |			ИНАЧЕ 0
                |		КОНЕЦ) КАК СуммаПодъем,
                |	МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)) КАК ПоказательУслуг,
                |	РасчетУслугСДОбороты.Реализация
                |ПОМЕСТИТЬ ВТ_РасчетУслугСД
                |ИЗ
                |	РегистрНакопления.РасчетУслугСД.Обороты(
                |			&НачДата,
                |			&КонДата,
                |			,
                |			ПоказательУслуг В (ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть), ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.Подъем))
                |				И ТерминалДоставки В (&ТерминалДоставки)) КАК РасчетУслугСДОбороты
                |
                |СГРУППИРОВАТЬ ПО
                |	РасчетУслугСДОбороты.Реализация
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	РасчетУслугСДОбороты.Реализация КАК Заказ,
                |	ЕСТЬNULL(РасчетУслугСДОбороты.СуммаОборот, 0) КАК СуммаДляИзменения
                |ПОМЕСТИТЬ ВТ_Страхование
                |ИЗ
                |	РегистрНакопления.РасчетУслугСД.Обороты(
                |			&НачДата,
                |			&КонДата,
                |			,
                |			Партнер В (&ИнтернетМагазин)
                |				И ТерминалДоставки В (&ТерминалДоставки)
                |				И ПоказательУслуг = &Страхование) КАК РасчетУслугСДОбороты
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	РасчетУслугСДОбороты.Реализация КАК Заказ,
                |	ЕСТЬNULL(РасчетУслугСДОбороты.СуммаОборот, 0) КАК СуммаДляИзменения
                |ПОМЕСТИТЬ ВТ_Ожидание
                |ИЗ
                |	РегистрНакопления.РасчетУслугСД.Обороты(
                |			&НачДата,
                |			&КонДата,
                |			,
                |			ТерминалДоставки В (&ТерминалДоставки)
                |				И Партнер В (&ИнтернетМагазин)
                |				И ПоказательУслуг = &Ожидание) КАК РасчетУслугСДОбороты
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	ЗакрытыеЗаказы.ЮрЛицо,
                |	ЗакрытыеЗаказы.ТипЗаказа,
                |	ЗакрытыеЗаказы.Транспорт,
                |	ЗакрытыеЗаказы.ИнтернетМагазин,
                |	ЗакрытыеЗаказы.КатегорияДоставки,
                |	ЗакрытыеЗаказы.Водитель,
                |	ЗакрытыеЗаказы.Экспедитор,
                |	ЗакрытыеЗаказы.Клиент,
                |	ЗакрытыеЗаказы.Реализация,
                |	ЗакрытыеЗаказы.ТипОплаты,
                |	ЗакрытыеЗаказы.СтатусЗаказа,
                |	ЗакрытыеЗаказы.ПричинаНевыполнения,
                |	ЗакрытыеЗаказы.СтатусИнтернетМагазина,
                |	ЗакрытыеЗаказы.ПричинаОтказа,
                |	ЗакрытыеЗаказы.VIPДоставка,
                |	ЗакрытыеЗаказы.ВидVip,
                |	ЗакрытыеЗаказы.ТарифнаяСетка,
                |	ЗакрытыеЗаказы.РасчетныйБрейк,
                |	ЗакрытыеЗаказы.ТарифнаяСеткаПартнера,
                |	ЗакрытыеЗаказы.ЗонаТарификации,
                |	ЗакрытыеЗаказы.ПричинаОтклоненияЗаказа,
                |	ЗакрытыеЗаказы.Партнер,
                |	ЗакрытыеЗаказы.ТерминалДоставки,
                |	ЗакрытыеЗаказы.ТерминалПриёма,
                |	ЗакрытыеЗаказы.ОбъемныйБрейк,
                |	СУММА(ЗакрытыеЗаказы.СуммаОценочная) КАК СуммаОценочнаяОборот,
                |	СУММА(ЗакрытыеЗаказы.СуммаПолученная) КАК СуммаПолученнаяОборот,
                |	СУММА(ЗакрытыеЗаказы.СуммаДоставкиДоМКАД) КАК СуммаДоставкиДоМКАДОборот,
                |	СУММА(ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД) КАК СуммаДоставкиЗаМКАДОборот,
                |	СУММА(ЗакрытыеЗаказы.УслугиСД) КАК УслугиСДОборот,
                |	СУММА(ЗакрытыеЗаказы.БанковскаяКомиссия) КАК БанковскаяКомиссияОборот,
                |	СУММА(ЗакрытыеЗаказы.КассовоеОбслуживание) КАК КассовоеОбслуживаниеОборот,
                |	СУММА(ЗакрытыеЗаказы.СуммаВозврата) КАК СуммаВозвратаОборот,
                |	СУММА(ЗакрытыеЗаказы.Масса) КАК МассаОборот,
                |	СУММА(ЗакрытыеЗаказы.СуммаЧастичногоВозврата) КАК СуммаЧастичногоВозвратаОборот,
                |	СУММА(ЗакрытыеЗаказы.ОплаченоКлиентовНал) КАК ОплаченоКлиентовНалОборот,
                |	СУММА(ЗакрытыеЗаказы.АгентскоеВознаграждение) КАК АгентскоеВознаграждениеОборот,
                |	СУММА(ЗакрытыеЗаказы.ПредоплатаПоКредиту) КАК ПредоплатаПоКредитуОборот,
                |	СУММА(ЗакрытыеЗаказы.УслугиСДЧистые) КАК УслугиСДЧистыеОборот,
                |	СУММА(ЗакрытыеЗаказы.СтраховойСбор) КАК СтраховойСборОборот,
                |	СУММА(ЗакрытыеЗаказы.ФактическийВес) КАК ФактическийВесОборот,
                |	СУММА(ЗакрытыеЗаказы.ОбъемЗабора) КАК ОбъемЗабораОборот,
                |	СУММА(ЗакрытыеЗаказы.ОбъемЗабораПоЗаказам) КАК ОбъемЗабораПоЗаказамОборот,
                |	СУММА(ЗакрытыеЗаказы.ВыгруженныйОбъем) КАК ВыгруженныйОбъемОборот,
                |	СУММА(ЗакрытыеЗаказы.ТарифицируемыйВес) КАК ТарифицируемыйВесОборот,
                |	ЗакрытыеЗаказы.Поступление КАК Поступление,
                |	ЗакрытыеЗаказы.Списание,
                |	ЗакрытыеЗаказы.Оприходование,
                |	ЗакрытыеЗаказы.Перемещение,
                |	ЗакрытыеЗаказы.Доставка,
                |	ЗакрытыеЗаказы.Возврат,
                |	ЗакрытыеЗаказы.ПризнакВозврата,
                |	МАКСИМУМ(ЗакрытыеЗаказы.ОценочнаяСтоимость) КАК ОценочнаяСтоимость
                |ПОМЕСТИТЬ ВТ_ЗакрытыеЗакзы_ПсевдоОбороты
                |ИЗ
                |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
                |ГДЕ
                |	ЗакрытыеЗаказы.Период МЕЖДУ &НачДата И &КонДата
                |	И ЗакрытыеЗаказы.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
                |	И ЗакрытыеЗаказы.ТипЗаказа.Ссылка В(&МасОтб)
                |	И ЗакрытыеЗаказы.ИнтернетМагазин В(&ИнтернетМагазин)
                |	И ЗакрытыеЗаказы.ТерминалДоставки В(&ТерминалДоставки)
                |
                |СГРУППИРОВАТЬ ПО
                |	ЗакрытыеЗаказы.КатегорияДоставки,
                |	ЗакрытыеЗаказы.ИнтернетМагазин,
                |	ЗакрытыеЗаказы.Экспедитор,
                |	ЗакрытыеЗаказы.Водитель,
                |	ЗакрытыеЗаказы.ТипЗаказа,
                |	ЗакрытыеЗаказы.ЮрЛицо,
                |	ЗакрытыеЗаказы.Транспорт,
                |	ЗакрытыеЗаказы.Клиент,
                |	ЗакрытыеЗаказы.Реализация,
                |	ЗакрытыеЗаказы.ТипОплаты,
                |	ЗакрытыеЗаказы.СтатусЗаказа,
                |	ЗакрытыеЗаказы.ПричинаНевыполнения,
                |	ЗакрытыеЗаказы.СтатусИнтернетМагазина,
                |	ЗакрытыеЗаказы.ПричинаОтказа,
                |	ЗакрытыеЗаказы.VIPДоставка,
                |	ЗакрытыеЗаказы.ВидVip,
                |	ЗакрытыеЗаказы.ТарифнаяСетка,
                |	ЗакрытыеЗаказы.РасчетныйБрейк,
                |	ЗакрытыеЗаказы.ТарифнаяСеткаПартнера,
                |	ЗакрытыеЗаказы.ЗонаТарификации,
                |	ЗакрытыеЗаказы.ПричинаОтклоненияЗаказа,
                |	ЗакрытыеЗаказы.Партнер,
                |	ЗакрытыеЗаказы.ТерминалДоставки,
                |	ЗакрытыеЗаказы.ТерминалПриёма,
                |	ЗакрытыеЗаказы.ОбъемныйБрейк,
                |	ЗакрытыеЗаказы.Поступление,
                |	ЗакрытыеЗаказы.Списание,
                |	ЗакрытыеЗаказы.Оприходование,
                |	ЗакрытыеЗаказы.Перемещение,
                |	ЗакрытыеЗаказы.Доставка,
                |	ЗакрытыеЗаказы.Возврат,
                |	ЗакрытыеЗаказы.ПризнакВозврата
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	ЗакрытыеЗаказыОбороты.Период,
                |	ЗакрытыеЗаказыОбороты.ЮрЛицо,
                |	ЗакрытыеЗаказыОбороты.ТипЗаказа,
                |	ЗакрытыеЗаказыОбороты.Транспорт,
                |	ЗакрытыеЗаказыОбороты.ИнтернетМагазин,
                |	ЗакрытыеЗаказыОбороты.КатегорияДоставки,
                |	ЗакрытыеЗаказыОбороты.Водитель,
                |	ЗакрытыеЗаказыОбороты.Экспедитор,
                |	ЗакрытыеЗаказыОбороты.Клиент,
                |	ЗакрытыеЗаказыОбороты.Реализация,
                |	ЗакрытыеЗаказыОбороты.ТипОплаты,
                |	ЗакрытыеЗаказыОбороты.СтатусЗаказа,
                |	ЗакрытыеЗаказыОбороты.ПричинаНевыполнения,
                |	ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина,
                |	ЗакрытыеЗаказыОбороты.ПричинаОтказа,
                |	ЗакрытыеЗаказыОбороты.VIPДоставка,
                |	ЗакрытыеЗаказыОбороты.ВидVip,
                |	ЗакрытыеЗаказыОбороты.ТарифнаяСетка,
                |	ЗакрытыеЗаказыОбороты.РасчетныйБрейк,
                |	ЗакрытыеЗаказыОбороты.ТарифнаяСеткаПартнера,
                |	ЗакрытыеЗаказыОбороты.ЗонаТарификации,
                |	ЗакрытыеЗаказыОбороты.ПричинаОтклоненияЗаказа,
                |	ЗакрытыеЗаказыОбороты.Партнер,
                |	ЗакрытыеЗаказыОбороты.ТерминалДоставки,
                |	ЗакрытыеЗаказыОбороты.ТерминалПриёма,
                |	ЗакрытыеЗаказыОбороты.ОбъемныйБрейк,
                |	ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот КАК СуммаОценочнаяОборот,
                |	ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот КАК СуммаПолученнаяОборот,
                |	ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот КАК СуммаДоставкиДоМКАДОборот,
                |	ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот КАК СуммаДоставкиЗаМКАДОборот,
                |	ЗакрытыеЗаказыОбороты.УслугиСДОборот КАК УслугиСДОборот,
                |	ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот КАК БанковскаяКомиссияОборот,
                |	ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот КАК КассовоеОбслуживаниеОборот,
                |	ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот КАК СуммаВозвратаОборот,
                |	ЗакрытыеЗаказыОбороты.МассаОборот КАК МассаОборот,
                |	ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот КАК СуммаЧастичногоВозвратаОборот,
                |	ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот КАК ОплаченоКлиентовНалОборот,
                |	ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждениеОборот,
                |	ЗакрытыеЗаказыОбороты.ПредоплатаПоКредитуОборот КАК ПредоплатаПоКредитуОборот,
                |	ЗакрытыеЗаказыОбороты.УслугиСДЧистыеОборот КАК УслугиСДЧистыеОборот,
                |	ЗакрытыеЗаказыОбороты.СтраховойСборОборот КАК СтраховойСборОборот,
                |	ЗакрытыеЗаказыОбороты.ФактическийВесОборот КАК ФактическийВесОборот,
                |	ЗакрытыеЗаказыОбороты.ОбъемЗабораОборот КАК ОбъемЗабораОборот,
                |	ЗакрытыеЗаказыОбороты.ОбъемЗабораПоЗаказамОборот КАК ОбъемЗабораПоЗаказамОборот,
                |	ЗакрытыеЗаказыОбороты.ВыгруженныйОбъемОборот КАК ВыгруженныйОбъемОборот
                |ПОМЕСТИТЬ ВТ_ЗакрытыеЗаказыОбороты
                |ИЗ
                |	РегистрНакопления.ЗакрытыеЗаказы.Обороты(
                |			&НачДата,
                |			&КонДата,
                |			Регистратор,
                |			СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
                |				И ТипЗаказа.Ссылка В (&МасОтб)
                |				И ИнтернетМагазин В (&ИнтернетМагазин)
                |				И ТерминалДоставки В (&ТерминалДоставки)) КАК ЗакрытыеЗаказыОбороты
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	МАКСИМУМ(ФактическийПриходЗаказовНаСкладЗаказы.Ссылка) КАК Ссылка,
                |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ
                |ПОМЕСТИТЬ ВТ_ФактическийПриход
                |ИЗ
                |	ВТ_ЗакрытыеЗакзы_ПсевдоОбороты КАК ВТ_ЗакрытыеЗакзы_ПсевдоОбороты
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
                |		ПО ВТ_ЗакрытыеЗакзы_ПсевдоОбороты.Реализация = ФактическийПриходЗаказовНаСкладЗаказы.Заказ
                |ГДЕ
                |	ФактическийПриходЗаказовНаСкладЗаказы.Контрагент В(&ИнтернетМагазин)
                |
                |СГРУППИРОВАТЬ ПО
                |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	ЕСТЬNULL(ВТ_ЗакрытыеЗаказыОбороты.Реализация.Номер, """") КАК НомерЗаказа,
                |	ВТ_ЗакрытыеЗаказыОбороты.Реализация.Дата КАК ДатаДоставки,
                |	ВЫБОР
                |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот < 0
                |			ТОГДА 0
                |		ИНАЧЕ ВТ_ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот
                |	КОНЕЦ КАК ОценочнаяСтоимостьСтарая,
                |	ВЫБОР
                |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
                |				И ВТ_ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот <> 0
                |			ТОГДА 0
                |		ИНАЧЕ ВТ_ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот
                |	КОНЕЦ КАК ПолученоСКлиентаСтарая,
                |	ВЫБОР
                |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.Наличные)
                |			ТОГДА ВЫБОР
                |					КОГДА ВТ_ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |						ТОГДА 0
                |					ИНАЧЕ ВТ_ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ВТ_ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот
                |				КОНЕЦ
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК ЗаДоставку,
                |	ВТ_ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ВТ_ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждение,
                |	ВТ_ЗакрытыеЗаказыОбороты.УслугиСДЧистыеОборот КАК УслугиЗаДоставку,
                |	ВЫБОР
                |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
                |				И ВТ_ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |			ТОГДА 0
                |		ИНАЧЕ ВТ_ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот
                |	КОНЕЦ КАК БанковскаяКомиссия,
                |	ВЫБОР
                |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
                |			ТОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК Возврат,
                |	ВЫБОР
                |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                |				И ВТ_ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот - ВТ_ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
                |			ТОГДА ВТ_ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК ЧастичныйВозврат,
                |	ЕСТЬNULL(ВТ_РасчетУслугСД.ПоказательУслуг, ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)) КАК ПоказательУслуг,
                |	ЕСТЬNULL(ВТ_РасчетУслугСД.Сумма, 0) КАК СуммаУслуг,
                |	ВТ_ЗакрытыеЗаказыОбороты.Реализация.Номер КАК Номер,
				//+++ БАО 13.06.2017 №1070  
				//|	ВЫБОР
				//|		КОГДА ЕСТЬNULL(новаМестнаяДоставка.ТочкаПрибытия.Москва, ИСТИНА) = ИСТИНА
				//|			ТОГДА ""Москва""
				//|		ИНАЧЕ ВЫБОР
				//|				КОГДА новаМестнаяДоставка.ТочкаПрибытия.Москва = ИСТИНА
				//|					ТОГДА ""Москва""
				//|				ИНАЧЕ ""МО""
				//|			КОНЕЦ
				//|	КОНЕЦ КАК Терр,
				|	ВТ_ЗакрытыеЗаказыОбороты.ЗонаТарификации.Наименование КАК Терр,
				//--- БАО 13.06.2017 №1070
                |	ЕСТЬNULL(ВТ_ЗакрытыеЗаказыОбороты.Реализация.НомерВнешнегоЗаказа, """""""") КАК ВнешнийНомерЗаказа,
                |	ЕСТЬNULL(ВТ_РасчетУслугСД.СуммаПодъем, 0) КАК Подъем,
                |	ВТ_ЗакрытыеЗаказыОбороты.ТипЗаказа,
                |	0 КАК ОценочнаяСтоимость,
                |	ВТ_ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот КАК ПолученоСКлиента,
                |	ВТ_ЗакрытыеЗаказыОбороты.ТипОплаты,
                |	ВТ_ФактическийПриход.Ссылка.ДатаНачалаВыборки КАК ДатаЗабора,
                |	ВТ_ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот КАК СуммаОценочная,
                |	ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость КАК ОценочнаяСтоимостьДопПараметры,
                |	ЕСТЬNULL(ВТ_Ожидание.СуммаДляИзменения, 0) КАК ОжиданиеНаАдресе,
                |	ЕСТЬNULL(ВТ_Страхование.СуммаДляИзменения, 0) КАК Страхование,
                |	ВТ_ЗакрытыеЗаказыОбороты.ТерминалДоставки,
                |	ВТ_ЗакрытыеЗаказыОбороты.ТерминалПриёма,
                |	ВТ_ЗакрытыеЗаказыОбороты.ТарифицируемыйВесОборот,
                |	ВЫБОР
                |		КОГДА ВТ_РасчетУслугСД.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаУслугСД.ДоставкаСТерминалаВыдачиНаТерминалПриема)
                |			ТОГДА ВЫБОР
                |					КОГДА ВТ_ЗакрытыеЗаказыОбороты.ТерминалДоставки = ВТ_ЗакрытыеЗаказыОбороты.ТерминалПриёма
                |						ТОГДА ВТ_РасчетУслугСД.Сумма
                |					ИНАЧЕ ВТ_РасчетУслугСД.Сумма * 1.5
                |				КОНЕЦ
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК Сумма,
                |	ВЫБОР
                |		КОГДА ВТ_ЗакрытыеЗаказыОбороты.ЗонаТарификации = &МоскваТер
                |			ТОГДА ""Москва""
                |		ИНАЧЕ ВТ_ЗакрытыеЗаказыОбороты.ЗонаТарификации
                |	КОНЕЦ КАК ЗонаТарификации
                |ИЗ
                |	ВТ_ЗакрытыеЗакзы_ПсевдоОбороты КАК ВТ_ЗакрытыеЗаказыОбороты
                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетУслугСД КАК ВТ_РасчетУслугСД
                |		ПО ВТ_ЗакрытыеЗаказыОбороты.Реализация.Ссылка = ВТ_РасчетУслугСД.Реализация.Ссылка
                |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
                |		ПО (ВЫРАЗИТЬ(ВТ_ЗакрытыеЗаказыОбороты.Реализация КАК Документ.РеализацияТоваровУслуг).Номер = новаМестнаяДоставка.Номер)
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
                |		ПО (ВЫРАЗИТЬ(ВТ_ЗакрытыеЗаказыОбороты.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка = ДополнительныеПараметрыЗаказа.Заказ)
                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФактическийПриход КАК ВТ_ФактическийПриход
                |		ПО ВТ_ЗакрытыеЗаказыОбороты.Реализация = ВТ_ФактическийПриход.Заказ
                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ожидание КАК ВТ_Ожидание
                |		ПО ВТ_ЗакрытыеЗаказыОбороты.Реализация = ВТ_Ожидание.Заказ
                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Страхование КАК ВТ_Страхование
                |		ПО ВТ_ЗакрытыеЗаказыОбороты.Реализация = ВТ_Страхование.Заказ
                |ГДЕ
                |	ВТ_ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
                |	И ВТ_ЗакрытыеЗаказыОбороты.ТипЗаказа.Ссылка В(&МасОтб)
                |
                |УПОРЯДОЧИТЬ ПО
                |	НомерЗаказа
                |ИТОГИ
                |	СУММА(СуммаУслуг)
                |ПО
                |	НомерЗаказа";
	
    Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
    Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
    Зап.УстановитьПараметр("ИнтернетМагазин", Контрагенты);
    Зап.УстановитьПараметр("Страхование",Справочники.ПоказателиРасчетаУслугСД.НайтиПоКоду("00000000006"));
    Зап.УстановитьПараметр("Ожидание",Справочники.ПоказателиРасчетаУслугСД.НайтиПоКоду("00000000007"));
	Зап.УстановитьПараметр("МоскваТер",Справочники.ГруппыРайонов.НайтиПоКоду("00000000030"));
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		Зап.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
		СписокТерминалов = Новый СписокЗначений;
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
	    Зап.УстановитьПараметр("ТерминалДоставки", СписокТерминалов);
	КонецЕсли;
    
    //КонтрагентПапка = Справочники.Контрагенты.НайтиПоКоду("Shop_92");
    
    //Зап.УстановитьПараметр("ИнтернетМагазинПапка", КонтрагентПапка);
    Зап.УстановитьПараметр("МасОтб", МасОтб);
    
    Мак = ПолучитьМакет("МакетЯндекс");
    ОблШ = Мак.ПолучитьОбласть("Шапка|Основное");
    ОблС = Мак.ПолучитьОбласть("Строка|Основное");
    
    
    ОблШП = Мак.ПолучитьОбласть("Шапка|Показатель");
    ОблСП = Мак.ПолучитьОбласть("Строка|Показатель");
    
    ОблШТ = Мак.ПолучитьОбласть("Шапка|Терр");
    ОблСТ = Мак.ПолучитьОбласть("Строка|Терр");
    
    ////Серегин М.В. 06.05.2015 11:15:34 Получим данные для печати
    //ДанныеДляПечати =  СобратьДанныеДляПечати(Контрагент,КонДата);
    ////Серегин М.В. 06.05.2015 14:05:11 
    //
    //Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование,ИНН,КПП");
    ////Агент = "ООО ""Логистическая компания ""Стриж"" ИНН 7715876568 КПП 771501001";
    //Агент = ДанныеДляПечати.Агент;
    //Параметр1 = ДанныеДляПечати.Параметр1; 
    //Параметр2 = ДанныеДляПечати.Параметр2;
    //ОблШ.Параметры.Параметр1 = Параметр1;
    //ОблШ.Параметры.Параметр2 = Параметр2;
    //ОблШ.Параметры.Принципал = Принципал;
    //ОблШ.Параметры.Агент = Агент;
    //ОблШ.Параметры.ИнтернетМагазин = Контрагент.Наименование;
    //ОблШ.Параметры.Период = ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
    ОблШ.Параметры.ПериодДоставки = "период доставки: " + ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
    ОблШ.Параметры.НачалоПериода = Формат(НачДата,"ДЛФ=DD");
    ОблШ.Параметры.КонецПериода = Формат(КонДата,"ДЛФ=DD");
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		ОблШ.Параметры.Терминал = Терминал;
	КонецЕсли;
	
    //

    //////Серегин М.В. 05.05.2015 12:52:26 Старый вариант 
    ////Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем Принципал, в лице " + Должность + "" + ДиректорПринципала + ", с одной стороны, и Общество с ограниченной ответственностью ""Логистическая компания ""Стриж"", именуемое в дальнейшем Агент, в лице генерального директора Копытина А.А., именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агенсткого договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
    ////Серегин М.В. 05.05.2015 12:52:41 новый вариант
    //Параметр1 = ДанныеДляПечати.Параметр1; 
    //Параметр2 = ДанныеДляПечати.Параметр2;
    //Должность = ДанныеДляПечати.ДолжностьВЛице;
    //ДиректорПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
    //ОрганизацияПолноеНаименование = ДанныеДляПечати.Организация.НаименованиеПолное;
    //ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице;
    //ФИОРуководителяАгента = ДанныеДляПечати.ФИОРуководителяВлице;
    //
    //Если Контрагент.Код = "Shop_169 " Тогда
    //    Если ТипДанных = "Отказы" Тогда
    //        Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности №929/14 от 25.12.2014, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были обработаны следующие заказы";
    //    Иначе    
    //        Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + " по доверенности №929/14 от 25.12.2014, с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
    //    КонецЕсли;
    //Иначе
    //    Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем "+Параметр1+", в лице " + НРег(Должность) + " " + ДиректорПринципала + ", с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем "+Параметр2+", в лице "+НРег(ДолжностьАгента)+" "+ФИОРуководителяАгента+", именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
    //КонецЕсли;
    ////Серегин М.В. 05.05.2015 12:52:46 
    //
    //ОблШ.Параметры.Стр = Стр;
    
    Таб.Вывести(ОблШ);
    //
    //Для Каждого Тек Из ТабУслугДоставки Цикл
		ОблШП.Параметры.ИмяПоказателя = "Тариф за возврат заказа";
        Таб.Присоединить(ОблШП);
        ОблШП.Параметры.ИмяПоказателя = "Терминал приемки";
        Таб.Присоединить(ОблШП);
		ОблШП.Параметры.ИмяПоказателя = "Терминал доставки";
        Таб.Присоединить(ОблШП);
    //КонецЦикла;	
    
    Таб.Присоединить(ОблШТ);
    
    ИТОц = 0;
    ИтПол = 0;
    ИТДост = 0;
    ИтАг = 0;
    ИТУсл = 0;
    ИТБанк = 0;
    ИТВозв = 0;
    ИТУслЗаДост = 0;
    ИтОжНаАдр = 0;
    ИтПодъем = 0;
    ИтСтрах = 0;
    
    НПП = 1;
    Выб = Зап.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    Пока Выб.Следующий() Цикл
        ВыбДет = Выб.Выбрать();
        Терр = "";
        ТП = Новый ТаблицаЗначений;
        ТП.Колонки.Добавить("ПоказательУслуг");
        ТП.Колонки.Добавить("СуммаУслуг");
        ИтСум = Выб.СуммаУслуг;
        Пока Выбдет.Следующий() Цикл
            Если ВыбДет.ПоказательУслуг = Справочники.ПоказателиРасчетаУслугСД.ОсновнаяЧасть Тогда
                ЗаполнитьЗначенияСвойств(ОблС.Параметры, ВыбДет);
                ОблС.Параметры.НПП = НПП;
                //Серегин М.В. 09.07.2015 12:12:31 
                ОблС.Параметры.ОжиданиеНаАдресе = ВыбДет.ОжиданиеНаАдресе;
                ОблС.Параметры.Подъем = ВыбДет.Подъем;
                ОблС.Параметры.Страхование = ВыбДет.Страхование;
                //Серегин М.В. 09.07.2015 12:13:04                 
                //ОблС.Параметры.УслугиСД = ОблС.Параметры.УслугиСД + ИтСум - ОблС.Параметры.УслугиЗаДоставку;  
                ОблС.Параметры.УслугиЗаДоставку = ВыбДет.УслугиЗаДоставку;
                НайОбм = РезОбмены.Найти(ВыбДет.Номер);
				//Если НайОбм <> Неопределено Тогда
				//    ОблС.Параметры.ОценочнаяСтоимость = НайОбм.Сумма;
				//КонецеСли;	
				
				ОблС.Параметры.ОценочнаяСтоимость = ВыбДет.ОценочнаяСтоимостьДопПараметры;
                
				
				НПП = НПП + 1;
                
                Если НайОбм <> Неопределено Тогда
                    ИТОц = ИТОц + НайОбм.Сумма;
                Иначе	
                    ИТОц = ИТОц + ВыбДет.ОценочнаяСтоимость;
                КонецеСли;	
                ИтПол = ИтПол + ВыбДет.ПолученоСКлиента;
                ИТДост = ИТДост + ВыбДет.ЗаДоставку;
                ИтАг = ИтАг + ВыбДет.АгентскоеВознаграждение;
                //Серегин М.В. 09.07.2015 11:57:26 
                //ИТУсл = ИТУсл + ВыбДет.УслугиСД;
                //Серегин М.В. 09.07.2015 11:57:29 
                ИТБанк = ИТБанк + ВыбДет.БанковскаяКомиссия;
                //ИТВозв = ИТВозв + ВыбДет.Возврат;
                ИТУслЗаДост = ИТУслЗаДост + ОблС.Параметры.УслугиЗаДоставку;
				//+++ БАО 13.06.2017 №1070
				//---Терр = ВыбДет.ЗонаТарификации; //Терр;.Терр;
				Терр = ВыбДет.Терр;
				//--- БАО 13.06.2017 №1070  
				
				//Серегин М.В. 09.07.2015 11:57:56 
                ИтОжНаАдр = ИтОжНаАдр+ВыбДет.ОжиданиеНаАдресе;
                ИтПодъем = ИтПодъем+ВыбДет.Подъем;
                ИтСтрах = ИтСтрах+ВыбДет.Страхование;
                
                ОблС.Параметры.УслугиСД = ОблС.Параметры.УслугиЗаДоставку  + ОблС.Параметры.ОжиданиеНаАдресе + ОблС.Параметры.Подъем + ОблС.Параметры.Страхование + ОблС.Параметры.АгентскоеВознаграждение+ОблС.Параметры.БанковскаяКомиссия;
				ОблС.Параметры.ТарифицируемыйВес = Формат(ВыбДет.ТарифицируемыйВесОборот, "ЧДЦ=2");
				
				Таб.Вывести(ОблС);
				ОблСП.Параметры.ЗначениеПоказателя = ВыбДет.Сумма;
				Таб.Присоединить(ОблСП);
				ОблСП.Параметры.ЗначениеПоказателя = ВыбДет.ТерминалПриёма;
				Таб.Присоединить(ОблСП);
				ОблСП.Параметры.ЗначениеПоказателя = ВыбДет.ТерминалДоставки;
				Таб.Присоединить(ОблСП);
				
                ИТУсл = ИТУсл + ОблС.Параметры.УслугиСД;
                //Серегин М.В. 09.07.2015 11:57:58 
            //Иначе
            //    Нов = ТП.Добавить();
            //    ЗаполнитьЗначенияСвойств(Нов, ВыбДет);
            КонецеСли;	
        КонецЦикла;
        
        //Для Каждого Тек Из ТабУслугДоставки Цикл
        //    Най = ТП.Найти(Тек.Показатель);
        //    Если Най <> Неопределено Тогда
        //        ОблСП.Параметры.ЗначениеПоказателя = Най.СуммаУслуг;
        //        Тек.Итог = Тек.Итог + Най.СуммаУслуг;
        //    Иначе
        //        ОблСП.Параметры.ЗначениеПоказателя = 0;
        //    КонецеСли;	
        //    Таб.Присоединить(ОблСП);
        //КонецЦикла;	
        ОблСт.Параметры.Терр = Терр;
        Таб.Присоединить(ОблСТ);
    КонецЦикла;	
    НПП = НПП - 1;
    
    ОблП = Мак.получитьОбласть("Подвал|Основное");
    ОблПП = Мак.получитьОбласть("Подвал|Показатель");
    ОблПТ = Мак.получитьОбласть("Подвал|Терр");
    
    ОблП.Параметры.СтрокаИтого = "Итого по " + Строка(НПП) + " заказу(ам): ";
    ОблП.Параметры.ИТОц = ИТОц;
    ОблП.Параметры.ИтПол = ИтПол;
    //ОблП.Параметры.ИТДост = ИТДост;
    ОблП.Параметры.ИтАг = ИтАг;
    ОблП.Параметры.ИТУсл = ИТУсл;
    ОблП.Параметры.ИТБанк = ИТБанк;
    //ОблП.Параметры.ИТВозв = ИТВозв;
    ОблП.Параметры.ИтОжНаАдр = ИтОжНаАдр;
    ОблП.Параметры.ИтПодъем = ИтПодъем;
    ОблП.Параметры.ИтСтрах = ИтСтрах;
    ОблП.Параметры.ИТУслЗаДост = ИТУслЗаДост;
    
    СумВозн = ИТУсл;
    СумКВыплате = 0;
    
    
    
    ОблП.Параметры.ИтогоУслугиСД = Строка(СумВозн)+" руб. "+ "(" + ЧислоПрописью(СумВозн,"Л = ru_RU; ДП = Истина","рубль,рубля,рублей,м,копейка,копейки,копеек,ж")+" (прописью))";
    ОблП.Параметры.ИтогоЗаказов = Строка(НПП)+" "+ "(" + ЧислоПрописью(НПП,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+")";
    
    
    //////Серегин М.В. 05.05.2015 12:59:21 Старый вариант
    ////ОблП.Параметры.Стр = "Общая сумма вознаграждения составила " + СумВозн + " руб. НДС не облагается в связи с применением УСН (п.2 ст.346.11). Стороны не имеют претензий по выполнению работ. Сумма к выплате с учетом удержаний за услуги и агентское вознаграждение составляет " + СумКВыплате + " руб. Услуги по доставке оказаны в полном объеме.";
    ////Серегин М.В. 05.05.2015 13:04:50 новый вариант
    //ОблП.Параметры.Стр = "Общая сумма вознаграждения "+Параметр2+"а по данному отчету "+СумВозн+" руб. "+"(" + ЧислоПрописью(СумВозн,"Л = ru_RU; ДП = Истина","рубль,рубля,рублей,м,копейка,копейки,копеек,ж")+" (прописью))"  + " руб. НДС не облагается  (УСН).Счет-фактура не выставляется (ст.346.11 п.2 НК РФ).";
    //Если ТипДанных = "Отказы" Тогда
    //    ОблП.Параметры.Стр2 = "Общее количество обработанных заказов "+Строка(НПП)+" "+"("+ЧислоПрописью(НПП,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+")"+Символы.ПС+"Заказы обработаны в полном объеме. Стороны не имеют претензий по выполнению работ."+Символы.ПС+"Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";
    //Иначе
    //    ОблП.Параметры.Стр2 = "Общее количество обработанных заказов "+Строка(НПП)+" "+"("+ЧислоПрописью(НПП,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+")"+Символы.ПС+"Услуги по доставке заказов оказаны в полном объеме. Стороны не имеют претензий по выполнению работ."+Символы.ПС+"Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";
    //КонецЕсли;
    //ОблП.Параметры.Параметр1 = Параметр1;
    //ОблП.Параметры.Параметр2 = Параметр2;
    //ОблП.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
    //ОблП.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
    //ОблП.Параметры.ДожностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
    //ОблП.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
    
    
    Таб.Вывести(ОблП);
    
    //Для Каждого Тек Из ТабУслугДоставки Цикл
    //    ОблПП.Параметры.ИтогПоПоказателю = Тек.Итог;
    //    Таб.Присоединить(ОблПП);
    //КонецЦикла;	
    //Таб.Присоединить(ОблПТ);
    
    Таб.Показать("Отчет агента");
КонецПроцедуры	

//Серегин М.В. 08.07.2015 12:52:13 

//Серегин М.В. 05.05.2015 12:50:04 
Функция ПолучитьПараметрыПечатиОтчетаКонтрагента (Контрагент)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ПараметрыПечатиОтчетовАгента.ВариантПечати
    |ИЗ
    |   РегистрСведений.ПараметрыПечатиОтчетовАгента КАК ПараметрыПечатиОтчетовАгента
    |ГДЕ
    |   ПараметрыПечатиОтчетовАгента.Контрагент В (&Контрагент)";
    
    Запрос.УстановитьПараметр("Контрагент", Контрагент);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат ВыборкаДетальныеЗаписи.ВариантПечати;
    Иначе
        Возврат Перечисления.ВариантыПечатиОтчетовАгента.ПринциалАгент;
    КонецЕсли;;
КонецФункции // ()

Функция СобратьДанныеДляПечати(Контрагент,КонДата)
    ДанныеДляПечати = Новый Структура;   
    //Серегин М.В. 06.05.2015 11:10:12 получич варианты печати 
    ВариантПечати = ПолучитьПараметрыПечатиОтчетаКонтрагента(Контрагент);
    Если ВариантПечати = Перечисления.ВариантыПечатиОтчетовАгента.ПринциалАгент Тогда
        Параметр1 = "Принципал"; 
        Параметр2 = "Агент";
	ИначеЕсли ВариантПечати = Перечисления.ВариантыПечатиОтчетовАгента.АгентСубагент Тогда
		Параметр1 = "Агент"; 
		Параметр2 = "Субагент";
	Иначе
        Параметр1 = "Заказчик"; 
        Параметр2 = "Исполнитель";
    КонецЕсли; 
    ДанныеДляПечати.Вставить("Параметр1",Параметр1);
    ДанныеДляПечати.Вставить("Параметр2",Параметр2);
    
    //Серегин М.В. 06.05.2015 10:40:35 получим описание организации
    Отбор = Новый Структура();
    Отбор.Вставить("Контрагент",Контрагент);
    Отбор.Вставить("ТипОплаты",Справочники.ТипыОплат.Наличные);
    Отбор.Вставить("ТипДоставки", Перечисления.ТипыЗаказов.Доставка);
	
	ОрганизацияДоставки	= Контрагент.ОсновнойДоговорКонтрагента.Организация;
	
	Если ЗначениеЗаполнено(ОрганизацияДоставки) Тогда
		Агент = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ОрганизацияДоставки, КонДата),"ПолноеНаименование,ИНН,КПП");
		Организация = ОрганизацияДоставки;
	Иначе
		Организация = Справочники.Организации.ПустаяСсылка();
		Агент = "";	
	КонецЕсли;	
	
	//ЗаписьРегистра = РегистрыСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(КонДата,Отбор);
	//Если ЗаписьРегистра.Количество()>0 Тогда
	//    Организация = ЗаписьРегистра[0].Организация;
	//    Агент = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ЗаписьРегистра[0].Организация, КонДата),"ПолноеНаименование,ИНН,КПП"); 
	//Иначе 
	//    Организация = Справочники.Организации.ПустаяСсылка();
	//    Агент = "";
	//КонецЕсли; 
	
    ДанныеДляПечати.Вставить("Организация",Организация);
    ДанныеДляПечати.Вставить("Агент", Агент);
    
    //Серегин М.В. 06.05.2015 11:54:24 тут должны собираться данные по руководителю организации
    Отбор = Новый Структура();
    Отбор.Вставить("СтруктурнаяЕдиница",Организация);
    Отбор.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
    ЗаписьРегистра = РегистрыСведений.ОтветственныеЛицаОрганизации.СрезПоследних(КонДата,Отбор);
    Если ЗаписьРегистра.Количество()>0 Тогда
        РуководительСсылка = ЗаписьРегистра[0].ФизическоеЛицо;
        ФИО = ФормированиеПечатныхФорм.ФамилияИмяОтчество(РуководительСсылка,КонДата);
        ////Серегин М.В. 22.05.2015 13:37:33 старый вариант
        //ФИОруководителя = ФИО.Фамилия+" "+ФИО.Имя+" "+ФИО.Отчество;
        //Серегин М.В. 22.05.2015 13:37:42 новый  ++++
        ФИОруководителя = ФИО.Фамилия;
        //Просклоняем руководителя "в лице"
        РезультатСклонения = "";
        Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ФИОРуководителя, 2, РуководительСсылка.Пол, РезультатСклонения) Тогда
            ФИОРуководителяВлице  = РезультатСклонения
        Иначе
            ФИОРуководителяВлице =  ФИОРуководителя;
        КонецЕсли;
        //Серегин М.В. 22.05.2015 13:38:09 новый
         ФИОРуководителяВлице =  ФИОРуководителяВлице+" "+Лев(ФИО.Имя,1)+". "+Лев(ФИО.Отчество,1)+".";
         ФИОруководителя =  ФИОруководителя+" "+Лев(ФИО.Имя,1)+". "+Лев(ФИО.Отчество,1)+".";
        //Серегин М.В. 22.05.2015 13:38:18  -----
        
        ДолжностьРуководителяОрганизации = ЗаписьРегистра[0].Должность;	
        ДолжностьРуководителяОрганизацииВлице  = ПросклонятьФразуПоСловам(СокрЛП(ДолжностьРуководителяОрганизации.Наименование),2);
    Иначе
       РуководительСсылка = Справочники.ФизическиеЛица.ПустаяСсылка();
       ФИОРуководителя = "";
       ФИОРуководителяВлице = "";
       ДолжностьРуководителяОрганизации = Справочники.ДолжностиОрганизаций.ПустаяСсылка();
       ДолжностьРуководителяОрганизацииВлице = "";
   КонецЕсли;
   //Серегин М.В. 22.05.2015 13:35:07 костыль
   
    ДанныеДляПечати.Вставить("Руководитель",РуководительСсылка);
    ДанныеДляПечати.Вставить("ФИОРуководителя",ФИОруководителя);
    ДанныеДляПечати.Вставить("ФИОРуководителяВлице",ФИОРуководителяВлице);
    ДанныеДляПечати.Вставить("ДолжностьРуководителяОрганизации",ДолжностьРуководителяОрганизации);
    ДанныеДляПечати.Вставить("ДолжностьРуководителяОрганизацииВлице",ДолжностьРуководителяОрганизацииВлице);
    //Агентский договор
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ЗначенияСвойствОбъектов.Значение
        |ИЗ
        |   РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
        |ГДЕ
        |   ЗначенияСвойствОбъектов.Объект = &Объект
        |   И ЗначенияСвойствОбъектов.Свойство = &Свойство";
    
    Запрос.УстановитьПараметр("Объект", Контрагент);
    Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.ДоговорРуководителя);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если  ВыборкаДетальныеЗаписи.Следующий() Тогда
        ДанныеДляПечати.Вставить("АгентскийДоговор",ВыборкаДетальныеЗаписи.Значение);
    Иначе
        ДанныеДляПечати.Вставить("АгентскийДоговор","");
    КонецЕсли;
    
    //Серегин М.В. 06.05.2015 11:54:40 Данные по директору контрагента
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |	КонтактныеЛицаКонтрагентов.Наименование КАК ИмяЛица,
                   |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица.Наименование КАК Должность,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Фамилия + "" "" + КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Имя + "" "" + КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Отчество КАК ФИО,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Пол КАК Пол,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Фамилия КАК Фамилия,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Имя КАК Имя,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Отчество КАК Отчество
                   |ИЗ
                   |	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
                   |ГДЕ
                   |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица В(&РолиКонтактныхЛиц)
                   |	И КонтактныеЛицаКонтрагентов.Владелец = &Владелец
                   |	И НЕ КонтактныеЛицаКонтрагентов.ПометкаУдаления";
    РолиКонтактныхЛиц = Новый СписокЗначений;
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Гендиректор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Директор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.ИндивидуальныйПредприниматель);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.КоммерческийДиректор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Менеджер);
	
	ЗамГенДиректора = Справочники.РолиКонтактныхЛиц.НайтиПоКоду("000000008");
	Если Не ЗамГенДиректора.Ссылка.Пустая() Тогда
		
		РолиКонтактныхЛиц.Добавить(ЗамГенДиректора);

	КонецЕсли;
	
    Запрос.УстановитьПараметр("РолиКонтактныхЛиц",РолиКонтактныхЛиц);                   
    Запрос.УстановитьПараметр("Владелец", Контрагент);	
    Выборка = Запрос.Выполнить().Выбрать();
    Работник = "";
    ФизЛицоПол = "";
    Имя  ="";
    Отчество = "";
    ДиректорПринципалаВЛице = "";
    Если Выборка.Следующий() Тогда
        Должность = Выборка.Должность;
		НаименованиеДолжности = СокрЛП(Должность);
		НаименованиеДолжности = ?(НаименованиеДолжности = "ИП","индивидуальный предприниматель",НаименованиеДолжности);

        ДолжностьВЛице = ПросклонятьФразуПоСловам(НаименованиеДолжности,2);
        ФИОПринципала = Выборка.ФИО;
        Пол = Выборка.Пол;
        ////Серегин М.В. 22.05.2015 13:41:49 Старый вариант
        //Работник = ФИОПринципала;
        //Серегин М.В. 22.05.2015 13:40:50 Новое
        Работник = Выборка.Фамилия;
        Имя = Выборка.Имя;
        Отчество = Выборка.Отчество;
        //Серегин М.В. 22.05.2015 13:42:44 
        ФизЛицоПол = Пол;
    КонецеСли;
    РезультатСклонения = "";

    Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Работник, 2, ФизЛицоПол, РезультатСклонения) Тогда
        ДиректорПринципалаВЛице    = РезультатСклонения
    КонецЕсли;
    //Серегин М.В. 22.05.2015 13:45:30 
    ДиректорПринципалаВЛице = ДиректорПринципалаВЛице+" "+Лев(Имя,1)+". "+Лев(Отчество,1)+".";
    ДанныеДляПечати.Вставить("Должность",Должность);
    ДанныеДляПечати.Вставить("ДолжностьВлице",ДолжностьВЛице);
    ДанныеДляПечати.Вставить("ДиректорПринципала",Работник+" "+Лев(Имя,1)+". "+Лев(Отчество,1)+".");
    ДанныеДляПечати.Вставить("ДиректорПринципалаВЛице",ДиректорПринципалаВЛице);
    
    Возврат ДанныеДляПечати
    
КонецФункции // СобратьДанныеДляПечати()

Функция ПросклонятьФразуПоСловам(Знач ИсходнаяСтрока, Падеж) Экспорт

    Результат = "";

    ИсходнаяСтрока = СокрЛП(ИсходнаяСтрока);
    Если СтрДлина(ИсходнаяСтрока) = 0 Тогда
        Возврат Результат;
    КонецЕсли;

    Поз = Найти(ИсходнаяСтрока, " ");
    Пока Поз > 0 Цикл

        СловоВПадеже = "";

        Слово = Лев(ИсходнаяСтрока, Поз-1);
		Если Слово = "директора" Тогда Слово = "директор" КонецЕсли;
		
        УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Слово,       Падеж, , СловоВПадеже);

        Результат = СокрЛП(Результат + " " + НРег(СловоВПадеже));
        ИсходнаяСтрока = СокрЛП(Сред(ИсходнаяСтрока, Поз));

        Если ПустаяСтрока(ИсходнаяСтрока) Тогда
            Прервать; // Это перестраховка. Цикл и так должен прерваться
        КонецЕсли;

        Поз = Найти(ИсходнаяСтрока, " ");
    КонецЦикла;

	Если НЕ ПустаяСтрока(ИсходнаяСтрока) Тогда // добавляем заключительное слово
		Если ИсходнаяСтрока = "директора" Тогда ИсходнаяСтрока = "директор" КонецЕсли;
		
        СловоВПадеже = "";
        УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ИсходнаяСтрока, Падеж, , СловоВПадеже);
        Результат = СокрЛП(Результат + " " + НРег(СловоВПадеже));

    КонецЕсли;
    Возврат Результат;

КонецФункции // ПросклонятьФразуПоСловам()

Функция  ПолучитьТекстЗапросаДМНовый()
// Задача № 2901 Справочники.ТипыОплат.БезРасчетов
Возврат "ВЫБРАТЬ
        |	ВложенныйЗапрос.Ссылка,
        |	СУММА(ВложенныйЗапрос.СуммаТоваров) КАК СуммаТоваров,
        |	СУММА(ВложенныйЗапрос.СуммаУслуг) КАК СуммаУслуг
        |ПОМЕСТИТЬ ВТ_СуммаРеализации
        |ИЗ
        |	(ВЫБРАТЬ
        |		РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
        |		РеализацияТоваровУслугТовары.Сумма КАК СуммаТоваров,
        |		0 КАК СуммаУслуг
        |	ИЗ
        |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
        |	ГДЕ
        |		РеализацияТоваровУслугТовары.Ссылка.ТерминалДоставки В (&ТерминалДоставки)
        |	
        |	ОБЪЕДИНИТЬ ВСЕ
        |	
        |	ВЫБРАТЬ
        |		РеализацияТоваровУслугУслуги.Ссылка,
        |		0,
        |		РеализацияТоваровУслугУслуги.Сумма
        |	ИЗ
        |		Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
        |	ГДЕ
        |		РеализацияТоваровУслугУслуги.Ссылка.ТерминалДоставки В (&ТерминалДоставки)) КАК ВложенныйЗапрос
        |
        |СГРУППИРОВАТЬ ПО
        |	ВложенныйЗапрос.Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ЕСТЬNULL(ЗакрытыеЗаказы.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(ЗакрытыеЗаказы.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
        |	ЗакрытыеЗаказы.Реализация.Дата КАК ДатаДоставки,
        |	ЗакрытыеЗаказы.СуммаОценочная КАК ОценочнаяСтоимостьТовары,
        |	ВЫБОР
        |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
        |			ТОГДА ЗакрытыеЗаказы.ОплаченоКлиентовНал
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК ПолученоСКлиента,
        |	ВЫБОР
        |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
        |			ТОГДА ВЫБОР
        |					КОГДА ЗакрытыеЗаказы.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине) ИЛИ ЗакрытыеЗаказы.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.БезРасчетов)
        |						ТОГДА 0
        |					ИНАЧЕ ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД
        |				КОНЕЦ
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК ЗаДоставкуСтарая,
        |	ВЫБОР
        |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
        |			ТОГДА ЗакрытыеЗаказы.КассовоеОбслуживание + ЗакрытыеЗаказы.АгентскоеВознаграждение
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК АгентскоеВознаграждение,
        |	ВЫБОР
        |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
        |			ТОГДА ЗакрытыеЗаказы.УслугиСД - (ЗакрытыеЗаказы.КассовоеОбслуживание + ЗакрытыеЗаказы.АгентскоеВознаграждение)
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК УслугиСД,
        |	ВЫБОР
        |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
        |			ТОГДА ЗакрытыеЗаказы.БанковскаяКомиссия
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК БанковскаяКомиссия,
        |	ВЫБОР
        |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
        |			ТОГДА ВЫБОР
        |					КОГДА ЗакрытыеЗаказы.СуммаОценочная <> 0
        |						ТОГДА ЗакрытыеЗаказы.СуммаВозврата
        |					ИНАЧЕ 0
        |				КОНЕЦ
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК Возврат,
        |	ЗакрытыеЗаказы.СуммаОценочная КАК ЧастичныйВозвратТовары,
        |	ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД КАК ЗаДоставку
        |ПОМЕСТИТЬ ВТ_Объединение
        |ИЗ
        |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
        |		ПО ЗакрытыеЗаказы.Реализация = СтатусыСкладскогоУчета.Заказ
        |			И (СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином))
        |ГДЕ
        |	ЗакрытыеЗаказы.ТипЗаказа.Ссылка В(&МасОтб)
        |	И (ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
        |			ИЛИ ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаБезЗаезда)
        |			ИЛИ ЗакрытыеЗаказы.СтатусИнтернетМагазина = ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.ЗаказОтклонен))
        |	И ЗакрытыеЗаказы.ИнтернетМагазин В(&ИнтернетМагазин)
        |	И СтатусыСкладскогоУчета.Период МЕЖДУ &НачДата И &КонДата
        |	И ЗакрытыеЗаказы.ТерминалДоставки В (&ТерминалДоставки)
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ЕСТЬNULL(РеализацияТоваровУслуг.Номер, """") + ""/"" + ЕСТЬNULL(РеализацияТоваровУслуг.НомерВнешнегоЗаказа, """"),
        |	РеализацияТоваровУслуг.Дата,
        |	ЕСТЬNULL(ВТ_СуммаРеализации.СуммаТоваров, 0),
        |	0,
        |	0,
        |	0,
        |	0,
        |	0,
        |	0,
        |	ЕСТЬNULL(ВТ_СуммаРеализации.СуммаТоваров, 0),
        |	ЕСТЬNULL(ВТ_СуммаРеализации.СуммаУслуг, 0)
        |ИЗ
        |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммаРеализации КАК ВТ_СуммаРеализации
        |			ПО (ВТ_СуммаРеализации.Ссылка = РеализацияТоваровУслуг.Ссылка)
        |		ПО СтатусыСкладскогоУчета.Заказ = РеализацияТоваровУслуг.Ссылка
        |			И (СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ВозвратПринятМагазином))
        |ГДЕ
        |	(РеализацияТоваровУслуг.СтатусИнтернетМагазина = 4
        |			ИЛИ РеализацияТоваровУслуг.ПометкаУдаления)
        |	И РеализацияТоваровУслуг.ВладелецТовара В(&ИнтернетМагазин)
        |	И СтатусыСкладскогоУчета.Период МЕЖДУ &НачДата И &КонДата
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВТ_Объединение.НомерЗаказа,
        |	ВТ_Объединение.ДатаДоставки,
        |	СУММА(ВТ_Объединение.ОценочнаяСтоимостьТовары) КАК ОценочнаяСтоимостьТовары,
        |	СУММА(ВТ_Объединение.ПолученоСКлиента) КАК ПолученоСКлиента,
        |	СУММА(ВТ_Объединение.ЗаДоставкуСтарая) КАК ЗаДоставкуСтарая,
        |	СУММА(ВТ_Объединение.АгентскоеВознаграждение) КАК АгентскоеВознаграждение,
        |	СУММА(ВТ_Объединение.УслугиСД) КАК УслугиСД,
        |	СУММА(ВТ_Объединение.БанковскаяКомиссия) КАК БанковскаяКомиссия,
        |	СУММА(ВТ_Объединение.Возврат) КАК Возврат,
        |	СУММА(ВТ_Объединение.ЧастичныйВозвратТовары) КАК ЧастичныйВозвратТовары,
        |	ВТ_Объединение.ЗаДоставку
        |ПОМЕСТИТЬ ВТ_Итог
        |ИЗ
        |	ВТ_Объединение КАК ВТ_Объединение
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_Объединение.ДатаДоставки,
        |	ВТ_Объединение.НомерЗаказа,
        |	ВТ_Объединение.ЗаДоставку
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВТ_Итог.НомерЗаказа,
        |	ВТ_Итог.ДатаДоставки,
        |	ВТ_Итог.ОценочнаяСтоимостьТовары,
        |	ВТ_Итог.ПолученоСКлиента,
        |	ВТ_Итог.ЗаДоставкуСтарая,
        |	ВТ_Итог.АгентскоеВознаграждение,
        |	ВТ_Итог.УслугиСД,
        |	ВТ_Итог.БанковскаяКомиссия,
        |	ВТ_Итог.Возврат,
        |	ВТ_Итог.ЧастичныйВозвратТовары,
        |	ВТ_Итог.ЗаДоставку,
        |	ВТ_Итог.ОценочнаяСтоимостьТовары + ВТ_Итог.ЗаДоставку КАК ОценочнаяСтоимость,
        |	ВТ_Итог.ЧастичныйВозвратТовары + ВТ_Итог.ЗаДоставку КАК ЧастичныйВозврат
        |ИЗ
        |	ВТ_Итог КАК ВТ_Итог";	

КонецФункции

Функция ПолучитьТаблицуКостыльныхЗаказов(Контрагенты,ДатаНачала,ДатаОкончания, Терминал = Неопределено)
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	РасчетУслугСДОбороты.Реализация.Номер КАК Номер,
        |	РасчетУслугСДОбороты.СуммаОборот КАК Сумма
        |ИЗ
        |	РегистрНакопления.РасчетУслугСД.Обороты(
        |			&ДатаНачала,
        |			&ДатаОкончания,
        |			,
        |			Партнер В (&Контрагенты)
        |				И ТерминалДоставки В (&ТерминалДоставки)) КАК РасчетУслугСДОбороты
        |ГДЕ
        |	РасчетУслугСДОбороты.ПоказательУслуг = &ПоказательУслуг";
    
    Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
    Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
    Запрос.УстановитьПараметр("Контрагенты", Контрагенты);
    Запрос.УстановитьПараметр("ПоказательУслуг", Справочники.ПоказателиРасчетаУслугСД.ВозвратТоваровПоставщику);
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		Запрос.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
		СписокТерминалов = Новый СписокЗначений;
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
	    Запрос.УстановитьПараметр("ТерминалДоставки", СписокТерминалов);
	КонецЕсли;
	
    РезультатЗапроса = Запрос.Выполнить().Выгрузить();
    Возврат РезультатЗапроса;
  
	

КонецФункции // ПолучитьТаблицуКостыльныхЗаказов()

Процедура ВыводНаПечатьМаксиПост(Таб, Контрагент,Контрагенты, НачДата, КонДата, МасОтб, ТипДанных = "Доставки", ТабУслугДоставки = Неопределено, Терминал = Неопределено) Экспорт
		
	
	Зап = Новый Запрос;
    Зап.Текст = "ВЫБРАТЬ
                |	ФиксацияВеса.Заказ КАК Заказ,
                |	МАКСИМУМ(ЕСТЬNULL(ФиксацияВеса.Вес, 0)) КАК Вес
                |ПОМЕСТИТЬ ВТ
                |ИЗ
                |	РегистрСведений.ФиксацияВеса КАК ФиксацияВеса
                |
                |СГРУППИРОВАТЬ ПО
                |	ФиксацияВеса.Заказ
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	ЗакрытыеЗаказы.Реализация КАК Реализация
                |ПОМЕСТИТЬ ВТ_ЗакрытыеЗаказы
                |ИЗ
                |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
                |ГДЕ
                |	ЗакрытыеЗаказы.ИнтернетМагазин В(&ИнтернетМагазин)
                |	И ЗакрытыеЗаказы.ТерминалДоставки В(&ТерминалДоставки)
                |	И ЗакрытыеЗаказы.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
                |	И ЗакрытыеЗаказы.Период МЕЖДУ &НачДата И &КонДата
                |
                |СГРУППИРОВАТЬ ПО
                |	ЗакрытыеЗаказы.Реализация
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	ЗакрытыеЗаказы.ИнтернетМагазин КАК ИнтернетМагазин,
                |	ЗакрытыеЗаказы.КатегорияДоставки КАК КатегорияДоставки,
                |	ЗакрытыеЗаказы.ТипОплаты КАК ТипОплаты,
                |	ЗакрытыеЗаказы.ТерминалДоставки КАК ТерминалДоставки,
                |	ВЫБОР
                |		КОГДА &ПоказатьСуммуОценки
                |			ТОГДА ЕСТЬNULL(ЗакрытыеЗаказы.СуммаОценочнаяОборот, 0)
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК СуммаОценочная,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаПолученнаяОборот < 0
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказы.СуммаПолученнаяОборот
                |	КОНЕЦ КАК СуммаПолученная,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СуммаДоставкиДоМКАДОборот, 0) КАК СуммаДоставкиДоМКАД,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СуммаДоставкиЗаМКАДОборот, 0) КАК СуммаДоставкиЗаМКАД,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.УслугиСДОборот, 0) КАК УслугиСД,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
                |				И ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |			ТОГДА 0
                |		ИНАЧЕ ЕСТЬNULL(ЗакрытыеЗаказы.БанковскаяКомиссияОборот, 0)
                |	КОНЕЦ КАК БанковскаяКомиссия,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.КассовоеОбслуживаниеОборот, 0) КАК КассовоеОбслуживание,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаОценочнаяОборот <> 0
                |			ТОГДА ЕСТЬNULL(ЗакрытыеЗаказы.СуммаВозвратаОборот, 0)
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК СуммаВозврата,
                |	ЗакрытыеЗаказы.МассаОборот КАК МассаОборот,
                |	ЗакрытыеЗаказы.СуммаЧастичногоВозвратаОборот КАК СуммаЧастичногоВозвратаОборот,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаОценочнаяОборот <> 0
                |				И ЗакрытыеЗаказы.СуммаВозвратаОборот <> 0
                |			ТОГДА 0
                |		ИНАЧЕ ЕСТЬNULL(ЗакрытыеЗаказы.ОплаченоКлиентовНалОборот, 0)
                |	КОНЕЦ КАК ОплаченоКлиентовНал,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.АгентскоеВознаграждениеОборот, 0) КАК АгентскоеВознаграждение,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ПредоплатаПоКредитуОборот, 0) КАК ПредоплатаПоКредиту,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.УслугиСДЧистыеОборот, 0) КАК УслугиСДЧистые,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СтраховойСборОборот, 0) КАК СтраховойСбор,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ФактическийВесОборот, 0) КАК ФактическийВес,
                |	ВТ_ЗакрытыеЗаказы.Реализация.Номер КАК Номер,
                |	ВТ_ЗакрытыеЗаказы.Реализация.Дата КАК Дата,
                |	ВТ_ЗакрытыеЗаказы.Реализация.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
                |	ПоступлениеТоваровУслуг.Дата КАК ДатаЗабораТовара,
                |	новаМестнаяДоставка.Ссылка КАК МестнаяДоставка,
                |	ЗакрытыеЗаказы.СтатусЗаказа КАК СтатусЗаказа,
                |	ЕСТЬNULL(ВТ_ЗакрытыеЗаказы.Реализация.ОбщийВес, 0) КАК ОбщийВес,
                |	СУММА(ВЫБОР
                |			КОГДА РасчетУслугСД.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаУслугСД.Подъем)
                |				ТОГДА ЕСТЬNULL(РасчетУслугСД.СуммаОборот, 0)
                |			ИНАЧЕ 0
                |		КОНЕЦ) КАК Подъем,
                |	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ДополнительныйНомерЗаказа, """") КАК ДополнительныйНомерЗаказа,
                |	ЕСТЬNULL(ВТ.Вес, 0) КАК Вес,
                |	ВТ_ЗакрытыеЗаказы.Реализация КАК Реализация,
                |	СУММА(ВЫБОР
                |			КОГДА РасчетУслугСД.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаУслугСД.Бахилы)
                |				ТОГДА ЕСТЬNULL(РасчетУслугСД.СуммаОборот, 0)
                |			ИНАЧЕ 0
                |		КОНЕЦ) КАК Бахилы,
                |	ВТ.Заказ.ЗонаТарификации КАК ЗонаТарификации,
                |	СУММА(ВЫБОР
                |			КОГДА РасчетУслугСД.ПоказательУслуг = &МаркировкаЗаказа
                |				ТОГДА ЕСТЬNULL(РасчетУслугСД.СуммаОборот, 0)
                |			ИНАЧЕ 0
                |		КОНЕЦ) КАК МаркировкаЗаказа,
                |	МАКСИМУМ(ДополнительныеПараметрыЗаказа.Заказ.ЗонаТарификации) КАК ЗаказЗонаТарификации,
                |	ЕСТЬNULL(ВложенныйЗапрос.ВесПотоварный, 0) КАК ВесПотоварный,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ТарифицируемыйВесОборот, 0) КАК ТарифицируемыйВес
                |ИЗ
                |	ВТ_ЗакрытыеЗаказы КАК ВТ_ЗакрытыеЗаказы
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы.Обороты(
                |				&НачДата,
                |				&КонДата,
                |				,
                |				ИнтернетМагазин В (&ИнтернетМагазин)
                |					И ТерминалДоставки В (&ТерминалДоставки)
                |					И СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)) КАК ЗакрытыеЗаказы
                |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
                |			ПО ЗакрытыеЗаказы.Реализация.Номер = ПоступлениеТоваровУслуг.Номер
                |			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
                |			ПО (ВЫРАЗИТЬ(ЗакрытыеЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Номер = новаМестнаяДоставка.Номер)
                |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетУслугСД.Обороты(&НачДата, &КонДата, , ) КАК РасчетУслугСД
                |			ПО ЗакрытыеЗаказы.Реализация = РасчетУслугСД.Реализация
                |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
                |			ПО (ВЫРАЗИТЬ(ЗакрытыеЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка = ДополнительныеПараметрыЗаказа.Заказ)
                |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
                |			ПО ЗакрытыеЗаказы.Реализация = ВТ.Заказ
                |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                |				СУММА(ЕСТЬNULL(РеализацияТоваровУслугТовары.Количество * РеализацияТоваровУслугТовары.Вес, 0)) КАК ВесПотоварный,
                |				РеализацияТоваровУслугТовары.Ссылка КАК Ссылка
                |			ИЗ
                |				Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
                |			ГДЕ
                |				РеализацияТоваровУслугТовары.Ссылка.Ссылка В
                |						(ВЫБРАТЬ
                |							ВТ_ЗакрытыеЗаказы.Реализация
                |						ИЗ
                |							ВТ_ЗакрытыеЗаказы КАК ВТ_ЗакрытыеЗаказы)
                |			
                |			СГРУППИРОВАТЬ ПО
                |				РеализацияТоваровУслугТовары.Ссылка) КАК ВложенныйЗапрос
                |			ПО ЗакрытыеЗаказы.Реализация = ВложенныйЗапрос.Ссылка
                |		ПО ВТ_ЗакрытыеЗаказы.Реализация = ЗакрытыеЗаказы.Реализация
                |
                |СГРУППИРОВАТЬ ПО
                |	ЗакрытыеЗаказы.ИнтернетМагазин,
                |	ЗакрытыеЗаказы.КатегорияДоставки,
                |	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ДополнительныйНомерЗаказа, """"),
                |	ПоступлениеТоваровУслуг.Дата,
                |	ЗакрытыеЗаказы.ТипОплаты,
                |	ЗакрытыеЗаказы.ТерминалДоставки,
                |	новаМестнаяДоставка.Ссылка,
                |	ЗакрытыеЗаказы.СтатусЗаказа,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаОценочнаяОборот <> 0
                |			ТОГДА ЕСТЬNULL(ЗакрытыеЗаказы.СуммаВозвратаОборот, 0)
                |		ИНАЧЕ 0
                |	КОНЕЦ,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
                |				И ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |			ТОГДА 0
                |		ИНАЧЕ ЕСТЬNULL(ЗакрытыеЗаказы.БанковскаяКомиссияОборот, 0)
                |	КОНЕЦ,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаПолученнаяОборот < 0
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказы.СуммаПолученнаяОборот
                |	КОНЕЦ,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.КассовоеОбслуживаниеОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СуммаДоставкиДоМКАДОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СтраховойСборОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СуммаДоставкиЗаМКАДОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.УслугиСДОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СуммаОценочнаяОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.УслугиСДЧистыеОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ФактическийВесОборот, 0),
                |	ЗакрытыеЗаказы.МассаОборот,
                |	ЗакрытыеЗаказы.СуммаЧастичногоВозвратаОборот,
                |	ЕСТЬNULL(ВТ.Вес, 0),
                |	ВТ_ЗакрытыеЗаказы.Реализация.Номер,
                |	ВТ_ЗакрытыеЗаказы.Реализация.Дата,
                |	ВТ_ЗакрытыеЗаказы.Реализация.НомерВнешнегоЗаказа,
                |	ЕСТЬNULL(ВТ_ЗакрытыеЗаказы.Реализация.ОбщийВес, 0),
                |	ВТ_ЗакрытыеЗаказы.Реализация,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаОценочнаяОборот <> 0
                |				И ЗакрытыеЗаказы.СуммаВозвратаОборот <> 0
                |			ТОГДА 0
                |		ИНАЧЕ ЕСТЬNULL(ЗакрытыеЗаказы.ОплаченоКлиентовНалОборот, 0)
                |	КОНЕЦ,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.АгентскоеВознаграждениеОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ПредоплатаПоКредитуОборот, 0),
                |	ВТ.Заказ.ЗонаТарификации,
                |	ЕСТЬNULL(ВложенныйЗапрос.ВесПотоварный, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ТарифицируемыйВесОборот, 0),
                |	ВЫБОР
                |		КОГДА &ПоказатьСуммуОценки
                |			ТОГДА ЕСТЬNULL(ЗакрытыеЗаказы.СуммаОценочнаяОборот, 0)
                |		ИНАЧЕ 0
                |	КОНЕЦ";	
    Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
    Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Зап.УстановитьПараметр("ПоказатьСуммуОценки", Истина);
	
	Зап.УстановитьПараметр("МаркировкаЗаказа", Справочники.ПоказателиРасчетаУслугСД.НайтиПоНаименованию("Маркировка"));
	Если ЗначениеЗаполнено(Контрагенты) Тогда
		Зап.УстановитьПараметр("ИнтернетМагазин", Контрагенты);	
	Иначе
		Зап.УстановитьПараметр("ИнтернетМагазин", Контрагент);
	КонецЕсли;
	
    	
	Если ЗначениеЗаполнено(Терминал) Тогда
		Зап.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
		СписокТерминалов = Новый СписокЗначений;
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
	    Зап.УстановитьПараметр("ТерминалДоставки", СписокТерминалов);
	КонецЕсли;
			
	
	Мак = ПолучитьМакет("МакетМаксиПостНовый");
	
	// данные в зависимости от контрагента
	Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование,ИНН,КПП");
	ДанныеДляПечати = СобратьДанныеДляПечати(Контрагент,КонДата);
	Должность = ДанныеДляПечати.ДолжностьВЛице;
    ДиректорПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
    ОрганизацияПолноеНаименование = ДанныеДляПечати.Организация.НаименованиеПолное;
    ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице;
    ФИОРуководителяАгента = ДанныеДляПечати.ФИОРуководителяВлице;
	ДанныеАгента = ДанныеДляПечати.Агент;
	Агент = ДанныеДляПечати.Организация;
	
	// 2558 Дробница 15.10.2018

	ПоказыватьНДС = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетнаяПолитикаНалоговыйУчетСрезПоследних.ОрганизацияНеЯвляетсяПлательщикомНДС КАК ОрганизацияНеЯвляетсяПлательщикомНДС
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&КонДата, Организация = &Организация) КАК УчетнаяПолитикаНалоговыйУчетСрезПоследних";
	
	Запрос.УстановитьПараметр("КонДата", КонДата);
	Запрос.УстановитьПараметр("Организация", ДанныеДляПечати.Организация);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		ПоказыватьНДС = Не РезультатЗапроса.ОрганизацияНеЯвляетсяПлательщикомНДС;	
	КонецЕсли;
	
	// 2558 Дробница 15.10.2018 
	
	// выводим шапку
	ОблШапка = Мак.ПолучитьОбласть("Шапка");
	ОблШапка.Параметры.ДанныеПринципала = Принципал;
	ОблШапка.Параметры.ДанныеАгента = ДанныеАгента;
	//"ООО "Стриж", ИНН 9715004916, КПП 771501001				"
	ОблШапка.Параметры.ИнтернетМагазин = Контрагент.Наименование;
	ОблШапка.параметры.ПериодДоставки = "с  " + Формат(НачалоДня(НачДата), "ДЛФ=DD") + "  по  " + Формат(КонецДня(КонДата), "ДЛФ=DD");
	Если ЗначениеЗаполнено(Терминал) Тогда
		ОблШапка.параметры.ТерминалДоставки = Терминал;		
	КонецЕсли;
	
	ОблШапка.Параметры.Принципал = Контрагент.Наименование;
	ОблШапка.Параметры.ВЛицеПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
	ОблШапка.Параметры.Агент = Агент;//ДанныеАгента;
	ОблШапка.Параметры.ВЛицеАгента = ФИОРуководителяАгента;
	
	//ОблШапка.Параметры.ДействующегоНаОсновании = ?(Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_607"), " действующего на основании доверенности №1001/П от 01.04.2016,", "");
	
	
	//"Генерального директора Ривкиной Л.И."	
	//" Заместителя генерального директора Прыгина А.А."
	
	Таб.Вывести(ОблШапка);
		
	ОблЗаголовки = Мак.ПолучитьОбласть("Заголовки" + ?(ПоказыватьНДС,"НДС",""));
	Таб.Вывести(ОблЗаголовки);
	
	ОценочнаяСтоимостьИтог = 0;
	СтоимостьДоставкиПринципалаИтог = 0;
	ПолученоСКлиентаИтог = 0;
	УслугиСДИтог = 0;
	СтоимостьДоставкиИтог = 0;
	ВывозТехникиИтог = 0;
	КассовоеОбслуживаниеИтог = 0;
	БанковскоеОбслуживаниеИтог = 0;
	ПодъемИтог = 0;
	СтраховойСборИтог = 0;
	ВозвратДСИтог = 0;
	
	
		
	// выводим строки ТЧ
	НПП = 1;
	Рез = Зап.Выполнить().Выгрузить();	
	Для каждого Стр Из Рез Цикл
		
		ОблСтрока = Мак.ПолучитьОбласть("СтрокаТЧ");
		ОблСтрока.Параметры.НПП = НПП;
		ОблСтрока.Параметры.НомерЗаказа = Стр.Номер;
		ОблСтрока.Параметры.ВнешнийНомерЗаказа = Стр.НомерВнешнегоЗаказа;
		ОблСтрока.Параметры.ДатаЗабора = Стр.ДатаЗабораТовара;
		ОблСтрока.Параметры.ДатаДоставки = Стр.Дата;
		
		ЕстьМестнаяДоставка = Ложь;
		Если ЗначениеЗаполнено(Стр.МестнаяДоставка) Тогда	
			ЕстьМестнаяДоставка = Истина;			
		КонецЕсли;
		
		НаименованиеУслуги = "";
		Если Стр.СтатусЗаказа = справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
			НаименованиеУслуги = "Отказ";
		ИначеЕсли Стр.СтатусЗаказа = справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
			НаименованиеУслуги = "Частичная доставка";	
		ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЕстьМестнаяДоставка Тогда
			НаименованиеУслуги = "Доставка";
		ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И НЕ ЕстьМестнаяДоставка Тогда
			НаименованиеУслуги = "Самовывоз";
		ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.ЗаборТовара") Тогда	
		    НаименованиеУслуги = "Забор";
		ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.Фрахт") Тогда	
		    НаименованиеУслуги = "Фрахт";
		КонецЕсли;
		
		ОблСтрока.Параметры.НаименованиеУслуги = НаименованиеУслуги;		 
		ОблСтрока.Параметры.Категория = Стр.КатегорияДоставки;
		
		// МАС - 07.11.2017 - № --->> 
		//ОблСтрока.Параметры.Вес = Макс(Стр.ОбщийВес, Стр.Вес, Стр.ВесПотоварный);
		ОблСтрока.Параметры.Вес = Стр.ТарифицируемыйВес;
		// <<--- МАС 
				
		ОблСтрока.Параметры.ОценочнаяСтоимость = Стр.СуммаОценочная;
		ОблСтрока.Параметры.СтоимостьДоставкиПринципала = Стр.СуммаДоставкиДоМКАД + Стр.СуммаДоставкиЗаМКАД;
		ОблСтрока.Параметры.ПолученоСКлиента = Стр.ОплаченоКлиентовНал;
		ОблСтрока.Параметры.ТипОплаты = Стр.ТипОплаты;
		//ОблСтрока.Параметры.УслугиСД = Стр.УслугиСД;
				
		ОблСтрока.Параметры.УслугиСД = Стр.УслугиСДЧистые + Стр.КассовоеОбслуживание + Стр.БанковскаяКомиссия + Стр.Подъем + Стр.СтраховойСбор;
		
		ОблСтрока.Параметры.СтоимостьДоставки = Стр.УслугиСДЧистые + Стр.Бахилы + Стр.МаркировкаЗаказа;
		ОблСтрока.Параметры.ВывозТехники = 0;
		ОблСтрока.Параметры.КассовоеОбслуживание = Стр.КассовоеОбслуживание;
		ОблСтрока.Параметры.БанковскоеОбслуживание = Стр.БанковскаяКомиссия;
		ОблСтрока.Параметры.Подъем = Стр.Подъем;
		ОблСтрока.Параметры.СтраховойСбор = Стр.СтраховойСбор;
		ОблСтрока.Параметры.ВозвратДС = Стр.СуммаВозврата;
		ОблСтрока.Параметры.ДополнительныйНомерЗаказа = Стр.ДополнительныйНомерЗаказа;
		
		Если ЗначениеЗаполнено(Стр.ЗаказЗонаТарификации) Тогда
		
			ОблСтрока.Параметры.Город = Стр.ЗаказЗонаТарификации;	
		
		Иначе
			
			Зона = "";
			
			Если ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				
				Если Стр.Реализация.ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
					
					НайБП = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(СокрЛП(Стр.Реализация.Номер));			
					Если НайБП.ТочкаПрибытия.Москва Тогда							
						Зона = "Москва";
					Иначе
						Зона = "МО";			
					КонецЕсли; 
	
				ИначеЕсли Стр.Реализация.ТерминалДоставки = Справочники.РегиональныеТерминалы.СПбСтриж Тогда				
					Зона = "СПб";					
				КонецЕсли;
		 		
								
			ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.ЗаборТовара") Тогда		
				
				Если Стр.Реализация.ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда		
									
					Если Стр.Реализация.ТочкаДоставки.Москва Тогда							
						Зона = "Москва";
					Иначе
						Зона = "МО";			
					КонецЕсли;
					
				ИначеЕсли Стр.Реализация.ТерминалДоставки = Справочники.РегиональныеТерминалы.СПбСтриж Тогда			
					Зона = "СПб";		
				КонецЕсли;
				
			КонецЕсли;
						
			ОблСтрока.Параметры.Город = Зона;
		КонецЕсли;	
		
		ОценочнаяСтоимостьИтог = ОценочнаяСтоимостьИтог + Стр.СуммаОценочная;
		СтоимостьДоставкиПринципалаИтог = СтоимостьДоставкиПринципалаИтог + Стр.СуммаДоставкиДоМКАД + Стр.СуммаДоставкиЗаМКАД;
		ПолученоСКлиентаИтог = ПолученоСКлиентаИтог + Стр.ОплаченоКлиентовНал;		
		УслугиСДИтог = УслугиСДИтог + Стр.УслугиСДЧистые + Стр.КассовоеОбслуживание + Стр.БанковскаяКомиссия + Стр.Подъем + Стр.СтраховойСбор;
		СтоимостьДоставкиИтог = СтоимостьДоставкиИтог + Стр.УслугиСДЧистые + Стр.Бахилы + Стр.МаркировкаЗаказа;
		//ВывозТехникиИтог = ВывозТехникиИтог +;
		КассовоеОбслуживаниеИтог = КассовоеОбслуживаниеИтог + Стр.КассовоеОбслуживание;
		БанковскоеОбслуживаниеИтог = БанковскоеОбслуживаниеИтог + Стр.БанковскаяКомиссия;
		ПодъемИтог = ПодъемИтог + Стр.Подъем;
		СтраховойСборИтог = СтраховойСборИтог + Стр.СтраховойСбор;
		ВозвратДСИтог = ВозвратДСИтог + Стр.СуммаВозврата;
			
		Таб.Вывести(ОблСтрока);
		НПП = НПП + 1;
		
	КонецЦикла;
	
	
	// выводим итоги
	ОблИтоги = Мак.ПолучитьОбласть("Итоги");
	// Итог
	ОблИтоги.Параметры.ОценочнаяСтоимостьИтог = ОценочнаяСтоимостьИтог;
	ОблИтоги.Параметры.СтоимостьДоставкиПринципалаИтог = СтоимостьДоставкиПринципалаИтог;
	ОблИтоги.Параметры.ПолученоСКлиентаИтог = ПолученоСКлиентаИтог;
	ОблИтоги.Параметры.УслугиСДИтог = УслугиСДИтог;
	ОблИтоги.Параметры.СтоимостьДоставкиИтог = СтоимостьДоставкиИтог;
	ОблИтоги.Параметры.ВывозТехникиИтог = ВывозТехникиИтог;
	ОблИтоги.Параметры.КассовоеОбслуживаниеИтог = КассовоеОбслуживаниеИтог;
	ОблИтоги.Параметры.БанковскоеОбслуживаниеИтог = БанковскоеОбслуживаниеИтог;
	ОблИтоги.Параметры.ПодъемИтог = ПодъемИтог;
	ОблИтоги.Параметры.СтраховойСборИтог = СтраховойСборИтог;
	ОблИтоги.Параметры.ВозвратДСИтог = ВозвратДСИтог;	
	
	ОблИтоги.Параметры.ВсегоЗаказов = НПП-1;

	Таб.Вывести(ОблИтоги);
	
	Если ПоказыватьНДС Тогда
		ОблИтогиНДС = Мак.ПолучитьОбласть("ИтогиНДС");
		// НДС
		ОблИтогиНДС.Параметры.ОценочнаяСтоимостьНДС = Окр(ОценочнаяСтоимостьИтог * 18/118, 2);
		ОблИтогиНДС.Параметры.СтоимостьДоставкиПринципалаНДС = Окр(СтоимостьДоставкиПринципалаИтог * 18/118, 2);
		ОблИтогиНДС.Параметры.ПолученоСКлиентаНДС = Окр(ПолученоСКлиентаИтог * 18/118, 2);
		УслугиСДНДС = Окр(УслугиСДИтог * 18/118, 2);
		ОблИтогиНДС.Параметры.УслугиСДНДС = УслугиСДНДС;
		ОблИтогиНДС.Параметры.СтоимостьДоставкиНДС = Окр(СтоимостьДоставкиИтог * 18/118, 2);
		ОблИтогиНДС.Параметры.ВывозТехникиНДС = Окр(ВывозТехникиИтог * 18/118, 2);
		ОблИтогиНДС.Параметры.КассовоеОбслуживаниеНДС = Окр(КассовоеОбслуживаниеИтог * 18/118, 2);
		ОблИтогиНДС.Параметры.БанковскоеОбслуживаниеНДС = Окр(БанковскоеОбслуживаниеИтог * 18/118, 2);
		ОблИтогиНДС.Параметры.ПодъемНДС = Окр(ПодъемИтог * 18/118, 2);
		ОблИтогиНДС.Параметры.СтраховойСборНДС = Окр(СтраховойСборИтог * 18/118, 2);
		ОблИтогиНДС.Параметры.ВозвратДСНДС = Окр(ВозвратДСИтог * 18/118, 2);
		
		// ИтогНДС
		ОблИтогиНДС.Параметры.ОценочнаяСтоимостьИтогНДС = ОценочнаяСтоимостьИтог;
		ОблИтогиНДС.Параметры.СтоимостьДоставкиПринципалаИтогНДС = СтоимостьДоставкиПринципалаИтог;
		ОблИтогиНДС.Параметры.ПолученоСКлиентаИтогНДС = ПолученоСКлиентаИтог;
		ОблИтогиНДС.Параметры.УслугиСДИтогНДС = УслугиСДИтог;
		ОблИтогиНДС.Параметры.СтоимостьДоставкиИтогНДС = СтоимостьДоставкиИтог;
		ОблИтогиНДС.Параметры.ВывозТехникиИтогНДС = ВывозТехникиИтог;
		ОблИтогиНДС.Параметры.КассовоеОбслуживаниеИтогНДС = КассовоеОбслуживаниеИтог;
		ОблИтогиНДС.Параметры.БанковскоеОбслуживаниеИтогНДС = БанковскоеОбслуживаниеИтог;
		ОблИтогиНДС.Параметры.ПодъемИтогНДС = ПодъемИтог;
		ОблИтогиНДС.Параметры.СтраховойСборИтогНДС = СтраховойСборИтог;
		ОблИтогиНДС.Параметры.ВозвратДСИтогНДС = ВозвратДСИтог;
		
		Таб.Вывести(ОблИтогиНДС);
	КонецЕсли;
	
	// выводим итоги
	ОблПодвал = Мак.ПолучитьОбласть("Подвал" + ?(ПоказыватьНДС, "НДС",""));
	ОблПодвал.Параметры.СуммаВсего = УслугиСДИтог;
	ОблПодвал.Параметры.СуммаВсегоПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(УслугиСДИтог, Константы.ВалютаРегламентированногоУчета.Получить());
	
	Если ПоказыватьНДС Тогда
		ОблПодвал.Параметры.СуммаВсегоНДС = УслугиСДНДС;
		ОблПодвал.Параметры.СуммаВсегоНДСПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(УслугиСДНДС, Константы.ВалютаРегламентированногоУчета.Получить());
	КонецЕсли;

	ОблПодвал.Параметры.ВсегоЗаказов = НПП-1;
	ОблПодвал.Параметры.ВсегоЗаказовПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(НПП-1);
	
	ОблПодвал.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
	ОблПодвал.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
	ОблПодвал.Параметры.ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
	ОблПодвал.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
	
	Таб.Вывести(ОблПодвал);
	
	Таб.Автомасштаб = Истина;
	Таб.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Таб.Показать("Отчет агента");
	
КонецПроцедуры


Процедура ВыводНаПечатьЯндексЗаборы(Таб, Контрагент,Контрагенты, НачДата, КонДата, МасОтб, ТипДанных = "Доставки", ТабУслугДоставки = Неопределено, Терминал = Неопределено) Экспорт
    
  
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗаборТовара.Ссылка КАК Ссылка,
	                      |	ВЫБОР
	                      |		КОГДА ЗаборТовара.ДополнительныйНомер ЕСТЬ NULL
	                      |				ИЛИ ЗаборТовара.ДополнительныйНомер = """"
	                      |			ТОГДА ЗаборТовара.НомерВнешнегоЗаказа
	                      |		ИНАЧЕ ЗаборТовара.ДополнительныйНомер
	                      |	КОНЕЦ КАК ДополнительныйНомер,
	                      |	ЗаборТовара.НомерВнешнегоЗаказа КАК ВнешнийНомерЗаказа,
	                      |	ЗакрытыеЗаказыОбороты.ТипЗаказа КАК ТипЗаказа,
	                      |	ЗакрытыеЗаказыОбороты.ИнтернетМагазин КАК ИнтернетМагазин,
	                      |	ЗаборТовара.Номер КАК Номер,
	                      |	ЗакрытыеЗаказыОбороты.ОбъемЗабораОборот КАК ОбъемЗабораОборот,
	                      |	ЗакрытыеЗаказыОбороты.ОбъемЗабораПоЗаказамОборот КАК ОбъемЗабораПоЗаказамОборот,
	                      |	ЕСТЬNULL(ЗакрытыеЗаказыОбороты.УслугиСДОборот, 0) КАК УслугиСДОборот,
	                      |	ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот КАК БанковскаяКомиссияОборот,
	                      |	ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот КАК КассовоеОбслуживаниеОборот,
	                      |	ЗакрытыеЗаказыОбороты.ЗонаТарификации КАК ЗонаТарификации,
	                      |	ЗаборТовара.Дата КАК ДатаЗабора,
	                      |	ЗаборТовара.ОбъемЗабора КАК ОбъемЗабора,
	                      |	ДополнительныеПараметрыЗабора.ОбъемныйБрейк.ОбъемОт КАК ОбъемОт,
	                      |	ДополнительныеПараметрыЗабора.ОбъемныйБрейк.ОбъемДо КАК ОбъемДо,
	                      |	ЗаборТовара.СтатусИнтернетМагазинаСпр КАК Статус,
	                      |	ЗакрытыеЗаказыОбороты.ОбъемныйБрейк КАК ОбъемныйБрейк
	                      |ИЗ
	                      |	Документ.ЗаборТовара КАК ЗаборТовара
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы.Обороты КАК ЗакрытыеЗаказыОбороты
	                      |		ПО ЗаборТовара.Ссылка = ЗакрытыеЗаказыОбороты.Реализация
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗабора КАК ДополнительныеПараметрыЗабора
	                      |		ПО ЗаборТовара.Ссылка = ДополнительныеПараметрыЗабора.Забор
	                      |ГДЕ
	                      |	ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	                      |	И ЗаборТовара.Дата МЕЖДУ &Дата1 И &Дата2
	                      |	И ЗаборТовара.Контрагент В(&Контрагент)
	                      |	И ЗаборТовара.ТерминалДоставки В(&ТерминалДоставки)
	                      |	И ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(Справочник.СтатусЗаказаИнтернетМагазина.ЗаказОтклонен)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ДатаЗабора,
	                      |	Номер");
	Запрос.УстановитьПараметр("Дата1", НачалоДня(НачДата));
	Запрос.УстановитьПараметр("Дата2", КонецДня(КонДата));
	Запрос.УстановитьПараметр("Контрагент", Контрагенты);	
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		Запрос.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
		СписокТерминалов = Новый СписокЗначений;
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
	    Запрос.УстановитьПараметр("ТерминалДоставки", СписокТерминалов);
	КонецЕсли;
    
    
    Мак = ПолучитьМакет("МакетЯндексЗаборы");
    ОблШ = Мак.ПолучитьОбласть("Шапка");
    ОблС = Мак.ПолучитьОбласть("Строка");
    ОблП = Мак.ПолучитьОбласть("Подвал"); 
    
    ОблШ.Параметры.ПериодДоставки = "период доставки: " + ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
	
	Если ЗначениеЗаполнено(Терминал) Тогда
		ОблШ.Параметры.Терминал = Терминал;
	КонецЕсли;
	
    Таб.Вывести(ОблШ);	
	  
     
    НПП = 0;  УслугиСДИтогоИтог = 0;	
			
	ВыбДет = Запрос.Выполнить().Выбрать();
	
    Пока Выбдет.Следующий() Цикл
		
		НПП = НПП + 1;
		
		//Формируем строки
		ОблС.Параметры.НПП = НПП;
		ОблС.Параметры.НомерЗаказа = ВыбДет.Номер;
		ОблС.Параметры.ВнешнийНомерЗаказа = ВыбДет.ВнешнийНомерЗаказа;
		ОблС.Параметры.НомерЯндекс = ВыбДет.ДополнительныйНомер;
		ОблС.Параметры.Услуга = ВыбДет.ТипЗаказа;
		ОблС.Параметры.ДатаЗабора = ВыбДет.ДатаЗабора;
		ОблС.Параметры.РегионДоставки = ВыбДет.ЗонаТарификации;
		ОблС.Параметры.АдресЗабора = ВыбДет.Ссылка.ТочкаДоставки.Адрес;
		ОблС.Параметры.ОбъемЗабораЯД = ВыбДет.ОбъемЗабора;
		ОблС.Параметры.ОбъемЗабораАПП = ВыбДет.ОбъемЗабораПоЗаказамОборот;
		ОблС.Параметры.УслугиСДИтого = ВыбДет.УслугиСДОборот;
		ОблС.Параметры.Статус = ВыбДет.Статус;
		ОблС.Параметры.РасчетныйОбъем = ВыбДет.ОбъемныйБрейк;
		//ОблС.Параметры.РасчетныйОбъем = "от " + ВыбДет.ОбъемОт + " до " + ВыбДет.ОбъемДо;
		
		УслугиСДИтогоИтог = УслугиСДИтогоИтог + ВыбДет.УслугиСДОборот;
				              						          
		Таб.Вывести(ОблС);					
		
	КонецЦикла;
        
    
    
    ОблП.Параметры.итогоЗаказов = НПП;
	ОблП.Параметры.УслугиСДИтого = УслугиСДИтогоИтог;
	
    Таб.Вывести(ОблП);
     
    Таб.Показать("Отчет агента");
	
	
КонецПроцедуры

Процедура ВыводНаПечатьУниверсальный(Таб, Контрагент,Контрагенты, НачДата, КонДата, МасОтб, ТипДанных = "Доставки", ТабУслугДоставки = Неопределено, Терминал = Неопределено) Экспорт
		
	#Область ЗапросДанных
	Зап = Новый Запрос;
    Зап.Текст = "ВЫБРАТЬ
                |	ФиксацияВеса.Заказ КАК Заказ,
                |	МАКСИМУМ(ЕСТЬNULL(ФиксацияВеса.Вес, 0)) КАК Вес
                |ПОМЕСТИТЬ ВТ
                |ИЗ
                |	РегистрСведений.ФиксацияВеса КАК ФиксацияВеса
                |
                |СГРУППИРОВАТЬ ПО
                |	ФиксацияВеса.Заказ
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	ЗакрытыеЗаказы.Реализация КАК Реализация,
                |	ЗакрытыеЗаказы.ОценочнаяСтоимость КАК ОценочнаяСтоимость
                |ПОМЕСТИТЬ ВТ_ЗакрытыеЗаказы
                |ИЗ
                |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
                |ГДЕ
                |	ЗакрытыеЗаказы.ИнтернетМагазин В(&ИнтернетМагазин)
                |	И ЗакрытыеЗаказы.ТерминалДоставки В(&ТерминалДоставки)
                |	И ЗакрытыеЗаказы.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
                |	И ЗакрытыеЗаказы.Период МЕЖДУ &НачДата И &КонДата
                |
                |СГРУППИРОВАТЬ ПО
                |	ЗакрытыеЗаказы.Реализация,
                |	ЗакрытыеЗаказы.ОценочнаяСтоимость
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	ЗакрытыеЗаказы.ИнтернетМагазин КАК ИнтернетМагазин,
                |	ЗакрытыеЗаказы.КатегорияДоставки КАК КатегорияДоставки,
                |	ЗакрытыеЗаказы.ТипОплаты КАК ТипОплаты,
                |	ЗакрытыеЗаказы.ТерминалДоставки КАК ТерминалДоставки,
                |	ВЫБОР
                |		КОГДА &ПоказатьСуммуОценки
                |			ТОГДА ЕСТЬNULL(ВТ_ЗакрытыеЗаказы.ОценочнаяСтоимость, 0)
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК СуммаОценочная,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаПолученнаяОборот < 0
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказы.СуммаПолученнаяОборот
                |	КОНЕЦ КАК СуммаПолученная,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СуммаДоставкиДоМКАДОборот, 0) КАК СуммаДоставкиДоМКАД,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СуммаДоставкиЗаМКАДОборот, 0) КАК СуммаДоставкиЗаМКАД,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.УслугиСДОборот, 0) КАК УслугиСД,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
                |				И ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |			ТОГДА 0
                |		ИНАЧЕ ЕСТЬNULL(ЗакрытыеЗаказы.БанковскаяКомиссияОборот, 0)
                |	КОНЕЦ КАК БанковскаяКомиссия,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.КассовоеОбслуживаниеОборот, 0) КАК КассовоеОбслуживание,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаОценочнаяОборот <> 0
                |			ТОГДА ЕСТЬNULL(ЗакрытыеЗаказы.СуммаВозвратаОборот, 0)
                |		ИНАЧЕ 0
                |	КОНЕЦ КАК СуммаВозврата,
                |	ЗакрытыеЗаказы.МассаОборот КАК МассаОборот,
                |	ЗакрытыеЗаказы.СуммаЧастичногоВозвратаОборот КАК СуммаЧастичногоВозвратаОборот,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаОценочнаяОборот <> 0
                |				И ЗакрытыеЗаказы.СуммаВозвратаОборот <> 0
                |			ТОГДА ЕСТЬNULL(ЗакрытыеЗаказы.ОплаченоКлиентовНалОборот, 0)
                |		ИНАЧЕ ЕСТЬNULL(ЗакрытыеЗаказы.ОплаченоКлиентовНалОборот, 0)
                |	КОНЕЦ КАК ОплаченоКлиентовНал,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.АгентскоеВознаграждениеОборот, 0) КАК АгентскоеВознаграждение,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ПредоплатаПоКредитуОборот, 0) КАК ПредоплатаПоКредиту,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.УслугиСДЧистыеОборот, 0) КАК УслугиСДЧистые,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СтраховойСборОборот, 0) КАК СтраховойСбор,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ФактическийВесОборот, 0) КАК ФактическийВес,
                |	ВТ_ЗакрытыеЗаказы.Реализация.Номер КАК Номер,
                |	ВТ_ЗакрытыеЗаказы.Реализация.Дата КАК Дата,
                |	ВТ_ЗакрытыеЗаказы.Реализация.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
                |	ПоступлениеТоваровУслуг.Дата КАК ДатаЗабораТовара,
                |	новаМестнаяДоставка.Ссылка КАК МестнаяДоставка,
                |	ЗакрытыеЗаказы.СтатусЗаказа КАК СтатусЗаказа,
                |	ЕСТЬNULL(ВТ_ЗакрытыеЗаказы.Реализация.ОбщийВес, 0) КАК ОбщийВес,
                |	СУММА(ВЫБОР
                |			КОГДА РасчетУслугСД.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаУслугСД.Подъем)
                |				ТОГДА ЕСТЬNULL(РасчетУслугСД.СуммаОборот, 0)
                |			ИНАЧЕ 0
                |		КОНЕЦ) КАК Подъем,
                |	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ДополнительныйНомерЗаказа, """") КАК ДополнительныйНомерЗаказа,
                |	ЕСТЬNULL(ВТ.Вес, 0) КАК Вес,
                |	ВТ_ЗакрытыеЗаказы.Реализация КАК Реализация,
                |	СУММА(ВЫБОР
                |			КОГДА РасчетУслугСД.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаУслугСД.Бахилы)
                |				ТОГДА ЕСТЬNULL(РасчетУслугСД.СуммаОборот, 0)
                |			ИНАЧЕ 0
                |		КОНЕЦ) КАК Бахилы,
                |	ВТ.Заказ.ЗонаТарификации КАК ЗонаТарификации,
                |	СУММА(ВЫБОР
                |			КОГДА РасчетУслугСД.ПоказательУслуг = &МаркировкаЗаказа
                |				ТОГДА ЕСТЬNULL(РасчетУслугСД.СуммаОборот, 0)
                |			ИНАЧЕ 0
                |		КОНЕЦ) КАК МаркировкаЗаказа,
				//|	СУММА(ВЫБОР
				//|			КОГДА РасчетУслугСД.ПоказательУслуг = &СтраховойСбор
				//|				ТОГДА ЕСТЬNULL(РасчетУслугСД.СуммаОборот, 0)
				//|			ИНАЧЕ 0
				//|		КОНЕЦ) КАК СтраховойСборСД,
                |	МАКСИМУМ(ДополнительныеПараметрыЗаказа.Заказ.ЗонаТарификации) КАК ЗаказЗонаТарификации,
                |	ЕСТЬNULL(ВложенныйЗапрос.ВесПотоварный, 0) КАК ВесПотоварный,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ТарифицируемыйВесОборот, 0) КАК ТарифицируемыйВес
                |ИЗ
                |	ВТ_ЗакрытыеЗаказы КАК ВТ_ЗакрытыеЗаказы
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы.Обороты(
                |				&НачДата,
                |				&КонДата,
                |				,
                |				ИнтернетМагазин В (&ИнтернетМагазин)
                |					И ТерминалДоставки В (&ТерминалДоставки)
                |					И СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)) КАК ЗакрытыеЗаказы
                |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
                |			ПО ЗакрытыеЗаказы.Реализация.Номер = ПоступлениеТоваровУслуг.Номер
                |			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
                |			ПО (ВЫРАЗИТЬ(ЗакрытыеЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Номер = новаМестнаяДоставка.Номер)
                |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетУслугСД.Обороты(&НачДата, &КонДата, , ) КАК РасчетУслугСД
                |			ПО ЗакрытыеЗаказы.Реализация = РасчетУслугСД.Реализация
                |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
                |			ПО (ВЫРАЗИТЬ(ЗакрытыеЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка = ДополнительныеПараметрыЗаказа.Заказ)
                |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
                |			ПО ЗакрытыеЗаказы.Реализация = ВТ.Заказ
                |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                |				СУММА(ЕСТЬNULL(РеализацияТоваровУслугТовары.Количество * РеализацияТоваровУслугТовары.Вес, 0)) КАК ВесПотоварный,
                |				РеализацияТоваровУслугТовары.Ссылка КАК Ссылка
                |			ИЗ
                |				Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
                |			ГДЕ
                |				РеализацияТоваровУслугТовары.Ссылка.Ссылка В
                |						(ВЫБРАТЬ
                |							ВТ_ЗакрытыеЗаказы.Реализация
                |						ИЗ
                |							ВТ_ЗакрытыеЗаказы КАК ВТ_ЗакрытыеЗаказы)
                |			
                |			СГРУППИРОВАТЬ ПО
                |				РеализацияТоваровУслугТовары.Ссылка) КАК ВложенныйЗапрос
                |			ПО ЗакрытыеЗаказы.Реализация = ВложенныйЗапрос.Ссылка
                |		ПО ВТ_ЗакрытыеЗаказы.Реализация = ЗакрытыеЗаказы.Реализация
                |
                |СГРУППИРОВАТЬ ПО
                |	ЗакрытыеЗаказы.ИнтернетМагазин,
                |	ЗакрытыеЗаказы.КатегорияДоставки,
                |	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ДополнительныйНомерЗаказа, """"),
                |	ПоступлениеТоваровУслуг.Дата,
                |	ЗакрытыеЗаказы.ТипОплаты,
                |	ЗакрытыеЗаказы.ТерминалДоставки,
                |	новаМестнаяДоставка.Ссылка,
                |	ЗакрытыеЗаказы.СтатусЗаказа,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаОценочнаяОборот <> 0
                |			ТОГДА ЕСТЬNULL(ЗакрытыеЗаказы.СуммаВозвратаОборот, 0)
                |		ИНАЧЕ 0
                |	КОНЕЦ,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
                |				И ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
                |			ТОГДА 0
                |		ИНАЧЕ ЕСТЬNULL(ЗакрытыеЗаказы.БанковскаяКомиссияОборот, 0)
                |	КОНЕЦ,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаПолученнаяОборот < 0
                |			ТОГДА 0
                |		ИНАЧЕ ЗакрытыеЗаказы.СуммаПолученнаяОборот
                |	КОНЕЦ,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.КассовоеОбслуживаниеОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СуммаДоставкиДоМКАДОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СтраховойСборОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СуммаДоставкиЗаМКАДОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.УслугиСДОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.СуммаОценочнаяОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.УслугиСДЧистыеОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ФактическийВесОборот, 0),
                |	ЗакрытыеЗаказы.МассаОборот,
                |	ЗакрытыеЗаказы.СуммаЧастичногоВозвратаОборот,
                |	ЕСТЬNULL(ВТ.Вес, 0),
                |	ВТ_ЗакрытыеЗаказы.Реализация.Номер,
                |	ВТ_ЗакрытыеЗаказы.Реализация.Дата,
                |	ВТ_ЗакрытыеЗаказы.Реализация.НомерВнешнегоЗаказа,
                |	ЕСТЬNULL(ВТ_ЗакрытыеЗаказы.Реализация.ОбщийВес, 0),
                |	ВТ_ЗакрытыеЗаказы.Реализация,
                |	ВЫБОР
                |		КОГДА ЗакрытыеЗаказы.СуммаОценочнаяОборот <> 0
                |				И ЗакрытыеЗаказы.СуммаВозвратаОборот <> 0
                |			ТОГДА ЕСТЬNULL(ЗакрытыеЗаказы.ОплаченоКлиентовНалОборот, 0)
                |		ИНАЧЕ ЕСТЬNULL(ЗакрытыеЗаказы.ОплаченоКлиентовНалОборот, 0)
                |	КОНЕЦ,
                |	ЕСТЬNULL(ЗакрытыеЗаказы.АгентскоеВознаграждениеОборот, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ПредоплатаПоКредитуОборот, 0),
                |	ВТ.Заказ.ЗонаТарификации,
                |	ЕСТЬNULL(ВложенныйЗапрос.ВесПотоварный, 0),
                |	ЕСТЬNULL(ЗакрытыеЗаказы.ТарифицируемыйВесОборот, 0),
                |	ВЫБОР
                |		КОГДА &ПоказатьСуммуОценки
                |			ТОГДА ЕСТЬNULL(ВТ_ЗакрытыеЗаказы.ОценочнаяСтоимость, 0)
                |		ИНАЧЕ 0
                |	КОНЕЦ";	
    Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
    Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Зап.УстановитьПараметр("ПоказатьСуммуОценки", Истина);
	
	Зап.УстановитьПараметр("МаркировкаЗаказа", Справочники.ПоказателиРасчетаУслугСД.НайтиПоНаименованию("Маркировка"));
	Зап.УстановитьПараметр("СтраховойСбор", Справочники.ПоказателиРасчетаУслугСД.НайтиПоКоду("00000000006"));
	
	Если ЗначениеЗаполнено(Контрагенты) Тогда
		Зап.УстановитьПараметр("ИнтернетМагазин", Контрагенты);	
	Иначе
		Зап.УстановитьПараметр("ИнтернетМагазин", Контрагент);
	КонецЕсли;
	
    	
	Если ЗначениеЗаполнено(Терминал) Тогда
		Зап.УстановитьПараметр("ТерминалДоставки", Терминал);	
	Иначе
		СписокТерминалов = Новый СписокЗначений;
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
	    Зап.УстановитьПараметр("ТерминалДоставки", СписокТерминалов);
	КонецЕсли;
	#КонецОбласти		
	
	Мак = ПолучитьМакет("МакетУниверсальный");
	
	// данные в зависимости от контрагента
	Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование,ИНН,КПП");
	ПринципалСтрокой = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование");

	ДанныеДляПечати = СобратьДанныеДляПечати(Контрагент,КонДата);
	Должность = ДанныеДляПечати.ДолжностьВЛице;
    ДиректорПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
    ОрганизацияПолноеНаименование = ДанныеДляПечати.Организация.НаименованиеПолное;
    ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице;
    ФИОРуководителяАгента = ДанныеДляПечати.ФИОРуководителяВлице;
	ДанныеАгента = ДанныеДляПечати.Агент;
	Агент = ДанныеДляПечати.Организация;
	
	// 2558 Дробница 15.10.2018

	ПоказыватьНДС = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетнаяПолитикаНалоговыйУчетСрезПоследних.ОрганизацияНеЯвляетсяПлательщикомНДС КАК ОрганизацияНеЯвляетсяПлательщикомНДС
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&КонДата, Организация = &Организация) КАК УчетнаяПолитикаНалоговыйУчетСрезПоследних";
	
	Запрос.УстановитьПараметр("КонДата", КонДата);
	Запрос.УстановитьПараметр("Организация", ДанныеДляПечати.Организация);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		ПоказыватьНДС = Не РезультатЗапроса.ОрганизацияНеЯвляетсяПлательщикомНДС;	
	КонецЕсли;
	
	// 2558 Дробница 15.10.2018 
	
	// выводим шапку
	ОблШапка = Мак.ПолучитьОбласть("Шапка");
	ОблШапка.Параметры.ДанныеПринципала = Принципал;
	ОблШапка.Параметры.ДанныеАгента = ДанныеАгента;
	ОблШапка.Параметры.Параметр1 = ДанныеДляПечати.Параметр1;
	ОблШапка.Параметры.Параметр2 = ДанныеДляПечати.Параметр2;
	
	Параметр1Винительный = "принципала";
	РезультатСклонения = "";
	Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ДанныеДляПечати.Параметр1, 4, , РезультатСклонения) Тогда
        Параметр1Винительный    = РезультатСклонения;
    КонецЕсли;
	
	Параметр2Винительный = "агента";
	РезультатСклонения = "";
	Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ДанныеДляПечати.Параметр2, 4, , РезультатСклонения) Тогда
        Параметр2Винительный    = РезультатСклонения;
    КонецЕсли;

	//ОблШапка.Параметры.Параметр2Винительный = Параметр2Винительный;

	//"ООО "Стриж", ИНН 9715004916, КПП 771501001				"
	ОблШапка.Параметры.ИнтернетМагазин = Контрагент.Наименование;
	ОблШапка.параметры.ПериодДоставки = "с  " + Формат(НачалоДня(НачДата), "ДЛФ=DD") + "  по  " + Формат(КонецДня(КонДата), "ДЛФ=DD");
	Если ЗначениеЗаполнено(Терминал) Тогда
		ОблШапка.параметры.ТерминалДоставки = Терминал;
		ОблШапка.Параметры.СтрТерминал = "Терминал доставки:";
	КонецЕсли;
	
	ОблШапка.Параметры.Принципал = ПринципалСтрокой;
	ОблШапка.Параметры.ВЛицеПринципала = ?(ЗначениеЗаполнено(ДанныеДляПечати.ДолжностьВлице),ДанныеДляПечати.ДолжностьВлице + " ","") + ДанныеДляПечати.ДиректорПринципалаВЛице;
	ОблШапка.Параметры.Агент = Агент;//ДанныеАгента;
	ОблШапка.Параметры.ВЛицеАгента = ?(Значениезаполнено(ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице),ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице + " ","") + ДанныеДляПечати.ФИОРуководителяВлице;
	
	//ОблШапка.Параметры.ДействующегоНаОсновании = ?(Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_607"), " действующего на основании доверенности №1001/П от 01.04.2016,", "");
	
	
	//"Генерального директора Ривкиной Л.И."	
	//" Заместителя генерального директора Прыгина А.А."
	
	Таб.Вывести(ОблШапка);
		
	ОблЗаголовки = Мак.ПолучитьОбласть("Заголовки" + ?(ПоказыватьНДС,"НДС",""));
	
	ОблЗаголовки.Параметры.Параметр1Винительный = Параметр1Винительный;
	ОблЗаголовки.Параметры.Параметр2Винительный = Параметр2Винительный;
	
	Таб.Вывести(ОблЗаголовки);
	
	ОценочнаяСтоимостьИтог = 0;
	СтоимостьДоставкиПринципалаИтог = 0;
	ПолученоСКлиентаИтог = 0;
	УслугиСДИтог = 0;
	СтоимостьДоставкиИтог = 0;
	//ВывозТехникиИтог = 0;
	КассовоеОбслуживаниеИтог = 0;
	БанковскоеОбслуживаниеИтог = 0;
	ПодъемИтог = 0;
	СтраховойСборИтог = 0;
	ВозвратДСИтог = 0;
	
	
		
	// выводим строки ТЧ
	НПП = 1;
	Рез = Зап.Выполнить().Выгрузить();
	Рез.Колонки.Добавить("НаименованиеУслуги", Новый ОписаниеТипов("Строка"));
	
	
	МассивКУдалению = Новый Массив;
	Для Каждого СтрокаПроверки Из Рез Цикл
		//Если ((СтрокаПроверки.УслугиСДЧистые + СтрокаПроверки.Бахилы + СтрокаПроверки.МаркировкаЗаказа) + СтрокаПроверки.КассовоеОбслуживание + СтрокаПроверки.БанковскаяКомиссия + СтрокаПроверки.Подъем + СтрокаПроверки.СтраховойСбор) = 0 Тогда
		Если НЕ ТипЗнч(СтрокаПроверки.Реализация) = Тип("ДокументСсылка.ЗаборТовара") И (СтрокаПроверки.УслугиСДЧистые = 0 ИЛИ СтрокаПроверки.УслугиСДЧистые = Неопределено) Тогда
			МассивКУдалению.Добавить(СтрокаПроверки);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого СтрокаКУдалению Из МассивКУдалению Цикл
		Рез.Удалить(СтрокаКУдалению);
	КонецЦикла;	
	
	
	Для каждого Стр Из Рез Цикл
		ЕстьМестнаяДоставка = Ложь;
		Если ЗначениеЗаполнено(Стр.МестнаяДоставка) Тогда	
			ЕстьМестнаяДоставка = Истина;			
		КонецЕсли;
		
		НаименованиеУслуги = "";
		Если Стр.СтатусЗаказа = справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
			НаименованиеУслуги = "Отказ";
		ИначеЕсли Стр.СтатусЗаказа = справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
			НаименованиеУслуги = "Частичная доставка";	
		ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЕстьМестнаяДоставка Тогда
			НаименованиеУслуги = "Доставка";
		ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И НЕ ЕстьМестнаяДоставка Тогда
			НаименованиеУслуги = "Самовывоз";
		ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.ЗаборТовара") Тогда	
			НаименованиеУслуги = "Забор";
		ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.Фрахт") Тогда	
			НаименованиеУслуги = "Фрахт";
		КонецЕсли;
		Стр.НаименованиеУслуги = НаименованиеУслуги;
	КонецЦикла;	
	
	Рез.Сортировать("НаименованиеУслуги, Номер"); 
	
	Для каждого Стр Из Рез Цикл
		
		ОблСтрока = Мак.ПолучитьОбласть("СтрокаТЧ");
		ОблСтрока.Параметры.НПП = НПП;
		ОблСтрока.Параметры.НомерЗаказа = Стр.Номер;
		ОблСтрока.Параметры.ВнешнийНомерЗаказа = Стр.НомерВнешнегоЗаказа;
		ОблСтрока.Параметры.ДатаЗабора = Стр.ДатаЗабораТовара;
		ОблСтрока.Параметры.ДатаДоставки = Стр.Дата;
		
		ЕстьМестнаяДоставка = Ложь;
		Если ЗначениеЗаполнено(Стр.МестнаяДоставка) Тогда	
			ЕстьМестнаяДоставка = Истина;			
		КонецЕсли;
		
		//НаименованиеУслуги = "";
		//Если Стр.СтатусЗаказа = справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
		//	НаименованиеУслуги = "Отказ";
		//ИначеЕсли Стр.СтатусЗаказа = справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
		//	НаименованиеУслуги = "Частичная доставка";	
		//ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЕстьМестнаяДоставка Тогда
		//	НаименованиеУслуги = "Доставка";
		//ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И НЕ ЕстьМестнаяДоставка Тогда
		//	НаименованиеУслуги = "Самовывоз";
		//ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.ЗаборТовара") Тогда	
		//    НаименованиеУслуги = "Забор";
		//ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.Фрахт") Тогда	
		//    НаименованиеУслуги = "Фрахт";
		//КонецЕсли;
		//
		//ОблСтрока.Параметры.НаименованиеУслуги = НаименованиеУслуги;
		
		ОблСтрока.Параметры.НаименованиеУслуги = Стр.НаименованиеУслуги;	
		ОблСтрока.Параметры.Категория = Стр.КатегорияДоставки;
		
		// МАС - 07.11.2017 - № --->> 
		//ОблСтрока.Параметры.Вес = Макс(Стр.ОбщийВес, Стр.Вес, Стр.ВесПотоварный);
		ОблСтрока.Параметры.Вес = Стр.ТарифицируемыйВес;
		// <<--- МАС 
				
		ОблСтрока.Параметры.ОценочнаяСтоимость = Стр.СуммаОценочная;
		ОблСтрока.Параметры.СтоимостьДоставкиПринципала = Стр.СуммаДоставкиДоМКАД + Стр.СуммаДоставкиЗаМКАД;
		ОблСтрока.Параметры.ПолученоСКлиента = Стр.ОплаченоКлиентовНал + Стр.СуммаВозврата;//2558
		ОблСтрока.Параметры.ТипОплаты = Стр.ТипОплаты;
		//ОблСтрока.Параметры.УслугиСД = Стр.УслугиСД;
				
		//ОблСтрока.Параметры.УслугиСД = Стр.УслугиСДЧистые + Стр.КассовоеОбслуживание + Стр.БанковскаяКомиссия + Стр.Подъем + Стр.СтраховойСбор;
		ОблСтрока.Параметры.УслугиСД = ( Стр.УслугиСДЧистые + Стр.Бахилы + Стр.МаркировкаЗаказа) + Стр.КассовоеОбслуживание + Стр.БанковскаяКомиссия + Стр.Подъем + Стр.СтраховойСбор;

		ОблСтрока.Параметры.СтоимостьДоставки = Стр.УслугиСДЧистые + Стр.Бахилы + Стр.МаркировкаЗаказа;
		//ОблСтрока.Параметры.ВывозТехники = 0;
		ОблСтрока.Параметры.КассовоеОбслуживание = Стр.КассовоеОбслуживание;
		ОблСтрока.Параметры.БанковскоеОбслуживание = Стр.БанковскаяКомиссия;
		ОблСтрока.Параметры.Подъем = Стр.Подъем;
		ОблСтрока.Параметры.СтраховойСбор = Стр.СтраховойСбор;
		ОблСтрока.Параметры.ВозвратДС = Стр.СуммаВозврата;
//		ОблСтрока.Параметры.ДополнительныйНомерЗаказа = Стр.ДополнительныйНомерЗаказа;
		
		Если ЗначениеЗаполнено(Стр.ЗаказЗонаТарификации) Тогда
		
			ОблСтрока.Параметры.Город = Стр.ЗаказЗонаТарификации;	
		
		Иначе
			
			Зона = "";
			
			Если ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				
				Если Стр.Реализация.ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
					
					НайБП = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(СокрЛП(Стр.Реализация.Номер));			
					Если НайБП.ТочкаПрибытия.Москва Тогда							
						Зона = "Москва";
					Иначе
						Зона = "МО";			
					КонецЕсли; 
	
				ИначеЕсли Стр.Реализация.ТерминалДоставки = Справочники.РегиональныеТерминалы.СПбСтриж Тогда				
					Зона = "СПб";					
				КонецЕсли;
		 		
								
			ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.ЗаборТовара") Тогда		
				
				Если Стр.Реализация.ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда		
									
					Если Стр.Реализация.ТочкаДоставки.Москва Тогда							
						Зона = "Москва";
					Иначе
						Зона = "МО";			
					КонецЕсли;
					
				ИначеЕсли Стр.Реализация.ТерминалДоставки = Справочники.РегиональныеТерминалы.СПбСтриж Тогда			
					Зона = "СПб";		
				КонецЕсли;
				
			КонецЕсли;
						
			ОблСтрока.Параметры.Город = Зона;
		КонецЕсли;	
		
		ОценочнаяСтоимостьИтог = ОценочнаяСтоимостьИтог + Стр.СуммаОценочная;
		СтоимостьДоставкиПринципалаИтог = СтоимостьДоставкиПринципалаИтог + Стр.СуммаДоставкиДоМКАД + Стр.СуммаДоставкиЗаМКАД;
		ПолученоСКлиентаИтог = ПолученоСКлиентаИтог + Стр.ОплаченоКлиентовНал + Стр.СуммаВозврата;//2558		
		СтоимостьДоставкиИтог = СтоимостьДоставкиИтог + Стр.УслугиСДЧистые + Стр.Бахилы + Стр.МаркировкаЗаказа;
		//УслугиСДИтог = УслугиСДИтог + Стр.УслугиСДЧистые + Стр.КассовоеОбслуживание + Стр.БанковскаяКомиссия + Стр.Подъем + Стр.СтраховойСбор;    ОРИГИНАЛ
		УслугиСДИтог = УслугиСДИтог + (Стр.УслугиСДЧистые + Стр.Бахилы + Стр.МаркировкаЗаказа) + Стр.КассовоеОбслуживание + Стр.БанковскаяКомиссия + Стр.Подъем + Стр.СтраховойСбор;

		//ВывозТехникиИтог = ВывозТехникиИтог +;
		КассовоеОбслуживаниеИтог = КассовоеОбслуживаниеИтог + Стр.КассовоеОбслуживание;
		БанковскоеОбслуживаниеИтог = БанковскоеОбслуживаниеИтог + Стр.БанковскаяКомиссия;
		ПодъемИтог = ПодъемИтог + Стр.Подъем;
		СтраховойСборИтог = СтраховойСборИтог + Стр.СтраховойСбор;
		ВозвратДСИтог = ВозвратДСИтог + Стр.СуммаВозврата;
			
		Таб.Вывести(ОблСтрока);
		НПП = НПП + 1;
		
	КонецЦикла;
	
	
	// выводим итоги
	ОблИтоги = Мак.ПолучитьОбласть("Итоги");
	// Итог
	ОблИтоги.Параметры.ОценочнаяСтоимостьИтог = ОценочнаяСтоимостьИтог;
	ОблИтоги.Параметры.СтоимостьДоставкиПринципалаИтог = СтоимостьДоставкиПринципалаИтог;
	ОблИтоги.Параметры.ПолученоСКлиентаИтог = ПолученоСКлиентаИтог;
	ОблИтоги.Параметры.УслугиСДИтог = УслугиСДИтог;
	ОблИтоги.Параметры.СтоимостьДоставкиИтог = СтоимостьДоставкиИтог;
	//ОблИтоги.Параметры.ВывозТехникиИтог = ВывозТехникиИтог;
	ОблИтоги.Параметры.КассовоеОбслуживаниеИтог = КассовоеОбслуживаниеИтог;
	ОблИтоги.Параметры.БанковскоеОбслуживаниеИтог = БанковскоеОбслуживаниеИтог;
	ОблИтоги.Параметры.ПодъемИтог = ПодъемИтог;
	ОблИтоги.Параметры.СтраховойСборИтог = СтраховойСборИтог;
	ОблИтоги.Параметры.ВозвратДСИтог = ВозвратДСИтог;	
	
	ОблИтоги.Параметры.ВсегоЗаказов = НПП-1;

	Таб.Вывести(ОблИтоги);
	
	УслугиСДИтогНДС = УслугиСДИтог;
	//ДоставкаИтогНДС = СтоимостьДоставкиПринципалаИтог;
	//ВознаграждениеНалИтогНДС = КассовоеОбслуживаниеИтог;
	//ВознаграждениеБНалИтогНДС = БанковскоеОбслуживаниеИтог;
	//ПодъемИтогНДС = ПодъемИтог;
	//СтраховойСборИтогНДС = СтраховойСборИтог;
	
	СтавкаНДСДляОтчета = Отчеты.ОтчетАгента.ЗначениеСтавкиНСДДляРасчетаУслуг(КонецДня(КонДата));
	КоэффВыделенияНДС = СтавкаНДСДляОтчета/(100+СтавкаНДСДляОтчета);
	КоэффНачисленияНДС = СтавкаНДСДляОтчета/100;
	
	Если ПоказыватьНДС Тогда
		ОблИтогиНДС = Мак.ПолучитьОбласть("ИтогиНДС");
		// НДС
		//ОблИтогиНДС.Параметры.ОценочнаяСтоимостьНДС = Окр(ОценочнаяСтоимостьИтог * 18/118, 2);
		//ОблИтогиНДС.Параметры.СтоимостьДоставкиПринципалаНДС = Окр(СтоимостьДоставкиПринципалаИтог * 18/118, 2);
		//ОблИтогиНДС.Параметры.ПолученоСКлиентаНДС = Окр(ПолученоСКлиентаИтог * 18/118, 2);
		ОблИтогиНДС.Параметры.ОценочнаяСтоимостьНДС = Окр(ОценочнаяСтоимостьИтог * КоэффВыделенияНДС, 2);
		ОблИтогиНДС.Параметры.СтоимостьДоставкиПринципалаНДС = Окр(СтоимостьДоставкиПринципалаИтог * КоэффВыделенияНДС, 2);
		ОблИтогиНДС.Параметры.ПолученоСКлиентаНДС = Окр(ПолученоСКлиентаИтог * КоэффВыделенияНДС, 2);

		//УслугиСДНДС = Окр(УслугиСДИтог * 0.18,2);
		УслугиСДНДС = Окр(УслугиСДИтог * КоэффНачисленияНДС,2);

		ОблИтогиНДС.Параметры.УслугиСДНДС = УслугиСДНДС;
		
		//СтоимостьДоставкиНДС = Окр(СтоимостьДоставкиИтог * 0.18,2);
		СтоимостьДоставкиНДС = Окр(СтоимостьДоставкиИтог * КоэффНачисленияНДС,2);
		ОблИтогиНДС.Параметры.СтоимостьДоставкиНДС = СтоимостьДоставкиНДС;
		
		//КассовоеОбслуживаниеНДС  = Окр(КассовоеОбслуживаниеИтог * 0.18,2);
		КассовоеОбслуживаниеНДС  = Окр(КассовоеОбслуживаниеИтог * КоэффНачисленияНДС,2);
		ОблИтогиНДС.Параметры.КассовоеОбслуживаниеНДС = КассовоеОбслуживаниеНДС;
		
		//БанковскоеОбслуживаниеНДС  = Окр(БанковскоеОбслуживаниеИтог * 0.18,2);
		БанковскоеОбслуживаниеНДС  = Окр(БанковскоеОбслуживаниеИтог * КоэффНачисленияНДС,2); 
		ОблИтогиНДС.Параметры.БанковскоеОбслуживаниеНДС = БанковскоеОбслуживаниеНДС;
		
		//ПодъемНДС  = Окр(ПодъемИтог * 0.18,2); 
		ПодъемНДС  = Окр(ПодъемИтог * КоэффНачисленияНДС,2); 
		ОблИтогиНДС.Параметры.ПодъемНДС = ПодъемНДС;
		
		//СтраховойСборНДС = Окр(СтраховойСборИтог * 0.18,2); 
		СтраховойСборНДС = Окр(СтраховойСборИтог * КоэффНачисленияНДС,2); 
		ОблИтогиНДС.Параметры.СтраховойСборНДС = СтраховойСборНДС;
		
		//ОблИтогиНДС.Параметры.ВозвратДСНДС = Окр(ВозвратДСИтог * 18/118, 2);
		ОблИтогиНДС.Параметры.ВозвратДСНДС = Окр(ВозвратДСИтог * КоэффВыделенияНДС, 2);
		
		// ИтогНДС
		ОблИтогиНДС.Параметры.ОценочнаяСтоимостьИтогНДС = ОценочнаяСтоимостьИтог;
		ОблИтогиНДС.Параметры.СтоимостьДоставкиПринципалаИтогНДС = СтоимостьДоставкиПринципалаИтог;
		ОблИтогиНДС.Параметры.ПолученоСКлиентаИтогНДС = ПолученоСКлиентаИтог;
		
		УслугиСДИтогНДС = УслугиСДИтог + УслугиСДНДС;
		ОблИтогиНДС.Параметры.УслугиСДИтогНДС = УслугиСДИтогНДС;
		
		СтоимостьДоставкиИтогНДС = СтоимостьДоставкиИтог + СтоимостьДоставкиНДС;
		ОблИтогиНДС.Параметры.СтоимостьДоставкиИтогНДС = СтоимостьДоставкиИтогНДС;
		
		//ОблИтогиНДС.Параметры.ВывозТехникиИтогНДС = ВывозТехникиИтог;
		КассовоеОбслуживаниеИтогНДС = КассовоеОбслуживаниеИтог + КассовоеОбслуживаниеНДС;
		ОблИтогиНДС.Параметры.КассовоеОбслуживаниеИтогНДС = КассовоеОбслуживаниеИтогНДС;
		
		БанковскоеОбслуживаниеИтогНДС = БанковскоеОбслуживаниеИтог + БанковскоеОбслуживаниеНДС;
		ОблИтогиНДС.Параметры.БанковскоеОбслуживаниеИтогНДС = БанковскоеОбслуживаниеИтогНДС;
		
		ПодъемИтогНДС = ПодъемИтог + ПодъемНДС;
		ОблИтогиНДС.Параметры.ПодъемИтогНДС = ПодъемИтогНДС;
		
		СтраховойСборИтогНДС = СтраховойСборИтог + СтраховойСборНДС;
		ОблИтогиНДС.Параметры.СтраховойСборИтогНДС = СтраховойСборИтогНДС;
		
		ОблИтогиНДС.Параметры.ВозвратДСИтогНДС = ВозвратДСИтог;
		
		ОблИтогиНДС.Параметры.СтавкаНДС = СтавкаНДСДляОтчета;

		Таб.Вывести(ОблИтогиНДС);
	КонецЕсли;
	
	// выводим итоги
	ОблПодвал = Мак.ПолучитьОбласть("Подвал" + ?(ПоказыватьНДС, "НДС",""));
	
	ОблПодвал.Параметры.Параметр1 = ДанныеДляПечати.Параметр1;
	ОблПодвал.Параметры.Параметр2 = ДанныеДляПечати.Параметр2;
	
	ОблПодвал.Параметры.Параметр2Винительный = Параметр2Винительный;
	ОблПодвал.Параметры.СуммаВсего = УслугиСДИтогНДС;
	ОблПодвал.Параметры.СуммаВсегоПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(УслугиСДИтогНДС, Константы.ВалютаРегламентированногоУчета.Получить());
	
	Если ПоказыватьНДС Тогда
		ОблПодвал.Параметры.СтавкаНДС = СтавкаНДСДляОтчета;
		ОблПодвал.Параметры.СуммаВсегоНДС = УслугиСДНДС;
		ОблПодвал.Параметры.СуммаВсегоНДСПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(УслугиСДНДС, Константы.ВалютаРегламентированногоУчета.Получить());
	КонецЕсли;

	ОблПодвал.Параметры.ВсегоЗаказов = НПП-1;
	ОблПодвал.Параметры.ВсегоЗаказовПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(НПП-1);
	
	ОблПодвал.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
	ОблПодвал.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
	ОблПодвал.Параметры.ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
	ОблПодвал.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
	
	Таб.Вывести(ОблПодвал);
	
	Таб.Автомасштаб = Истина;
	Таб.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Таб.Показать("Отчет агента");
	
КонецПроцедуры

