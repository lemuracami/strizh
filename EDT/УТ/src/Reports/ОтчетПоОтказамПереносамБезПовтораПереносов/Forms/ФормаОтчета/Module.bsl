
&НаСервере

Функция ПолучитьМакетНаСервере()  
	
	ЭтотОбъект=РеквизитФормыВЗначение("Отчет");  
	
	Макет = ЭтотОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");  
	
	Возврат Макет;
	
КонецФункции


&НаКлиенте
Процедура ОтправитьПоПочте(Команда)
	СхемаКомпоновкиДанных = ПолучитьМакетНаСервере();
	
	СтруктураВариантов = Новый Структура;
	пВарианты = СхемаКомпоновкиДанных.ВариантыНастроек;
	Для Каждого пЭл ИЗ пВарианты Цикл
		СтруктураВариантов.Вставить(пЭл.Имя,пЭл.Настройки);
	КонецЦикла;
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураВариантов.ДляПочты);
	КомпоновщикНастроек.Настройки.параметрыданных.Элементы[0].Значение = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение;
	
	Если Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].использование Тогда
		КомпоновщикНастроек.Настройки.отбор.элементы[0].ПравоеЗначение = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].ПравоеЗначение;
		КомпоновщикНастроек.Настройки.отбор.элементы[0].ВидСравнения = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].ВидСравнения;
		КомпоновщикНастроек.Настройки.отбор.элементы[0].Использование = Истина;
	КонецеСли;
	//Из схемы возьмем настройки по умолчанию
	Настройки = КомпоновщикНастроек.Настройки;
	
	//СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	//Помещаем в переменную данные о расшифровке данных
	//ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки   ДанныеРасшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
	Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	//Выполним компоновку с помощью процессора компоновки   ДанныеРасшифровки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,, Истина
	);
	
	//Очищаем поле табличного документа
	Результат = Элементы.Результат;
	Результат.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Таб = Новый ДеревоЗначений;
	ПроцессорВывода.УстановитьОбъект(Таб);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	МасК = Таб.Строки.ВыгрузитьКолонку("ИнтернетМагазин");
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
				|	РассылкиКонтрагентов.Почта КАК Почта,
				|	РассылкиКонтрагентов.Контрагент КАК Контрагент
				|ИЗ
				|	РегистрСведений.РассылкиКонтрагентов КАК РассылкиКонтрагентов
				|ГДЕ
				|	РассылкиКонтрагентов.ТипРассылки = &ТипРассылки
				|	И РассылкиКонтрагентов.Контрагент В(&МасК)
				|
				|УПОРЯДОЧИТЬ ПО
				|	Контрагент,
				|	Почта";
	Зап.УстановитьПараметр("ТипРассылки", Перечисления.ТипыРассылки.ЛогистическаяРассылка);			
	Зап.УстановитьПараметр("МасК", МасК);
	СписокПочты = Зап.Выполнить().Выгрузить();
	
/////////////////	
	//Из схемы возьмем настройки по умолчанию          "logist@strizh-logistic.ru"
	
	Для Каждого Тек Из Таб.Строки Цикл
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураВариантов.ДляПочты);
		КомпоновщикНастроек.Настройки.параметрыданных.Элементы[0].Значение = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение;
		КомпоновщикНастроек.Настройки.отбор.элементы[0].ПравоеЗначение = Тек.ИнтернетМагазин.Ссылка;
		КомпоновщикНастроек.Настройки.отбор.элементы[0].Использование = Истина;
		КомпоновщикНастроек.Настройки.Параметрывывода.элементы.найти("ВыводитьЗаголовок").Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
		КомпоновщикНастроек.Настройки.Параметрывывода.элементы.найти("ВыводитьОтбор").Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
		КомпоновщикНастроек.Настройки.Параметрывывода.элементы.найти("ВыводитьОтбор").Использование = Истина;
		КомпоновщикНастроек.Настройки.Параметрывывода.элементы.найти("МакетОформления").Значение = "Арктика";
		КомпоновщикНастроек.Настройки.Параметрывывода.элементы.найти("МакетОформления").Использование = Истина;
		КомпоновщикНастроек.Настройки.Параметрывывода.элементы.найти("ВыводитьПараметрыДанных").Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
		КомпоновщикНастроек.Настройки.Параметрывывода.элементы.найти("ВыводитьПараметрыДанных").Использование = Истина;
		
		Настройки = КомпоновщикНастроек.Настройки;
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки);
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,, Истина);
		Результат = Элементы.Результат;
		Результат.Очистить();
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(Результат);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
		УдаляемаяОбласть = Результат.Область("R1:R"+Результат.ФиксацияСверху);
		Результат.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		
		Если Результат.ВысотаТаблицы > 2 Тогда //+++ Костя 110915 Есть данные для отправки
			Г = Новый УникальныйИдентификатор;
			//ПутьКФайлу = КаталогВременныхФайлов() + Строка(Г) + ".html";
			//ПутьКФайлу = КаталогВременныхФайлов() + Строка(Г) + ".xls";
			ПутьКФайлу = КаталогВременныхФайлов() + "report_f_t_" + ПредставлениеПериода(Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаНачала, Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.Датаокончания, "ДФ=yyyy-MM-dd") + ".xls";    //  + Строка(Г)   + Строка(Г)
			//Результат.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.HTML3);
			Результат.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLS);
			Т = Новый ТекстовыйДокумент();
			Т.Прочитать(ПутьКФайлу);
			Стр = "Отчет по отказам/переносам за " + ПредставлениеПериода(Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаНачала, Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.Датаокончания, "ДЛФ=DD");
			//Т.ПолучитьТекст();
			МасП = Новый Массив;
			
			//МасП.Добавить("pavel.nechaev@strizh-logistic.ru");
			МасП.Добавить("logist@strizh-logistic.ru");
            //+++++Серегин М.В. 19.01.2016 11:55:24 
            //МасП.Добавить("yuriy.gnedov@strizh-logistic.ru");
            //-----Серегин М.В. 19.01.2016 11:55:26
			//МасП.Добавить("evgeniy.marochkin@strizh-logistic.ru");
			
			Струк = Новый Структура;
			Струк.Вставить("Контрагент", Тек.ИнтернетМагазин.Ссылка);
			НайСтроки = СписокПочты.НайтиСтроки(Струк);
			Для Сч = 0 По НайСтроки.Количество() - 1 Цикл
				МасП.Добавить(НайСтроки[Сч].Почта);
			КонецЦикла;	
			//
			//Отпр = lem.ОтправитьСообщение(МасП, "Отчет по отказам/переносам за " + ПредставлениеПериода(Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаНачала, Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.Датаокончания, "ДЛФ=DD"), Стр, , "Логистическая компания ""Стриж""",, ТипТекстаПочтовогоСообщения.HTML) ;
			
			Отпр = lem.ОтправитьСообщение(МасП, "Отчет по отказам/переносам за " + ПредставлениеПериода(Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаНачала, Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.Датаокончания, "ДЛФ=DD"), Стр, ПутьКФайлу, "Логистическая компания ""Стриж""");
			Сообщить("Вывод данных по " + СокрЛП(Тек.ИнтернетМагазин.Наименование));
		КонецЕсли;//--- Костя /Условие
		
	КонецЦикла;
	
	ОтправитьПоПочтеРуководству();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоПочтеРуководству()
	СхемаКомпоновкиДанных = ПолучитьМакетНаСервере();
	
	СтруктураВариантов = Новый Структура;
	пВарианты = СхемаКомпоновкиДанных.ВариантыНастроек;
	Для Каждого пЭл ИЗ пВарианты Цикл
		СтруктураВариантов.Вставить(пЭл.Имя,пЭл.Настройки);
	КонецЦикла;
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураВариантов.ДляПочтыРуководству);
	КомпоновщикНастроек.Настройки.параметрыданных.Элементы[0].Значение = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение;
	
	Если Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].использование Тогда
		КомпоновщикНастроек.Настройки.отбор.элементы[0].ПравоеЗначение = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].ПравоеЗначение;
		КомпоновщикНастроек.Настройки.отбор.элементы[0].ВидСравнения = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].ВидСравнения;
		КомпоновщикНастроек.Настройки.отбор.элементы[0].Использование = Истина;
	КонецеСли;
	КомпоновщикНастроек.Настройки.Параметрывывода.элементы.найти("ВыводитьЗаголовок").Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
	КомпоновщикНастроек.Настройки.Параметрывывода.элементы.найти("ВыводитьОтбор").Использование = Истина;
	КомпоновщикНастроек.Настройки.Параметрывывода.элементы.найти("ВыводитьПараметрыДанных").Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
	КомпоновщикНастроек.Настройки.Параметрывывода.элементы.найти("ВыводитьПараметрыДанных").Использование = Истина;
	
	
	//Из схемы возьмем настройки по умолчанию
	Настройки = КомпоновщикНастроек.Настройки;
	
	//СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	//Помещаем в переменную данные о расшифровке данных
	//ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки   ДанныеРасшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
	Настройки,,,Тип("ГенераторМакетаКомпоновкиДанных"));
	
	//Выполним компоновку с помощью процессора компоновки   ДанныеРасшифровки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,, Истина
	);
	
	//Очищаем поле табличного документа
	Результат = Элементы.Результат;
	Результат.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	//УдаляемаяОбласть = Результат.Область("R8:R10");
	//Результат.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоГоризонтали);

	Г = Новый УникальныйИдентификатор;
	//ПутьКФайлу = КаталогВременныхФайлов() + Строка(Г) + ".html";
	ПутьКФайлу = КаталогВременныхФайлов() + "report_f_t_" + ПредставлениеПериода(Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаНачала, Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.Датаокончания, "ДФ=yyyy-MM-dd") + Строка(Г) + ".xls";
	//Результат.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.HTML3);
	Результат.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLS);
	Т = Новый ТекстовыйДокумент();
	Т.Прочитать(ПутьКФайлу);
	Стр = "Отчет по отказам/переносам за " + ПредставлениеПериода(Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаНачала, Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.Датаокончания, "ДЛФ=DD");
	МасП = Новый Массив;
	
	//МасП.Добавить("dmitry.mamonov@strizh-logistic.ru");
	//МасП.Добавить("svn@strizh-logistic.ru");
	МасП.Добавить("rea@strizh-logistic.ru");
	МасП.Добавить("maksim.ivanov@strizh-logistic.ru");	
	
	//МасП.Добавить("anatoly.kopytin@strizh-logistic.ru");
	МасП.Добавить("dmitry.sherbinkin@strizh-logistic.ru");
	МасП.Добавить("logist@strizh-logistic.ru");
    //+++++Серегин М.В. 19.01.2016 11:55:41 
    //МасП.Добавить("yuriy.gnedov@strizh-logistic.ru");
    //-----Серегин М.В. 19.01.2016 11:55:42 
	МасП.Добавить("alexey.kuzmichev@strizh-logistic.ru");
	МасП.Добавить("evgeniy.marochkin@strizh-logistic.ru");
	//МасП.Добавить("alexandr_chibisov@strizh-logistic.ru");
	МасП.Добавить("sergey.andrienko@strizh-logistic.ru");
	МасП.Добавить("inna.illarionova@strizh-logistic.ru");
	//МасП.Добавить("dmitry.romanov@strizh-logistic.ru");
	МасП.Добавить("syn@strizh-logistic.ru");
	//МасП.Добавить("andrey.maksaev@strizh-logistic.ru");
	МасП.Добавить("samovivoz@strizh-logistic.ru");
	
	
	//МасП.Добавить("evgeniy.marochkin@strizh-logistic.ru");
	//МасП.Добавить("konstantin.patsatsiya@strizh-logistic.ru");
	//Отпр = lem.ОтправитьСообщение(МасП, "Отчет по отказам/переносам за " + ПредставлениеПериода(Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаНачала, Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.Датаокончания, "ДЛФ=DD"), Стр, , "Логистическая компания ""Стриж""",, ТипТекстаПочтовогоСообщения.HTML) ;
	
	Отпр = lem.ОтправитьСообщение(МасП, "Отчет по отказам/переносам за " + ПредставлениеПериода(Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаНачала, Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.Датаокончания, "ДЛФ=DD"), Стр, ПутьКФайлу, "Логистическая компания ""Стриж""") ;
КонецПроцедуры

