Функция СформироватьСтрокуЗаголовка(Знач ГоловнойКонтрагент, Знач НачальнаяДатаОтчета, Знач КонечнаяДатаОтчета) Экспорт
	
	ДанныеДляПечати = СобратьДанныеДляПечати(ГоловнойКонтрагент, КонечнаяДатаОтчета);
	Заказчик =  ДанныеДляПечати.КонтрагентСтрокойПолный;
	Исполнитель =  ДанныеДляПечати.ОрганизацияСтрокойПолный; 
	СтрокаЗаголовка = "Заказчик:		" + Заказчик + "
	|Исполнитель:		" + Исполнитель;
	
	Возврат СтрокаЗаголовка;
	
КонецФункции

Функция СформироватьСтрокуПодзаголовка(Знач ГоловнойКонтрагент, Знач НачальнаяДатаОтчета, Знач КонечнаяДатаОтчета) Экспорт
	
	ДанныеДляПечати = СобратьДанныеДляПечати(ГоловнойКонтрагент,КонечнаяДатаОтчета);
	ПринципалСтрокой = ДанныеДляПечати.КонтрагентСтрокой;
	
	СтрокаЗаголовка = ПринципалСтрокой + ", именуемое в дальнейшем Заказчик, в лице ______________________________________, с одной стороны, и " + 
	СокрЛП(ДанныеДляПечати.Организация)  + ", именуемое в дальнейшем Исполнитель, в лице " + ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице + " " + ДанныеДляПечати.ФИОРуководителяВлице + 
	", действующего на основании Устава, с другой стороны, именуемые в дальнейшем ""Стороны"", настоящим Отчетом удостоверяют, " + 
	"что в соответствии с условиями  Договора  в период с "+Формат(НачальнаяДатаОтчета,"ДФ='d MMMM yyyy "" г.""'")+" по "+Формат(КонечнаяДатаОтчета,"ДФ='d MMMM yyyy "" г.""'")+" были осуществлены следующие услуги:";
	
	Возврат СтрокаЗаголовка;
	
КонецФункции

Функция СформироватьСтрокуПодзаголовкаОтчет3(ГоловнойКонтрагент, Знач НачальнаяДатаОтчета, Знач КонечнаяДатаОтчета) Экспорт
	
	ДанныеДляПечати = СобратьДанныеДляПечати(ГоловнойКонтрагент,КонечнаяДатаОтчета);
	ПринципалСтрокой = ДанныеДляПечати.КонтрагентСтрокой;
	
	СтрокаЗаголовка = ПринципалСтрокой + ", именуемое в дальнейшем Заказчик, в лице ______________________________________, с одной стороны, и " + 
	СокрЛП(ДанныеДляПечати.Организация)  + ", именуемое в дальнейшем Исполнитель, в лице " + ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице + " " + ДанныеДляПечати.ФИОРуководителяВлице + 
	", действующего на основании Устава, с другой стороны, именуемые в дальнейшем ""Стороны"", подписывая настоящий Отчет удостоверяют, " + 
	"что в соответствии с условиями  Договора " + ДанныеДляПечати.АгентскийДоговор + " в период с "+Формат(НачальнаяДатаОтчета,"ДФ='d MMMM yyyy "" г.""'")+" по "+Формат(КонечнаяДатаОтчета,"ДФ='d MMMM yyyy "" г.""'")+
	" Исполнитель исполнил поручения Заказчика по приему денежных средств от Покупателей в счет оплаты за доставленные Вложения и перечислил их Заказчику в следующем размере:";
	
	Возврат СтрокаЗаголовка;
	
КонецФункции

// Возможные имена параметров:
//Организация, Агент, Параметр1, Параметр2,Руководитель, ФИОРуководителя, ФИОРуководителяВлице и т.д., все что есть в ДанныеДляПечати
Функция ЗначениеПараметраДанныхПечати(Знач ИмяПараметра, Знач ГоловнойКонтрагент, Знач НачальнаяДатаОтчета, Знач КонечнаяДатаОтчета) Экспорт
	
	ДанныеДляПечати = СобратьДанныеДляПечати(ГоловнойКонтрагент,КонечнаяДатаОтчета);
	Если ДанныеДляПечати.Свойство(ИмяПараметра) Тогда
		Возврат ДанныеДляПечати[ИмяПараметра];
	Иначе
		Возврат "";
	КонецЕсли;	
	
КонецФункции	

Функция СобратьДанныеДляПечати(Знач Контрагент,Знач КонДата) Экспорт
	
    ДанныеДляПечати = Новый Структура;   
    ВариантПечати = ПолучитьПараметрыПечатиОтчетаКонтрагента(Контрагент);
    Если ВариантПечати = Перечисления.ВариантыПечатиОтчетовАгента.ПринциалАгент Тогда
        Параметр1 = "Принципал"; 
        Параметр2 = "Агент";
	ИначеЕсли ВариантПечати = Перечисления.ВариантыПечатиОтчетовАгента.АгентСубагент Тогда
		Параметр1 = "Агент"; 
		Параметр2 = "Субагент";
	Иначе
        Параметр1 = "Заказчик"; 
        Параметр2 = "Исполнитель";
    КонецЕсли; 
    ДанныеДляПечати.Вставить("Параметр1",Параметр1);
    ДанныеДляПечати.Вставить("Параметр2",Параметр2);
    
    Отбор = Новый Структура();
    Отбор.Вставить("Контрагент",Контрагент);
    Отбор.Вставить("ТипОплаты",Справочники.ТипыОплат.Наличные);
    Отбор.Вставить("ТипДоставки", Перечисления.ТипыЗаказов.Доставка);
	
	ОрганизацияДоставки	= Контрагент.ОсновнойДоговорКонтрагента.Организация;
	
	Если ЗначениеЗаполнено(ОрганизацияДоставки) Тогда
		Агент = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ОрганизацияДоставки, КонДата),"ПолноеНаименование,ИНН,КПП");
		Организация = ОрганизацияДоставки;
	Иначе
		Организация = Справочники.Организации.ПустаяСсылка();
		Агент = "";	
	КонецЕсли;	
	
    ДанныеДляПечати.Вставить("Организация",Организация);
	ДанныеДляПечати.Вставить("ОрганизацияСтрокой",ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ОрганизацияДоставки, КонДата),"ПолноеНаименование"));
	ДанныеДляПечати.Вставить("ОрганизацияСтрокойПолный",ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ОрганизацияДоставки, КонДата),"ПолноеНаименование,ИНН,КПП"));

    ДанныеДляПечати.Вставить("Агент", Агент);
    
	КонтрагентСтрокой = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование");
	ДанныеДляПечати.Вставить( "КонтрагентСтрокой",КонтрагентСтрокой);
	
	КонтрагентСтрокойПолный = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование,ИНН,КПП");
	ДанныеДляПечати.Вставить( "КонтрагентСтрокойПолный",КонтрагентСтрокойПолный);

	
    Отбор = Новый Структура();
    Отбор.Вставить("СтруктурнаяЕдиница",Организация);
    Отбор.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
    ЗаписьРегистра = РегистрыСведений.ОтветственныеЛицаОрганизации.СрезПоследних(КонДата,Отбор);
    Если ЗаписьРегистра.Количество()>0 Тогда
        РуководительСсылка = ЗаписьРегистра[0].ФизическоеЛицо;
        ФИО = ФормированиеПечатныхФорм.ФамилияИмяОтчество(РуководительСсылка,КонДата);
        ФИОруководителя =  ФИО.Фамилия +" " + ФИО.Имя +" "+ ФИО.Отчество ;
		
		ФИОРуководителяВлице = ПолучитьСклонениеСтроки(ФИОРуководителя, "ПЛ="+СокрЛП(РуководительСсылка.Пол), "ПД=Родительный");

		СоставФИО = СтрРазделить(ФИОРуководителяВлице," ");
		ФИОРуководителяВлице =  СоставФИО[0]+" "+Лев(ФИО.Имя,1)+". "+Лев(ФИО.Отчество,1)+".";
		
		ФИОруководителя =  ФИО.Фамилия+" "+Лев(ФИО.Имя,1)+". "+Лев(ФИО.Отчество,1)+".";
        
        ДолжностьРуководителяОрганизации = ЗаписьРегистра[0].Должность;	
        ДолжностьРуководителяОрганизацииВлице  = ПросклонятьФразуПоСловам(СокрЛП(ДолжностьРуководителяОрганизации.Наименование),"ПД=Родительный");
    Иначе
       РуководительСсылка = Справочники.ФизическиеЛица.ПустаяСсылка();
       ФИОРуководителя = "";
       ФИОРуководителяВлице = "";
       ДолжностьРуководителяОрганизации = Справочники.ДолжностиОрганизаций.ПустаяСсылка();
       ДолжностьРуководителяОрганизацииВлице = "";
   КонецЕсли;
   
    ДанныеДляПечати.Вставить("Руководитель",РуководительСсылка);
    ДанныеДляПечати.Вставить("ФИОРуководителя",ФИОруководителя);
    ДанныеДляПечати.Вставить("ФИОРуководителяВлице",ФИОРуководителяВлице);
    ДанныеДляПечати.Вставить("ДолжностьРуководителяОрганизации",ДолжностьРуководителяОрганизации);
    ДанныеДляПечати.Вставить("ДолжностьРуководителяОрганизацииВлице",ДолжностьРуководителяОрганизацииВлице);
    
	ДанныеДляПечати.Вставить("АгентскийДоговор",СокрЛП(Контрагент.ОсновнойДоговорКонтрагента.Номер) + " от " + Формат(Контрагент.ОсновнойДоговорКонтрагента.Дата, "ДФ=dd.MM.yyyy")); //Задача № 2724 
	
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |	КонтактныеЛицаКонтрагентов.Наименование КАК ИмяЛица,
                   |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица.Наименование КАК Должность,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Фамилия + "" "" + КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Имя + "" "" + КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Отчество КАК ФИО,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Пол КАК Пол,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Фамилия КАК Фамилия,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Имя КАК Имя,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Отчество КАК Отчество
                   |ИЗ
                   |	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
                   |ГДЕ
                   |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица В(&РолиКонтактныхЛиц)
                   |	И КонтактныеЛицаКонтрагентов.Владелец = &Владелец
                   |	И НЕ КонтактныеЛицаКонтрагентов.ПометкаУдаления";
    РолиКонтактныхЛиц = Новый СписокЗначений;
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Гендиректор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Директор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.ИндивидуальныйПредприниматель);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.КоммерческийДиректор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Менеджер);
	
	ЗамГенДиректора = Справочники.РолиКонтактныхЛиц.НайтиПоКоду("000000008");
	Если Не ЗамГенДиректора.Ссылка.Пустая() Тогда
		
		РолиКонтактныхЛиц.Добавить(ЗамГенДиректора);

	КонецЕсли;
	
    Запрос.УстановитьПараметр("РолиКонтактныхЛиц",РолиКонтактныхЛиц);                   
    Запрос.УстановитьПараметр("Владелец", Контрагент);	
    Выборка = Запрос.Выполнить().Выбрать();
    Работник = "";
    ФизЛицоПол = "";
    Имя  ="";
    Отчество = "";
    ДиректорПринципалаВЛице = "";
    Если Выборка.Следующий() Тогда
        Должность = Выборка.Должность;
		НаименованиеДолжности = СокрЛП(Должность);
		НаименованиеДолжности = ?(НаименованиеДолжности = "ИП","индивидуальный предприниматель",НаименованиеДолжности);

        ДолжностьВЛице = ПросклонятьФразуПоСловам(НаименованиеДолжности,"ПД=Родительный");
        ФИОПринципала = Выборка.ФИО;
        Пол = Выборка.Пол;
        Работник = Выборка.Фамилия;
        Имя = Выборка.Имя;
        Отчество = Выборка.Отчество;
        ФизЛицоПол = Пол;
    КонецеСли;
    РезультатСклонения = "";
	
	ДиректорПринципалаВЛице = ПолучитьСклонениеСтроки(Работник,СокрЛП(ФизЛицоПол), "ПД=Родительный");
	
	ДиректорПринципалаВЛице = ДиректорПринципалаВЛице+" "+Лев(Имя,1)+". "+Лев(Отчество,1)+".";
    ДанныеДляПечати.Вставить("Должность",Должность);
    ДанныеДляПечати.Вставить("ДолжностьВлице",ДолжностьВЛице);
    ДанныеДляПечати.Вставить("ДиректорПринципала",Работник+" "+Лев(Имя,1)+". "+Лев(Отчество,1)+".");
    ДанныеДляПечати.Вставить("ДиректорПринципалаВЛице",ДиректорПринципалаВЛице);
    
    Возврат ДанныеДляПечати
    
КонецФункции // СобратьДанныеДляПечати()

Функция СуммаНДСВСумме(Знач Сумма, Знач КонечнаяДатаОтчета) Экспорт
	
	СтавкаНДСДляОтчета = Отчеты.ОтчетАгента.ЗначениеСтавкиНСДДляРасчетаУслуг(КонецДня(КонечнаяДатаОтчета));
	КоэффВыделенияНДС = СтавкаНДСДляОтчета/(100+СтавкаНДСДляОтчета);
	КоэффНачисленияНДС = СтавкаНДСДляОтчета/100;

	СуммаНДС = Окр(Сумма*КоэффВыделенияНДС, 2);
	Возврат СуммаНДС;
	
КонецФункции

Функция СуммаНДССверху(Знач Сумма, Знач КонечнаяДатаОтчета) Экспорт
	
	СтавкаНДСДляОтчета = Отчеты.ОтчетАгента.ЗначениеСтавкиНСДДляРасчетаУслуг(КонецДня(КонечнаяДатаОтчета));
	КоэффВыделенияНДС = СтавкаНДСДляОтчета/(100+СтавкаНДСДляОтчета);
	КоэффНачисленияНДС = СтавкаНДСДляОтчета/100;

	СуммаНДС = Окр(Сумма*КоэффНачисленияНДС, 2);
	Возврат СуммаНДС;
	
КонецФункции

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСклонениеСтроки(Слово,Пол = Неопределено, Падеж)
	СклоненияСтроки = ПолучитьСклоненияСтроки(Слово,Пол, Падеж);
	Возврат СклоненияСтроки[0];
КонецФункции

Функция ПросклонятьФразуПоСловам(Знач ИсходнаяСтрока, Падеж) Экспорт

    Результат = "";

    ИсходнаяСтрока = СокрЛП(ИсходнаяСтрока);
    Если СтрДлина(ИсходнаяСтрока) = 0 Тогда
        Возврат Результат;
    КонецЕсли;

    Поз = Найти(ИсходнаяСтрока, " ");
    Пока Поз > 0 Цикл

        СловоВПадеже = "";

        Слово = Лев(ИсходнаяСтрока, Поз-1);
		Если Слово = "директора" Тогда Слово = "директор" КонецЕсли;
		
		СловоВПадеже = ПолучитьСклонениеСтроки(Слово,,Строка(Падеж));

        Результат = СокрЛП(Результат + " " + НРег(СловоВПадеже));
        ИсходнаяСтрока = СокрЛП(Сред(ИсходнаяСтрока, Поз));

        Если ПустаяСтрока(ИсходнаяСтрока) Тогда
            Прервать; // Это перестраховка. Цикл и так должен прерваться
        КонецЕсли;

        Поз = Найти(ИсходнаяСтрока, " ");
    КонецЦикла;

	Если НЕ ПустаяСтрока(ИсходнаяСтрока) Тогда // добавляем заключительное слово
		Если ИсходнаяСтрока = "директора" Тогда ИсходнаяСтрока = "директор" КонецЕсли;
		
        СловоВПадеже = "";
		СловоВПадеже = ПолучитьСклонениеСтроки(ИсходнаяСтрока, ,Строка(Падеж));

        Результат = СокрЛП(Результат + " " + НРег(СловоВПадеже));

    КонецЕсли;
    Возврат Результат;

КонецФункции

Функция ПолучитьПараметрыПечатиОтчетаКонтрагента (Контрагент)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ПараметрыПечатиОтчетовАгента.ВариантПечати
    |ИЗ
    |   РегистрСведений.ПараметрыПечатиОтчетовАгента КАК ПараметрыПечатиОтчетовАгента
    |ГДЕ
    |   ПараметрыПечатиОтчетовАгента.Контрагент В (&Контрагент)";
    
    Запрос.УстановитьПараметр("Контрагент", Контрагент);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат ВыборкаДетальныеЗаписи.ВариантПечати;
    Иначе
        Возврат Перечисления.ВариантыПечатиОтчетовАгента.ПринциалАгент;
    КонецЕсли;;
КонецФункции

Функция ФорматНомераПлатежногоДокумента(Знач Номер) Экспорт
	
	Номер = Прав(Номер,6);
	Попытка
		Номер = Число(Номер);
		Возврат Формат(Номер,"ЧГ=");
	Исключение
		Возврат Номер;
	КонецПопытки;
	
КонецФункции

#КонецОбласти