
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СоответствиеЗакрепления = Новый Структура;
	СоответствиеЗакрепления.Вставить("ПоКатегориямЗаказа", 10);
	СоответствиеЗакрепления.Вставить("ПоВесуЗаказа", 10);
	СоответствиеЗакрепления.Вставить("ПоГеографииЗаказа", 11);
	СоответствиеЗакрепления.Вставить("ПоОплатамКлиентов", 10);

	СтандартнаяОбработка = Ложь;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ПараметрРазворачиватьПустыеЗначения = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("РазворачиватьПустыеЗначения"));
	РазворачиватьПустыеЗначения = ПараметрРазворачиватьПустыеЗначения.Значение;
	
	ПараметрПоОсновномуМагазину  = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоОсновномуМагазину"));
	ПоОсновномуМагазину = ПараметрПоОсновномуМагазину.Значение;
	
	ПараметрВариантОтчета = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТекущийВариант"));
    ТекущийВариант = СокрЛП(ПараметрВариантОтчета.Значение);
	
	ПараметрПериодОтчета	= НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета"));
	ДатаНачала = ПараметрПериодОтчета.Значение.ДатаНачала;
	ДатаОкончания = ПараметрПериодОтчета.Значение.ДатаОкончания;	
	
    ПараметрИнтернетМагазин = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ИнтернетМагазин"));
    ИнтернетМагазин = ?(ПараметрИнтернетМагазин.Использование, ПараметрИнтернетМагазин.Значение, Неопределено);
	
	ПараметрВыводитьДокументы = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыводитьДокументы"));
    ВыводитьДокументы = ПараметрВыводитьДокументы.Значение;
	
	Если ВыводитьДокументы И ПараметрИнтернетМагазин.Использование Тогда
		Попытка
			НастройкиОтчета.Структура[0].Строки[0].Структура[0].Структура[0].Использование = Истина;
		Исключение
		Конецпопытки;
		
	ИначеЕсли ВыводитьДокументы И НЕ ПараметрИнтернетМагазин.Использование Тогда
		Попытка
			НастройкиОтчета.Структура[0].Строки[0].Структура[0].Структура[0].Использование = Ложь;
		Исключение
		Конецпопытки;

		Сообщить("Нельзя включать вывод документов по всем партнерам!");
	КонецЕсли;
	
	//ПараметрАльтернативныйВариант = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("АльтернативныйВариант"));
	//АльтернативныйВариант = ПараметрАльтернативныйВариант.Значение;

	ИсточникДанныхОтчета = ДанныеДляОтчета(ДатаНачала, ДатаОкончания, ИнтернетМагазин, ТекущийВариант, РазворачиватьПустыеЗначения, ПоОсновномуМагазину);
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; 
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);	
	
	ВнешнийНаборДанных = Новый Структура("ИсточникДанных", ИсточникДанныхОтчета); 
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки); 
	
	ДокументРезультат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат); 
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);	
	
	ДокументРезультат.ПоказатьУровеньГруппировокКолонок(0);
	ДокументРезультат.ПоказатьУровеньГруппировокСтрок(0); 

	ДокументРезультат.ФиксацияСверху =  СоответствиеЗакрепления[ТекущийВариант];
	
КонецПроцедуры

Функция ДанныеДляОтчета(ДатаНачала, ДатаОкончания, ИнтернетМагазин, ТекущийВариант, РазворачиватьПустыеЗначения, ПоОсновномуМагазину)
	
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		Сообщить("Начало запроса данных по заказам: " + СокрЛП(ТекущаяДата()));
	КонецЕсли;	
	
	ПараметрыЗапроса = Отчеты.ОтчетАгентаУниверсальный.ПараметрыЗапросаПоЗаказам();
	Если ПоОсновномуМагазину И Не ИнтернетМагазин = Неопределено Тогда
		ПараметрыЗапроса.Партнер = ИнтернетМагазин;
		ПараметрыЗапроса.ПоПартнеру = Истина;
	ИначеЕсли НЕ ПоОсновномуМагазину И Не ИнтернетМагазин = Неопределено Тогда
		ПараметрыЗапроса.ИнтернетМагазин = ИнтернетМагазин;
		ПараметрыЗапроса.ПоИнтернетМагазину = Истина;
	КонецЕсли;
		
	ТаблицаЗаказов = Отчеты.ОтчетАгентаУниверсальный.ПолучитьЗакрытыеЗаказыВПериоде(Новый СтандартныйПериод(ДатаНачала, ДатаОкончания), ПараметрыЗапроса);

	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		Сообщить("Начало запроса данных по отчету: " + СокрЛП(ТекущаяДата()));
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	#Область ТекстЗапроса
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаЗаказов.Документ КАК Документ,
		|	ТаблицаЗаказов.НомерДокумента КАК НомерДокумента,
		|	ТаблицаЗаказов.ДатаДокумента КАК ДатаДокумента,
		|	ТаблицаЗаказов.ЮрЛицо КАК ЮрЛицо,
		|	ТаблицаЗаказов.ТипЗаказа КАК ТипЗаказа,
		|	ТаблицаЗаказов.Транспорт КАК Транспорт,
		|	ВЫРАЗИТЬ(ТаблицаЗаказов.ИнтернетМагазин КАК Справочник.Контрагенты) КАК ИнтернетМагазин,
		|	ВЫРАЗИТЬ(ТаблицаЗаказов.Партнер КАК Справочник.Контрагенты) КАК Партнер,
		|	ВЫРАЗИТЬ(ТаблицаЗаказов.КатегорияДоставки КАК Справочник.КатегорииДоставки2014) КАК КатегорияДоставки,
		|	ТаблицаЗаказов.Водитель КАК Водитель,
		|	ТаблицаЗаказов.Клиент КАК Клиент,
		|	ТаблицаЗаказов.ТипОплаты КАК ТипОплаты,
		|	ТаблицаЗаказов.СтатусЗаказа КАК СтатусЗаказа,
		|	ТаблицаЗаказов.ПричинаНевыполнения КАК ПричинаНевыполнения,
		|	ТаблицаЗаказов.СтатусИнтернетМагазина КАК СтатусИнтернетМагазина,
		|	ТаблицаЗаказов.ПричинаОтказа КАК ПричинаОтказа,
		|	ТаблицаЗаказов.VIPДоставка КАК VIPДоставка,
		|	ТаблицаЗаказов.ВидVip КАК ВидVip,
		|	ТаблицаЗаказов.ТарифнаяСетка КАК ТарифнаяСетка,
		|	ТаблицаЗаказов.РасчетныйБрейк КАК РасчетныйБрейк,
		|	ТаблицаЗаказов.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
		|	ТаблицаЗаказов.ЗонаТарификации КАК ЗонаТарификации,
		|	ТаблицаЗаказов.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
		|	ТаблицаЗаказов.ТерминалДоставки КАК ТерминалДоставки,
		|	ТаблицаЗаказов.ТерминалПриёма КАК ТерминалПриёма,
		|	ТаблицаЗаказов.ОбъемныйБрейк КАК ОбъемныйБрейк,
		|	ТаблицаЗаказов.ПодъемныйБрейк КАК ПодъемныйБрейк,
		|	ТаблицаЗаказов.СуммаОценочная КАК СуммаОценочная,
		|	ТаблицаЗаказов.СуммаПолученная КАК СуммаПолученная,
		|	ТаблицаЗаказов.СуммаДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
		|	ТаблицаЗаказов.СуммаДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
		|	ТаблицаЗаказов.УслугиСД КАК УслугиСД,
		|	ТаблицаЗаказов.БанковскаяКомиссия КАК БанковскаяКомиссия,
		|	ТаблицаЗаказов.КассовоеОбслуживание КАК КассовоеОбслуживание,
		|	ТаблицаЗаказов.СуммаВозврата КАК СуммаВозврата,
		|	ТаблицаЗаказов.Масса КАК Масса,
		|	ТаблицаЗаказов.СуммаЧастичногоВозврата КАК СуммаЧастичногоВозврата,
		|	ТаблицаЗаказов.ОплаченоКлиентовНал КАК ОплаченоКлиентовНал,
		|	ТаблицаЗаказов.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
		|	ТаблицаЗаказов.ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
		|	ТаблицаЗаказов.УслугиСДЧистые КАК УслугиСДЧистые,
		|	ТаблицаЗаказов.СтраховойСбор КАК СтраховойСбор,
		|	ТаблицаЗаказов.ФактическийВес КАК ФактическийВес,
		|	ТаблицаЗаказов.ОбъемЗабора КАК ОбъемЗабора,
		|	ТаблицаЗаказов.ОбъемЗабораПоЗаказам КАК ОбъемЗабораПоЗаказам,
		|	ТаблицаЗаказов.ВыгруженныйОбъем КАК ВыгруженныйОбъем,
		|	ТаблицаЗаказов.ТарифицируемыйВес КАК ТарифицируемыйВес,
		|	ТаблицаЗаказов.СтоимостьОценочнаяПоТоварно КАК СтоимостьОценочнаяПоТоварно,
		|	ТаблицаЗаказов.КоличествоПереносовСЗаездами КАК КоличествоПереносовСЗаездами,
		|	ТаблицаЗаказов.СтоимостьПереносовСЗаездами КАК СтоимостьПереносовСЗаездами,
		|	ТаблицаЗаказов.СтоимостьПодъемаМП КАК СтоимостьПодъемаМП
		|ПОМЕСТИТЬ ТаблицаЗаказов
		|ИЗ
		|	&ТаблицаЗаказов КАК ТаблицаЗаказов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетныеБрейки.Наименование КАК Наименование,
		|	РасчетныеБрейки.ВесОт КАК ВесОт,
		|	РасчетныеБрейки.ВесДо КАК ВесДо
		|ПОМЕСТИТЬ ВТ_РасчетныеБрейки
		|ИЗ
		|	Справочник.РасчетныеБрейки КАК РасчетныеБрейки
		|ГДЕ
		|	РасчетныеБрейки.Владелец.Код = ""strizh""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗаказов.Документ КАК Документ,
		|	1 КАК ЗаказыЗаборы,
		|	НАЧАЛОПЕРИОДА(ТаблицаЗаказов.ДатаДокумента, МЕСЯЦ) КАК Месяц,
		|	ТаблицаЗаказов.НомерДокумента КАК НомерДокумента,
		|	ТаблицаЗаказов.ЮрЛицо КАК ЮрЛицо,
		|	ТаблицаЗаказов.ТипЗаказа КАК ТипЗаказа,
		|	ТаблицаЗаказов.Транспорт КАК Транспорт,
		|	ВЫБОР
		|		КОГДА &ПоОсновномуМагазину
		|			ТОГДА ТаблицаЗаказов.Партнер
		|		ИНАЧЕ ТаблицаЗаказов.ИнтернетМагазин
		|	КОНЕЦ КАК ИнтернетМагазин,
		|	ТаблицаЗаказов.Партнер КАК Партнер,
		|	ТаблицаЗаказов.КатегорияДоставки КАК КатегорияДоставки1,
		|	ТаблицаЗаказов.Водитель КАК Водитель,
		|	ТаблицаЗаказов.Клиент КАК Клиент,
		|	ТаблицаЗаказов.ТипОплаты КАК ТипОплаты,
		|	ТаблицаЗаказов.СтатусЗаказа КАК СтатусЗаказа,
		|	ТаблицаЗаказов.ПричинаНевыполнения КАК ПричинаНевыполнения,
		|	ТаблицаЗаказов.СтатусИнтернетМагазина КАК СтатусИнтернетМагазина,
		|	ТаблицаЗаказов.ПричинаОтказа КАК ПричинаОтказа,
		|	ТаблицаЗаказов.VIPДоставка КАК VIPДоставка,
		|	ТаблицаЗаказов.ВидVip КАК ВидVip,
		|	ТаблицаЗаказов.ТарифнаяСетка КАК ТарифнаяСетка,
		|	ТаблицаЗаказов.РасчетныйБрейк КАК РасчетныйБрейк,
		|	ТаблицаЗаказов.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
		|	ТаблицаЗаказов.ЗонаТарификации КАК ЗонаТарификации,
		|	ТаблицаЗаказов.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
		|	ТаблицаЗаказов.ТерминалДоставки КАК ТерминалДоставки,
		|	ТаблицаЗаказов.ТерминалПриёма КАК ТерминалПриёма,
		|	ТаблицаЗаказов.ОбъемныйБрейк КАК ОбъемныйБрейк,
		|	ТаблицаЗаказов.ПодъемныйБрейк КАК ПодъемныйБрейк,
		|	ТаблицаЗаказов.СуммаОценочная КАК СуммаОценочная,
		|	ТаблицаЗаказов.СуммаПолученная КАК СуммаПолученная,
		|	ТаблицаЗаказов.СуммаДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
		|	ТаблицаЗаказов.СуммаДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
		|	ТаблицаЗаказов.УслугиСД КАК УслугиСД,
		|	ТаблицаЗаказов.БанковскаяКомиссия КАК БанковскаяКомиссия,
		|	ТаблицаЗаказов.КассовоеОбслуживание КАК КассовоеОбслуживание,
		|	ТаблицаЗаказов.СуммаВозврата КАК СуммаВозврата,
		|	ТаблицаЗаказов.Масса КАК Масса,
		|	ТаблицаЗаказов.СуммаЧастичногоВозврата КАК СуммаЧастичногоВозврата,
		|	ТаблицаЗаказов.ОплаченоКлиентовНал КАК ОплаченоКлиентовНал,
		|	ТаблицаЗаказов.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
		|	ТаблицаЗаказов.ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
		|	ТаблицаЗаказов.УслугиСДЧистые КАК УслугиСДЧистые,
		|	ТаблицаЗаказов.СтраховойСбор КАК СтраховойСбор,
		|	ТаблицаЗаказов.ФактическийВес КАК ФактическийВес,
		|	ТаблицаЗаказов.ОбъемЗабора КАК ОбъемЗабора,
		|	ТаблицаЗаказов.ОбъемЗабораПоЗаказам КАК ОбъемЗабораПоЗаказам,
		|	ТаблицаЗаказов.ВыгруженныйОбъем КАК ВыгруженныйОбъем,
		|	ТаблицаЗаказов.ТарифицируемыйВес КАК ТарифицируемыйВес,
		|	ТаблицаЗаказов.СтоимостьОценочнаяПоТоварно КАК СтоимостьОценочнаяПоТоварно,
		|	ТаблицаЗаказов.КоличествоПереносовСЗаездами КАК КоличествоПереносовСЗаездами,
		|	ТаблицаЗаказов.СтоимостьПереносовСЗаездами КАК СтоимостьПереносовСЗаездами,
		|	ТаблицаЗаказов.СтоимостьПодъемаМП КАК СтоимостьПодъемаМП,
		|	0 КАК Оплачено,
		|	""Наличные+Пластик"" КАК ТипОплатыОтчет,
		|	ЕСТЬNULL(ВТ_РасчетныеБрейки.Наименование, "" Вес не определен"") КАК ОбщийВесЗаказа,
		|	ВЫБОР
		|		КОГДА ТаблицаЗаказов.ЗонаТарификации В (&СписокЗон2)
		|			ТОГДА ""2 зона""
		|		КОГДА ТаблицаЗаказов.ЗонаТарификации В (&СписокЗон3)
		|			ТОГДА ""3 зона""
		|		ИНАЧЕ ""1 зона""
		|	КОНЕЦ КАК Зона,
		|	ВЫБОР
		|		КОГДА ТаблицаЗаказов.КатегорияДоставки = ЗНАЧЕНИЕ(Справочник.КатегорииДоставки2014.ПустаяСсылка)
		|			ТОГДА ""Нет категории""
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаЗаказов.КатегорияДоставки)
		|	КОНЕЦ КАК КатегорияДоставки,
		|	ВЫБОР
		|		КОГДА ТаблицаЗаказов.КатегорияДоставки = ЗНАЧЕНИЕ(Справочник.КатегорииДоставки2014.ПустаяСсылка)
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаЗаказов.КатегорияДоставки ССЫЛКА Справочник.КатегорииДоставки2014
		|					ТОГДА ТаблицаЗаказов.КатегорияДоставки.Категория
		|				ИНАЧЕ 99
		|			КОНЕЦ
		|	КОНЕЦ КАК СортировкаКатегории
		|ИЗ
		|	ТаблицаЗаказов КАК ТаблицаЗаказов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеБрейки КАК ВТ_РасчетныеБрейки
		|		ПО (ТаблицаЗаказов.ТарифицируемыйВес > ВТ_РасчетныеБрейки.ВесОт
		|				И ТаблицаЗаказов.ТарифицируемыйВес <= ВТ_РасчетныеБрейки.ВесДо)
		|ГДЕ
		|	(ТаблицаЗаказов.СтатусЗаказа В (&СтатусЗаказа)
		|			ИЛИ ТаблицаЗаказов.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
		|			ИЛИ ТаблицаЗаказов.Документ ССЫЛКА Документ.Фрахт)";
	
	#КонецОбласти
	
	//СписокЗон2 = Новый Массив;
	//СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000004"));//"За МКАД"
	//СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000001"));//"за МКАД < 30 км."
	//СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000036"));//"за МКАД < 30 км."
	//СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000040"));//"за МКАД < 30 км."
	//СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000007"));//"за КАД < 30 км."
	//СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000053"));//"КАД +30 КМ"
	//
	//СписокЗон3 = Новый Массив;
	//СписокЗон3.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000054"));//"ЛО"
	//СписокЗон3.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000029"));//"за МКАД > 30 км."
	//СписокЗон3.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000037"));//"за МКАД > 30 км."
	//СписокЗон3.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000041"));//"за МКАД > 30 км."

	//CeHbKA 29.01.2021
	СписокЗон2 = Новый Массив;
	СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000004").КлассификаторЗоныТарификации);//"За МКАД"
	СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000001").КлассификаторЗоныТарификации);//"за МКАД < 30 км."
	СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000036").КлассификаторЗоныТарификации);//"за МКАД < 30 км."
	СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000040").КлассификаторЗоныТарификации);//"за МКАД < 30 км."
	СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000007").КлассификаторЗоныТарификации);//"за КАД < 30 км."
	СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000053").КлассификаторЗоныТарификации);//"КАД +30 КМ"
	//Асеев 19.04.2024 (по письму Отчет по географии доставки заказов)>>>
	СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000064").КлассификаторЗоныТарификации);//"МКАД+10 2023"
	СписокЗон2.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000065").КлассификаторЗоныТарификации);//"МКАД+10 - ЦКАД 2023"
	//Асеев 19.04.2024 (по письму Отчет по географии доставки заказов)<<<
	
	СписокЗон3 = Новый Массив;
	СписокЗон3.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000054").КлассификаторЗоныТарификации);//"ЛО"
	СписокЗон3.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000029").КлассификаторЗоныТарификации);//"за МКАД > 30 км."
	СписокЗон3.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000037").КлассификаторЗоныТарификации);//"за МКАД > 30 км."
	СписокЗон3.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000041").КлассификаторЗоныТарификации);//"за МКАД > 30 км."
	//Асеев 19.04.2024 (по письму Отчет по географии доставки заказов)>>>
	СписокЗон3.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000066").КлассификаторЗоныТарификации);//"ЦКАД-А108 2023"
	СписокЗон3.Добавить(Справочники.ГруппыРайонов.НайтиПоКоду("00000000067").КлассификаторЗоныТарификации);//"А108-Граница МО 2023"
	//Асеев 19.04.2024 (по письму Отчет по географии доставки заказов)<<<
	//CeHbKA 29.01.2021
	
	СтатусЗаказа = Новый Массив;
	СтатусЗаказа.Добавить(Справочники.новаРезультатМестнойДоставки.Выполнена);
	СтатусЗаказа.Добавить(Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично);
	
	Запрос.УстановитьПараметр("ТаблицаЗаказов", ТаблицаЗаказов);
	Запрос.УстановитьПараметр("СписокЗон2", СписокЗон2);
	Запрос.УстановитьПараметр("СписокЗон3", СписокЗон3);
	Запрос.УстановитьПараметр("СтатусЗаказа", СтатусЗаказа);
	Запрос.УстановитьПараметр("ПоОсновномуМагазину", ПоОсновномуМагазину);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();	
	
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		Сообщить("Начало обработки данных по отчету: " + СокрЛП(ТекущаяДата()));
	КонецЕсли;
	
	ТаблицаОплат = Неопределено;
	Если ТекущийВариант = "ПоОплатамКлиентов" Тогда
		ТаблицаОплат = Отчеты.ОтчетАгентаУниверсальный.ПолучитьДанныеПоОплатам(ДатаНачала, ДатаОкончания, ИнтернетМагазин);
		
		РезультатЗапроса = Отчеты.ОтчетАгентаУниверсальный.ОбъединитьДанныеВывода(РезультатЗапроса, ТаблицаОплат);
	КонецЕсли;	
	
	Если Не ТекущийВариант = "ПоОплатамКлиентов" И РазворачиватьПустыеЗначения Тогда
		
		СписокКлиентов = РезультатЗапроса.Скопировать();
		СписокТипов = РезультатЗапроса.Скопировать();
		СписокМесяцев = РезультатЗапроса.Скопировать();
		
		СписокКлиентов.Свернуть("ИнтернетМагазин");
		СписокТипов.Свернуть("ТипЗаказа");
		СписокМесяцев.Свернуть("Месяц");
		
		Если ТекущийВариант = "ПоВесуЗаказа" Тогда
			
			СписокГруппВесов = РезультатЗапроса.Скопировать();
			СписокГруппВесов.Свернуть("ОбщийВесЗаказа");
			
			Для Каждого СтрокаКлиент Из СписокКлиентов Цикл
				Для Каждого СтрокаГруппа Из СписокГруппВесов Цикл
					Для Каждого СтрокаТип ИЗ СписокТипов Цикл
						Для Каждого СтрокаМесяц ИЗ СписокМесяцев Цикл
							СтрокаЭмуляции = РезультатЗапроса.Добавить();
							СтрокаЭмуляции.ЗаказыЗаборы = 0;
							
							ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаКлиент);
							ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаТип);
							ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаГруппа);
							ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаМесяц);
						КонецЦикла;
						
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
			
		ИначеЕсли ТекущийВариант = "ПоКатегориямЗаказа" Тогда
			
			СписокКатегорий = РезультатЗапроса.Скопировать();
			СписокКатегорий.Свернуть("КатегорияДоставки, СортировкаКатегории");
			
			Для Каждого СтрокаКлиент Из СписокКлиентов Цикл
				Для Каждого СтрокаКатегория Из СписокКатегорий Цикл
					Для Каждого СтрокаТип ИЗ СписокТипов Цикл
						Для Каждого СтрокаМесяц ИЗ СписокМесяцев Цикл
							
							СтрокаЭмуляции = РезультатЗапроса.Добавить();
							СтрокаЭмуляции.ЗаказыЗаборы = 0;
							
							ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаКлиент);
							ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаТип);
							ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаКатегория);
							ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаМесяц);
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
					
		ИначеЕсли ТекущийВариант = "ПоГеографииЗаказа" Тогда
			СписокТерминалов  = РезультатЗапроса.Скопировать();
			СписокЗон  = РезультатЗапроса.Скопировать();
			
			СписокТерминалов.Свернуть("ТерминалДоставки");
			СписокЗон.Свернуть("Зона");	
			
			Для Каждого СтрокаКлиент Из СписокКлиентов Цикл
				Для Каждого СтрокаТерминал Из СписокТерминалов Цикл
					для Каждого СтрокаЗона Из СписокЗон Цикл
						Для Каждого СтрокаТип ИЗ СписокТипов Цикл
							Для Каждого СтрокаМесяц ИЗ СписокМесяцев Цикл
								
								СтрокаЭмуляции = РезультатЗапроса.Добавить();
								СтрокаЭмуляции.ЗаказыЗаборы = 0;
								
								ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаКлиент);
								ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаТерминал);
								ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаЗона);
								ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаТип);
								ЗаполнитьЗначенияСвойств(СтрокаЭмуляции, СтрокаМесяц);
							КонецЦикла;
						КонецЦикла;	
					КонецЦикла;	
				КонецЦикла;	
			КонецЦикла;
			
		КонецЕсли;	
		
	КонецЕсли;
		
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		Сообщить("Конец обработки данных по отчету: " + СокрЛП(ТекущаяДата()));
	КонецЕсли;
	
	Возврат РезультатЗапроса;
	
КонецФункции