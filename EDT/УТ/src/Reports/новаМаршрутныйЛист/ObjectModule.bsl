
// Предопределенное свойство. Содержит коллекцию свойств печатной формы.
//
Перем СвойстваПечатнойФормы Экспорт; // <Структура>

// Предопределенная процедура. Помещает изображение в табличный документ.
//
// Параметры:
//  ОбластьМакета           <ТабличныйДокумент>
//  ОбластьРасположения 	<ОбластьЯчеекТабличногоДокумента>
//  Организация         	<Справочник.Организация>
//
Процедура РасположитьЛоготип(ОбластьМакета, ОбластьРасположения, Организация)
	
	РисунокЛоготипа = ОбластьМакета.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);

	Логотип = Организация.Логотип.Получить();
	
	РисунокЛоготипа.Расположить(ОбластьРасположения);
	РисунокЛоготипа.Картинка 		= Логотип;
	РисунокЛоготипа.РазмерКартинки 	= РазмерКартинки.РеальныйРазмер; 
	РисунокЛоготипа.ГраницаСверху 	= Ложь;
	РисунокЛоготипа.ГраницаСлева  	= Ложь;
	РисунокЛоготипа.ГраницаСнизу  	= Ложь;
	РисунокЛоготипа.ГраницаСправа 	= Ложь;
	
КонецПроцедуры

// Предопределенная функция. Формирует печатную форму в указанном документе.
//
// Параметры:
//  Форма             <Форма>
//  ТабличныйДокумент <ТабличныйДокумент>
//  Заголовок         <Строка>
//
// Возвращаемое значение:
//  <Булево>: Истина, если печатную форму удалось сформировать.
//
Функция ВывестиНаПечать(Форма, ТабличныйДокумент, Заголовок) Экспорт
	
	Если ТипЗнч(Форма) = Тип("Форма") Тогда
		ИсточникМаршрута = Форма.ИсточникМаршрута;
	Иначе
		ИсточникМаршрута = Обработки.новаИсточникМаршрутРейса.Создать();
		ИсточникМаршрута.НачатьРедактирование(Форма.Ссылка, Форма.ЭтотОбъект);
	КонецЕсли;
	
	ТабличныйДокумент.СохранятьСвойстваОтображения = Истина;
	
	Заголовок = СокрЛП(Форма.Ссылка) + " - Маршрутный лист";
	
	Макет = ПолучитьМакет("МаршрутныйЛист");
	
	Шапка = Макет.ПолучитьОбласть("ОбластьШапка");
		
	Если ЗначениеЗаполнено(Владелец.ПутевойЛист.Организация) Тогда
		РасположитьЛоготип(Шапка, Шапка.Область("ОбластьЛоготип"), Владелец.ПутевойЛист.Организация);		
		Шапка.Параметры.Организация = Владелец.ПутевойЛист.Организация;
	КонецЕсли;
	
	Шапка.Параметры.Склад		= Владелец.НачалоРейса.Наименование;
	Шапка.Параметры.АдресСклада = Владелец.НачалоРейса.Адрес;
	
	Шапка.Параметры.НомерПутевогоЛиста	= Владелец.Номер;
	Шапка.Параметры.ДатаПутевогоЛиста   = Формат(Владелец.Дата, "ДФ=dd.MM.yyyy");
	
	Шапка.Параметры.НомерМаршрутногоЛиста	= Владелец.Номер;
	Шапка.Параметры.ДатаМаршрутногоЛиста   	= Формат(Владелец.Дата, "ДФ=dd.MM.yyyy");
	
	Шапка.Параметры.МаркаАвтомобиля	= Владелец.Транспорт.Марка;
	Шапка.Параметры.ГосНомер   		= Владелец.Транспорт.НомерГосударственнойРегистрации;
	Шапка.Параметры.Водитель   		= Владелец.Водитель;
	
	ТабличныйДокумент.Вывести(Шапка);
	
	Строка = Макет.ПолучитьОбласть("ОбластьСтрока");
	
	мсДоставки = ИсточникМаршрута.ПолучитьДоставкиПлановоеВремяВПорядкеВыполнения(Форма.Ссылка);
	ъ = 1;
	ИтогоСумма = 0;
	ИтогоВес   = 0;
	Для Каждого ОписаниеДоставки Из мсДоставки Цикл
		
		Доставка = ОписаниеДоставки.Доставка;
		Строка.Параметры.НомерПП = ъ;
		Строка.Параметры.НомерДок = Доставка.Номер;
		Строка.Параметры.Клиент = Доставка.ОсновнойКонтрагент;
		Строка.Параметры.Адрес = Доставка.ОсновнаяТочка.Адрес;
		Строка.Параметры.Сумма = Доставка.Груз.Стоимость;
		Строка.Параметры.Вес = Доставка.Груз.Вес;
		Строка.Параметры.Прибыл = ОписаниеДоставки.Прибыл;
		Строка.Параметры.Убыл = ОписаниеДоставки.Убыл;
		
		ТабличныйДокумент.Вывести(Строка);
		
		ъ = ъ + 1;
		ИтогоСумма = ИтогоСумма + Доставка.Груз.Стоимость;
		ИтогоВес   = ИтогоВес + Доставка.Груз.Вес;
	КонецЦикла;
	
	Подвал = Макет.ПолучитьОбласть("ОбластьИтого");
	Подвал.Параметры.ИтогоСумма = ИтогоСумма;
	Подвал.Параметры.ИтогоВес	= ИтогоВес;
	ТабличныйДокумент.Вывести(Подвал);
	
	Подвал = Макет.ПолучитьОбласть("ОбластьПодвал");
	ТабличныйДокумент.Вывести(Подвал);
	
	// Зададим параметры макета
	ТабличныйДокумент.ПолеСверху              = 0;
	ТабличныйДокумент.ПолеСлева               = 0;
	ТабличныйДокумент.ПолеСнизу               = 0;
	ТабличныйДокумент.ПолеСправа              = 0;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабличныйДокумент.АвтоМасштаб             = Истина;
	ТабличныйДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечатиМаршрутногоЛиста";
	
	Возврат Истина;
КонецФункции

СвойстваПечатнойФормы = Новый Структура("Представление", "Маршрутный лист");