
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	
	СхемаКомпоновкиДанныхРасшифровки   = ОтчетОбъект.ПолучитьСКДРасшифровки(); 
	МакетДокументаРасшифровки = ОтчетОбъект.ПолучитьМакетРасшифровки();
	
	Настройки = СхемаКомпоновкиДанныхРасшифровки.НастройкиПоУмолчанию;	
	Настройки.ПараметрыДанных.Элементы[0].Значение = ТекущаяДата();
	Настройки.ПараметрыДанных.Элементы[1].Значение = Параметры.ИнтервалОпоздания;
	Настройки.ПараметрыДанных.Элементы[2].Значение = Параметры.Транспорт;
	Настройки.ПараметрыДанных.Элементы[3].Значение = Параметры.ТерминалДоставки;
	
		
	
	ТекстСтатуса = "";
	ПараметрыРасшифровки = ?(ЗначениеЗаполнено(Параметры.Транспорт),Строка(Параметры.Транспорт) + " "  + Параметры.ТелефонИЭкипаж,"");
	
	
	Если Параметры.ВидРасшифровки = "Отказ" Тогда
		Настройки.Отбор.Элементы[2].Использование = Истина;	
		ТекстСтатуса = "Статус заказа: Отказ " + ПараметрыРасшифровки;
	ИначеЕсли Параметры.ВидРасшифровки = "Перенос" Тогда
		Настройки.Отбор.Элементы[3].Использование = Истина;
		ТекстСтатуса = "Статус заказа: Перенос " + ПараметрыРасшифровки;
	ИначеЕсли Параметры.ВидРасшифровки = "Доставлено" Тогда
		Настройки.Отбор.Элементы[4].Использование = Истина;
		ТекстСтатуса = "Статус заказа: Доставлено " + ПараметрыРасшифровки;	
	ИначеЕсли Параметры.ВидРасшифровки = "КДоставке" Тогда
		Настройки.Отбор.Элементы[5].Использование = Истина;
		ТекстСтатуса = "Статус заказа: Доставляется " + ПараметрыРасшифровки;
	ИначеЕсли Параметры.ВидРасшифровки = "Опаздывает" Тогда
		Настройки.Отбор.Элементы[6].Использование = Истина;	
		ТекстСтатуса = "Статус заказа: Опаздывает " + ПараметрыРасшифровки;
	ИначеЕсли Параметры.ВидРасшифровки = "Опоздал" Тогда
		Настройки.Отбор.Элементы[7].Использование = Истина;
		ТекстСтатуса = "Статус заказа: Опоздал "  + ПараметрыРасшифровки;
	Иначе
		ТекстСтатуса = "Все заказы";	
	КонецЕсли;	
	
	ОбластьШапкаТаблицы = МакетДокументаРасшифровки.ПолучитьОбласть("ОбластьШапкаТаблицы");
	ОбластьШапкаТаблицы.Параметры.ЗаголовокРасшифровки = ТекстСтатуса;	
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанныхРасшифровки,Настройки,ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки);	
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ДеревоРезультат = Новый ДеревоЗначений;
	ПроцессорВывода.УстановитьОбъект(ДеревоРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	
	ОбластьСтрокаЗаказа = МакетДокументаРасшифровки.ПолучитьОбласть("ОбластьСтрокаЗаказа");
	ОбластьТипДокумента = МакетДокументаРасшифровки.ПолучитьОбласть("ОбластьТипДокумента");
	
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
	Для Каждого УзелДерева Из ДеревоРезультат.Строки Цикл
		Если УзелДерева.Строки.Количество() > 0 Тогда
			ОбластьТипДокумента.Параметры.ТипДокумента = ?(УзелДерева.ЭтоЗаказ,"Заказы","Заборы");
			ТабличныйДокумент.Вывести(ОбластьТипДокумента);
			ТабличныйДокумент.НачатьГруппуСтрок(,Истина);
			Для Каждого СтрокаДокумента Из УзелДерева.Строки Цикл
				Если Параметры.ВидРасшифровки = "КДоставке" Тогда
					ЗаполнитьЗначенияСвойств(ОбластьСтрокаЗаказа.Параметры,СтрокаДокумента,,"ДатаДоставки");	
				Иначе
					ЗаполнитьЗначенияСвойств(ОбластьСтрокаЗаказа.Параметры,СтрокаДокумента);
				КонецЕсли;	
				Если СтрокаДокумента.Доставлено Тогда
					ОбластьСтрокаЗаказа.Параметры.СтатусЗаказа = "Доставлено";
				ИначеЕсли СтрокаДокумента.Доставляется Тогда
					ОбластьСтрокаЗаказа.Параметры.СтатусЗаказа = "Доставляется";
				ИначеЕсли СтрокаДокумента.Опаздывает Тогда
					ОбластьСтрокаЗаказа.Параметры.СтатусЗаказа = "Опаздывает";
				ИначеЕсли СтрокаДокумента.Опоздал Тогда
					ОбластьСтрокаЗаказа.Параметры.СтатусЗаказа = "Опоздал";
				ИначеЕсли СтрокаДокумента.Отказ Тогда
					ОбластьСтрокаЗаказа.Параметры.СтатусЗаказа = "Отказ";
				ИначеЕсли СтрокаДокумента.Перенос Тогда
					ОбластьСтрокаЗаказа.Параметры.СтатусЗаказа = "Перенос";	
				КонецЕсли;	
				ОбластьСтрокаЗаказа.Параметры.ИнтервалДоставки = "С " + Формат(СтрокаДокумента.НачалоИнтервалаДоставки,"ДФ=""ЧЧ:мм""") + " по " + Формат(СтрокаДокумента.КонецИнтервалаДоставки,"ДФ=""ЧЧ:мм""");
				ТабличныйДокумент.Вывести(ОбластьСтрокаЗаказа);
			КонецЦикла;	
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
		КонецЕсли;	
	КонецЦикла;	
	
	
КонецПроцедуры


