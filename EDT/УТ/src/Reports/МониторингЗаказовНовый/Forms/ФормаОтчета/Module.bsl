
&НаКлиенте
Процедура ОтборЗаказовЗаборовПриИзменении(Элемент)
	СкомпоноватьРезультат();
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	СтандартнаяОбработка = Ложь;	
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		ПараметрыРасшифровки = Расшифровка;
	Иначе	
		ПараметрыРасшифровки = Новый Структура;
		ПараметрыРасшифровки.Вставить("ТелефонИЭкипаж"," Данные экипажа: " + Результат.Область(Элемент.ТекущаяОбласть.Низ - 1,2).Текст + " " + Результат.Область(Элемент.ТекущаяОбласть.Низ,2).Текст);
		Если Элемент.ТекущаяОбласть.Право = 3 Тогда
			ПараметрыРасшифровки.Вставить("ВидРасшифровки","Всего");	
		ИначеЕсли Элемент.ТекущаяОбласть.Право = 5 Тогда
			ПараметрыРасшифровки.Вставить("ВидРасшифровки","Отказ");	
		ИначеЕсли Элемент.ТекущаяОбласть.Право = 6 Тогда
			ПараметрыРасшифровки.Вставить("ВидРасшифровки","Перенос");
		ИначеЕсли Элемент.ТекущаяОбласть.Право = 7 Тогда
			ПараметрыРасшифровки.Вставить("ВидРасшифровки","Доставлено");	
		ИначеЕсли Элемент.ТекущаяОбласть.Право = 8 Тогда
			ПараметрыРасшифровки.Вставить("ВидРасшифровки","КДоставке");	
		ИначеЕсли Элемент.ТекущаяОбласть.Право = 9 Тогда
			ПараметрыРасшифровки.Вставить("ВидРасшифровки","Опаздывает");	
		ИначеЕсли Элемент.ТекущаяОбласть.Право = 10 Тогда
			ПараметрыРасшифровки.Вставить("ВидРасшифровки","Опоздал");
		КонецЕсли;	
		ПараметрыРасшифровки.Вставить("Транспорт",Расшифровка);
	КонецЕсли;	
	ПараметрыРасшифровки.Вставить("ИнтервалОпоздания",Отчет.ИнтервалОпоздания);
	ПараметрыРасшифровки.Вставить("ОтборЗаказовЗаборов",Отчет.ОтборЗаказовЗаборов);
	ПараметрыРасшифровки.Вставить("ОтборВладельцевТоваров",Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы[1]);
	Если Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы[2].Использование Тогда
		Сообщить(Строка(Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[2].Значение));
		ПараметрыРасшифровки.Вставить("ТерминалДоставки",Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[2].Значение);
	Иначе
		ПараметрыРасшифровки.Вставить("ТерминалДоставки",ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.ПустаяСсылка"));
	КонецЕсли;
	ОткрытьФорму("Отчет.МониторингЗаказовНовый.Форма.ФормаРасшифровки",ПараметрыРасшифровки);
КонецПроцедуры

&НаКлиенте
Процедура СортировкаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Отчет.Сортировка = "Транспорт";
	СкомпоноватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.Сортировка = "ПроцентДоставки";
	Отчет.НаправлениеСортировкиОтчета  = 1;
КонецПроцедуры

&НаКлиенте
Процедура СортировкаПриИзменении(Элемент)
	ВывестиНадписьНеактуальностиОтчета();
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеСортировкиПриИзменении(Элемент)
	ВывестиНадписьНеактуальностиОтчета();
КонецПроцедуры

&НаКлиенте 
Процедура СформироватьОтчет() 
	Состояние("Получение данных...");
	СкомпоноватьРезультат();
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("СформироватьОтчет",900);
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура КоличествоМинутОпозданияПриИзменении(Элемент)
	СформироватьОтчет();
КонецПроцедуры


&НаКлиенте
Процедура ВыводитьДиаграммыПриИзменении(Элемент)
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура ВывестиНадписьНеактуальностиОтчета()
	Элементы.Результат.ОтображениеСостояния.Видимость = Истина;
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	Элементы.Результат.ОтображениеСостояния.Текст = "Отчет не сформирован. Нажмите ""Сформировать"" для получения отчета"	
КонецПроцедуры	