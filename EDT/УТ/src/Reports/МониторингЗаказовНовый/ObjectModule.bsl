Перем ЦветДиаграммыОтказ,ЦветДиаграммыПеренос,ЦветДиаграммыДоставлено,ЦветДиаграммыДоставляется,ЦветДиаграммыОпаздывает,ЦветДиаграммыОпоздал;

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	ДокументРезультат.ФиксацияСверху = 2;
	
	Макет = ЭтотОбъект.ПолучитьМакет("Макет");
	
	НастройкиОтчета = ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки();
	
	НастройкиОтчета.ПараметрыДанных.Элементы[0].Значение = ТекущаяДата();
	НастройкиОтчета.ПараметрыДанных.Элементы[2].Значение = ИнтервалОпоздания;
	
	ЭлементОтбора = НастройкиОтчета.Отбор.Элементы[0];
	
	Если ОтборЗаказовЗаборов = 1 Тогда 
		ЭлементОтбора.Использование  = Истина;
		ЭлементОтбора.ПравоеЗначение = Истина;
	ИначеЕсли ОтборЗаказовЗаборов = 2 Тогда	
		ЭлементОтбора.Использование  = Истина;
		ЭлементОтбора.ПравоеЗначение = Ложь;
	Иначе
		ЭлементОтбора.Использование = Ложь;
	КонецЕсли;		
	
	НастройкиОтчета.Порядок.Элементы.Очистить();
	ЭлементУпорядочивания = НастройкиОтчета.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	ЭлементУпорядочивания.Поле = Новый ПолеКомпоновкиДанных(Сортировка);
	ЭлементУпорядочивания.ТипУпорядочивания = ?(НаправлениеСортировкиОтчета = 0,НаправлениеСортировкиКомпоновкиДанных.Убыв,НаправлениеСортировкиКомпоновкиДанных.Возр);
	ЭлементУпорядочивания.Использование = Истина;
	
	ЭтотОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтчета);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
	ЭтотОбъект.СхемаКомпоновкиДанных,
	ЭтотОбъект.КомпоновщикНастроек.Настройки,
	ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Если ТаблицаРезультат.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;	
		
	СтрокаИтогов = ТаблицаРезультат[ТаблицаРезультат.Количество() - 1];
	ПустаяСсылкаТранспорт = Справочники.новаТранспорт.ПустаяСсылка();
	Если ВыводитьДиаграммы Тогда
		ОбластьИтог = Макет.ПолучитьОбласть("Итог");
		СформироватьДиаграмму(ОбластьИтог.Рисунки[0].Объект,СтрокаИтогов,ПустаяСсылкаТранспорт,Истина);
	Иначе
		ОбластьИтог = Макет.ПолучитьОбласть("ИтогБезДиаграммы");
	КонецЕсли;	
	ОбластьИтог.Параметры.Заполнить(СтрокаИтогов);
	ОбластьИтог.Параметры.Транспорт = ПустаяСсылкаТранспорт;
	ПроцентДоставки = Окр(СтрокаИтогов.Доставлено / (СтрокаИтогов.Доставлено + СтрокаИтогов.Доставляется + СтрокаИтогов.Отказ + СтрокаИтогов.Перенос) * 100);
	ОбластьИтог.Параметры.ИтоговыйПроцентДоставки = Строка(ПроцентДоставки) + "%";		
	ДокументРезультат.Вывести(ОбластьИтог);
	Для НомерСтроки = 0 По ТаблицаРезультат.Количество() - 2 Цикл
		СтрокаТаблицы = ТаблицаРезультат[НомерСтроки];
		//Получаем область заново чтобы очистилась диаграмма. 
		Если СтрокаТаблицы.ВтораяСмена И ВыводитьДиаграммы Тогда
			ОбластьСтрокаТранспорта = Макет.ПолучитьОбласть("СтрокаТранспортаВтораяСмена");	
			СформироватьДиаграмму(ОбластьСтрокаТранспорта.Рисунки[0].Объект,СтрокаТаблицы,СтрокаТаблицы.Транспорт,Ложь);
		ИначеЕсли СтрокаТаблицы.ВтораяСмена И Не ВыводитьДиаграммы Тогда	
			ОбластьСтрокаТранспорта = Макет.ПолучитьОбласть("СтрокаТранспортаВтораяСменаБезДиаграммы");
		ИначеЕсли Не СтрокаТаблицы.ВтораяСмена И ВыводитьДиаграммы Тогда 	
			ОбластьСтрокаТранспорта = Макет.ПолучитьОбласть("СтрокаТранспорта");
			СформироватьДиаграмму(ОбластьСтрокаТранспорта.Рисунки[0].Объект,СтрокаТаблицы,СтрокаТаблицы.Транспорт,Ложь);
		Иначе 
			ОбластьСтрокаТранспорта = Макет.ПолучитьОбласть("СтрокаТранспортаБезДиаграммы");
		КонецЕсли;	
		ОбластьСтрокаТранспорта.Параметры.НомерСтроки = НомерСтроки + 1;
		ОбластьСтрокаТранспорта.Параметры.Заполнить(СтрокаТаблицы);
		Если СтрокаТаблицы.Транспорт = Null Тогда
			ОбластьСтрокаТранспорта.Параметры.ТелефонЭкипажа = "";
		Иначе 
			ОбластьСтрокаТранспорта.Параметры.ТелефонЭкипажа = ?(СтрокаТаблицы.Телефон = Null,СтрокаТаблицы.ТелефонОперативногоНазначения,СтрокаТаблицы.Телефон);
		КонецЕсли;		
		ДокументРезультат.Вывести(ОбластьСтрокаТранспорта);
	КонецЦикла;	
	
КонецПроцедуры

Процедура СформироватьДиаграмму(Диаграмма,ДанныеДляДиаграммы,Транспорт,ВыводитьЛегенду)	
		
	Диаграмма.ОтображатьЗаголовок = Ложь;
	Диаграмма.ТипДиаграммы = ТипДиаграммы.ГистограммаСНакоплениемГоризонтальная;
	
	ТелефонИЭкипаж = " Данные экипажа: " + ДанныеДляДиаграммы.Телефон + " " + ДанныеДляДиаграммы.Экипаж;
	
	Диаграмма.Анимация = АнимацияДиаграммы.НеИспользовать;
	Диаграмма.КоличествоТочек = 1;
	Диаграмма.Точки[0].Текст = "";
	Диаграмма.ОбластьПостроения.ШкалаЗначений.ПоложениеПодписейШкалы = ПоложениеПодписейШкалыДиаграммы.Нет;
	Диаграмма.ОбластьПостроения.ШкалаЗначений.ПоложениеОтметокШкалы  = ПоложениеОтметокШкалыДиаграммы.Нет;
	Диаграмма.ОбластьПостроения.ШкалаЗначений.ОтображениеЛинийСетки  = ОтображениеЛинийСеткиДиаграммы.НеОтображать;
	Если ДанныеДляДиаграммы.Отказ > 0 Тогда
		УстановитьСериюДиаграммы(Диаграмма,ЦветДиаграммыОтказ,ДанныеДляДиаграммы.Отказ,Транспорт,"Отказ","Отказ: ",ТелефонИЭкипаж);	
	КонецЕсли;	
	Если ДанныеДляДиаграммы.Перенос > 0 Тогда
		УстановитьСериюДиаграммы(Диаграмма,ЦветДиаграммыПеренос,ДанныеДляДиаграммы.Перенос,Транспорт,"Перенос","Перенос: ",ТелефонИЭкипаж);	
	КонецЕсли;	
	Если ДанныеДляДиаграммы.Доставлено > 0 Тогда
		УстановитьСериюДиаграммы(Диаграмма,ЦветДиаграммыДоставлено,ДанныеДляДиаграммы.Доставлено,Транспорт,"Доставлено","Доставлено: ",ТелефонИЭкипаж);	
	КонецЕсли;	
	Если ДанныеДляДиаграммы.Доставляется > 0 Тогда
		Доставляется = ДанныеДляДиаграммы.Доставляется - ДанныеДляДиаграммы.Опаздывает - ДанныеДляДиаграммы.Опоздал;
		УстановитьСериюДиаграммы(Диаграмма,ЦветДиаграммыДоставляется,Доставляется,Транспорт,"Доставляется","Доставляется: ",ТелефонИЭкипаж);	
	КонецЕсли;	
	Если ДанныеДляДиаграммы.Опаздывает > 0 Тогда
		УстановитьСериюДиаграммы(Диаграмма,ЦветДиаграммыОпаздывает,ДанныеДляДиаграммы.Опаздывает,Транспорт,"Опаздывает","Опаздывает: ",ТелефонИЭкипаж);	
	КонецЕсли;	
	Если ДанныеДляДиаграммы.Опоздал > 0 Тогда
		УстановитьСериюДиаграммы(Диаграмма,ЦветДиаграммыОпоздал,ДанныеДляДиаграммы.Опоздал,Транспорт,"Опоздал","Опоздал: ",ТелефонИЭкипаж);	
	КонецЕсли;	
	Если ВыводитьЛегенду Тогда
		Диаграмма.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Низ;
		Диаграмма.ОбластьЛегенды.Шрифт = Новый Шрифт(ШрифтыСтиля.МелкийШрифтТекста,,6);
	Иначе
		Диаграмма.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Нет;	
	КонецЕсли;				
КонецПроцедуры

Процедура УстановитьСериюДиаграммы(Диаграмма,ЦветСерии,Значение,Транспорт,ТекстСерии,НаименованиеДляПодсказки,ТелефонИЭкипаж)	
	Серия = Диаграмма.Серии.Добавить();
	Серия.Текст = ТекстСерии; 
	Серия.Цвет  = ЦветСерии;
	Диаграмма.УстановитьЗначение(0,Серия,Значение,Новый Структура("Транспорт,ВидРасшифровки,ТелефонИЭкипаж",Транспорт,ТекстСерии,ТелефонИЭкипаж),НаименованиеДляПодсказки + Строка(Значение));		
КонецПроцедуры	
	
Функция ПолучитьМакетРасшифровки() Экспорт
	Возврат ПолучитьМакет("МакетРасшифровки")
КонецФункции	

Функция ПолучитьСКДРасшифровки() Экспорт
	Возврат ПолучитьМакет("МакетКомпоновкиДанныхРасшифровки");
КонецФункции	

ЦветДиаграммыОтказ =   WebЦвета.КожаноКоричневый;
ЦветДиаграммыПеренос = WebЦвета.Аквамарин;
ЦветДиаграммыДоставлено = WebЦвета.ЗеленыйЛес;
ЦветДиаграммыДоставляется = WebЦвета.Оранжевый;
ЦветДиаграммыОпаздывает = WebЦвета.Фиолетовый;
ЦветДиаграммыОпоздал = WebЦвета.Красный;