
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	СтандартнаяОбработка=ЛОжь;
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	//ПустаяПричинаОтказа = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДопускатьПустуюПричинуОтказа"));
	//ПустаяПричинаОтказа.Значение = ДопускатьПустуюПричинуОтказа;
	//ПустаяПричинаОтказа.Использование = Истина;
	
	ИнфоПостроения = "";
	
	Если ВариантПостроенияОтчета = 1 Тогда
		
		Если Не ЗначениеЗаполнено( ПериодОтчета.ДатаНачала)
			ИЛИ Не ЗначениеЗаполнено( ПериодОтчета.ДатаОкончания) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо выбрать период отчета!");
			Возврат;
			
		КонецЕсли;	
		
		
		ПоПериоду = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоПериоду"));
		ПоПериоду.Значение = Истина;
		ПоПериоду.Использование = Истина;
		
		ПоСпискуНомеровСтриж = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоСпискуНомеровСтриж"));
		ПоСпискуНомеровСтриж.Значение = Ложь;
		ПоСпискуНомеровСтриж.Использование = Истина;
		
		ПоСпискуНомеровМагазина = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоСпискуНомеровМагазина"));
		ПоСпискуНомеровМагазина.Значение = Ложь;
		ПоСпискуНомеровМагазина.Использование = Истина;

		ДатаНачала = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНачала"));
		ДатаНачала.Значение = ПериодОтчета.ДатаНачала;
		ДатаНачала.Использование = Истина;
		
		ДатаОкончания = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаОкончания"));
		ДатаОкончания.Значение = ПериодОтчета.ДатаОкончания;
		ДатаОкончания.Использование = Истина;

		ИнфоПостроения = "по периоду " + Формат(ПериодОтчета.ДатаНачала,"ДФ=dd.MM.yyyy") + " - " + Формат(ПериодОтчета.ДатаОкончания,"ДФ=dd.MM.yyyy"); 
		
		ПустаяПричинаОтказа = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДопускатьПустуюПричинуОтказа"));
		ПустаяПричинаОтказа.Значение = Ложь;
		ПустаяПричинаОтказа.Использование = Истина;

		ПоИнтернетМагазину  = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоИнтернетМагазину"));
		ПоИнтернетМагазину.Значение = Ложь;
		ПоИнтернетМагазину.Использование = Ложь;

	ИначеЕсли ВариантПостроенияОтчета = 2 Тогда
		ПоПериоду = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоПериоду"));
		ПоПериоду.Значение = Ложь;
		ПоПериоду.Использование = Истина;
		
		ПоСпискуНомеровСтриж = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоСпискуНомеровСтриж"));
		ПоСпискуНомеровСтриж.Значение = Истина;
		ПоСпискуНомеровСтриж.Использование = Истина;
		
		ПоСпискуНомеровМагазина = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоСпискуНомеровМагазина"));
		ПоСпискуНомеровМагазина.Значение = Ложь;
		ПоСпискуНомеровМагазина.Использование = Истина;
		
		СписокНомеровЗначение = СтрРазделить(СписокНомеров,Символы.ПС,Ложь);
		
		Если СокрЛП(СписокНомеров)="" Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо ввести внутренние номера заказов!");
			Возврат;
			
		КонецЕсли;	
		
		СписокНомеровСтриж = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокНомеровСтриж"));
		СписокНомеровСтриж.Значение = СписокНомеровЗначение;
		СписокНомеровСтриж.Использование = Истина;

		ПустаяПричинаОтказа = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДопускатьПустуюПричинуОтказа"));
		ПустаяПричинаОтказа.Значение = Истина;
		ПустаяПричинаОтказа.Использование = Истина;
		
		ПоИнтернетМагазину  = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоИнтернетМагазину"));
		ПоИнтернетМагазину.Значение = Ложь;
		ПоИнтернетМагазину.Использование = Ложь;

		ИнфоПостроения = "по списку номеров Стриж (" + СписокНомеровЗначение.Количество() + ")";

	ИначеЕсли ВариантПостроенияОтчета = 3 тогда
		
		ПоПериоду = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоПериоду"));
		ПоПериоду.Значение = Ложь;
		ПоПериоду.Использование = Истина;
		
		ПоСпискуНомеровСтриж = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоСпискуНомеровСтриж"));
		ПоСпискуНомеровСтриж.Значение = Ложь;
		ПоСпискуНомеровСтриж.Использование = Истина;
		
		ПоСпискуНомеровМагазина = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоСпискуНомеровМагазина"));
		ПоСпискуНомеровМагазина.Значение = Истина;
		ПоСпискуНомеровМагазина.Использование = Истина;
		
		СписокНомеровЗначение = СтрРазделить(СписокНомеров,Символы.ПС,Ложь);
		
		Если СокрЛП(СписокНомеров)=""Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо ввести внешние номера заказов!");
			Возврат;
			
		КонецЕсли;	
		
		СписокНомеровМагазина = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокНомеровМагазина"));
		СписокНомеровМагазина.Значение = СписокНомеровЗначение;
		СписокНомеровМагазина.Использование = Истина;

		Если Не Значениезаполнено(ИнтернетМагазин) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо выбрать интернет магазин!");
			Возврат;
			
		КонецЕсли;
		
		ПустаяПричинаОтказа = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДопускатьПустуюПричинуОтказа"));
		ПустаяПричинаОтказа.Значение = Истина;
		ПустаяПричинаОтказа.Использование = Истина;
		
		ИнтернетМагазинПарам = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ИнтернетМагазин"));
		ИнтернетМагазинПарам.Значение = ИнтернетМагазин;
		ИнтернетМагазинПарам.Использование = Истина;
		
		ПоИнтернетМагазину  = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоИнтернетМагазину"));
		ПоИнтернетМагазину.Значение = Истина;
		ПоИнтернетМагазину.Использование = Истина;

		ИнфоПостроения = "по ИМ " + СокрЛП(ИнтернетМагазин) +  ", по списку номеров магазина (" + СписокНомеровЗначение.Количество() + ")";
	ИначеЕсли ВариантПостроенияОтчета = 4 тогда
		
		Если Не ЗначениеЗаполнено( ПериодОтчета.ДатаНачала)
			ИЛИ Не ЗначениеЗаполнено( ПериодОтчета.ДатаОкончания) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо выбрать период отчета!");
			Возврат;
			
		КонецЕсли;	
		
		Если Не Значениезаполнено(ИнтернетМагазин) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо выбрать интернет магазин!");
			Возврат;
			
		КонецЕсли;

		ПоПериоду = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоПериоду"));
		ПоПериоду.Значение = Истина;
		ПоПериоду.Использование = Истина;
		
		ДатаНачала = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНачала"));
		ДатаНачала.Значение = ПериодОтчета.ДатаНачала;
		ДатаНачала.Использование = Истина;
		
		ДатаОкончания = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаОкончания"));
		ДатаОкончания.Значение = ПериодОтчета.ДатаОкончания;
		ДатаОкончания.Использование = Истина;
	
		ПоИнтернетМагазину  = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоИнтернетМагазину"));
		ПоИнтернетМагазину.Значение = Истина;
		ПоИнтернетМагазину.Использование = Истина;
		
		ИнтернетМагазинПарам = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ИнтернетМагазин"));
		ИнтернетМагазинПарам.Значение = ИнтернетМагазин;
		ИнтернетМагазинПарам.Использование = Истина;

		ПустаяПричинаОтказа = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДопускатьПустуюПричинуОтказа"));
		ПустаяПричинаОтказа.Значение = Ложь;
		ПустаяПричинаОтказа.Использование = Истина;
		
		ПоСпискуНомеровСтриж = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоСпискуНомеровСтриж"));
		ПоСпискуНомеровСтриж.Значение = Ложь;
		ПоСпискуНомеровСтриж.Использование = Истина;
		
		ПоСпискуНомеровМагазина = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоСпискуНомеровМагазина"));
		ПоСпискуНомеровМагазина.Значение = Ложь;
		ПоСпискуНомеровМагазина.Использование = Истина;

		ИнфоПостроения = "по ИМ " + СокрЛП(ИнтернетМагазин) +  ", по периоду " + Формат(ПериодОтчета.ДатаНачала,"ДФ=dd.MM.yyyy") + " - " + Формат(ПериодОтчета.ДатаОкончания,"ДФ=dd.MM.yyyy"); 

	КонецЕсли;	
	
	РасшифровкаПостроенияОтчета =  Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("РасшифровкаПостроенияОтчета"));
	РасшифровкаПостроенияОтчета.Значение = ИнфоПостроения;
	РасшифровкаПостроенияОтчета.Использование = Истина;
	
	//Настройки.ПараметрыВывода.Элементы.Найти("Title").Значение = "Отчет о своевременности доставки (" + ИнфоПостроения + ")" ;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки,ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,,,Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.НачатьВывод();

	ДокументРезультат.Автомасштаб = истина;
	
	ЭлементРезультата = ПроцессорКомпоновки.Следующий();

	Пока ЭлементРезультата <> Неопределено Цикл
		Если ЭлементРезультата.ЗначенияПараметров.Количество()=1 Тогда
			Если ЭлементРезультата.ЗначенияПараметров[0].Значение = "Разорвать" Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЕсли;
		ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
		ЭлементРезультата = ПроцессорКомпоновки.Следующий();
	КонецЦикла;
	ПроцессорВывода.ЗакончитьВывод();

КонецПроцедуры
