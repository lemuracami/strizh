
&НаСервере
Функция ПолучитьДанныеРасшифровкиРекурсивно(Данные, Расшифровка, СтруктураДанных)
	ЭлементРасшифровка = Данные.Элементы.Получить(Расшифровка);
	Если ЭлементРасшифровка <> Неопределено Тогда
		ТипЭлемента = ТипЗнч(ЭлементРасшифровка);
		Если ТипЭлемента = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
			Поля = ЭлементРасшифровка.ПолучитьПоля();
			Для Каждого ЭлементПоле Из Поля Цикл
				ИмяПоляСтруктуры = СтрЗаменить(ЭлементПоле.Поле, ".", "");
				Если Не СтруктураДанных.Свойство(ИмяПоляСтруктуры) Тогда
					СтруктураДанных.Вставить(ИмяПоляСтруктуры, ЭлементПоле.Значение);
				КонецЕсли;
			КонецЦикла;
			Родители = ЭлементРасшифровка.ПолучитьРодителей();
			Для Каждого ЭлементРодитель Из Родители Цикл
				ПолучитьДанныеРасшифровкиРекурсивно(Данные, ЭлементРодитель.Идентификатор, СтруктураДанных);
			КонецЦикла;
		ИначеЕсли ТипЭлемента = Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") Тогда
			Родители = ЭлементРасшифровка.ПолучитьРодителей();
			Для Каждого ЭлементРодитель Из Родители Цикл
				ПолучитьДанныеРасшифровкиРекурсивно(Данные, ЭлементРодитель.Идентификатор, СтруктураДанных);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервере
Функция РезультатОбработкаРасшифровкиНаСервере()
	
	НомерКолонкиТабДок = Элементы.Результат.ТекущаяОбласть.Лево;
	НомерСтрокиТабДок = Элементы.Результат.ТекущаяОбласть.Верх;
	
	ДанныеРасшифр = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	
	СтруктураДанных = Новый Структура;
	
	//Расшифровка = Результат.Область(НомерСтрокиТабДок, 1).Расшифровка;
	//Если Расшифровка <> Неопределено Тогда
	//	ПолучитьДанныеРасшифровкиРекурсивно(ДанныеРасшифр, Расшифровка, СтруктураДанных);
	//КонецЕсли;
	
	Расшифровка = Результат.Область(НомерСтрокиТабДок, НомерКолонкиТабДок).Расшифровка;
	Если Расшифровка <> Неопределено Тогда
		ПолучитьДанныеРасшифровкиРекурсивно(ДанныеРасшифр, Расшифровка, СтруктураДанных);
	КонецЕсли;

	Если Не (СтруктураДанных.Свойство("ОплатаКартой") Или СтруктураДанных.Свойство("ОплатаКартойКоличество")) Тогда
		СтруктураДанных = Неопределено;
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

&НаСервере
Функция ПолучитьИмяОтбора(ИдентификаторПользовательскойНастройки, КоллекцияЭлементовОтбора)
	
	Для Каждого ЭлементКоллекции Из КоллекцияЭлементовОтбора Цикл
		Если ЭлементКоллекции.ИдентификаторПользовательскойНастройки = ИдентификаторПользовательскойНастройки Тогда
			Возврат ЭлементКоллекции.ЛевоеЗначение;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыОтчетаAssist()
	
	СтруктураДанных = РезультатОбработкаРасшифровкиНаСервере();
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПользовательскиеНастройкиИсточник = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки;
	КоллекцияЭлементовОтбораИсточник = Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы;
	
	КомпоновщикНастроек = Отчеты.РасшифровкаAssist.Создать().КомпоновщикНастроек;
	
	ПользовательскиеНастройки = КомпоновщикНастроек.ПользовательскиеНастройки;
	КоллекцияЭлементовОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы;
	
	ТипЗначениеПараметраНастроекКомпоновкиДанных = Тип("ЗначениеПараметраНастроекКомпоновкиДанных");
	ТипЭлементОтбораКомпоновкиДанных = Тип("ЭлементОтбораКомпоновкиДанных");
	
	Для Каждого ЭлементНастройки Из ПользовательскиеНастройки.Элементы Цикл
		ТипЭлемента = ТипЗнч(ЭлементНастройки);
		Если ТипЭлемента = ТипЗначениеПараметраНастроекКомпоновкиДанных Тогда
			//простое копирование
			ИмяПараметра = Строка(ЭлементНастройки.Параметр);
			Если ИмяПараметра = "ФиксацияСверху" Тогда
				Продолжить;
			КонецЕсли;
			Для Каждого ЭлементНастройкиИсточник Из ПользовательскиеНастройкиИсточник.Элементы Цикл
				Если ТипЗнч(ЭлементНастройкиИсточник) = ТипЗначениеПараметраНастроекКомпоновкиДанных Тогда
					Если ИмяПараметра = Строка(ЭлементНастройкиИсточник.Параметр) Тогда
						ЭлементНастройки.Значение = ЭлементНастройкиИсточник.Значение;
						ЭлементНастройки.Использование = ЭлементНастройкиИсточник.Использование;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли ТипЭлемента = ТипЭлементОтбораКомпоновкиДанных Тогда
			//сложное копирование
			ИмяОтбора = ПолучитьИмяОтбора(ЭлементНастройки.ИдентификаторПользовательскойНастройки, КоллекцияЭлементовОтбора);
			Для Каждого ЭлементНастройкиИсточник Из ПользовательскиеНастройкиИсточник.Элементы Цикл
				Если ТипЗнч(ЭлементНастройкиИсточник) = ТипЭлементОтбораКомпоновкиДанных Тогда
					Если ИмяОтбора = ПолучитьИмяОтбора(ЭлементНастройкиИсточник.ИдентификаторПользовательскойНастройки, КоллекцияЭлементовОтбораИсточник) Тогда
						ЭлементНастройки.ПравоеЗначение = ЭлементНастройкиИсточник.ПравоеЗначение;
						ЭлементНастройки.ВидСравнения = ЭлементНастройкиИсточник.ВидСравнения;
						ЭлементНастройки.Использование = ЭлементНастройкиИсточник.Использование;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	ИнтернетМагазин = Неопределено;
	Если СтруктураДанных.Свойство("ИнтернетМагазин", ИнтернетМагазин) Тогда
		//проверим, а не установлен ли простой отбор уже в настройках (или может быть это простая расшифровка по интернет магазину отчета и из нее уже открытие)
		ИмяОтбора = Новый ПолеКомпоновкиДанных("ИнтернетМагазин");
		Для Каждого ЭлементНастройки Из ПользовательскиеНастройки.Элементы Цикл
			ТипЭлемента = ТипЗнч(ЭлементНастройки);
			Если ТипЭлемента = ТипЭлементОтбораКомпоновкиДанных И ПолучитьИмяОтбора(ЭлементНастройки.ИдентификаторПользовательскойНастройки, КоллекцияЭлементовОтбора) = ИмяОтбора Тогда
				Если ЭлементНастройки.Использование И ЭлементНастройки.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
					//в простом случае дополнительный отбор не требуется ставить/он уже установлен
					ИнтернетМагазин = Неопределено;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ИнтернетМагазин = Неопределено Тогда
		Возврат Новый Структура("ПользовательскиеНастройки,СформироватьПриОткрытии", ПользовательскиеНастройки, Истина);
	Иначе
		Возврат Новый Структура("ПользовательскиеНастройки,СформироватьПриОткрытии,Отбор", ПользовательскиеНастройки, Истина, Новый Структура("ИнтернетМагазин", ИнтернетМагазин));
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	ПараметрыОтчета = ПолучитьПараметрыОтчетаAssist();
	
	Если ПараметрыОтчета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("Отчет.РасшифровкаAssist.ФормаОбъекта", ПараметрыОтчета);
	
КонецПроцедуры
