Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ПоОсновномуМагазину = Истина;
		
	ПараметрПериодОтчета	= НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета"));
	ДатаНачала = ПараметрПериодОтчета.Значение.ДатаНачала;
	ДатаОкончания = ПараметрПериодОтчета.Значение.ДатаОкончания;	
	
    ПараметрИнтернетМагазин = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ИнтернетМагазин"));
    ИнтернетМагазин = ?(ПараметрИнтернетМагазин.Использование, ПараметрИнтернетМагазин.Значение, Неопределено);
		
	#Область УстановкаПараметровОтчета	
	//
	ПараметрДанныеДляПечати = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДанныеДляПечати"));
	ПараметрДанныеДляПечати.Использование = Истина;
	ДанныеДляПечати = Отчеты.ОтчетАгентаУниверсальный.СобратьДанныеДляПечати(ИнтернетМагазин, ДатаОкончания); 
	
	СтрокаЗаголовка = СокрЛП(ДанныеДляПечати.КонтрагентСтрокой) + ", именуемое в дальнейшем " + СокрЛП(ДанныеДляПечати.Параметр1) + ", в лице " + СокрЛП(ДанныеДляПечати.ДолжностьВлице) + " " + 
	СокрЛП(ДанныеДляПечати.ДиректорПринципалаВЛице) + ", с одной стороны, и " + СокрЛП(ДанныеДляПечати.ОрганизацияСтрокой) + ", " + 
	"именуемое в дальнейшем " + СокрЛП(ДанныеДляПечати.Параметр2) + ", в лице " +
	СокрЛП(ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице) + " " + СокрЛП(ДанныеДляПечати.ФИОРуководителяВлице) + ", " +
	"именуемые в дальнейшем ""Стороны"", настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора, " +
	"в период с " + Формат(ДатаНачала,"ДФ='д ММММ гггг ""г.""'") + " по " +  Формат(ДатаОкончания,"ДФ='д ММММ гггг ""г.""'") + " были приняты от клиента денежные средства за доставленные заказы.";
	
	ДанныеДляПечати.Вставить("СтрокаЗаголовка", СтрокаЗаголовка);	
	ПараметрДанныеДляПечати.Значение = ДанныеДляПечати;  
	//

	//
	СтавкаНДСДляОтчета = Отчеты.ОтчетАгента.ЗначениеСтавкиНСДДляРасчетаУслуг(КонецДня(ДатаОкончания));
	
	ПараметрСтавкаНДС = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СтавкаНДС"));
	ПараметрСтавкаНДС.Использование = Истина;
	ПараметрСтавкаНДС.Значение = СтавкаНДСДляОтчета;	
	
	КоэффВыделенияНДС = СтавкаНДСДляОтчета/(100+СтавкаНДСДляОтчета);
	КоэффНачисленияНДС = СтавкаНДСДляОтчета/100;

	ЗаголовокНДС = "НДС "  + Строка(СтавкаНДСДляОтчета) + "%";
	ЗаголовокВсего = "Итого по  заказам вкл. НДС: ";
	ДанныеДляПечати.Вставить("ВклНДС", "с учетом НДС");
	ДанныеДляПечати.Вставить("БезНДС", "без учета НДС");

	Если Не ДанныеДляПечати.ПоказыватьНДС Тогда
		КоэффВыделенияНДС = 0;
		КоэффНачисленияНДС = 0;
		ЗаголовокНДС = "##УДАЛИТЬ СТРОКУ";
		ЗаголовокВсего = "##УДАЛИТЬ СТРОКУ";
		ДанныеДляПечати.Вставить("ВклНДС", "");
		ДанныеДляПечати.Вставить("БезНДС", "");
	КонецЕсли;	
	
	ПараметрКоэфф1 = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КоэффВыделенияНДС"));
	ПараметрКоэфф1.Использование = Истина;
	ПараметрКоэфф1.Значение = КоэффВыделенияНДС;	
	
	ПараметрКоэфф2 = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КоэффНачисленияНДС"));
	ПараметрКоэфф2.Использование = Истина;
	ПараметрКоэфф2.Значение = КоэффНачисленияНДС;

	ПараметрЗаголовокНДС = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЗаголовокНДС"));
	ПараметрЗаголовокНДС.Использование = Истина;
	ПараметрЗаголовокНДС.Значение = ЗаголовокНДС;
	
	ПараметрЗаголовокВсего = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЗаголовокВсего"));
	ПараметрЗаголовокВсего.Использование = Истина;
	ПараметрЗаголовокВсего.Значение = ЗаголовокВсего;
	
	ПараметВалюта = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Валюта"));
	ПараметВалюта.Использование = Истина;
	ПараметВалюта.Значение = Константы.ВалютаРегламентированногоУчета.Получить();	
	//
	#КонецОбласти
	
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтчета); 
	
	ИсточникДанныхОтчета = ДанныеДляОтчета(ДатаНачала, ДатаОкончания, ИнтернетМагазин, ПоОсновномуМагазину);
	
	Если ИсточникДанныхОтчета.Количество() = 0 тогда
		Сообщить("Нет данных для отчета");		
		Возврат;
	КонецЕсли;	
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; 
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);	
	
	ВнешнийНаборДанных = Новый Структура("ИсточникДанных", ИсточникДанныхОтчета); 
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки, Истина); 
	
	ДокументРезультат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат); 
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);	
	
	УстановитьСтрокуПодвала(ДокументРезультат, ДанныеДляПечати.ПоказыватьНДС, СтавкаНДСДляОтчета, ДанныеДляПечати);
	УдалитьЛишниеСтроки(ДокументРезультат);

	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт; 
	ДокументРезультат.Автомасштаб = Истина;
	
КонецПроцедуры

Процедура УстановитьСтрокуПодвала(ТабличныйДокумент, УчитыватьНДС, СтавкаНДС, ДанныеДляПечати) Экспорт
	
	ПодстрокаПоиска = "##СУММА УСЛУГ";
	НайденныеОбласти = НайтиОбластиТабличногоДокументаПоВхождениюПодстроки(ТабличныйДокумент, ПодстрокаПоиска);
	Для каждого Строка из НайденныеОбласти Цикл
		
		СтрокаЗамены = Строка.Область.Текст;
		СтрокаЗамены = СокрЛП(СтрЗаменить(СтрокаЗамены, "##СУММА УСЛУГ",""));
		
		ЗначенияЗамены = СтрРазделить(СтрокаЗамены,";");
		
		СтрокаПодвала = "";
		
		Если УчитыватьНДС Тогда
			
			Сумма = Формат(Число(ЗначенияЗамены[0]),"ЧДЦ=2");
			СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(Число(ЗначенияЗамены[0]), Константы.ВалютаРегламентированногоУчета.Получить());
			СуммаНДС = Формат(Число(ЗначенияЗамены[1]),"ЧДЦ=2");
			СуммаНДСПрописью =ОбщегоНазначения.СформироватьСуммуПрописью(Число(ЗначенияЗамены[1]), Константы.ВалютаРегламентированногоУчета.Получить());
						
			СтрокаПодвала = "Общая сумма вознаграждения " + ТРег(ДанныеДляПечати.Параметр2Родительный) + " по данному отчету " + Сумма + " руб. (" + СуммаПрописью + " (прописью)) руб., 
			| в том числе НДС " + Строка(СтавкаНДС) + "% - " + СуммаНДС + " (" + СуммаНДСПрописью + " (прописью))";
					
		Иначе
			
			Сумма = Формат(Число(ЗначенияЗамены[0]),"ЧДЦ=2");
			СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(Число(ЗначенияЗамены[0]), Константы.ВалютаРегламентированногоУчета.Получить());

			СтрокаПодвала = "Общая сумма вознаграждения " + ТРег(ДанныеДляПечати.Параметр2Родительный) + " по данному отчету " + Сумма + " руб. (" + СуммаПрописью + " (прописью)) руб., 
			| НДС не облагается (УСН). Счет-фактура не выставляется (ст.346.11 п.2 НК РФ).";
			
		КонецЕсли;	
		
		Строка.Область.Текст = СтрокаПодвала; 

	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьЛишниеСтроки(ТабличныйДокумент)
	
	ПодстрокаПоиска = "##УДАЛИТЬ СТРОКУ";
	НайденныеОбласти = НайтиОбластиТабличногоДокументаПоВхождениюПодстроки(ТабличныйДокумент, ПодстрокаПоиска);
	
	Если НайденныеОбласти.Количество()> 0 Тогда
		
		ИмяОбласти = СтрРазделить(НайденныеОбласти[0].Область.Имя, "C");
		ОбластьУдаления = ТабличныйДокумент.Область(ИмяОбласти[0]);
		ТабличныйДокумент.УдалитьОбласть(ОбластьУдаления, ТипСмещенияТабличногоДокумента.ПоВертикали);
		УдалитьЛишниеСтроки(ТабличныйДокумент);
		
	КонецЕсли;	
		 
КонецПроцедуры	

Функция НайтиОбластиТабличногоДокументаПоВхождениюПодстроки(ТабличныйДокумент, ПодстрокаПоиска) Экспорт
	
	НайденныеОбласти = Новый ТаблицаЗначений;
	НайденныеОбласти.Колонки.Добавить("Область");
	НайденныеОбласти.Колонки.Добавить("Текст");
	НайденныеОбласти.Колонки.Добавить("Верх");
	НайденныеОбласти.Колонки.Добавить("Лево");
	
	НайденнаяОбласть = ТабличныйДокумент.НайтиТекст(ПодстрокаПоиска);
	
	Пока НЕ НайденнаяОбласть = Неопределено Цикл
		
		НоваяСтрока = НайденныеОбласти.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяОбласть);
		НоваяСтрока.Область = НайденнаяОбласть;
		
		НайденнаяОбласть = ТабличныйДокумент.НайтиТекст(ПодстрокаПоиска, НайденнаяОбласть);
		
	КонецЦикла;
	
	Возврат НайденныеОбласти;
	
КонецФункции

Функция ДанныеДляОтчета(ДатаНачала, ДатаОкончания, ИнтернетМагазин, ПоОсновномуМагазину)
	
	ПараметрыЗапроса = Отчеты.ОтчетАгентаУниверсальный.ПараметрыЗапросаПоЗаказам();
	
	ПараметрыЗапроса.ПричиныНеВыполненияДоставки = Новый Массив;
	ПараметрыЗапроса.ПричиныНеВыполненияДоставки.Добавить(Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом);
	ПараметрыЗапроса.ПричиныНеВыполненияДоставки.Добавить(Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда);

	Если ПоОсновномуМагазину И Не ИнтернетМагазин = Неопределено Тогда
		ПараметрыЗапроса.Партнер = ИнтернетМагазин;
		ПараметрыЗапроса.ПоПартнеру = Истина;
	ИначеЕсли НЕ ПоОсновномуМагазину И Не ИнтернетМагазин = Неопределено Тогда
		ПараметрыЗапроса.ИнтернетМагазин = ИнтернетМагазин;
		ПараметрыЗапроса.ПоИнтернетМагазину = Истина;
	КонецЕсли;	
	
	ТаблицаЗаказов = Отчеты.ОтчетАгентаУниверсальный.ПолучитьЗакрытыеЗаказыВПериоде(Новый СтандартныйПериод(ДатаНачала, ДатаОкончания), ПараметрыЗапроса);	
	
	
	Запрос = Новый Запрос;
	#Область ТекстЗапроса
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаЗаказов.Документ КАК Документ,
		|	ТаблицаЗаказов.НомерДокумента КАК НомерДокумента,
		|	ТаблицаЗаказов.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
		|	ТаблицаЗаказов.ДатаДокумента КАК ДатаДокумента,
		|	ТаблицаЗаказов.ЮрЛицо КАК ЮрЛицо,
		|	ТаблицаЗаказов.ТипЗаказа КАК ТипЗаказа,
		|	ТаблицаЗаказов.Транспорт КАК Транспорт,
		|	ТаблицаЗаказов.ИнтернетМагазин КАК ИнтернетМагазин,
		|	ТаблицаЗаказов.Партнер КАК Партнер,
		|	ТаблицаЗаказов.КатегорияДоставки КАК КатегорияДоставки,
		|	ТаблицаЗаказов.Водитель КАК Водитель,
		|	ТаблицаЗаказов.Клиент КАК Клиент,
		|	ТаблицаЗаказов.ТипОплаты КАК ТипОплаты,
		|	ТаблицаЗаказов.СтатусЗаказа КАК СтатусЗаказа,
		|	ТаблицаЗаказов.ПричинаНевыполнения КАК ПричинаНевыполнения,
		|	ТаблицаЗаказов.СтатусИнтернетМагазина КАК СтатусИнтернетМагазина,
		|	ТаблицаЗаказов.ПричинаОтказа КАК ПричинаОтказа,
		|	ТаблицаЗаказов.VIPДоставка КАК VIPДоставка,
		|	ТаблицаЗаказов.ВидVip КАК ВидVip,
		|	ТаблицаЗаказов.ТарифнаяСетка КАК ТарифнаяСетка,
		|	ТаблицаЗаказов.РасчетныйБрейк КАК РасчетныйБрейк,
		|	ТаблицаЗаказов.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
		|	ТаблицаЗаказов.ЗонаТарификации КАК ЗонаТарификации,
		|	ТаблицаЗаказов.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
		|	ТаблицаЗаказов.ТерминалДоставки КАК ТерминалДоставки,
		|	ТаблицаЗаказов.ТерминалПриёма КАК ТерминалПриёма,
		|	ТаблицаЗаказов.ОбъемныйБрейк КАК ОбъемныйБрейк,
		|	ТаблицаЗаказов.ПодъемныйБрейк КАК ПодъемныйБрейк,
		|	ТаблицаЗаказов.СуммаОценочная КАК СуммаОценочная,
		|	ТаблицаЗаказов.СуммаПолученная КАК СуммаПолученная,
		|	ТаблицаЗаказов.СуммаДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
		|	ТаблицаЗаказов.СуммаДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
		|	ТаблицаЗаказов.УслугиСД КАК УслугиСД,
		|	ТаблицаЗаказов.БанковскаяКомиссия КАК БанковскаяКомиссия,
		|	ТаблицаЗаказов.КассовоеОбслуживание КАК КассовоеОбслуживание,
		//CeHbKA #4199 15.09.2020
		|	ТаблицаЗаказов.ВознаграждениеАгентаПоПредоплаченнымЗаказам КАК ВознаграждениеАгентаПоПредоплаченнымЗаказам,
		//CeHbKA #4199 15.09.2020
		|	ТаблицаЗаказов.СуммаВозврата КАК СуммаВозврата,
		|	ТаблицаЗаказов.Масса КАК Масса,
		|	ТаблицаЗаказов.СуммаЧастичногоВозврата КАК СуммаЧастичногоВозврата,
		|	ТаблицаЗаказов.ОплаченоКлиентовНал КАК ОплаченоКлиентовНал,
		|	ТаблицаЗаказов.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
		|	ТаблицаЗаказов.ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
		|	ТаблицаЗаказов.УслугиСДЧистые КАК УслугиСДЧистые,
		|	ТаблицаЗаказов.СтраховойСбор КАК СтраховойСбор,
		|	ТаблицаЗаказов.ФактическийВес КАК ФактическийВес,
		|	ТаблицаЗаказов.ОбъемЗабора КАК ОбъемЗабора,
		|	ТаблицаЗаказов.ОбъемЗабораПоЗаказам КАК ОбъемЗабораПоЗаказам,
		|	ТаблицаЗаказов.ВыгруженныйОбъем КАК ВыгруженныйОбъем,
		|	ТаблицаЗаказов.ТарифицируемыйВес КАК ТарифицируемыйВес,
		//Асеев 26.09.2023 (Задача № 5133)>>>
		|	ТаблицаЗаказов.ОбъемныйВес КАК ОбъемныйВес,
		//Асеев 26.09.2023 (Задача № 5133)<<<
		|	ТаблицаЗаказов.СтоимостьОценочнаяПоТоварно КАК СтоимостьОценочнаяПоТоварно,
		|	ТаблицаЗаказов.КоличествоПереносовСЗаездами КАК КоличествоПереносовСЗаездами,
		|	ТаблицаЗаказов.СтоимостьПереносовСЗаездами КАК СтоимостьПереносовСЗаездами,
		|	ТаблицаЗаказов.СтоимостьПодъемаМП КАК СтоимостьПодъемаМП,
		|	ТаблицаЗаказов.ОценочнаяСтоимость КАК ОценочнаяСтоимость,
		|	ТаблицаЗаказов.ДокументТерминалДоставки КАК ДокументТерминалДоставки,
		|	ТаблицаЗаказов.ТочкаДоставкиМосква КАК ТочкаДоставкиМосква,
		|	ТаблицаЗаказов.КоличествоТарифицируемыхРейсов КАК КоличествоТарифицируемыхРейсов
		//Геннадий 25.04.2022 ++
		|	,ТаблицаЗаказов.ЭтоВозврат КАК ЭтоВозврат
		//Геннадий 25.04.2022 --
		|ПОМЕСТИТЬ ТаблицаЗаказов
		|ИЗ
		|	&ТаблицаЗаказов КАК ТаблицаЗаказов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетУслугСДОбороты.Реализация КАК Реализация,
		|	РасчетУслугСДОбороты.ПоказательУслуг КАК ПоказательУслуг,
		|	СУММА(РасчетУслугСДОбороты.СуммаОборот) КАК СуммаОборот
		|ПОМЕСТИТЬ ВТ_РасчетПоПоказателям
		|ИЗ
		|	РегистрНакопления.РасчетУслугСД.Обороты КАК РасчетУслугСДОбороты
		|ГДЕ
		|	РасчетУслугСДОбороты.Реализация В
		|			(ВЫБРАТЬ
		|				ТаблицаЗаказов.Документ КАК Документ
		|			ИЗ
		|				ТаблицаЗаказов)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетУслугСДОбороты.Реализация,
		|	РасчетУслугСДОбороты.ПоказательУслуг
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФинальныеСтатусыЗаказов.Период КАК Период,
		|	ФинальныеСтатусыЗаказов.Статус КАК Статус,
		|	ФинальныеСтатусыЗаказов.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВТ_ФинальныеСтатусыПром
		|ИЗ
		|	РегистрСведений.ФинальныеСтатусыЗаказов КАК ФинальныеСтатусыЗаказов
		|ГДЕ
		|	ФинальныеСтатусыЗаказов.Заказ В
		|			(ВЫБРАТЬ
		|				ТаблицаЗаказов.Документ КАК Документ
		|			ИЗ
		|				ТаблицаЗаказов)
		|	И (ФинальныеСтатусыЗаказов.Статус = 301
		|			ИЛИ ФинальныеСтатусыЗаказов.Статус = 302
		|			ИЛИ ФинальныеСтатусыЗаказов.Статус = 305)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ФинальныеСтатусыПром.Период КАК Период,
		|	ВТ_ФинальныеСтатусыПром.Статус КАК Статус,
		|	СтатусыЗаказов.Наименование КАК НаименованиеСтатуса,
		|	ВТ_ФинальныеСтатусыПром.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВТ_ФинальныеСтатусы
		|ИЗ
		|	ВТ_ФинальныеСтатусыПром КАК ВТ_ФинальныеСтатусыПром
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФинальныеСтатусыПром КАК ВТ_ФинальныеСтатусыДоп
		|		ПО ВТ_ФинальныеСтатусыПром.Заказ = ВТ_ФинальныеСтатусыДоп.Заказ
		|			И (ВТ_ФинальныеСтатусыДоп.Период > ВТ_ФинальныеСтатусыПром.Период)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусыЗаказов КАК СтатусыЗаказов
		|		ПО ВТ_ФинальныеСтатусыПром.Статус = СтатусыЗаказов.Код
		|ГДЕ
		|	ВТ_ФинальныеСтатусыДоп.Период ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаЗаказов.Документ КАК Документ,
		|	1 КАК Документы,
		|	ТаблицаЗаказов.ДатаДокумента КАК ДатаДокумента,
		|	ТаблицаЗаказов.НомерДокумента КАК НомерДокумента,
		|	ТаблицаЗаказов.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
		|	ТаблицаЗаказов.ЮрЛицо КАК ЮрЛицо,
		|	ТаблицаЗаказов.ТипЗаказа КАК ТипЗаказа,
		|	ТаблицаЗаказов.Транспорт КАК Транспорт,
		|	ТаблицаЗаказов.ИнтернетМагазин КАК ИнтернетМагазин,
		|	ТаблицаЗаказов.Партнер КАК Партнер,
		|	ТаблицаЗаказов.КатегорияДоставки КАК КатегорияДоставки,
		|	ТаблицаЗаказов.Водитель КАК Водитель,
		|	ТаблицаЗаказов.Клиент КАК Клиент,
		|	ТаблицаЗаказов.ТипОплаты КАК ТипОплаты,
		|	ТаблицаЗаказов.СтатусЗаказа КАК СтатусЗаказа,
		|	ТаблицаЗаказов.ПричинаНевыполнения КАК ПричинаНевыполнения,
		|	ТаблицаЗаказов.СтатусИнтернетМагазина КАК СтатусИнтернетМагазина,
		|	ТаблицаЗаказов.ПричинаОтказа КАК ПричинаОтказа,
		|	ТаблицаЗаказов.VIPДоставка КАК VIPДоставка,
		|	ТаблицаЗаказов.ВидVip КАК ВидVip,
		|	ТаблицаЗаказов.ТарифнаяСетка КАК ТарифнаяСетка,
		|	ТаблицаЗаказов.РасчетныйБрейк КАК РасчетныйБрейк,
		|	ТаблицаЗаказов.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
		|	ТаблицаЗаказов.ЗонаТарификации КАК ЗонаТарификации,
		|	ТаблицаЗаказов.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
		|	ТаблицаЗаказов.ТерминалДоставки КАК ТерминалДоставки,
		|	ТаблицаЗаказов.ТерминалПриёма КАК ТерминалПриёма,
		//Геннадий 26.01.2022 ++
		|	ВЫБОР КОГДА ТаблицаЗаказов.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж) ТОГДА ""MSW"" ИНАЧЕ ""SPB"" КОНЕЦ КАК ТермДост,
		|	ВЫБОР КОГДА ТаблицаЗаказов.ТерминалПриёма = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж) ТОГДА ""MSW"" ИНАЧЕ ""SPB"" КОНЕЦ КАК ТермПриём,
		//Геннадий 26.01.2022 --
		|	ТаблицаЗаказов.ОбъемныйБрейк КАК ОбъемныйБрейк,
		|	ТаблицаЗаказов.ПодъемныйБрейк КАК ПодъемныйБрейк,
		|	ТаблицаЗаказов.ОценочнаяСтоимость КАК ОценочнаяСтоимость,
		|	ТаблицаЗаказов.СуммаПолученная КАК СуммаПолученная,
		|	ВЫБОР
		|		КОГДА ТаблицаЗаказов.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда)
		|				ИЛИ ТаблицаЗаказов.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
		|			ТОГДА 0
		|		ИНАЧЕ ТаблицаЗаказов.СуммаДоставкиДоМКАД
		|	КОНЕЦ КАК СуммаДоставкиДоМКАД,
		|	ВЫБОР
		|		КОГДА ТаблицаЗаказов.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда)
		|				ИЛИ ТаблицаЗаказов.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
		|			ТОГДА 0
		|		ИНАЧЕ ТаблицаЗаказов.СуммаДоставкиЗаМКАД
		|	КОНЕЦ КАК СуммаДоставкиЗаМКАД,
		|	ТаблицаЗаказов.УслугиСД КАК УслугиСД,
		|	ТаблицаЗаказов.БанковскаяКомиссия КАК БанковскаяКомиссия,
		|	ТаблицаЗаказов.КассовоеОбслуживание КАК КассовоеОбслуживание,
		//CeHbKA #4199 15.09.2020
		|	ТаблицаЗаказов.ВознаграждениеАгентаПоПредоплаченнымЗаказам КАК ВознаграждениеАгентаПоПредоплаченнымЗаказам,
		//CeHbKA #4199 15.09.2020
		|	ТаблицаЗаказов.СуммаВозврата КАК СуммаВозврата,
		|	ТаблицаЗаказов.Масса КАК Масса,
		|	ТаблицаЗаказов.СуммаЧастичногоВозврата КАК СуммаЧастичногоВозврата,
		|	ТаблицаЗаказов.ОплаченоКлиентовНал КАК ОплаченоКлиентовНал,
		|	ТаблицаЗаказов.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
		|	ТаблицаЗаказов.ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
		//|	ВЫБОР
		//|		КОГДА ТаблицаЗаказов.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда)
		//|			ТОГДА 0
		//|		ИНАЧЕ ТаблицаЗаказов.УслугиСДЧистые
		//|	КОНЕЦ КАК УслугиСДЧистые,
		//CeHbKA #3781 17.04.2020
		|	ТаблицаЗаказов.УслугиСДЧистые КАК УслугиСДЧистые,		
		//CeHbKA #3781 17.04.2020
		|	ТаблицаЗаказов.СтраховойСбор КАК СтраховойСбор,
		|	ТаблицаЗаказов.ФактическийВес КАК ФактическийВес,
		|	ТаблицаЗаказов.ОбъемЗабора КАК ОбъемЗабора,
		|	ТаблицаЗаказов.ОбъемЗабораПоЗаказам КАК ОбъемЗабораПоЗаказам,
		|	ТаблицаЗаказов.ВыгруженныйОбъем КАК ВыгруженныйОбъем,
		|	ТаблицаЗаказов.ТарифицируемыйВес КАК ТарифицируемыйВес,
		//Асеев 26.09.2023 (Задача № 5133)>>>
		|	ТаблицаЗаказов.ОбъемныйВес КАК ОбъемныйВес,
		//Асеев 26.09.2023 (Задача № 5133)<<<
		|	ТаблицаЗаказов.СтоимостьОценочнаяПоТоварно КАК СтоимостьОценочнаяПоТоварно,
		|	ТаблицаЗаказов.КоличествоПереносовСЗаездами КАК КоличествоПереносовСЗаездами,
		|	ТаблицаЗаказов.СтоимостьПереносовСЗаездами КАК СтоимостьПереносовСЗаездами,
		|	ТаблицаЗаказов.СтоимостьПодъемаМП КАК СтоимостьПодъемаМП,
		|	ПоступлениеТоваровУслуг.Дата КАК ДатаЗабораТовара,
		|	ВЫБОР
		|		КОГДА НЕ новаМестнаяДоставка.Ссылка ЕСТЬ NULL
		|				И ТаблицаЗаказов.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
		|			ТОГДА ""Доставка""
		|		КОГДА новаМестнаяДоставка.Ссылка ЕСТЬ NULL
		|				И ТаблицаЗаказов.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
		|			ТОГДА ""Самовывоз""
		|		КОГДА ТаблицаЗаказов.Документ ССЫЛКА Документ.ЗаборТовара
		|			ТОГДА ""Забор""
		|		КОГДА ТаблицаЗаказов.Документ ССЫЛКА Документ.Фрахт
		|			ТОГДА ""Фрахт""
		|	КОНЕЦ КАК НаименованиеУслуги,
		|	ВЫБОР
		|		КОГДА ТаблицаЗаказов.СуммаОценочная <> 0
		|				И ТаблицаЗаказов.СуммаВозврата <> 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ТаблицаЗаказов.ОплаченоКлиентовНал, 0)
		|	КОНЕЦ КАК ОплаченоКлиентом,
		|	ЕСТЬNULL(ВТ_РасчетПоПоказателямПодъем.СуммаОборот, 0) КАК СуммаПодъем,
		|	ЕСТЬNULL(ВТ_РасчетПоПоказателямМаркировка.СуммаОборот, 0) КАК СуммаМаркировка,
		|	ЕСТЬNULL(ВТ_РасчетПоПоказателямБахилы.СуммаОборот, 0) КАК СуммаБахилы,
		|	ВЫБОР
		|		КОГДА ТаблицаЗаказов.СуммаОценочная <> 0
		|				И НЕ ТаблицаЗаказов.ТипОплаты В (ЗНАЧЕНИЕ(Справочник.ТипыОплат.БезналичныйРасчет), ЗНАЧЕНИЕ(Справочник.ТипыОплат.ОплаченоВМагазине), ЗНАЧЕНИЕ(Справочник.ТипыОплат.БезРасчетов))
		|			ТОГДА ЕСТЬNULL(ТаблицаЗаказов.СуммаВозврата, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаВозврат,
		|	ВЫБОР
		|		КОГДА ТаблицаЗаказов.ЗонаТарификации ЕСТЬ NULL
		|				ИЛИ ТаблицаЗаказов.ЗонаТарификации = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаЗаказов.ДокументТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.СПбСтриж)
		|						ТОГДА ""СПБ""
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ЕСТЬNULL(новаМестнаяДоставка.ТочкаПрибытия.Москва, ЛОЖЬ)
		|									ИЛИ ТаблицаЗаказов.ТочкаДоставкиМосква
		|								ТОГДА ""Москва""
		|							ИНАЧЕ ""МО""
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ТаблицаЗаказов.ЗонаТарификации
		|	КОНЕЦ КАК Зона,
		|	ТаблицаЗаказов.КоличествоТарифицируемыхРейсов КАК КоличествоТарифицируемыхРейсов,
		|	ЕСТЬNULL(РасчетРасстоянийСрезПоследних.Расстояние, 0) КАК Расстояние,
		//|	ДополнительныеПараметрыЗаказа.Доставка.ТочкаПрибытия КАК АдресДоставки,
		//CeHbKA 21.01.2020
		|	ВЫБОР
		|		КОГДА ТаблицаЗаказов.Документ ССЫЛКА Документ.ЗаборТовара
		|			ТОГДА ТаблицаЗаказов.Документ.ТочкаДоставки
		|		ИНАЧЕ
		|			ДополнительныеПараметрыЗаказа.Доставка.ТочкаПрибытия
		|	КОНЕЦ КАК АдресДоставки,
		//CeHbKA 21.01.2020
		|	ВТ_ФинальныеСтатусы.Статус КАК Статус,
		|	ВТ_ФинальныеСтатусы.НаименованиеСтатуса КАК НаименованиеСтатуса
		//CeHbKA 20.04.2021 по письму Ю.Семеновой
		|	,ВЫБОР
		|		КОГДА СтатусыЗаказов211.Статус ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Статус211
		//CeHbKA 20.04.2021 по письму Ю.Семеновой
		//Геннадий 25.04.2022 ++
		|	,ТаблицаЗаказов.ЭтоВозврат КАК ЭтоВозврат
		//Геннадий 25.04.2022 --
		//Геннадий 23.06.2022 ++
		|	,ВЫБОР 
		|		КОГДА ТипЗначения(ТаблицаЗаказов.Документ) = Тип(Документ.РеализацияТоваровУслуг) ТОГДА
		|			ТаблицаЗаказов.Документ.ОбъёмЗаказа 	
		|		КОГДА ТипЗначения(ТаблицаЗаказов.Документ) = Тип(Документ.ЗаборТовара) ТОГДА
		|			ТаблицаЗаказов.Документ.ОбъемЗабора 	
		| 	ИНАЧЕ
		|		0
		|   КОНЕЦ КАК Объем
		//Геннадий 23.06.2022 --
		|ИЗ
		|	ТаблицаЗаказов КАК ТаблицаЗаказов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|		ПО ТаблицаЗаказов.НомерДокумента = ПоступлениеТоваровУслуг.Номер
		|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
		|		ПО ТаблицаЗаказов.НомерДокумента = новаМестнаяДоставка.Номер
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетПоПоказателям КАК ВТ_РасчетПоПоказателямПодъем
		|		ПО ТаблицаЗаказов.Документ = ВТ_РасчетПоПоказателямПодъем.Реализация
		|			И (ВТ_РасчетПоПоказателямПодъем.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаУслугСД.Подъем))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетПоПоказателям КАК ВТ_РасчетПоПоказателямМаркировка
		|		ПО ТаблицаЗаказов.Документ = ВТ_РасчетПоПоказателямМаркировка.Реализация
		|			И (ВТ_РасчетПоПоказателямМаркировка.ПоказательУслуг = &МаркировкаЗаказа)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетПоПоказателям КАК ВТ_РасчетПоПоказателямБахилы
		|		ПО ТаблицаЗаказов.Документ = ВТ_РасчетПоПоказателямБахилы.Реализация
		|			И (ВТ_РасчетПоПоказателямБахилы.ПоказательУслуг = ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаУслугСД.Бахилы))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетРасстояний.СрезПоследних(
		|				,
		|				ТипЗамераРасстояния = ЗНАЧЕНИЕ(Перечисление.ТипыЗамераРасстояний.ПоПрямойОтБлизжайшегоСъездаСМагистрали)
		|					И Заказ В
		|						(ВЫБРАТЬ
		|							ТаблицаЗаказов.Документ КАК Документ
		|						ИЗ
		|							ТаблицаЗаказов КАК ТаблицаЗаказов)) КАК РасчетРасстоянийСрезПоследних
		|		ПО ТаблицаЗаказов.Документ = РасчетРасстоянийСрезПоследних.Заказ
		|			И (РасчетРасстоянийСрезПоследних.ТипЗамераРасстояния = ЗНАЧЕНИЕ(Перечисление.ТипыЗамераРасстояний.ПоПрямойОтБлизжайшегоСъездаСМагистрали))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
		|		ПО ТаблицаЗаказов.Документ = ДополнительныеПараметрыЗаказа.Заказ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФинальныеСтатусы КАК ВТ_ФинальныеСтатусы
		|		ПО ТаблицаЗаказов.Документ = ВТ_ФинальныеСтатусы.Заказ
		//CeHbKA 20.04.2021 по письму Ю.Семеновой
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов211
		|		ПО ТаблицаЗаказов.Документ = СтатусыЗаказов211.Заказ
		|		И (СтатусыЗаказов211.Статус = 211 ИЛИ СтатусыЗаказов211.Статус = 212)
		//CeHbKA 20.04.2021 по письму Ю.Семеновой
		|ГДЕ
		|	((ТаблицаЗаказов.СтатусЗаказа В (&СтатусЗаказа)
		|			ИЛИ ТаблицаЗаказов.СтатусЗаказа = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
		//Геннадий 25.04.2022 ++
		//|				И ТаблицаЗаказов.ПричинаНевыполнения В (&ПричиныНеВыполненияДоставки)
		//Геннадий 25.04.2022 --
		|			ИЛИ ТаблицаЗаказов.Документ ССЫЛКА Документ.Фрахт)
		//CeHbKA 20.04.2021 по письму Ю.Семеновой
		|	И
		|	ВЫБОР 
		|		КОГДА ТаблицаЗаказов.ТипЗаказа = Значение(Перечисление.ТипыЗаказов.Доставка)
		|			ИЛИ ТаблицаЗаказов.ТипЗаказа = Значение(Перечисление.ТипыЗаказов.Самовывоз) 
		|				ТОГДА НЕ СтатусыЗаказов211.Статус ЕСТЬ NULL
		|			ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		//Геннадий 25.04.2022 ++
		|   ИЛИ ТаблицаЗаказов.ЭтоВозврат)
		|	ИЛИ ВЫБОР 
		|		КОГДА ТаблицаЗаказов.ТипЗаказа = Значение(Перечисление.ТипыЗаказов.Забор) И 
		|				ТаблицаЗаказов.СтатусЗаказа = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена) И (ТаблицаЗаказов.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
		|			) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		//Геннадий 25.04.2022 --
		|"; 
		//CeHbKA 20.04.2021 по письму Ю.Семеновой
	
	#КонецОбласти
	
	СтатусЗаказа = Новый Массив;
	СтатусЗаказа.Добавить(Справочники.новаРезультатМестнойДоставки.Выполнена);
	СтатусЗаказа.Добавить(Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично);
	//СтатусЗаказа.Добавить(Справочники.новаРезультатМестнойДоставки.НеВыполнена);
	
	Запрос.УстановитьПараметр("ТаблицаЗаказов", ТаблицаЗаказов);
	Запрос.УстановитьПараметр("СтатусЗаказа", СтатусЗаказа);
	Запрос.УстановитьПараметр("ПричиныНеВыполненияДоставки", ПараметрыЗапроса.ПричиныНеВыполненияДоставки);
	Запрос.УстановитьПараметр("МаркировкаЗаказа", Справочники.ПоказателиРасчетаУслугСД.НайтиПоНаименованию("Маркировка"));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаРезультата ИЗ РезультатЗапроса Цикл
		Если ПоОсновномуМагазину тогда			
			СтрокаРезультата.ИнтернетМагазин = СтрокаРезультата.Партнер;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат РезультатЗапроса;
	
КонецФункции

Функция ПолучитьВыводОтчета(ДатаНачала, ДатаОкончания, ИнтернетМагазин) Экспорт
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ПараметрПериодОтчета	= НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета"));
	ПараметрПериодОтчета.Значение.ДатаНачала = ДатаНачала;
	ПараметрПериодОтчета.Значение.ДатаОкончания = ДатаОкончания;	
	
	ПараметрИнтернетМагазин = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ИнтернетМагазин"));
	ПараметрИнтернетМагазин.Использование = Истина;
	ПараметрИнтернетМагазин.Значение = ИнтернетМагазин;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтчета); 
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДанныеРасшифровки = Неопределено;
	ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, Ложь);
	
	Возврат ДокументРезультат;
	 
КонецФункции	