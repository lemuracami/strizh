#Область ПрограммныйИнтерфейс

#Область ЗапросДанных

Функция ПараметрыЗапросаПоЗаказам() Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИнтернетМагазин", Справочники.Контрагенты.ПустаяСсылка());
	СтруктураПараметров.Вставить("Партнер", Справочники.Контрагенты.ПустаяСсылка());
	СтруктураПараметров.Вставить("ПоИнтернетМагазину", Ложь);
	СтруктураПараметров.Вставить("ПоПартнеру", Ложь);
	СтруктураПараметров.Вставить("ПоСтатусуЗаказа", Ложь);
	СтруктураПараметров.Вставить("ПоТипуЗаказа", Ложь);
	СтруктураПараметров.Вставить("СтатусЗаказа", Справочники.новаРезультатМестнойДоставки.ПустаяСсылка());
	СтруктураПараметров.Вставить("ТипЗаказа", Перечисления.ТипыЗаказов.ПустаяСсылка());
	СтруктураПараметров.Вставить("ПартнерПоДанным", Истина);
	СтруктураПараметров.Вставить("ПричиныНеВыполненияДоставки", Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПолучитьЗакрытыеЗаказыВПериоде(Период, ПараметрыЗапроса, ТолькоТекстЗапроса = Ложь) Экспорт
	
	#Область ПримерЗапросаКТаблице
	 ТекстЗапроса = "ВЫБРАТЬ
		|	ТаблицаЗаказов.Документ,
		|	ТаблицаЗаказов.НомерДокумента,
		|	ТаблицаЗаказов.ДатаДокумента,
		|	ТаблицаЗаказов.ЮрЛицо,
		|	ТаблицаЗаказов.ТипЗаказа,
		|	ТаблицаЗаказов.Транспорт,
		|	ТаблицаЗаказов.ИнтернетМагазин,
		|	ТаблицаЗаказов.Партнер,
		|	ТаблицаЗаказов.КатегорияДоставки,
		|	ТаблицаЗаказов.Водитель,
		|	ТаблицаЗаказов.Клиент,
		|	ТаблицаЗаказов.ТипОплаты,
		|	ТаблицаЗаказов.СтатусЗаказа,
		|	ТаблицаЗаказов.ПричинаНевыполнения,
		|	ТаблицаЗаказов.СтатусИнтернетМагазина,
		|	ТаблицаЗаказов.ПричинаОтказа,
		|	ТаблицаЗаказов.VIPДоставка,
		|	ТаблицаЗаказов.ВидVip,
		|	ТаблицаЗаказов.ТарифнаяСетка,
		|	ТаблицаЗаказов.РасчетныйБрейк,
		|	ТаблицаЗаказов.ТарифнаяСеткаПартнера,
		|	ТаблицаЗаказов.ЗонаТарификации,
		|	ТаблицаЗаказов.ПричинаОтклоненияЗаказа,
		|	ТаблицаЗаказов.ТерминалДоставки,
		|	ТаблицаЗаказов.ТерминалПриёма,
		|	ТаблицаЗаказов.ОбъемныйБрейк,
		|	ТаблицаЗаказов.ПодъемныйБрейк,
		|	ТаблицаЗаказов.СуммаОценочная,
		|	ТаблицаЗаказов.СуммаПолученная,
		|	ТаблицаЗаказов.СуммаДоставкиДоМКАД,
		|	ТаблицаЗаказов.СуммаДоставкиЗаМКАД,
		|	ТаблицаЗаказов.УслугиСД,
		|	ТаблицаЗаказов.БанковскаяКомиссия,
		|	ТаблицаЗаказов.КассовоеОбслуживание,
		|	ТаблицаЗаказов.СуммаВозврата,
		|	ТаблицаЗаказов.Масса,
		|	ТаблицаЗаказов.СуммаЧастичногоВозврата,
		|	ТаблицаЗаказов.ОплаченоКлиентовНал,
		|	ТаблицаЗаказов.АгентскоеВознаграждение,
		|	ТаблицаЗаказов.ПредоплатаПоКредиту,
		|	ТаблицаЗаказов.УслугиСДЧистые,
		|	ТаблицаЗаказов.СтраховойСбор,
		|	ТаблицаЗаказов.ФактическийВес,
		|	ТаблицаЗаказов.ОбъемЗабора,
		|	ТаблицаЗаказов.ОбъемЗабораПоЗаказам,
		|	ТаблицаЗаказов.ВыгруженныйОбъем,
		|	ТаблицаЗаказов.ТарифицируемыйВес,
		|	ТаблицаЗаказов.СтоимостьОценочнаяПоТоварно,
		|	ТаблицаЗаказов.КоличествоПереносовСЗаездами,
		|	ТаблицаЗаказов.СтоимостьПереносовСЗаездами,
		|	ТаблицаЗаказов.СтоимостьПодъемаМП
		|ПОМЕСТИТЬ ТаблицаЗаказов
		|ИЗ &ТаблицаЗаказов КАК ТаблицаЗаказов";
		
	#КонецОбласти
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗакрытыеЗаказы.Реализация КАК Документ
		|ПОМЕСТИТЬ ВТ_Документы
		|ИЗ
		|	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
		|ГДЕ
		|	ЗакрытыеЗаказы.Реализация.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ВЫБОР
		|			КОГДА &ПоИнтернетМагазину
		|				ТОГДА ЗакрытыеЗаказы.ИнтернетМагазин В (&ИнтернетМагазин)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &ПоПартнеру
		|					И &ПартнерПоДанным
		|				ТОГДА ЗакрытыеЗаказы.Партнер В (&Партнер)
		|			КОГДА &ПоПартнеру
		|					И НЕ &ПартнерПоДанным
		|				ТОГДА ВЫБОР
		|						КОГДА ЗакрытыеЗаказы.ИнтернетМагазин.Родитель.ОсновнойМагазин = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|							ТОГДА ЗакрытыеЗаказы.ИнтернетМагазин В (&Партнер)
		|						ИНАЧЕ ЗакрытыеЗаказы.ИнтернетМагазин.Родитель.ОсновнойМагазин В (&Партнер)
		|					КОНЕЦ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &ПоТипуЗаказа
		|				ТОГДА ЗакрытыеЗаказы.ТипЗаказа В (&ТипЗаказа)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &ПоСтатусуЗаказа
		|				ТОГДА ЗакрытыеЗаказы.СтатусЗаказа В (&СтатусЗаказа)
		//|						ИЛИ ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
		|						ИЛИ ЗакрытыеЗаказы.ПричинаНевыполнения В (&ПричиныНеВыполненияДоставки)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ЗакрытыеЗаказы.Период) КАК КолВо,
		|	ЗакрытыеЗаказы.Реализация КАК Документ
		|ПОМЕСТИТЬ ВТ_КоличествоЗаписей
		|ИЗ
		|	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
		|ГДЕ
		|	ЗакрытыеЗаказы.Реализация В
		|			(ВЫБРАТЬ
		|				ВТ_Документы.Документ
		|			ИЗ
		|				ВТ_Документы)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗакрытыеЗаказы.Реализация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗакрытыеЗаказы.Реализация КАК Документ,
		|	ЗакрытыеЗаказы.Реализация.Номер КАК НомерДокумента,
		|	ЗакрытыеЗаказы.Реализация.Дата КАК ДатаДокумента,
		|	ЗакрытыеЗаказы.Реализация.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
		|	ЗакрытыеЗаказы.ЮрЛицо КАК ЮрЛицо,
		|	ЗакрытыеЗаказы.ТипЗаказа КАК ТипЗаказа,
		|	ЗакрытыеЗаказы.Транспорт КАК Транспорт,
		|	ЗакрытыеЗаказы.ИнтернетМагазин КАК ИнтернетМагазин,
		|	ВЫБОР
		|		КОГДА ЗакрытыеЗаказы.КатегорияДоставки = """"
		|				ИЛИ ЗакрытыеЗаказы.КатегорияДоставки = НЕОПРЕДЕЛЕНО
		|				ИЛИ ЗакрытыеЗаказы.КатегорияДоставки = ЗНАЧЕНИЕ(Справочник.КатегорииДоставки2014.ПустаяСсылка)
		|				ИЛИ ЗакрытыеЗаказы.КатегорияДоставки ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КатегорииДоставки2014.ПустаяСсылка)
		|		ИНАЧЕ ЗакрытыеЗаказы.КатегорияДоставки
		|	КОНЕЦ КАК КатегорияДоставки,
		|	ЗакрытыеЗаказы.Водитель КАК Водитель,
		|	ЗакрытыеЗаказы.Клиент КАК Клиент,
		|	ЗакрытыеЗаказы.ТипОплаты КАК ТипОплаты,
		|	ЗакрытыеЗаказы.СтатусЗаказа КАК СтатусЗаказа,
		|	ЗакрытыеЗаказы.ПричинаНевыполнения КАК ПричинаНевыполнения,
		|	ЗакрытыеЗаказы.СтатусИнтернетМагазина КАК СтатусИнтернетМагазина,
		|	ЗакрытыеЗаказы.ПричинаОтказа КАК ПричинаОтказа,
		|	ЗакрытыеЗаказы.VIPДоставка КАК VIPДоставка,
		|	ЗакрытыеЗаказы.ВидVip КАК ВидVip,
		|	ЗакрытыеЗаказы.ТарифнаяСетка КАК ТарифнаяСетка,
		|	ЗакрытыеЗаказы.РасчетныйБрейк КАК РасчетныйБрейк,
		|	ЗакрытыеЗаказы.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
		//|	ЗакрытыеЗаказы.ЗонаТарификации КАК ЗонаТарификации,
		//CeHbKA 19.01.2020 по письму от Ю.Семеновой
		|	ЗакрытыеЗаказы.ЗонаТарификации.КлассификаторЗоныТарификации КАК ЗонаТарификации,
		//CeHbKA 19.01.2020 по письму от Ю.Семеновой
		|	ЗакрытыеЗаказы.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
		|	ЗакрытыеЗаказы.Партнер КАК Партнер,
		|	ЗакрытыеЗаказы.ТерминалДоставки КАК ТерминалДоставки,
		|	ЗакрытыеЗаказы.ТерминалПриёма КАК ТерминалПриёма,
		|	ЗакрытыеЗаказы.ОбъемныйБрейк КАК ОбъемныйБрейк,
		|	ЗакрытыеЗаказы.ПодъемныйБрейк КАК ПодъемныйБрейк,
		|	ВЫБОР
		|		КОГДА ВТ_КоличествоЗаписей.КолВо = 1
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЗакрытыеЗаказы.Регистратор ССЫЛКА Документ.КорректировкаУслугСД
		|						И НЕ ЗакрытыеЗаказы.Корректировка
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ
		|	КОНЕЦ КАК ЗаписьВОтчет,
		|	ЗакрытыеЗаказы.ОценочнаяСтоимость КАК ОценочнаяСтоимость,
		|	ЗакрытыеЗаказы.КоличествоТарифицируемыхРейсов  КАК КоличествоТарифицируемыхРейсов
		|ПОМЕСТИТЬ ВТ_ЗакрытыеЗаказы
		|ИЗ
		|	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоЗаписей КАК ВТ_КоличествоЗаписей
		|		ПО ЗакрытыеЗаказы.Реализация = ВТ_КоличествоЗаписей.Документ
		|ГДЕ
		|	ЗакрытыеЗаказы.Реализация В
		|			(ВЫБРАТЬ
		|				ВТ_Документы.Документ
		|			ИЗ
		|				ВТ_Документы)
		|	И ВЫБОР
		|			КОГДА ВТ_КоличествоЗаписей.КолВо = 1
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ЗакрытыеЗаказы.Регистратор ССЫЛКА Документ.КорректировкаУслугСД
		|							И НЕ ЗакрытыеЗаказы.Корректировка
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ
		|		КОНЕЦ
		//CeHbKA 14.09.2020 
		//по запросу Семёновой из почты (Отклоненные заборы мне в отчете не нужны. Только если они имеют статус отказ с заездом.
		|	И НЕ (ЗакрытыеЗаказы.ТипЗаказа = Значение(Перечисление.ТипыЗаказов.Забор) И ЗакрытыеЗаказы.СтатусИнтернетМагазина = Значение(Справочник.СтатусЗаказаИнтернетМагазина.ЗаказОтклонен) И ЗакрытыеЗаказы.ПричинаНевыполнения = Значение(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда))
		//CeHbKA 14.09.2020 
		//CeHbKA 12.04.2021 
		//|	И ЗакрытыеЗаказы.ТипЗаказа <> Значение(Перечисление.ТипыЗаказов.Забор) 
		//|	И ЗакрытыеЗаказы.СтатусИнтернетМагазина <> Значение(Справочник.СтатусЗаказаИнтернетМагазина.ЗаказОтклонен) 
		//|	И ЗакрытыеЗаказы.ПричинаНевыполнения <> Значение(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда)    
		//CeHbKA 12.04.2021 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_Документы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_КоличествоЗаписей
		|;
		|		
		//Геннадий 25.04.2022 ++
		//письма Семенова. В отчет не попадали тарифицируемые возвраты
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ЗакрытыеЗаказы.Документ КАК Документ,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.НомерСтроки ЕСТЬ NULL
		|			И НЕ ВозвратТоваровОтПокупателяТовары.НомерСтроки ЕСТЬ NULL
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоВозврат
		|ПОМЕСТИТЬ ВТ_ПризнакВозврата
		|ИЗ
		|	ВТ_ЗакрытыеЗаказы КАК ВТ_ЗакрытыеЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ПО ВТ_ЗакрытыеЗаказы.Документ = РеализацияТоваровУслугТовары.Ссылка
		|			И (РеализацияТоваровУслугТовары.Ссылка В
		|				(ВЫБРАТЬ
		|					ВТ_ЗакрытыеЗаказы.Документ
		|				ИЗ
		|					ВТ_ЗакрытыеЗаказы))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
		|		ПО ВТ_ЗакрытыеЗаказы.Документ.Номер = ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
		|			И (ВозвратТоваровОтПокупателяТовары.Ссылка.Номер В
		|				(ВЫБРАТЬ
		|					ВТ_ЗакрытыеЗаказы.Документ.Номер
		|				ИЗ
		|					ВТ_ЗакрытыеЗаказы))
		|;
		//Геннадий 25.04.2022 --
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗакрытыеЗаказы.Документ КАК Документ,
		|	ВТ_ЗакрытыеЗаказы.НомерДокумента КАК НомерДокумента,
		|	ВТ_ЗакрытыеЗаказы.ДатаДокумента КАК ДатаДокумента,
		|	ВТ_ЗакрытыеЗаказы.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
		|	ВТ_ЗакрытыеЗаказы.ЮрЛицо КАК ЮрЛицо,
		|	ВТ_ЗакрытыеЗаказы.ТипЗаказа КАК ТипЗаказа,
		|	ВТ_ЗакрытыеЗаказы.Транспорт КАК Транспорт,
		|	ВТ_ЗакрытыеЗаказы.ИнтернетМагазин КАК ИнтернетМагазин,
		|	ВЫБОР
		|		КОГДА &ПоПартнеру
		|				И НЕ &ПартнерПоДанным
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ЗакрытыеЗаказы.ИнтернетМагазин.Родитель.ОсновнойМагазин = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|						ТОГДА ВТ_ЗакрытыеЗаказы.ИнтернетМагазин
		|					ИНАЧЕ ВТ_ЗакрытыеЗаказы.ИнтернетМагазин.Родитель.ОсновнойМагазин
		|				КОНЕЦ
		|		ИНАЧЕ ВТ_ЗакрытыеЗаказы.Партнер
		|	КОНЕЦ КАК Партнер,
		|	ВТ_ЗакрытыеЗаказы.КатегорияДоставки КАК КатегорияДоставки,
		|	ВТ_ЗакрытыеЗаказы.Водитель КАК Водитель,
		|	ВТ_ЗакрытыеЗаказы.Клиент КАК Клиент,
		|	ВТ_ЗакрытыеЗаказы.ТипОплаты КАК ТипОплаты,
		|	ВТ_ЗакрытыеЗаказы.СтатусЗаказа КАК СтатусЗаказа,
		|	ВТ_ЗакрытыеЗаказы.ПричинаНевыполнения КАК ПричинаНевыполнения,
		|	ВТ_ЗакрытыеЗаказы.СтатусИнтернетМагазина КАК СтатусИнтернетМагазина,
		|	ВТ_ЗакрытыеЗаказы.ПричинаОтказа КАК ПричинаОтказа,
		|	ВТ_ЗакрытыеЗаказы.VIPДоставка КАК VIPДоставка,
		|	ВТ_ЗакрытыеЗаказы.ВидVip КАК ВидVip,
		|	ВТ_ЗакрытыеЗаказы.ТарифнаяСетка КАК ТарифнаяСетка,
		|	ВТ_ЗакрытыеЗаказы.РасчетныйБрейк КАК РасчетныйБрейк,
		|	ВТ_ЗакрытыеЗаказы.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
		|	ВТ_ЗакрытыеЗаказы.ЗонаТарификации КАК ЗонаТарификации,
		|	ВТ_ЗакрытыеЗаказы.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
		|	ВТ_ЗакрытыеЗаказы.ТерминалДоставки КАК ТерминалДоставки,
		|	ВТ_ЗакрытыеЗаказы.ТерминалПриёма КАК ТерминалПриёма,
		|	ВТ_ЗакрытыеЗаказы.ОбъемныйБрейк КАК ОбъемныйБрейк,
		|	ВТ_ЗакрытыеЗаказы.ПодъемныйБрейк КАК ПодъемныйБрейк,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот, 0)) КАК СуммаОценочная,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот, 0)) КАК СуммаПолученная,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот, 0)) КАК СуммаДоставкиДоМКАД,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот, 0)) КАК СуммаДоставкиЗаМКАД,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.УслугиСДОборот, 0)) КАК УслугиСД,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот, 0)) КАК БанковскаяКомиссия,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот, 0)) КАК КассовоеОбслуживание,
		//CeHbKA #4199 15.09.2020
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.ВознаграждениеАгентаПоПредоплаченнымЗаказамОборот, 0)) КАК ВознаграждениеАгентаПоПредоплаченнымЗаказам,
		//CeHbKA #4199 15.09.2020
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот, 0)) КАК СуммаВозврата,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.МассаОборот, 0)) КАК Масса,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот, 0)) КАК СуммаЧастичногоВозврата,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот, 0)) КАК ОплаченоКлиентовНал,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот, 0)) КАК АгентскоеВознаграждение,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.ПредоплатаПоКредитуОборот, 0)) КАК ПредоплатаПоКредиту,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.УслугиСДЧистыеОборот, 0)) КАК УслугиСДЧистые,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.СтраховойСборОборот, 0)) КАК СтраховойСбор,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.ФактическийВесОборот, 0)) КАК ФактическийВес,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.ОбъемЗабораОборот, 0)) КАК ОбъемЗабора,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.ОбъемЗабораПоЗаказамОборот, 0)) КАК ОбъемЗабораПоЗаказам,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.ВыгруженныйОбъемОборот, 0)) КАК ВыгруженныйОбъем,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.ТарифицируемыйВесОборот, 0)) КАК ТарифицируемыйВес,
		//Асеев 26.09.2023 (Задача № 5133)>>>
		|	ВЫБОР
		|		КОГДА СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.ТарифицируемыйОбъемныйВесОборот, 0)) = 0
		|			ТОГДА СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.ТарифицируемыйВесОборот, 0))
		|		ИНАЧЕ СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.ТарифицируемыйОбъемныйВесОборот, 0))
		|	КОНЕЦ КАК ОбъемныйВес,
		//Асеев 26.09.2023 (Задача № 5133)<<<
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.СтоимостьОценочнаяПоТоварноОборот, 0)) КАК СтоимостьОценочнаяПоТоварно,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.КоличествоПереносовСЗаездамиОборот, 0)) КАК КоличествоПереносовСЗаездами,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.СтоимостьПереносовСЗаездамиОборот, 0)) КАК СтоимостьПереносовСЗаездами,
		|	СУММА(ЕСТЬNULL(ЗакрытыеЗаказыОбороты.СтоимостьПодъемаМПОборот, 0)) КАК СтоимостьПодъемаМП,
		|	ВТ_ЗакрытыеЗаказы.ОценочнаяСтоимость КАК ОценочнаяСтоимость,
		|	ВТ_ЗакрытыеЗаказы.Документ.ТерминалДоставки КАК ДокументТерминалДоставки,
		|	ВЫБОР
		|		КОГДА ВТ_ЗакрытыеЗаказы.Документ ССЫЛКА Документ.ЗаборТовара
		|			ТОГДА ВТ_ЗакрытыеЗаказы.Документ.ТочкаДоставки.Москва
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ТочкаДоставкиМосква,
		|	ВТ_ЗакрытыеЗаказы.КоличествоТарифицируемыхРейсов КАК КоличествоТарифицируемыхРейсов
		//Геннадий 25.04.2022 ++
		|	,ВТ_ПризнакВозврата.ЭтоВозврат КАК ЭтоВозврат
		//Геннадий 25.04.2022 --
		|ИЗ
		|	ВТ_ЗакрытыеЗаказы КАК ВТ_ЗакрытыеЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы.Обороты КАК ЗакрытыеЗаказыОбороты
		|		ПО ВТ_ЗакрытыеЗаказы.Документ = ЗакрытыеЗаказыОбороты.Реализация
		//Геннадий 25.04.2022 ++
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПризнакВозврата 
		|		ПО ВТ_ЗакрытыеЗаказы.Документ = ВТ_ПризнакВозврата.Документ
		//Геннадий 25.04.2022 --
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗакрытыеЗаказы.НомерДокумента,
		|	ВТ_ЗакрытыеЗаказы.ДатаДокумента,
		|	ВТ_ЗакрытыеЗаказы.НомерВнешнегоЗаказа,
		|	ВТ_ЗакрытыеЗаказы.ТипЗаказа,
		|	ВТ_ЗакрытыеЗаказы.Транспорт,
		|	ВТ_ЗакрытыеЗаказы.Документ,
		|	ВТ_ЗакрытыеЗаказы.ЮрЛицо,
		|	ВТ_ЗакрытыеЗаказы.ИнтернетМагазин,
		|	ВТ_ЗакрытыеЗаказы.КатегорияДоставки,
		|	ВТ_ЗакрытыеЗаказы.Водитель,
		|	ВТ_ЗакрытыеЗаказы.ОбъемныйБрейк,
		|	ВТ_ЗакрытыеЗаказы.РасчетныйБрейк,
		|	ВТ_ЗакрытыеЗаказы.СтатусЗаказа,
		|	ВТ_ЗакрытыеЗаказы.ВидVip,
		|	ВТ_ЗакрытыеЗаказы.ЗаписьВОтчет,
		|	ВТ_ЗакрытыеЗаказы.VIPДоставка,
		|	ВТ_ЗакрытыеЗаказы.ТерминалДоставки,
		|	ВТ_ЗакрытыеЗаказы.ТарифнаяСетка,
		|	ВТ_ЗакрытыеЗаказы.ЗонаТарификации,
		|	ВТ_ЗакрытыеЗаказы.ПричинаНевыполнения,
		|	ВТ_ЗакрытыеЗаказы.СтатусИнтернетМагазина,
		|	ВТ_ЗакрытыеЗаказы.ПричинаОтказа,
		|	ВТ_ЗакрытыеЗаказы.ТарифнаяСеткаПартнера,
		|	ВТ_ЗакрытыеЗаказы.Клиент,
		|	ВТ_ЗакрытыеЗаказы.ПричинаОтклоненияЗаказа,
		|	ВТ_ЗакрытыеЗаказы.ТерминалПриёма,
		|	ВТ_ЗакрытыеЗаказы.ПодъемныйБрейк,
		|	ВТ_ЗакрытыеЗаказы.ТипОплаты,
		|	ВТ_ЗакрытыеЗаказы.ОценочнаяСтоимость,
		|	ВТ_ЗакрытыеЗаказы.КоличествоТарифицируемыхРейсов,
		|	ВТ_ЗакрытыеЗаказы.Документ.ТерминалДоставки,
		|	ВЫБОР
		|		КОГДА ВТ_ЗакрытыеЗаказы.Документ ССЫЛКА Документ.ЗаборТовара
		|			ТОГДА ВТ_ЗакрытыеЗаказы.Документ.ТочкаДоставки.Москва
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА &ПоПартнеру
		|				И НЕ &ПартнерПоДанным
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ЗакрытыеЗаказы.ИнтернетМагазин.Родитель.ОсновнойМагазин = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|						ТОГДА ВТ_ЗакрытыеЗаказы.ИнтернетМагазин
		|					ИНАЧЕ ВТ_ЗакрытыеЗаказы.ИнтернетМагазин.Родитель.ОсновнойМагазин
		|				КОНЕЦ
		|		ИНАЧЕ ВТ_ЗакрытыеЗаказы.Партнер
		|	КОНЕЦ
		//Геннадий 25.04.2022 ++
		|	,ВТ_ПризнакВозврата.ЭтоВозврат
		//Геннадий 25.04.2022 --
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ЗакрытыеЗаказы";
	
	Если ТолькоТекстЗапроса Тогда 
		Возврат  Запрос.Текст;
	КонецЕсли;	
	
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("ИнтернетМагазин", ПараметрыЗапроса.ИнтернетМагазин);
	Запрос.УстановитьПараметр("Партнер", ПараметрыЗапроса.Партнер);
	Запрос.УстановитьПараметр("ПоИнтернетМагазину", ПараметрыЗапроса.ПоИнтернетМагазину);
	Запрос.УстановитьПараметр("ПоПартнеру", ПараметрыЗапроса.ПоПартнеру);
	Запрос.УстановитьПараметр("ПоСтатусуЗаказа", ПараметрыЗапроса.ПоСтатусуЗаказа);
	Запрос.УстановитьПараметр("ПоТипуЗаказа", ПараметрыЗапроса.ПоТипуЗаказа);
	Запрос.УстановитьПараметр("СтатусЗаказа", ПараметрыЗапроса.СтатусЗаказа);
	Запрос.УстановитьПараметр("ПричиныНеВыполненияДоставки", ПараметрыЗапроса.ПричиныНеВыполненияДоставки);
	Запрос.УстановитьПараметр("ТипЗаказа", ПараметрыЗапроса.ТипЗаказа);
	Запрос.УстановитьПараметр("ПартнерПоДанным", ПараметрыЗапроса.ПартнерПоДанным);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции	

//Пример объединения с оплатами
//ТаблицаОплат = ПолучитьДанныеПоОплатам(ДатаНачала, ДатаОкончания, ИнтернетМагазин);
//РезультатЗапроса = ОбъединитьДанныеВывода(РезультатЗапроса, ТаблицаОплат);

Функция ОбъединитьДанныеВывода(ТаблицаОтчета, ТаблицаОплат) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаОтчета.ИнтернетМагазин КАК ИнтернетМагазин,
		|	ТаблицаОтчета.ЗаказыЗаборы КАК ЗаказыЗаборы,
		|	ТаблицаОтчета.КатегорияДоставки КАК КатегорияДоставки,
		|	ТаблицаОтчета.ТипЗаказа КАК ТипЗаказа,
		|	ТаблицаОтчета.Месяц КАК Месяц,
		|	ТаблицаОтчета.Документ КАК Документ,
		|	ТаблицаОтчета.ТерминалДоставки КАК ТерминалДоставки,
		|	ТаблицаОтчета.ЗонаТарификации КАК ЗонаТарификации,
		|	ТаблицаОтчета.Оплачено КАК Оплачено,
		|	ТаблицаОтчета.ТипОплатыОтчет КАК ТипОплаты,
		|	ТаблицаОтчета.ОбщийВесЗаказа КАК ОбщийВесЗаказа,
		|	ТаблицаОтчета.Зона КАК Зона
		|ПОМЕСТИТЬ ТаблицаОтчета
		|ИЗ
		|	&ТаблицаОтчета КАК ТаблицаОтчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОплат.Заказ КАК Заказ,
		|	ТаблицаОплат.Наличные КАК Наличные,
		|	ТаблицаОплат.БезНаличные КАК БезНаличные,
		|	ТаблицаОплат.СуммаВозвратаНаличные КАК ВозвратНаличные,
		|	ТаблицаОплат.СуммаВозвратаБезНаличные КАК ВозвратБезНаличные
		|ПОМЕСТИТЬ ТаблицаОплат
		|ИЗ
		|	&ТаблицаОплат КАК ТаблицаОплат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОтчета.ИнтернетМагазин КАК ИнтернетМагазин,
		|	ТаблицаОтчета.ЗаказыЗаборы КАК ЗаказыЗаборы,
		|	ТаблицаОтчета.КатегорияДоставки КАК КатегорияДоставки,
		|	ТаблицаОтчета.ТипЗаказа КАК ТипЗаказа,
		|	ТаблицаОтчета.Месяц КАК Месяц,
		|	ТаблицаОтчета.Документ КАК Документ,
		|	ТаблицаОтчета.ТерминалДоставки КАК ТерминалДоставки,
		|	ТаблицаОтчета.ЗонаТарификации КАК ЗонаТарификации,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ТаблицаОплат.Наличные, 0) + ЕСТЬNULL(ТаблицаОплат.БезНаличные, 0) = 0
		|			ТОГДА ТаблицаОтчета.Документ.СуммаДокумента
		|		ИНАЧЕ ЕСТЬNULL(ТаблицаОплат.Наличные, 0) + ЕСТЬNULL(ТаблицаОплат.БезНаличные, 0) - (ЕСТЬNULL(ТаблицаОплат.ВозвратНаличные, 0) + ЕСТЬNULL(ТаблицаОплат.ВозвратБезНаличные, 0))
		|	КОНЕЦ КАК Оплачено,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ТаблицаОплат.Наличные, 0) + ЕСТЬNULL(ТаблицаОплат.БезНаличные, 0) = 0
		|			ТОГДА ""Оплачено в магазине""
		|		ИНАЧЕ ""Нал+пластик""
		|	КОНЕЦ КАК ТипОплаты,
		|	ТаблицаОтчета.ОбщийВесЗаказа КАК ОбщийВесЗаказа,
		|	ТаблицаОтчета.Зона КАК Зона
		|ИЗ
		|	ТаблицаОтчета КАК ТаблицаОтчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОплат КАК ТаблицаОплат
		|		ПО ТаблицаОтчета.Документ = ТаблицаОплат.Заказ
		|ГДЕ
		|	ТаблицаОтчета.Документ ССЫЛКА Документ.РеализацияТоваровУслуг";
	
	Запрос.УстановитьПараметр("ТаблицаОплат", ТаблицаОплат);
	Запрос.УстановитьПараметр("ТаблицаОтчета", ТаблицаОтчета);

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции	
	
Функция ПолучитьДанныеПоОплатам(ДатаНачала, ДатаОкончания, ИнтернетМагазин = Неопределено) Экспорт

	СКД = Отчеты.ОтчетКассираНовый.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	Компоновщик = Новый КомпоновщикНастроекКомпоновкиДанных;
	URLСКД = ПоместитьВоВременноеХранилище(СКД, Новый УникальныйИдентификатор());
	Компоновщик.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСКД));

	НастройкиКомпоновки = СКД.НастройкиПоУмолчанию;
	
	ПараметрПериодВыгрузки = НастройкиКомпоновки.ПараметрыДанных.Элементы.Найти("Период");
	ПараметрПериодВыгрузки.Значение = Новый СтандартныйПериод(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания));
	ПараметрПериодВыгрузки.Использование = Истина;
	
	СписокТерминалов = Новый СписокЗначений;
	СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
	СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
	СписокТерминалов.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
	
	ПараметрТерминал = НастройкиКомпоновки.ПараметрыДанных.Элементы.Найти("ТерминалДоставки");
	ПараметрТерминал.Значение = СписокТерминалов;
	ПараметрТерминал.Использование = Истина;
	
	ПараметрИнтернетМагазин = НастройкиКомпоновки.ПараметрыДанных.Элементы.Найти("ИнтернетМагазин");
	Если ИнтернетМагазин = Неопределено Тогда
		ПараметрИнтернетМагазин.Использование = Ложь;
	Иначе
		ПараметрИнтернетМагазин.Значение = ИнтернетМагазин;
		ПараметрИнтернетМагазин.Использование = Истина;
	КонецЕсли;
	
	Компоновщик.ЗагрузитьНастройки(НастройкиКомпоновки);
	
	ТаблицаДанных = обработки.ВыгрузкаДанныхВБухгалтерию.СкомпоноватьВТаблицуЗначений(СКД, Компоновщик);	
	
	ТаблицаДанных.Свернуть("Заказ", "Наличные,БезНаличные,СуммаВозвратаНаличные,СуммаВозвратаБезНаличные");
	
	МассивНеНужныхСтрок = Новый Массив;
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		Если  Не ЗначениеЗаполнено(СтрокаДанных.Заказ) Или (СтрокаДанных.Наличные = 0 И СтрокаДанных.БезНаличные = 0) Тогда
			МассивНеНужныхСтрок.Добавить(СтрокаДанных);
		Конецесли;	
		
	КонецЦикла;	
	
	Для Каждого СтрокаКУдалению Из МассивНеНужныхСтрок Цикл
		ТаблицаДанных.Удалить(СтрокаКУдалению);
	КонецЦикла;		
	
	Возврат ТаблицаДанных;
		
КонецФункции

#КонецОбласти

Функция СформироватьСтрокуПодзаголовка(Знач ГоловнойКонтрагент, Знач НачальнаяДатаОтчета, Знач КонечнаяДатаОтчета) Экспорт
	
	ДанныеДляПечати = СобратьДанныеДляПечати(ГоловнойКонтрагент,КонечнаяДатаОтчета);
	ПринципалСтрокой = ДанныеДляПечати.КонтрагентСтрокой;
	
	СтрокаЗаголовка = ПринципалСтрокой + ", именуемое в дальнейшем Заказчик, в лице ______________________________________, с одной стороны, и " + 
	СокрЛП(ДанныеДляПечати.Организация)  + ", именуемое в дальнейшем Исполнитель, в лице " + ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице + " " + ДанныеДляПечати.ФИОРуководителяВлице + 
	", действующего на основании Устава, с другой стороны, именуемые в дальнейшем ""Стороны"", настоящим Отчетом удостоверяют, " + 
	"что в соответствии с условиями  Договора  в период с "+Формат(НачальнаяДатаОтчета,"ДФ='d MMMM yyyy "" г.""'")+" по "+Формат(КонечнаяДатаОтчета,"ДФ='d MMMM yyyy "" г.""'")+" были осуществлены следующие услуги:";
	
	Возврат СтрокаЗаголовка;
	
КонецФункции

// Возможные имена параметров:
//Организация, Агент, Параметр1, Параметр2,Руководитель, ФИОРуководителя, ФИОРуководителяВлице и т.д., все что есть в ДанныеДляПечати
Функция ЗначениеПараметраДанныхПечати(ДанныеДляПечати, ИмяПараметра) Экспорт
	
	//ДанныеДляПечати = СобратьДанныеДляПечати(ГоловнойКонтрагент,КонечнаяДатаОтчета);
	Если ДанныеДляПечати.Свойство(ИмяПараметра) Тогда
		Возврат ДанныеДляПечати[ИмяПараметра];
	Иначе
		Возврат "";
	КонецЕсли;	
	
КонецФункции

Функция СобратьДанныеДляПечати(Знач Контрагент,Знач КонДата) Экспорт
	
	//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)>>>
	МестоположениеКомпоненты = "ОбщийМакет.NameDecl";
	Попытка
		ПодключитьВнешнююКомпоненту(МестоположениеКомпоненты, "NameDecl", ТипВнешнейКомпоненты.Native); 
		ОбъектСклонения = Новый("AddIn.NameDecl.CNameDecl");
	Исключение
		ОбъектСклонения = Неопределено;
	КонецПопытки;
	//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)<<<
	
    ДанныеДляПечати = Новый Структура;   
    ВариантПечати = ПолучитьПараметрыПечатиОтчетаКонтрагента(Контрагент);
    Если ВариантПечати = Перечисления.ВариантыПечатиОтчетовАгента.ПринциалАгент Тогда
        Параметр1 = "Принципал"; 
        Параметр2 = "Агент";
	ИначеЕсли ВариантПечати = Перечисления.ВариантыПечатиОтчетовАгента.АгентСубагент Тогда
		Параметр1 = "Агент"; 
		Параметр2 = "Субагент";
	Иначе
        Параметр1 = "Заказчик"; 
        Параметр2 = "Исполнитель";
	КонецЕсли; 
	
	//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)>>>
	//Параметр1Родительный = ПросклонятьФразуПоСловам(Параметр1,"ПД=Родительный");
	//Параметр2Родительный = ПросклонятьФразуПоСловам(Параметр2,"ПД=Родительный");
	Параметр1Родительный = ПросклонятьФразуПоСловам(Параметр1,"ПД=Родительный", ОбъектСклонения);
	Параметр2Родительный = ПросклонятьФразуПоСловам(Параметр2,"ПД=Родительный", ОбъектСклонения);
	//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)<<<
	
    ДанныеДляПечати.Вставить("Параметр1",Параметр1);
    ДанныеДляПечати.Вставить("Параметр2",Параметр2);
    ДанныеДляПечати.Вставить("Параметр1Родительный",Параметр1Родительный);
    ДанныеДляПечати.Вставить("Параметр2Родительный",Параметр2Родительный);

    Отбор = Новый Структура();
    Отбор.Вставить("Контрагент",Контрагент);
    Отбор.Вставить("ТипОплаты",Справочники.ТипыОплат.Наличные);
    Отбор.Вставить("ТипДоставки", Перечисления.ТипыЗаказов.Доставка);
	
	ОрганизацияДоставки	= Контрагент.ОсновнойДоговорКонтрагента.Организация;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаНалоговыйУчетСрезПоследних.ОрганизацияНеЯвляетсяПлательщикомНДС КАК ОрганизацияНеЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&КонДата, Организация = &Организация) КАК УчетнаяПолитикаНалоговыйУчетСрезПоследних";
	
	Запрос.УстановитьПараметр("КонДата", КонДата);
	Запрос.УстановитьПараметр("Организация", ОрганизацияДоставки);

	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	ПоказыватьНДС = Истина;
	Если РезультатЗапроса.Следующий() Тогда
		ПоказыватьНДС = Не РезультатЗапроса.ОрганизацияНеЯвляетсяПлательщикомНДС;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОрганизацияДоставки) Тогда
		Агент = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ОрганизацияДоставки, КонДата),"ПолноеНаименование,ИНН,КПП");
		Организация = ОрганизацияДоставки;
	Иначе
		Организация = Справочники.Организации.ПустаяСсылка();
		Агент = "";	
	КонецЕсли;	
	
    ДанныеДляПечати.Вставить("Организация",Организация);
	ДанныеДляПечати.Вставить("ОрганизацияСтрокой",ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ОрганизацияДоставки, КонДата),"ПолноеНаименование"));
	ДанныеДляПечати.Вставить("ОрганизацияСтрокойПолный",ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ОрганизацияДоставки, КонДата),"ПолноеНаименование,ИНН,КПП"));

    ДанныеДляПечати.Вставить("Агент", Агент);
    
	КонтрагентСтрокой = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование");
	ДанныеДляПечати.Вставить( "КонтрагентСтрокой",КонтрагентСтрокой);
	
	КонтрагентСтрокойПолный = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование,ИНН,КПП");
	ДанныеДляПечати.Вставить( "КонтрагентСтрокойПолный",КонтрагентСтрокойПолный);

	
    Отбор = Новый Структура();
    Отбор.Вставить("СтруктурнаяЕдиница",Организация);
    Отбор.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
    ЗаписьРегистра = РегистрыСведений.ОтветственныеЛицаОрганизации.СрезПоследних(КонДата,Отбор);
    Если ЗаписьРегистра.Количество()>0 Тогда
        РуководительСсылка = ЗаписьРегистра[0].ФизическоеЛицо;
        ФИО = ФормированиеПечатныхФорм.ФамилияИмяОтчество(РуководительСсылка,КонДата);
        ФИОруководителя =  ФИО.Фамилия +" " + ФИО.Имя +" "+ ФИО.Отчество ;
		
		//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)>>>
		//ФИОРуководителяВлице = ПолучитьСклонениеСтроки(ФИОРуководителя, СокрЛП(РуководительСсылка.Пол), "ПД=Родительный");
		ФИОРуководителяВлице = ПолучитьСклонениеСтроки(ФИОРуководителя, СокрЛП(РуководительСсылка.Пол), "ПД=Родительный", ОбъектСклонения);
		//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)<<<

		СоставФИО = СтрРазделить(ФИОРуководителяВлице," ");
		ФИОРуководителяВлице =  СоставФИО[0]+" "+Лев(ФИО.Имя,1)+". "+Лев(ФИО.Отчество,1)+".";
		
		ФИОруководителя =  ФИО.Фамилия+" "+Лев(ФИО.Имя,1)+". "+Лев(ФИО.Отчество,1)+".";
        
        ДолжностьРуководителяОрганизации = ЗаписьРегистра[0].Должность;	
		//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)>>>
		//ДолжностьРуководителяОрганизацииВлице  = ПросклонятьФразуПоСловам(СокрЛП(ДолжностьРуководителяОрганизации.Наименование),"ПД=Родительный");
		ДолжностьРуководителяОрганизацииВлице  = ПросклонятьФразуПоСловам(СокрЛП(ДолжностьРуководителяОрганизации.Наименование),"ПД=Родительный", ОбъектСклонения);
		//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)<<<
    Иначе
       РуководительСсылка = Справочники.ФизическиеЛица.ПустаяСсылка();
       ФИОРуководителя = "";
       ФИОРуководителяВлице = "";
       ДолжностьРуководителяОрганизации = Справочники.ДолжностиОрганизаций.ПустаяСсылка();
       ДолжностьРуководителяОрганизацииВлице = "";
   КонецЕсли;
   
    ДанныеДляПечати.Вставить("Руководитель",РуководительСсылка);
    ДанныеДляПечати.Вставить("ФИОРуководителя",ФИОруководителя);
    ДанныеДляПечати.Вставить("ФИОРуководителяВлице",ФИОРуководителяВлице);
    ДанныеДляПечати.Вставить("ДолжностьРуководителяОрганизации",ДолжностьРуководителяОрганизации);
    ДанныеДляПечати.Вставить("ДолжностьРуководителяОрганизацииВлице",ДолжностьРуководителяОрганизацииВлице);
    
	ДанныеДляПечати.Вставить("АгентскийДоговор",СокрЛП(Контрагент.ОсновнойДоговорКонтрагента.Номер) + " от " + Формат(Контрагент.ОсновнойДоговорКонтрагента.Дата, "ДФ=dd.MM.yyyy")); //Задача № 2724 
	
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |	КонтактныеЛицаКонтрагентов.Наименование КАК ИмяЛица,
                   |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица.Наименование КАК Должность,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Фамилия + "" "" + КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Имя + "" "" + КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Отчество КАК ФИО,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Пол КАК Пол,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Фамилия КАК Фамилия,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Имя КАК Имя,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Отчество КАК Отчество
                   |ИЗ
                   |	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
                   |ГДЕ
                   |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица В(&РолиКонтактныхЛиц)
                   |	И КонтактныеЛицаКонтрагентов.Владелец = &Владелец
                   |	И НЕ КонтактныеЛицаКонтрагентов.ПометкаУдаления";
    РолиКонтактныхЛиц = Новый СписокЗначений;
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Гендиректор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Директор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.ИндивидуальныйПредприниматель);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.КоммерческийДиректор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Менеджер);
	//CeHbKA 08.09.2020
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.НайтиПоНаименованию("Финансовый директор"));	
	//CeHbKA 08.09.2020
	
	ЗамГенДиректора = Справочники.РолиКонтактныхЛиц.НайтиПоКоду("000000008");
	Если Не ЗамГенДиректора.Ссылка.Пустая() Тогда
		
		РолиКонтактныхЛиц.Добавить(ЗамГенДиректора);

	КонецЕсли;
	
    Запрос.УстановитьПараметр("РолиКонтактныхЛиц",РолиКонтактныхЛиц);                   
    Запрос.УстановитьПараметр("Владелец", Контрагент);	
    Выборка = Запрос.Выполнить().Выбрать();
    Работник = "";
    ФизЛицоПол = "";
    Имя  ="";
    Отчество = "";
    ДиректорПринципалаВЛице = "";
    Если Выборка.Следующий() Тогда
        Должность = Выборка.Должность;
		НаименованиеДолжности = СокрЛП(Должность);
		НаименованиеДолжности = ?(НаименованиеДолжности = "ИП","индивидуальный предприниматель",НаименованиеДолжности);
		
		//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)>>>
		//ДолжностьВЛице = ПросклонятьФразуПоСловам(НаименованиеДолжности,"ПД=Родительный");
		ДолжностьВЛице = ПросклонятьФразуПоСловам(НаименованиеДолжности,"ПД=Родительный", ОбъектСклонения);
		//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)<<<
        ФИОПринципала = Выборка.ФИО;
        Пол = Выборка.Пол;
        Работник = Выборка.Фамилия;
        Имя = Выборка.Имя;
        Отчество = Выборка.Отчество;
        ФизЛицоПол = Пол;
    КонецеСли;
    РезультатСклонения = "";
	
	//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)>>>
	//ДиректорПринципалаВЛице = ПолучитьСклонениеСтроки(Работник,СокрЛП(ФизЛицоПол), "ПД=Родительный");
	ДиректорПринципалаВЛице = ПолучитьСклонениеСтроки(Работник,СокрЛП(ФизЛицоПол), "ПД=Родительный", ОбъектСклонения);
	//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)<<<
	
	ДиректорПринципалаВЛице = ДиректорПринципалаВЛице+" "+Лев(Имя,1)+". "+Лев(Отчество,1)+".";
    ДанныеДляПечати.Вставить("Должность",Должность);
    ДанныеДляПечати.Вставить("ДолжностьВлице",ДолжностьВЛице);
    ДанныеДляПечати.Вставить("ДиректорПринципала",Работник+" "+Лев(Имя,1)+". "+Лев(Отчество,1)+".");
    ДанныеДляПечати.Вставить("ДиректорПринципалаВЛице",ДиректорПринципалаВЛице);
	
	ДанныеДляПечати.Вставить("ПоказыватьНДС", ПоказыватьНДС);
    
    Возврат ДанныеДляПечати
    
КонецФункции // СобратьДанныеДляПечати()

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСклонениеСтроки(Слово,Пол = Неопределено, Падеж, ОбъектСклонения = Неопределено)
	Если ОбъектСклонения = Неопределено Тогда
		СклоненияСтроки = ПолучитьСклоненияСтроки(Слово,Пол, Падеж);
		Возврат СклоненияСтроки[0];
	//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)>>>
	//ОбъектСклонения - добавлен параметр в процедуры
	Иначе
		Если ПустаяСтрока(Слово) Тогда
			СловоВПадеже = Слово;
		Иначе
			Попытка
				СловоВПадеже = ОбъектСклонения.Просклонять(Слово, 2);
			Исключение
				СловоВПадеже = Слово;
			КонецПопытки;
			//Сообщить("Склонение: " + Слово + " -> " + СловоВПадеже);
		КонецЕсли;
		Возврат СловоВПадеже;
	КонецЕсли;
	//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)<<<
КонецФункции

Функция ПросклонятьФразуПоСловам(Знач ИсходнаяСтрока, Падеж, ОбъектСклонения = Неопределено) Экспорт

    Результат = "";

    ИсходнаяСтрока = СокрЛП(ИсходнаяСтрока);
    Если СтрДлина(ИсходнаяСтрока) = 0 Тогда
        Возврат Результат;
    КонецЕсли;

    Поз = Найти(ИсходнаяСтрока, " ");
    Пока Поз > 0 Цикл

        СловоВПадеже = "";

        Слово = Лев(ИсходнаяСтрока, Поз-1);
		Если Слово = "директора" Тогда Слово = "директор" КонецЕсли;
		
		//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)>>>
		//СловоВПадеже = ПолучитьСклонениеСтроки(Слово,,Строка(Падеж));
		СловоВПадеже = ПолучитьСклонениеСтроки(Слово,,Строка(Падеж), ОбъектСклонения);
		//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)<<<

        Результат = СокрЛП(Результат + " " + НРег(СловоВПадеже));
        ИсходнаяСтрока = СокрЛП(Сред(ИсходнаяСтрока, Поз));

        Если ПустаяСтрока(ИсходнаяСтрока) Тогда
            Прервать; // Это перестраховка. Цикл и так должен прерваться
        КонецЕсли;

        Поз = Найти(ИсходнаяСтрока, " ");
    КонецЦикла;

	Если НЕ ПустаяСтрока(ИсходнаяСтрока) Тогда // добавляем заключительное слово
		Если ИсходнаяСтрока = "директора" Тогда ИсходнаяСтрока = "директор" КонецЕсли;
		
        СловоВПадеже = "";
		//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)>>>
		//СловоВПадеже = ПолучитьСклонениеСтроки(ИсходнаяСтрока, ,Строка(Падеж));
		СловоВПадеже = ПолучитьСклонениеСтроки(ИсходнаяСтрока, ,Строка(Падеж), ОбъектСклонения);
		//Асеев 05.04.2022 (по письму выгрузка автоматических отчетов)<<<

        Результат = СокрЛП(Результат + " " + НРег(СловоВПадеже));

    КонецЕсли;
    Возврат Результат;

КонецФункции

Функция ПолучитьПараметрыПечатиОтчетаКонтрагента (Контрагент)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ПараметрыПечатиОтчетовАгента.ВариантПечати
    |ИЗ
    |   РегистрСведений.ПараметрыПечатиОтчетовАгента КАК ПараметрыПечатиОтчетовАгента
    |ГДЕ
    |   ПараметрыПечатиОтчетовАгента.Контрагент В (&Контрагент)";
    
    Запрос.УстановитьПараметр("Контрагент", Контрагент);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат ВыборкаДетальныеЗаписи.ВариантПечати;
    Иначе
        Возврат Перечисления.ВариантыПечатиОтчетовАгента.ПринциалАгент;
    КонецЕсли;;
КонецФункции

Функция ФорматНомераПлатежногоДокумента(Знач Номер) Экспорт
	
	Номер = Прав(Номер,6);
	Попытка
		Номер = Число(Номер);
		Возврат Формат(Номер,"ЧГ=");
	Исключение
		Возврат Номер;
	КонецПопытки;
	
КонецФункции

#КонецОбласти

#КонецОбласти
