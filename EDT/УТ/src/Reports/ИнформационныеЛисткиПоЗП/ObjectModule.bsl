Функция Сформировать(НачПер, КонПер, Таб) Экспорт
	Зап = Новый Запрос;
	ДопУсловия = "";
	
	Если Не ТипЭкипажа.Пустая() Тогда
		ДопУсловия = " И РасчетЗарплатыОбороты.ТипЭкипажа = &ТипЭкипажа";
		Зап.УстановитьПараметр("ТипЭкипажа", ТипЭкипажа);
	КонецеСли;	
	
	
	Если Не УчастникЭкипажа.Пустая() Тогда
		ДопУсловия = " И РасчетЗарплатыОбороты.УчастникЭкипажа = &УчастникЭкипажа";
		Зап.УстановитьПараметр("УчастникЭкипажа", УчастникЭкипажа);
	КонецеСли;	
	
	Если Не ФизЛицо.Пустая() Тогда
		ДопУсловия = " И РасчетЗарплатыОбороты.ФизЛицо = &ФизЛицо";
		Зап.УстановитьПараметр("ФизЛицо", ФизЛицо);
	КонецеСли;	
	
	
	
	
	Зап.Текст = "ВЫБРАТЬ
	            |	РасчетЗарплатыОбороты.КатегорияДоставки.Родитель.Ссылка КАК КатегорияДоставки,
	            |	ВЫБОР
	            |		КОГДА РасчетЗарплатыОбороты.ТипДоставки = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
	            |			ТОГДА ВЫБОР
	            |					КОГДА РасчетЗарплатыОбороты.ТипЭкипажа = ЗНАЧЕНИЕ(Перечисление.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный)
	            |							И РасчетЗарплатыОбороты.УчастникЭкипажа = ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Водитель)
	            |						ТОГДА ""В2""
	            |					ИНАЧЕ ВЫБОР
	            |							КОГДА РасчетЗарплатыОбороты.ТипЭкипажа = ЗНАЧЕНИЕ(Перечисление.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный)
	            |									И РасчетЗарплатыОбороты.УчастникЭкипажа = ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Экспедитор)
	            |								ТОГДА ""Э2""
	            |							ИНАЧЕ ВЫБОР
	            |									КОГДА РасчетЗарплатыОбороты.ТипЭкипажа = ЗНАЧЕНИЕ(Перечисление.ТипыТарифовРасчетаЗарплаты.ЭкипажБезЭкспедитора)
	            |											И РасчетЗарплатыОбороты.УчастникЭкипажа = ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Водитель)
	            |										ТОГДА ""В1""
	            |									ИНАЧЕ ВЫБОР
	            |											КОГДА РасчетЗарплатыОбороты.НаёмныйЭкипаж = ИСТИНА
	            |												ТОГДА ""ВСМ""
	            |											ИНАЧЕ ""--""
	            |										КОНЕЦ
	            |								КОНЕЦ
	            |						КОНЕЦ
	            |				КОНЕЦ
	            |		ИНАЧЕ ""--""
	            |	КОНЕЦ КАК КатегорияЭкипажа,
	            |	РасчетЗарплатыОбороты.ФизЛицо КАК ФизЛицо,
	            |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасчетЗарплатыОбороты.Доставка.Ссылка) КАК КоличествоЗаказов,
	            |	РасчетЗарплатыОбороты.Территориальность КАК Территориальность
	            |ИЗ
	            |	РегистрНакопления.РасчетЗарплаты.Обороты(&НачПериода, &КонПериода, , ) КАК РасчетЗарплатыОбороты
	            |ГДЕ
	            |	1 = 1 " + ДопУсловия + "
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	РасчетЗарплатыОбороты.КатегорияДоставки.Родитель.Ссылка,
	            |	РасчетЗарплатыОбороты.ФизЛицо,
	            |	РасчетЗарплатыОбороты.Территориальность,
	            |	ВЫБОР
	            |		КОГДА РасчетЗарплатыОбороты.ТипДоставки = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
	            |			ТОГДА ВЫБОР
	            |					КОГДА РасчетЗарплатыОбороты.ТипЭкипажа = ЗНАЧЕНИЕ(Перечисление.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный)
	            |							И РасчетЗарплатыОбороты.УчастникЭкипажа = ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Водитель)
	            |						ТОГДА ""В2""
	            |					ИНАЧЕ ВЫБОР
	            |							КОГДА РасчетЗарплатыОбороты.ТипЭкипажа = ЗНАЧЕНИЕ(Перечисление.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный)
	            |									И РасчетЗарплатыОбороты.УчастникЭкипажа = ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Экспедитор)
	            |								ТОГДА ""Э2""
	            |							ИНАЧЕ ВЫБОР
	            |									КОГДА РасчетЗарплатыОбороты.ТипЭкипажа = ЗНАЧЕНИЕ(Перечисление.ТипыТарифовРасчетаЗарплаты.ЭкипажБезЭкспедитора)
	            |											И РасчетЗарплатыОбороты.УчастникЭкипажа = ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Водитель)
	            |										ТОГДА ""В1""
	            |									ИНАЧЕ ВЫБОР
	            |											КОГДА РасчетЗарплатыОбороты.НаёмныйЭкипаж = ИСТИНА
	            |												ТОГДА ""ВСМ""
	            |											ИНАЧЕ ""--""
	            |										КОНЕЦ
	            |								КОНЕЦ
	            |						КОНЕЦ
	            |				КОНЕЦ
	            |		ИНАЧЕ ""--""
	            |	КОНЕЦ
	            |
	            |УПОРЯДОЧИТЬ ПО
	            |	РасчетЗарплатыОбороты.ФизЛицо.Наименование
	            |ИТОГИ
	            |	СУММА(КоличествоЗаказов)
	            |ПО
	            |	ФизЛицо,
	            |	КатегорияДоставки,
	            |	Территориальность,
	            |	КатегорияЭкипажа";
				
	Зап.УстановитьПараметр("НачПериода", НачалоДня(НачПер));			
	Зап.УстановитьПараметр("КонПериода", КонецДня(КонПер));			
	
	
	
	ТабТер = Новый ТаблицаЗначений;
	ТабТер.Колонки.добавить("Территориальность");
	Нов = ТабТер.Добавить();
	Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
	Нов = ТабТер.Добавить();
	Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыМКАД;
	
	ТабКат = Новый ТаблицаЗначений;
	ТабКат.Колонки.Добавить("КатегорияДоставки");
	Нов = ТабКат.Добавить();
	Нов.КатегорияДоставки = Справочники.КатегорииДоставки2014.МГТ;
	Нов = ТабКат.Добавить();
	Нов.КатегорияДоставки = Справочники.КатегорииДоставки2014.СГТ;
	Нов = ТабКат.Добавить();
	Нов.КатегорияДоставки = Справочники.КатегорииДоставки2014.КГТ;

	
	Рез = Зап.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	ЗапПр = Новый Запрос;
	ЗапПр.Текст = "ВЫБРАТЬ
	              |	РасчетЗарплатыОбороты.ФизЛицо,
	              |	""Подъем"" КАК Начисление,
	              |	СУММА(РасчетЗарплатыОбороты.ПодъёмОборот) КАК Сумма,
	              |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасчетЗарплатыОбороты.Доставка.Ссылка) КАК Количество
	              |ИЗ
	              |	РегистрНакопления.РасчетЗарплаты.Обороты(&НачДата, &КонДата, , ) КАК РасчетЗарплатыОбороты
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	РасчетЗарплатыОбороты.ФизЛицо
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	РасчетЗарплатыОбороты.ФизЛицо,
	              |	""Забор"",
	              |	СУММА(РасчетЗарплатыОбороты.СуммаОборот),
	              |	0
	              |ИЗ
	              |	РегистрНакопления.РасчетЗарплаты.Обороты(&НачДата, &КонДата, , ) КАК РасчетЗарплатыОбороты
	              |ГДЕ
	              |	РасчетЗарплатыОбороты.ТипДоставки = ЗНАЧЕНИЕ(перечисление.типыЗаказов.Забор)
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	РасчетЗарплатыОбороты.ФизЛицо
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	РасчетЗарплатыОбороты.ФизЛицо,
	              |	""Фрахт"",
	              |	СУММА(РасчетЗарплатыОбороты.СуммаОборот),
	              |	0
	              |ИЗ
	              |	РегистрНакопления.РасчетЗарплаты.Обороты(&НачДата, &КонДата, , ) КАК РасчетЗарплатыОбороты
	              |ГДЕ
	              |	РасчетЗарплатыОбороты.ТипДоставки = ЗНАЧЕНИЕ(перечисление.типыЗаказов.фрахт)
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	РасчетЗарплатыОбороты.ФизЛицо
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	СводПоЗарплатеОбороты.ФизЛицо,
	              |	""Ночные"",
	              |	СводПоЗарплатеОбороты.СуммаОборот,
	              |	0
	              |ИЗ
	              |	РегистрНакопления.СводПоЗарплате.Обороты(&НачДата, &КонДата, , ) КАК СводПоЗарплатеОбороты
	              |ГДЕ
	              |	СводПоЗарплатеОбороты.ТипРасчетаЗарплаты.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетаЗарплаты.НочныеСмены)";
	ЗапПр.УстановитьПараметр("НачДата", НачалоДня(НачПер));			
	ЗапПр.УстановитьПараметр("КонДата", КонецДня(КонПер));		
	
	РезПр = ЗапПр.Выполнить().Выгрузить();
	
	ТабПр = Новый ТаблицаЗначений;
	ТабПр.Колонки.Добавить("Начисление");
	Нов = ТабПр.Добавить();
	Нов.Начисление = "Подъем";
	Нов = ТабПр.Добавить();
	Нов.Начисление = "Забор";
	Нов = ТабПр.Добавить();
	Нов.Начисление = "Фрахт";
	Нов = ТабПр.Добавить();
	Нов.Начисление = "Ночные";
	
	
	
	Мак = ПолучитьМакет("Макет");
	
	Ш = Мак.ПолучитьОбласть("Шапка|ШапкаВерт");
	ШК = Мак.ПолучитьОбласть("Шапка|Категория");
	
	П = Мак.ПолучитьОбласть("Подвал|ШапкаВерт");
	ПК = Мак.ПолучитьОбласть("Подвал|Категория");
	
	С = Мак.ПолучитьОбласть("Строка|ШапкаВерт");
	СК = Мак.ПолучитьОбласть("Строка|Категория");
	
	С2 = Мак.ПолучитьОбласть("Строка2|ШапкаВерт");
	С2К = Мак.ПолучитьОбласть("Строка2|Категория");
	
	С3 = Мак.ПолучитьОбласть("Строка3|ШапкаВерт");
	С3К = Мак.ПолучитьОбласть("Строка3|Категория");
	
	Таб.Очистить();
	
	Для Каждого ТекФ Из Рез.Строки Цикл
		Ш.Параметры.ФизЛицо =  ТекФ.ФизЛицо;
		Таб.Вывести(Ш);
		
		ШК.Параметры.Территориальность = "МКАД";
		ШК.Параметры.ТЭ1 = "В2";
		ШК.Параметры.ТЭ2 = "Э2";
		ШК.Параметры.ТЭ3 = "В1";
		ШК.Параметры.ТЭ4 = "ВСМ";
		ШК.Параметры.Заг = "Информационный листок";
		ШК.Параметры.Период = "";
		
		Если ТипЗнч(ТекФ.ФизЛицо) = Тип("СправочникСсылка.новаВодители") Тогда
			ШК.Параметры.Должность = "водитель";
		ИначеЕсли ТипЗнч(ТекФ.ФизЛицо) = Тип("СправочникСсылка.новаЭкспедиторы") Тогда
			ШК.Параметры.Должность = "экпедитор";
		КонецеСли;	
		
		Таб.Присоединить(ШК);
		
		
		ШК.Параметры.Территориальность = "За МКАД";
		ШК.Параметры.ТЭ1 = "В2";
		ШК.Параметры.ТЭ2 = "Э2";
		ШК.Параметры.ТЭ3 = "В1";
		ШК.Параметры.ТЭ4 = "ВСМ";
		ШК.Параметры.Должность = "";
		ШК.Параметры.Заг = "";
		ШК.Параметры.Период = ПредставлениеПериода(НачалоДня(НачПер), КонецДня(КонПер));
		Таб.Присоединить(ШК);
		
		
		Для Каждого ТекК Из ТабКат Цикл
			НайК = ТекФ.Строки.Найти(ТекК.КатегорияДоставки);
			С.Параметры.Категория = ТекК.КатегорияДоставки;
			Таб.Вывести(С);
			
			Если НайК <> Неопределено Тогда
				Для Каждого ТекТ Из ТабТер Цикл
					СК.Параметры.П1 = 0;
					СК.Параметры.П2 = 0;
					СК.Параметры.П3 = 0;
					СК.Параметры.П4 = 0;
					НайТ = НайК.Строки.Найти(ТекТ.Территориальность);
					Если НайТ <> Неопределено Тогда
						Для Каждого ТекКЭ Из НайТ.Строки Цикл
							Если ТекКЭ.КатегорияЭкипажа = "В2" Тогда
								СК.Параметры.П1 = ТекКЭ.КоличествоЗаказов;
							ИначеЕсли ТекКЭ.КатегорияЭкипажа = "Э2" Тогда	
								СК.Параметры.П2 = ТекКЭ.КоличествоЗаказов;
							ИначеЕсли ТекКЭ.КатегорияЭкипажа = "В1" Тогда	
								СК.Параметры.П3 = ТекКЭ.КоличествоЗаказов;
							ИначеЕсли ТекКЭ.КатегорияЭкипажа = "ВСМ" Тогда	
								СК.Параметры.П4 = ТекКЭ.КоличествоЗаказов;
							КонецЕсли;	
						КонецЦикла;	
					КонецеСли;
					Таб.Присоединить(СК);
				КонецЦикла;	
			Иначе
				Для Каждого ТекТ Из ТабТер Цикл
					СК.Параметры.П1 = 0;
					СК.Параметры.П2 = 0;
					СК.Параметры.П3 = 0;
					СК.Параметры.П4 = 0;
					Таб.Присоединить(СК);
				КонецЦикла;	
			КонецеСли;	
		КонецЦикла;	
		
		Для Каждого ТекПр Из ТабПр  Цикл
			С3.Параметры.Начисление = ТекПр.Начисление;
			Таб.Вывести(С3);
			
			Струк = Новый Структура;
			Струк.Вставить("ФизЛицо", ТекФ.ФизЛицо);
			Струк.Вставить("Начисление", ТекПр.Начисление);
			
			НайСтроки = РезПр.НайтиСтроки(Струк);
			
			Если НайСтроки.Количество() <> 0 Тогда
				С3К.Параметры.П = НайСтроки[0].Количество;
				Таб.Присоединить(С3К);
				С3К.Параметры.П = НайСтроки[0].Сумма;
				Таб.Присоединить(С3К);
			Иначе
				С3К.Параметры.П = 0;
				Таб.Присоединить(С3К);
				Таб.Присоединить(С3К);
			КонецеСли;	
			
		КонецЦикла;
		
		Таб.Вывести(П);
		Для Сч = 1 По 2 Цикл
			Таб.Присоединить(ПК);
		КонецЦикла;	
	КонецЦикла;	
	
	Возврат Истина;
КонецФункции	