Функция СформироватьОтправитьПоПочте(Период, Контрагент, КонтрагеныИсключения) Экспорт
    СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

    //создадим компоновщик настроек и загрузим настройки по умолчанию, вместо настроек по умолчанию можно использовать восстановленные настройки
    КомпоновщикНастроек2 = Новый КомпоновщикНастроекКомпоновкиДанных();
    КомпоновщикНастроек2.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
    КомпоновщикНастроек2.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
    Настройки = КомпоновщикНастроек2.Настройки;
    
     //установка параметров отчета, без КомпоновщикНастроекКомпоновкиДанных делать это гораздо сложнее
    Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Период",         Период);
    
    
    //Добавляем отбор если есть Контрагент в параметрах
    Если Контрагент <> Неопределено Тогда  
        НовыйЭлементОтбора = Настройки.Отбор.Элементы.
        Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
        
        ПолеОтбора = Новый ПолеКомпоновкиДанных("Контрагент");
        
        НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
        НовыйЭлементОтбора.Использование  = Истина;
        НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
        НовыйЭлементОтбора.ПравоеЗначение = Контрагент;
    ИначеЕсли КонтрагеныИсключения <> Неопределено Тогда
        НовыйЭлементОтбора = Настройки.Отбор.Элементы.
        Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
        
        ПолеОтбора = Новый ПолеКомпоновкиДанных("Контрагент");
        
        НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
        НовыйЭлементОтбора.Использование  = Истина;
        НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии;
        НовыйЭлементОтбора.ПравоеЗначение = КонтрагеныИсключения;
    КонецЕсли;

    
    //Помещаем в переменную данные о расшифровке данных - здесь ненужный пункт, но пусть будет.
    ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;

    //Формируем макет, с помощью компоновщика макета
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

    //Передаем в макет компоновки схему, настройки и данные расшифровки
    МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);

    //Выполним компоновку с помощью процессора компоновки
    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);

    //Очищаем поле табличного документа
    Результат = Новый ТабличныйДокумент();
    //Выводим результат в табличный документ
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(Результат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
    ////Проверка на пустоту если не указан контрагент
    //Если Контрагент <> Неопределено Тогда 
    //    Возврат Результат;
    //Иначе
        Если (Результат.ВысотаТаблицы-Результат.ФиксацияСверху)>1 Тогда
            Возврат Результат;
        Иначе
            Возврат Неопределено;
        КонецЕсли;
    //КонецЕсли;
    
КонецФункции	
