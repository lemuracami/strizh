
// Предопределенное свойство. Содержит коллекцию свойств печатной формы.
//
Перем СвойстваПечатнойФормы Экспорт; // <Структура>

Перем КартинкаКарты Экспорт;

Перем КСЛ;

Процедура ПодключитьКСЛ()
	#Если Клиент Тогда
		КСЛ = новаСерверКСЛ.Подключиться(новаКонтекст);
	#Иначе
		КСЛ = новаСерверКСЛ.Подключиться();
	#КонецЕсли
КонецПроцедуры


// Предопределенная функция. Формирует печатную форму в указанном документе.
//
// Параметры:
//  Форма             <Форма>
//  ТабличныйДокумент <ТабличныйДокумент>
//  Заголовок         <Строка>
//
// Возвращаемое значение:
//  <Булево>: Истина, если печатную форму удалось сформировать.
//
Функция ВывестиНаПечать(Об, ТабличныйДокумент, Заголовок) Экспорт
	
	//Заголовок = "";
	
	Макет = ПолучитьМакет("РейсНаКарте");
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	//Шапка.Параметры.Рейс = Владелец;
	//Шапка.Параметры.Водитель = Владелец.Водитель;
	////Шапка.Параметры.Экспедитор = Владелец.Экспедитор;
	//Шапка.Параметры.Выезд = Владелец.ДатаНачала;
	
	ТабличныйДокумент.Вывести(Шапка);
	
	ОбластьКарты = Макет.ПолучитьОбласть("ОбластьКарты");
	
	Если КартинкаКарты = Неопределено Тогда
		
		ПодключитьКСЛ();
		
		ПолеКарты = КСЛ.ГрафическийИнтерфейс_Карты_ПолеКарты();
		ПолеКарты.Анимировать = Ложь;
		
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	новаЗадачаМестнойДоставки.Номер,
		            |	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Широта КАК Широта,
		            |	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Долгота КАК Долгота,
		            |	новаМестнаяДоставка.Дата
		            |ИЗ
		            |	Задача.новаЗадачаМестнойДоставки КАК новаЗадачаМестнойДоставки
		            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
		            |		ПО новаЗадачаМестнойДоставки.БизнесПроцесс.Доставка.Ссылка = новаМестнаяДоставка.Ссылка
		            |ГДЕ
		            |	новаЗадачаМестнойДоставки.Роль = &Этап
		            |	И новаЗадачаМестнойДоставки.ДоставкаЗавершена = ИСТИНА
		            |	И новаЗадачаМестнойДоставки.ДоставкаОтменена = ЛОЖЬ
		            |	И новаЗадачаМестнойДоставки.Дата МЕЖДУ &ДатаНач И &ДатаКон";
		Зап.УстановитьПараметр("ДатаНач", НачалоМесяца(Об.Дата));			
		Зап.УстановитьПараметр("ДатаКон", КонецМесяца(Об.Дата));			
		Зап.УстановитьПараметр("Этап", Справочники.новаЭтапыМестнойДоставки.ЗавершениеМестнойДоставки);
		Рез = Зап.Выполнить().Выгрузить();
		
		//Рейс = Об;
		//РейсНаКарте = КСЛ.Доставка_Карты_ОтображениеРейса();
		//РейсНаКарте.Рейс.Ид = СокрЛП(Рейс.УникальныйИдентификатор());
		//РейсНаКарте.ОтображатьФактическийТрек = Ложь;
		//РейсНаКарте.ОтображатьТекущееПоложениеТранспорта = Ложь;          
		//ПолеКарты.ДобавитьОбъект(РейсНаКарте);
		
		//Для Каждого Тек Из Рез Цикл
		//	Маркер = КСЛ.ГрафическийИнтерфейс_Карты_Маркер();
		//	Маркер.Радиус = 2;
		//	Маркер.Координаты.Широта = Тек.Широта;
		//	Маркер.Координаты.Долгота = Тек.Долгота;
		//	Маркер.Текст = "№ " + СокрЛП(Тек.Номер) + " от " + Формат(Тек.Дата, "ДЛФ=D");
		//	
		//	ПолеКарты.ДобавитьОбъект(Маркер);
		//	//ПолеКарты.ОбновитьОбъект(Маркер);
		//КонецЦикла;
		
		ПолеКарты.УстановитьОптимальныйМасштаб();
		
		ШиринаКартинки = Цел(ОбластьКарты.Рисунки.Карта.Ширина * 96 / 25.4);
		ВысотаКартинки = Цел(ОбластьКарты.Рисунки.Карта.Высота * 96 / 25.4);
		
		Дв = ПолеКарты.ПолучитьКартинкуBase64(ШиринаКартинки, ВысотаКартинки);
		Дв2 = Base64Значение(Дв);
		ОбластьКарты.Рисунки.Карта.Картинка = Новый Картинка(Дв2, Истина);
	Иначе
		ОбластьКарты.Рисунки.Карта.Картинка = КартинкаКарты; 
		ОбластьКарты.Рисунки.Карта.РазмерКартинки = РазмерКартинки.РеальныйРазмер;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьКарты);
		
	Подвал = Макет.ПолучитьОбласть("Подвал");
	ТабличныйДокумент.Вывести(Подвал);
	
	// Зададим параметры макета
	ТабличныйДокумент.ПолеСверху              = 0;
	ТабличныйДокумент.ПолеСлева               = 0;
	ТабличныйДокумент.ПолеСнизу               = 0;
	ТабличныйДокумент.ПолеСправа              = 0;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабличныйДокумент.АвтоМасштаб             = Истина;
	ТабличныйДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ТолькоПросмотр      	  = Истина;
	ТабличныйДокумент.ИмяПараметровПечати 	  = "ПараметрыПечатиМаршрутаРейсаНаКарте_";
	
	Возврат Истина;
КонецФункции

СвойстваПечатнойФормы = Новый Структура("Представление", "Маршрут на карте");