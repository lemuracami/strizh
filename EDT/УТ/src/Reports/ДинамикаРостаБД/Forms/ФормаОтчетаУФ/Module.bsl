
Функция ДатаСозданияСсылки(Тынц) Экспорт
	Возврат ДатаСозданияГУИД(Тынц.УникальныйИдентификатор());
КонецФункции

Функция ДатаСозданияГУИД(ГУИД)
    Строка16 = Сред(ГУИД, 16, 3) + Сред(ГУИД, 10, 4) + Сред(ГУИД, 1, 8);
    ЧислоСек = 0;
    Для Позиция = 1 По СтрДлина(Строка16) Цикл
        ЧислоСек = ЧислоСек + Найти("123456789abcdef", Сред(Строка16, Позиция, 1))*Pow(16, СтрДлина(Строка16) - Позиция);
    КонецЦикла;
    Возврат Дата(1582, 10, 15, 04, 00, 00) + ЧислоСек / 10000000;
КонецФункции

Функция Из_10_В_Любую(Знач Значение=0, Нотация=16)
	Результат = "";
	Если Нотация > 0 Тогда
		Значение = Число(Значение);
		Если Значение <= 0 Тогда
			Результат = "00";
		Иначе
			Значение = Цел(Значение);
			Пока Значение > 0 Цикл
				Результат = Сред("0123456789abcdefghijklmnopqrstuvwxyz", Значение%Нотация + 1, 1) + Результат;
				Значение = Цел(Значение/Нотация);
			КонецЦикла;
			Результат = ?(СтрДлина(Результат)=1, "0" + Результат, Результат);
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
 КонецФункции
 
Функция ПолучитьGUIDизCOMSafeArray(COMSafeArray)
	МассивGuid = COMSafeArray.Выгрузить();
	GUIDСсылки = "";
	Для н=12 по 15 Цикл
		GUIDСсылки = GUIDСсылки + Из_10_В_Любую(МассивGuid[н]);
	КонецЦикла;
	GUIDСсылки = GUIDСсылки + "-";
	Для н=10 по 11 Цикл
		GUIDСсылки = GUIDСсылки + Из_10_В_Любую(МассивGuid[н]);
	КонецЦикла;
	GUIDСсылки = GUIDСсылки + "-";
	Для н=8 по 9 Цикл
		GUIDСсылки = GUIDСсылки + Из_10_В_Любую(МассивGuid[н]);
	КонецЦикла;
	GUIDСсылки = GUIDСсылки + "-";
	Для н=0 по 1 Цикл
		GUIDСсылки = GUIDСсылки + Из_10_В_Любую(МассивGuid[н]);
	КонецЦикла;
	GUIDСсылки = GUIDСсылки + "-";
	Для н=2 по 7 Цикл
		GUIDСсылки = GUIDСсылки + Из_10_В_Любую(МассивGuid[н]);
	КонецЦикла;
	Возврат Новый УникальныйИдентификатор(GUIDСсылки);
КонецФункции

Процедура ТаблицыХраненияСортировать(ТаблицыХранения)
	ТаблицыХранения.Колонки.Добавить("Порядок");
	Для Каждого тСтрока Из ТаблицыХранения Цикл
		тСтрока.Порядок = ?(ПустаяСтрока(тСтрока.ИмяТаблицы), "яя", тСтрока.ИмяТаблицы) + тСтрока.ИмяТаблицыХранения;
	КонецЦикла;
	ТаблицыХранения.Сортировать("Порядок");
КонецПроцедуры

Функция ПолучитьКоличествоЗаписей(Знач тСтрока, Соединение)
	Колво = 0;
	Если Отчет.ФлагАДО Тогда
		Выборка = Запросить("SELECT COUNT(1) сounter FROM dbo." + тСтрока.ИмяТаблицыХранения, Соединение);
		Если Выборка <> Неопределено И Не Выборка.EOF Тогда
			Колво = Выборка.Fields.Item(0).Value;
		КонецЕсли;
	ИначеЕсли тСтрока.Тип < 18 И Не ПустаяСтрока(тСтрока.ИмяТаблицы) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
								|	КОЛИЧЕСТВО(0) КАК Количество
								|ИЗ
								|	" + тСтрока.ИмяТаблицы + " КАК Таблица");
		Попытка
			Выборка	= Запрос.Выполнить().Выбрать();
			Колво	= ?(Выборка.Следующий(), Выборка.Количество, 0);
		Исключение
			Сообщить("Проблема с определением количества записей: " + тСтрока.ИмяТаблицы);
		КонецПопытки;
	КонецЕсли;
	Возврат Колво;
КонецФункции

&НаКлиенте
Процедура ГрафОбновить()
	Если мФлагАДО = Отчет.ФлагАДО И Отчет.ДанныеБД.Количество() > 0 Тогда
		Отчет.ДанныеБД.Сортировать("ММ,ГГГГММ");
		
		График.Обновление				= Ложь;
		График.АвтоТранспонирование		= Ложь;
		График.Очистить();
		Для Каждого текСтрока Из Отчет.ДанныеБД Цикл
			Серия = График.УстановитьСерию(Формат(Цел(текСтрока.ГГГГММ), "ЧГ=0"));
			Точка = График.УстановитьТочку(Формат(Дата(2000, текСтрока.ММ, 1), "ДФ=MMMM"));
			График.УстановитьЗначение(Точка, Серия, ?(Отчет.ФлагКоличество, ?(Отчет.ФлагВМегабайтах, Окр(текСтрока.Количество * 0.001, 1), текСтрока.Количество), ?(Отчет.ФлагВМегабайтах, Окр(текСтрока.РазмерЗаписи * 0.000001, 1), текСтрока.РазмерЗаписи)));
		КонецЦикла;
		График.Обновление				= Истина;
		График.АвтоТранспонирование		= Истина;
		График.ВидПодписей				= ?(График.КоличествоСерий > 7, ВидПодписейКДиаграмме.Нет, ВидПодписейКДиаграмме.Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда=Неопределено)
	ДанныеБДЗаполнить();
	Если Отчет.ДанныеБД.Количество() > 1 Тогда
		Отчет.ДанныеБД.Сортировать("ГГГГММ");
		Пока Отчет.ДанныеБД.Количество() > 1 И Отчет.ДанныеБД[Отчет.ДанныеБД.Количество() - 1].ГГГГММ > Год(ТекущаяДата()) + 1 Цикл
			Отчет.ДанныеБД.Удалить(Отчет.ДанныеБД.Количество() - 1);
		КонецЦикла;
		Год = Цел(Отчет.ДанныеБД[Отчет.ДанныеБД.Количество() - 1].ГГГГММ);
		Лишнее = Новый Соответствие;
		Для Каждого ТекСтрока Из Отчет.ДанныеБД Цикл
			Если ТекСтрока.ГГГГММ > Год Тогда
				Прервать;
			ИначеЕсли Лишнее[Цел(ТекСтрока.ГГГГММ)] = Неопределено Тогда
				Для ММ = 1 По 12 Цикл
					Если Отчет.ДанныеБД.НайтиСтроки(Новый Структура("ГГГГММ", Цел(ТекСтрока.ГГГГММ) + ММ * 0.01)).Количество() = 0 Тогда
						Если Лишнее[Цел(ТекСтрока.ГГГГММ)] = Неопределено Тогда
							Лишнее.Вставить(Цел(ТекСтрока.ГГГГММ), Истина);
						КонецЕсли;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		Пока Отчет.ДанныеБД.Количество() > 1 И Лишнее[Цел(Отчет.ДанныеБД[0].ГГГГММ)] <> Неопределено Цикл
			Отчет.ДанныеБД.Удалить(0);
		КонецЦикла;
	КонецЕсли;
	ГрафОбновить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ПустаяСтрока(ТекСтраница) Тогда
		Отчет.ФлагКоличество = Истина;
	Иначе
		Попытка
			Элементы.Панель.ТекущаяСтраница = Элементы.Найти(ТекСтраница);
		Исключение
		КонецПопытки;
	КонецЕсли;
	Элементы.ADODBProvider.СписокВыбора.Добавить("SQLOLEDB.1");
	Элементы.ADODBProvider.СписокВыбора.Добавить("PostgreSQL.1");
	Элементы.ADODBProvider.СписокВыбора.Добавить("IBMDADB2");
	СформироватьОтчет();
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму()
	Элементы.ФлагВМегабайтах.Заголовок = ?(Отчет.ФлагКоличество, "в тысячах", "в мегабайтах");
	Элементы.ГруппаДоступ.Доступность = (Не ПустаяСтрока(мБаза));
КонецПроцедуры

&НаКлиенте
Процедура ФлагКоличествоПриИзменении(Элемент)
	ГрафОбновить();
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ФлагВМегабайтахПриИзменении(Элемент)
	ГрафОбновить();
КонецПроцедуры

&НаКлиенте
Процедура СсылкаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Отчет.Ссылка) Тогда
		Сообщить(Строка(Отчет.Ссылка) + " " + Формат(ДатаСозданияСсылки(Отчет.Ссылка), "ДЛФ=DT"));
		Если Элемент.СписокВыбора.НайтиПоЗначению(Отчет.Ссылка) = Неопределено Тогда
			Элемент.СписокВыбора.Вставить(0, Отчет.Ссылка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ТекСтраница = ТекущаяСтраница.Имя;
КонецПроцедуры

Процедура Инициализация(Соединение)
	ТекДата = ТекущаяДата();
	Если мФлагАДО <> Отчет.ФлагАДО Тогда
		СтрПодключения = РазложитьСтрокуВМассивПодстрок(НРег(СтрокаСоединенияИнформационнойБазы()));
		мСервер = ВыделитьПараметр(СтрПодключения, "srvr");
		Если Не ПустаяСтрока(мСервер) Тогда
			мБаза = ВыделитьПараметр(СтрПодключения, "ref");
		КонецЕсли;
		Если Отчет.ФлагАДО И ПустаяСтрока(мСервер) Или ПустаяСтрока(мБаза) Тогда
			Отчет.ФлагАДО = Ложь;
		КонецЕсли;

		мФлагАДО = Отчет.ФлагАДО;
		ТаблицыХранения = ПолучитьСтруктуруХраненияБазыДанных(, Истина);
		ТаблицыХраненияСортировать(ТаблицыХранения);
		Отчет.ТаблицыБД.Очистить();
		Для Каждого тСтрока Из ТаблицыХранения Цикл
			текСтрока = Отчет.ТаблицыБД.Добавить();
			ЗаполнитьЗначенияСвойств(текСтрока, тСтрока);
			Если ПустаяСтрока(текСтрока.ИмяТаблицы) Тогда
				текСтрока.ИмяТаблицы = тСтрока.Метаданные;
			КонецЕсли;
			
			Если Прав(тСтрока.ИмяТаблицы, 10) = ".Изменения" Тогда
				текСтрока.Тип = -117;
			ИначеЕсли Лев(тСтрока.Назначение, 4) = "Иниц" И НЕ Отчет.ФлагТехно Тогда
				Продолжить;
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 3) = "Док" Тогда
				текСтрока.Тип	= ?(СтрЧислоВхождений(тСтрока.ИмяТаблицы, ".") = 1, 1, 2);
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 3) = "Спр" Тогда
				текСтрока.Тип	= ?(тСтрока.Назначение="Основная", 15, -115);
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 10) = "РегистрНак" Тогда
				текСтрока.Тип	= 7;
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 10) = "РегистрБух" Тогда
				текСтрока.Тип	= 8;
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 10) = "РегистрСве" Тогда
				Если СтрЧислоВхождений(тСтрока.ИмяТаблицы, ".")=1 Тогда
					текСтрока.Тип	= ?(Метаданные.РегистрыСведений[Сред(тСтрока.ИмяТаблицы, Найти(тСтрока.ИмяТаблицы, ".")+1)].ПериодичностьРегистраСведений=Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический, -111, 11);
				КонецЕсли;
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 10) = "РегистрРас" Тогда
				текСтрока.Тип	= ?(СтрЧислоВхождений(тСтрока.ИмяТаблицы, ".") = 1, 9, -109);
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 3) = "Зад" Тогда
				текСтрока.Тип	= ?(СтрЧислоВхождений(тСтрока.ИмяТаблицы, ".") = 1, 3, 4);
			//ИначеЕсли Лев(тСтрока.Назначение, 6) = "ТочкаМ" Тогда
			//	текСтрока.Тип	= -36;
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 3) = "Биз" Тогда
				текСтрока.Тип	= ?(СтрЧислоВхождений(текСтрока.ИмяТаблицы, ".") = 1, 6, -36);
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 3) = "Жур" Тогда
				текСтрока.Тип	= 5;
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 3) = "Пос" Тогда
				текСтрока.Тип	= 17;
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 10) = "ПланСчетов" Тогда
				текСтрока.Тип	= ?(тСтрока.Назначение = "Основная", 22, -122);
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 10) = "ПланВидовХ" Тогда
				текСтрока.Тип	= ?(тСтрока.Назначение = "Основная", 23, -123);
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 10) = "ПланВидовР" Тогда
				текСтрока.Тип	= ?(тСтрока.Назначение = "Основная", 24, -124);
			ИначеЕсли Лев(тСтрока.ИмяТаблицы, 10) = "ПланОбмена." Тогда
				текСтрока.Тип	= ?(тСтрока.Назначение = "Основная", 25, -125);
				
			ИначеЕсли Отчет.ФлагАДО Тогда
				Если тСтрока.Назначение = "ГраницыПоследовательности" Тогда
					текСтрока.Тип = -18;
				ИначеЕсли тСтрока.Назначение = "РегистрацияИзменений" Тогда
					текСтрока.Тип	= -117;
				ИначеЕсли тСтрока.Поля.Найти("_Period", "ИмяПоляХранения") <> Неопределено Тогда
					текСтрока.Тип = ?(тСтрока.Назначение = "РегистрацияИзменений", -117, 18);
				ИначеЕсли тСтрока.Поля.Найти("_NodeRRef", "ИмяПоляХранения") <> Неопределено Тогда
					текСтрока.Тип = 19;
				ИначеЕсли тСтрока.Назначение = "ИсторияРаботыПользователей" Тогда
					текСтрока.Тип = 119;
				КонецЕсли;
			КонецЕсли;
			
			Если текСтрока.Тип = 0 Тогда
				Если НЕ Отчет.ФлагТехно Тогда
					Продолжить;
				ИначеЕсли Отчет.ФлагАДО Тогда
					текСтрока.РазмерЗаписи = ПолучитьРазмерТаблицы(тСтрока, Соединение);
				КонецЕсли;
			ИначеЕсли Лев(тСтрока.Назначение, 20) = "РегистрацияИзменений" И НЕ Отчет.ФлагТехно Тогда
				текСтрока.Тип = 0;
				Продолжить;
			Иначе
				Если Отчет.ФлагАДО Тогда
					текСтрока.РазмерЗаписи = ПолучитьРазмерТаблицы(тСтрока, Соединение);
				КонецЕсли;
				Если ?(Отчет.ФлагАДО, текСтрока.Тип <> 0 И текСтрока.Тип > -100, текСтрока.Тип > 0) Тогда
					Если НЕ Отчет.ФлагАДО Тогда
						Для Каждого СтрокаПоляХранения Из тСтрока.Поля Цикл
							Размер = ПолучитьРазмерПоля(тСтрока, СтрокаПоляХранения);
							Если Размер > 0 Тогда
								текСтрока.РазмерЗаписи = текСтрока.РазмерЗаписи + Размер;
								текСтрока.РазмерЗаписи = текСтрока.РазмерЗаписи + ПолучитьРазмерИндекса(тСтрока, СтрокаПоляХранения.ИмяПоляХранения, Размер);
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			текСтрока.КоличествоЗаписей = ПолучитьКоличествоЗаписей(текСтрока, Соединение);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция ТипРегистраСведений(ИмяТаблицы)
	Возврат ?(СтрЧислоВхождений(ИмяТаблицы, ".")=1, ?(Метаданные.РегистрыСведений[Сред(ИмяТаблицы, Найти(ИмяТаблицы, ".")+1)].ПериодичностьРегистраСведений=Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический, -111, 11), 0);
КонецФункции

Функция ВыполнитьЗапрос(текСтрока)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата",	ТекДата);
	Если текСтрока.Тип=2 Или текСтрока.Тип=4 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ГОД(Регистр54321.Ссылка.Дата) + МЕСЯЦ(Регистр54321.Ссылка.Дата) * 0.01 КАК ГГГГММ,
		               |	КОЛИЧЕСТВО(1) КАК Количество
		               |ИЗ
		               |	" + текСтрока.ИмяТаблицы + " КАК Регистр54321
		               |ГДЕ
		               |	ГОД(Регистр54321.Ссылка.Дата) > 2000 И Регистр54321.Ссылка.Дата < &Дата
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ГОД(Регистр54321.Ссылка.Дата) + МЕСЯЦ(Регистр54321.Ссылка.Дата) * 0.01
		               |
		               |ИМЕЮЩИЕ
		               |	КОЛИЧЕСТВО(1) > 0";
	ИначеЕсли текСтрока.Тип <= 6 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ГОД(Регистр54321.Дата) + МЕСЯЦ(Регистр54321.Дата) * 0.01 КАК ГГГГММ,
		               |	КОЛИЧЕСТВО(1) КАК Количество
		               |ИЗ
		               |	" + текСтрока.ИмяТаблицы + " КАК Регистр54321
		               |ГДЕ
		               |	ГОД(Регистр54321.Дата) > 2000 И Регистр54321.Дата < &Дата
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ГОД(Регистр54321.Дата) + МЕСЯЦ(Регистр54321.Дата) * 0.01
		               |
		               |ИМЕЮЩИЕ
		               |	КОЛИЧЕСТВО(1) > 0";
	ИначеЕсли текСтрока.Тип = 9 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ГОД(Регистр54321.ПериодРегистрации) + МЕСЯЦ(Регистр54321.ПериодРегистрации) * 0.01 КАК ГГГГММ,
		               |	КОЛИЧЕСТВО(1) КАК Количество
		               |ИЗ
		               |	" + текСтрока.ИмяТаблицы + " КАК Регистр54321
		               |ГДЕ
		               |	ГОД(Регистр54321.ПериодРегистрации) > 2000 И Регистр54321.ПериодРегистрации < &Дата
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ГОД(Регистр54321.ПериодРегистрации) + МЕСЯЦ(Регистр54321.ПериодРегистрации) * 0.01
		               |
		               |ИМЕЮЩИЕ
		               |	КОЛИЧЕСТВО(1) > 0";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	ГОД(Регистр54321.Период) + МЕСЯЦ(Регистр54321.Период) * 0.01 КАК ГГГГММ,
		               |	КОЛИЧЕСТВО(1) КАК Количество
		               |ИЗ
		               |	" + текСтрока.ИмяТаблицы + " КАК Регистр54321
		               |ГДЕ
		               |	ГОД(Регистр54321.Период) > 2000 И Регистр54321.Период < &Дата
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ГОД(Регистр54321.Период) + МЕСЯЦ(Регистр54321.Период) * 0.01
		               |
		               |ИМЕЮЩИЕ
		               |	КОЛИЧЕСТВО(1) > 0";
	КонецЕсли;
	Выборка = Неопределено;
	Попытка
		Выборка = Запрос.Выполнить().Выбрать();
	Исключение
		Сообщить(текСтрока.ИмяТаблицы + ": " + ОписаниеОшибки());		// чойта не то
	КонецПопытки;
	Возврат Выборка;
КонецФункции

Процедура ДанныеБДЗаполнить()
	Соединение = Неопределено;
	Инициализация(Соединение);
	
	Отчет.ДанныеБД.Очистить();
	Для Каждого текСтрока Из Отчет.ТаблицыБД Цикл
		Если текСтрока.РазмерЗаписи < 1 Тогда
			//Продолжить;
		ИначеЕсли текСтрока.Тип = 0 Тогда
			//Продолжить;
		ИначеЕсли текСтрока.Тип < -100 Тогда
			//Продолжить;
		ИначеЕсли Отчет.ФлагАДО И (текСтрока.Тип=19 Или текСтрока.Тип=15) Тогда
			Если текСтрока.Тип=15 И Отчет.ФлагСправочники Тогда
				ТекстЗапроса = "SELECT _IDRRef RRef FROM dbo." + текСтрока.ИмяТаблицыХранения;
			ИначеЕсли текСтрока.Тип=19 Тогда
				ТекстЗапроса = "SELECT _NodeRRef RRef FROM dbo." + текСтрока.ИмяТаблицыХранения;
			Иначе
				Продолжить;
			КонецЕсли;
			Выборка = Запросить(ТекстЗапроса, Соединение);
			Пока Выборка <> Неопределено И Не Выборка.EOF Цикл
				ДатаСоздания = ДатаСозданияГУИД(ПолучитьGUIDизCOMSafeArray(Выборка.Fields(0).Value));
				Если Год(ДатаСоздания) > 2000 И ДатаСоздания < ТекДата Тогда
					тСтрока = ДанныеБДЗаписать(текСтрока.РазмерЗаписи, Год(ДатаСоздания) + Месяц(ДатаСоздания) * 0.01);
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
			
		ИначеЕсли Отчет.ФлагАДО И текСтрока.Тип < 19 Тогда
			ТекстЗапроса = "SELECT YEAR(_Period)-2000 + MONTH(_Period)*0.01 yyyymm, COUNT(1) сounter FROM dbo." + текСтрока.ИмяТаблицыХранения + " WHERE YEAR(_Period) > 2000 AND _Period <= '" + Формат(Год(ТекДата)+2000, "ЧГ=0") + Формат(ТекДата, "ДФ=MMdd") + "' GROUP BY YEAR(_Period)-2000 + MONTH(_Period)*0.01 HAVING COUNT(1) > 0 ORDER BY yyyymm";
			Если текСтрока.Тип = 2 Или текСтрока.Тип = 4 Тогда
				мСтроки = Отчет.ТаблицыБД.НайтиСтроки(Новый Структура("ИмяТаблицы,Тип", Лев(текСтрока.ИмяТаблицы, СтрНайти(текСтрока.ИмяТаблицы, ".", , , 2) - 1), ?(текСтрока.Тип = 2, 1, 3)));
				Если мСтроки.Количество() > 0 Тогда
					ТекстЗапроса = "SELECT YEAR(aa._Date_Time)-2000 + MONTH(aa._Date_Time)*0.01 yyyymm, COUNT(1) сounter FROM dbo." + текСтрока.ИмяТаблицыХранения + " bb INNER JOIN dbo." + мСтроки[0].ИмяТаблицыХранения + " aa ON bb." + мСтроки[0].ИмяТаблицыХранения + "_IDRRef=aa._IDRRef WHERE YEAR(aa._Date_Time) > 2000 AND aa._Date_Time <= '" + Формат(Год(ТекДата)+2000, "ЧГ=0") + Формат(ТекДата, "ДФ=MMdd") + "' GROUP BY YEAR(aa._Date_Time)-2000 + MONTH(aa._Date_Time)*0.01 HAVING COUNT(1) > 0 ORDER BY yyyymm";
				КонецЕсли;
			ИначеЕсли текСтрока.Тип = -36 Тогда
				мСтроки = Отчет.ТаблицыБД.НайтиСтроки(Новый Структура("ИмяТаблицы,Тип", Лев(текСтрока.ИмяТаблицы, СтрДлина(текСтрока.ИмяТаблицы) - 6), 6));
				Если мСтроки.Количество() > 0 Тогда
					ТекстЗапроса = "SELECT YEAR(aa._Date_Time)-2000 + MONTH(aa._Date_Time)*0.01 yyyymm, COUNT(1) сounter FROM dbo." + текСтрока.ИмяТаблицыХранения + " bb INNER JOIN dbo." + мСтроки[0].ИмяТаблицыХранения + " aa ON bb._IDRRef=aa._IDRRef WHERE YEAR(aa._Date_Time) > 2000 AND aa._Date_Time <= '" + Формат(Год(ТекДата)+2000, "ЧГ=0") + Формат(ТекДата, "ДФ=MMdd") + "' GROUP BY YEAR(aa._Date_Time)-2000 + MONTH(aa._Date_Time)*0.01 HAVING COUNT(1) > 0 ORDER BY yyyymm";
				КонецЕсли;
			ИначеЕсли текСтрока.Тип=-117 Тогда
				Если Не Отчет.ФлагТехно Тогда
					Продолжить;
				КонецЕсли;
			ИначеЕсли текСтрока.Тип=-18 Тогда
			ИначеЕсли текСтрока.Тип=119 Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "_Period", "_Date");
			ИначеЕсли текСтрока.Тип <=6 Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "_Period", "_Date_Time");
			КонецЕсли;
			Выборка = Запросить(ТекстЗапроса, Соединение);
			Пока Выборка <> Неопределено И Не Выборка.EOF Цикл
				тСтрока = ДанныеБДЗаписать(текСтрока.РазмерЗаписи, Выборка.Fields.Item(0).Value, Выборка.Fields.Item(1).Value, текСтрока.Тип <> 11);
				Выборка.MoveNext();
			КонецЦикла;
			
		ИначеЕсли текСтрока.Тип = 15 Тогда
			Если Отчет.ФлагСправочники Тогда
				Выборка = Справочники[(Сред(текСтрока.ИмяТаблицы, Найти(текСтрока.ИмяТаблицы, ".") + 1))].Выбрать();
				Пока Выборка.Следующий() Цикл
					ДатаСоздания = ДатаСозданияСсылки(Выборка.Ссылка);
					Если Год(ДатаСоздания) > 2000 И ДатаСоздания < ТекДата Тогда
						тСтрока = ДанныеБДЗаписать(текСтрока.РазмерЗаписи, Год(ДатаСоздания) + Месяц(ДатаСоздания) * 0.01);
						Если тСтрока <> Неопределено Тогда
							Для Каждого тТЧ Из Выборка.Ссылка.Метаданные().ТабличныеЧасти Цикл
								мСтроки = Отчет.ТаблицыБД.НайтиСтроки(текСтрока.ИмяТаблицы + "." + тТЧ.Имя, "ИмяТаблицы");
								Для Каждого тЭлемент Из мСтроки Цикл
									тСтрока.РазмерЗаписи = тСтрока.РазмерЗаписи + тЭлемент.РазмерЗаписи * Выборка[тТЧ.Имя].Количество();
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли текСтрока.Тип < 19 И СтрЧислоВхождений(текСтрока.ИмяТаблицы, ".") = 1 Тогда
			Выборка = ВыполнитьЗапрос(текСтрока);
			Если Выборка <> Неопределено Тогда
				Пока Выборка.Следующий() Цикл
					тСтрока = ДанныеБДЗаписать(текСтрока.РазмерЗаписи, Выборка.ГГГГММ, Выборка.Количество, текСтрока.Тип <> 11);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ДанныеБДЗаписать(Знач РазмерЗаписи, Знач ГГГГмм, Знач Количество=1, Знач ДобавлятьПринудительно=Ложь)
	тСтрока = Неопределено;
	мСтроки = Отчет.ДанныеБД.НайтиСтроки(Новый Структура("ГГГГММ", ГГГГмм));
	Если мСтроки.Количество() > 0 Тогда
		тСтрока = мСтроки[0];
	КонецЕсли;
	Если тСтрока = Неопределено И ДобавлятьПринудительно Тогда
		тСтрока			= Отчет.ДанныеБД.Добавить();
		тСтрока.ГГГГММ	= ГГГГмм;
		тСтрока.ММ		= (ГГГГмм - Цел(ГГГГмм)) * 100;
	КонецЕсли;
	Если тСтрока <> Неопределено Тогда
		тСтрока.Количество	= тСтрока.Количество + Количество;
		тСтрока.РазмерЗаписи= тСтрока.РазмерЗаписи + Количество*РазмерЗаписи;
	КонецЕсли;
	Возврат тСтрока;
КонецФункции

Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Разделитель = ";") Экспорт
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Строка = СокрЛП(Строка);
		Пока Истина Цикл
			Поз = Найти(Строка, Разделитель);
			Если Поз = 0 Тогда
				МассивСтрок.Добавить(Строка);
				Прервать;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Строка, Поз - 1));
			Строка = СокрЛ(Сред(Строка, Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока Истина Цикл
			Поз = Найти(Строка, Разделитель);
			Если Поз = 0 Тогда
				МассивСтрок.Добавить(Строка);
				Прервать;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Строка, Поз - 1));
			Строка = Сред(Строка, Поз + ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	Возврат МассивСтрок;
КонецФункции

Функция ВыделитьПараметр(МассивСтрок, Знач ПодстрокаПоиска)
	Ответ = "";
	Для Каждого тЭлемент Из МассивСтрок Цикл
		Строка = СтрЗаменить(СтрЗаменить(СтрЗаменить(тЭлемент, " ", ""), "=", ""), """", "");
		Если НРег(Лев(Строка, СтрДлина(ПодстрокаПоиска))) = НРег(ПодстрокаПоиска) Тогда
			Ответ = Сред(Строка, СтрДлина(ПодстрокаПоиска) + 1);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Ответ;
КонецФункции

Функция СоединениеПолучить()
	Соединение = Неопределено;
	Если Отчет.ФлагАДО Тогда
		СтрПодключения = РазложитьСтрокуВМассивПодстрок(НРег(СтрокаСоединенияИнформационнойБазы()));
		мСервер = ВыделитьПараметр(СтрПодключения, "srvr");
		Если Не ПустаяСтрока(мСервер) Тогда
			мБаза = ВыделитьПараметр(СтрПодключения, "ref");
		КонецЕсли;
		Если Отчет.ФлагАДО И ПустаяСтрока(мСервер) Или ПустаяСтрока(мБаза) Тогда
			Отчет.ФлагАДО = Ложь;
		КонецЕсли;
	КонецЕсли;
	Если Отчет.ФлагАДО Тогда
		СтрПодключения = "Provider=" + ?(ПустаяСтрока(Отчет.ADODBProvider), "SQLOLEDB.1", Отчет.ADODBProvider) + ";server=" + мСервер + ";database=" + мБаза;
		Если НЕ ПустаяСтрока(Отчет.Пользователь) Тогда
			СтрПодключения = СтрПодключения + ";uid=" + Отчет.Пользователь + ";pwd=" + Отчет.Пароль;
		КонецЕсли;
	    Соединение = Новый COMОбъект("ADODB.Connection");
	    Соединение.ConnectionString = СтрПодключения;
		//Соединение.CommandTimeout = 600;
		Попытка
			Соединение.Open();
		Исключение
			Сообщить(ОписаниеОшибки());
			Соединение	= Неопределено;
			Отчет.ФлагАДО		= Ложь;
		КонецПопытки;
	КонецЕсли;
	Возврат Соединение;
КонецФункции

Функция Запросить(Знач ТекстЗапроса, Соединение)
	Выборка = Неопределено;
	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
		Если Соединение = Неопределено Тогда
			Соединение = СоединениеПолучить();
		КонецЕсли;
		Если Соединение = Неопределено Тогда
			Отчет.ФлагАДО = Ложь;
		Иначе
			Запрос = Новый COMОбъект("ADODB.Command");
			Запрос.ActiveConnection = Соединение;
			Попытка
				Запрос.CommandText = ТекстЗапроса;
				Выборка = Новый COMОбъект("ADODB.Recordset");
				Выборка.ActiveConnection = Соединение;
				Выборка.Open(Запрос.Execute(ТекстЗапроса));
			Исключение
				Выборка = Неопределено;
				Сообщить(ОписаниеОшибки() + "	" + ТекстЗапроса);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	Возврат Выборка;
КонецФункции

&НаСервере
Функция ПолучитьРазмерИндекса(СтрокаТаблХранения, ИмяПоляХранения, РазмерПоля)
	Размер = 0;
	Для Каждого тИндекс Из СтрокаТаблХранения.Индексы Цикл
		Если тИндекс.Поля.Найти(ИмяПоляХранения, "ИмяПоляХранения") <> Неопределено Тогда
			Размер = Размер + РазмерПоля;
		КонецЕсли;
	КонецЦикла;
	Возврат Размер;
КонецФункции

&НаСервере
Функция ПолучитьРазмерТаблицы(СтрокаТаблХранения, Соединение)
	Размер = 0;
	Выборка = Запросить("SELECT * FROM " + СтрокаТаблХранения.ИмяТаблицыХранения + " WHERE 0=1", Соединение);
	Если Выборка <> Неопределено Тогда
		Для Каждого ТекПоле Из Выборка.Fields Цикл
			Если ТекПоле.DefinedSize > 1000 Тогда
				Размер = Размер + ТекПоле.NumericScale;
			Иначе
				Размер = Размер + ТекПоле.DefinedSize;
				Размер = Размер + ПолучитьРазмерИндекса(СтрокаТаблХранения, ТекПоле.Name, ТекПоле.DefinedSize);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат Размер;
КонецФункции

&НаСервере
Функция Предугадать(Знач ИмяПоляХранения)
	Размер = 0;
	Если Прав(ИмяПоляХранения, 4) = "RRef" Тогда	// Ссылка
		Размер = 16;
	ИначеЕсли Прав(ИмяПоляХранения, 4) = "TRef" Тогда	// Тип ссылки
		Размер = 4;
	ИначеЕсли Прав(ИмяПоляХранения, 5) = "_TYPE" 		// 
		Или Прав(ИмяПоляХранения, 2) = "_L" Тогда		// 
		Размер = 1;
	ИначеЕсли ИмяПоляХранения = "_Marked" Тогда	// Пометка удаления
		Размер = 1;
	ИначеЕсли ИмяПоляХранения = "_Version" Тогда	// Версия данных
		Размер = 8;
	ИначеЕсли ИмяПоляХранения = "_IsMetadata"
		Или ИмяПоляХранения = "_PredefinedObj"
		Или ИмяПоляХранения = "_PredefinedBaseCKTableLine"
		Или ИмяПоляХранения = "_PredefinedLeadingCKTableLine"	// Предопреленный
		Или ИмяПоляХранения = "_DimIsMetadata" 					// Предопределенное
		Или ИмяПоляХранения = "_Predefined" Тогда	// 
		Размер = 1;
	ИначеЕсли Лев(ИмяПоляХранения, 7) = "_LineNo" Тогда	// НомерСтроки 5 9
		Размер = 5;
	ИначеЕсли ИмяПоляХранения = "_KeyField" Тогда	// 
		Размер = 4;
	ИначеЕсли ИмяПоляХранения = "_Period" 			// Период=Дата
		Или ИмяПоляХранения = "_Date_Time" 			// Дата
		Или ИмяПоляХранения = "_NumberPrefix" 		// ДатаВремя
		Или ИмяПоляХранения = "_MinPeriod"
		Или ИмяПоляХранения = "_StartTime"
		Или ИмяПоляХранения = "_FinishTime"
		Или ИмяПоляХранения = "_Date"
		Или Прав(ИмяПоляХранения, 2) = "_T" Тогда	// 
		Размер = 8;
	ИначеЕсли ИмяПоляХранения = "_Folder" Тогда	// ЭтоГруппа
		Размер = 1;
	ИначеЕсли ИмяПоляХранения = "_Active" 				// Активность
		Или ИмяПоляХранения = "_Posted" 				// Проведен
		Или ИмяПоляХранения = "_Executed" 				// Выполнена
		Или ИмяПоляХранения = "_ActualPeriod" Тогда		// 
		Размер = 1;
	ИначеЕсли ИмяПоляХранения = "_BaseCKLineNo"			// НомерСтроки
		Или ИмяПоляХранения = "_LeadingCKLineNo" 		// НомерСтроки
		Или ИмяПоляХранения = "_RecordKind" Тогда		// ВидСтроки
		Размер = 5;
	ИначеЕсли ИмяПоляХранения = "_EnumOrder" Тогда	// Порядок
		Размер = 10;
	ИначеЕсли ИмяПоляХранения = "_OrderField" Тогда	// Порядок
		Размер = 16;
	ИначеЕсли ИмяПоляХранения = "_Kind" 			// Вид счета
		Или ИмяПоляХранения = "_OffBalance" Тогда	// Забалансовый
		Размер = 1;
	ИначеЕсли ИмяПоляХранения = "_TurnoverOnly" 		// ТолькоОбороты
		Или ИмяПоляХранения = "_Correspond" Тогда		// 
		Размер = 1;
	//ИначеЕсли Лев(ИмяПоляХранения, 9) = "_Turnover" Тогда	// Итоги
	//	Размер = 21;
	ИначеЕсли ИмяПоляХранения = "_Splitter" Тогда	// Разделитель
		Размер = 10;
	ИначеЕсли ИмяПоляХранения = "_ActivationCondition" Тогда	// 
		Размер = 16;
	ИначеЕсли НРег(ИмяПоляХранения) = "_userid" Тогда	// 
		Размер = 64;
	ИначеЕсли ИмяПоляХранения = "_ObjectKey"
		Или ИмяПоляХранения = "_SettingsKey"
		Или ИмяПоляХранения = "_SettingsPresentation" Тогда	//
		Размер = 256;
	ИначеЕсли НРег(ИмяПоляХранения) = "_id" 			// 
		Или ИмяПоляХранения = "_URL" 					//
		Или ИмяПоляХранения = "_MDObjID" 				//
		Или ИмяПоляХранения = "_ConstID" 				//
		Или ИмяПоляХранения = "_RegID" Тогда			// ГУИД
		Размер = 16;
	ИначеЕсли ИмяПоляХранения = "_MessageNo" Тогда	//
		Размер = 10;
	ИначеЕсли ИмяПоляХранения = "_FileName" Тогда	//
		Размер = 128;
	ИначеЕсли ИмяПоляХранения = "_Periodicity" Тогда	// 
		Размер = 2;
	ИначеЕсли ИмяПоляХранения = "_RepetitionFactor" Тогда	// 
		Размер = 2;
	ИначеЕсли ИмяПоляХранения = "_UseTotals" 		// 
		Или ИмяПоляХранения = "_UseSplitter" 		// 
		Или ИмяПоляХранения = "_Use" Тогда			// 
		Размер = 1;
	ИначеЕсли ИмяПоляХранения = "_Description" 		// Наименование
		Или ИмяПоляХранения = "_JobKey" Тогда		// Ключ
		Размер = 128;
	ИначеЕсли ИмяПоляХранения = "_MetadataID" Тогда	// 
		Размер = 16;
	ИначеЕсли ИмяПоляХранения = "_UserName" Тогда	// 
		Размер = 255;
	ИначеЕсли Лев(ИмяПоляХранения, 8) = "_Restart"
		Или ИмяПоляХранения = "_State"
		Или ИмяПоляХранения = "_Version" Тогда
		Размер = 9;
	ИначеЕсли ИмяПоляХранения = "_SentNo" 			// номер сообщения
		Или ИмяПоляХранения = "_ReceivedNo" Тогда	// номер сообщения
		Размер = 10;
	ИначеЕсли ИмяПоляХранения = "_URLHash" Тогда	// 
		Размер = 10;
	ИначеЕсли ИмяПоляХранения = "_SimpleKey" Тогда	// 
		Размер = 16;
	ИначеЕсли ИмяПоляХранения = "_RecordKey" Тогда	// 
		Размер = 1;
	КонецЕсли;
	Возврат Размер;
КонецФункции

&НаСервере
Функция ПолучитьРазмерПоля(СтрокаТаблХранения, СтрокаПоляХранения)
	Размер = 0;
	Мета = "";
	Поле = Неопределено;
	Попытка
		Если Лев(СтрокаТаблХранения.Метаданные, 10) = "Справочник" Тогда
			Мета = "Метаданные.Справочники" + Сред(СтрокаТаблХранения.Метаданные, 11);
			Если СтрокаТаблХранения.Назначение = "ТабличнаяЧасть" Тогда
				Мета = СтрЗаменить(Мета, ".ТабличнаяЧасть.", ".ТабличныеЧасти.");
			КонецЕсли;
			Если Не ПустаяСтрока(СтрокаПоляХранения.ИмяПоля) Тогда
				Поле = Вычислить(Мета + ".Реквизиты.Найти(""" + СтрокаПоляХранения.ИмяПоля + """)");
			КонецЕсли;
		ИначеЕсли Лев(СтрокаТаблХранения.Метаданные, 8) = "Документ" Тогда
			Мета = "Метаданные.Документы" + Сред(СтрокаТаблХранения.Метаданные, 9);
			Если СтрокаТаблХранения.Назначение = "ТабличнаяЧасть" Тогда
				Мета = СтрЗаменить(Мета, ".ТабличнаяЧасть.", ".ТабличныеЧасти.");
			КонецЕсли;
			Если Не ПустаяСтрока(СтрокаПоляХранения.ИмяПоля) Тогда
				Поле = Вычислить(Мета + ".Реквизиты.Найти(""" + СтрокаПоляХранения.ИмяПоля + """)");
			КонецЕсли;
		ИначеЕсли Лев(СтрокаТаблХранения.Метаданные, 7) = "Регистр" Тогда
			Мета = "Метаданные.Регистры" + Сред(СтрокаТаблХранения.Метаданные, 8);
			Если Не ПустаяСтрока(СтрокаПоляХранения.ИмяПоля) Тогда
				Поле = Вычислить(Мета + ".Измерения.Найти(""" + СтрокаПоляХранения.ИмяПоля + """)");
				Если Поле = Неопределено Тогда
					Поле = Вычислить(Мета + ".Ресурсы.Найти(""" + СтрокаПоляХранения.ИмяПоля + """)");
					Если Поле = Неопределено Тогда
						Поле = Вычислить(Мета + ".Реквизиты.Найти(""" + СтрокаПоляХранения.ИмяПоля + """)");
						Если Поле = Неопределено И Лев(СтрокаТаблХранения.Метаданные, 10) = "РегистрБух"
							И (Прав(СтрокаПоляХранения.ИмяПоляХранения, 2) = "Dt" Или Прав(СтрокаПоляХранения.ИмяПоляХранения, 2) = "Ct") Тогда
							Поле = Вычислить(Мета + ".Ресурсы.Найти(""" + Лев(СтрокаПоляХранения.ИмяПоля, СтрДлина(СтрокаПоляХранения.ИмяПоля)-2) + """)");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Лев(СтрокаТаблХранения.Метаданные, 16) = "ЖурналДокументов" Тогда
			Мета = "Метаданные.ЖурналыДокументов" + Сред(СтрокаТаблХранения.Метаданные, 17);
			Если Не ПустаяСтрока(СтрокаПоляХранения.ИмяПоля) Тогда
				Поле = Вычислить(Мета + ".Графы.Найти(""" + СтрокаПоляХранения.ИмяПоля + """)");
			КонецЕсли;
		ИначеЕсли Лев(СтрокаТаблХранения.Метаданные, 6) = "Задача" Тогда
			Мета = "Метаданные.Задачи" + Сред(СтрокаТаблХранения.Метаданные, 7);
			Если СтрокаТаблХранения.Назначение = "ТабличнаяЧасть" Тогда
				Мета = СтрЗаменить(Мета, ".ТабличнаяЧасть.", ".ТабличныеЧасти.");
			КонецЕсли;
			Если Не ПустаяСтрока(СтрокаПоляХранения.ИмяПоля) Тогда
				Поле = Вычислить(Мета + ".Реквизиты.Найти(""" + СтрокаПоляХранения.ИмяПоля + """)");
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаПоляХранения.ИмяПоляХранения = "_Number" Тогда	// Номер
			ОбъектМ = Вычислить(Мета);
			Размер 	= ?(ОбъектМ.ТипНомера=Метаданные.СвойстваОбъектов.ТипНомераДокумента.Строка, ОбъектМ.ДлинаНомера * 2, 9);
		ИначеЕсли СтрокаПоляХранения.ИмяПоляХранения = "_Description"
			Или СтрокаПоляХранения.ИмяПоляХранения = "_Name" Тогда	// Наименование
			Размер = Вычислить(Мета + ".ДлинаНаименования") * 2;
		ИначеЕсли СтрокаПоляХранения.ИмяПоляХранения = "_Code" Тогда	// Код
			ОбъектМ = Вычислить(Мета);
			Размер = ?(Лев(СтрокаТаблХранения.Метаданные, 10)="Справочник" И ОбъектМ.ТипКода=Метаданные.СвойстваОбъектов.ТипКодаСправочника.Число, 5, ОбъектМ.ДлинаКода * 2);
		ИначеЕсли Поле=Неопределено Тогда
			Размер = Предугадать(СтрокаПоляХранения.ИмяПоляХранения);
		ИначеЕсли Строка(Поле.Тип) = "Число" Тогда
			Размер = ?(Поле.Тип.КвалификаторыЧисла.Разрядность > 9, 9, 5);
		ИначеЕсли Строка(Поле.Тип) = "Булево" Тогда
			Размер = 1;
		ИначеЕсли Строка(Поле.Тип) = "Строка" Тогда
			Размер = ?(Поле.Тип.КвалификаторыСтроки.Длина=0, 16, Поле.Тип.КвалификаторыСтроки.Длина * 2);
		ИначеЕсли Строка(Поле.Тип) = "Дата" Тогда
			Размер = 8;
		ИначеЕсли Строка(Поле.Тип) = "Хранилище значения" Тогда
			Размер = 16;
		Иначе
			Размер = Предугадать(СтрокаПоляХранения.ИмяПоляХранения);
		КонецЕсли;
	Исключение
		Размер = Предугадать(СтрокаПоляХранения.ИмяПоляХранения);
	КонецПопытки;
	Возврат Размер;
КонецФункции
