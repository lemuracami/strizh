
Функция ПолучитьВнешниеНаборыДанных(НачалоПериода, ОкончаниеПериода, Контрагент)
	
	ВнешниеНаборыДанных = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("НачалоПериода30", НачалоПериода - 30 * 86400);
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецДня(ОкончаниеПериода));
	Запрос.УстановитьПараметр("ОкончаниеПериода30",  КонецДня(ОкончаниеПериода + 30 * 86400));
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Заказ КАК Заказ,
	|	МИНИМУМ(ВложенныйЗапрос.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	(ВЫБРАТЬ
	|		СостоянияЗаказов.Заказ КАК Заказ,
	|		СостоянияЗаказов.Период КАК Период
	|	ИЗ
	|		РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	|	ГДЕ
	|		СостоянияЗаказов.Период МЕЖДУ &НачалоПериода30 И &ОкончаниеПериода30
	|		И СостоянияЗаказов.Заказ.ВладелецТовара = &Контрагент
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СостоянияЗаказовРасширенный.Заказ,
	|		СостоянияЗаказовРасширенный.Период
	|	ИЗ
	|		РегистрСведений.СостоянияЗаказовРасширенный КАК СостоянияЗаказовРасширенный
	|	ГДЕ
	|		СостоянияЗаказовРасширенный.Период МЕЖДУ &НачалоПериода30 И &ОкончаниеПериода30
	|		И ВЫБОР
	|				КОГДА СостоянияЗаказовРасширенный.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|					ТОГДА ВЫРАЗИТЬ(СостоянияЗаказовРасширенный.Заказ КАК Документ.РеализацияТоваровУслуг).ВладелецТовара = &Контрагент
	|				ИНАЧЕ ВЫРАЗИТЬ(СостоянияЗаказовРасширенный.Заказ КАК Документ.ЗаборТовара).Контрагент = &Контрагент
	|			КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОперативныеСтатусыЗаказовПоДаннымМП.Заказ,
	|		ОперативныеСтатусыЗаказовПоДаннымМП.Период
	|	ИЗ
	|		РегистрСведений.ОперативныеСтатусыЗаказовПоДаннымМП КАК ОперативныеСтатусыЗаказовПоДаннымМП
	|	ГДЕ
	|		ОперативныеСтатусыЗаказовПоДаннымМП.Период МЕЖДУ &НачалоПериода30 И &ОкончаниеПериода30
	|		И ВЫБОР
	|				КОГДА ОперативныеСтатусыЗаказовПоДаннымМП.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|					ТОГДА ВЫРАЗИТЬ(ОперативныеСтатусыЗаказовПоДаннымМП.Заказ КАК Документ.РеализацияТоваровУслуг).ВладелецТовара = &Контрагент
	|				ИНАЧЕ ВЫРАЗИТЬ(ОперативныеСтатусыЗаказовПоДаннымМП.Заказ КАК Документ.ЗаборТовара).Контрагент = &Контрагент
	|			КОНЕЦ) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Заказ
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ВложенныйЗапрос.Период) МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияЗаказов.Заказ КАК Заказ,
	|	ВЫБОР
	|		КОГДА ВТ_Заказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(ВТ_Заказы.Заказ КАК Документ.РеализацияТоваровУслуг).НомерВнешнегоЗаказа
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_Заказы.Заказ КАК Документ.ЗаборТовара).НомерВнешнегоЗаказа
	|	КОНЕЦ КАК НомерВнешнегоЗаказа,
	|	СостоянияЗаказов.Период КАК Период,
	|	СостоянияЗаказов.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказов.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	СостоянияЗаказов.ПричинаОтказа КАК ПричинаОтказа,
	|	СостоянияЗаказов.Регистратор КАК Регистратор,
	|	1 КАК ИсточникСтатуса,
	|	ВЫБОР
	|		КОГДА СостоянияЗаказов.Рейс.ДатаРейса ЕСТЬ NULL
	|			ТОГДА НАЧАЛОПЕРИОДА(СостоянияЗаказов.Период, ДЕНЬ)
	|		КОГДА НАЧАЛОПЕРИОДА(СостоянияЗаказов.Период, ДЕНЬ) > СостоянияЗаказов.Рейс.ДатаРейса
	|			ТОГДА СостоянияЗаказов.Рейс.ДатаРейса
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СостоянияЗаказов.Период, ДЕНЬ)
	|	КОНЕЦ КАК ДатаСтатуса,
	|	СостоянияЗаказов.Рейс.ДатаРейса КАК ДатаРейса
	|ИЗ
	|	РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО (СостоянияЗаказов.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода30)
	|			И СостоянияЗаказов.Заказ = ВТ_Заказы.Заказ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостоянияЗаказовРасширенный.Заказ,
	|	ВЫБОР
	|		КОГДА ВТ_Заказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(ВТ_Заказы.Заказ КАК Документ.РеализацияТоваровУслуг).НомерВнешнегоЗаказа
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_Заказы.Заказ КАК Документ.ЗаборТовара).НомерВнешнегоЗаказа
	|	КОНЕЦ,
	|	СостоянияЗаказовРасширенный.Период,
	|	СостоянияЗаказовРасширенный.РезультатДоставки,
	|	СостоянияЗаказовРасширенный.ПричинаНеВыполнения,
	|	СостоянияЗаказовРасширенный.ПричинаОтказа,
	|	СостоянияЗаказовРасширенный.Регистратор,
	|	2,
	|	ВЫБОР
	|		КОГДА СостоянияЗаказовРасширенный.Рейс.ДатаРейса ЕСТЬ NULL
	|			ТОГДА НАЧАЛОПЕРИОДА(СостоянияЗаказовРасширенный.Период, ДЕНЬ)
	|		КОГДА НАЧАЛОПЕРИОДА(СостоянияЗаказовРасширенный.Период, ДЕНЬ) > СостоянияЗаказовРасширенный.Рейс.ДатаРейса
	|			ТОГДА СостоянияЗаказовРасширенный.Рейс.ДатаРейса
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СостоянияЗаказовРасширенный.Период, ДЕНЬ)
	|	КОНЕЦ,
	|	СостоянияЗаказовРасширенный.Рейс.ДатаРейса
	|ИЗ
	|	РегистрСведений.СостоянияЗаказовРасширенный КАК СостоянияЗаказовРасширенный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО (СостоянияЗаказовРасширенный.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода30)
	|			И СостоянияЗаказовРасширенный.Заказ = ВТ_Заказы.Заказ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОперативныеСтатусыЗаказовПоДаннымМП.Заказ,
	|	ВЫБОР
	|		КОГДА ВТ_Заказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(ВТ_Заказы.Заказ КАК Документ.РеализацияТоваровУслуг).НомерВнешнегоЗаказа
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_Заказы.Заказ КАК Документ.ЗаборТовара).НомерВнешнегоЗаказа
	|	КОНЕЦ,
	|	ОперативныеСтатусыЗаказовПоДаннымМП.Период,
	|	ВЫБОР
	|		КОГДА ОперативныеСтатусыЗаказовПоДаннымМП.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена)
	|				И НЕ СтатусыЗаказов.Заказ ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично)
	|		ИНАЧЕ ОперативныеСтатусыЗаказовПоДаннымМП.РезультатДоставки
	|	КОНЕЦ,
	|	ОперативныеСтатусыЗаказовПоДаннымМП.ПричинаНеВыполнения,
	|	ОперативныеСтатусыЗаказовПоДаннымМП.ПричинаОтказаПереноса,
	|	ОперативныеСтатусыЗаказовПоДаннымМП.Регистратор,
	|	3,
	|	ВЫБОР
	|		КОГДА ОперативныеСтатусыЗаказовПоДаннымМП.Рейс.ДатаРейса ЕСТЬ NULL
	|			ТОГДА НАЧАЛОПЕРИОДА(ОперативныеСтатусыЗаказовПоДаннымМП.Период, ДЕНЬ)
	|		КОГДА НАЧАЛОПЕРИОДА(ОперативныеСтатусыЗаказовПоДаннымМП.Период, ДЕНЬ) > ОперативныеСтатусыЗаказовПоДаннымМП.Рейс.ДатаРейса
	|			ТОГДА ОперативныеСтатусыЗаказовПоДаннымМП.Рейс.ДатаРейса
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ОперативныеСтатусыЗаказовПоДаннымМП.Период, ДЕНЬ)
	|	КОНЕЦ,
	|	ОперативныеСтатусыЗаказовПоДаннымМП.Рейс.ДатаРейса
	|ИЗ
	|	РегистрСведений.ОперативныеСтатусыЗаказовПоДаннымМП КАК ОперативныеСтатусыЗаказовПоДаннымМП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО (ОперативныеСтатусыЗаказовПоДаннымМП.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода30)
	|			И ОперативныеСтатусыЗаказовПоДаннымМП.Заказ = ВТ_Заказы.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|		ПО ОперативныеСтатусыЗаказовПоДаннымМП.Заказ = СтатусыЗаказов.Заказ
	|			И (СтатусыЗаказов.Статус = 237)
	|			И ОперативныеСтатусыЗаказовПоДаннымМП.Регистратор = СтатусыЗаказов.ДокументРегистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Заказ,
	|	ДатаСтатуса,
	|	Период
	|ИТОГИ ПО
	|	Заказ,
	|	ДатаСтатуса";
	
	ТаблицаСтатусовЗаказа = Новый ТаблицаЗначений;
	КолонкиТаблицы = ТаблицаСтатусовЗаказа.Колонки;
	КолонкиТаблицы.Добавить("Заказ");
	КолонкиТаблицы.Добавить("НомерВнешнегоЗаказа");
	КолонкиТаблицы.Добавить("НомерСтатуса");
	КолонкиТаблицы.Добавить("Период");
	КолонкиТаблицы.Добавить("РезультатДоставки");
	КолонкиТаблицы.Добавить("ПричинаНеВыполнения");
	КолонкиТаблицы.Добавить("ПричинаОтказа");
	КолонкиТаблицы.Добавить("Регистратор");
	КолонкиТаблицы.Добавить("ИсточникСтатуса");
	КолонкиТаблицы.Добавить("ДатаСтатуса");
	КолонкиТаблицы.Добавить("ДатаРейса");
	
	
	ТаблицаСтатусовЗаказов = ТаблицаСтатусовЗаказа.СкопироватьКолонки();
	
	СтруктураРезультатДоставки = Новый Структура("РезультатДоставки");
	
	ВыборкаЗаказ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗаказ.Следующий() Цикл
		
		НомерСтатуса = 0;
		
		ВыборкаДатаСтатуса = ВыборкаЗаказ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДатаСтатуса.Следующий() Цикл
			
			ТаблицаСтатусовЗаказа.Очистить();
			
			Выборка = ВыборкаДатаСтатуса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаСтатусовЗаказа.Добавить(), Выборка);
			КонецЦикла;
			
			//обрабатываем таблицу
			ИндексПоследнейСтроки = ТаблицаСтатусовЗаказа.Количество() - 1;
			ПоследняяСтрокаТаблицы = ТаблицаСтатусовЗаказа[ИндексПоследнейСтроки];
			
			РезультатДоставки = ПоследняяСтрокаТаблицы.РезультатДоставки;
			
			//собирем инфу по этому результату
			СтруктураРезультатДоставки.РезультатДоставки = РезультатДоставки;
			СтрокиТаблицы = ТаблицаСтатусовЗаказа.НайтиСтроки(СтруктураРезультатДоставки);
			
			ПерваяСтрокаТаблицы = СтрокиТаблицы[0];
			
			ПричинаНеВыполнения = Неопределено;
			ПричинаОтказа = Неопределено;
			
			Для Каждого СтрокаТаблицы Из СтрокиТаблицы Цикл
				Если ЗначениеЗаполнено(СтрокаТаблицы.ПричинаНеВыполнения) Тогда
					ПричинаНеВыполнения = СтрокаТаблицы.ПричинаНеВыполнения;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаТаблицы.ПричинаОтказа) Тогда
					ПричинаОтказа = СтрокаТаблицы.ПричинаОтказа;
				КонецЕсли;
			КонецЦикла;
			
			НомерСтатуса = НомерСтатуса + 1;
			
			СтрокаСтатусовЗаказов = ТаблицаСтатусовЗаказов.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСтатусовЗаказов, ПерваяСтрокаТаблицы);
			СтрокаСтатусовЗаказов.НомерСтатуса = НомерСтатуса;
			СтрокаСтатусовЗаказов.ПричинаНеВыполнения = ПричинаНеВыполнения;
			СтрокаСтатусовЗаказов.ПричинаОтказа = ПричинаОтказа;
			
		КонецЦикла;
		
		
	КонецЦикла;
	
	ВнешниеНаборыДанных.Вставить("ТаблицаСтатусовЗаказов", ТаблицаСтатусовЗаказов);
	
	Возврат ВнешниеНаборыДанных;
	
КонецФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиКомпоновщика = КомпоновщикНастроек.ПолучитьНастройки();
	
	ЭлементыПараметров = НастройкиКомпоновщика.ПараметрыДанных.Элементы;
	
	СтандартныйПериод = ЭлементыПараметров.Найти("Период").Значение;

	Контрагент = ЭлементыПараметров.Найти("Контрагент").Значение;
	
	Если ЗначениеЗаполнено(СтандартныйПериод) И ЗначениеЗаполнено(СтандартныйПериод.ДатаНачала) И ЗначениеЗаполнено(СтандартныйПериод.ДатаОкончания) И ЗначениеЗаполнено(Контрагент) Тогда
		
	Иначе
		ВызватьИсключение "Не заполнены обязательные параметры отчета";
	КонецЕсли;
	
	ВнешниеНаборыДанных = ПолучитьВнешниеНаборыДанных(СтандартныйПериод.ДатаНачала, СтандартныйПериод.ДатаОкончания, Контрагент);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновщика, ДанныеРасшифровки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры
