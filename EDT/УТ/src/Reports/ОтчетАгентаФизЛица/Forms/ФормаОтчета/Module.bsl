
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    СхемаКомпоновки  = Отчеты.ОтчетАгентаФизЛица.ПолучитьМакет("ФизическиеЛица");
    Отчет.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки )); 
    Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки .НастройкиПоУмолчанию);
    //ПараметрСКД = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ФизическоеЛицо");
    //ПараметрСКД.Использование = Истина;
    //ПараметрСКД.Значение  = Справочники.Контрагенты.НайтиПоКоду("Shop_169");
КонецПроцедуры

&НаКлиенте
Процедура ВариантыОтчетовПриСменеСтраницы(Элемент, ТекущаяСтраница)
    ВариантыОтчетовПриСменеСтраницыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВариантыОтчетовПриСменеСтраницыНаСервере()
    СхемаКомпоновки  = Отчеты.ОтчетАгентаФизЛица.ПолучитьМакет(Элементы.ВариантыОтчетов.ТекущаяСтраница.Имя);
    Отчет.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки )); 
    Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки .НастройкиПоУмолчанию);
    //ПараметрСКД = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ИнтернетМагазин");
    //ПараметрСКД.Использование = Истина;
    //ПараметрСКД.Значение  = Справочники.Контрагенты.НайтиПоКоду("Shop_169");

КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
    Результат = СформироватьТаблицу();
    
    ТекущаяСтраница = Элементы.ВариантыОтчетов.ТекущаяСтраница.Имя;
    ФизическоеЛицо = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение;
    НачалоПериода = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаНачала;
    КонецПериода = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаОкончания;
	
    ТабДок = Новый ТабличныйДокумент;
    
    Выполнить("ТабДок = СформироватьТабличныйДокумент"+ТекущаяСтраница+"(Результат,ФизическоеЛицо,НачалоПериода,КонецПериода,ТекущаяСтраница);");
    Выполнить("ЭтаФорма[ТекущаяСтраница]=ТабДок;");
КонецПроцедуры

&НаСервере
Функция СформироватьТабличныйДокументФизическиеЛица(Результат,Контрагент,ДатаНачала,ДатаОкончания,ТекущаяСтраница)
    ТабДок = Новый ТабличныйДокумент;
    Макет = Отчеты.ОтчетАгентаФизЛица.ПолучитьМакет("Макет"+ТекущаяСтраница);
    ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
    ОбластьСтрока = Макет.ПолучитьОбласть("ОбластьСтрока");
    ОбластьИтого = Макет.ПолучитьОбласть("ОбластьИтого");
    ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
	
	ВодительИП = ФизическоеЛицо;
	ИПФИО = "ИП " + ВодительИП;
	ОГРНИП = ВодительИП.ОГРНИП;
	Компания = Справочники.Организации.НайтиПоКоду("00-000006");
	ИННКПП = ""+ Компания.ИНН + " / " + Компания.КПП;
    
    //Заполнение и вывод шапки
    ОбластьШапка.Параметры.ДатаОтчетаПолная = Формат(ДатаОкончания,"ДЛФ=ДД");
	// Михушкин --->> 
	ОбластьШапка.Параметры.ИПФИО = ИПФИО;
	ОбластьШапка.Параметры.ОГРНИП = ОГРНИП;
	ОбластьШапка.Параметры.Компания = Компания.Наименование;
	ОбластьШапка.Параметры.ИННКПП = ИННКПП;
	// <<--- Михушкин 
	
    ТабДок.Вывести(ОбластьШапка);
    
    //Заполнение и вывод строки
    НомерСтроки = 1;
    Для каждого Строка Из Результат Цикл
        ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
        ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
        ТабДок.Вывести(ОбластьСтрока);
        НомерСтроки = НомерСтроки + 1;
    КонецЦикла;	
    
    КоличествоЗаказов = НомерСтроки - 1;
    
    //Заполнение и вывод итогов
    СтоимостьЗаказаИтого = Результат.Итог("СтоимостьЗаказа");
    СтоимостьУслугИтого = Результат.Итог("СтоимостьУслуг");
    СтоимостьЗаказаИтогоНДС = Число(Формат(СтоимостьЗаказаИтого*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
    СтоимостьУслугИтогоНДС = Число(Формат(СтоимостьУслугИтого*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
    
	//ОбластьИтого.Параметры.СтоимостьЗаказаИтогоБезНДС = СтоимостьЗаказаИтого-СтоимостьЗаказаИтогоНДС;
	//ОбластьИтого.Параметры.СтоимостьУслугИтогоБезНДС = СтоимостьУслугИтого-СтоимостьУслугИтогоНДС; 	
	ОбластьИтого.Параметры.СтоимостьЗаказаИтогоБезНДС = СтоимостьЗаказаИтого;
    ОбластьИтого.Параметры.СтоимостьУслугИтогоБезНДС = СтоимостьУслугИтого; 
	//ОбластьИтого.Параметры.СтоимостьЗаказаИтогоНДС = СтоимостьЗаказаИтогоНДС; 
	//ОбластьИтого.Параметры.СтоимостьУслугИтогоНДС = СтоимостьУслугИтогоНДС;
	//ОбластьИтого.Параметры.СтоимостьЗаказаИтого = СтоимостьЗаказаИтого;
	//ОбластьИтого.Параметры.СтоимостьУслугИтого = СтоимостьУслугИтого;
    ОбластьИтого.Параметры.КоличествоЗаказов = КоличествоЗаказов;
    ТабДок.Вывести(ОбластьИтого);
    
    //Заполнение подвала
    СтрПодвал = "Общая стоимость услуг по данному отчету "+Формат(СтоимостьУслугИтого,"ЧДЦ=2; ЧГ=0")+" руб. "+"(" + ЧислоПрописью(СтоимостьУслугИтого,"Л = ru_RU; ДП = Истина","рубль,рубля,рублей,м,копейка,копейки,копеек,ж")+" )"  + " руб. Без НДС.";
    Стр2Подвал = "Общее количество обработанных заказов "+Строка(КоличествоЗаказов)+" "+"("+ЧислоПрописью(КоличествоЗаказов,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+") шт."+Символы.ПС+"Услуги оказаны в полном объеме. Стороны не имеют претензий по выполнению работ. Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";
	ОбластьПодвал.Параметры.Стр = СтрПодвал;
    ОбластьПодвал.Параметры.Стр2 = Стр2Подвал;
	// Михушкин --->> 
	ОбластьПодвал.Параметры.ИПФИО = ИПФИО;
	ОбластьПодвал.Параметры.Компания = Компания.Наименование;	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ОтветственныеЛицаОрганизацииСрезПоследних.ОтветственноеЛицо,
	                      |	ОтветственныеЛицаОрганизацииСрезПоследних.ФизическоеЛицо
	                      |ИЗ
	                      |	РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних КАК ОтветственныеЛицаОрганизацииСрезПоследних
	                      |ГДЕ
	                      |	ОтветственныеЛицаОрганизацииСрезПоследних.ОтветственноеЛицо = &ОтветственноеЛицо
	                      |	И ОтветственныеЛицаОрганизацииСрезПоследних.СтруктурнаяЕдиница = &СтруктурнаяЕдиница");
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Компания);
	Запрос.УстановитьПараметр("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() Тогда	
		ОбластьПодвал.Параметры.ПодписантКомпании = Рез.ФизическоеЛицо;		
	КонецЕсли;					  
	
	// <<--- Михушкин 
    ТабДок.Вывести(ОбластьПодвал);    
    
    //Параметры табличного документа
    ТабДок.АвтоМасштаб = Истина;
    //Отступы
    ТабДок.ПолеСверху = 20;
    ТабДок.ПолеСнизу = 20;
    ТабДок.ПолеСлева = 30;
    ТабДок.ПолеСправа = 15;
    
    Возврат ТабДок;
КонецФункции // ()

&НаКлиенте
Функция  СформироватьТаблицу() 
    
    СхемаКомпоновки  = Отчеты.ОтчетАгентаФизЛица.ПолучитьМакет(Элементы.ВариантыОтчетов.ТекущаяСтраница.Имя);
    КомпоновщикНастроек = Отчет.КомпоновщикНастроек;
    НастройкиКомпоновщика = КомпоновщикНастроек.Настройки;
    
    //Инициализируем пользовательские настройки
    КомпоновщикНастроекДанных = Новый КомпоновщикНастроекКомпоновкиДанных;
    КомпоновщикНастроекДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки));
    КомпоновщикНастроекДанных.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
    КомпоновщикНастроекДанных.ЗагрузитьПользовательскиеНастройки(Отчет.КомпоновщикНастроек.ПользовательскиеНастройки);    
    
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновки, КомпоновщикНастроекДанных.ПолучитьНастройки(),,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
    
    ТаблицаРезультат = Новый ТаблицаЗначений;
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    
    ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
    
    Возврат ТаблицаРезультат;
КонецФункции


