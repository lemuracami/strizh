
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    СхемаКомпоновки  = Отчеты.ОтчетАгентаДМ.ПолучитьМакет("Приложение4");
    Отчет.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки )); 
    Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки .НастройкиПоУмолчанию);
    ПараметрСКД = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ИнтернетМагазин");
    ПараметрСКД.Использование = Истина;
    ПараметрСКД.Значение  = Справочники.Контрагенты.НайтиПоКоду("Shop_428");
КонецПроцедуры

&НаКлиенте
Процедура ВариантыОтчетовПриСменеСтраницы(Элемент, ТекущаяСтраница)
    ВариантыОтчетовПриСменеСтраницыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВариантыОтчетовПриСменеСтраницыНаСервере()
    СхемаКомпоновки  = Отчеты.ОтчетАгентаДМ.ПолучитьМакет(Элементы.ВариантыОтчетов.ТекущаяСтраница.Имя);
    Отчет.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки )); 
    Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки .НастройкиПоУмолчанию);
    ПараметрСКД = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ИнтернетМагазин");
    ПараметрСКД.Использование = Истина;
    ПараметрСКД.Значение  = Справочники.Контрагенты.НайтиПоКоду("Shop_428");

КонецПроцедуры


&НаКлиенте
Процедура Сформировать(Команда)
	
	Результат = СформироватьТаблицу();

	//ИнтернетМагазин = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ИнтернетМагазин").Значение;
    //НачалоПериода = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтандартныйПериод").Значение.ДатаНачала;
    //КонецПериода = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтандартныйПериод").Значение.ДатаОкончания;
    
    ТекущаяСтраница = Элементы.ВариантыОтчетов.ТекущаяСтраница.Имя;
    Если ТекущаяСтраница = "Приложение4" Тогда
        ИнтернетМагазин = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение;
        НачалоПериода = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Значение.ДатаНачала;
        КонецПериода = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Значение.ДатаОкончания;
    Иначе
        ИнтернетМагазин = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение;
        НачалоПериода = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение.ДатаНачала;
        КонецПериода = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение.ДатаОкончания;
    КонецЕсли;
    
    ТабДок = Новый ТабличныйДокумент;
	
    Выполнить("ТабДок = СформироватьТабличныйДокумент"+ТекущаяСтраница+"(Результат,ИнтернетМагазин,НачалоПериода,КонецПериода,ТекущаяСтраница);");
    Выполнить("ЭтаФорма[ТекущаяСтраница]=ТабДок;");
    //ТабДок = СформироватьТабличныйДокументПриложение4(Результат,ИнтернетМагазин,НачалоПериода,КонецПериода,ТекущаяСтраница);
    //Приложение4 = ТабДок; 
КонецПроцедуры

&НаСервере
Функция СформироватьТабличныйДокументПриложение3_2(Результат,Контрагент,ДатаНачала,ДатаОкончания,ТекущаяСтраница)

	//Результат = СформироватьТаблицу();
	
	//НовТаб = Результат.СкопироватьКолонки();
	НовТаб = Новый ТаблицаЗначений;
	НовТаб.Колонки.Добавить("НомерЗаказа");
	НовТаб.Колонки.Добавить("ВнешнийНомер");
	НовТаб.Колонки.Добавить("ТарифицируемыйВес");
	НовТаб.Колонки.Добавить("РегионДоставки");
	НовТаб.Колонки.Добавить("ПлановаяДатаДоставки");
	НовТаб.Колонки.Добавить("ФактическаяДатаДоставки");
	НовТаб.Колонки.Добавить("ДатаАнулирования");
	НовТаб.Колонки.Добавить("СтоимостьТовара");
	НовТаб.Колонки.Добавить("СтатусЗаказа");
	НовТаб.Колонки.Добавить("Примечания",Новый ОписаниеТипов("Строка"));
	Заказ = Неопределено;
	Для каждого Стр из Результат Цикл
		Если Заказ <> Стр.НомерЗаказа Тогда
			НовСтр = НовТаб.Добавить();
			Заказ = Стр.НомерЗаказа;
			НовСтр.НомерЗаказа = СокрЛП(Стр.НомерЗаказа);
			НовСтр.ВнешнийНомер = Стр.ВнешнийНомер;
			НовСтр.ТарифицируемыйВес = Стр.ТарифицируемыйВес;
			НовСтр.РегионДоставки = Стр.ЗонаТарификации;//Стр.РегионДоставки;
			НовСтр.ПлановаяДатаДоставки = Формат(Стр.ПлановаяДатаДоставки, "ДЛФ=Д");
			НовСтр.ФактическаяДатаДоставки = Формат(Стр.ФактическаяДатаДоставки, "ДЛФ=Д");
			НовСтр.ДатаАнулирования = Формат(Стр.ДатаАнулирования, "ДЛФ=Д");
			НовСтр.СтоимостьТовара = Стр.СтоимостьТовара;
			НовСтр.СтатусЗаказа = Стр.СтатусЗаказа;
			Если СокрЛП(Стр.ПричинаОтказа) <> "" Тогда
			    НовСтр.Примечания = Формат(Стр.ДатаПереноса, "ДЛФ=Д") + " "
					+ Стр.ПричинаНеВыполнения + "/" + Стр.ПричинаОтказа;
			КонецЕсли;
		Иначе
			Если СокрЛП(Стр.ПричинаОтказа) <> "" Тогда
				Если НовСтр.Примечания = "" Тогда
					НовСтр.Примечания = Формат(Стр.ДатаПереноса, "ДЛФ=Д") + " "
						+ Стр.ПричинаНеВыполнения + "/" + Стр.ПричинаОтказа;	
				Иначе
					НовСтр.Примечания = НовСтр.Примечания + Символы.ПС + Формат(Стр.ДатаПереноса, "ДЛФ=Д") + " "
						+ Стр.ПричинаНеВыполнения + "/" + Стр.ПричинаОтказа;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
	
	
	ТабДок = Новый ТабличныйДокумент;
    Макет = Отчеты.ОтчетАгентаДМ.ПолучитьМакет("Макет"+ТекущаяСтраница);
    ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
    ОбластьСтрокаЗаказ = Макет.ПолучитьОбласть("ОбластьСтрокаЗаказ");
    ОбластьИтого = Макет.ПолучитьОбласть("ОбластьИтого");
    ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
    
    //Получим данные для печати
    ДанныеДляПечати = СобратьДанныеДляПечати(Контрагент,ДатаОкончания);
    
    //Заполнение и вывод шапки
    ОбластьШапка.Параметры.АгентскийДоговор = ДанныеДляПечати.АгентскийДоговор; //Задача № 2724 //"№ 04-АГ-15 от 01 ноября 2015г.";//было  ДанныеДляПечати.АгентскийДоговор;
    ОбластьШапка.Параметры.ДатаОтчетаПолная = Формат(ДатаОкончания,"ДЛФ=ДД");
	
	//Заполнение и вывод шапки
	Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, ДатаОкончания), "ПолноеНаименование,ИНН,КПП");
    Агент = ДанныеДляПечати.Агент;
    Должность = ДанныеДляПечати.ДолжностьВЛице;
    ДиректорПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
    ОрганизацияПолноеНаименование = ДанныеДляПечати.Организация.НаименованиеПолное;
    ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице;
    ФИОРуководителяАгента = ДанныеДляПечати.ФИОРуководителяВлице;
	
	//ОбластьШапка.Параметры.стр = "Публичное Акционерное Общество «Детский мир», именуемое в дальнейшем «Принципал», в лице ____________________________, действующего на основании ________, с одной стороны, и  ____________________________________________________, именуемое в дальнейшем «Агент», в лице ________________________________________________________, действующего на основании __________________________, именуемые в дальнейшем «Стороны»,  настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора № _______ от «_____» _____________ 20____г. в период с «__»  по «__»____________ 20____г.  были обработаны и переданы Принципалу следующие заказы:";
	//Стр =Символы.Таб +Символы.Таб+ "Публичное Акционерное Общество """+СокрЛП(Контрагент.НаименованиеПолное) + 
	Стр =Символы.Таб +Символы.Таб+ СокрЛП(Контрагент.НаименованиеПолное) + 
	", именуемое в дальнейшем """+Параметр1+""", в лице " + Должность + " " + ДиректорПринципала + 
	" действующего на основании доверенности " + ДанныеДляПечати.ДоверенностьДиректора + ", с одной стороны, и "+ОрганизацияПолноеНаименование+
	", именуемое в дальнейшем """+Параметр2+""", в лице "+ДолжностьАгента+" "+ФИОРуководителяАгента+
	" действующей на основании устава, именуемые в дальнейшем ""Стороны"", настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(ДатаНачала, "ДЛФ=DD") + " по " + Формат(ДатаОкончания, "ДЛФ=DD") + " были обработаны и переданы Принципалу следующие заказы:";
    ОбластьШапка.Параметры.Стр = Стр;

	
	ТабДок.Вывести(ОбластьШапка);
    
    //Заполнение и вывод строк
    НомерСтроки = 1;
    Для каждого СтрЗаказ Из НовТаб Цикл
		//РезультатДетальныеЗаписи = Результат.НайтиСтроки(Новый Структура("НомерЗаказа",СтрЗаказ.НомерЗаказа));
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаЗаказ.Параметры,СтрЗаказ);
        ОбластьСтрокаЗаказ.Параметры.НомерСтроки = НомерСтроки;
        ТабДок.Вывести(ОбластьСтрокаЗаказ);
                
        НомерСтроки = НомерСтроки + 1;
    КонецЦикла;	
    
    
    //Заполнение и вывод итогов
    //Итого с НДС
    СтоимостьТовара = НовТаб.Итог("СтоимостьТовара");
    
    //Итого НДС
	//СтоимостьТовараНДС = Число(Формат(СтоимостьТовара*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
    
	//ОбластьИтого.Параметры.СтоимостьТовараБезНДС = СтоимостьТовара-СтоимостьТовараНДС;
    
	//ОбластьИтого.Параметры.СтоимостьТовараНДС = СтоимостьТовараНДС;
    
    ОбластьИтого.Параметры.СтоимостьТовара = СтоимостьТовара;
    ОбластьИтого.Параметры.КоличествоЗаказов = Строка(НомерСтроки-1) + " (" + Лев(ЧислоПрописью(НомерСтроки-1), СтрДлина(ЧислоПрописью(НомерСтроки-1)) - 5) + ")";
    ТабДок.Вывести(ОбластьИтого);
    
    
    //Заполнение подвала
    Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    ОбластьПодвал.Параметры.Параметр1 = Параметр1;
    ОбластьПодвал.Параметры.Параметр2 = Параметр2;
    ОбластьПодвал.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
    ОбластьПодвал.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
    ОбластьПодвал.Параметры.ДожностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
    ОбластьПодвал.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
    //ОбластьПодвал.Параметры.НаименованиеОрганизации = ДанныеДляПечати.Организация.Наименование;
    ТабДок.Вывести(ОбластьПодвал);    
    
    //Параметры табличного документа
    ТабДок.АвтоМасштаб = Истина;
    ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
    //Отступы
    ТабДок.ПолеСверху = 20;
    ТабДок.ПолеСнизу = 10;
    ТабДок.ПолеСлева = 19;
    ТабДок.ПолеСправа = 13;
    
    Возврат ТабДок;	
КонецФункции

&НаСервере
Функция СформироватьТабличныйДокументПриложение4(Результат,Контрагент,ДатаНачала,ДатаОкончания,ТекущаяСтраница)
	
	//Результат = СформироватьТаблицу();

	ТабДок = Новый ТабличныйДокумент;
    Макет = Отчеты.ОтчетАгентаДМ.ПолучитьМакет("Макет"+ТекущаяСтраница);
    ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
    ОбластьСтрока = Макет.ПолучитьОбласть("ОбластьСтрока");
    ОбластьИтого = Макет.ПолучитьОбласть("ОбластьИтого");
    ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
    
    //Получим данные для печати
    ДанныеДляПечати =  СобратьДанныеДляПечати(Контрагент,ДатаОкончания);
    
    //Заполнение и вывод шапки
    ОбластьШапка.Параметры.ДатаОтчетаПолная = Формат(ДатаОкончания,"ДЛФ=ДД");
	ОбластьШапка.Параметры.АгентскийДоговор = ДанныеДляПечати.АгентскийДоговор; //Задача № 2724
    //ОбластьШапка.Параметры.ДатаОтчета = Формат(ДатаОкончания,"ДФ=dd");
    //ОбластьШапка.Параметры.МесяцОтчета = Формат(ДатаОкончания,"ДФ=MMMM");
    //ОбластьШапка.Параметры.ГодОтчета = Формат(ДатаОкончания,"ДФ=yyyy");
    
    Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, ДатаОкончания), "ПолноеНаименование,ИНН,КПП");
    Агент = ДанныеДляПечати.Агент;
    Должность = ДанныеДляПечати.ДолжностьВЛице;
    ДиректорПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
    ОрганизацияПолноеНаименование = ДанныеДляПечати.Организация.НаименованиеПолное;
    ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице;
    ФИОРуководителяАгента = ДанныеДляПечати.ФИОРуководителяВлице;
	//Стр =Символы.Таб +Символы.Таб+ "Публичное Акционерное Общество """+СокрЛП(Контрагент.НаименованиеПолное) + 
	Стр =Символы.Таб +Символы.Таб+ СокрЛП(Контрагент.НаименованиеПолное) + 
	", именуемое в дальнейшем """+Параметр1+""", в лице " + Должность + " " + 
	ДиректорПринципала + " действующего на основании доверенности " + ДанныеДляПечати.ДоверенностьДиректора + 
	", с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем """+Параметр2+""", в лице "+ДолжностьАгента+
	" "+ФИОРуководителяАгента+" действующей на основании устава, именуемые в дальнейшем ""Стороны"", настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(ДатаНачала, "ДЛФ=DD") + " по " + Формат(ДатаОкончания, "ДЛФ=DD") + " были обработаны и переданы "+Параметр1+"у следующие возвращаемые заказы:";   //№509/15 от 08.09.2015
    ОбластьШапка.Параметры.Стр = Стр;
    ТабДок.Вывести(ОбластьШапка);
    
    //Заполнение и вывод строки
    НомерСтроки = 1;
	//Результат.Свернуть("НомерЗаказа, ДатаАннулирования, ДатаВозврата, РегионДоставки", "СтоимостьЗаказа, СтоимостьУслуг");
	//Результат.Сортировать("НомерЗаказа");
	Результат.Свернуть("Номер, НомерВнешнегоЗаказа, ДатаАннулирования, ДатаВозврата, РегионДоставки, ЗонаТарификации", "СтоимостьЗаказа, СтоимостьУслуг");
    Результат.Сортировать("Номер");
    Для каждого Строка Из Результат Цикл
        ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
		ОбластьСтрока.Параметры.РегионДоставки = Строка.ЗонаТарификации;
        ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
        ТабДок.Вывести(ОбластьСтрока);
        НомерСтроки = НомерСтроки + 1;
    КонецЦикла;	
    НомерСтроки = НомерСтроки - 1;
    
    //Заполнение и вывод итогов
	
	//Задача № 2742 
	СтавкаНДСДляОтчета = Отчеты.ОтчетАгента.ЗначениеСтавкиНСДДляРасчетаУслуг(КонецДня(ДатаОкончания));
	КоэффВыделенияНДС = СтавкаНДСДляОтчета/(100+СтавкаНДСДляОтчета);
	КоэффНачисленияНДС = СтавкаНДСДляОтчета/100;
	//Задача № 2742 
	
    СтоимостьЗаказаИтого = Результат.Итог("СтоимостьЗаказа");
    //СтоимостьЗаказаИтогоНДС = Число(Формат(СтоимостьЗаказаИтого*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	СтоимостьЗаказаИтогоНДС = Число(Формат(СтоимостьЗаказаИтого*КоэффВыделенияНДС,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	
	//СтоимостьУслугИтогоНДС = Окр(Результат.Итог("СтоимостьУслуг")/100*18,2);//Задача № 2724 //Число(Формат(СтоимостьУслугИтого*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
    СтоимостьУслугИтогоНДС = Окр(Результат.Итог("СтоимостьУслуг")*КоэффНачисленияНДС,2);
	
	СтоимостьУслугИтого = Результат.Итог("СтоимостьУслуг") + СтоимостьУслугИтогоНДС;

	ОбластьИтого.Параметры.СтавкаНДС = СтавкаНДСДляОтчета;
    ОбластьИтого.Параметры.СтоимостьЗаказаИтогоБезНДС = СтоимостьЗаказаИтого;//СтоимостьЗаказаИтого-СтоимостьЗаказаИтогоНДС;
    ОбластьИтого.Параметры.СтоимостьУслугИтогоБезНДС = СтоимостьУслугИтого-СтоимостьУслугИтогоНДС; 
    ОбластьИтого.Параметры.СтоимостьЗаказаИтогоНДС = СтоимостьЗаказаИтогоНДС; 
    ОбластьИтого.Параметры.СтоимостьУслугИтогоНДС = СтоимостьУслугИтогоНДС;
    ОбластьИтого.Параметры.СтоимостьЗаказаИтого = СтоимостьЗаказаИтого;
    ОбластьИтого.Параметры.СтоимостьУслугИтого = СтоимостьУслугИтого;
    ТабДок.Вывести(ОбластьИтого);
    
    //Заполнение подвала
    //СумВозн = ОбластьИтого.Параметры.СтоимостьУслугИтого;
    //НДС = СумВозн*18/118;
    СтрПодвал = "Общая стоимость услуг по данному отчету "+Формат(СтоимостьУслугИтого,"ЧДЦ=2; ЧГ=0")+" руб. "+"(" + ЧислоПрописью(СтоимостьУслугИтого,"Л = ru_RU; ДП = Истина","рубль,рубля,рублей,м,копейка,копейки,копеек,ж")+" )"  + " руб, в том числе НДС " + Строка(СтавкаНДСДляОтчета) + "% "+Формат(СтоимостьУслугИтогоНДС,"ЧДЦ=2; ЧГ=0")+" руб.";
    Стр2Подвал = "Общее количество обработанных заказов "+Строка(НомерСтроки)+" "+"("+ЧислоПрописью(НомерСтроки,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+") шт."+Символы.ПС+"Услуги оказаны в полном объеме, все перечисленные Товары возвращены на Склад "+Параметр1+"а.В Отчет об обработке возвращаемых Заказов включены Товары по Заказам, которые были фактически возвращены на Склад "+Параметр1+"а.";
    ОбластьПодвал.Параметры.Стр = СтрПодвал;
    ОбластьПодвал.Параметры.Стр2 = Стр2Подвал;
    ОбластьПодвал.Параметры.Параметр1 = Параметр1;
    ОбластьПодвал.Параметры.Параметр2 = Параметр2;
    ОбластьПодвал.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
    ОбластьПодвал.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
    ОбластьПодвал.Параметры.ДожностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
    ОбластьПодвал.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
   // ОбластьПодвал.Параметры.НаименованиеОрганизации = ДанныеДляПечати.Организация.Наименование;
    ТабДок.Вывести(ОбластьПодвал);    
    
    //Параметры табличного документа
    ТабДок.АвтоМасштаб = Истина;
    //Отступы
    ТабДок.ПолеСверху = 20;
    ТабДок.ПолеСнизу = 20;
    ТабДок.ПолеСлева = 30;
    ТабДок.ПолеСправа = 15;
    
    Возврат ТабДок;
КонецФункции // ()

&НаСервере
Функция СформироватьТабличныйДокументПриложение3_1(Результат,Контрагент,ДатаНачала,ДатаОкончания,ТекущаяСтраница)
	
	//Результат = СформироватьТаблицу();
	
	ТабДок = Новый ТабличныйДокумент;
    Макет = Отчеты.ОтчетАгентаДМ.ПолучитьМакет("Макет"+ТекущаяСтраница);
    ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
    ОбластьСтрокаЗаказ = Макет.ПолучитьОбласть("ОбластьСтрокаЗаказ");
    ОбластьСтрокаТовар = Макет.ПолучитьОбласть("ОбластьСтрокаТовар");
    ОбластьИтого = Макет.ПолучитьОбласть("ОбластьИтого");
    ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
    
    //Получим данные для печати
    ДанныеДляПечати =  СобратьДанныеДляПечати(Контрагент,ДатаОкончания);
    
    //Заполнение и вывод шапки
    ОбластьШапка.Параметры.АгентскийДоговор =  ДанныеДляПечати.АгентскийДоговор;//"№ 04-АГ-15 от 01 ноября 2015г.";//было  ДанныеДляПечати.АгентскийДоговор;
    ОбластьШапка.Параметры.ДатаОтчетаПолная = Формат(ДатаОкончания,"ДЛФ=ДД");
    ТабДок.Вывести(ОбластьШапка);
    
    //Заполнение и вывод строк
    РезультатГруппировкаЗаказы = Результат.Скопировать();
	//РезультатГруппировкаЗаказы.Свернуть("НомерЗаказа,РегионДоставки,ДатаПередачи,СтоимостьДоставки,СуммаОплаты,СтоимостьУслугЗаПриемДС,ВСЕГО","СтоимостьТовара,СуммаПолученная,ЧастичныйВозврат");
    РезультатГруппировкаЗаказы.Свернуть("Номер,ВнешнийНомер,РегионДоставки,ЗонаТарификации,ДатаПередачи,СтоимостьДоставки,СуммаОплаты,СтоимостьУслугЗаПриемДС,ВСЕГО","СтоимостьТовара,СуммаПолученная,ЧастичныйВозврат");
	НомерСтроки = 1;
    Для каждого СтрЗаказ Из РезультатГруппировкаЗаказы Цикл
		//РезультатДетальныеЗаписи = Результат.НайтиСтроки(Новый Структура("НомерЗаказа",СтрЗаказ.НомерЗаказа));
		РезультатДетальныеЗаписи = Результат.НайтиСтроки(Новый Структура("Номер",СтрЗаказ.Номер));
        ЗаполнитьЗначенияСвойств(ОбластьСтрокаЗаказ.Параметры,СтрЗаказ);
        ОбластьСтрокаЗаказ.Параметры.НомерСтроки = НомерСтроки;
        ОбластьСтрокаЗаказ.Параметры.СуммаПолученная = СтрЗаказ.СуммаПолученная+СтрЗаказ.СтоимостьДоставки;
		ОбластьСтрокаЗаказ.Параметры.РегионДоставки = СтрЗаказ.ЗонаТарификации;
        ТабДок.Вывести(ОбластьСтрокаЗаказ);
        
        Для каждого СтрТовар Из РезультатДетальныеЗаписи Цикл
            ЗаполнитьЗначенияСвойств(ОбластьСтрокаТовар.Параметры,СтрТовар);
            //ОбластьСтрокаТовар.Параметры.НомерСтроки = НомерСтроки;
            ТабДок.Вывести(ОбластьСтрокаТовар);
        КонецЦикла;
        
        НомерСтроки = НомерСтроки + 1;
    КонецЦикла;	
    
    
    //Заполнение и вывод итогов
	
	//Задача № 2742 
	СтавкаНДСДляОтчета = Отчеты.ОтчетАгента.ЗначениеСтавкиНСДДляРасчетаУслуг(КонецДня(ДатаОкончания));
	КоэффВыделенияНДС = СтавкаНДСДляОтчета/(100+СтавкаНДСДляОтчета);
	КоэффНачисленияНДС = СтавкаНДСДляОтчета/100;
	//Задача № 2742 

	
    //Итого с НДС
    СтоимостьТовара = РезультатГруппировкаЗаказы.Итог("СтоимостьТовара");
    СтоимостьДоставки = РезультатГруппировкаЗаказы.Итог("СтоимостьДоставки");
    СуммаОплаты = РезультатГруппировкаЗаказы.Итог("СуммаОплаты");
    СуммаПолученная = РезультатГруппировкаЗаказы.Итог("СуммаПолученная") + СтоимостьДоставки;
    ЧастичныйВозврат = РезультатГруппировкаЗаказы.Итог("ЧастичныйВозврат");
    СтоимостьУслугЗаПриемДС = РезультатГруппировкаЗаказы.Итог("СтоимостьУслугЗаПриемДС");
    ВСЕГО = РезультатГруппировкаЗаказы.Итог("ВСЕГО");
    
    //Итого НДС
    //СтоимостьТовараНДС = Число(Формат(СтоимостьТовара*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	СтоимостьТовараНДС = Число(Формат(СтоимостьТовара*КоэффВыделенияНДС,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
    //СтоимостьДоставкиНДС = Число(Формат(СтоимостьДоставки*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	СтоимостьДоставкиНДС = Число(Формат(СтоимостьДоставки*КоэффВыделенияНДС,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
    //СуммаОплатыНДС = Число(Формат(СуммаОплаты*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	СуммаОплатыНДС = Число(Формат(СуммаОплаты*КоэффВыделенияНДС,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	//СуммаПолученнаяНДС = Число(Формат(СуммаПолученная*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	СуммаПолученнаяНДС = Число(Формат(СуммаПолученная*КоэффВыделенияНДС,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	//ЧастичныйВозвратНДС = Число(Формат(ЧастичныйВозврат*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	ЧастичныйВозвратНДС = Число(Формат(ЧастичныйВозврат*КоэффВыделенияНДС,"ЧЦ=15; ЧДЦ=2; ЧН=0"));

	//СтоимостьУслугЗаПриемДСНДС = Окр(СтоимостьУслугЗаПриемДС/100*18,2);//Число(Формат(СтоимостьУслугЗаПриемДС*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	СтоимостьУслугЗаПриемДСНДС = Окр(СтоимостьУслугЗаПриемДС*КоэффНачисленияНДС,2);
	
	//ВСЕГОНДС = Окр(ВСЕГО/100*18,2);//Число(Формат(ВСЕГО*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
    ВСЕГОНДС = Окр(ВСЕГО*КоэффНачисленияНДС,2);
	
	ОбластьИтого.Параметры.СтавкаНДС = СтавкаНДСДляОтчета;
    ОбластьИтого.Параметры.СтоимостьТовараБезНДС = СтоимостьТовара;//СтоимостьТовара-СтоимостьТовараНДС;
    ОбластьИтого.Параметры.СтоимостьДоставкиБезНДС = СтоимостьДоставки;//СтоимостьДоставки-СтоимостьДоставкиНДС;
    ОбластьИтого.Параметры.СуммаОплатыБезНДС = СуммаОплаты;//СуммаОплаты-СуммаОплатыНДС;
    ОбластьИтого.Параметры.СуммаПолученнаяБезНДС = СуммаПолученная;//СуммаПолученная-СуммаПолученнаяНДС;
    ОбластьИтого.Параметры.ЧастичныйВозвратБезНДС = ЧастичныйВозврат;//ЧастичныйВозврат-ЧастичныйВозвратНДС;
	
	ОбластьИтого.Параметры.СтоимостьУслугЗаПриемДСБезНДС = СтоимостьУслугЗаПриемДС;//СтоимостьУслугЗаПриемДС-СтоимостьУслугЗаПриемДСНДС;
    ОбластьИтого.Параметры.ВСЕГОБезНДС = ВСЕГО;//ВСЕГО-ВСЕГОНДС;
    
    ОбластьИтого.Параметры.СтоимостьТовараНДС = СтоимостьТовараНДС;
    ОбластьИтого.Параметры.СтоимостьДоставкиНДС = СтоимостьДоставкиНДС;
    ОбластьИтого.Параметры.СуммаОплатыНДС = СуммаОплатыНДС;
    ОбластьИтого.Параметры.СуммаПолученнаяНДС = СуммаПолученнаяНДС;
    ОбластьИтого.Параметры.ЧастичныйВозвратНДС = ЧастичныйВозвратНДС;
	
	ОбластьИтого.Параметры.СтоимостьУслугЗаПриемДСНДС = СтоимостьУслугЗаПриемДСНДС;
    ОбластьИтого.Параметры.ВСЕГОНДС = ВСЕГОНДС;
    
    ОбластьИтого.Параметры.СтоимостьТовара = СтоимостьТовара;
    ОбластьИтого.Параметры.СтоимостьДоставки = СтоимостьДоставки;
    ОбластьИтого.Параметры.СуммаОплаты = СуммаОплаты;
    ОбластьИтого.Параметры.СуммаПолученная = СуммаПолученная;
    ОбластьИтого.Параметры.ЧастичныйВозврат = ЧастичныйВозврат;
	
	ОбластьИтого.Параметры.СтоимостьУслугЗаПриемДС = СтоимостьУслугЗаПриемДС+СтоимостьУслугЗаПриемДСНДС;
    ОбластьИтого.Параметры.ВСЕГО = ВСЕГО+ВСЕГОНДС;
	
	ОбластьИтого.Параметры.КоличествоЗаказов = НомерСтроки-1;
    ТабДок.Вывести(ОбластьИтого);
    
    
    //Заполнение подвала
    Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    ОбластьПодвал.Параметры.Параметр1 = Параметр1;
    ОбластьПодвал.Параметры.Параметр2 = Параметр2;
    ОбластьПодвал.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
    ОбластьПодвал.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
    ОбластьПодвал.Параметры.ДожностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
    ОбластьПодвал.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
    //ОбластьПодвал.Параметры.НаименованиеОрганизации = ДанныеДляПечати.Организация.Наименование;
    ТабДок.Вывести(ОбластьПодвал);    
    
    //Параметры табличного документа
    ТабДок.АвтоМасштаб = Истина;
    ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
    //Отступы
    ТабДок.ПолеСверху = 20;
    ТабДок.ПолеСнизу = 10;
    ТабДок.ПолеСлева = 19;
    ТабДок.ПолеСправа = 13;
    
    Возврат ТабДок;
КонецФункции // ()

&НаСервере
Функция СформироватьТабличныйДокументПриложение5(Результат,Контрагент,ДатаНачала,ДатаОкончания,ТекущаяСтраница)
	
	//Результат = СформироватьТаблицу();
	
	ТабДок = Новый ТабличныйДокумент;
    Макет = Отчеты.ОтчетАгентаДМ.ПолучитьМакет("Макет"+ТекущаяСтраница);
    ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
    ОбластьСтрокаЗаказ = Макет.ПолучитьОбласть("ОбластьСтрокаЗаказ");
    ОбластьСтрокаТовар = Макет.ПолучитьОбласть("ОбластьСтрокаТовар");
    ОбластьИтого = Макет.ПолучитьОбласть("ОбластьИтого");
    ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
    
    //Получим данные для печати
    ДанныеДляПечати =  СобратьДанныеДляПечати(Контрагент,ДатаОкончания);
    
    //Заполнение и вывод шапки
    ОбластьШапка.Параметры.ДатаОтчетаПолная = Формат(ДатаОкончания,"ДЛФ=ДД");
    //ОбластьШапка.Параметры.ДатаОтчета = Формат(ДатаОкончания,"ДФ=dd");
    //ОбластьШапка.Параметры.МесяцОтчета = Формат(ДатаОкончания,"ДФ=MMMM");
    //ОбластьШапка.Параметры.ГодОтчета = Формат(ДатаОкончания,"ДФ=yyyy");
    
    Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, ДатаОкончания), "ПолноеНаименование,ИНН,КПП");
    Агент = ДанныеДляПечати.Агент;
    Должность = ДанныеДляПечати.ДолжностьВЛице;
    ДиректорПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
    ОрганизацияПолноеНаименование = ДанныеДляПечати.Организация.НаименованиеПолное;
    ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице;
    ФИОРуководителяАгента = ДанныеДляПечати.ФИОРуководителяВлице;
	//Стр =Символы.Таб +Символы.Таб+ "Публичное Акционерное Общество """+СокрЛП(Контрагент.НаименованиеПолное) + 
	Стр =Символы.Таб +Символы.Таб+ СокрЛП(Контрагент.НаименованиеПолное) + 
	", именуемое в дальнейшем """+Параметр1+""", в лице " + Должность + " " + ДиректорПринципала + 
	"действующего на основании доверенности " + ДанныеДляПечати.ДоверенностьДиректора + ", с одной стороны, и "+ОрганизацияПолноеНаименование+", именуемое в дальнейшем """+Параметр2+""", в лице "+ДолжностьАгента+" "+ФИОРуководителяАгента+"действующей на основании устава, именуемые в дальнейшем ""Стороны"", настоящим Отчетом удостоверяют, что остаток товаров по Заказам, переданным для доставки Клиентам по состоянию на  "+ Формат(ДатаОкончания, "ДЛФ=DD") + " составляет:";
    ОбластьШапка.Параметры.АгентскийДоговор = ДанныеДляПечати.АгентскийДоговор;//"№ 04-АГ-15 от 01 ноября 2015г.";//было ДанныеДляПечати.АгентскийДоговор;
    ОбластьШапка.Параметры.Стр = Стр;
    ТабДок.Вывести(ОбластьШапка);
    
    //Заполнение и вывод строк
    РезультатГруппировкаЗаказы = Результат.Скопировать();
	//РезультатГруппировкаЗаказы.Свернуть("НомерЗаказа,ДатаАннулирования,СтоимостьУслуг","СтоимостьТовара, Количество");
    РезультатГруппировкаЗаказы.Свернуть("Номер,НомерВнешнегоЗаказа,ДатаАннулирования,СтоимостьУслуг, СтатусЗаказа","СтоимостьТовара, Количество");
    НомерСтроки = 1;
    Для каждого СтрЗаказ Из РезультатГруппировкаЗаказы Цикл
        РезультатДетальныеЗаписи = Результат.НайтиСтроки(Новый Структура("Номер",СтрЗаказ.Номер));
        ЗаполнитьЗначенияСвойств(ОбластьСтрокаЗаказ.Параметры,СтрЗаказ);
		ОбластьСтрокаЗаказ.Параметры.СтатусЗаказа = СтрЗаказ.СтатусЗаказа;
        ОбластьСтрокаЗаказ.Параметры.НомерСтроки = НомерСтроки;
        ТабДок.Вывести(ОбластьСтрокаЗаказ);
        
        Для каждого СтрТовар Из РезультатДетальныеЗаписи Цикл
            ЗаполнитьЗначенияСвойств(ОбластьСтрокаТовар.Параметры,СтрТовар);
            //ОбластьСтрокаТовар.Параметры.НомерСтроки = НомерСтроки;
			ОбластьСтрокаТовар.Параметры.РегионДоставки = СтрТовар.ЗонаТарификации;
            ТабДок.Вывести(ОбластьСтрокаТовар);
        КонецЦикла;
        
        НомерСтроки = НомерСтроки + 1;
    КонецЦикла;	
    
    
    //Заполнение и вывод итогов
    ОбластьИтого.Параметры.СтоимостьТовара = РезультатГруппировкаЗаказы.Итог("СтоимостьТовара");
    ОбластьИтого.Параметры.СтоимостьУслуг = РезультатГруппировкаЗаказы.Итог("СтоимостьУслуг");
	ОбластьИтого.Параметры.Количество = РезультатГруппировкаЗаказы.Итог("Количество");
    ТабДок.Вывести(ОбластьИтого);
    
    ////Заполнение подвала
    //СумВозн = ОбластьИтого.Параметры.СтоимостьЗаказаИтого;
    //НДС = СумВозн*18/118;
    //СтрПодвал = "Общая стоимость услуг по данному отчету "+Формат(СумВозн,"ЧДЦ=2; ЧГ=0")+" руб. "+"(" + ЧислоПрописью(СумВозн,"Л = ru_RU; ДП = Истина","рубль,рубля,рублей,м,копейка,копейки,копеек,ж")+" )"  + " руб, в том числе НДС 18% "+Формат(НДС,"ЧДЦ=2; ЧГ=0")+" руб.";
    //Стр2Подвал = "Общее количество обработанных заказов "+Строка(НомерСтроки)+" "+"("+ЧислоПрописью(НомерСтроки,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+") шт."+Символы.ПС+"Услуги оказаны в полном объеме, все перечисленные Товары возвращены на Склад "+Параметр1+"а.В Отчет об обработке возвращаемых Заказов включены Товары по Заказам, которые были фактически возвращены на Склад "+Параметр1+"а.";
    //ОбластьПодвал.Параметры.Стр = СтрПодвал;
    //ОбластьПодвал.Параметры.Стр2 = Стр2Подвал;
    ОбластьПодвал.Параметры.Параметр1 = Параметр1;
    ОбластьПодвал.Параметры.Параметр2 = Параметр2;
    ОбластьПодвал.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
    ОбластьПодвал.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
    ОбластьПодвал.Параметры.ДожностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
    ОбластьПодвал.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
   // ОбластьПодвал.Параметры.НаименованиеОрганизации = ДанныеДляПечати.Организация.Наименование;
    ТабДок.Вывести(ОбластьПодвал);    
    
    //Параметры табличного документа
    ТабДок.АвтоМасштаб = Истина;
    ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
    //Отступы
    ТабДок.ПолеСверху = 20;
    ТабДок.ПолеСнизу = 20;
    ТабДок.ПолеСлева = 30;
    ТабДок.ПолеСправа = 15;
    
    Возврат ТабДок;
КонецФункции // ()

&НаСервере
Функция СформироватьТабличныйДокументПриложение3(Результат,Контрагент,ДатаНачала,ДатаОкончания,ТекущаяСтраница)
	
	//Результат = СформироватьТаблицу();
	
	ТабДок = Новый ТабличныйДокумент;
    Макет = Отчеты.ОтчетАгентаДМ.ПолучитьМакет("Макет"+ТекущаяСтраница);
    ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
    ОбластьСтрокаЗаказ = Макет.ПолучитьОбласть("ОбластьСтрокаЗаказ");
    ОбластьСтрокаТовар = Макет.ПолучитьОбласть("ОбластьСтрокаТовар");
    ОбластьИтого = Макет.ПолучитьОбласть("ОбластьИтого");
    ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
    
    //Получим данные для печати
    ДанныеДляПечати =  СобратьДанныеДляПечати(Контрагент,ДатаОкончания);
    
    //Заполнение и вывод шапки
    Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, ДатаОкончания), "ПолноеНаименование,ИНН,КПП");
    Агент = ДанныеДляПечати.Агент;
    Должность = ДанныеДляПечати.ДолжностьВЛице;
    ДиректорПринципала = ДанныеДляПечати.ДиректорПринципалаВЛице;
    ОрганизацияПолноеНаименование = ДанныеДляПечати.Организация.НаименованиеПолное;
    ДолжностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизацииВлице;
    ФИОРуководителяАгента = ДанныеДляПечати.ФИОРуководителяВлице;
	//Стр =Символы.Таб +Символы.Таб+ "Публичное Акционерное Общество """+СокрЛП(Контрагент.НаименованиеПолное) + 
	Стр =Символы.Таб +Символы.Таб+ СокрЛП(Контрагент.НаименованиеПолное) + 
	", именуемое в дальнейшем """+Параметр1+""", в лице " + Должность + " " + ДиректорПринципала + 
	" действующего на основании доверенности " + ДанныеДляПечати.ДоверенностьДиректора + ", с одной стороны, и "+ОрганизацияПолноеНаименование+
	", именуемое в дальнейшем """+Параметр2+""", в лице "+ДолжностьАгента+" "+ФИОРуководителяАгента+
	" действующей на основании устава, именуемые в дальнейшем ""Стороны"", настоящим Отчетом удостоверяют, что в соответствии с условиями Агентского договора "+ДанныеДляПечати.АгентскийДоговор +" в период с " + Формат(ДатаНачала, "ДЛФ=DD") + " по " + Формат(ДатаОкончания, "ДЛФ=DD") +Параметр1+"ом были приняты от Клиента денежные средства за переданные заказы:";
    ОбластьШапка.Параметры.Стр = Стр;
	
	ОбластьШапка.Параметры.АгентскийДоговор = ДанныеДляПечати.АгентскийДоговор; 
	//ОбластьШапка.Параметры.АгентскийДоговор = "№ 04-АГ-15 от 01 ноября 2015г.";//было  ДанныеДляПечати.АгентскийДоговор;
    ОбластьШапка.Параметры.ДатаОтчетаПолная = Формат(ДатаОкончания,"ДЛФ=ДД");
    ТабДок.Вывести(ОбластьШапка);
    
    //Заполнение и вывод строк
    //РезультатГруппировкаЗаказы = Результат.Скопировать();
    //РезультатГруппировкаЗаказы.Свернуть("НомерЗаказа,РегионДоставки,ДатаПередачи,СтоимостьДоставки,СуммаОплаты,СтоимостьУслугЗаПриемДС,ВСЕГО","СтоимостьТовара,СуммаПолученная,ЧастичныйВозврат");
    НомерСтроки = 1;
    Для каждого СтрЗаказ Из Результат Цикл
        //РезультатДетальныеЗаписи = Результат.НайтиСтроки(Новый Структура("НомерЗаказа",СтрЗаказ.НомерЗаказа));
        ЗаполнитьЗначенияСвойств(ОбластьСтрокаЗаказ.Параметры,СтрЗаказ);
        ОбластьСтрокаЗаказ.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтрокаЗаказ.Параметры.РегионДоставки = СтрЗаказ.ЗонаТарификации;
		
		ТабДок.Вывести(ОбластьСтрокаЗаказ);
        
        //Для каждого СтрТовар Из РезультатДетальныеЗаписи Цикл
        //    ЗаполнитьЗначенияСвойств(ОбластьСтрокаТовар.Параметры,СтрТовар);
        //    //ОбластьСтрокаТовар.Параметры.НомерСтроки = НомерСтроки;
        //    ТабДок.Вывести(ОбластьСтрокаТовар);
        //КонецЦикла;
        
        НомерСтроки = НомерСтроки + 1;
    КонецЦикла;	
    
    
    //Заполнение и вывод итогов
	
	//Задача № 2742 
	СтавкаНДСДляОтчета = Отчеты.ОтчетАгента.ЗначениеСтавкиНСДДляРасчетаУслуг(КонецДня(ДатаОкончания));
	КоэффВыделенияНДС = СтавкаНДСДляОтчета/(100+СтавкаНДСДляОтчета);
	КоэффНачисленияНДС = СтавкаНДСДляОтчета/100;
	//Задача № 2742 	
	
    //Итого с НДС
    СтоимостьТовара = Результат.Итог("СтоимостьТовара");
    СтоимостьДоставки = Результат.Итог("СтоимостьДоставки");
    СуммаОплаты = Результат.Итог("СуммаОплаты");
    СуммаПолученная = Результат.Итог("СуммаПолученная");
    ЧастичныйВозврат = Результат.Итог("ЧастичныйВозврат");
            
    //Итого НДС
    //СтоимостьТовараНДС = Число(Формат(СтоимостьТовара*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	СтоимостьТовараНДС = Число(Формат(СтоимостьТовара*КоэффВыделенияНДС,"ЧЦ=15; ЧДЦ=2; ЧН=0"));

    //СтоимостьДоставкиНДС = Число(Формат(СтоимостьДоставки*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	СтоимостьДоставкиНДС = Число(Формат(СтоимостьДоставки*КоэффВыделенияНДС,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	
    //СуммаОплатыНДС = Число(Формат(СуммаОплаты*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	СуммаОплатыНДС = Число(Формат(СуммаОплаты*КоэффВыделенияНДС,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	
    //СуммаПолученнаяНДС = Число(Формат(СуммаПолученная*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	СуммаПолученнаяНДС = Число(Формат(СуммаПолученная*КоэффВыделенияНДС,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	
    //ЧастичныйВозвратНДС = Число(Формат(ЧастичныйВозврат*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	ЧастичныйВозвратНДС = Число(Формат(ЧастичныйВозврат*КоэффВыделенияНДС,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	
	СтоимостьУслугЗаПриемДС = Результат.Итог("СтоимостьУслугЗаПриемДС");
	//СтоимостьУслугЗаПриемДСНДС = Окр(СтоимостьУслугЗаПриемДС/100*18,2);//Число(Формат(СтоимостьУслугЗаПриемДС*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));	
	СтоимостьУслугЗаПриемДСНДС = Окр(СтоимостьУслугЗаПриемДС*КоэффНачисленияНДС,2);
	
	//ВСЕГОНДС = Окр(Результат.Итог("ВСЕГО")/100*18,2);//Число(Формат(ВСЕГО*18/118,"ЧЦ=15; ЧДЦ=2; ЧН=0"));	
	ВСЕГОНДС = Окр(Результат.Итог("ВСЕГО")*КоэффНачисленияНДС,2);
	
	ВСЕГО = Результат.Итог("ВСЕГО");

	ОбластьИтого.Параметры.СтавкаНДС = СтавкаНДСДляОтчета;	
    ОбластьИтого.Параметры.СтоимостьТовараБезНДС = СтоимостьТовара;//СтоимостьТовара-СтоимостьТовараНДС;
    ОбластьИтого.Параметры.СтоимостьДоставкиБезНДС = СтоимостьДоставки;//СтоимостьДоставки-СтоимостьДоставкиНДС;
    ОбластьИтого.Параметры.СуммаОплатыБезНДС = СуммаОплаты;//СуммаОплаты-СуммаОплатыНДС;
    ОбластьИтого.Параметры.СуммаПолученнаяБезНДС = СуммаПолученная;//СуммаПолученная-СуммаПолученнаяНДС;
    ОбластьИтого.Параметры.ЧастичныйВозвратБезНДС = ЧастичныйВозврат;//ЧастичныйВозврат-ЧастичныйВозвратНДС;
    ОбластьИтого.Параметры.СтоимостьУслугЗаПриемДСБезНДС = СтоимостьУслугЗаПриемДС;//СтоимостьУслугЗаПриемДС-СтоимостьУслугЗаПриемДСНДС;
    ОбластьИтого.Параметры.ВСЕГОБезНДС = ВСЕГО;//ВСЕГО-ВСЕГОНДС;
    
    ОбластьИтого.Параметры.СтоимостьТовараНДС = СтоимостьТовараНДС;
    ОбластьИтого.Параметры.СтоимостьДоставкиНДС = СтоимостьДоставкиНДС;
    ОбластьИтого.Параметры.СуммаОплатыНДС = СуммаОплатыНДС;
    ОбластьИтого.Параметры.СуммаПолученнаяНДС = СуммаПолученнаяНДС;
    ОбластьИтого.Параметры.ЧастичныйВозвратНДС = ЧастичныйВозвратНДС;
    ОбластьИтого.Параметры.СтоимостьУслугЗаПриемДСНДС = СтоимостьУслугЗаПриемДСНДС;
    ОбластьИтого.Параметры.ВСЕГОНДС = ВСЕГОНДС;
    
    ОбластьИтого.Параметры.СтоимостьТовара = СтоимостьТовара;
    ОбластьИтого.Параметры.СтоимостьДоставки = СтоимостьДоставки;
    ОбластьИтого.Параметры.СуммаОплаты = СуммаОплаты;
    ОбластьИтого.Параметры.СуммаПолученная = СуммаПолученная;
    ОбластьИтого.Параметры.ЧастичныйВозврат = ЧастичныйВозврат;
    ОбластьИтого.Параметры.СтоимостьУслугЗаПриемДС = СтоимостьУслугЗаПриемДС + СтоимостьУслугЗаПриемДСНДС;
    ОбластьИтого.Параметры.ВСЕГО = ВСЕГО+ВСЕГОНДС;
    ОбластьИтого.Параметры.КоличествоЗаказов = НомерСтроки-1;
    ТабДок.Вывести(ОбластьИтого);
	
	ОбщаяСтроимостьУслуг = ВСЕГО+СтоимостьУслугЗаПриемДС +  СтоимостьУслугЗаПриемДСНДС + ВСЕГОНДС;
    
    //Заполнение подвала
    Параметр1 = ДанныеДляПечати.Параметр1; 
    Параметр2 = ДанныеДляПечати.Параметр2;
    ОбластьПодвал.Параметры.Параметр1 = Параметр1;
    ОбластьПодвал.Параметры.Параметр2 = Параметр2;
    ОбластьПодвал.Параметры.ДолжностьПринципала = ДанныеДляПечати.Должность;
    ОбластьПодвал.Параметры.ФИОПринципала = ДанныеДляПечати.ДиректорПринципала;
    ОбластьПодвал.Параметры.ДожностьАгента = ДанныеДляПечати.ДолжностьРуководителяОрганизации;
    ОбластьПодвал.Параметры.ФИОАгента = ДанныеДляПечати.ФИОРуководителя;
    //ОбластьПодвал.Параметры.НаименованиеОрганизации = ДанныеДляПечати.Организация.Наименование;
    //СтрПодвал = "Общая стоимость услуг по данному отчету "+Формат(ВСЕГО+СтоимостьУслугЗаПриемДС,"ЧДЦ=2; ЧГ=0")+" руб. "+"(" + ЧислоПрописью(ВСЕГО+СтоимостьУслугЗаПриемДС,"Л = ru_RU; ДП = Истина","рубль,рубля,рублей,м,копейка,копейки,копеек,ж")+" )"  + " руб, в том числе НДС 18% "+Формат(ВСЕГОНДС+СтоимостьУслугЗаПриемДСНДС,"ЧДЦ=2; ЧГ=0")+" руб.";
	СтрПодвал = "Общая стоимость услуг по данному отчету "+Формат(ОбщаяСтроимостьУслуг,"ЧДЦ=2; ЧГ=0")+" руб. "+"(" + ЧислоПрописью(ОбщаяСтроимостьУслуг,"Л = ru_RU; ДП = Истина","рубль,рубля,рублей,м,копейка,копейки,копеек,ж")+" )"  + " руб, в том числе НДС "+Строка(СтавкаНДСДляОтчета)+"% "+Формат(ВСЕГОНДС+СтоимостьУслугЗаПриемДСНДС,"ЧДЦ=2; ЧГ=0")+" руб.";

	Стр2Подвал = "Общее количество обработанных заказов "+Строка(НомерСтроки-1)+" "+"("+ЧислоПрописью(НомерСтроки-1,"Л = ru_RU;НД = Ложь; ДП = Истина;",",,,,,,,,0")+") шт."+Символы.ПС+"Услуги по передаче оказаны в полном объеме. Стороны не имеют претензий друг к другу по оказанным услугам.";
    ОбластьПодвал.Параметры.Стр = СтрПодвал;
    ОбластьПодвал.Параметры.Стр2 = Стр2Подвал;
    ТабДок.Вывести(ОбластьПодвал);    
    
    //Параметры табличного документа
    ТабДок.АвтоМасштаб = Истина;
    ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
    //Отступы
    ТабДок.ПолеСверху = 20;
    ТабДок.ПолеСнизу = 10;
    ТабДок.ПолеСлева = 19;
    ТабДок.ПолеСправа = 13;
    
    Возврат ТабДок;
КонецФункции // ()


&НаСервере
Функция СобратьДанныеДляПечати(Контрагент,КонДата)
    ДанныеДляПечати = Новый Структура;   
    //Серегин М.В. 06.05.2015 11:10:12 получич варианты печати 
    ВариантПечати = ПолучитьПараметрыПечатиОтчетаКонтрагента(Контрагент);
    Если ВариантПечати = Перечисления.ВариантыПечатиОтчетовАгента.ПринциалАгент Тогда
        Параметр1 = "Принципал"; 
        Параметр2 = "Агент";
    Иначе
        Параметр1 = "Агент"; 
        Параметр2 = "Субагент";
    КонецЕсли; 
    ДанныеДляПечати.Вставить("Параметр1",Параметр1);
    ДанныеДляПечати.Вставить("Параметр2",Параметр2);
    
    //Серегин М.В. 06.05.2015 10:40:35 получим описание организации
    Отбор = Новый Структура();
    Отбор.Вставить("Контрагент",Контрагент);
    Отбор.Вставить("ТипОплаты",Справочники.ТипыОплат.Наличные);
    Отбор.Вставить("ТипДоставки", Перечисления.ТипыЗаказов.Доставка);
    ЗаписьРегистра = РегистрыСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(КонДата,Отбор);
    Если ЗаписьРегистра.Количество()>0 Тогда
        Организация = ЗаписьРегистра[0].Организация;
        Агент = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ЗаписьРегистра[0].Организация, КонДата),"ПолноеНаименование,ИНН,КПП"); 
    Иначе 
        Организация = Справочники.Организации.ПустаяСсылка();
        Агент = "";
    КонецЕсли; 
    ДанныеДляПечати.Вставить("Организация",Организация);
    ДанныеДляПечати.Вставить("Агент", Агент);
    
    //Серегин М.В. 06.05.2015 11:54:24 тут должны собираться данные по руководителю организации
    Отбор = Новый Структура();
    Отбор.Вставить("СтруктурнаяЕдиница",Организация);
    Отбор.Вставить("ОтветственноеЛицо",Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
    ЗаписьРегистра = РегистрыСведений.ОтветственныеЛицаОрганизации.СрезПоследних(КонДата,Отбор);
    Если ЗаписьРегистра.Количество()>0 Тогда
        РуководительСсылка = ЗаписьРегистра[0].ФизическоеЛицо;
        ФИО = ФормированиеПечатныхФорм.ФамилияИмяОтчество(РуководительСсылка,КонДата);
        ////Серегин М.В. 22.05.2015 13:37:33 старый вариант
        //ФИОруководителя = ФИО.Фамилия+" "+ФИО.Имя+" "+ФИО.Отчество;
        //Серегин М.В. 22.05.2015 13:37:42 новый  ++++
        Падеж = 2;
        Если РуководительСсылка.Пол = Перечисления.ПолФизическихЛиц.Мужской Тогда
            Пол = 1;
        Иначе
            Пол=2;
        КонецЕсли;
        
        ФИОруководителя = ФИО.Фамилия;
        //Просклоняем руководителя "в лице"
        //РезультатСклонения = "";
        //Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ФИОРуководителя, 2, РуководительСсылка.Пол, РезультатСклонения) Тогда
        //    ФИОРуководителяВлице  = РезультатСклонения
        //Иначе
        //    ФИОРуководителяВлице =  ФИОРуководителя;
        //КонецЕсли;
        //Серегин М.В. 22.05.2015 13:38:09 новый
         ФИОРуководителяВлице = smv.Падежик(ФИОруководителя,Падеж,Пол,"1"); 
         ФИОРуководителяВлице =  ФИОРуководителяВлице+" "+Лев(ФИО.Имя,1)+". "+Лев(ФИО.Отчество,1)+".";
         ФИОруководителя =  ФИОруководителя+" "+Лев(ФИО.Имя,1)+". "+Лев(ФИО.Отчество,1)+".";
        //Серегин М.В. 22.05.2015 13:38:18  -----
        
        ДолжностьРуководителяОрганизации = ЗаписьРегистра[0].Должность;
        ДолжностьРуководителяОрганизацииВлице = smv.ПадежП(ДолжностьРуководителяОрганизации.Наименование,2);
        //ДолжностьРуководителяОрганизацииВлице  = ПросклонятьФразуПоСловам(ДолжностьРуководителяОрганизации.Наименование,2);
        
    Иначе
       РуководительСсылка = Справочники.ФизическиеЛица.ПустаяСсылка();
       ФИОРуководителя = "";
       ФИОРуководителяВлице = "";
       ДолжностьРуководителяОрганизации = Справочники.ДолжностиОрганизаций.ПустаяСсылка();
       ДолжностьРуководителяОрганизацииВлице = "";
   КонецЕсли;
   //Серегин М.В. 22.05.2015 13:35:07 костыль
   
    ДанныеДляПечати.Вставить("Руководитель",РуководительСсылка);
    ДанныеДляПечати.Вставить("ФИОРуководителя",ФИОруководителя);
    ДанныеДляПечати.Вставить("ФИОРуководителяВлице",ФИОРуководителяВлице);
    ДанныеДляПечати.Вставить("ДолжностьРуководителяОрганизации",ДолжностьРуководителяОрганизации);
    ДанныеДляПечати.Вставить("ДолжностьРуководителяОрганизацииВлице",ДолжностьРуководителяОрганизацииВлице);
	////Агентский договор
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//    "ВЫБРАТЬ
	//    |   ЗначенияСвойствОбъектов.Значение
	//    |ИЗ
	//    |   РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//    |ГДЕ
	//    |   ЗначенияСвойствОбъектов.Объект = &Объект
	//    |   И ЗначенияСвойствОбъектов.Свойство = &Свойство";
	//
	//Запрос.УстановитьПараметр("Объект", Контрагент);
	//Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.ДоговорРуководителя);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Если  ВыборкаДетальныеЗаписи.Следующий() Тогда
	//    ДанныеДляПечати.Вставить("АгентскийДоговор",ВыборкаДетальныеЗаписи.Значение);
	//Иначе
	//    ДанныеДляПечати.Вставить("АгентскийДоговор","");
	//КонецЕсли;
	
	ДанныеДляПечати.Вставить("АгентскийДоговор",СокрЛП(Контрагент.ОсновнойДоговорКонтрагента.Номер) + " от " + Формат(Контрагент.ОсновнойДоговорКонтрагента.Дата, "ДФ=dd.MM.yyyy")); //Задача № 2724 
	
    //Серегин М.В. 06.05.2015 11:54:40 Данные по директору контрагента
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |	КонтактныеЛицаКонтрагентов.Наименование КАК ИмяЛица,
                   |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица.Наименование КАК Должность,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Фамилия + "" "" + КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Имя + "" "" + КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Отчество КАК ФИО,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Пол КАК Пол,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Фамилия КАК Фамилия,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Имя КАК Имя,
                   |	КонтактныеЛицаКонтрагентов.КонтактноеЛицо.Отчество КАК Отчество,
                   |	КонтактныеЛицаКонтрагентов.Ссылка КАК Ссылка
                   |ИЗ
                   |	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
                   |ГДЕ
                   |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица В(&РолиКонтактныхЛиц)
                   |	И КонтактныеЛицаКонтрагентов.Владелец = &Владелец
                   |	И НЕ КонтактныеЛицаКонтрагентов.ПометкаУдаления";
    РолиКонтактныхЛиц = Новый СписокЗначений;
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Гендиректор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Директор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.ИндивидуальныйПредприниматель);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.КоммерческийДиректор);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.Менеджер);
    РолиКонтактныхЛиц.Добавить(Справочники.РолиКонтактныхЛиц.НайтиПоКоду("000000007"));
    Запрос.УстановитьПараметр("РолиКонтактныхЛиц",РолиКонтактныхЛиц);                   
    Запрос.УстановитьПараметр("Владелец", Контрагент);	
    Выборка = Запрос.Выполнить().Выбрать();
    Работник = "";
    ФизЛицоПол = "";
    Имя  ="";
    Отчество = "";
    ДиректорПринципалаВЛице = "";
	
	ОтветственноеЛицо = Неопределено;
	
    Если Выборка.Следующий() Тогда
        Должность = Выборка.Должность;
        //ДолжностьВЛице = ПросклонятьФразуПоСловам(Выборка.Должность,2);
        ДолжностьВЛице = smv.ПадежП(Выборка.Должность,2);
        ФИОПринципала = Выборка.ФИО;
        Пол = Выборка.Пол;
        ////Серегин М.В. 22.05.2015 13:41:49 Старый вариант
        //Работник = ФИОПринципала;
        //Серегин М.В. 22.05.2015 13:40:50 Новое
        Работник = Выборка.Фамилия;
        Имя = Выборка.Имя;
        Отчество = Выборка.Отчество;
        //Серегин М.В. 22.05.2015 13:42:44 
        ФизЛицоПол = Пол;
		
		ОтветственноеЛицо = Выборка.Ссылка; //Задача № 2724 
		
	КонецеСли;
	
	Если Не ОтветственноеЛицо = Неопределено Тогда //Задача № 2724 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Объект КАК Объект,
		|	ЗначенияСвойствОбъектов.Свойство КАК Свойство,
		|	ЗначенияСвойствОбъектов.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Свойство.Наименование = &Свойство
		|	И ЗначенияСвойствОбъектов.Объект = &Объект";
		
		Запрос.УстановитьПараметр("Объект", ОтветственноеЛицо);
		Запрос.УстановитьПараметр("Свойство", "Доверенность");
		
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
		
		Если РезультатЗапроса.Следующий() тогда
			
			ДанныеДляПечати.Вставить("ДоверенностьДиректора",РезультатЗапроса.Значение);
			
		Иначе
			
			ДанныеДляПечати.Вставить("ДоверенностьДиректора",Неопределено);
			
		КонецЕсли;		
	Иначе
		ДанныеДляПечати.Вставить("ДоверенностьДиректора",Неопределено);
	КОнецесли;	
	
    ////+++++Серегин М.В. 30.11.2015 12:28:01 не работает, не понятно почему
    //РезультатСклонения = "";
    //Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Работник, 2, ФизЛицоПол, РезультатСклонения) Тогда
    //    ДиректорПринципалаВЛице    = РезультатСклонения
    //КонецЕсли;
    Падеж = 2;
    Если ФизЛицоПол = Перечисления.ПолФизическихЛиц.Мужской Тогда
        Пол = 1;
    Иначе
        Пол=2;
    КонецЕсли;
    
    ДиректорПринципалаВЛице =smv.Падежик(Работник,Падеж,Пол,"1");
    
    //Серегин М.В. 22.05.2015 13:45:30 
    ДиректорПринципалаВЛице = ДиректорПринципалаВЛице+Лев(Имя,1)+". "+Лев(Отчество,1)+".";
    ДанныеДляПечати.Вставить("Должность",Должность);
    ДанныеДляПечати.Вставить("ДолжностьВлице",ДолжностьВЛице);
    ДанныеДляПечати.Вставить("ДиректорПринципала",Работник+" "+Лев(Имя,1)+". "+Лев(Отчество,1)+".");
    ДанныеДляПечати.Вставить("ДиректорПринципалаВЛице",ДиректорПринципалаВЛице);
    
    Возврат ДанныеДляПечати
    
КонецФункции // СобратьДанныеДляПечати()


&НаКлиенте
Функция  СформироватьТаблицу() 
    
    СхемаКомпоновки  = Отчеты.ОтчетАгентаДМ.ПолучитьМакет(Элементы.ВариантыОтчетов.ТекущаяСтраница.Имя);
    КомпоновщикНастроек = Отчет.КомпоновщикНастроек;
    НастройкиКомпоновщика = КомпоновщикНастроек.Настройки;
    
    //Инициализируем пользовательские настройки
    КомпоновщикНастроекДанных = Новый КомпоновщикНастроекКомпоновкиДанных;
    КомпоновщикНастроекДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки));
    КомпоновщикНастроекДанных.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
    КомпоновщикНастроекДанных.ЗагрузитьПользовательскиеНастройки(Отчет.КомпоновщикНастроек.ПользовательскиеНастройки);    
    
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновки, КомпоновщикНастроекДанных.ПолучитьНастройки(),,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
    
    ТаблицаРезультат = Новый ТаблицаЗначений;
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    
    ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
    
    Возврат ТаблицаРезультат;
	
КонецФункции


Функция ПросклонятьФразуПоСловам(Знач ИсходнаяСтрока, Падеж) Экспорт

    Результат = "";

    ИсходнаяСтрока = СокрЛП(ИсходнаяСтрока);
    Если СтрДлина(ИсходнаяСтрока) = 0 Тогда
        Возврат Результат;
    КонецЕсли;

    Поз = Найти(ИсходнаяСтрока, " ");
    Пока Поз > 0 Цикл

        СловоВПадеже = "";

        Слово = Лев(ИсходнаяСтрока, Поз-1);
        УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Слово,       Падеж, , СловоВПадеже);

        Результат = СокрЛП(Результат + " " + НРег(СловоВПадеже));
        ИсходнаяСтрока = СокрЛП(Сред(ИсходнаяСтрока, Поз));

        Если ПустаяСтрока(ИсходнаяСтрока) Тогда
            Прервать; // Это перестраховка. Цикл и так должен прерваться
        КонецЕсли;

        Поз = Найти(ИсходнаяСтрока, " ");
    КонецЦикла;

    Если НЕ ПустаяСтрока(ИсходнаяСтрока) Тогда // добавляем заключительное слово
        СловоВПадеже = "";
        УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ИсходнаяСтрока, Падеж, , СловоВПадеже);
        Результат = СокрЛП(Результат + " " + НРег(СловоВПадеже));

    КонецЕсли;
    Возврат Результат;

КонецФункции // ПросклонятьФразуПоСловам()


//Серегин М.В. 05.05.2015 12:50:04 
Функция ПолучитьПараметрыПечатиОтчетаКонтрагента (Контрагент)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ПараметрыПечатиОтчетовАгента.ВариантПечати
    |ИЗ
    |   РегистрСведений.ПараметрыПечатиОтчетовАгента КАК ПараметрыПечатиОтчетовАгента
    |ГДЕ
    |   ПараметрыПечатиОтчетовАгента.Контрагент В (&Контрагент)";
    
    Запрос.УстановитьПараметр("Контрагент", Контрагент);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат ВыборкаДетальныеЗаписи.ВариантПечати;
    Иначе
        Возврат Перечисления.ВариантыПечатиОтчетовАгента.ПринциалАгент;
    КонецЕсли;;
КонецФункции // ()


