Функция СформироватьОтправитьПоПочте(ДатаНачала, ДатаОкончания, КоличествоНеОтправленныхПисем) Экспорт
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[0].Значение = ДатаНачала;
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[1].Значение = ДатаОкончания;
	
	//КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[2].Значение = Период;
	//КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[2].Использование = Истина;
	
	Настройки 					= КомпоновщикНастроек.Настройки;
    ДанныеРасшифровки 			= Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки 			= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки);	
	
    //<--------------------------------------------------------------------------------------->//
	//датаНачала 			 = Период.ДатаНачала;
	//датаОкончания 		 = Период.ДатаОкончания;
	ОтправленныеОтчетыТЗ = ПолучитьОтправленныеОтчеты(ДатаНачала, ДатаОкончания);
	
	//рассчитаем количество неотпраленных писем
	Отбор = Новый Структура;
	Отбор.Вставить("ОтчетОтправлен", "Неотправленные");
	
	времТЗ = ОтправленныеОтчетыТЗ.Скопировать(Отбор, "Количество");
	КоличествоНеОтправленныхПисем = времТЗ.Итог("Количество");
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ОтправленныеОтчетыТЗ", ОтправленныеОтчетыТЗ);
	
    //Инициализируем процессор компоновки
    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
    //<--------------------------------------------------------------------------------------->//	
	
	Результат 		= Новый ТабличныйДокумент;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Возврат Результат;
	
КонецФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	//Программно формируем отчет
    //Отменяем стандартную обработку
    СтандартнаяОбработка = Ложь;
    //Получаем схему
    Схема = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
    
    //...и настройки
    Настройки 			= КомпоновщикНастроек.ПолучитьНастройки();
    ДанныеРасшифровки 	= Новый ДанныеРасшифровкиКомпоновкиДанных;
    
    //Создаем компоновщик макета и получаем макет компоновки
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, ДанныеРасшифровки);
	
    //<--------------------------------------------------------------------------------------->//
	Период = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	
	датаНачала 			 = Период.Значение.ДатаНачала;
	датаОкончания 		 = Период.Значение.ДатаОкончания;
	ОтправленныеОтчетыТЗ = ПолучитьОтправленныеОтчеты(датаНачала, датаОкончания);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ОтправленныеОтчетыТЗ", ОтправленныеОтчетыТЗ);
	
    //Инициализируем процессор компоновки
    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
    //<--------------------------------------------------------------------------------------->//	
	
    //Очищаем документ результата
    ДокументРезультат.Очистить();
    
    //Выводим отчет в документ
    ПроцессорВывода = Новый
    ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

Функция ПолучитьОтправленныеОтчеты(датаНачала, датаОкончания)
	
	ОтправленныеОтчетыТЗ = Новый ТаблицаЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	dbo_UnloadingReports.dateEvent КАК dateEvent,
		|	dbo_UnloadingReports.typeReport КАК typeReport,
		|	dbo_UnloadingReports.sendSetting КАК sendSetting,
		|	dbo_UnloadingReports.sendType КАК sendType,
		|	dbo_UnloadingReports.recipientList КАК recipientList,
		|	dbo_UnloadingReports.report КАК report,
		|	dbo_UnloadingReports.shopId КАК shopId,
		|	dbo_UnloadingReports.reportSent КАК reportSent,
		|	dbo_UnloadingReports.region КАК region,
		|	dbo_UnloadingReports.textError КАК textError
		|ИЗ
		|	ВнешнийИсточникДанных.ВнешнийЛог.Таблица.dbo_UnloadingReports КАК dbo_UnloadingReports
		|ГДЕ
		|	НЕ dbo_UnloadingReports.isTest
		|	И dbo_UnloadingReports.dateEvent МЕЖДУ &датаНачала И &датаОкончания";
	
	Запрос.УстановитьПараметр("датаНачала", датаНачала);
	Запрос.УстановитьПараметр("датаОкончания", датаОкончания);
	ТаблицаВнешнегоЛога = Запрос.Выполнить().Выгрузить();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблВнешЛога.dateEvent КАК Период,
	               |	ТаблВнешЛога.typeReport КАК typeReport,
	               |	ТаблВнешЛога.sendSetting КАК sendSetting,
	               |	ТаблВнешЛога.sendType КАК sendType,
	               |	ТаблВнешЛога.recipientList КАК ПолучателиОтчета,
	               |	ТаблВнешЛога.report КАК report,
	               |	ТаблВнешЛога.shopId КАК shopId,
	               |	ТаблВнешЛога.reportSent КАК ОтчетОтправлен,
	               |	ТаблВнешЛога.region КАК Регион,
	               |	ТаблВнешЛога.textError КАК ТекстОшибки
	               |ПОМЕСТИТЬ ВТ_ТаблВнешЛога
	               |ИЗ
	               |	&ТаблВнешЛога КАК ТаблВнешЛога
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Контрагенты.Ссылка КАК Контрагент,
	               |	ВТ_ТаблВнешЛога.shopId КАК shopId,
	               |	ВТ_ТаблВнешЛога.Период КАК Период,
	               |	ВТ_ТаблВнешЛога.sendSetting КАК sendSetting,
	               |	ВТ_ТаблВнешЛога.ПолучателиОтчета КАК ПолучателиОтчета,
	               |	ВТ_ТаблВнешЛога.report КАК report,
	               |	ВЫБОР
	               |		КОГДА ВТ_ТаблВнешЛога.ОтчетОтправлен
	               |			ТОГДА ""Отправленные""
	               |		ИНАЧЕ ""Неотправленные""
	               |	КОНЕЦ КАК ОтчетОтправлен,
	               |	ВТ_ТаблВнешЛога.Регион КАК Регион,
	               |	ВТ_ТаблВнешЛога.ТекстОшибки КАК ТекстОшибки,
	               |	ВидыОтправляемыхОтчетов.Ссылка КАК ВидОтправляемыхОтчетов,
	               |	ТипыОтправкиОтчетов.Наименование КАК ТипОтправкиОтчета,
				   |	1 КАК Количество
	               |ИЗ
	               |	ВТ_ТаблВнешЛога КАК ВТ_ТаблВнешЛога
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	               |		ПО ВТ_ТаблВнешЛога.shopId = Контрагенты.Код
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыОтправляемыхОтчетов КАК ВидыОтправляемыхОтчетов
	               |		ПО ВТ_ТаблВнешЛога.typeReport = ВидыОтправляемыхОтчетов.Код
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОтправкиОтчетов КАК ТипыОтправкиОтчетов
	               |		ПО ВТ_ТаблВнешЛога.sendType = ТипыОтправкиОтчетов.Код
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период,
	               |	Контрагент,
	               |	ВидОтправляемыхОтчетов";
	Запрос.УстановитьПараметр("ТаблВнешЛога", ТаблицаВнешнегоЛога);
	ОтправленныеОтчетыТЗ = Запрос.Выполнить().Выгрузить();
	
	Возврат ОтправленныеОтчетыТЗ; 
	
КонецФункции
