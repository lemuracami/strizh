Процедура ВыводНаПечать(Таб, Субагент, НачДата, КонДата, МасОтб, ТипДанных = "Доставки", ТабУслугДоставки = Неопределено,Договор) Экспорт
	
	
	ЗапОбмены = Новый Запрос;
	ЗапОбмены.Текст = "ВЫБРАТЬ
	                  |	РеализацияТоваровУслугТовары.Ссылка.Номер,
	                  |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма
	                  |ИЗ
	                  |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	                  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	                  |		ПО РеализацияТоваровУслугТовары.Ссылка.Номер = ВозвратТоваровОтПокупателя.Номер
	                  |ГДЕ
	                  |	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	                  |	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
					  //|	И РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара = &Контрагент
	                  |
	                  |СГРУППИРОВАТЬ ПО
	                  |	РеализацияТоваровУслугТовары.Ссылка.Номер";
	//ЗапОбмены.УстановитьПараметр("Контрагент", Контрагент);	
	ЗапОбмены.УстановитьПараметр("ДатаНач", НачалоДня(НачДата));	
	ЗапОбмены.УстановитьПараметр("ДатаКон", КонецДня(КонДата));	
	РезОбмены = ЗапОбмены.Выполнить().Выгрузить();
	
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ЕСТЬNULL(УчетСубагентовДополнительныйОбороты.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(УчетСубагентовДополнительныйОбороты.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
	            |	УчетСубагентовДополнительныйОбороты.Реализация.Дата КАК ДатаДоставки,
	            |	ВЫБОР
	            |		КОГДА УчетСубагентовДополнительныйОбороты.СуммаОценочнаяОборот < 0
	            |			ТОГДА 0
	            |		ИНАЧЕ УчетСубагентовДополнительныйОбороты.СуммаОценочнаяОборот
	            |	КОНЕЦ КАК ОценочнаяСтоимость,
	            |	УчетСубагентовДополнительныйОбороты.ОплаченоКлиентовНалОборот КАК ПолученоСКлиента,
	            |	ВЫБОР
	            |		КОГДА УчетСубагентовДополнительныйОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.Наличные)
	            |			ТОГДА ВЫБОР
	            |					КОГДА УчетСубагентовДополнительныйОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
	            |						ТОГДА 0
	            |					ИНАЧЕ УчетСубагентовДополнительныйОбороты.СуммаДоставкиДоМКАДОборот + УчетСубагентовДополнительныйОбороты.СуммаДоставкиЗаМКАДОборот
	            |				КОНЕЦ
	            |		ИНАЧЕ 0
	            |	КОНЕЦ КАК ЗаДоставку,
	            |	УчетСубагентовДополнительныйОбороты.КассовоеОбслуживаниеОборот + УчетСубагентовДополнительныйОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждение,
	            |	УчетСубагентовДополнительныйОбороты.УслугиСДОборот КАК УслугиСД,
	            |	ВЫБОР
	            |		КОГДА УчетСубагентовДополнительныйОбороты.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
	            |				И УчетСубагентовДополнительныйОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
	            |			ТОГДА 0
	            |		ИНАЧЕ УчетСубагентовДополнительныйОбороты.БанковскаяКомиссияОборот
	            |	КОНЕЦ КАК БанковскаяКомиссия,
	            |	ВЫБОР
	            |		КОГДА УчетСубагентовДополнительныйОбороты.СуммаОценочнаяОборот <> 0
	            |			ТОГДА УчетСубагентовДополнительныйОбороты.СуммаВозвратаОборот
	            |		ИНАЧЕ 0
	            |	КОНЕЦ КАК Возврат,
	            |	ВЫБОР
	            |		КОГДА УчетСубагентовДополнительныйОбороты.СуммаЧастичногоВозвратаОборот > 0
	            |				И УчетСубагентовДополнительныйОбороты.СуммаОценочнаяОборот - УчетСубагентовДополнительныйОбороты.СуммаЧастичногоВозвратаОборот > 0
	            |			ТОГДА УчетСубагентовДополнительныйОбороты.СуммаЧастичногоВозвратаОборот
	            |		ИНАЧЕ 0
	            |	КОНЕЦ КАК ЧастичныйВозврат,
	            |	ЕСТЬNULL(РасчетУслугСД.ПоказательУслуг, ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)) КАК ПоказательУслуг,
	            |	ЕСТЬNULL(РасчетУслугСД.СуммаОборот, 0) КАК СуммаУслуг,
	            |	УчетСубагентовДополнительныйОбороты.Реализация.Номер КАК Номер
	            |ИЗ
	            |	РегистрНакопления.УчетСубагентовДополнительный.Обороты(
	            |			&НачДата,
	            |			&КонДата,
	            |			,
	            |			Субагент = &Субагент
	            |				И Договор = &Договор) КАК УчетСубагентовДополнительныйОбороты
	            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетУслугСД.Обороты КАК РасчетУслугСД
	            |		ПО УчетСубагентовДополнительныйОбороты.Реализация = РасчетУслугСД.Реализация.Ссылка
	            |ГДЕ
	            |	УчетСубагентовДополнительныйОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
	            |	И УчетСубагентовДополнительныйОбороты.ТипЗаказа В(&МасОтб)
	            |
	            |УПОРЯДОЧИТЬ ПО
	            |	НомерЗаказа
	            |ИТОГИ ПО
	            |	НомерЗаказа";
	Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
	Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Зап.УстановитьПараметр("Субагент", Субагент);
	Зап.УстановитьПараметр("МасОтб", МасОтб);
    //+++++Серегин М.В. 13.01.2016 11:12:30 
	Зап.УстановитьПараметр("Договор", Договор);
    Если НЕ ЗначениеЗаполнено(Договор) Тогда
        Зап.Текст = СтрЗаменить(Зап.Текст,"И Договор = &Договор","");    
    КонецЕсли;
    //-----Серегин М.В. 13.01.2016 11:12:33 
				
	Мак = ПолучитьМакет("Макет");
	ОблШ = Мак.ПолучитьОбласть("Шапка|Основное");
	ОблС = Мак.ПолучитьОбласть("Строка|Основное");

	
	//ОблШП = Мак.ПолучитьОбласть("Шапка|Показатель");
	//ОблСП = Мак.ПолучитьОбласть("Строка|Показатель");
	
	
	Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Субагент, КонДата), "ПолноеНаименование,ИНН,КПП");
	//Агент = "ООО ""Логистическая компания ""Стриж"" ИНН 7715876568 КПП 771501001";
	//Агент = "ООО ""Стриж-М"", ИНН 7725324485 КПП 772501001";  // до 03.10.2017
	Агент = "ООО ""СТРИЖ-ЛОГИСТИКА"", ИНН 7722404333 КПП 772201001";
	
	//ОблШ.Параметры.Принципал = Принципал;
	ОблШ.Параметры.Агент = Агент;
	ОблШ.Параметры.ИнтернетМагазин = Субагент.Наименование + ", ИНН " + Субагент.ИНН + ", КПП " + Субагент.КПП;
	ОблШ.Параметры.Период = ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
	ОблШ.Параметры.ПериодДоставки = "период доставки: " + ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
	
	ДиректорПринципала = "";
	Зап2 = Новый Запрос;
	Зап2.Текст = "ВЫБРАТЬ
	             |	КонтактныеЛицаКонтрагентов.Наименование КАК ИмяЛица,
	             |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица.Наименование КАК Должность
	             |ИЗ
	             |	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
	             |ГДЕ
	             |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица В (ЗНАЧЕНИЕ(справочник.роликонтактныхлиц.директор), ЗНАЧЕНИЕ(справочник.роликонтактныхлиц.Гендиректор))
	             |	И КонтактныеЛицаКонтрагентов.Владелец = &Владелец";
	зап2.УстановитьПараметр("Владелец", Субагент);	
	Выб = Зап2.Выполнить().Выбрать();
	Должность = "";
	Если Выб.Следующий() Тогда
		ДиректорПринципала = Выб.ИмяЛица;
		Должность = Выб.Должность;
	КонецеСли;	
	
	ДолжностьВЛице = ПросклонятьФразуПоСловам(Должность, 2);
	
	РезультатСклонения = "";
	Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ДиректорПринципала, 2, , РезультатСклонения) Тогда
        ФИОРуководителяВлице  = РезультатСклонения
    Иначе
        ФИОРуководителяВлице =  ДиректорПринципала;
	КонецЕсли;
		
		
	//ООО "СТРИЖ-ЛОГИСТИКА" - Туранова Татьяна Геннадьевна	
	// было до 03.10.2017
	//Стр = СокрЛП(Субагент.НаименованиеПолное) + ", именуемое в дальнейшем Субагент, в лице " + ДолжностьВЛице + " " + ФИОРуководителяВлице + ", с одной стороны, и Общество с ограниченной ответственностью ""Стриж-М"", именуемое в дальнейшем Агент, в лице генерального директора Скотниковой Надежды Викторовны, именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Субагентского договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
	
	Стр = СокрЛП(Субагент.НаименованиеПолное) + ", именуемое в дальнейшем Субагент, в лице " + ДолжностьВЛице + " " + ФИОРуководителяВлице + ", с одной стороны, и Общество с ограниченной ответственностью ""СТРИЖ-ЛОГИСТИКА"", именуемое в дальнейшем Агент, в лице генерального директора Турановой Татьяны Геннадьевны, именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Субагентского договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";

	
	ОблШ.Параметры.Стр = Стр;
	
	Таб.Вывести(ОблШ);
	
	//Для Каждого Тек Из ТабУслугДоставки Цикл
	//	ОблШП.Параметры.ИмяПоказателя = СокрЛП(Тек.Показатель.Наименование);
	//	Таб.Присоединить(ОблШП);
	//КонецЦикла;	
	
	ИТОц = 0;
	ИтПол = 0;
	ИТДост = 0;
	ИтАг = 0;
	ИТУсл = 0;
	ИТБанк = 0;
	ИТВозв = 0;
	
	НПП = 1;
	Выб = Зап.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выб.Следующий() Цикл
		ВыбДет = Выб.Выбрать();
		ТП = Новый ТаблицаЗначений;
		ТП.Колонки.Добавить("ПоказательУслуг");
		ТП.Колонки.Добавить("СуммаУслуг");
 		Пока Выбдет.Следующий() Цикл
			Если ВыбДет.ПоказательУслуг = Справочники.ПоказателиРасчетаУслугСД.ОсновнаяЧасть Тогда
				ЗаполнитьЗначенияСвойств(ОблС.Параметры, ВыбДет);
				ОблС.Параметры.НПП = НПП;
				
				НайОбм = РезОбмены.Найти(ВыбДет.Номер);
				//Если НайОбм <> Неопределено Тогда
				//	ОблС.Параметры.ОценочнаяСтоимость = НайОбм.Сумма;
				//КонецеСли;	
				
				Таб.Вывести(ОблС);
				НПП = НПП + 1;
				
				//Если НайОбм <> Неопределено Тогда
				//	ИТОц = ИТОц + НайОбм.Сумма;
				//Иначе	
					ИТОц = ИТОц + ВыбДет.ОценочнаяСтоимость;
				//КонецеСли;	
				ИтПол = ИтПол + ВыбДет.ПолученоСКлиента;
				ИТДост = ИТДост + ВыбДет.ЗаДоставку;
				ИтАг = ИтАг + ВыбДет.АгентскоеВознаграждение;
				ИТУсл = ИТУсл + ВыбДет.УслугиСД;
				ИТБанк = ИТБанк + ВыбДет.БанковскаяКомиссия;
				ИТВозв = ИТВозв + ВыбДет.Возврат;
			Иначе
				Нов = ТП.Добавить();
				ЗаполнитьЗначенияСвойств(Нов, ВыбДет);
			КонецеСли;	
		КонецЦикла;
		
		Для Каждого Тек Из ТабУслугДоставки Цикл
			Най = ТП.Найти(Тек.Показатель);
			Если Най <> Неопределено Тогда
				//ОблСП.Параметры.ЗначениеПоказателя = Най.СуммаУслуг;
				Тек.Итог = Тек.Итог + Най.СуммаУслуг;
			Иначе
				//ОблСП.Параметры.ЗначениеПоказателя = 0;
			КонецеСли;	
			//Таб.Присоединить(ОблСП);
		КонецЦикла;	
	КонецЦикла;	
	НПП = НПП - 1;
	
	ОблП = Мак.получитьОбласть("Подвал|Основное");
	//ОблПП = Мак.получитьОбласть("Подвал|Показатель");
	
	ОблП.Параметры.СтрокаИтого = "Итого по " + Строка(НПП) + " заказу(ам): ";
	ОблП.Параметры.ИТОц = ИТОц;
	ОблП.Параметры.ИтПол = ИтПол;
	ОблП.Параметры.ИТДост = ИТДост;
	ОблП.Параметры.ИтАг = ИтАг;
	ОблП.Параметры.ИТУсл = ИТУсл;
	//ОблП.Параметры.ИТБанк = ИТБанк;
	ОблП.Параметры.ИТВозв = ИТВозв;
	
	СумВозн = 0;
	СумКВыплате = 0;            
	
	СуммаИтог = Окр((ИтАг + ИТУсл)*1.18, 2);
	СуммаИтогНДС = Окр((СуммаИтог/118*18), 2);
	
	ОблП.Параметры.Стр = "Общая сумма вознаграждения Субагента по данному отчету " + СуммаИтог + " руб., в том числе НДС 18% - " + СуммаИтогНДС + " руб.";
	
	ОблП.Параметры.Стр2 = "Общее количество обработанных заказов " + Строка(НПП) + "."+ Символы.ПС 
	+ " Услуги по доставке заказов оказаны в полном объеме. Стороны не имеют претензий по выполнению работ."+ Символы.ПС 
	+ " Настоящий отчет является Актом выполненных услуг и основанием для подписания Акта взаимозачета";	
	
	ОблП.Параметры.Субагент = "Субагент: " + Субагент.Наименование;
	
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	ОтветственныеЛицаОрганизацииСрезПоследних.ОтветственноеЛицо,
	//                      |	ОтветственныеЛицаОрганизацииСрезПоследних.ФизическоеЛицо
	//                      |ИЗ
	//                      |	РегистрСведений.ОтветственныеЛицаОрганизации.СрезПоследних КАК ОтветственныеЛицаОрганизацииСрезПоследних
	//                      |ГДЕ
	//                      |	ОтветственныеЛицаОрганизацииСрезПоследних.ОтветственноеЛицо = &ОтветственноеЛицо
	//                      |	И ОтветственныеЛицаОрганизацииСрезПоследних.СтруктурнаяЕдиница = &СтруктурнаяЕдиница");
	//Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Справочники.Организации.НайтиПоКоду("00-000006"));
	//Запрос.УстановитьПараметр("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизации.Руководитель);
	//Рез = Запрос.Выполнить().Выбрать();
	//
	//Если Рез.Следующий() Тогда	
	//	ОблП.Параметры.РуководительАгента = Рез.ФизическоеЛицо;		
	//КонецЕсли;
	
	ОблП.Параметры.РуководительАгента = "Туранова Татьяна Геннадьевна";
	
	ОблП.Параметры.РуководительСубагента = ДиректорПринципала;
		
	Таб.Вывести(ОблП);
	
	//Для Каждого Тек Из ТабУслугДоставки Цикл
	//	ОблПП.Параметры.ИтогПоПоказателю = Тек.Итог;
	//	Таб.Присоединить(ОблПП);
	//КонецЦикла;	
	
	Таб.Показать("Отчет субагента");
	
КонецПроцедуры	


Процедура ВыводНаПечатьДД(Таб, Субагент, НачДата, КонДата, МасОтб, ТипДанных = "Доставки",Договор) Экспорт
	Зап = Новый Запрос;
	если ТипДанных = "Доставки" Тогда
		// Задача № 2901 Справочники.ТипыОплат.БезРасчетов
		Зап.Текст = "ВЫБРАТЬ
                    |   ЕСТЬNULL(УчетСубагентовДополнительныйОбороты.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(УчетСубагентовДополнительныйОбороты.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
                    |   УчетСубагентовДополнительныйОбороты.Реализация.Дата КАК ДатаДоставки,
                    |   УчетСубагентовДополнительныйОбороты.СуммаОценочнаяОборот КАК ОценочнаяСтоимость,
                    |   УчетСубагентовДополнительныйОбороты.ОплаченоКлиентовНалОборот КАК ПолученоСКлиента,
                    |   ВЫБОР
                    |       КОГДА УчетСубагентовДополнительныйОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине) ИЛИ УчетСубагентовДополнительныйОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.БезРасчетов)
                    |           ТОГДА 0
                    |       ИНАЧЕ УчетСубагентовДополнительныйОбороты.СуммаДоставкиДоМКАДОборот + УчетСубагентовДополнительныйОбороты.СуммаДоставкиЗаМКАДОборот
                    |   КОНЕЦ КАК ЗаДоставку,
                    |   УчетСубагентовДополнительныйОбороты.КассовоеОбслуживаниеОборот + УчетСубагентовДополнительныйОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждение,
                    |   УчетСубагентовДополнительныйОбороты.УслугиСДОборот КАК УслугиСД,
                    |   УчетСубагентовДополнительныйОбороты.БанковскаяКомиссияОборот КАК БанковскаяКомиссия,
                    |   ВЫБОР
                    |       КОГДА УчетСубагентовДополнительныйОбороты.СуммаОценочнаяОборот <> 0
                    |           ТОГДА УчетСубагентовДополнительныйОбороты.СуммаВозвратаОборот
                    |       ИНАЧЕ 0
                    |   КОНЕЦ КАК Возврат,
                    |   ВЫБОР
                    |       КОГДА УчетСубагентовДополнительныйОбороты.СуммаЧастичногоВозвратаОборот > 0
                    |               И УчетСубагентовДополнительныйОбороты.СуммаОценочнаяОборот - УчетСубагентовДополнительныйОбороты.СуммаЧастичногоВозвратаОборот > 0
                    |           ТОГДА УчетСубагентовДополнительныйОбороты.СуммаЧастичногоВозвратаОборот
                    |       ИНАЧЕ 0
                    |   КОНЕЦ КАК ЧастичныйВозврат
                    |ИЗ
                    |   РегистрНакопления.УчетСубагентовДополнительный.Обороты(
                    |           &НачДата,
                    |           &КонДата,
                    |           ,
                    |           Субагент = &Субагент
                    |               И Договор = &Договор) КАК УчетСубагентовДополнительныйОбороты
                    |ГДЕ
                    |   УчетСубагентовДополнительныйОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
                    |   И УчетСубагентовДополнительныйОбороты.ТипЗаказа.Ссылка В(&МасОтб)
                    |   И УчетСубагентовДополнительныйОбороты.ПричинаНевыполнения <> ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |
                    |УПОРЯДОЧИТЬ ПО
                    |   НомерЗаказа";
	Иначеесли ТипДанных = "Отказы" Тогда        // И ЗакрытыеЗаказы.ТипОплаты.Ссылка <> ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине)
		// Задача № 2901 Справочники.ТипыОплат.БезРасчетов
		Зап.Текст = "ВЫБРАТЬ
                    |   ЕСТЬNULL(УчетСубагентовДополнительный.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(УчетСубагентовДополнительный.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
                    |   УчетСубагентовДополнительный.Реализация.Дата КАК ДатаДоставки,
                    |   ВЫБОР
                    |       КОГДА УчетСубагентовДополнительный.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |           ТОГДА УчетСубагентовДополнительный.СуммаОценочная + УчетСубагентовДополнительный.СуммаДоставкиДоМКАД + УчетСубагентовДополнительный.СуммаДоставкиЗаМКАД
                    |       ИНАЧЕ 0
                    |   КОНЕЦ КАК ОценочнаяСтоимость,
                    |   ВЫБОР
                    |       КОГДА УчетСубагентовДополнительный.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |           ТОГДА УчетСубагентовДополнительный.ОплаченоКлиентовНал
                    |       ИНАЧЕ 0
                    |   КОНЕЦ КАК ПолученоСКлиента,
                    |   ВЫБОР
                    |       КОГДА УчетСубагентовДополнительный.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |           ТОГДА ВЫБОР
                    |                   КОГДА УчетСубагентовДополнительный.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине) ИЛИ УчетСубагентовДополнительный.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.БезРасчетов)
                    |                       ТОГДА 0
                    |                   ИНАЧЕ УчетСубагентовДополнительный.СуммаДоставкиДоМКАД + УчетСубагентовДополнительный.СуммаДоставкиЗаМКАД
                    |               КОНЕЦ
                    |       ИНАЧЕ 0
                    |   КОНЕЦ КАК ЗаДоставку,
                    |   ВЫБОР
                    |       КОГДА УчетСубагентовДополнительный.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |           ТОГДА УчетСубагентовДополнительный.КассовоеОбслуживание + УчетСубагентовДополнительный.АгентскоеВознаграждение
                    |       ИНАЧЕ 0
                    |   КОНЕЦ КАК АгентскоеВознаграждение,
                    |   ВЫБОР
                    |       КОГДА УчетСубагентовДополнительный.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |           ТОГДА УчетСубагентовДополнительный.УслугиСД - (УчетСубагентовДополнительный.КассовоеОбслуживание + УчетСубагентовДополнительный.АгентскоеВознаграждение)
                    |       ИНАЧЕ 0
                    |   КОНЕЦ КАК УслугиСД,
                    |   ВЫБОР
                    |       КОГДА УчетСубагентовДополнительный.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |           ТОГДА УчетСубагентовДополнительный.БанковскаяКомиссия
                    |       ИНАЧЕ 0
                    |   КОНЕЦ КАК БанковскаяКомиссия,
                    |   ВЫБОР
                    |       КОГДА УчетСубагентовДополнительный.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |           ТОГДА ВЫБОР
                    |                   КОГДА УчетСубагентовДополнительный.СуммаОценочная <> 0
                    |                       ТОГДА УчетСубагентовДополнительный.СуммаВозврата
                    |                   ИНАЧЕ 0
                    |               КОНЕЦ
                    |       ИНАЧЕ 0
                    |   КОНЕЦ КАК Возврат,
                    |   ВЫБОР
                    |       КОГДА УчетСубагентовДополнительный.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |           ТОГДА ВЫБОР
                    |                   КОГДА УчетСубагентовДополнительный.СуммаЧастичногоВозврата > 0
                    |                       ТОГДА УчетСубагентовДополнительный.СуммаЧастичногоВозврата + УчетСубагентовДополнительный.СуммаДоставкиДоМКАД + УчетСубагентовДополнительный.СуммаДоставкиЗаМКАД
                    |                   ИНАЧЕ 0
                    |               КОНЕЦ
                    |       ИНАЧЕ 0
                    |   КОНЕЦ КАК ЧастичныйВозврат
                    |ИЗ
                    |   РегистрНакопления.УчетСубагентовДополнительный КАК УчетСубагентовДополнительный
                    |ГДЕ
                    |   УчетСубагентовДополнительный.ТипЗаказа.Ссылка В(&МасОтб)
                    |   И (УчетСубагентовДополнительный.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
                    |           ИЛИ УчетСубагентовДополнительный.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаБезЗаезда)
                    |           ИЛИ УчетСубагентовДополнительный.СтатусИнтернетМагазина = ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.ЗаказОтклонен))
                    |   И УчетСубагентовДополнительный.Период МЕЖДУ &НачДата И &КонДата
                    |   И УчетСубагентовДополнительный.Субагент = &Субагент
                    |   И УчетСубагентовДополнительный.Договор = &Договор
                    |
                    |ОБЪЕДИНИТЬ ВСЕ
                    |
                    |ВЫБРАТЬ
                    |   ЕСТЬNULL(РеализацияТоваровУслуг.Номер, """") + ""/"" + ЕСТЬNULL(РеализацияТоваровУслуг.НомерВнешнегоЗаказа, """"),
                    |   РеализацияТоваровУслуг.Дата,
                    |   0,
                    |   0,
                    |   0,
                    |   0,
                    |   0,
                    |   0,
                    |   0,
                    |   0
                    |ИЗ
                    |   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
                    |ГДЕ
                    |   (РеализацияТоваровУслуг.СтатусИнтернетМагазина = 4
                    |           ИЛИ РеализацияТоваровУслуг.ПометкаУдаления)
                    |   И РеализацияТоваровУслуг.ВладелецТовара = &ИнтернетМагазин
                    |   И РеализацияТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
                    |
                    |УПОРЯДОЧИТЬ ПО
                    |   НомерЗаказа";
	КонецеСли;	
	Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
	Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Зап.УстановитьПараметр("Субагент", Субагент);
	Зап.УстановитьПараметр("МасОтб", МасОтб);
    
    //+++++Серегин М.В. 13.01.2016 11:12:30 
    Зап.УстановитьПараметр("Договор", Договор);
    //-----Серегин М.В. 13.01.2016 11:12:33 
    
    если ТипДанных = "Доставки" Тогда
        //+++++Серегин М.В. 13.01.2016 11:19:43 
        Если НЕ ЗначениеЗаполнено(Договор) Тогда
            Зап.Текст = СтрЗаменить(Зап.Текст,"И Договор = &Договор","");    
        КонецЕсли;
        //-----Серегин М.В. 13.01.2016 11:19:45 
        
        Мак = ПолучитьМакет("МакетДД");
    Иначе
        //+++++Серегин М.В. 13.01.2016 11:19:43 
        Если НЕ ЗначениеЗаполнено(Договор) Тогда
            Зап.Текст = СтрЗаменить(Зап.Текст,"И УчетСубагентовДополнительный.Договор = &Договор","");    
        КонецЕсли;
        //-----Серегин М.В. 13.01.2016 11:19:45 
        Мак = ПолучитьМакет("МакетДДОтказы");
    КонецеСли;
    
    ОблШ = Мак.ПолучитьОбласть("Шапка");
	ОблС = Мак.ПолучитьОбласть("Строка");
	
	Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Субагент, КонДата), "ПолноеНаименование,ИНН,КПП");
	Агент = "ООО ""Логистическая компания ""Стриж"" ИНН 7715876568 КПП 771501001";
	
	если ТипДанных = "Доставки" Тогда
		ОблШ.Параметры.Принципал = Принципал;
		ОблШ.Параметры.Агент = Агент;
		ОблШ.Параметры.ИнтернетМагазин = Субагент.Наименование;
		ОблШ.Параметры.Период = ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
		ОблШ.Параметры.ПериодДоставки = "период доставки: " + ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
	КонецеСли;	
	
	ДиректорПринципала = "";
	Зап2 = Новый Запрос;
	Зап2.Текст = "ВЫБРАТЬ
	             |	КонтактныеЛицаКонтрагентов.Наименование КАК ИмяЛица,
	             |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица.Наименование КАК Должность
	             |ИЗ
	             |	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
	             |ГДЕ
	             |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица В (ЗНАЧЕНИЕ(справочник.роликонтактныхлиц.директор), ЗНАЧЕНИЕ(справочник.роликонтактныхлиц.Гендиректор))
	             |	И КонтактныеЛицаКонтрагентов.Владелец = &Владелец";
	зап2.УстановитьПараметр("Владелец", Субагент);	
	Выб = Зап2.Выполнить().Выбрать();
	Должность = "";
	Если Выб.Следующий() Тогда
		ДиректорПринципала = Выб.ИмяЛица;
		Должность = Выб.Должность;
	КонецеСли;	
	
	Стр = СокрЛП(Субагент.НаименованиеПолное) + ", именуемое в дальнейшем Принципал, в лице " + Должность + "" + ДиректорПринципала + ", с одной стороны, и Общество с ограниченной ответственностью ""Логистическая компания ""Стриж"", именуемое в дальнейшем Агент, в лице генерального директора Копытина А.А., именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агенсткого договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
	ОблШ.Параметры.Стр = Стр;
	
	Таб.Вывести(ОблШ);
	
	НПП = 1;
	Рез = Зап.Выполнить().Выгрузить();
	Рез.Свернуть("НомерЗаказа, ДатаДоставки", "ОценочнаяСтоимость, ПолученоСКлиента, ЗаДоставку, АгентскоеВознаграждение, УслугиСД, БанковскаяКомиссия, Возврат, ЧастичныйВозврат");
	Рез.Сортировать("НомерЗаказа");
	Для каждого Тек Из Рез Цикл
		ЗаполнитьЗначенияСвойств(ОблС.Параметры, Тек);
		ОблС.Параметры.НПП = НПП;
		Таб.Вывести(ОблС);
		НПП = НПП + 1;
	КонецЦикла;	
	НПП = НПП - 1;
	
	ОблП = Мак.получитьОбласть("Подвал");
	ОблП.Параметры.СтрокаИтого = "Итого по " + Строка(НПП) + " заказу(ам): ";
	ОблП.Параметры.ИТОц = Рез.Итог("ОценочнаяСтоимость");
	ОблП.Параметры.ИТУсл = Рез.Итог("УслугиСД");
	ОблП.Параметры.ИТЧВ = Рез.Итог("ЧастичныйВозврат");
	
	
	если ТипДанных = "Доставки" Тогда
		ОблП.Параметры.ИТДост = Рез.Итог("ЗаДоставку");
		ОблП.Параметры.ИтАг = Рез.Итог("АгентскоеВознаграждение");
		ОблП.Параметры.ИТБанк = Рез.Итог("БанковскаяКомиссия");
		ОблП.Параметры.ИтПол = Рез.Итог("ПолученоСКлиента");
		ОблП.Параметры.ИТВозв = Рез.Итог("Возврат");
	КонецеСли;
	СумВозн = 0;
	СумКВыплате = 0;
	
	ОблП.Параметры.Стр = "Общая сумма вознаграждения составила " + СумВозн + " руб. НДС не облагается в связи с применением УСН (п.2 ст.346.11). Стороны не имеют претензий по выполнению работ. Сумма к выплате с учетом удержаний за услуги и агентское вознаграждение составляет " + СумКВыплате + " руб. Услуги по доставке оказаны в полном объеме.";
	
	
	Таб.Вывести(ОблП);
	Таб.Показать("Отчет субагента");
КонецПроцедуры	



Процедура ВыводНаПечатьУлыбкино(Таб, Контрагент, НачДата, КонДата, МасОтб, ТипДанных = "Доставки") Экспорт
	Зап = Новый Запрос;
	если ТипДанных = "Доставки" Тогда
		// Задача № 2901 Справочники.ТипыОплат.БезРасчетов
		Зап.Текст = "ВЫБРАТЬ
		|	ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
		|	ЗакрытыеЗаказыОбороты.Реализация.Дата КАК ДатаДоставки,
		|	ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот КАК ОценочнаяСтоимость,
		|	ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот КАК ПолученоСКлиента,
		|	ВЫБОР
		|		КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине) ИЛИ ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.БезРасчетов)
		|			ТОГДА 0
		|		ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот
		|	КОНЕЦ КАК ЗаДоставку,
		|	ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждение,
		|	ЗакрытыеЗаказыОбороты.УслугиСДОборот КАК УслугиСД,
		|	ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот КАК БанковскаяКомиссия,
		|	ВЫБОР
		|		КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
		|			ТОГДА ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Возврат,
		|	ВЫБОР
		|		КОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
		|				И ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот - ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
		|			ТОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЧастичныйВозврат
		|ИЗ
		|	РегистрНакопления.ЗакрытыеЗаказы.Обороты(&НачДата, &КонДата, , ИнтернетМагазин.Ссылка = &ИнтернетМагазин) КАК ЗакрытыеЗаказыОбороты
		|ГДЕ
		|	ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
		|	И ЗакрытыеЗаказыОбороты.ТипЗаказа.Ссылка В(&МасОтб)
		|	И ЗакрытыеЗаказыОбороты.ПричинаНевыполнения <> ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерЗаказа";
	Иначеесли ТипДанных = "Отказы" Тогда        // И ЗакрытыеЗаказы.ТипОплаты.Ссылка <> ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине)
		// Задача № 2901 Справочники.ТипыОплат.БезРасчетов
		Зап.Текст = "ВЫБРАТЬ
		            |	ЕСТЬNULL(ЗакрытыеЗаказы.Реализация.Номер, """") + ""/"" + ЕСТЬNULL(ЗакрытыеЗаказы.Реализация.НомерВнешнегоЗаказа, """") КАК НомерЗаказа,
		            |	ЗакрытыеЗаказы.Реализация.Дата КАК ДатаДоставки,
		            |	ВЫБОР
		            |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
		            |			ТОГДА ЗакрытыеЗаказы.СуммаОценочная + ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД
		            |		ИНАЧЕ 0
		            |	КОНЕЦ КАК ОценочнаяСтоимость,
		            |	ВЫБОР
		            |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
		            |			ТОГДА ЗакрытыеЗаказы.ОплаченоКлиентовНал
		            |		ИНАЧЕ 0
		            |	КОНЕЦ КАК ПолученоСКлиента,
		            |	ВЫБОР
		            |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
		            |			ТОГДА ВЫБОР
		            |					КОГДА ЗакрытыеЗаказы.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.ОплаченоВМагазине) ИЛИ ЗакрытыеЗаказы.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.БезРасчетов)
		            |						ТОГДА 0
		            |					ИНАЧЕ ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД
		            |				КОНЕЦ
		            |		ИНАЧЕ 0
		            |	КОНЕЦ КАК ЗаДоставку,
		            |	ВЫБОР
		            |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
		            |			ТОГДА ЗакрытыеЗаказы.КассовоеОбслуживание + ЗакрытыеЗаказы.АгентскоеВознаграждение
		            |		ИНАЧЕ 0
		            |	КОНЕЦ КАК АгентскоеВознаграждение,
		            |	ВЫБОР
		            |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
		            |			ТОГДА ЗакрытыеЗаказы.УслугиСД - (ЗакрытыеЗаказы.КассовоеОбслуживание + ЗакрытыеЗаказы.АгентскоеВознаграждение)
		            |		ИНАЧЕ 0
		            |	КОНЕЦ КАК УслугиСД,
		            |	ВЫБОР
		            |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
		            |			ТОГДА ЗакрытыеЗаказы.БанковскаяКомиссия
		            |		ИНАЧЕ 0
		            |	КОНЕЦ КАК БанковскаяКомиссия,
		            |	ВЫБОР
		            |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
		            |			ТОГДА ВЫБОР
		            |					КОГДА ЗакрытыеЗаказы.СуммаОценочная <> 0
		            |						ТОГДА ЗакрытыеЗаказы.СуммаВозврата
		            |					ИНАЧЕ 0
		            |				КОНЕЦ
		            |		ИНАЧЕ 0
		            |	КОНЕЦ КАК Возврат,
		            |	ВЫБОР
		            |		КОГДА ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
		            |			ТОГДА ВЫБОР
		            |					КОГДА ЗакрытыеЗаказы.СуммаЧастичногоВозврата > 0
		            |						ТОГДА ЗакрытыеЗаказы.СуммаЧастичногоВозврата + ЗакрытыеЗаказы.СуммаДоставкиДоМКАД + ЗакрытыеЗаказы.СуммаДоставкиЗаМКАД
		            |					ИНАЧЕ 0
		            |				КОНЕЦ
		            |		ИНАЧЕ 0
		            |	КОНЕЦ КАК ЧастичныйВозврат
		            |ИЗ
		            |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
		            |ГДЕ
		            |	ЗакрытыеЗаказы.ТипЗаказа.Ссылка В(&МасОтб)
		            |	И (ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаСЗаездом)
		            |			ИЛИ ЗакрытыеЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(справочник.причиныневыполнениядоставки.ОтказКлиентаБезЗаезда)
		            |			ИЛИ ЗакрытыеЗаказы.СтатусИнтернетМагазина = ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.ЗаказОтклонен))
		            |	И ЗакрытыеЗаказы.Период МЕЖДУ &НачДата И &КонДата
		            |	И ЗакрытыеЗаказы.ИнтернетМагазин = &ИнтернетМагазин
		            |
		            |ОБЪЕДИНИТЬ ВСЕ
		            |
		            |ВЫБРАТЬ
		            |	ЕСТЬNULL(РеализацияТоваровУслуг.Номер, """") + ""/"" + ЕСТЬNULL(РеализацияТоваровУслуг.НомерВнешнегоЗаказа, """"),
		            |	РеализацияТоваровУслуг.Дата,
		            |	0,
		            |	0,
		            |	0,
		            |	0,
		            |	0,
		            |	0,
		            |	0,
		            |	0
		            |ИЗ
		            |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		            |ГДЕ
		            |	(РеализацияТоваровУслуг.СтатусИнтернетМагазина = 4
		            |			ИЛИ РеализацияТоваровУслуг.ПометкаУдаления)
		            |	И РеализацияТоваровУслуг.ВладелецТовара = &ИнтернетМагазин
		            |	И РеализацияТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
		            |
		            |УПОРЯДОЧИТЬ ПО
		            |	НомерЗаказа";
	КонецеСли;	
	Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
	Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Зап.УстановитьПараметр("ИнтернетМагазин", Контрагент);
	Зап.УстановитьПараметр("МасОтб", МасОтб);
	
	если ТипДанных = "Доставки" Тогда
		Мак = ПолучитьМакет("МакетУлыбкино");
	Иначе
		Мак = ПолучитьМакет("МакетУлыбкиноОтказы");
	КонецеСли;
	
	ОблШ = Мак.ПолучитьОбласть("Шапка");
	ОблС = Мак.ПолучитьОбласть("Строка");
	
	Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование,ИНН,КПП");
	Агент = "ООО ""Логистическая компания ""Стриж"" ИНН 7715876568 КПП 771501001";
	
	если ТипДанных = "Доставки" Или ТипДанных = "Отказы" Тогда
		ОблШ.Параметры.Год = Год(ТекущаяДата());
		ОблШ.Параметры.ТекДата = ТекущаяДата();
	КонецеСли;	
	
	ДиректорПринципала = "";
	Зап2 = Новый Запрос;
	Зап2.Текст = "ВЫБРАТЬ
	             |	КонтактныеЛицаКонтрагентов.Наименование КАК ИмяЛица,
	             |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица.Наименование КАК Должность
	             |ИЗ
	             |	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
	             |ГДЕ
	             |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица В (ЗНАЧЕНИЕ(справочник.роликонтактныхлиц.директор), ЗНАЧЕНИЕ(справочник.роликонтактныхлиц.Гендиректор))
	             |	И КонтактныеЛицаКонтрагентов.Владелец = &Владелец";
	зап2.УстановитьПараметр("Владелец", Контрагент);	
	Выб = Зап2.Выполнить().Выбрать();
	Должность = "";
	Если Выб.Следующий() Тогда
		ДиректорПринципала = Выб.ИмяЛица;
		Должность = Выб.Должность;
	КонецеСли;	
	
	Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем Принципал, в лице " + Должность + "" + ДиректорПринципала + ", с одной стороны, и Общество с ограниченной ответственностью ""Логистическая компания ""Стриж"", именуемое в дальнейшем Агент, в лице генерального директора Копытина А.А., именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агенсткого договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
	ОблШ.Параметры.Стр = Стр;
	
	Таб.Вывести(ОблШ);
	
	НПП = 1;
	Рез = Зап.Выполнить().Выгрузить();
	Рез.Свернуть("НомерЗаказа, ДатаДоставки", "ОценочнаяСтоимость, ПолученоСКлиента, ЗаДоставку, АгентскоеВознаграждение, УслугиСД, БанковскаяКомиссия, Возврат, ЧастичныйВозврат");
	Рез.Сортировать("НомерЗаказа");
	Для каждого Тек Из Рез Цикл
		ЗаполнитьЗначенияСвойств(ОблС.Параметры, Тек);
		ОблС.Параметры.НПП = НПП;
		Таб.Вывести(ОблС);
		НПП = НПП + 1;
	КонецЦикла;	
	НПП = НПП - 1;
	
	ОблП = Мак.получитьОбласть("Подвал");
	ОблП.Параметры.СтрокаИтого = "Итого: ";
	ОблП.Параметры.ИТОц = Рез.Итог("ОценочнаяСтоимость");
	ОблП.Параметры.ИТУсл = Рез.Итог("УслугиСД");
	ОблП.Параметры.ИТЧВ = Рез.Итог("ЧастичныйВозврат");
	
	
	если ТипДанных = "Доставки" Тогда
		//ОблП.Параметры.ИТДост = Рез.Итог("ЗаДоставку");
		ОблП.Параметры.ИтАг = Рез.Итог("АгентскоеВознаграждение");
		//ОблП.Параметры.ИТБанк = Рез.Итог("БанковскаяКомиссия");
		ОблП.Параметры.ИтПол = Рез.Итог("ПолученоСКлиента");
		//ОблП.Параметры.ИТВозв = Рез.Итог("Возврат");
	КонецеСли;
	СумВозн = 0;
	СумКВыплате = 0;
	
	ОблП.Параметры.Стр = "Общая сумма вознаграждения составила " + СумВозн + " руб. НДС не облагается в связи с применением УСН (п.2 ст.346.11). Стороны не имеют претензий по выполнению работ. Сумма к выплате с учетом удержаний за услуги и агентское вознаграждение составляет " + СумКВыплате + " руб. Услуги по доставке оказаны в полном объеме.";
	
	
	Таб.Вывести(ОблП);
	Таб.Показать("Отчет агента");
КонецПроцедуры	


Процедура ВыводНаПечатьTD(Таб, Контрагент, НачДата, КонДата, МасОтб, ТипДанных = "Доставки", ТабУслугДоставки = Неопределено) Экспорт
	
	
	ЗапОбмены = Новый Запрос;
	ЗапОбмены.Текст = "ВЫБРАТЬ
	                  |	РеализацияТоваровУслугТовары.Ссылка.Номер,
	                  |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма
	                  |ИЗ
	                  |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	                  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	                  |		ПО РеализацияТоваровУслугТовары.Ссылка.Номер = ВозвратТоваровОтПокупателя.Номер
	                  |ГДЕ
	                  |	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	                  |	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                  |	И РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара = &Контрагент
	                  |
	                  |СГРУППИРОВАТЬ ПО
	                  |	РеализацияТоваровУслугТовары.Ссылка.Номер";
	ЗапОбмены.УстановитьПараметр("Контрагент", Контрагент);	
	ЗапОбмены.УстановитьПараметр("ДатаНач", НачалоДня(НачДата));	
	ЗапОбмены.УстановитьПараметр("ДатаКон", КонецДня(КонДата));	
	РезОбмены = ЗапОбмены.Выполнить().Выгрузить();
	
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.Номер, """") КАК НомерЗаказа,
	            |	ЗакрытыеЗаказыОбороты.Реализация.Дата КАК ДатаДоставки,
	            |	ВЫБОР
	            |		КОГДА ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот < 0
	            |			ТОГДА 0
	            |		ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаПолученнаяОборот
	            |	КОНЕЦ КАК ОценочнаяСтоимость,
	            |	ВЫБОР
	            |		КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
	            |				И ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот <> 0
	            |			ТОГДА 0
	            |		ИНАЧЕ ЗакрытыеЗаказыОбороты.ОплаченоКлиентовНалОборот
	            |	КОНЕЦ КАК ПолученоСКлиента,
	            |	ВЫБОР
	            |		КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты.Ссылка = ЗНАЧЕНИЕ(Справочник.Типыоплат.Наличные)
	            |			ТОГДА ВЫБОР
	            |					КОГДА ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
	            |						ТОГДА 0
	            |					ИНАЧЕ ЗакрытыеЗаказыОбороты.СуммаДоставкиДоМКАДОборот + ЗакрытыеЗаказыОбороты.СуммаДоставкиЗаМКАДОборот
	            |				КОНЕЦ
	            |		ИНАЧЕ 0
	            |	КОНЕЦ КАК ЗаДоставку,
	            |	ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК АгентскоеВознаграждение,
	            |	ЗакрытыеЗаказыОбороты.УслугиСДОборот КАК УслугиЗаДоставку,
	            |	ВЫБОР
	            |		КОГДА ЗакрытыеЗаказыОбороты.ТипОплаты = ЗНАЧЕНИЕ(Справочник.типыОплат.Терминал)
	            |				И ЗакрытыеЗаказыОбороты.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
	            |			ТОГДА 0
	            |		ИНАЧЕ ЗакрытыеЗаказыОбороты.БанковскаяКомиссияОборот
	            |	КОНЕЦ КАК БанковскаяКомиссия,
	            |	ВЫБОР
	            |		КОГДА ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот <> 0
	            |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаВозвратаОборот
	            |		ИНАЧЕ 0
	            |	КОНЕЦ КАК Возврат,
	            |	ВЫБОР
	            |		КОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
	            |				И ЗакрытыеЗаказыОбороты.СуммаОценочнаяОборот - ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот > 0
	            |			ТОГДА ЗакрытыеЗаказыОбороты.СуммаЧастичногоВозвратаОборот
	            |		ИНАЧЕ 0
	            |	КОНЕЦ КАК ЧастичныйВозврат,
	            |	ЕСТЬNULL(РасчетУслугСД.ПоказательУслуг, ЗНАЧЕНИЕ(Справочник.показателиРасчетаУслугСД.ОсновнаяЧасть)) КАК ПоказательУслуг,
	            |	ЕСТЬNULL(РасчетУслугСД.Сумма, 0) КАК СуммаУслуг,
	            |	ЗакрытыеЗаказыОбороты.Реализация.Номер КАК Номер,
	            |	ЗакрытыеЗаказыОбороты.УслугиСДОборот + ЗакрытыеЗаказыОбороты.КассовоеОбслуживаниеОборот + ЗакрытыеЗаказыОбороты.АгентскоеВознаграждениеОборот КАК УслугиСД,
	            |	ВЫБОР
	            |		КОГДА ЕСТЬNULL(новаМестнаяДоставка.ТочкаПрибытия.Москва, ИСТИНА) = ИСТИНА
	            |			ТОГДА ""Москва""
	            |		ИНАЧЕ ВЫБОР
	            |				КОГДА новаМестнаяДоставка.ТочкаПрибытия.Москва = ИСТИНА
	            |					ТОГДА ""Москва""
	            |				ИНАЧЕ ""МО""
	            |			КОНЕЦ
	            |	КОНЕЦ КАК Терр,
	            |	ЕСТЬNULL(ЗакрытыеЗаказыОбороты.Реализация.НомерВнешнегоЗаказа, """""""") КАК ВнешнийНомерЗаказа
	            |ИЗ
	            |	РегистрНакопления.ЗакрытыеЗаказы.Обороты(
	            |			&НачДата,
	            |			&КонДата,
	            |			,
	            |			ИнтернетМагазин.Ссылка = &ИнтернетМагазин
	            |				ИЛИ ИнтернетМагазин.Родитель.Ссылка = &ИнтернетМагазинПапка) КАК ЗакрытыеЗаказыОбороты
	            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетУслугСД КАК РасчетУслугСД
	            |		ПО ЗакрытыеЗаказыОбороты.Реализация.Ссылка = РасчетУслугСД.Реализация.Ссылка
	            |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	            |		ПО (ВЫРАЗИТЬ(ЗакрытыеЗаказыОбороты.Реализация КАК Документ.РеализацияТоваровУслуг).Номер = новаМестнаяДоставка.Номер)
	            |ГДЕ
	            |	ЗакрытыеЗаказыОбороты.СтатусИнтернетМагазина <> ЗНАЧЕНИЕ(справочник.статусзаказаинтернетмагазина.заказотклонен)
	            |	И ЗакрытыеЗаказыОбороты.ТипЗаказа.Ссылка В(&МасОтб)
	            |
	            |УПОРЯДОЧИТЬ ПО
	            |	НомерЗаказа
	            |ИТОГИ
	            |	СУММА(СуммаУслуг)
	            |ПО
	            |	НомерЗаказа";
	Зап.УстановитьПараметр("НачДата", НачалоДня(НачДата));
	Зап.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Зап.УстановитьПараметр("ИнтернетМагазин", Контрагент);
	
	КонтрагентПапка = Справочники.Контрагенты.НайтиПоКоду("Shop_92");
	
	Зап.УстановитьПараметр("ИнтернетМагазинПапка", КонтрагентПапка);
	Зап.УстановитьПараметр("МасОтб", МасОтб);
				
	Мак = ПолучитьМакет("МакетTD");
	ОблШ = Мак.ПолучитьОбласть("Шапка|Основное");
	ОблС = Мак.ПолучитьОбласть("Строка|Основное");

	
	ОблШП = Мак.ПолучитьОбласть("Шапка|Показатель");
	ОблСП = Мак.ПолучитьОбласть("Строка|Показатель");
	
	ОблШТ = Мак.ПолучитьОбласть("Шапка|Терр");
	ОблСТ = Мак.ПолучитьОбласть("Строка|Терр");
	
	
	Принципал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, КонДата), "ПолноеНаименование,ИНН,КПП");
	Агент = "ООО ""Логистическая компания ""Стриж"" ИНН 7715876568 КПП 771501001";
	ОблШ.Параметры.Принципал = Принципал;
	ОблШ.Параметры.Агент = Агент;
	ОблШ.Параметры.ИнтернетМагазин = Контрагент.Наименование;
	ОблШ.Параметры.Период = ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
	ОблШ.Параметры.ПериодДоставки = "период доставки: " + ПредставлениеПериода(НачалоДня(НачДата), КонецДня(КонДата), "ДЛФ=DD");
	
	ДиректорПринципала = "";
	Зап2 = Новый Запрос;
	Зап2.Текст = "ВЫБРАТЬ
	             |	КонтактныеЛицаКонтрагентов.Наименование КАК ИмяЛица,
	             |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица.Наименование КАК Должность
	             |ИЗ
	             |	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
	             |ГДЕ
	             |	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица В (ЗНАЧЕНИЕ(справочник.роликонтактныхлиц.директор), ЗНАЧЕНИЕ(справочник.роликонтактныхлиц.Гендиректор))
	             |	И КонтактныеЛицаКонтрагентов.Владелец = &Владелец";
	зап2.УстановитьПараметр("Владелец", Контрагент);	
	Выб = Зап2.Выполнить().Выбрать();
	Должность = "";
	Если Выб.Следующий() Тогда
		ДиректорПринципала = Выб.ИмяЛица;
		Должность = Выб.Должность;
	КонецеСли;	
	
	Стр = СокрЛП(Контрагент.НаименованиеПолное) + ", именуемое в дальнейшем Принципал, в лице " + Должность + "" + ДиректорПринципала + ", с одной стороны, и Общество с ограниченной ответственностью ""Логистическая компания ""Стриж"", именуемое в дальнейшем Агент, в лице генерального директора Копытина А.А., именуемые в дальнейшем стороны, настоящим Отчетом удостоверяют, что в соответствии с условиями Агенсткого договора  в период с " + Формат(НачДата, "ДЛФ=DD") + " по " + Формат(КонДата, "ДЛФ=DD") + " были приняты от клиента денежные средства за доставленные заказы";
	ОблШ.Параметры.Стр = Стр;
	
	Таб.Вывести(ОблШ);
	//
	Для Каждого Тек Из ТабУслугДоставки Цикл
		ОблШП.Параметры.ИмяПоказателя = СокрЛП(Тек.Показатель.Наименование);
		Таб.Присоединить(ОблШП);
	КонецЦикла;	
	
	Таб.Присоединить(ОблШТ);
	
	ИТОц = 0;
	ИтПол = 0;
	ИТДост = 0;
	ИтАг = 0;
	ИТУсл = 0;
	ИТБанк = 0;
	ИТВозв = 0;
	ИТУслЗаДост = 0;
	
	НПП = 1;
	Выб = Зап.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выб.Следующий() Цикл
		ВыбДет = Выб.Выбрать();
		Терр = "";
		ТП = Новый ТаблицаЗначений;
		ТП.Колонки.Добавить("ПоказательУслуг");
		ТП.Колонки.Добавить("СуммаУслуг");
		ИтСум = Выб.СуммаУслуг;
 		Пока Выбдет.Следующий() Цикл
			Если ВыбДет.ПоказательУслуг = Справочники.ПоказателиРасчетаУслугСД.ОсновнаяЧасть Тогда
				ЗаполнитьЗначенияСвойств(ОблС.Параметры, ВыбДет);
				ОблС.Параметры.НПП = НПП;
				
				//ОблС.Параметры.УслугиСД = ОблС.Параметры.УслугиСД + ИтСум - ОблС.Параметры.УслугиЗаДоставку;  
				ОблС.Параметры.УслугиЗаДоставку = ВыбДет.СуммаУслуг;
				НайОбм = РезОбмены.Найти(ВыбДет.Номер);
				Если НайОбм <> Неопределено Тогда
					ОблС.Параметры.ОценочнаяСтоимость = НайОбм.Сумма;
				КонецеСли;	
				
				Таб.Вывести(ОблС);
				НПП = НПП + 1;
				
				Если НайОбм <> Неопределено Тогда
					ИТОц = ИТОц + НайОбм.Сумма;
				Иначе	
					ИТОц = ИТОц + ВыбДет.ОценочнаяСтоимость;
				КонецеСли;	
				ИтПол = ИтПол + ВыбДет.ПолученоСКлиента;
				ИТДост = ИТДост + ВыбДет.ЗаДоставку;
				ИтАг = ИтАг + ВыбДет.АгентскоеВознаграждение;
				ИТУсл = ИТУсл + ВыбДет.УслугиСД;
				ИТБанк = ИТБанк + ВыбДет.БанковскаяКомиссия;
				ИТВозв = ИТВозв + ВыбДет.Возврат;
				ИТУслЗаДост = ИТУслЗаДост + ОблС.Параметры.УслугиЗаДоставку;
				Терр = ВыбДет.Терр;
			Иначе
				Нов = ТП.Добавить();
				ЗаполнитьЗначенияСвойств(Нов, ВыбДет);
			КонецеСли;	
		КонецЦикла;
		
		Для Каждого Тек Из ТабУслугДоставки Цикл
			Най = ТП.Найти(Тек.Показатель);
			Если Най <> Неопределено Тогда
				ОблСП.Параметры.ЗначениеПоказателя = Най.СуммаУслуг;
				Тек.Итог = Тек.Итог + Най.СуммаУслуг;
			Иначе
				ОблСП.Параметры.ЗначениеПоказателя = 0;
			КонецеСли;	
			Таб.Присоединить(ОблСП);
		КонецЦикла;	
		ОблСт.Параметры.Терр = Терр;
		Таб.Присоединить(ОблСТ);
	КонецЦикла;	
	НПП = НПП - 1;
	
	ОблП = Мак.получитьОбласть("Подвал|Основное");
	ОблПП = Мак.получитьОбласть("Подвал|Показатель");
	ОблПТ = Мак.получитьОбласть("Подвал|Терр");
	
	ОблП.Параметры.СтрокаИтого = "Итого по " + Строка(НПП) + " заказу(ам): ";
	ОблП.Параметры.ИТОц = ИТОц;
	ОблП.Параметры.ИтПол = ИтПол;
	ОблП.Параметры.ИТДост = ИТДост;
	ОблП.Параметры.ИтАг = ИтАг;
	ОблП.Параметры.ИТУсл = ИТУсл;
	ОблП.Параметры.ИТБанк = ИТБанк;
	ОблП.Параметры.ИТВозв = ИТВозв;
	ОблП.Параметры.ИТУслЗаДост = ИТУслЗаДост;
	
	СумВозн = 0;
	СумКВыплате = 0;
	
	ОблП.Параметры.Стр = "Общая сумма вознаграждения составила " + СумВозн + " руб. НДС не облагается в связи с применением УСН (п.2 ст.346.11). Стороны не имеют претензий по выполнению работ. Сумма к выплате с учетом удержаний за услуги и агентское вознаграждение составляет " + СумКВыплате + " руб. Услуги по доставке оказаны в полном объеме.";
	
	
	Таб.Вывести(ОблП);
	
	Для Каждого Тек Из ТабУслугДоставки Цикл
		ОблПП.Параметры.ИтогПоПоказателю = Тек.Итог;
		Таб.Присоединить(ОблПП);
	КонецЦикла;	
	Таб.Присоединить(ОблПТ);
	
	Таб.Показать("Отчет агента");
КонецПроцедуры	


Функция ПросклонятьФразуПоСловам(Знач ИсходнаяСтрока, Падеж) Экспорт

    Результат = "";

    ИсходнаяСтрока = СокрЛП(ИсходнаяСтрока);
    Если СтрДлина(ИсходнаяСтрока) = 0 Тогда
        Возврат Результат;
    КонецЕсли;

    Поз = Найти(ИсходнаяСтрока, " ");
    Пока Поз > 0 Цикл

        СловоВПадеже = "";

        Слово = Лев(ИсходнаяСтрока, Поз-1);
        УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Слово,       Падеж, , СловоВПадеже);

        Результат = СокрЛП(Результат + " " + НРег(СловоВПадеже));
        ИсходнаяСтрока = СокрЛП(Сред(ИсходнаяСтрока, Поз));

        Если ПустаяСтрока(ИсходнаяСтрока) Тогда
            Прервать; // Это перестраховка. Цикл и так должен прерваться
        КонецЕсли;

        Поз = Найти(ИсходнаяСтрока, " ");
    КонецЦикла;

    Если НЕ ПустаяСтрока(ИсходнаяСтрока) Тогда // добавляем заключительное слово
        СловоВПадеже = "";
        УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ИсходнаяСтрока, Падеж, , СловоВПадеже);
        Результат = СокрЛП(Результат + " " + НРег(СловоВПадеже));

    КонецЕсли;
    Возврат Результат;

КонецФункции // ПросклонятьФразуПоСловам()