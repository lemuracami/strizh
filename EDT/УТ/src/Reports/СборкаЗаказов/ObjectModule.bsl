
Функция СформироватьОтправитьПоПочте(НачПериода, КонПериода, СледующийДень, КонтрагентыЦелевые) Экспорт
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек.Найти("Сборка").Настройки);
	
	Настройки = КомпоновщикНастроек.Настройки;
	
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериода", НачПериода);
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ОкончаниеПериода", КонПериода);
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("СледующийДень", СледующийДень);
	
	Если КонтрагентыЦелевые <> Неопределено Тогда
		ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВладелецТовара");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = КонтрагентыЦелевые;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки 			= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки);	
	ПроцессорКомпоновкиДанных 	= Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,, Истина);
	
	РезультатСборка	= Новый ТабличныйДокумент;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(РезультатСборка);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	//Сообщить("ВысотаТаблицы " + Результат.ВысотаТаблицы);
	//Сообщить("ФиксацияСверху " + Результат.ФиксацияСверху);
	Если Не (РезультатСборка.ВысотаТаблицы - РезультатСборка.ФиксацияСверху - 1) Тогда//Итого -1
		Возврат Неопределено;
	КонецЕсли;
	
	//доп оформление>>>
	РезультатСборка.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	НомерПоследнейКолонки = РезультатСборка.ШиринаТаблицы;
	Если НомерПоследнейКолонки Тогда
		ЖирнаяЛиния = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 2);
		
		НомерПервойСтроки = 2;
		НомерПоследнейСтроки = РезультатСборка.ВысотаТаблицы - 1;
		ПредыдущийЗаказ = РезультатСборка.Область(НомерПервойСтроки, 1, НомерПервойСтроки, 1).Текст;
		Для НомерСтроки = НомерПервойСтроки По НомерПоследнейСтроки Цикл
			ТекущийЗаказ = РезультатСборка.Область(НомерСтроки, 1, НомерСтроки, 1).Текст;
			Если ТекущийЗаказ <> ПредыдущийЗаказ Тогда
				ПредыдущийЗаказ = ТекущийЗаказ;
				РезультатСборка.Область(НомерСтроки, 1, НомерСтроки, НомерПоследнейКолонки).ГраницаСверху = ЖирнаяЛиния;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//доп оформление<<<
	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек.Найти("Подбор").Настройки);
	
	Настройки = КомпоновщикНастроек.Настройки;
	
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериода", НачПериода);
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ОкончаниеПериода", КонПериода);
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("СледующийДень", СледующийДень);
	
	Если КонтрагентыЦелевые <> Неопределено Тогда
		ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВладелецТовара");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = КонтрагентыЦелевые;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки 			= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки);	
	ПроцессорКомпоновкиДанных 	= Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,, Истина);
	
	РезультатПодбор	= Новый ТабличныйДокумент;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(РезультатПодбор);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	// Создаем пакет
	Пакет = Новый ПакетОтображаемыхДокументов;

	// Документы, находящиеся в этом пакете, печатаются в 5 экземплярах
	//Пакет.КоличествоЭкземпляров = 5;
	
	// Добавляем документы в пакет
	ЭлементПакета1 = Пакет.Состав.Добавить();
	ЭлементПакета1.Данные = ПоместитьВоВременноеХранилище(РезультатСборка);
	ЭлементПакета1.Наименование = "Сборка";
	ЭлементПакета2 = Пакет.Состав.Добавить();
	ЭлементПакета2.Данные = ПоместитьВоВременноеХранилище(РезультатПодбор);
	ЭлементПакета2.Наименование = "Подбор";
	
	// Добавляем вложенный пакет для третьего документа
	//ВложенныйПакет = Новый ПакетОтображаемыхДокументов;
	//ЭлементПакета3 = Пакет.Состав.Добавить();
	//ЭлементПакета3.Данные = ВложенныйПакет;
	
	// Документ во вложенном пакете печатается в 2 экземплярах
	//ВложенныйПакет.КоличествоЭкземпляров = 2;
	
	// Добавляем документ во вложенный пакет
	//ЭлементВложенногоПакета1 = ВложенныйПакет.Состав.Добавить();
	//ЭлементВложенногоПакета1.Данные = ПоместитьВоВременноеХранилище(ТабличныйДокумент3, УникальныйИдентификатор);
	
	// Печатаем пакет
	//Пакет.Напечатать();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонПериода);
	Запрос.УстановитьПараметр("СледующийДень", СледующийДень);
	ТекстЗапроса = Новый Массив;
	
	Если КонтрагентыЦелевые = Неопределено Тогда
		ТекстЗапроса.Добавить(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ИзменениеДатыДоставки КАК ИзменениеДатыДоставки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО (ИзменениеДатыДоставки.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|			И (ИзменениеДатыДоставки.ДатаДоставки >= &СледующийДень)
		|			И (ИзменениеДатыДоставки.Проведен)
		|			И ИзменениеДатыДоставки.Заказ = РеализацияТоваровУслуг.Ссылка
		|			И (РеализацияТоваровУслуг.СтатусИнтернетМагазина = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
		|		ПО ИзменениеДатыДоставки.Заказ = СтатусыЗаказов.Заказ
		|			И (СтатусыЗаказов.Статус = 211)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеДатыДоставки КАК ИзменениеДатыДоставки_Ранние
		|		ПО ИзменениеДатыДоставки.Заказ = ИзменениеДатыДоставки_Ранние.Заказ
		|			И (ИзменениеДатыДоставки_Ранние.Дата < &НачалоПериода)
		|			И (ИзменениеДатыДоставки_Ранние.Проведен)
		|ГДЕ
		|	СтатусыЗаказов.Заказ ЕСТЬ NULL
		|	И ИзменениеДатыДоставки_Ранние.Заказ ЕСТЬ NULL");
	Иначе
		Запрос.УстановитьПараметр("КонтрагентыЦелевые", КонтрагентыЦелевые);
		ТекстЗапроса.Добавить(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ИзменениеДатыДоставки КАК ИзменениеДатыДоставки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО (ИзменениеДатыДоставки.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|			И (ИзменениеДатыДоставки.ДатаДоставки >= &СледующийДень)
		|			И (ИзменениеДатыДоставки.Проведен)
		|			И ИзменениеДатыДоставки.Заказ = РеализацияТоваровУслуг.Ссылка
		|			И (РеализацияТоваровУслуг.ВладелецТовара В (&КонтрагентыЦелевые))
		|			И (РеализацияТоваровУслуг.СтатусИнтернетМагазина = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
		|		ПО ИзменениеДатыДоставки.Заказ = СтатусыЗаказов.Заказ
		|			И (СтатусыЗаказов.Статус = 211)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеДатыДоставки КАК ИзменениеДатыДоставки_Ранние
		|		ПО ИзменениеДатыДоставки.Заказ = ИзменениеДатыДоставки_Ранние.Заказ
		|			И (ИзменениеДатыДоставки_Ранние.Дата < &НачалоПериода)
		|			И (ИзменениеДатыДоставки_Ранние.Проведен)
		|ГДЕ
		|	СтатусыЗаказов.Заказ ЕСТЬ NULL
		|	И ИзменениеДатыДоставки_Ранние.Заказ ЕСТЬ NULL");
	КонецЕсли;
	
	ТекстЗапроса.Добавить(
	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|");
	
	ТекстЗапроса.Добавить(
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|	РеализацияТоваровУслуг.Номер КАК НомерЗаказа,
	|	ВЫБОР РеализацияТоваровУслуг.ТерминалДоставки
	|		КОГДА ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|			ТОГДА ""МСК""
	|		КОГДА ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.СПбСтриж)
	|			ТОГДА ""СПБ""
	|		ИНАЧЕ ""???""
	|	КОНЕЦ КАК РегионДоставки,
	|	РеализацияТоваровУслуг.ВладелецТовара.Наименование КАК ПартнерНаименование,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
	|	ВЫБОР РеализацияТоваровУслуг.ТерминалПриема
	|		КОГДА ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|			ТОГДА ""МСК""
	|		КОГДА ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.СПбСтриж)
	|			ТОГДА ""СПБ""
	|		ИНАЧЕ ""???""
	|	КОНЕЦ КАК РегионОтгрузки,
	|	МестаПоЗаказам.Штрихкод КАК Штрихкод
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ВТ_Заказы.Ссылка = РеализацияТоваровУслуг.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
	|		ПО ВТ_Заказы.Ссылка = МестаПоЗаказам.Заказ
	|			И (НЕ МестаПоЗаказам.НеАктуальное)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПартнерНаименование,
	|	НомерВнешнегоЗаказа,
	|	Штрихкод
	|ИТОГИ
	|	КОЛИЧЕСТВО(Штрихкод)
	|ПО
	|	Заказ");	
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса);
	Результат = Запрос.Выполнить();
	
	РезультатЭтикетки = Новый ТабличныйДокумент;
	РезультатЭтикетки.РазмерСтраницы = "Custom";
	РезультатЭтикетки.ВысотаСтраницы = 126;
	РезультатЭтикетки.ШиринаСтраницы = 80;
	РезультатЭтикетки.ПолеСлева = 5;
	РезультатЭтикетки.ПолеСверху = 5;
	РезультатЭтикетки.ПолеСправа = 5;
	РезультатЭтикетки.ПолеСнизу = 5;
	РезультатЭтикетки.АвтоМасштаб = Истина;
	
	Макет = ПолучитьМакет("Этикетка");
	Область = Макет.ПолучитьОбласть("Этикетка");
	ПараметрыОбласти = Область.Параметры;
	
	ВыборкаЗаказ = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗаказ.Следующий() Цикл
		КоличествоМест = ВыборкаЗаказ.Штрихкод;
		НомерМеста = 0;
		Выборка = ВыборкаЗаказ.Выбрать();
		Пока Выборка.Следующий() Цикл
			НомерМеста = НомерМеста + 1;
			ПараметрыОбласти.Заполнить(Выборка);
			ПараметрыОбласти.НомерЗаказа = СокрЛП(ПараметрыОбласти.НомерЗаказа);
			ПараметрыОбласти.НомерМеста = НомерМеста;
			ПараметрыОбласти.КоличествоМест = КоличествоМест;
			ПараметрыОбласти.ШК = may.ШтрихкодCode128(Выборка.Штрихкод);
			РезультатЭтикетки.Вывести(Область);
			РезультатЭтикетки.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	КонецЦикла;
	
	МассивДокументов = Новый Массив;
	МассивДокументов.Добавить(Пакет);
	МассивДокументов.Добавить(РезультатЭтикетки);
	
	Возврат МассивДокументов;
	
КонецФункции