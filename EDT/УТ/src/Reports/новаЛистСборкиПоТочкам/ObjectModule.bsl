
// Предопределенное свойство. Содержит коллекцию свойств печатной формы.
//
Перем СвойстваПечатнойФормы Экспорт; // <Структура>

// Предопределенная функция. Формирует печатную форму в указанном документе.
//
// Параметры:
//  Форма             <Форма>
//  ТабличныйДокумент <ТабличныйДокумент>
//  Заголовок         <Строка>
//
// Возвращаемое значение:
//  <Булево>: Истина, если печатную форму удалось сформировать.
//
Функция ВывестиНаПечать(Форма, ТабличныйДокумент, Заголовок) Экспорт

	ТабДокумент = ТабличныйДокумент;
	Макет = ПолучитьМакет("ЛистСборки");
	
	НомерНаПечать = Владелец.Номер;
	ТекстЗаголовка = 
	"Сборка " + " № " + НомерНаПечать
	+ " от " + Формат(Владелец.Дата, "ДФ='дд ММММ гггг'");
	ТекстВремени = "Время формирования: " + Формат(Владелец.Дата,"ДЛФ=T");

	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Лист_Сборки_Рейс_По_Заявкам_На_Склад";
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
	ОбластьМакета.Параметры.ТекстВремени = ТекстВремени;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Автомобиль");
	ТипАвто = ""+Владелец.Рейс.Транспорт.Марка+", гос. номер "+Владелец.Рейс.Транспорт.НомерГосударственнойРегистрации+", водитель "+Владелец.Рейс.Водитель;//+", ходка "+Строка(ПолучитьНомерХодки());
	ОбластьМакета.Параметры.ТипАвто = ТипАвто;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Результат = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|    ТочкиМаршрутаРейсов.НомерТочки
	|    ,ЗаданияРейсов.НомерЗадания
	|    ,ЗаданияРейсов.Доставка.Номер КАК Номер
	|    ,ЗаданияРейсов.Доставка.Дата КАК Дата
	|    ,ЗаданияРейсов.Доставка.Грузополучатель КАК Контрагент
	|    ,ЗаданияРейсов.Доставка.ТочкаПрибытия КАК ТорговаяТочка
	|    ,ЗаданияРейсов.Доставка.Грузоотправитель КАК Склад
	|    ,ЗаданияРейсов.Доставка.Груз КАК Груз
	|    ,ЗаданияРейсов.Доставка.Комментарий КАК Комментарий
	|  ПОМЕСТИТЬ ЗаданияРейсов
	|  ИЗ
	|    РегистрСведений.новаЗаданияРейсов КАК ЗаданияРейсов
	|    ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.новаТочкиМаршрутаРейсов КАК ТочкиМаршрутаРейсов
	|      ПО
	|        ЗаданияРейсов.Рейс = ТочкиМаршрутаРейсов.Рейс
	|        И ЗаданияРейсов.КодТочки = ТочкиМаршрутаРейсов.КодТочки
	|  ГДЕ
	|    ЗаданияРейсов.Рейс = &Рейс
	|    И (НЕ ЗаданияРейсов.МаршрутСопровождения)
	|    И ЗаданияРейсов.Вид = ЗНАЧЕНИЕ(Перечисление.новаВидыЗаданийРейсаМестнойДоставки.Разгрузка)
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|    Грузы.Ссылка КАК Груз
	|    ,ПРЕДСТАВЛЕНИЕ(Грузы.Товар) КАК Номенклатура
	|    ,Грузы.Серия КАК ДатаРозлива
	|    ,Грузы.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|    ,Грузы.ЕдиницаИзмерения.Коэффициент КАК Коэффициент
	|    ,СУММА(Грузы.Количество) КАК Количество
	|    ,СУММА(Грузы.Вес) КАК Вес
	|  ИЗ
	|    Документ.новаГруз.Спецификация КАК Грузы
	|  ГДЕ
	|    Грузы.Ссылка В
	|      (
	|        ВЫБРАТЬ
	|            ЗаданияРейсов.Груз
	|          ИЗ
	|            ЗаданияРейсов
	|      )
	|  СГРУППИРОВАТЬ ПО
	|    Грузы.Ссылка
	|    ,Грузы.Товар
	|    ,Грузы.Серия
	|    ,Грузы.ЕдиницаИзмерения
	|    ,Грузы.ЕдиницаИзмерения.Коэффициент
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Вес)
	|ПО
	|	ОБЩИЕ,
	|	Груз
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|    Номер
	|    ,Дата
	|    ,ПРЕДСТАВЛЕНИЕ(Контрагент) КАК Контрагент
	|    ,ПРЕДСТАВЛЕНИЕ(ТорговаяТочка) КАК ТорговаяТочка
	|    ,ПРЕДСТАВЛЕНИЕ(Склад) КАК Склад
	|    ,Груз
	|    ,Комментарий
	|  ИЗ
	|    ЗаданияРейсов
	|  УПОРЯДОЧИТЬ ПО
	|    НомерТочки УБЫВ
	|    ,НомерЗадания УБЫВ
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////////
	|
	|  УНИЧТОЖИТЬ ЗаданияРейсов
	|";
	
	Запрос.УстановитьПараметр("Рейс",Владелец.Рейс);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	РезультатПоДоставкам = РезультатыЗапроса[2];
	РезультатПоГрузам = РезультатыЗапроса[1];
	
	Если не РезультатПоДоставкам.Пустой() Тогда
		
		УровеньИтоги = РезультатПоГрузам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		УровеньИтоги.Следующий();
		
		Доставки = РезультатПоДоставкам.Выбрать();
		Грузы = УровеньИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ПорядковыйНомерДоставки = 0;
		
		Пока Доставки.Следующий() Цикл
			
			ПорядковыйНомерДоставки = ПорядковыйНомерДоставки + 1;
			ТабДокумент.Вывести(Макет.ПолучитьОбласть("КонтрагентВерх"));
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ТабДокумент.Вывести(ОбластьМакета);
				
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(Доставки);
			ОбластьМакета.Параметры.НомСтроки = ПорядковыйНомерДоставки;
			ТабДокумент.Вывести(ОбластьМакета);
				
			ТабДокумент.Вывести(Макет.ПолучитьОбласть("Подписи"));
			
			ТекстЗаголовка = 
			"Заявка на склад " + " № " + Доставки.Номер
			+ " от " + Формат(Доставки.Дата, "ДФ='дд ММММ гггг'");
				
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокЗаявки");
			ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
			ТабДокумент.Вывести(ОбластьМакета);
				
			ОбластьМакета = Макет.ПолучитьОбласть("МестоХранения");
			ОбластьМакета.Параметры.Заполнить(Доставки);

			ТабДокумент.Вывести(ОбластьМакета);
				
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТовара");
			ОбластьМакета.Параметры.Заполнить(Доставки);
			ТабДокумент.Вывести(ОбластьМакета);
 			
			Грузы.НайтиСледующий(Новый Структура("Груз", Доставки.Груз));
			
			УровеньСтрока = Грузы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			НомерТовараПоПорядку = 0;
			
			Пока УровеньСтрока.Следующий() Цикл
				
				НомерТовараПоПорядку = НомерТовараПоПорядку + 1;
				
				ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТовара");	
				ОбластьМакета.Параметры.Заполнить(УровеньСтрока);
				ОбластьМакета.Параметры.НомерСтроки = НомерТовараПоПорядку;
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
				
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалЗаявки");
			ОбластьМакета.Параметры.ПечВсего = Грузы.Количество;
			ТабДокумент.Вывести(ОбластьМакета);
				
			ТабДокумент.Вывести(Макет.ПолучитьОбласть("КонтрагентНиз"));
			
			Грузы.Сбросить();
		КонецЦикла;	
		
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Подписи1"));

		ОбластьМакета = Макет.ПолучитьОбласть("ОбщийПодвал");
		ОбластьМакета.Параметры.ВсегоКоличество = УровеньИтоги.Количество; 
		ОбластьМакета.Параметры.ВсегоВес = УровеньИтоги.Вес;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ТабДокумент.ПолеСверху              = 0;
		ТабДокумент.ПолеСлева               = 0;
		ТабДокумент.ПолеСнизу               = 0;
		ТабДокумент.ПолеСправа              = 0;
		ТабДокумент.РазмерКолонтитулаСверху = 0;
		ТабДокумент.РазмерКолонтитулаСнизу  = 0;
		ТабДокумент.АвтоМасштаб             = Истина;
		ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
		ТабДокумент.ОтображатьЗаголовки = Ложь;
		ТабДокумент.ОтображатьСетку     = Ложь;
		ТабДокумент.Защита              = Истина;
		ТабДокумент.ТолькоПросмотр      = Истина;
		
	Иначе
		
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

СвойстваПечатнойФормы = Новый Структура("Представление", "Лист сборки по точкам");