
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
    СтандартнаяОбработка = Ложь;
	
	НастройкиКомпоновщика = КомпоновщикНастроек.ПолучитьНастройки();
	
	ЭлементыПараметров = НастройкиКомпоновщика.ПараметрыДанных.Элементы;
	
	СтандартныйПериод = ЭлементыПараметров.Найти("Период").Значение;

	Если ЗначениеЗаполнено(СтандартныйПериод) И ЗначениеЗаполнено(СтандартныйПериод.ДатаНачала) И ЗначениеЗаполнено(СтандартныйПериод.ДатаОкончания)Тогда
		
	Иначе
		ВызватьИсключение "Не заполнены обязательные параметры отчета";
	КонецЕсли;
	
	ТекПараметр = ЭлементыПараметров.Найти("НачалоПериода");
	ТекПараметр.Значение = СтандартныйПериод.ДатаНачала;
	ТекПараметр.Использование = Истина;
	
	ТекПараметр = ЭлементыПараметров.Найти("ОкончаниеПериода");
	ТекПараметр.Значение = СтандартныйПериод.ДатаОкончания;
	ТекПараметр.Использование = Истина;
	
	ТекПараметр = ЭлементыПараметров.Найти("ТипФормированияОтчета");
	ТекПараметр.Значение = "НЕЗАКРЫТЫЙ ПЕРИОД";
	ТекПараметр.Использование = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРасчета", НачалоДня(КонецМесяца(СтандартныйПериод.ДатаОкончания)));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ВЗ_ЗакрытиеМесяца.ЗакрытиеМСК.Склад_СтоимостьСкладскойОперации, 0) КАК СтоимостьСкладскойОперацииМСК,
	|	ЕСТЬNULL(ВЗ_ЗакрытиеМесяца.ЗакрытиеСПБ.Склад_СтоимостьСкладскойОперации, 0) КАК СтоимостьСкладскойОперацииСПБ,
	|	ЕСТЬNULL(ЕСТЬNULL(ВЗ_ЗакрытиеМесяца.ЗакрытиеМСК.Магистраль_СтоимостьОбработки_кг, ВЗ_ЗакрытиеМесяца.ЗакрытиеСПБ.Магистраль_СтоимостьОбработки_кг), 0) КАК СтоимостьОбработки1кгМагистрали,
	|	ЕСТЬNULL(экЗакрытиеМесяцаЗатратыАвто_МСКМ.СтоимостьРейса, 0) КАК СтоимостьРейсаРМММСК,
	|	ЕСТЬNULL(экЗакрытиеМесяцаЗатратыАвто_СПБМ.СтоимостьРейса, 0) КАК СтоимостьРейсаРММСПБ,
	|	ЕСТЬNULL(экЗакрытиеМесяцаЗатратыАвто_МСКБ.СтоимостьРейса, 0) КАК СтоимостьРейсаРБММСК,
	|	ЕСТЬNULL(экЗакрытиеМесяцаЗатратыАвто_СПББ.СтоимостьРейса, 0) КАК СтоимостьРейсаРБМСПБ,
	|	ЕСТЬNULL(экЗакрытиеМесяцаЗатратыАвто_МСКЗ.СтоимостьРейса, 0) КАК СтоимостьРейсаРЗММСК,
	|	ЕСТЬNULL(экЗакрытиеМесяцаЗатратыАвто_СПБЗ.СтоимостьРейса, 0) КАК СтоимостьРейсаРЗМСПБ,
	|	ЕСТЬNULL(ЕСТЬNULL(ВЗ_ЗакрытиеМесяца.ЗакрытиеМСК.ПроцентЗатратНаОперацииТерминал, ВЗ_ЗакрытиеМесяца.ЗакрытиеСПБ.ПроцентЗатратНаОперацииТерминал), 0) КАК ПроцентЗатратНаОперацииТерминал
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИСТИНА КАК Поле1) КАК ВЗ_Связь
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА экЗакрытиеМесяца.Регион = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|						ТОГДА экЗакрытиеМесяца.Ссылка
	|				КОНЕЦ) КАК ЗакрытиеМСК,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА экЗакрытиеМесяца.Регион = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.СПбСтриж)
	|						ТОГДА экЗакрытиеМесяца.Ссылка
	|				КОНЕЦ) КАК ЗакрытиеСПБ
	|		ИЗ
	|			Документ.экЗакрытиеМесяца КАК экЗакрытиеМесяца
	|		ГДЕ
	|			экЗакрытиеМесяца.ПериодРасчета = &ПериодРасчета
	|			И экЗакрытиеМесяца.Проведен) КАК ВЗ_ЗакрытиеМесяца
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.экЗакрытиеМесяца.ЗатратыАвто КАК экЗакрытиеМесяцаЗатратыАвто_МСКМ
	|			ПО ВЗ_ЗакрытиеМесяца.ЗакрытиеМСК = экЗакрытиеМесяцаЗатратыАвто_МСКМ.Ссылка
	|				И (экЗакрытиеМесяцаЗатратыАвто_МСКМ.ФорматАвтотранспорта = ЗНАЧЕНИЕ(Справочник.ФорматыАвтотранспорта.МалоеАвто))
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.экЗакрытиеМесяца.ЗатратыАвто КАК экЗакрытиеМесяцаЗатратыАвто_МСКБ
	|			ПО ВЗ_ЗакрытиеМесяца.ЗакрытиеМСК = экЗакрытиеМесяцаЗатратыАвто_МСКБ.Ссылка
	|				И (экЗакрытиеМесяцаЗатратыАвто_МСКБ.ФорматАвтотранспорта = ЗНАЧЕНИЕ(Справочник.ФорматыАвтотранспорта.БольшоеАвто))
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.экЗакрытиеМесяца.ЗатратыАвто КАК экЗакрытиеМесяцаЗатратыАвто_МСКЗ
	|			ПО ВЗ_ЗакрытиеМесяца.ЗакрытиеМСК = экЗакрытиеМесяцаЗатратыАвто_МСКЗ.Ссылка
	|				И (экЗакрытиеМесяцаЗатратыАвто_МСКЗ.ФорматАвтотранспорта = ЗНАЧЕНИЕ(Справочник.ФорматыАвтотранспорта.ЗаборноеАвто))
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.экЗакрытиеМесяца.ЗатратыАвто КАК экЗакрытиеМесяцаЗатратыАвто_СПБМ
	|			ПО ВЗ_ЗакрытиеМесяца.ЗакрытиеСПБ = экЗакрытиеМесяцаЗатратыАвто_СПБМ.Ссылка
	|				И (экЗакрытиеМесяцаЗатратыАвто_СПБМ.ФорматАвтотранспорта = ЗНАЧЕНИЕ(Справочник.ФорматыАвтотранспорта.МалоеАвто))
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.экЗакрытиеМесяца.ЗатратыАвто КАК экЗакрытиеМесяцаЗатратыАвто_СПББ
	|			ПО ВЗ_ЗакрытиеМесяца.ЗакрытиеСПБ = экЗакрытиеМесяцаЗатратыАвто_СПББ.Ссылка
	|				И (экЗакрытиеМесяцаЗатратыАвто_СПББ.ФорматАвтотранспорта = ЗНАЧЕНИЕ(Справочник.ФорматыАвтотранспорта.БольшоеАвто))
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.экЗакрытиеМесяца.ЗатратыАвто КАК экЗакрытиеМесяцаЗатратыАвто_СПБЗ
	|			ПО ВЗ_ЗакрытиеМесяца.ЗакрытиеСПБ = экЗакрытиеМесяцаЗатратыАвто_СПБЗ.Ссылка
	|				И (экЗакрытиеМесяцаЗатратыАвто_СПБЗ.ФорматАвтотранспорта = ЗНАЧЕНИЕ(Справочник.ФорматыАвтотранспорта.ЗаборноеАвто))
	|		ПО (ИСТИНА)";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		ИмяКолонки = Колонка.Имя;
		
		ТекПараметр = ЭлементыПараметров.Найти(ИмяКолонки);
		ТекПараметр.Значение = Выборка[ИмяКолонки];
		ТекПараметр.Использование = Истина;
	КонецЦикла;
	
	ТекПараметр = ЭлементыПараметров.Найти("ДатаВремяФормированияОтчета");
	ТекПараметр.Значение = ТекущаяДата();
	ТекПараметр.Использование = Истина;
	
	//ВнешниеНаборыДанных = ПолучитьВнешниеНаборыДанных(СтандартныйПериод.ДатаНачала, СтандартныйПериод.ДатаОкончания, Контрагент);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновщика, ДанныеРасшифровки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,, ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	КоличествоУровней = ДокументРезультат.КоличествоУровнейГруппировокСтрок();
	Для Уровень = 1 По КоличествоУровней Цикл
	    ДокументРезультат.ПоказатьУровеньГруппировокСтрок(КоличествоУровней - Уровень);
	КонецЦикла;

	//ДокументРезультат.ПоказатьУровеньГруппировокСтрок(2); //Уровень 3
    //ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1); //Уровень 2
	//ДокументРезультат.ПоказатьУровеньГруппировокСтрок(0);   //Уровень 1
	
	//фиксация сверху
	НомерСтрокиЗаказ = Мин(20, ДокументРезультат.ВысотаТаблицы);
	Для НомерСтроки = 1 По НомерСтрокиЗаказ Цикл
		ТекОбласть = ДокументРезультат.Область(НомерСтроки, 1, НомерСтроки, 1);
		Если ТекОбласть.Текст = "Заказ" Тогда
			ДокументРезультат.ФиксацияСверху = НомерСтроки;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	//фиксация слева
	ДокументРезультат.ФиксацияСлева = 6;
	
КонецПроцедуры
