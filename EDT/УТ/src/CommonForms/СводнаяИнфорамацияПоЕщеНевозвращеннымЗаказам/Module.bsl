
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДатаС = ТекущаяДата();
	ЗадатьПараметрыДляСписка();
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьПараметрыДляСписка()
	Список.Параметры.УстановитьЗначениеПараметра("ДатаКон", КонецДня(ДатаС));
	Список.Параметры.УстановитьЗначениеПараметра("ДатаНач", ДобавитьМесяц(ДатаС,-3));
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ЗадатьПараметрыДляСписка();
КонецПроцедуры


&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТабДок = СформироватьТаб(Элементы.Список.ТекущиеДанные.ЗаказВладелецТовара,
			Элементы.Список.ТекущиеДанные.Регион, Элементы.Список.ТекущиеДанные.СкладВозврата);
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Показать();
КонецПроцедуры

&НаСервере
Функция СформироватьТаб(Контр,Регион,Склад)
	ТабДок = Новый ТабличныйДокумент;

	Результат = ПолучитьРезультатЗапроса(Контр);
	
	Макет = ПолучитьОбщийМакет("СводнаяИнфорамацияПоЕщеНевозвращеннымЗаказам");
	// Заголовок
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Шапка);
	Область = Макет.ПолучитьОбласть("Строка");
	Для Каждого ТекСтрока Из Результат Цикл
		Если ТекСтрока.СкладВозврата = Склад И ТекСтрока.Регион = Регион Тогда 
			Область.Параметры.Дата = Формат(ТекСтрока.Дата, "ДЛФ=Д");
			Область.Параметры.НомерЗаказа = ТекСтрока.ЗаказНомер;
			Область.Параметры.ВнешнийНомер = ТекСтрока.ЗаказНомерВнешнегоЗаказа;
			Область.Параметры.СтатусСкладскогоУчета = ТекСтрока.ТекущийСтатус;
			ТабДок.Вывести(Область);
		КонецЕсли;
	КонецЦикла;
	Возврат ТабДок
КонецФункции

&НаСервере
Функция ПолучитьРезультатЗапроса(Контр)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатусыСкладскогоУчета.Заказ КАК Заказ,
		|	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_срез
		|ИЗ
		|	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
		|ГДЕ
		|	СтатусыСкладскогоУчета.Период МЕЖДУ &ДатаНач И &ДатаКон
		|	И (СтатусыСкладскогоУчета.Заказ.ВладелецТовара = &Контр
		|			ИЛИ СтатусыСкладскогоУчета.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин = &Контр)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтатусыСкладскогоУчета.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_срез.Заказ КАК Заказ,
		|	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
		|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета
		|ПОМЕСТИТЬ ВТ_Статусы
		|ИЗ
		|	ВТ_срез КАК ВТ_срез
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
		|		ПО ВТ_срез.Заказ.Ссылка = СтатусыСкладскогоУчета.Заказ.Ссылка
		|			И ВТ_срез.Период = СтатусыСкладскогоУчета.Период
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		|		ПО (ВТ_срез.Заказ.Ссылка = ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
		|ГДЕ
		|	(СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1)
		|			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат2))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_срез.Заказ,
		|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
		|	СтатусыСкладскогоУчета.ТипЗаказа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатусыСкладскогоУчета.Заказ КАК Заказ,
		|	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
		|	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
		|	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
		|	СтатусыСкладскогоУчета.Заказ.Номер КАК ЗаказНомер,
		|	СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа КАК ЗаказНомерВнешнегоЗаказа,
		|	СтатусыСкладскогоУчета.Заказ.Дата КАК Дата,
		|	ДополнительныеПараметрыЗаказа.СкладМагазина КАК СкладВозврата,
		|	СтатусыСкладскогоУчета.Заказ.ТерминалПриема КАК Регион
		|ИЗ
		|	ВТ_Статусы КАК СтатусыСкладскогоУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
		|		ПО СтатусыСкладскогоУчета.Заказ = ДополнительныеПараметрыЗаказа.Заказ
		|ГДЕ
		|	(СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 3
		|			ИЛИ СтатусыСкладскогоУчета.Заказ.СтатусИнтернетМагазина = 4)";
	
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаС));
	Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(ДатаС,-3));
	Запрос.УстановитьПараметр("Контр", Контр);
	
	Возврат Запрос.Выполнить().Выгрузить();		
Конецфункции

&НаКлиенте
Процедура ЗаполнитьДок(ВозвратМ)
	Контр = Элементы.Список.ТекущиеДанные.ЗаказВладелецТовара;
	Если  Контр <> Неопределено Тогда
		СкладМаг = Элементы.Список.ТекущиеДанные.СкладВозврата;
		ТабЗн = ПолучитьРезультатЗапроса(Контр);
		
		Отбор = Новый Структура;
    	Отбор.Вставить("СкладВозврата", СкладМаг);
        Отбор.Вставить("Регион", Элементы.Список.ТекущиеДанные.Регион);
		Отбор.Вставить("ТекущийСтатус", ВозвратМ);
    	КопияТаб = ТабЗн.Скопировать(Отбор);
		
		Если КопияТаб.Количество() = 0 Тогда
			Предупреждение("Нет данных для создания документа");	
		Иначе
			Форма = ОткрытьФорму("Документ.НаборнаяВедомостьДляВозврата.Форма.ФормаДокумента", Новый Структура);
			Форма.ЗаполнитьОсновныеСерверМ(Контр,ВозвратМ,СкладМаг);
		    Форма.ЗаполнитьСерверМ(КопияТаб, Ложь);
			Форма.Модифицированность = Истина;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДляВозврат1(Команда)
	ЗаполнитьДок(Справочники.СтатусыСкладскогоУчета.Возврат1);
КонецПроцедуры

&НаКлиенте
Процедура ДляВозврат2(Команда)
	ЗаполнитьДок(Справочники.СтатусыСкладскогоУчета.Возврат2);
КонецПроцедуры


