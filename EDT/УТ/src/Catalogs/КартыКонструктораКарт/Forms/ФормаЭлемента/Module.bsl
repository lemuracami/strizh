
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Родитель = Справочники.КартыКонструктораКарт.ТарификацияПартнеров Тогда
	Иначе
		Элементы.ФормаСоздатьСхемуТарификации.Доступность = Ложь;
		//Асеев 10.10.2024 (Задача № 5335)>>>
		Элементы.КартаТарификацииПартнеров_IDsql.Доступность = Ложь;
		Элементы.ЗонаТарификацииПриНепривязанномАдресе.Доступность = Ложь;
		//Асеев 10.10.2024 (Задача № 5335)<<<
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьСхемуТарификацииНаСервере()
	
	ВидМетода = Перечисления.ВидыЗапросовWEBСервис.CreateMapResult;
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("КодРегиона", Формат(Объект.Регион.Код, "ЧГ="));
	ПараметрыЗапроса.Вставить("constructorId", Объект.ИдентификаторКарты);
	                            
	ПолученныеДанные = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(ВидМетода, ПараметрыЗапроса);
	Если Не ПолученныеДанные.Успешно Тогда
		Сообщить("CreateMapResult - неуспешно!");
		Возврат Неопределено;
	КонецЕсли;		
	
	Данные = ПолученныеДанные.Данные;
	
	Таб = Новый ТаблицаЗначений();
	Таб.колонки.Добавить("CreateDate", Новый ОписаниеТипов("Дата",,,,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	Таб.колонки.Добавить("versionID", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(10,0)));
	Таб.колонки.Добавить("regionID", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(10,0)));
	Если ВидМетода = Перечисления.ВидыЗапросовWEBСервис.GetMapVersionsResult Тогда
		Схемы = Данные.GetMapVersionsResult.Maps;
		Для Сч = 0 По Схемы.Количество() - 1 Цикл
			Нов = Таб.Добавить();
			ЗаполнитьЗначенияСвойств(Нов, Схемы[Сч]);
		КонецЦикла;	
	ИначеЕсли ВидМетода = Перечисления.ВидыЗапросовWEBСервис.CreateMapResult Тогда
		Схема = Данные.CreateMapResult.Map;
		Нов = Таб.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Схема);
		Нов.CreateDate = ТекущаяДата();
	КонецеСли;
	
	СхемыЗонТарификацииПартнеров = Справочники.СхемыЗонТарификацииПартнеров.НайтиПоРеквизиту("id_Админка", Нов.versionID);
	Если СхемыЗонТарификацииПартнеров.Пустая() Тогда
		СхемыЗонТарификацииПартнеров = Справочники.СхемыЗонТарификацииПартнеров.СоздатьЭлемент();
		СхемыЗонТарификацииПартнеров.ДатаСоздания = Нов.CreateDate;
	Иначе
		СхемыЗонТарификацииПартнеров = СхемыЗонТарификацииПартнеров.ПолучитьОбъект();
	КонецЕсли;
	СхемыЗонТарификацииПартнеров.id_Админка = Нов.versionID;
	СхемыЗонТарификацииПартнеров.Карта = Объект.Ссылка;
	СхемыЗонТарификацииПартнеров.Регион = Объект.Регион;
	СхемыЗонТарификацииПартнеров.Наименование = Объект.Наименование;
	СхемыЗонТарификацииПартнеров.Записать();
	
	МассивИдентификаторовСхем = Новый Массив;
	
	Для каждого ТекСтрока из Таб цикл
		МассивИдентификаторовСхем.Добавить(ТекСтрока.versionID);
	КонецЦикла;
	
	ВидМетода = Перечисления.ВидыЗапросовWEBСервис.GetMapResult;
	Схема = СхемыЗонТарификацииПартнеров.Ссылка;
	
	Для Каждого ИдентификаторСхемы из МассивИдентификаторовСхем Цикл
		ПараметрыЗапроса = Новый Структура;
		ПараметрыЗапроса.Вставить("ИдентификаторСхемы", ИдентификаторСхемы);
		ПолученныеДанные = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(ВидМетода, ПараметрыЗапроса);
		
		Если Не ПолученныеДанные.Успешно Тогда
			Сообщить("GetMapResult - неуспешно!");
			Возврат Неопределено;
		КонецЕсли;
		
		Полигоны = ПолученныеДанные.Данные.GetMapResult.Map.Polygons;
		
		Для Сч = 0 По Полигоны.Количество() - 1 Цикл
			Полигон = Полигоны[Сч];
			ПолигонСсылка = Справочники.ЗоныТарификацииПартнеров.НайтиПоРеквизиту("id_Админка", Полигон.id,, Схема);
			Если ПолигонСсылка.Пустая() Тогда
				ПолигонОбъект = Справочники.ЗоныТарификацииПартнеров.СоздатьЭлемент();
				ПолигонОбъект.Владелец = Схема;
			Иначе	
				ПолигонОбъект = ПолигонСсылка.ПолучитьОбъект();
				ПолигонОбъект.ТочкиПолигона.Очистить();
			КонецеСли;	
			
			ПолигонОбъект.id_Админка = Полигон.id;
			ПолигонОбъект.Наименование = СокрЛП(СтрЗаменить(Полигон.Name, Символы.ПС, ""));
			
			ТочкиПолигона = Полигон.PolygonPoints;
			Для СчТочки = 0 По ТочкиПолигона.Количество() - 1 Цикл
				Нов = ПолигонОбъект.ТочкиПолигона.Добавить();
				Нов.id = ТочкиПолигона[СчТочки].id;
				Нов.Широта = ТочкиПолигона[СчТочки].Latitude;
				Нов.Долгота = ТочкиПолигона[СчТочки].Longitude;
			КонецЦикла;	
			ПолигонОбъект.Записать();
		КонецЦикла;	

	КонецЦикла;
	
	Возврат Схема;
	
КонецФункции

&НаКлиенте
Процедура СоздатьСхемуТарификации(Команда)
	
	Если Не (ЗначениеЗаполнено(Объект.Регион) И ЗначениеЗаполнено(Объект.ИдентификаторКарты)) Тогда
		ПоказатьПредупреждение(, "Регион и Идентификатор карты должны быть заполнены!");
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
		ПоказатьПредупреждение(, "Карта не записана!");
		Возврат;
	КонецЕсли;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьСхемуТарификацииВопрос", ЭтотОбъект), "Создать схему тарификации?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСхемуТарификацииВопрос(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Схема = СоздатьСхемуТарификацииНаСервере();
	Если Схема = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьСхемуТарификацииВопрос", ЭтотОбъект, Новый Структура("Схема", Схема)), "Установить новую схему карт активной?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСхемуТарификацииВопрос(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСхемуТарификацииНаСервере(ДополнительныеПараметры.Схема);
	
	ПоказатьПредупреждение(, "Выставите номера зон в справочнике зон!");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСхемуТарификацииНаСервере(Схема)
	
	ВидМетода = Перечисления.ВидыЗапросовWEBСервис.SetActiveMapVersionResult;
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("ИдентификаторСхемы", Схема.id_Админка);
	ПараметрыЗапроса.Вставить("КодРегиона", Формат(Объект.Регион.Код, "ЧГ="));
	
	ПолученныеДанные = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(ВидМетода, ПараметрыЗапроса);
	Если Не ПолученныеДанные.Успешно Тогда
		Сообщить("SetActiveMapVersionResult - неуспешно!");
		Возврат;
	КонецЕсли;		
	
	ЗаписьРегистра = РегистрыСведений.АктуальныеСхемыЗонКартТарификацииПартнеров.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Период = ТекущаяДата();
	ЗаписьРегистра.КартаКонструктораКарт = Объект.Ссылка;
	ЗаписьРегистра.СхемаЗонТарификацииПартнеров = Схема;
	ЗаписьРегистра.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	ЗаписьРегистра.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//Асеев 10.10.2024 (Задача № 5335)>>>
	Если Объект.Родитель = Справочники.КартыКонструктораКарт.ТарификацияПартнеров Тогда
		Если ПустаяСтрока(Объект.КартаТарификацииПартнеров_IDsql) Тогда
			Отказ = Истина;
			Сообщить("Идентификатор тарификации (админка) не указан!");
			Возврат;
		КонецЕсли;
		Если Объект.ЗонаТарификацииПриНепривязанномАдресе.Пустая() Тогда
			Отказ = Истина;
			Сообщить("Зона тарификации при непривязанном адресе не заполнена!");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	//Асеев 10.10.2024 (Задача № 5335)<<<

КонецПроцедуры


