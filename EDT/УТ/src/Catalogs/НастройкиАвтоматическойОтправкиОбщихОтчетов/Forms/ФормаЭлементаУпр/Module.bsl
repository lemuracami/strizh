&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	РасписаниеРегламентногоЗадания = Неопределено;
	Задание = НайтиРегламентноеЗаданиеПоНастройке();
	ПолучитьТекстРасписания(Задание);
	
	Элементы.РегламентноеЗадание.Доступность = РольДоступна("ПолныеПрава") И РольДоступна("Админы"); 
	Элементы.РегламентноеЗадание.ТолькоПросмотр = НЕ (РольДоступна("ПолныеПрава") И РольДоступна("Админы")); 
	
	//Геннадий #4415 25.12.2020 ->
	СписокОператоров = ПолучитьСписокЗначений();
	Для Каждого строка Из СписокОператоров Цикл
		Элементы.ОператорРассылки.СписокВыбора.Добавить(строка.Ссылка);	
	КонецЦикла;	
	//Геннадий ->
	
КонецПроцедуры

//Геннадий #4415 25.12.2020 ->
&НаСервере
Функция ПолучитьСписокЗначений()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОператорыСМСРассылки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ОператорыСМСРассылки КАК ОператорыСМСРассылки
		|ГДЕ
		|	ОператорыСМСРассылки.ВидРассылки = &ВидРассылки
		|	И НЕ ОператорыСМСРассылки.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ВидРассылки", Перечисления.ВидыРассылок.EMAIL);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
//Геннадий <-

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ПолучитьТекстРасписания();
КонецПроцедуры

// Якурнов 23.07.2018 13:38:12
&НаСервере
Функция НайтиРегламентноеЗаданиеПоНастройке()	
	Попытка
		
		Если НЕ ПустаяСтрока(Объект.РегламентноеЗадание) Тогда
			
			УникальныйИдентификаторЗадания = Новый УникальныйИдентификатор(Объект.РегламентноеЗадание);
			ТекущееРегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(УникальныйИдентификаторЗадания);
			
			Если РасписаниеРегламентногоЗадания = Неопределено Тогда
				РасписаниеРегламентногоЗадания = ТекущееРегламентноеЗадание.Расписание;
			КонецЕсли;	
			
		Иначе
			
			ТекущееРегламентноеЗадание = Неопределено;
		КонецЕсли;
		
	Исключение
		
		ТекущееРегламентноеЗадание = Неопределено;

	КонецПопытки;
	
	Возврат ТекущееРегламентноеЗадание;
	
КонецФункции 

&НаСервере
Процедура ПолучитьТекстРасписания(Задание = Неопределено)
	
	Если Задание <> Неопределено Тогда  //Берем из РегЗадания (при открытии)
		Если Задание.Использование Тогда
			ПрефиксРасписания = "Расписание: ";
		Иначе
			ПрефиксРасписания = "Расписание (НЕ АКТИВНО): ";
		КонецЕсли;
		НадписьРасписаниеРегламентногоЗаданияНастройки = ПрефиксРасписания + Строка(Задание.Расписание);

	Иначе                              //Берем из Формы
		Если РасписаниеРегламентногоЗадания = Неопределено Тогда
			НадписьРасписаниеРегламентногоЗаданияНастройки = "<Расписание не задано>";
		Иначе                         
			Если Объект.ИспользоватьРегламентныеЗадания Тогда
				ПрефиксРасписания = "Расписание: ";
			Иначе
				ПрефиксРасписания = "Расписание (НЕ АКТИВНО): ";
			КонецЕсли;
			НадписьРасписаниеРегламентногоЗаданияНастройки = ПрефиксРасписания + Строка(РасписаниеРегламентногоЗадания);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры	

&НаКлиенте
Процедура НадписьРасписаниеРегламентногоЗаданияНастройкиНажатие(Элемент, СтандартнаяОбработка)
	РедактированиеРасписанияРегламентногоЗадания();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРегламентныеЗаданияПриИзменении(Элемент)
	ПолучитьТекстРасписания();
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗадания()
	
	// Якурнов 23.07.2018 17:53:52
	// редактирование самого расписания непосредственно
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;	
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	
	Если Диалог.ОткрытьМодально() Тогда
		
		РасписаниеРегламентногоЗадания = Диалог.Расписание;
		ПолучитьТекстРасписания();
				
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоздатьИлиПолучитьРегламентноеЗаданиеДляРедактирования();
		
	ОбъектЗадания = НайтиРегламентноеЗаданиеПоНастройке();
	
	Если ОбъектЗадания = Неопределено Тогда
		//ОбъектЗадания = РегламентныеЗадания.СоздатьРегламентноеЗадание("ОтправкаОтчетовПоРасписанию");
		ОбъектЗадания = РегламентныеЗадания.СоздатьРегламентноеЗадание("ОтправкаОтчетовКомпанииПоРасписанию");

		ОбъектЗадания.Наименование = Объект.Наименование;
	КонецЕсли;
	
	// Якурнов 25.07.2018 9:27:50 Использование ставится на уровне МОДУЛЯ ОБЪЕКТА
	//ОбъектЗадания.Использование = Объект.ИспользоватьРегламентныеЗадания;
	
	ОбъектЗадания.Расписание = РасписаниеРегламентногоЗадания;
	Попытка
		ОбъектЗадания.Записать();
		Объект.РегламентноеЗадание = Строка(ОбъектЗадания.УникальныйИдентификатор);
	Исключение
		ВызватьИсключение "Произошла ошибка при сохранении расписания выполнения обменов. Возможно данные расписания были изменены. Закройте форму настройки и повторите попытку изменения расписания еще раз.
		|Подробное описание ошибки: " + ОписаниеОшибки();
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// для помеченой на удаление настройки обмен автоматически не производится
	Если Объект.ИспользоватьРегламентныеЗадания И Объект.ПометкаУдаления Тогда
		Сообщить("Настройка помечена на удаление. Автоматический обмен выполняться не будет!", СтатусСообщения.Важное);	
	КонецЕсли;
	
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		Сообщить("Заполните расписание!!!");
		Отказ = Истина;
	КонецЕсли;
	Объект.РасписаниеСтрокой = НадписьРасписаниеРегламентногоЗаданияНастройки;
	СоздатьИлиПолучитьРегламентноеЗаданиеДляРедактирования();

КонецПроцедуры

