
&НаСервереБезКонтекста
Процедура ВыставитьПорядокЭлементовНаСервере(СхемаМаршрутизации)
	// Вставить содержимое обработчика.
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ПолигоныМаршрутизации.Ссылка КАК Полигон,
	            |	ПолигоныМаршрутизации.Наименование КАК Наименование
	            |ИЗ
	            |	Справочник.ПолигоныМаршрутизации КАК ПолигоныМаршрутизации
	            |ГДЕ
	            |	ПолигоныМаршрутизации.Владелец = &Схема";
	Зап.УстановитьПараметр("Схема", СхемаМаршрутизации);
	
	Выб = Зап.Выполнить().Выбрать();
	
	Пока Выб.Следующий() Цикл
		Попытка
			НаимЧисло = Число(СтрЗаменить(Лев(Выб.Наименование, 3), "-", ""));
			Полигон = Выб.Полигон.ПолучитьОбъект();
			Полигон.Порядок = НаимЧисло;
			Полигон.Записать();
		Исключение
			Сообщить("Ошибка обработки наименования " + Выб.Наименование, СтатусСообщения.ОченьВажное);
		КонецПопытки;	
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ВыставитьПорядокЭлементов(Команда)
	Зн = "";
	Если ВвестиЗначение(Зн, "Выберите схему..", Тип("СправочникСсылка.СхемыПолигональнойМаршрутизации")) Тогда
		ВыставитьПорядокЭлементовНаСервере(Зн);
		Сообщить("Обработка завершена!");
	КонецеСли;	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыставитьНастройкиПолигоновПоНовойСхемеПланированияНаСервере(СхемаИсточник, СхемаНовая)
	// Вставить содержимое обработчика.
	
	НачатьТранзакцию();
	
	//полигоны по умолчанию
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ПланируемыеПолигоныЭкипажейСрезПоследних.Водитель КАК Водитель,
	            |	ПолигоныМаршрутизации.Ссылка КАК НовыйПолигон,
	            |	ПланируемыеПолигоныЭкипажейСрезПоследних.СменаМаршрутизации КАК СменаМаршрутизации
	            |ИЗ
	            |	РегистрСведений.ПланируемыеПолигоныЭкипажей.СрезПоследних(, СхемаПолигональнойМаршрутизации = &СхемаПолигональнойМаршрутизации) КАК ПланируемыеПолигоныЭкипажейСрезПоследних
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПолигоныМаршрутизации КАК ПолигоныМаршрутизации
	            |		ПО ПланируемыеПолигоныЭкипажейСрезПоследних.Полигон.Порядок = ПолигоныМаршрутизации.Порядок
	            |			И (ПолигоныМаршрутизации.Владелец = &НоваяСхема)
	            |ГДЕ
	            |	ПланируемыеПолигоныЭкипажейСрезПоследних.ПолигонУчитывается = ИСТИНА
	            |
	            |УПОРЯДОЧИТЬ ПО
	            |	Водитель";
	Зап.УстановитьПараметр("СхемаПолигональнойМаршрутизации", СхемаИсточник);
	Зап.УстановитьПараметр("НоваяСхема", СхемаНовая);
	
	Выб = Зап.Выполнить().Выбрать();
	
	ТекД = ТекущаяДата();
	
	Пока Выб.Следующий() Цикл
		Наб = РегистрыСведений.ПланируемыеПолигоныЭкипажей.СоздатьНаборЗаписей();
		Наб.Отбор.Водитель.Установить(Выб.Водитель);
		Наб.Отбор.СменаМаршрутизации.Установить(Выб.СменаМаршрутизации);
		Наб.Отбор.СхемаПолигональнойМаршрутизации.Установить(СхемаНовая);
		Наб.Отбор.Полигон.Установить(Выб.НовыйПолигон);
		Наб.Отбор.Период.Установить(ТекД);
		
		Нов = Наб.Добавить();
		Нов.Водитель = Выб.Водитель;
		Нов.СхемаПолигональнойМаршрутизации = СхемаНовая;
		Нов.СменаМаршрутизации = Выб.СменаМаршрутизации;
		Нов.Полигон = Выб.НовыйПолигон;
		
		Нов.Период = ТекД;
		Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		Нов.ПолигонУчитывается = Истина;
		Наб.Записать();
	КонецЦикла;	
	
	//предпочитаемые полигоны
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ПредпочитаемыеПолигоныЭкипажейСрезПоследних.Водитель КАК Водитель,
	            |	ПолигоныМаршрутизации.Ссылка КАК НовыйПолигон,
	            |	ПредпочитаемыеПолигоныЭкипажейСрезПоследних.Порядок КАК Порядок
	            |ИЗ
	            |	РегистрСведений.ПредпочитаемыеПолигоныЭкипажей.СрезПоследних(, СхемаПолигональнойМаршрутизации = &СхемаПолигональнойМаршрутизации) КАК ПредпочитаемыеПолигоныЭкипажейСрезПоследних
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПолигоныМаршрутизации КАК ПолигоныМаршрутизации
	            |		ПО ПредпочитаемыеПолигоныЭкипажейСрезПоследних.Полигон.Порядок = ПолигоныМаршрутизации.Порядок
	            |			И (ПолигоныМаршрутизации.Владелец = &НоваяСхема)
	            |ГДЕ
	            |	ПредпочитаемыеПолигоныЭкипажейСрезПоследних.ПолигонУчитывается = ИСТИНА
	            |
	            |УПОРЯДОЧИТЬ ПО
	            |	Водитель";
	Зап.УстановитьПараметр("СхемаПолигональнойМаршрутизации", СхемаИсточник);
	Зап.УстановитьПараметр("НоваяСхема", СхемаНовая);
	
	Выб = Зап.Выполнить().Выбрать();
	
	ТекД = ТекущаяДата();
	
	Пока Выб.Следующий() Цикл
		Наб = РегистрыСведений.ПредпочитаемыеПолигоныЭкипажей.СоздатьНаборЗаписей();
		Наб.Отбор.Водитель.Установить(Выб.Водитель);
		Наб.Отбор.СхемаПолигональнойМаршрутизации.Установить(СхемаНовая);
		Наб.Отбор.Период.Установить(ТекД);
		
		Нов = Наб.Добавить();
		Нов.Водитель = Выб.Водитель;
		Нов.СхемаПолигональнойМаршрутизации = СхемаНовая;
		Нов.Полигон = Выб.НовыйПолигон;
		
		Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		Нов.Период = ТекД;
		Нов.Порядок = Выб.Порядок;
		Нов.ПолигонУчитывается = Истина;
		
		Наб.Записать();
	КонецЦикла;	
	
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры

&НаКлиенте
Процедура ВыставитьНастройкиПолигоновПоНовойСхемеПланирования(Команда)
	Зн = "";
	ЗнНовый = "";
	Если ВвестиЗначение(Зн, "Выберите схему источник..", Тип("СправочникСсылка.СхемыПолигональнойМаршрутизации")) Тогда
		Если ВвестиЗначение(ЗнНовый, "Выберите новую схему планирования..", Тип("СправочникСсылка.СхемыПолигональнойМаршрутизации")) Тогда
			ВыставитьНастройкиПолигоновПоНовойСхемеПланированияНаСервере(Зн, ЗнНовый);
		КонецеСли;
	КонецЕсли;
	
КонецПроцедуры
