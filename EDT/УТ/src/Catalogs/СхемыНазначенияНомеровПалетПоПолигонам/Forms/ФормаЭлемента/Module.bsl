&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Элементы.Терминал.ТолькоПросмотр = Ложь;
	КонецеСли;	
	УстановитьТекущуюАктивнуюСхемуПолигональнойМаршрутизации()
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущуюАктивнуюСхемуПолигональнойМаршрутизации()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	АктивнаяСхемаПолигональнойМаршрутизацииСрезПоследних.СхемаПолигональнойМаршрутизации КАК Схема
	               |ИЗ
	               |	РегистрСведений.АктивнаяСхемаПолигональнойМаршрутизации.СрезПоследних(, РегиональныйТерминал.Ссылка = &Терминал) КАК АктивнаяСхемаПолигональнойМаршрутизацииСрезПоследних";
	Запрос.УстановитьПараметр("Терминал", Объект.Терминал);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ТекущаяАктивнаяСхемаПолигональнойМаршрутизации = Выборка.Схема;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолигоныНомерПолигонаПриИзменении(Элемент)
	ТекДанные = Элементы.Полигоны.ТекущиеДанные;
	Отбор = Новый Структура("НомерПолигона",ТекДанные.НомерПолигона);
	СтрокиНомеров = Объект.Полигоны.НайтиСтроки(Отбор);
	Если СтрокиНомеров.Количество() > 1 Тогда
		Сообщить("Такая строка уже есть!!!");
		ТекДанные.НаименованиеПолигона = "";
		ТекДанные.НомерПолигона = 0;
	Иначе	
		ТекДанные.НаименованиеПолигона = ПолучитьНаименованиеПолигонаПоНомеру(ТекДанные.НомерПолигона);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьНаименованиеПолигонаПоНомеру(НомерПолигона);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПолигоныМаршрутизации.Наименование КАК НаименованиеПолигона
	|ИЗ
	|	Справочник.ПолигоныМаршрутизации КАК ПолигоныМаршрутизации
	|ГДЕ
	|	ПолигоныМаршрутизации.Порядок = &НомерПолигона
	|	И ПолигоныМаршрутизации.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец",ТекущаяАктивнаяСхемаПолигональнойМаршрутизации);
	Запрос.УстановитьПараметр("НомерПолигона",НомерПолигона);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.НаименованиеПолигона;
	Иначе
		Возврат "Полигон с таким номером не найден";
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПолигоныПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСоответствияКодовИНаименованийПолигонов()
	Для Каждого Элем из Объект.Полигоны Цикл
		Элем.НаименованиеПолигона = ПолучитьНаименованиеПолигонаПоНомеру(Элем.НомерПолигона);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьСоответствияКодовИНаименованийПолигонов();
	ЭтаФорма.ТолькоПросмотр = ДоступностьРедактированияСхемы();
КонецПроцедуры

&НаСервере
Функция ДоступностьРедактированияСхемы()
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ФормированиеРейсов.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ФормированиеРейсов КАК ФормированиеРейсов
	|ГДЕ
	|	ФормированиеРейсов.СхемаНазначенияНомеровПалетПоПолигонам = &Схема";
	
	Запрос.УстановитьПараметр("Схема", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	УдалениеНеАктуальныхСтрок();
КонецПроцедуры

&НаСервере
Процедура УдалениеНеАктуальныхСтрок()
		
	Отбор = Новый Структура("НаименованиеПолигона","Полигон с таким номером не найден");
	НайденныеСтроки = Объект.Полигоны.НайтиСтроки(Отбор);
	Для Каждого Элем из НайденныеСтроки Цикл
		  Объект.ПолигоныМаршрутизации.Удалить(Элем);
	КонецЦикла;
	Отбор = Новый Структура("НаименованиеПолигона","");
	НайденныеСтроки = Объект.Полигоны.НайтиСтроки(Отбор);
	Для Каждого Элем из НайденныеСтроки Цикл
		  Объект.ПолигоныМаршрутизации.Удалить(Элем);
	КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЗаполнитьСоответствияКодовИНаименованийПолигонов();
КонецПроцедуры


&НаКлиенте
Процедура ТерминалПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	УстановитьТекущуюАктивнуюСхемуПолигональнойМаршрутизации();
КонецПроцедуры

