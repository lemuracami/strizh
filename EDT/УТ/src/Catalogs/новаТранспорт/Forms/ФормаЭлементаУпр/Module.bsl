&НаКлиенте
Перем лДопНастройки_ПечататьЧекНаСервереККМ;

&НаКлиенте
Перем лДопНастройки_УдаленноеЗакрытиеРейсов;

&НаКлиенте
Перем лДопНастройки_МаксимальноеКоличествоЗаказовПМ;

&НаКлиенте
Перем лДопНастройки_ОсновнаяРольТранспорта;

&НаКлиенте
Перем лДопНастройки_ФорматАвтотранспорта;

&НаКлиенте
Перем лДопНастройки_ЭтоШтатныйТранспорт;

&НаСервере
Процедура ЗаполнитьРеквизитыДопПараметров()
	Зап = Новый Запрос;
	Зап.Текст = 
	"ВЫБРАТЬ
	|	ДополнительныеПараметрыТранспортаСрезПоследних.Период КАК Период,
	|	ДополнительныеПараметрыТранспортаСрезПоследних.УдаленноеЗакрытиеРейсов КАК УдаленноеЗакрытиеРейсов,
	|	ВЫБОР
	|		КОГДА ДополнительныеПараметрыТранспортаСрезПоследних.РежимПечатиЧеков = ЗНАЧЕНИЕ(Перечисление.ВариантыПечатиЧековРМЭкипажа.ПечататьЧекНаСервереККМ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РежимПечатиЧеков,
	|	ДополнительныеПараметрыТранспортаСрезПоследних.МаксимальноеКоличествоЗаказовПриПолигональнойМаршрутизации КАК МаксимальноеКоличествоЗаказовПМ,
	|	ДополнительныеПараметрыТранспортаСрезПоследних.ОсновнаяРольТранспорта КАК ОсновнаяРольТранспорта,
	|	ДополнительныеПараметрыТранспортаСрезПоследних.ФорматАвтотранспорта КАК ФорматАвтотранспорта,
	|	ДополнительныеПараметрыТранспортаСрезПоследних.ЭтоШтатныйТранспорт КАК ЭтоШтатныйТранспорт
	|ИЗ
	|	РегистрСведений.ДополнительныеПараметрыТранспорта.СрезПоследних(, Транспорт = &Транспорт) КАК ДополнительныеПараметрыТранспортаСрезПоследних";
	Зап.УстановитьПараметр("Транспорт", Объект.Ссылка);
	
	Выб = Зап.Выполнить().Выбрать();
	
	Пока Выб.Следующий() Цикл
		ДопНастройки_ДатаСведений = Выб.Период;
		ДопНастройки_ПечататьЧекНаСервереККМ = Выб.РежимПечатиЧеков;
		
		ДопНастройки_УдаленноеЗакрытиеРейсов = Выб.УдаленноеЗакрытиеРейсов;
		ДопНастройки_МаксимальноеКоличествоЗаказовПМ = Выб.МаксимальноеКоличествоЗаказовПМ;
		ДопНастройки_ОсновнаяРольТранспорта = Выб.ОсновнаяРольТранспорта;
		ДопНастройки_ФорматАвтотранспорта = Выб.ФорматАвтотранспорта;
		ДопНастройки_ЭтоШтатныйТранспорт = Выб.ЭтоШтатныйТранспорт;
	КонецЦикла;
	
	Если Не ДопНастройки_ЭтоШтатныйТранспорт Тогда
		Элементы.ДопНастройки_ФорматАвтотранспорта.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры	


&НаКлиенте
Процедура ЗаполнитьПромежуточныеЗначения()
 	лДопНастройки_ПечататьЧекНаСервереККМ = ДопНастройки_ПечататьЧекНаСервереККМ;
 	лДопНастройки_УдаленноеЗакрытиеРейсов = ДопНастройки_УдаленноеЗакрытиеРейсов;
	лДопНастройки_МаксимальноеКоличествоЗаказовПМ = ДопНастройки_МаксимальноеКоличествоЗаказовПМ;
	лДопНастройки_ОсновнаяРольТранспорта = ДопНастройки_ОсновнаяРольТранспорта;
	лДопНастройки_ФорматАвтотранспорта = ДопНастройки_ФорматАвтотранспорта;
	лДопНастройки_ЭтоШтатныйТранспорт = ДопНастройки_ЭтоШтатныйТранспорт;
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	ЗаполнитьРеквизитыДопПараметров();
	ЗаполнитьДанныеКатегорийПоУмолчанию();	
	
	УстановкаФильтраАктивныхКатегорий();
	УправлениеДиалогом();
	ЗаполнитьПромежуточныеЗначения();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДиалогом()
	Если Объект.БезМобильногоПриложения Тогда
		Элементы.ДопНастройки_ПечататьЧекНаСервереККМ.Доступность = Ложь;
		Элементы.ДопНастройки_УдаленноеЗакрытиеРейсов.Доступность = Ложь;
	Иначе
		Элементы.ДопНастройки_ПечататьЧекНаСервереККМ.Доступность = Истина;
		Элементы.ДопНастройки_УдаленноеЗакрытиеРейсов.Доступность = Истина;		
	КонецеСли;	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаписатьДанныеДопПараметровНаКлиенте()
	ЕСли лДопНастройки_ПечататьЧекНаСервереККМ = ДопНастройки_ПечататьЧекНаСервереККМ И 
		лДопНастройки_УдаленноеЗакрытиеРейсов = ДопНастройки_УдаленноеЗакрытиеРейсов И
		лДопНастройки_МаксимальноеКоличествоЗаказовПМ = ДопНастройки_МаксимальноеКоличествоЗаказовПМ И
		лДопНастройки_ОсновнаяРольТранспорта = ДопНастройки_ОсновнаяРольТранспорта И
		лДопНастройки_ФорматАвтотранспорта = ДопНастройки_ФорматАвтотранспорта И
		лДопНастройки_ЭтоШтатныйТранспорт = ДопНастройки_ЭтоШтатныйТранспорт Тогда
	    Возврат;
	КонецеСли;	
	ЗаписатьДанныеДопПараметров();
КонецПроцедуры	
	
	

&НаСервере
Процедура ЗаписатьДанныеДопПараметров()
	
	ТекД = ТекущаяДата();
	
	Наб = РегистрыСведений.ДополнительныеПараметрыТранспорта.СоздатьНаборЗаписей();
	Наб.Отбор.Период.Установить(ТекД);
	Наб.Отбор.Транспорт.Установить(Объект.Ссылка);
	
	Нов = Наб.Добавить();
	
	Нов.Период = ТекД;
	Нов.Транспорт = Объект.Ссылка;
	Нов.МаксимальноеКоличествоЗаказовПриПолигональнойМаршрутизации = ДопНастройки_МаксимальноеКоличествоЗаказовПМ;
	Если ДопНастройки_ПечататьЧекНаСервереККМ Тогда
		Нов.РежимПечатиЧеков = Перечисления.ВариантыПечатиЧековРМЭкипажа.ПечататьЧекНаСервереККМ;
	Иначе	
		Нов.РежимПечатиЧеков = Перечисления.ВариантыПечатиЧековРМЭкипажа.НеПечататьЧек;
	КонецеСли;	
	Нов.УдаленноеЗакрытиеРейсов = ДопНастройки_УдаленноеЗакрытиеРейсов;
	Нов.ОсновнаяРольТранспорта = ДопНастройки_ОсновнаяРольТранспорта;
	Нов.ФорматАвтотранспорта = ДопНастройки_ФорматАвтотранспорта;
	Нов.ЭтоШтатныйТранспорт = ДопНастройки_ЭтоШтатныйТранспорт;
	
	Наб.Записать();
КонецПроцедуры	


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// Вставить содержимое обработчика.
	//ЗаписатьДанныеДопПараметров();
	ЗаписатьКатегорииПоумолчанию();
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// Вставить содержимое обработчика.
	ЗаписатьДанныеДопПараметровНаКлиенте()
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьМассивСтруктурДанныхПМ(Транспорт, СхемаКатегорий)
	СхемаКатегорий = МаршрутизацияЗаказовСервер.ОпределитьАктуальнуюСхемуЛогистическихБрейков();
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ПланируемыеКатегорииЗаказовТранспортаСрезПоследних.Категория КАК Категория,
	            |	ПланируемыеКатегорииЗаказовТранспортаСрезПоследних.КатегорияУчитывается КАК Актуален,
	            |	ПланируемыеКатегорииЗаказовТранспортаСрезПоследних.ТипЗаказа КАК ТипЗаказа
	            |ИЗ
	            |	РегистрСведений.ПланируемыеКатегорииЗаказовТранспорта.СрезПоследних(
	            |			,
	            |			Транспорт = &Транспорт
	            |				И СхемаЛогистическихБрейков = &СхемаЛогистическихБрейков) КАК ПланируемыеКатегорииЗаказовТранспортаСрезПоследних";
	Зап.УстановитьПараметр("Транспорт", Транспорт);
	Зап.УстановитьПараметр("СхемаЛогистическихБрейков", СхемаКатегорий);
	МасЗначений = Новый массив;
	
	Выб = Зап.Выполнить().Выбрать();
	
	Пока Выб.Следующий() Цикл
		Струк = Новый Структура;
		Струк.Вставить("Категория", Выб.Категория);
		Струк.Вставить("Актуален", Выб.Актуален);
		Струк.Вставить("ТипЗаказа", Выб.ТипЗаказа);
		
		МасЗначений.Добавить(Струк);
	КонецЦикла;	
	
	Возврат МасЗначений;
КонецФункции	

&НаКлиенте
Процедура ЗаполнитьДанныеКатегорийПоУмолчанию()
	
	МассивСтруктур = ПолучитьМассивСтруктурДанныхПМ(Объект.Ссылка, СхемаКатегорий);
	ТаблицаКатегорий.Очистить();
	
	Для Каждого Тек Из МассивСтруктур Цикл
		Нов = ТаблицаКатегорий.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Тек);
		Нов.ЗаполненоИзБД = Истина;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКатегорийПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УстановкаФильтраАктивныхКатегорий()
	Элементы.ТаблицаКатегорийОтборАктивныхКатегорий.Пометка = Не Элементы.ТаблицаКатегорийОтборАктивныхКатегорий.Пометка;
	
	Если Элементы.ТаблицаКатегорийОтборАктивныхКатегорий.Пометка Тогда
		ФМ = Новый ФиксированнаяСтруктура("Актуален", Истина);
		Элементы.ТаблицаКатегорий.ОтборСтрок = ФМ;
	Иначе
		Элементы.ТаблицаКатегорий.ОтборСтрок = Неопределено;
	КонецеСли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ОтборАктивныхКатегорий(Команда)
	// Вставить содержимое обработчика.
	УстановкаФильтраАктивныхКатегорий();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКатегорийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Копирование Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьКатегорииПоумолчанию()
	
	Наб = Неопределено;
	
	Для Каждого Тек Из ТаблицаКатегорий Цикл
		Если Не Тек.Модифицировано Тогда
			Продолжить;
		КонецеСли;	
		
		Наб = РегистрыСведений.ПланируемыеКатегорииЗаказовТранспорта.СоздатьНаборЗаписей();
		ТекД = ТекущаяДата();
		Наб.Отбор.Период.Установить(ТекД);
		Наб.Отбор.Транспорт.Установить(Объект.Ссылка);
		Наб.Отбор.Категория.Установить(Тек.Категория);
		
		Нов = Наб.Добавить();
		Нов.Период = ТекД;
		Нов.Транспорт = Объект.Ссылка;
		Нов.КатегорияУчитывается = Тек.Актуален;
		Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		Нов.СхемаЛогистическихБрейков = СхемаКатегорий;
		Нов.Категория = Тек.Категория;
		Нов.ТипЗаказа = Тек.ТипЗаказа;
		
		Наб.Записать();

	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКатегорийПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Элементы.ТаблицаКатегорий.ТекущиеДанные.Модифицировано = Истина;
	Если НоваяСтрока Тогда
		Элементы.ТаблицаКатегорий.ТекущиеДанные.Актуален = Истина;
	КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКатегорийКатегорияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Струк = Новый Структура;
	Струк.Вставить("СхемаБрейков", СхемаКатегорий);
	Струк.Вставить("Транспорт", Объект.Ссылка);
	Ф = ОткрытьФорму("Справочник.ЛогистическиеБрейки.Форма.ФормаВыбора", Струк, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если Не ИсточникВыбора.Элементы.Список.ТекущиеДанные.УжеПривязано Тогда
		Элементы.ТаблицаКатегорий.ТекущиеДанные.Категория = ВыбранноеЗначение;
		Если ЗначениеЗаполнено(Элементы.ТаблицаКатегорий.ТекущиеДанные.Категория) Тогда
			Элементы.ТаблицаКатегорий.ТекущиеДанные.ТипЗаказа = Элементы.ТаблицаКатегорий.ТекущиеДанные.Категория.ТипЗаказа;
			Если Не ЗначениеЗаполнено(Элементы.ТаблицаКатегорий.ТекущиеДанные.ТипЗаказа) Тогда
				Сообщить("На карточке категории не установлен тип заказа!");
				Элементы.ТаблицаКатегорий.ТекущиеДанные.Категория = "";
			КонецеСли;				
		КонецеСли;	
	КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура БезМобильногоПриложенияПриИзменении(Элемент)
	УправлениеДиалогом();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДополнительныеПараметрыТранспортаСрезПоследних.КассовыйСервер КАК КассовыйСервер
	               |ИЗ
	               |	РегистрСведений.ДополнительныеПараметрыТранспорта.СрезПоследних(, Транспорт = &ГруппаТранспорта) КАК ДополнительныеПараметрыТранспортаСрезПоследних";
	Запрос.УстановитьПараметр("ГруппаТранспорта",Объект.Родитель);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КассовыйСервер = Выборка.КассовыйСервер;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДопНастройки_ЭтоШтатныйТранспортПриИзменении(Элемент)
	
	Элементы.ДопНастройки_ФорматАвтотранспорта.ТолькоПросмотр = Не ДопНастройки_ЭтоШтатныйТранспорт;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ДопНастройки_ЭтоШтатныйТранспорт И ДопНастройки_ФорматАвтотранспорта.Пустая() Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Поле ""Формат автотранспорта"" не заполнено",,"ДопНастройки_ФорматАвтотранспорта",, Отказ);
	КонецЕсли;
	
КонецПроцедуры




