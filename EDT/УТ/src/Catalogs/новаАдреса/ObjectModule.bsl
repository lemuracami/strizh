
//**** Вспомогательные функции ****//

// Автоматически формирует наименование по полям адреса.
//
Процедура СформироватьНаименование() Экспорт
	//+Степанов	Замена процедуры формирования адреса от нова на более читаемую.
	Если Не ТочкаИнтереса Тогда 
		Если СокрЛП(Регион) = СокрЛП(НаселенныйПункт) Тогда
			стрНП = СокрЛП(Регион);
		Иначе
			стрНП = СокрЛП(НаселенныйПункт) + ?(ЗначениеЗаполнено(Район), ", " + СокрЛП(Район), "")
			+ ", " + СокрЛП(Регион);
		КонецЕсли;
		
		Наименование = ""
		+ ?(не ТочкаИнтереса,
		Улица.НаименованиеПолное  
		+ ", " + Дом + ?(ПустаяСтрока(Корпус), "", " к " + Корпус)
		,
		?(ВРег(СокрЛП(НаселенныйПункт)) <> ВРег(СокрЛП(НаименованиеТочкиИнтереса)), ", " + НаименованиеТочкиИнтереса, ""))
		+ ", " + стрНП
		+ ?(Страна = Справочники.новаСтраны.Россия, "", ", " + СокрЛП(Страна));		
		Если Лев(Наименование, 2) = ", " Тогда
			Наименование = Сред(Наименование, 3);
		КонецЕсли;
	Иначе
		Наименование = "";
		НаименованиеСтрана = ?(Не ЗначениеЗаполнено(Страна) Или Страна = Справочники.новаСтраны.Россия,"",Страна.Наименование);
		НаименованиеРегион = СокрЛП(Регион);
		НаименованиеРайон  = СокрЛП(Район);
		НаименованиеНаселенныйПункт = СокрЛП(НаселенныйПункт);
		НаименованиеУлица = СокрЛП(Улица);
		
		Если НаименованиеРегион = НаименованиеНаселенныйПункт Тогда
			НаименованиеРегион = "";
		КонецЕсли;	
		Наименование = ?(ПустаяСтрока(НаименованиеСтрана),"",НаименованиеСтрана + ",") + ?(ПустаяСтрока(НаименованиеРегион),"",НаименованиеРегион + ",") 
		+ ?(ПустаяСтрока(НаименованиеРайон),"",НаименованиеРайон + ",") + ?(ПустаяСтрока(НаименованиеНаселенныйПункт),"",НаименованиеНаселенныйПункт + ",") 
		+ ?(ПустаяСтрока(НаименованиеУлица),"",НаименованиеУлица + ",")	+ ?(ПустаяСтрока(Дом),"","д." + Дом + ",")
		+ ?(ПустаяСтрока(Корпус),"","к." + Корпус + ",") + ?(ПустаяСтрока(Квартира),"","кв." + Квартира);
		Если СтрЗаканчиваетсяНа(Наименование,",") Тогда
			Код	= Лев(Наименование,СтрДлина(Наименование) - 1);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

//**** Обработчики событий объекта ****//

//Синхронизация с КСЛ, привязка георайонов
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	//херим нова	
	//Попытка
	//	новаОбменКСЛ.СохранитьАдрес(ЭтотОбъект);
	//Исключение
	//	#Если Клиент Тогда			
	//		новаОбщиеПроцедуры.СообщитьПользователюОбОшибке("ВнутренняОшибкаСервера", ОписаниеОшибки());
	//	#КонецЕсли
	//	Отказ = Истина;
	//КонецПопытки;
	//херим нова
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	//ЗаполнятьРайон = не (ДополнительныеСвойства.Свойство("ПакетнаяЗагрузка") и ДополнительныеСвойства.ПакетнаяЗагрузка);
	
	//Если ЗаполнятьРайон Тогда
	
	тзГеоРайоны = новаКарты.РассчитатьГеоРайоныАдресов(, Широта, Долгота);
	
	НаборЗаписей = РегистрыСведений.новаРайоныАдресов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Адрес.Установить(Ссылка);
	НаборЗаписей.Отбор.УказанВручную.Установить(Ложь);
	
	Для Каждого стрРайон Из тзГеоРайоны Цикл
		НаборЗаписей.Отбор.Классификатор.Установить(стрРайон.Классификатор);
		НаборЗаписей.Отбор.Район.Установить(стрРайон.Район);
		НаборЗаписей.Очистить();
		
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, стрРайон);
		Запись.Адрес = Ссылка;
		Запись.УказанВручную = Ложь;
		
		НаборЗаписей.Записать();
	КонецЦикла;
	//КонецЕсли;
	
КонецПроцедуры

//Синхронизация с КСЛ
//
Процедура ПередУдалением(Отказ)
	//херим нова	
	//Попытка
	//	новаОбменКСЛ.УдалитьАдрес(ЭтотОбъект);
	//Исключение
	//	#Если Клиент Тогда			
	//		новаОбщиеПроцедуры.СообщитьПользователюОбОшибке("ВнутренняОшибкаСервера", ОписаниеОшибки());
	//	#КонецЕсли
	//	Отказ = Истина;
	//КонецПопытки;
	//херим нова	
КонецПроцедуры

//Установка наименования
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ВходитВКлассификатор Тогда
		СформироватьНаименование();
	КонецЕсли;	
	
	ХэшКоординат = новаКарты.ПолучитьХэшКоординат(Широта, Долгота);
	
КонецПроцедуры
