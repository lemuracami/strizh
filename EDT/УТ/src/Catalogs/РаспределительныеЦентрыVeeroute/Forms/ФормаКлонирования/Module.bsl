
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дерево = РеквизитФормыВЗначение("РаспредЦентры");
	
	ВыборкаТерминалов = Справочники.РегиональныеТерминалы.Выбрать();
	
	Пока ВыборкаТерминалов.Следующий() Цикл 
		
		СтрокаДерева = Дерево.Строки.Добавить();
		СтрокаДерева.Центр = ВыборкаТерминалов.Ссылка;
		
		ВыборкаЦентров = Справочники.РаспределительныеЦентрыVeeroute.Выбрать(,ВыборкаТерминалов.Ссылка);
		Пока ВыборкаЦентров.Следующий() Цикл 
			
			Если ВыборкаЦентров.НаименованиеVeeroute = "Склад" Тогда
				Продолжить;
			КонецЕсли;	
			
			Подстрока = СтрокаДерева.Строки.Добавить();
			Подстрока.Галка = Истина;
			Подстрока.Центр = ВыборкаЦентров.Ссылка;

		КонецЦикла;	
		
		
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево, "РаспредЦентры");
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКлонированиеНаСервере()
	
	Дерево = РеквизитФормыВЗначение("РаспредЦентры");
	//Дерево = РаспредЦентры;
	//РодСпб = Справочники.ТипыТранспортовВероут.НайтиПоКоду("000000002",,,Справочники.РаспределительныеЦентрыVeeroute.НайтиПоКоду("00000000001",,,Справочники.РегиональныеТерминалы.МоскваСтриж)).Ссылка;
	Сообщить(РодСпб.Наименование);
	Для Каждого Терминал Из Дерево.Строки Цикл 
		Если Терминал.Центр <> Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
			Продолжить;
		КонецеСли;	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Терминал", Терминал.Центр);
		
		Запрос.УстановитьПараметр("РодСПб", РодСпб);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТипыТранспортовВероут.ПометкаУдаления КАК ПометкаУдаления,
		               |	ТипыТранспортовВероут.Владелец КАК Владелец,
		               |	ТипыТранспортовВероут.Родитель КАК Родитель,
		               |	ТипыТранспортовВероут.ЭтоГруппа КАК ЭтоГруппа,
		               |	ТипыТранспортовВероут.Код КАК Код,
		               |	ТипыТранспортовВероут.Наименование КАК Наименование,
		               |	ТипыТранспортовВероут.axi_id КАК axi_id,
		               |	ТипыТранспортовВероут.axi_key КАК axi_key,
		               |	ТипыТранспортовВероут.id КАК id,
		               |	ТипыТранспортовВероут.externalID КАК externalID,
		               |	ТипыТранспортовВероут.active КАК active,
		               |	ТипыТранспортовВероут.suspended КАК suspended,
		               |	ТипыТранспортовВероут.costByDistance КАК costByDistance,
		               |	ТипыТранспортовВероут.maxWeight КАК maxWeight,
		               |	ТипыТранспортовВероут.maxVolume КАК maxVolume,
		               |	ТипыТранспортовВероут.averageSpeed КАК averageSpeed,
		               |	ТипыТранспортовВероут.color КАК color,
		               |	ТипыТранспортовВероут.allowSpeedCorrectionFactor КАК allowSpeedCorrectionFactor,
		               |	ТипыТранспортовВероут.areaOfControl КАК areaOfControl,
		               |	ТипыТранспортовВероут.БазовыйТранспорт КАК БазовыйТранспорт,
		               |	ТипыТранспортовВероут.address КАК address,
		               |	ТипыТранспортовВероут.latitude КАК latitude,
		               |	ТипыТранспортовВероут.longitude КАК longitude,
		               |	ТипыТранспортовВероут.homeLocationName КАК homeLocationName,
		               |	ТипыТранспортовВероут.vehicleRequirements.(
		               |		Ссылка КАК Ссылка,
		               |		НомерСтроки КАК НомерСтроки,
		               |		name КАК name,
		               |		abbreviation КАК abbreviation
		               |	) КАК vehicleRequirements,
		               |	ТипыТранспортовВероут.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.ТипыТранспортовВероут КАК ТипыТранспортовВероут
		               |ГДЕ
		               |	ТипыТранспортовВероут.ПометкаУдаления = ЛОЖЬ
		               |	И ТипыТранспортовВероут.Владелец.Владелец = &Терминал
		               |	И ТипыТранспортовВероут.ЭтоГруппа = ЛОЖЬ
		               |	И ТипыТранспортовВероут.Владелец.НаименованиеVeeroute = ""Склад""
		               |	И ТипыТранспортовВероут.suspended = ЛОЖЬ
		               |	И ТипыТранспортовВероут.Родитель <> &РодСПБ";
		
	
		ВыборкаТранспорта = Запрос.Выполнить().Выбрать();
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВодителиВероут.Ссылка КАК Ссылка,
		               |	ВодителиВероут.ПометкаУдаления КАК ПометкаУдаления,
		               |	ВодителиВероут.Владелец КАК Владелец,
		               |	ВодителиВероут.Код КАК Код,
		               |	ВодителиВероут.Наименование КАК Наименование,
		               |	ВодителиВероут.globalId КАК globalId,
		               |	ВодителиВероут.login КАК login,
		               |	ВодителиВероут.email КАК email,
		               |	ВодителиВероут.maxWorkingHours КАК maxWorkingHours,
		               |	ВодителиВероут.allowedOvertimePerWeek КАК allowedOvertimePerWeek,
		               |	ВодителиВероут.priceForOneHour КАК priceForOneHour,
		               |	ВодителиВероут.allowDailyDrivingLimit КАК allowDailyDrivingLimit,
		               |	ВодителиВероут.allowDailyWorkingLimit КАК allowDailyWorkingLimit,
		               |	ВодителиВероут.allowRunTimeLimit КАК allowRunTimeLimit,
		               |	ВодителиВероут.breakShift КАК breakShift,
		               |	ВодителиВероут.areaOfControl КАК areaOfControl,
		               |	ВодителиВероут.Id КАК Id,
		               |	ВодителиВероут.availabilities.(
		               |		Ссылка КАК Ссылка,
		               |		НомерСтроки КАК НомерСтроки,
		               |		weekDay КАК weekDay,
		               |		timefrom КАК timefrom,
		               |		to КАК to,
		               |		fixedDayStart КАК fixedDayStart
		               |	) КАК availabilities,
		               |	ВодителиВероут.Предопределенный КАК Предопределенный,
		               |	ВодителиВероут.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
		               |ИЗ
		               |	Справочник.ВодителиВероут КАК ВодителиВероут
		               |ГДЕ
		               |	ВодителиВероут.ПометкаУдаления = ЛОЖЬ
		               |	И ВодителиВероут.Владелец.НаименованиеVeeroute = ""Склад""
		               |	И ВодителиВероут.Владелец.Владелец = &Терминал";
		
		ВыборкаВодителей = Запрос.Выполнить().Выбрать();
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПривязкаМашинИВодителейВероутСрезПоследних.Период КАК Период,
		               |	ПривязкаМашинИВодителейВероутСрезПоследних.РаспределительныйЦентр КАК РаспределительныйЦентр,
		               |	ПривязкаМашинИВодителейВероутСрезПоследних.Транспорт КАК Транспорт,
		               |	ПривязкаМашинИВодителейВероутСрезПоследних.Водитель КАК Водитель,
		               |	ПривязкаМашинИВодителейВероутСрезПоследних.Транспорт.Наименование КАК ТранспортНаименование,
		               |	ПривязкаМашинИВодителейВероутСрезПоследних.Водитель.Наименование КАК ВодительНаименование
		               |ИЗ
		               |	РегистрСведений.ПривязкаМашинИВодителейВероут.СрезПоследних КАК ПривязкаМашинИВодителейВероутСрезПоследних
		               |ГДЕ
		               |	ПривязкаМашинИВодителейВероутСрезПоследних.РаспределительныйЦентр.Владелец = &Терминал
		               |	И ПривязкаМашинИВодителейВероутСрезПоследних.РаспределительныйЦентр.Наименование = ""Склад""";
		
		ВыборкаПривязки =  Запрос.Выполнить().Выбрать();
		
		Для Каждого РаспредЦентр Из Терминал.Строки Цикл 
			
			Если Не РаспредЦентр.Галка Тогда
				Продолжить;
			КонецЕсли;
			
			ВыборкаВодителей.Сбросить();
			
			Пока ВыборкаВодителей.Следующий() Цикл 
				
				Спр = Справочники.ВодителиВероут.НайтиПоНаименованию("" + ВыборкаВодителей.Наименование + "_" + РаспредЦентр.Центр.КодVeeroute, Истина,,РаспредЦентр.Центр);  
					
				Если ЗначениеЗаполнено(Спр) Тогда	
					
					Продолжить;
					
				КонецЕсли;	
					
				Водитель = Справочники.ВодителиВероут.СоздатьЭлемент();
				ЗаполнитьЗначенияСвойств(Водитель, ВыборкаВодителей);
				
				Водитель.Наименование = "" + ВыборкаВодителей.Наименование + "_" + РаспредЦентр.Центр.КодVeeroute;
				Водитель.login = РаспредЦентр.Центр.КодVeeroute + "_" + ВыборкаВодителей.login;
				Водитель.Код = Неопределено;
				Водитель.БазовыйВодитель = ВыборкаВодителей.Ссылка;
				Водитель.Владелец = РаспредЦентр.Центр;
				
				availabilities = ВыборкаВодителей.availabilities.Выбрать();
				
				Пока availabilities.Следующий() Цикл 
					
					НоваяСтрока =  Водитель.availabilities.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, availabilities);
					
				КонецЦикла;
				
				Водитель.Записать();
				
			КонецЦикла;	
			
			ВыборкаТранспорта.сбросить();
			
			Пока ВыборкаТранспорта.Следующий() Цикл 
				Если ВыборкаТранспорта.Родитель.Ссылка = РодСпб.Ссылка Тогда
					Сообщить(ВыборкаТранспорта.наименование);
					Продолжить;
				КонецеСли;	
				Спр = Справочники.ТипыТранспортовВероут.НайтиПоНаименованию("" + ВыборкаТранспорта.Наименование + "_" + РаспредЦентр.Центр.КодVeeroute, Истина,,РаспредЦентр.Центр);  
					
				Если ЗначениеЗаполнено(Спр) Тогда	
					
					Продолжить;
					
				КонецЕсли;	
					
				Транспорт = Справочники.ТипыТранспортовВероут.СоздатьЭлемент();
				ЗаполнитьЗначенияСвойств(Транспорт, ВыборкаТранспорта, , "Родитель");
				
				Транспорт.Наименование = ВыборкаТранспорта.Наименование + "_" + РаспредЦентр.Центр.КодVeeroute;
				Транспорт.Код = Неопределено;
				Транспорт.БазовыйТранспорт = ВыборкаТранспорта.Ссылка;
				Транспорт.Владелец = РаспредЦентр.Центр;
				
				vehicleRequirements = ВыборкаТранспорта.vehicleRequirements.Выбрать();
				
				Пока vehicleRequirements.Следующий() Цикл 
					
					НоваяСтрока =  Транспорт.vehicleRequirements.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, vehicleRequirements);
					
				КонецЦикла;
				
				Транспорт.Записать();
				
			КонецЦикла;	
			
			ВыборкаПривязки.Сбросить();
			
			Пока ВыборкаПривязки.Следующий() Цикл
				
				Транспорт =  Справочники.ТипыТранспортовВероут.НайтиПоНаименованию(""  + ВыборкаПривязки.ТранспортНаименование + "_" + РаспредЦентр.Центр.КодVeeroute, Истина,,РаспредЦентр.Центр);  
				Водитель = Справочники.ВодителиВероут.НайтиПоНаименованию("" + ВыборкаПривязки.ВодительНаименование + "_" + РаспредЦентр.Центр.КодVeeroute, Истина,,РаспредЦентр.Центр);  
				
				Если Не ЗначениеЗаполнено(Транспорт) Тогда 
					
					Сообщить("Транспорт не найден " + "" + ВыборкаПривязки.ТранспортНаименование + "_" + РаспредЦентр.Центр.КодVeeroute);
					Продолжить;			
					
				КонецЕсли;	
				
				Если Не ЗначениеЗаполнено(Водитель) Тогда
					
					Сообщить("Водитель не найден " + "" + ВыборкаПривязки.ВодительНаименование + "_" + РаспредЦентр.Центр.КодVeeroute);
					Продолжить;
					
				КонецЕсли;	
				
				МенеджерЗаписи = РегистрыСведений.ПривязкаМашинИВодителейВероут.СоздатьМенеджерЗаписи();
				МенеджерЗаписи.Период = ТекущаяДата();
				МенеджерЗаписи.РаспределительныйЦентр = РаспредЦентр.Центр;
				МенеджерЗаписи.Транспорт = Транспорт;
				МенеджерЗаписи.Водитель = Водитель;
				МенеджерЗаписи.Записать();
					
			КонецЦикла;
			

			
			
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКлонирование(Команда)
	ВыполнитьКлонированиеНаСервере();
КонецПроцедуры
