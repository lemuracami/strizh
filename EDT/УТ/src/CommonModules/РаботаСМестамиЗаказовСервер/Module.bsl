
#Область ПрограммныйИнтерфейс

#Область СтарыйрабочийКод
// Отключено в рамках 2943
//// - 2588 Дробница
//Функция ЗаписатьСтатусыМестЗаказов(ЗагрузкаСТСД) Экспорт
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ,
//		|	ЗагрузкаСТСДШтрихкоды.Заказ.Номер КАК ЗаказНомер,
//		|	ЗагрузкаСТСДШтрихкоды.МестоЗаказа КАК МестоЗаказа,
//		|	ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.ТоварНаСкладе) КАК Статус,
//		|	&ДокументЗагрузкаСТСД КАК ДокументРегистратор,
//		|	ЗагрузкаСТСДШтрихкоды.Ссылка.Дата КАК Период,
//		|	ЗагрузкаСТСДШтрихкоды.Штрихкод КАК Штрихкод
//		|ИЗ
//		|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
//		|ГДЕ
//		|	ЗагрузкаСТСДШтрихкоды.Ссылка = &ДокументЗагрузкаСТСД
//		|	И НЕ ЗагрузкаСТСДШтрихкоды.МестоЗаказа = ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)";
//	
//	Запрос.УстановитьПараметр("ДокументЗагрузкаСТСД", ЗагрузкаСТСД);
//	
//	РезультатЗапроса = Запрос.Выполнить().Выгрузить();	

//	МассивПараметров = Новый Массив;
//	
//	Для Каждого СтрокаРезультата Из РезультатЗапроса Цикл
//		
//		НаборЗаписей = РегистрыСведений.СтатусыМестЗаказов.СоздатьНаборЗаписей();
//		НаборЗаписей.Отбор.Заказ.Установить(СтрокаРезультата.Заказ);
//		НаборЗаписей.Отбор.Период.Установить(СтрокаРезультата.Период);
//		НаборЗаписей.Отбор.МестоЗаказа.Установить(СтрокаРезультата.МестоЗаказа);
//		
//		НоваяЗапись = НаборЗаписей.Добавить();
//		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаРезультата);
//		
//		НаборЗаписей.Записать(Истина);
//		
//		ПараметрыЗапроса = Новый Структура();
//		ПараметрыЗапроса.Вставить("OrderId", СокрЛП(СтрокаРезультата.ЗаказНомер));
//		ПараметрыЗапроса.Вставить("Barcode", Строка(СтрокаРезультата.Штрихкод));
//		ПараметрыЗапроса.Вставить("StatusId", Строка(СтрокаРезультата.Статус.Код));
//		ПараметрыЗапроса.Вставить("Date", СтрокаРезультата.Период);
//		ПараметрыЗапроса.Вставить("WhoLastChange", СокрЛП(ПараметрыСеанса.ТекущийПользователь));
//								
//		МассивПараметров.Добавить(ПараметрыЗапроса);

//	КонецЦикла;
//	
//	//Дробница Р. 08.10.2018
//	Если МассивПараметров.Количество() > 0 Тогда
//		
//		ПараметрыЗапроса = Новый Структура;		
//		ПараметрыЗапроса.Вставить("acceptedPlaces", МассивПараметров);
//		СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetAcceptedPlacesResult, ПараметрыЗапроса);
//		Если НЕ СтруктураВозврата.Успешно Тогда
//			
//			Сообщить("Ошибка статусов заказов.", СтатусСообщения.Важное);
//			Возврат Ложь; //Отказ проведения

//		КонецЕсли;
//		
//	КонецЕсли;
//	
//	Возврат Истина;
//	
//КонецФункции	

//// 2588 Дробница -
#КонецОбласти

//Модифицировано в рамках 2943
Функция ЗаписатьСтатусыМестЗаказов(ЗагрузкаСТСД, ЗаписанныеСтатусыЗаказов = Неопределено) Экспорт
	
	ЗаписанныеСтатусыЗаказов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	//Асеев 26.01.2021 (Задача № 4449)>>>
	Запрос.УстановитьПараметр("Документ", ЗагрузкаСТСД);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗагрузкаСТСД.Дата КАК Дата,
	|	ЗагрузкаСТСД.ТерминалПриема КАК ТерминалПриема,
	|	ЗагрузкаСТСД.ТерминалПриема.Код КАК ТерминалПриемаКод,
	|	ЗагрузкаСТСД.ТипЗагрузкиТСД В (ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute), ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом))
	|		И ЗагрузкаСТСД.ТерминалПриема = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж) КАК УчитыватьПолностьюНаСкладе
	|ИЗ
	|	Документ.ЗагрузкаСТСД КАК ЗагрузкаСТСД
	|ГДЕ
	|	ЗагрузкаСТСД.Ссылка = &Документ";
	ВыборкаРеквизитыЗагрузкиСТСД = Запрос.Выполнить().Выбрать();
	ВыборкаРеквизитыЗагрузкиСТСД.Следующий();
	//нужна информация по общему количеству мест для случая ОдинаковыеШКНаВсехМестахЗаказа
	//на этапах ПриходWiFiVeeRoute ИЛИ ПриходWiFiVeeRouteСВесом по данным всех загрузок ТСД данного типа
	//////на этапе ПогрузкаВАвто по данным Погрузки в авто и текущей тсд (если она не попала в погрузку)
	//на этапе погрузки нет смысла отдельно считать количество мест, т.к. оно может быть меньше количества мест прихода
	//считаем только приходы
	//
	Запрос.УстановитьПараметр("Период", ВыборкаРеквизитыЗагрузкиСТСД.Дата);
	Запрос.УстановитьПараметр("ДатаПоискаЗагрузок", ВыборкаРеквизитыЗагрузкиСТСД.Дата - 864000);//-10 дней
	//Асеев 15.08.2022 (Задача № 4867)>>>
	Запрос.УстановитьПараметр("УчитыватьПолностьюНаСкладе", ВыборкаРеквизитыЗагрузкиСТСД.УчитыватьПолностьюНаСкладе);
	//Асеев 15.08.2022 (Задача № 4867)<<<
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (ЗагрузкаСТСДШтрихкоды.Ссылка = &Документ)
	|			И ЗагрузкаСТСДШтрихкоды.Заказ = РеализацияТоваровУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Заказы.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_ЗаказыПолностьюНаСкладе
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|		ПО (&УчитыватьПолностьюНаСкладе)
	|			И (СтатусыЗаказов.Период < &Период)
	|			И ВТ_Заказы.Заказ = СтатусыЗаказов.Заказ
	|			И (СтатусыЗаказов.Статус = 211)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыКонтрагентовСрезПоследних.Контрагент КАК ВладелецТовара
	|ПОМЕСТИТЬ ВТ_ОдинаковыеШК_Владельцы
	|ИЗ
	|	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(
	|			,
	|			Контрагент В
	|				(ВЫБРАТЬ
	|					ВТ_Заказы.ВладелецТовара КАК ВладелецТовара
	|				ИЗ
	|					ВТ_Заказы КАК ВТ_Заказы)) КАК ПараметрыКонтрагентовСрезПоследних
	|ГДЕ
	|	ПараметрыКонтрагентовСрезПоследних.ОдинаковыеШКНаВсехМестахЗаказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_ОдинаковыеШК_Заказы
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОдинаковыеШК_Владельцы КАК ВТ_ОдинаковыеШК_Владельцы
	|		ПО ВТ_Заказы.ВладелецТовара = ВТ_ОдинаковыеШК_Владельцы.ВладелецТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОдинаковыеШК_Заказы.Заказ КАК Заказ,
	|	СУММА(ЗагрузкаСТСДШтрихкоды.КоличествоМест) КАК КоличествоМест
	|ПОМЕСТИТЬ ВТ_ОдинаковыеШК_КоличествоМест
	|ИЗ
	|	ВТ_ОдинаковыеШК_Заказы КАК ВТ_ОдинаковыеШК_Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ПО ВТ_ОдинаковыеШК_Заказы.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаПоискаЗагрузок)
	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute), ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом)))
	|			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОдинаковыеШК_Заказы.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ,
	|	ЗагрузкаСТСДШтрихкоды.МестоЗаказа КАК МестоЗаказа,
	|	ЗагрузкаСТСДШтрихкоды.ДатаВремя КАК ДатаВремя,
	|	ЗагрузкаСТСДШтрихкоды.Ссылка КАК ДокументРегистратор,
	|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК Терминал,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.КоличествоМест КАК КоличествоМест,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыМестЗаказов.МестоЗаказа) КАК КоличествоСканированных,
	|	ЗагрузкаСТСДШтрихкоды.Штрихкод КАК Штрихкод,
	|	ВЫБОР
	|		КОГДА НЕ ЗагрузкаСТСДШтрихкоды.МестоЗаказа = ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыМестЗаказов.МестоЗаказа) >= РеализацияТоваровУслуг.КоличествоМест
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВсеОтсканированы,
	|	ВЫБОР
	|		КОГДА НЕ ЗагрузкаСТСДШтрихкоды.МестоЗаказа = ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьМестоЗаказа
	|ПОМЕСТИТЬ ВТ_ШтрихкодыЗаказов
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ЗагрузкаСТСДШтрихкоды.Заказ = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыМестЗаказов КАК СтатусыМестЗаказов
	|		ПО ЗагрузкаСТСДШтрихкоды.Заказ = СтатусыМестЗаказов.Заказ
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды.Ссылка = &Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗагрузкаСТСДШтрихкоды.Заказ,
	|	ЗагрузкаСТСДШтрихкоды.МестоЗаказа,
	|	ЗагрузкаСТСДШтрихкоды.ДатаВремя,
	|	ЗагрузкаСТСДШтрихкоды.Ссылка,
	|	РеализацияТоваровУслуг.Ссылка,
	|	ЗагрузкаСТСДШтрихкоды.Штрихкод,
	|	РеализацияТоваровУслуг.ТерминалДоставки,
	|	РеализацияТоваровУслуг.Номер,
	|	РеализацияТоваровУслуг.КоличествоМест
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатусыМестЗаказовСрезПоследних.Заказ КАК Заказ,
	|	СтатусыМестЗаказовСрезПоследних.МестоЗаказа КАК МестоЗаказа
	|ИЗ
	|	РегистрСведений.СтатусыМестЗаказов.СрезПоследних(
	|			,
	|			Заказ В
	|				(ВЫБРАТЬ
	|					ВТ_ШтрихкодыЗаказов.Реализация КАК Реализация
	|				ИЗ
	|					ВТ_ШтрихкодыЗаказов КАК ВТ_ШтрихкодыЗаказов)) КАК СтатусыМестЗаказовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ШтрихкодыЗаказов.Заказ КАК Заказ,
	|	ВТ_ШтрихкодыЗаказов.МестоЗаказа КАК МестоЗаказа,
	|	ВТ_ШтрихкодыЗаказов.ДатаВремя КАК ДатаВремя,
	|	ВТ_ШтрихкодыЗаказов.ДокументРегистратор КАК ДокументРегистратор,
	|	ВТ_ШтрихкодыЗаказов.ПредварительноеЗакрытие КАК ПредварительноеЗакрытие,
	|	ВТ_ШтрихкодыЗаказов.Реализация КАК Реализация,
	|	ВТ_ШтрихкодыЗаказов.Терминал КАК ТерминалОбработки,
	|	ВТ_ШтрихкодыЗаказов.Терминал КАК Терминал,
	|	ВТ_ШтрихкодыЗаказов.Номер КАК Номер,
	|	ВТ_ШтрихкодыЗаказов.КоличествоМест КАК КоличествоМест,
	|	ВТ_ШтрихкодыЗаказов.КоличествоСканированных КАК КоличествоСканированных,
	|	ВТ_ШтрихкодыЗаказов.Штрихкод КАК Штрихкод,
	|	ВТ_ШтрихкодыЗаказов.ВсеОтсканированы КАК ВсеОтсканированы,
	|	ВТ_ШтрихкодыЗаказов.ЕстьМестоЗаказа КАК ЕстьМестоЗаказа,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ОдинаковыеШК_Заказы.Заказ ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ВТ_ОдинаковыеШК_КоличествоМест.КоличествоМест, 0) >= ВТ_ШтрихкодыЗаказов.КоличествоМест
	|						ТОГДА 211
	|					ИНАЧЕ 212
	|				КОНЕЦ
	|		КОГДА ВТ_ШтрихкодыЗаказов.ЕстьМестоЗаказа
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ШтрихкодыЗаказов.КоличествоСканированных >= ВТ_ШтрихкодыЗаказов.КоличествоМест
	|						ТОГДА 211
	|					ИНАЧЕ 212
	|				КОНЕЦ
	|		ИНАЧЕ 211
	|	КОНЕЦ КАК Статус,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ОдинаковыеШК_Заказы.Заказ ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ВТ_ОдинаковыеШК_КоличествоМест.КоличествоМест, 0) >= ВТ_ШтрихкодыЗаказов.КоличествоМест
	|						ТОГДА &Статус211
	|					ИНАЧЕ &Статус212
	|				КОНЕЦ
	|		КОГДА ВТ_ШтрихкодыЗаказов.ЕстьМестоЗаказа
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ШтрихкодыЗаказов.КоличествоСканированных >= ВТ_ШтрихкодыЗаказов.КоличествоМест
	|						ТОГДА &Статус211
	|					ИНАЧЕ &Статус212
	|				КОНЕЦ
	|		ИНАЧЕ &Статус211
	|	КОНЕЦ КАК СтатусСсылка,
	|	&Период КАК Период,
	|	ЛОЖЬ КАК БылоЗакрытие,
	|	НЕ ВТ_ОдинаковыеШК_Заказы.Заказ ЕСТЬ NULL КАК ЭтоОдноместныйЗаказ,
	|	ЕСТЬNULL(ВТ_ОдинаковыеШК_КоличествоМест.КоличествоМест, 0) >= ВТ_ШтрихкодыЗаказов.КоличествоМест КАК ОдноместныйЗаказОтсканированПолностью,
	|	НЕ ВТ_ЗаказыПолностьюНаСкладе.Заказ ЕСТЬ NULL КАК ПолностьюНаСкладе
	|ИЗ
	|	ВТ_ШтрихкодыЗаказов КАК ВТ_ШтрихкодыЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОдинаковыеШК_Заказы КАК ВТ_ОдинаковыеШК_Заказы
	|		ПО ВТ_ШтрихкодыЗаказов.Реализация = ВТ_ОдинаковыеШК_Заказы.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОдинаковыеШК_КоличествоМест КАК ВТ_ОдинаковыеШК_КоличествоМест
	|		ПО ВТ_ШтрихкодыЗаказов.Реализация = ВТ_ОдинаковыеШК_КоличествоМест.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыПолностьюНаСкладе КАК ВТ_ЗаказыПолностьюНаСкладе
	|		ПО ВТ_ШтрихкодыЗаказов.Реализация = ВТ_ЗаказыПолностьюНаСкладе.Заказ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Заказ,
	|	ДатаВремя";
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ,
	//|	ЗагрузкаСТСДШтрихкоды.МестоЗаказа КАК МестоЗаказа,
	//|	ЗагрузкаСТСДШтрихкоды.ДатаВремя КАК ДатаВремя,
	//|	ЗагрузкаСТСДШтрихкоды.Ссылка КАК ДокументРегистратор,
	//|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	//|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	//|	РеализацияТоваровУслуг.ТерминалДоставки.Ссылка КАК Терминал,
	//|	РеализацияТоваровУслуг.Номер КАК Номер,
	//|	РеализацияТоваровУслуг.КоличествоМест КАК КоличествоМест,
	//|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыМестЗаказов.МестоЗаказа) КАК КоличествоСканированных,
	//|	ЗагрузкаСТСДШтрихкоды.Штрихкод КАК Штрихкод,
	//|	ВЫБОР
	//|		КОГДА НЕ ЗагрузкаСТСДШтрихкоды.МестоЗаказа = ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)
	//|			ТОГДА ВЫБОР
	//|					КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыМестЗаказов.МестоЗаказа) >= РеализацияТоваровУслуг.КоличествоМест
	//|						ТОГДА ИСТИНА
	//|					ИНАЧЕ ЛОЖЬ
	//|				КОНЕЦ
	//|		ИНАЧЕ ИСТИНА
	//|	КОНЕЦ КАК ВсеОтсканированы,
	//|	ВЫБОР
	//|		КОГДА НЕ ЗагрузкаСТСДШтрихкоды.МестоЗаказа = ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК ЕстьМестоЗаказа,
	//|	ЗагрузкаСТСДШтрихкоды.Ссылка.Дата КАК Период
	//|ПОМЕСТИТЬ ВТ_ШтрихкодыЗаказов
	//|ИЗ
	//|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//|		ПО (ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка = РеализацияТоваровУслуг.Ссылка)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыМестЗаказов КАК СтатусыМестЗаказов
	//|		ПО ЗагрузкаСТСДШтрихкоды.Заказ = СтатусыМестЗаказов.Заказ
	//|ГДЕ
	//|	ЗагрузкаСТСДШтрихкоды.Ссылка = &Документ
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ЗагрузкаСТСДШтрихкоды.Заказ,
	//|	ЗагрузкаСТСДШтрихкоды.МестоЗаказа,
	//|	ЗагрузкаСТСДШтрихкоды.ДатаВремя,
	//|	ЗагрузкаСТСДШтрихкоды.Ссылка,
	//|	РеализацияТоваровУслуг.Ссылка,
	//|	ЗагрузкаСТСДШтрихкоды.Штрихкод,
	//|	РеализацияТоваровУслуг.ТерминалДоставки.Ссылка,
	//|	РеализацияТоваровУслуг.Номер,
	//|	РеализацияТоваровУслуг.КоличествоМест,
	//|	ЗагрузкаСТСДШтрихкоды.Ссылка.Дата
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	СтатусыМестЗаказовСрезПоследних.Заказ КАК Заказ,
	//|	СтатусыМестЗаказовСрезПоследних.МестоЗаказа КАК МестоЗаказа
	//|ИЗ
	//|	РегистрСведений.СтатусыМестЗаказов.СрезПоследних КАК СтатусыМестЗаказовСрезПоследних
	//|ГДЕ
	//|	СтатусыМестЗаказовСрезПоследних.Заказ В
	//|			(ВЫБРАТЬ
	//|				ВТ_ШтрихкодыЗаказов.Реализация КАК Заказ
	//|			ИЗ
	//|				ВТ_ШтрихкодыЗаказов)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ШтрихкодыЗаказов.Заказ КАК Заказ,
	//|	ВТ_ШтрихкодыЗаказов.МестоЗаказа КАК МестоЗаказа,
	//|	ВТ_ШтрихкодыЗаказов.ДатаВремя КАК ДатаВремя,
	//|	ВТ_ШтрихкодыЗаказов.ДокументРегистратор КАК ДокументРегистратор,
	//|	ВТ_ШтрихкодыЗаказов.ПредварительноеЗакрытие КАК ПредварительноеЗакрытие,
	//|	ВТ_ШтрихкодыЗаказов.Реализация КАК Реализация,
	//|	ВТ_ШтрихкодыЗаказов.Терминал КАК ТерминалОбработки,
	//|	ВТ_ШтрихкодыЗаказов.Терминал КАК Терминал,
	//|	ВТ_ШтрихкодыЗаказов.Номер КАК Номер,
	//|	ВТ_ШтрихкодыЗаказов.КоличествоМест КАК КоличествоМест,
	//|	ВТ_ШтрихкодыЗаказов.КоличествоСканированных КАК КоличествоСканированных,
	//|	ВТ_ШтрихкодыЗаказов.Штрихкод КАК Штрихкод,
	//|	ВТ_ШтрихкодыЗаказов.ВсеОтсканированы КАК ВсеОтсканированы,
	//|	ВТ_ШтрихкодыЗаказов.ЕстьМестоЗаказа КАК ЕстьМестоЗаказа,
	//|	ВЫБОР
	//|		КОГДА ВТ_ШтрихкодыЗаказов.ЕстьМестоЗаказа
	//|			ТОГДА ВЫБОР
	//|					КОГДА ВТ_ШтрихкодыЗаказов.КоличествоСканированных >= ВТ_ШтрихкодыЗаказов.КоличествоМест
	//|						ТОГДА 211
	//|					ИНАЧЕ 212
	//|				КОНЕЦ
	//|		ИНАЧЕ 211
	//|	КОНЕЦ КАК Статус,
	//|	ВЫБОР
	//|		КОГДА ВТ_ШтрихкодыЗаказов.ЕстьМестоЗаказа
	//|			ТОГДА ВЫБОР
	//|					КОГДА ВТ_ШтрихкодыЗаказов.КоличествоСканированных >= ВТ_ШтрихкодыЗаказов.КоличествоМест
	//|						ТОГДА &Статус211
	//|					ИНАЧЕ &Статус212
	//|				КОНЕЦ
	//|		ИНАЧЕ &Статус211
	//|	КОНЕЦ КАК СтатусСсылка,
	//|	ВТ_ШтрихкодыЗаказов.Период КАК Период,
	//|	ЛОЖЬ КАК БылоЗакрытие,
	//|	ВЫБОР
	//|		КОГДА ВТ_ШтрихкодыЗаказов.Реализация ССЫЛКА Документ.РеализацияТоваровУслуг
	//|			ТОГДА ВТ_ШтрихкодыЗаказов.Реализация.ВладелецТовара.Код
	//|		ИНАЧЕ ВТ_ШтрихкодыЗаказов.Реализация.Контрагент.Код
	//|	КОНЕЦ КАК КодКонтрагента
	//|ИЗ
	//|	ВТ_ШтрихкодыЗаказов КАК ВТ_ШтрихкодыЗаказов
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Заказ,
	//|	ДатаВремя";
	//
	//Запрос.УстановитьПараметр("Документ", ЗагрузкаСТСД);
	//Запрос.УстановитьПараметр("Статус211", Справочники.СтатусыЗаказов.НайтиПоКоду("211"));
	//Запрос.УстановитьПараметр("Статус212", Справочники.СтатусыЗаказов.НайтиПоКоду("212"));
	Статус211 = Справочники.СтатусыЗаказов.НайтиПоКоду("211");//ТоварНаСкладе
	Статус212 = Справочники.СтатусыЗаказов.НайтиПоКоду("212");//ЗаказЧастичноНаСкладе
	Запрос.УстановитьПараметр("Статус211", Статус211);
	Запрос.УстановитьПараметр("Статус212", Статус212);
	
	//ТерминалОбработки = ЗагрузкаСТСД.ТерминалПриема;// Задача № 3027
	//ТерминалОбработкиКод = ТерминалОбработки.Код;// Задача № 3027
	ТерминалОбработки = ВыборкаРеквизитыЗагрузкиСТСД.ТерминалПриема;
	ТерминалОбработкиКод = ВыборкаРеквизитыЗагрузкиСТСД.ТерминалПриемаКод;
	//Асеев 26.01.2021 (Задача № 4449)<<<
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	//Асеев 26.01.2021 (Задача № 4449)>>>
	//СтрокиОтсканированных =  РезультатЗапроса[1].Выгрузить(); // ранее отсканированные места заказов
	//СтрокиСтатусов = РезультатЗапроса[2].Выгрузить(); // строки ТЧ к установке статусов
	СтрокиОтсканированных =  РезультатЗапроса[6].Выгрузить(); // ранее отсканированные места заказов
	СтрокиСтатусов = РезультатЗапроса[7].Выгрузить(); // строки ТЧ к установке статусов
	//Асеев 26.01.2021 (Задача № 4449)<<<
	
	МассивСтатусовSetAcceptedPlaces = Неопределено;
	МассивСтатусовSetOrderStatus = Неопределено;
	
	ТекущийОбрабатываемыйЗаказ = Неопределено;
	ТекущийЗаказСМестами = Неопределено;
	
	Для Каждого СтрокаСтатуса Из СтрокиСтатусов Цикл
		
		ТекущийОбрабатываемыйЗаказ = СтрокаСтатуса.Реализация;
		
		Если СтрокаСтатуса.ДатаВремя < Дата(2000,1,1,0,0,0) ИЛИ Не ЗначениеЗаполнено(СтрокаСтатуса.ДатаВремя) Тогда
			 СтрокаСтатуса.ДатаВремя = СтрокаСтатуса.Период;
		КонецЕсли;	
		
		//Асеев 26.01.2021 (Задача № 4449)>>>
		Если СтрокаСтатуса.ЭтоОдноместныйЗаказ Тогда
			
			Если СтрокаСтатуса.ЕстьМестоЗаказа Тогда
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Barcode", Строка(СтрокаСтатуса.Штрихкод));	
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Date", СтрокаСтатуса.Период, ДопПараметрыСтатуса);
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("WhoLastChange", СокрЛП(ПараметрыСеанса.ТекущийПользователь), ДопПараметрыСтатуса);
				
				МассивСтатусовSetAcceptedPlaces = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СтрокаСтатуса.Номер, 211,,,,МассивСтатусовSetAcceptedPlaces,ДопПараметрыСтатуса); 
				
				НаборЗаписей = РегистрыСведений.СтатусыМестЗаказов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Заказ.Установить(СтрокаСтатуса.Заказ);
				
				НаборЗаписей.Отбор.Период.Установить(СтрокаСтатуса.Период);
				
				НаборЗаписей.Отбор.МестоЗаказа.Установить(СтрокаСтатуса.МестоЗаказа);
				
				НоваяЗапись = НаборЗаписей.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаСтатуса);
				НоваяЗапись.Статус = Статус211; // для мест заказа всегда статус 211
				
				НаборЗаписей.Записать(Истина);
			КонецЕсли;
			
			//Асеев 15.08.2022 (Задача № 4867)>>>
			//Если СтрокаСтатуса.ОдноместныйЗаказОтсканированПолностью Тогда
			Если СтрокаСтатуса.ОдноместныйЗаказОтсканированПолностью Или СтрокаСтатуса.ПолностьюНаСкладе Тогда
			//Асеев 15.08.2022 (Задача № 4867)<<<	
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal ", Число(ТерминалОбработкиКод));
				МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СтрокаСтатуса.Номер, 
				211, 
				"Online приход по ТСД (new)",
				,
				СтрокаСтатуса.ДатаВремя,
				МассивСтатусовsetOrderStatus, 
				ДопПараметрыСтатуса);
				
				ЗаписанныеСтатусыЗаказов.Вставить(СтрокаСтатуса.Заказ, Статус211);
			Иначе
			
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal ", Число(ТерминалОбработкиКод));
				МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СтрокаСтатуса.Номер, 
				212, 
				"Online приход по ТСД (new)",
				,
				СтрокаСтатуса.ДатаВремя,
				МассивСтатусовsetOrderStatus, 
				ДопПараметрыСтатуса);
				
				ЗаписанныеСтатусыЗаказов.Вставить(СтрокаСтатуса.Заказ, Статус212);
			КонецЕсли;
			
		Иначе
			//Асеев 26.01.2021 (Задача № 4449)<<<
			
			Если СтрокаСтатуса.ЕстьМестоЗаказа Тогда
				
				#Область SetAcceptedPlaces
				
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Barcode", Строка(СтрокаСтатуса.Штрихкод));	
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Date", СтрокаСтатуса.Период, ДопПараметрыСтатуса);
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("WhoLastChange", СокрЛП(ПараметрыСеанса.ТекущийПользователь), ДопПараметрыСтатуса);
				
				МассивСтатусовSetAcceptedPlaces = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СтрокаСтатуса.Номер, 211,,,,МассивСтатусовSetAcceptedPlaces,ДопПараметрыСтатуса); 
				
				НаборЗаписей = РегистрыСведений.СтатусыМестЗаказов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Заказ.Установить(СтрокаСтатуса.Заказ);
				
				НаборЗаписей.Отбор.Период.Установить(СтрокаСтатуса.Период);
				
				НаборЗаписей.Отбор.МестоЗаказа.Установить(СтрокаСтатуса.МестоЗаказа);
				
				НоваяЗапись = НаборЗаписей.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаСтатуса);
				НоваяЗапись.Статус = Статус211; // для мест заказа всегда статус 211
				
				НаборЗаписей.Записать(Истина);
				
				#КонецОбласти
				
				#Область setOrderStatus_Для_мест_по_заказам
				
				Если  СтрокаСтатуса.ВсеОтсканированы Тогда  // Были ранее отсканированы все места
					
					ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal ", Число(ТерминалОбработкиКод)); // Задача № 3027
					МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СтрокаСтатуса.Номер, 
					СтрокаСтатуса.Статус, 
					"Online приход по ТСД (new)",
					,
					СтрокаСтатуса.ДатаВремя,
					МассивСтатусовsetOrderStatus, 
					ДопПараметрыСтатуса);
					
					ЗаписанныеСтатусыЗаказов.Вставить(СтрокаСтатуса.Заказ, СтрокаСтатуса.СтатусСсылка);
					
				Иначе	// Количество ранее отсканированных мест меньше количества мест в РТиУ			
					
					Если ТекущийЗаказСМестами <> ТекущийОбрабатываемыйЗаказ Тогда
						
						ТекущийЗаказСМестами = ТекущийОбрабатываемыйЗаказ;
						
						СтрокиОтсканированныхМестПоЗаказу = СтрокиОтсканированных.Скопировать(СтрокиОтсканированных.НайтиСтроки(Новый Структура("Заказ", ТекущийЗаказСМестами)));
						ОтсканированныеМеста = СтрокиОтсканированныхМестПоЗаказу.ВыгрузитьКолонку("МестоЗаказа");
						
					КонецЕсли;	
					
					Если ОтсканированныеМеста.Найти(СтрокаСтатуса.МестоЗаказа) = Неопределено Тогда // если ранее место не было отсканировано, то добавляем его в пул
						ОтсканированныеМеста.Добавить(СтрокаСтатуса.МестоЗаказа);
					Конецесли;	
					
					//Асеев 15.08.2022 (Задача № 4867)>>>
					//Если ОтсканированныеМеста.Количество() < СтрокаСтатуса.КоличествоМест тогда // если количество мест, отсканированных ранее и в текущем документе
					Если ОтсканированныеМеста.Количество() < СтрокаСтатуса.КоличествоМест И Не СтрокаСтатуса.ПолностьюНаСкладе Тогда // если количество мест, отсканированных ранее и в текущем документе
					//Асеев 15.08.2022 (Задача № 4867)<<<
					
						// меньше количества мест в РТиУ, то статус заказа должен быть 212 (временно отсавлен 211)
						// ОТКЛЮЧЕНА ВРЕМЕННАЯ ЗАГЛУШКА																		
						////В БОЕВОЙ ВРЕМЕННО ЗАМЕНЕНО НА 211!!!
						//
						//вернуть строку в результирующий запрос, при раскомменчивании
						//	|	ВТ_ШтрихкодыЗаказов.Реализация.ВладелецТовара.Код КАК КодКонтрагента,
						//
						//Если СокрЛП(СтрокаСтатуса.КодКонтрагента) = "Shop_723" Тогда //Условное отключение временной замены 212->211
						//	СтрокаСтатуса.Статус = 212;
						//	СтрокаСтатуса.СтатусСсылка = Справочники.СтатусыЗаказов.НайтиПоКоду("212");					
						//Иначе
						//	СтрокаСтатуса.Статус = 211;
						//	СтрокаСтатуса.СтатусСсылка = Справочники.СтатусыЗаказов.НайтиПоКоду("211");
						//КонецЕсли;		
						
						СтрокаСтатуса.Статус = 212;
						СтрокаСтатуса.СтатусСсылка = Статус212;
						
						ЗаписанныеСтатусыЗаказов.Вставить(СтрокаСтатуса.Заказ, СтрокаСтатуса.СтатусСсылка);
						
					Иначе
						
						СтрокаСтатуса.Статус = 211;                                                // если количество мест, отсканированных ранее и в текущем документе
						СтрокаСтатуса.СтатусСсылка = Статус211;// равно или больше количества мест в РТиУ, то статус заказа должен быть 211
						
						ЗаписанныеСтатусыЗаказов.Вставить(СтрокаСтатуса.Заказ, СтрокаСтатуса.СтатусСсылка);
						
					КонецЕсли;	
					
					ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal ", Число(ТерминалОбработкиКод)); // Задача № 3027
					МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СтрокаСтатуса.Номер, 
					СтрокаСтатуса.Статус, 
					"Online приход по ТСД (new)",
					,
					СтрокаСтатуса.ДатаВремя,
					МассивСтатусовsetOrderStatus, 
					ДопПараметрыСтатуса);				
					
				КонецЕсли;	
				
				#КонецОбласти
				
			Иначе
				
				#Область setOrderStatus_Без_мест_по_заказам
				
				// если место заказа не определено, то всегда передаем статус 211
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалОбработкиКод)); // Задача № 3027
				МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СтрокаСтатуса.Номер, 
				СтрокаСтатуса.Статус, 
				"Online приход по ТСД (new)",
				,
				СтрокаСтатуса.ДатаВремя,
				МассивСтатусовsetOrderStatus, 
				ДопПараметрыСтатуса);		
				
				ЗаписанныеСтатусыЗаказов.Вставить(СтрокаСтатуса.Заказ, СтрокаСтатуса.СтатусСсылка);
				
				#КонецОбласти
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	ЭтоТест = Ложь; //Истина отключает отправку статусов в админку, для тестирования 
	
	
	
	Если Не МассивСтатусовSetAcceptedPlaces = Неопределено Тогда
	
		СтруктураВозвратаSetAcceptedPlaces = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусовSetAcceptedPlaces, "SetAcceptedPlaces",,ЭтоТест); 
		
	Иначе
		
		СтруктураВозвратаSetAcceptedPlaces = Новый Структура("Успешно, ОписаниеОшибки", Истина, "Нет данных для отправки");  // Ошибка проведения документов из-за Успешно=Ложь
		
	КонецЕсли;
	
	Если Не МассивСтатусовSetOrderStatus = Неопределено Тогда
		
		СтруктураВозвратаSetOrderStatus = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусовSetOrderStatus, "SetOrderStatus",,ЭтоТест);
		
	Иначе
		
		СтруктураВозвратаSetOrderStatus = Новый Структура("Успешно, ОписаниеОшибки", Истина, "Нет данных для отправки");  // Ошибка проведения документов из-за Успешно=Ложь
 
	КонецЕсли;
	
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(СтрокиСтатусов, "ДатаВремя", ТерминалОбработки); 
	// Задача № 3027 //smv.СохранитьСтатус(СтрокиСтатусов, "ДатаВремя"); // сохранение статусов ДО проверки отправки в админку сделано как в оригинальном коде.
	
	Если  СтруктураВозвратаSetAcceptedPlaces.Успешно И СтруктураВозвратаSetOrderStatus.Успешно Тогда
		
		Возврат Истина;
		
	Иначе
		
		СтрокаСообщения = "Ошибка статусов заказов.
		|SetAcceptedPlaces " + Строка(СтруктураВозвратаSetAcceptedPlaces.Успешно) + "
		|SetOrderStatus  " + Строка(СтруктураВозвратаSetOrderStatus.Успешно);		
		
		Сообщить(СтрокаСообщения, СтатусСообщения.Важное);
		Возврат Ложь; //Отказ проведения
		
	КонецЕсли;	
	
КонецФункции	
//Модифицировано в рамках 2943


#КонецОбласти

#Область СлужебныепроцедурыИФункции

//CeHbKA #2963
Функция СоздатьМестоПоЗаказу(Заказ, Штрихкод, НомерМеста = 0, ИдентификаторМеста = "", ПриходЗаказов = Неопределено) Экспорт

	Спр = Справочники.МестаПоЗаказам.СоздатьЭлемент();
	Спр.Заказ = Заказ;
	Спр.НомерМеста = НомерМеста;
	Спр.ИдентификаторМеста = ИдентификаторМеста;
	Спр.Штрихкод = Штрихкод;
	
	Спр.Записать();
	
	Период = ТекущаяДата();
	
	Набор = РегистрыСведений.СозданиеМестПоЗаказам.СоздатьНаборЗаписей();
	Набор.Отбор.Период.Установить(Период);
	Набор.Отбор.ПриходЗаказов.Установить(ПриходЗаказов);
	Набор.Отбор.Заказ.Установить(Заказ);
	Набор.Отбор.МестоЗаказа.Установить(Спр.Ссылка);
	
	Запись = Набор.Добавить();
	Запись.Период = Период;
	Запись.ПриходЗаказов = ПриходЗаказов;
	Запись.Заказ = Заказ;
	Запись.МестоЗаказа = Спр.Ссылка;
	
	Набор.Записать();	
	
	Возврат Спр.Ссылка;

КонецФункции
//CeHbKA #2963

//CeHbKA 28.03.2019 #2833	
Процедура ЗаполнитьМестаЗаказовРТиУ(МассивРеализаций) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугМестаЗаказа.Ссылка КАК Заказ,
		|	РеализацияТоваровУслугМестаЗаказа.Ссылка.ВладелецТовара КАК ВладелецТовара,
		|	РеализацияТоваровУслугМестаЗаказа.НомерСтроки КАК НомерСтроки,
		|	РеализацияТоваровУслугМестаЗаказа.ШтрихкодМеста КАК ШтрихкодМеста,
		|	ЕСТЬNULL(МестаПоЗаказам.Ссылка, ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)) КАК МестоЗаказа,
		|	РеализацияТоваровУслугМестаЗаказа.КлючСвязиМеста КАК КлючСвязиМеста
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.МестаЗаказа КАК РеализацияТоваровУслугМестаЗаказа
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
		|		ПО РеализацияТоваровУслугМестаЗаказа.Ссылка = МестаПоЗаказам.Заказ
		|			И РеализацияТоваровУслугМестаЗаказа.ШтрихкодМеста = МестаПоЗаказам.Штрихкод
		|ГДЕ
		|	РеализацияТоваровУслугМестаЗаказа.Ссылка В(&МассивРеализаций)
		|	И РеализацияТоваровУслугМестаЗаказа.МестоЗаказа = ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Заказ КАК Заказ,
		|	ВТ.ВладелецТовара КАК ВладелецТовара,
		|	ВТ.НомерСтроки КАК НомерСтроки,
		|	ВТ.ШтрихкодМеста КАК ШтрихкодМеста,
		|	ВТ.МестоЗаказа КАК МестоЗаказа,
		|	ВТ.КлючСвязиМеста КАК КлючСвязиМеста,
		|	ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.УчетТоваровПоМестам, ЛОЖЬ) КАК УчетТоваровПоМестам
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(
		|				,
		|				Контрагент В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ.ВладелецТовара КАК ВладелецТовара
		|					ИЗ
		|						ВТ КАК ВТ)) КАК ПараметрыКонтрагентовСрезПоследних
		|		ПО ВТ.ВладелецТовара = ПараметрыКонтрагентовСрезПоследних.Контрагент
		|ИТОГИ
		|	МАКСИМУМ(УчетТоваровПоМестам)
		|ПО
		|	Заказ";
	
	Запрос.УстановитьПараметр("МассивРеализаций", МассивРеализаций);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Мас = ОбработкаСобытийИУведомленийСервер.ВернутьМассивАдресатовПоСобытию(Перечисления.ВидыСобытийУведомленияАбонентов.РегламентСозданиеМестПоЗаказам_Ошибка);
	
	ВыборкаЗаказ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	Пока ВыборкаЗаказ.Следующий() Цикл

		Если НЕ ВыборкаЗаказ.УчетТоваровПоМестам Тогда
			Продолжить;
		КонецЕсли; 
		
		ДокРТиУ = ВыборкаЗаказ.Заказ.ПолучитьОбъект();
		
		ВыборкаДетальныеЗаписи = ВыборкаЗаказ.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Индекс = ВыборкаДетальныеЗаписи.НомерСтроки - 1;
			
			СтрокаТЧ = ДокРТиУ.МестаЗаказа[Индекс];
			СтрокаТЧ.МестоЗаказа = ВыборкаДетальныеЗаписи.МестоЗаказа;
			
		КонецЦикла;
		
		Попытка
			ДокРТиУ.Записать();
		Исключение			
			ТекстПисьма = "Описание ошибки: " + Символы.ПС + ОписаниеОшибки();			
			lem.ОтправитьСообщение(Мас, "РегламентСозданиеМестПоЗаказам - ошибка", ТекстПисьма, , "Логистическая компания ""Стриж""", , ТипТекстаПочтовогоСообщения.ПростойТекст); 					
		КонецПопытки; 
		
	КонецЦикла;	

КонецПроцедуры
//CeHbKA 28.03.2019 #2833	

//CeHbKA #2963
Процедура ДобавитьЗаписьВРСШтрихкодыЗаказов(Заказ, Штрихкод, ШКПереданПартнером = Ложь) Экспорт

	Набор = РегистрыСведений.ШтрихкодыЗаказов.СоздатьНаборЗаписей();
	Набор.Отбор.Заказ.Установить(Заказ);
	Набор.Отбор.Штрихкод.Установить(Штрихкод);
	Набор.Прочитать();
	
	Запись = Набор.Добавить();
	Запись.Заказ = Заказ;
	Запись.Штрихкод = Штрихкод;
	Запись.ШКПереданПартнером = ШКПереданПартнером;
	
	Набор.Записать();

КонецПроцедуры
//CeHbKA #2963

Функция ПроверкаСозданияМестЗаказовПоАПП(НомерАПП, НомераЗаказовБезМест = Неопределено) Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Заказ КАК Заказ,
	            |	ПриходЗаказовНаСкладШтрихкодыПоМестам.ИдентификаторМеста КАК ИдентификаторМеста,
	            |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Штрихкод КАК Штрихкод,
	            |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Ссылка КАК ПриходЗаказов
	            |ПОМЕСТИТЬ ВТ_ПриходЗаказов
	            |ИЗ
	            |	Документ.ПриходЗаказовНаСклад.ШтрихкодыПоМестам КАК ПриходЗаказовНаСкладШтрихкодыПоМестам
	            |ГДЕ
	            |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Номер = &НомерАПП
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ВТ_ПриходЗаказов.Заказ КАК Заказ,
	            |	ВТ_ПриходЗаказов.ИдентификаторМеста КАК ИдентификаторМеста,
	            |	ВТ_ПриходЗаказов.Штрихкод КАК Штрихкод,
	            |	ВТ_ПриходЗаказов.ПриходЗаказов КАК ПриходЗаказов,
	            |	СозданиеМестПоЗаказам.Период КАК Период
	            |ПОМЕСТИТЬ ВТ_РЕЗ
	            |ИЗ
	            |	ВТ_ПриходЗаказов КАК ВТ_ПриходЗаказов
	            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СозданиеМестПоЗаказам КАК СозданиеМестПоЗаказам
	            |		ПО ВТ_ПриходЗаказов.Заказ = СозданиеМестПоЗаказам.Заказ
	            |			И ВТ_ПриходЗаказов.Штрихкод = СозданиеМестПоЗаказам.МестоЗаказа.Штрихкод
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ РАЗЛИЧНЫЕ
	            |	ВТ_РЕЗ.Заказ КАК Заказ,
	            |	ВТ_РЕЗ.Заказ.Номер КАК Номер,
	            |	ВТ_РЕЗ.ИдентификаторМеста КАК ИдентификаторМеста,
	            |	ВТ_РЕЗ.Штрихкод КАК Штрихкод,
	            |	МАКСИМУМ(ВТ_РЕЗ.ПриходЗаказов) КАК ПриходЗаказов
	            |ИЗ
	            |	ВТ_РЕЗ КАК ВТ_РЕЗ
	            |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
	            |		ПО ВТ_РЕЗ.Заказ = МестаПоЗаказам.Заказ
	            |			И ВТ_РЕЗ.Штрихкод = МестаПоЗаказам.Штрихкод
	            |			И (МестаПоЗаказам.ПометкаУдаления = ЛОЖЬ)
	            |ГДЕ
	            |	(ВТ_РЕЗ.Период ЕСТЬ NULL
	            |			ИЛИ МестаПоЗаказам.Ссылка ЕСТЬ NULL)
	            |	И ВТ_РЕЗ.Заказ <> ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	ВТ_РЕЗ.Заказ,
	            |	ВТ_РЕЗ.ИдентификаторМеста,
	            |	ВТ_РЕЗ.Штрихкод
	            |
	            |УПОРЯДОЧИТЬ ПО
	            |	ПриходЗаказов,
	            |	Заказ
	            |АВТОУПОРЯДОЧИВАНИЕ";
	Зап.УстановитьПараметр("НомерАПП", НомерАПП);
	
	//Асеев 11.02.2022 (по письму Электронный документ ОП)>>>
	//Возврат Зап.Выполнить().Пустой();
	
	Результат = Зап.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Истина;
	Иначе
		
		Если НомераЗаказовБезМест <> Неопределено Тогда
			//ожидается массив номеров заказов без мест
			ТаблицаНомеров = Результат.Выгрузить();
			ТаблицаНомеров.Свернуть("Номер");
			ТаблицаНомеров.Сортировать("Номер");
			НомераЗаказовБезМест = ТаблицаНомеров.ВыгрузитьКолонку("Номер");
		КонецЕсли;
		
		Возврат Ложь;
	КонецЕсли;
	//Асеев 11.02.2022 (по письму Электронный документ ОП)<<<

КонецФункции	
#КонецОбласти

#Область РегламентныеПроцедуры

//Режим - обязательный, Число
Процедура РегламентСозданиеМестЗаказов(Режим) Экспорт

	Если Режим = 1 Тогда
		СозданиеМестЗаказовПоДаннымПриходЗаказовНаСклад();	
	КонецЕсли; 
	
	Если Режим = 2 Тогда
		СозданиеМестЗаказовПоДаннымРСШтрихкодыЗаказов();
	КонецЕсли; 	

КонецПроцедуры

//CeHbKA
Процедура СозданиеМестЗаказовПоДаннымРСШтрихкодыЗаказов() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихкодыЗаказов.Заказ КАК Заказ,
		|	ШтрихкодыЗаказов.Заказ.Дата КАК ЗаказДата,
		|	ШтрихкодыЗаказов.Штрихкод КАК Штрихкод,
		|	ШтрихкодыЗаказов.ШКПереданПартнером КАК ШКПереданПартнером
		|ПОМЕСТИТЬ ВТ_ШтрихКодыПоЗаказам
		|ИЗ
		|	РегистрСведений.ШтрихкодыЗаказов КАК ШтрихкодыЗаказов
		|ГДЕ
		|	ШтрихкодыЗаказов.Штрихкод <> """"
		|	И ШтрихкодыЗаказов.Заказ.Дата >= &Завтра
		|	И ШтрихкодыЗаказов.ШКПереданПартнером
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ШтрихКодыПоЗаказам.Заказ КАК Заказ,
		|	ВТ_ШтрихКодыПоЗаказам.Штрихкод КАК Штрихкод,
		|	ЕСТЬNULL(СозданиеМестПоЗаказамСрезПоследних.МестоЗаказа, ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)) КАК МестоЗаказа,
		|	0 КАК НомерМеста,
		|	"""" КАК ИдентификаторМеста,
		|	ЗНАЧЕНИЕ(Документ.ПриходЗаказовНаСклад.ПустаяСсылка) КАК ПриходЗаказов
		|ИЗ
		|	ВТ_ШтрихКодыПоЗаказам КАК ВТ_ШтрихКодыПоЗаказам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СозданиеМестПоЗаказам.СрезПоследних(
		|				,
		|				(Заказ, МестоЗаказа.Штрихкод) В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ШтрихКодыПоЗаказам.Заказ КАК Заказ,
		|						ВТ_ШтрихКодыПоЗаказам.Штрихкод КАК Штрихкод
		|					ИЗ
		|						ВТ_ШтрихКодыПоЗаказам КАК ВТ_ШтрихКодыПоЗаказам)) КАК СозданиеМестПоЗаказамСрезПоследних
		|		ПО ВТ_ШтрихКодыПоЗаказам.Заказ = СозданиеМестПоЗаказамСрезПоследних.Заказ
		|			И ВТ_ШтрихКодыПоЗаказам.Штрихкод = СозданиеМестПоЗаказамСрезПоследних.МестоЗаказа.Штрихкод
		|ГДЕ
		|	ЕСТЬNULL(СозданиеМестПоЗаказамСрезПоследних.МестоЗаказа, ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)";
	
	//Запрос.УстановитьПараметр("Завтра", НачалоДня(ТекущаяДата())+86400);
	//CeHbKA #4253 16.09.2020
	Запрос.УстановитьПараметр("Завтра", НачалоДня(ТекущаяДата()));
	//CeHbKA #4253 16.09.2020
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивРеализаций = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СоздатьМестоПоЗаказу(ВыборкаДетальныеЗаписи.Заказ, ВыборкаДетальныеЗаписи.Штрихкод);
		
		МассивРеализаций.Добавить(ВыборкаДетальныеЗаписи.Заказ);
		
	КонецЦикла;
	
	Если МассивРеализаций.Количество() > 0 Тогда
		ЗаполнитьМестаЗаказовРТиУ(МассивРеализаций);
	КонецЕсли;
	
КонецПроцедуры	

//оригинал may.РегламентСозданиеМестПоЗаказам()
Процедура СозданиеМестЗаказовПоДаннымПриходЗаказовНаСклад() Экспорт
	
	//CeHbKA 21.02.2019 №2833
	МассивРеализаций = Новый Массив;
	//CeHbKA 21.02.2019 №2833
		
	Мас = ОбработкаСобытийИУведомленийСервер.ВернутьМассивАдресатовПоСобытию(Перечисления.ВидыСобытийУведомленияАбонентов.РегламентСозданиеМестПоЗаказам_Ошибка);
	
	ТекДата = ТекущаяДата();	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Заказ КАК Заказ,
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка КАК ПриходЗаказов,
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Штрихкод КАК Штрихкод
	               |ПОМЕСТИТЬ ВТ_ПриходЗаказов
	               |ИЗ
	               |	Документ.ПриходЗаказовНаСклад.ШтрихкодыПоМестам КАК ПриходЗаказовНаСкладШтрихкодыПоМестам
	               |ГДЕ
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Проведен = ИСТИНА
	               |	И ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |	И ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Основание В(&Основание)
	               |	И ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Контрагент = &ДетскийМир
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Заказ,
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка,
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.ВнешнийНомерЗаказа,
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Штрихкод
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПриходЗаказов.Заказ КАК Заказ,
	               |	ВТ_ПриходЗаказов.ПриходЗаказов КАК ПриходЗаказов,
	               |	СозданиеМестПоЗаказам.Период КАК Период,
	               |	ВТ_ПриходЗаказов.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа
	               |ПОМЕСТИТЬ ВТ_РЕЗ
	               |ИЗ
	               |	ВТ_ПриходЗаказов КАК ВТ_ПриходЗаказов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СозданиеМестПоЗаказам КАК СозданиеМестПоЗаказам
	               |		ПО ВТ_ПриходЗаказов.Заказ = СозданиеМестПоЗаказам.Заказ
	               |			И ВТ_ПриходЗаказов.ПриходЗаказов = СозданиеМестПоЗаказам.ПриходЗаказов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_РЕЗ.Заказ КАК Заказ,
	               |	ВТ_РЕЗ.ПриходЗаказов КАК ПриходЗаказов,
	               |	ВТ_РЕЗ.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
	               |	ПриходЗаказовНаСкладЗаказы.КоличествоМест КАК КоличествоМест,
	               |	МестаПоЗаказам.Ссылка КАК Ссылка,
	               |	МестаПоЗаказам.Штрихкод КАК Штрихкод,
	               |	ВТ_РЕЗ.Период КАК Период,
	               |	ВТ_РЕЗ.Заказ КАК Заказ1
	               |ИЗ
	               |	ВТ_РЕЗ КАК ВТ_РЕЗ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
	               |		ПО ВТ_РЕЗ.Заказ = МестаПоЗаказам.Заказ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
	               |		ПО ВТ_РЕЗ.Заказ = ПриходЗаказовНаСкладЗаказы.Заказ
	               |			И ВТ_РЕЗ.ПриходЗаказов = ПриходЗаказовНаСкладЗаказы.Ссылка
	               |ГДЕ
	               |	(ВТ_РЕЗ.Период ЕСТЬ NULL
	               |			ИЛИ МестаПоЗаказам.Ссылка ЕСТЬ NULL)
	               |	И ВТ_РЕЗ.Заказ <> ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_РЕЗ.Заказ,
	               |	ВТ_РЕЗ.ПриходЗаказов,
	               |	ВТ_РЕЗ.ВнешнийНомерЗаказа,
	               |	ПриходЗаказовНаСкладЗаказы.КоличествоМест,
	               |	МестаПоЗаказам.Ссылка,
	               |	МестаПоЗаказам.Штрихкод,
	               |	ВТ_РЕЗ.Период,
	               |	ВТ_РЕЗ.Заказ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПриходЗаказов,
	               |	Заказ
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	ОснМас = Новый Массив;
	ОснМас.Добавить(Перечисления.ТипыЗагрузкиДанных.WEBСервисСтриж_carriage);
	ОснМас.Добавить(Перечисления.ТипыЗагрузкиДанных.WEBСервисOZON);
	
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ТекДата));
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ТекДата - (60 * 60 * 24 * 2)));
	Запрос.УстановитьПараметр("Основание", ОснМас);
	Запрос.УстановитьПараметр("ДетскийМир", Справочники.Контрагенты.НайтиПоКоду("Shop_428"));
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл  
		
		Если ЗначениеЗаполнено(Выборка.Заказ) Тогда	
			
			Попытка
				
				НачатьТранзакцию();
				
				Для Сч = 1 По Выборка.КоличествоМест Цикл
					
					Штрихкод =  "" + Выборка.ВнешнийНомерЗаказа + "0" + Формат(Сч, "ЧГ=0");
					
					СоздатьМестоПоЗаказу(Выборка.Заказ, Штрихкод, , 0, Выборка.ПриходЗаказов);
										
					ДобавитьЗаписьВРСШтрихкодыЗаказов(Выборка.Заказ, Штрихкод, Ложь);  //Марочкин 21.10.2019, ШК передан партнером = Ложь ДобавитьЗаписьВРСШтрихкодыЗаказов(Выборка.Заказ, Штрихкод, Истина);
					
				КонецЦикла;	
				
				ЗафиксироватьТранзакцию();
				
			Исключение
												
				ОтменитьТранзакцию();
								
				Если Мас.Количество() > 0 Тогда
					
					ТекстПисьма = "Описание ошибки: " + Символы.ПС + ОписаниеОшибки();
					
					lem.ОтправитьСообщение(Мас, "РегламентСозданиеМестПоЗаказам - ошибка", ТекстПисьма, , "Логистическая компания ""Стриж""", , ТипТекстаПочтовогоСообщения.ПростойТекст); 		
					
				КонецЕсли;   
				
				Прервать;
				
			КонецПопытки;
			
			//CeHbKA 21.02.2019 №2833
			МассивРеализаций.Добавить(Выборка.Заказ);
			//CeHbKA 21.02.2019 №2833
			
		КонецЕсли;
		
	КонецЦикла;	
		
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Заказ КАК Заказ,
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.ИдентификаторМеста КАК ИдентификаторМеста,
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Штрихкод КАК Штрихкод,
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Ссылка КАК ПриходЗаказов,
				   //Поляков #3983 20.05.2020 ->
				   |	ISNULL(ПараметрыКонтрагентовСрезПоследних.НеСоздаватьМестаЗаказовПоПриходнымАПП, ЛОЖЬ) КАК НеСоздаватьМестаЗаказовПоПриходнымАПП
				   //Поляков #3983 20.05.2020 <-
				   |
	               |ПОМЕСТИТЬ ВТ_ПриходЗаказов
	               |ИЗ
	               |	Документ.ПриходЗаказовНаСклад.ШтрихкодыПоМестам КАК ПриходЗаказовНаСкладШтрихкодыПоМестам
				   //Поляков #3983 20.05.2020 ->
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(&ДатаКон, ) КАК ПараметрыКонтрагентовСрезПоследних
	               |		ПО ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Контрагент = ПараметрыКонтрагентовСрезПоследних.Контрагент
				   //Поляков #3983 20.05.2020 <-
				   |
	               |ГДЕ
	               |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Проведен = ИСТИНА
	               |	И ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |	И ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Основание В(&Основание)
	               |	И ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка.Контрагент <> &ДетскийМир
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПриходЗаказов.Заказ КАК Заказ,
	               |	ВТ_ПриходЗаказов.ИдентификаторМеста КАК ИдентификаторМеста,
	               |	ВТ_ПриходЗаказов.Штрихкод КАК Штрихкод,
	               |	ВТ_ПриходЗаказов.ПриходЗаказов КАК ПриходЗаказов,
	               |	СозданиеМестПоЗаказам.Период КАК Период,
				   //Поляков #3983 20.05.2020 ->
				   |	ВТ_ПриходЗаказов.НеСоздаватьМестаЗаказовПоПриходнымАПП КАК НеСоздаватьМестаЗаказовПоПриходнымАПП
				   //Поляков #3983 20.05.2020 <-
				   |
	               |ПОМЕСТИТЬ ВТ_РЕЗ
	               |ИЗ
	               |	ВТ_ПриходЗаказов КАК ВТ_ПриходЗаказов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СозданиеМестПоЗаказам КАК СозданиеМестПоЗаказам
	               |		ПО ВТ_ПриходЗаказов.Заказ = СозданиеМестПоЗаказам.Заказ
	               |			И ВТ_ПриходЗаказов.Штрихкод = СозданиеМестПоЗаказам.МестоЗаказа.Штрихкод
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_РЕЗ.Заказ КАК Заказ,
	               |	ВТ_РЕЗ.ИдентификаторМеста КАК ИдентификаторМеста,
	               |	ВТ_РЕЗ.Штрихкод КАК Штрихкод,
	               |	МАКСИМУМ(ВТ_РЕЗ.ПриходЗаказов) КАК ПриходЗаказов,
				   //Поляков #3983 20.05.2020 ->
				   |	ВТ_РЕЗ.НеСоздаватьМестаЗаказовПоПриходнымАПП КАК НеСоздаватьМестаЗаказовПоПриходнымАПП
				   //Поляков #3983 20.05.2020 <-
				   |
	               |ИЗ
	               |	ВТ_РЕЗ КАК ВТ_РЕЗ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
	               |		ПО ВТ_РЕЗ.Заказ = МестаПоЗаказам.Заказ
	               |			И ВТ_РЕЗ.Штрихкод = МестаПоЗаказам.Штрихкод
	               |			И (МестаПоЗаказам.ПометкаУдаления = ЛОЖЬ)
				   |ГДЕ
				   |	(ВТ_РЕЗ.Период ЕСТЬ NULL
				   |			ИЛИ МестаПоЗаказам.Ссылка ЕСТЬ NULL)
				   |	И ВТ_РЕЗ.Заказ <> ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_РЕЗ.Заказ,
	               |	ВТ_РЕЗ.ИдентификаторМеста,
	               |	ВТ_РЕЗ.Штрихкод,
				   //Поляков #3983 20.05.2020 ->
				   |	ВТ_РЕЗ.НеСоздаватьМестаЗаказовПоПриходнымАПП
				   //Поляков #3983 20.05.2020 <-
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПриходЗаказов,
	               |	Заказ
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		//Поляков #3983 20.05.2020 ->
		Если Выборка.НеСоздаватьМестаЗаказовПоПриходнымАПП = Истина Тогда
			Продолжить;	
		КонецЕсли;	
		//Поляков #3983 20.05.2020 <-
		
		Если ЗначениеЗаполнено(Выборка.Заказ) Тогда	
			
			Попытка
				
				НачатьТранзакцию();
				
				СоздатьМестоПоЗаказу(Выборка.Заказ, Выборка.Штрихкод, , Выборка.ИдентификаторМеста, Выборка.ПриходЗаказов);
				
				ДобавитьЗаписьВРСШтрихкодыЗаказов(Выборка.Заказ, Выборка.Штрихкод, Истина);
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				
				Если Мас.Количество() > 0 Тогда
					
					ТекстПисьма = "Описание ошибки: " + Символы.ПС + ОписаниеОшибки();
					
					lem.ОтправитьСообщение(Мас, "РегламентСозданиеМестПоЗаказам - ошибка", ТекстПисьма, , "Логистическая компания ""Стриж""", , ТипТекстаПочтовогоСообщения.ПростойТекст); 		
					
				КонецЕсли;
				
				Прервать;
				
			КонецПопытки;
			
			//CeHbKA 21.02.2019 №2833
			МассивРеализаций.Добавить(Выборка.Заказ);
			//CeHbKA 21.02.2019 №2833				
			
		КонецЕсли;
		
	КонецЦикла;
		
	Если МассивРеализаций.Количество() > 0 Тогда
		ЗаполнитьМестаЗаказовРТиУ(МассивРеализаций);
	КонецЕсли;
	
КонецПроцедуры
//CeHbKA 
#КонецОбласти