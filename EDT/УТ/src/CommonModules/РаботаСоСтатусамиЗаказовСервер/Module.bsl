#Область ПрограммныйИнтерфейс

// Записывает статусы из ТаблицаДвижений в РС.СтатусыЗаказов
// перенесено из smv.СохранитьСтатус по Задача № 3027 
Функция СохранитьСтатусы(ТаблицаДвижений, ИмяКолонкиПериода = Неопределено, ТерминалОбработки = Неопределено) Экспорт
	
	Период = ТекущаяДата();

	Для каждого Стр Из ТаблицаДвижений Цикл		
		Стр.БылоЗакрытие = Ложь;	
	КонецЦикла;
	
	МассивЗаказов = ТаблицаДвижений.ВыгрузитьКолонку("Реализация"); 	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВЫБОР
	                      |		КОГДА СтатусыЗакрытияЗаказов.Период ЕСТЬ NULL 
	                      |			ТОГДА ЛОЖЬ
	                      |		ИНАЧЕ ИСТИНА
	                      |	КОНЕЦ КАК БылоЗакрытие,
	                      |	СтатусыЗакрытияЗаказов.Заказ
	                      |ИЗ
	                      |	РегистрСведений.СтатусыЗакрытияЗаказов КАК СтатусыЗакрытияЗаказов
	                      |ГДЕ
	                      |	СтатусыЗакрытияЗаказов.СтатусЗакрытия = ЗНАЧЕНИЕ(Перечисление.СтатусыПредварительногоЗакрытияЗаказов.ЗаказЗакрытПредварительно)
	                      |	И СтатусыЗакрытияЗаказов.Заказ В(&МассивЗаказов)");
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	Рез = Запрос.Выполнить().Выгрузить();	
	Для каждого Тек Из ТаблицаДвижений Цикл		
		Най = Рез.НайтиСтроки(Новый Структура("Заказ", Тек.Реализация));
		Для каждого НайТек Из Най Цикл
		    Если НайТек.БылоЗакрытие Тогда		
				Тек.БылоЗакрытие = Истина;			
			КонецЕсли;				
		КонецЦикла;	
	КонецЦикла;
	
	ЕстьИнициаторСостояния = Ложь;
	Попытка
		Если Не ТаблицаДвижений.Колонки.Найти("ИнициаторСостояния") = Неопределено Тогда;
			ЕстьИнициаторСостояния = Истина;
		КонецЕсли;
	Исключение
	КонецПопытки;
	
    Для каждого Стр Из ТаблицаДвижений Цикл
		Если Стр.Статус<>401 Тогда			
			Если НЕ Стр.БылоЗакрытие Тогда	
				
				Если Не ИмяКолонкиПериода = Неопределено Тогда 
					Период = Стр[ИмяКолонкиПериода];
				КонецЕсли;	
				
				НаборЗаписей = РегистрыСведений.СтатусыЗаказов.СоздатьНаборЗаписей();
	            НаборЗаписей.Отбор.Заказ.Установить(Стр.Реализация);
	            НаборЗаписей.Отбор.Период.Установить(Период);
	            Запись = НаборЗаписей.Добавить();
	            Запись.Период = Период;
	            Запись.Заказ = Стр.Реализация;
	            Запись.Статус = Стр.Статус;
	            Если Стр.ДокументРегистратор <> Неопределено Тогда
	                Запись.ДокументРегистратор = Стр.ДокументРегистратор;
				КонецеСли;				
				Запись.ПредварительноеЗакрытие = Стр.ПредварительноеЗакрытие;	
								
				Если Не ТерминалОбработки = Неопределено тогда
					Запись.Терминал = ТерминалОбработки;
				Иначе
					Запись.Терминал = Стр.Терминал;
				КонецЕсли;
						
				Если ЕстьИнициаторСостояния Тогда
					Запись.Инициатор = Стр.ИнициаторСостояния;
				КонецЕсли;	
				
	            НаборЗаписей.Записать();
				
			КонецЕсли;
        КонецЕсли;
    КонецЦикла;	
	
КонецФункции

// Записывает одиночный статус из ТаблицаДвижений в РС.СтатусыЗаказов
// перенесено из lem.СохранитьСтатус по Задача № 3027 
Функция СохранитьСтатус(Заказ, Статус, Док = Неопределено, ИнициаторСостояния = Неопределено, ТерминалОбработки = Неопределено) Экспорт
	
	ОтображатьВАдминке = Истина;
	
	Если Статус <> 312 
		И Статус <> 313 
		И Статус <> 314 Тогда
		
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		|	ЗакрытыеЗаказы.Период
		|ИЗ
		|	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
		|ГДЕ
		|	ЗакрытыеЗаказы.Реализация.Ссылка = &Реализация";
		Зап.УстановитьПараметр("Реализация", Заказ.Ссылка);
		Если Не Зап.Выполнить().Пустой() Тогда
			ОтображатьВАдминке = Ложь;
		КонецеСли;	
	КонецеСли;		
	
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда  // Реализация
		
		Если (СокрЛП(Заказ.ВладелецТовара.Код) = "Shop_248" Или СокрЛП(Заказ.ВладелецТовара.Код) = "Shop_601" ИЛИ СокрЛП(Заказ.ВладелецТовара.Код) = "Shop_752")  И (Статус = 213 Или Статус = 231 ИЛИ Статус = 211) Тогда // проверка Яндекса на предмет 404 только когда 10
			Зап = Новый Запрос;
			Зап.Текст = "ВЫБРАТЬ
			            |	СтатусыЗаказов.Статус
			            |ИЗ
			            |	РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
			            |ГДЕ
			            |	СтатусыЗаказов.Статус = 211
			            |	И СтатусыЗаказов.Заказ = &Заказ
			            |	И СтатусыЗаказов.Период <= &Период";
						
			Зап.УстановитьПараметр("Заказ", Заказ.Ссылка);			
			Зап.УстановитьПараметр("Период", ТекущаяДата());			
			
			Рез = Зап.Выполнить();
			Если НЕ Рез.Пустой() Тогда
				Если Статус = 211 Тогда // Михушкин - Запретить повторное выставление статуса 211 по заказам Яндекса
					Возврат Ложь;						
				КонецЕсли;
			Иначе
				Если Статус <> 211 Тогда
					Возврат Ложь;						
				КонецЕсли;
			КонецеСли;	
		КонецеСли;	
		
		Р = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Заказ.Номер);
		Если Р.Пустая() Тогда  			
			Возврат ОтображатьВАдминке;
		КонецеСли;
		
	ИначеЕсли ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда   // Заборы
				
		Р = Документы.ЗаборТовара.НайтиПоНомеру(Заказ.Номер);
		Если Р.Пустая() Тогда   
			Возврат ОтображатьВАдминке;
		КонецеСли;
	
	КонецЕсли;	
		
	ТекД = ТекущаяДата();
	Наб = РегистрыСведений.СтатусыЗаказов.СоздатьНаборЗаписей();
	Наб.Отбор.Заказ.Установить(Р.ссылка);
	Наб.Отбор.Период.Установить(ТекД);
	Наб.Прочитать();
	
	Нов = Наб.Добавить();
	Нов.Период = ТекД;
	Нов.Заказ = Р.Ссылка;
	Нов.Статус = Статус;
	Если Док <> Неопределено Тогда
		Нов.ДокументРегистратор = Док;
	КонецеСли;	
	
	Если Не ТерминалОбработки = Неопределено Тогда
		Нов.Терминал = ТерминалОбработки;
	Иначе
		Нов.Терминал = Заказ.ТерминалДоставки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИнициаторСостояния) Тогда
		Нов.Инициатор = ИнициаторСостояния;
	КонецЕсли;	
	
	Наб.записать();
	
	Возврат ОтображатьВАдминке;
	
КонецФункции

// Записывает одиночный статус из ТаблицаДвижений в РС.ФинальныеСтатусыЗаказов
// перенесено из lem.СохранитьФинальныйСтатус по Задача № 2586 
Функция СохранитьФинальныйСтатус(Заказ, Статус, ФинальныйСтатус, Док = Неопределено, ПредварительноеЗакрытие = Неопределено) Экспорт
	
	//Зап = Новый Запрос;
	//Зап.Текст = "ВЫБРАТЬ
	//            |	ЗакрытыеЗаказы.Период
	//            |ИЗ
	//            |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	//            |ГДЕ
	//            |	ЗакрытыеЗаказы.Реализация.Ссылка = &Реализация";
	//Зап.УстановитьПараметр("Реализация", Заказ.Ссылка);
	ОтображатьВАдминке = Истина;
	//Если Не Зап.Выполнить().Пустой() Тогда
	//	ОтображатьВАдминке = Ложь;
	//КонецеСли;	
	
	
	//Р = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Заказ.Номер);
	ТекД = ТекущаяДата();
	Наб = РегистрыСведений.ФинальныеСтатусыЗаказов.СоздатьНаборЗаписей();
	Наб.Отбор.Заказ.Установить(Заказ.ссылка);
	Наб.Отбор.Период.Установить(ТекД);
	Наб.Прочитать();
	
	Нов = Наб.Добавить();
	Нов.Период = ТекД;
	Нов.Заказ = Заказ.Ссылка;
	Нов.Статус = Статус;
	Нов.ФинальныйСтатус = ФинальныйСтатус;
	Если Док <> Неопределено Тогда
		Нов.ДокументРегистратор = Док;
	КонецеСли;	
	Если ПредварительноеЗакрытие <> Неопределено Тогда
		Нов.ПредварительноеЗакрытие = ПредварительноеЗакрытие;
	КонецеСли;	 
	
	Наб.записать();
	
	Возврат ОтображатьВАдминке;
	
КонецФункции

// Записывает статусы из ТаблицаДвижений в РС.СохранитьФинальныйСтатус
// перенесено из smv.СохранитьФинальныйСтатус по Задача № 2586 
// ВРЕМЕННО ОТКЛЮЧЕНО В РАМКАХ ЭТАПА 1 2586
//Функция СохранитьФинальныеСтатусы(ТаблицаДвижений) Экспорт
//    Период = ТекущаяДата();
//	
//	Для каждого Стр Из ТаблицаДвижений Цикл		
//		Стр.БылоЗакрытие = Ложь;	
//	КонецЦикла;
//	
//	МассивЗаказов = ТаблицаДвижений.ВыгрузитьКолонку("Реализация"); 	
//	Запрос = Новый Запрос("ВЫБРАТЬ
//	                      |	ВЫБОР
//	                      |		КОГДА СтатусыЗакрытияЗаказов.Период ЕСТЬ NULL 
//	                      |			ТОГДА ЛОЖЬ
//	                      |		ИНАЧЕ ИСТИНА
//	                      |	КОНЕЦ КАК БылоЗакрытие,
//	                      |	СтатусыЗакрытияЗаказов.Заказ
//	                      |ИЗ
//	                      |	РегистрСведений.СтатусыЗакрытияЗаказов КАК СтатусыЗакрытияЗаказов
//	                      |ГДЕ
//	                      |	СтатусыЗакрытияЗаказов.СтатусЗакрытия = ЗНАЧЕНИЕ(Перечисление.СтатусыПредварительногоЗакрытияЗаказов.ЗаказЗакрытПредварительно)
//	                      |	И СтатусыЗакрытияЗаказов.Заказ В(&МассивЗаказов)");
//	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
//	Рез = Запрос.Выполнить().Выгрузить();	
//	Для каждого Тек Из ТаблицаДвижений Цикл		
//		Най = Рез.НайтиСтроки(Новый Структура("Заказ", Тек.Реализация));
//		Для каждого НайТек Из Най Цикл
//		    Если НайТек.БылоЗакрытие Тогда		
//				Тек.БылоЗакрытие = Истина;			
//			КонецЕсли;				
//		КонецЦикла;	
//	КонецЦикла;
//	// Костыль - переделать !!!!!
//	
//    
//    Для каждого Стр Из ТаблицаДвижений Цикл
//		Если Стр.Статус<>401 Тогда
//			
//			Если НЕ Стр.БылоЗакрытие Тогда	// Костыль - переделать !!!!!
//				
//	            НаборЗаписей = РегистрыСведений.ФинальныеСтатусыЗаказов.СоздатьНаборЗаписей();
//	            НаборЗаписей.Отбор.Заказ.Установить(Стр.Реализация);
//	            НаборЗаписей.Отбор.Период.Установить(Период);
//	            Запись = НаборЗаписей.Добавить();
//	            Запись.Период = Период;
//	            Запись.Заказ = Стр.Реализация;
//	            Запись.Статус = Стр.Статус;
//	            Если Стр.ДокументРегистратор <> Неопределено Тогда
//	                Запись.ДокументРегистратор = Стр.ДокументРегистратор;
//				КонецеСли;	
//				Запись.ПредварительноеЗакрытие = Стр.ПредварительноеЗакрытие;
//	            НаборЗаписей.Записать();
//				
//			КонецЕсли;
//        КонецЕсли;
//    КонецЦикла;	
//КонецФункции

#КонецОбласти