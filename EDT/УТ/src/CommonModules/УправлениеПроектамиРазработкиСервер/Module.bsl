Функция СоздатьЭтапыРазработкиПоУмолчанию(Проект) Экспорт
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	Для Сч = 1 По 5 Цикл
		НовЭтап = Справочники.ЭтапыПроектовРазработки.СоздатьЭлемент();
		НовЭтап.Владелец = Проект.Ссылка;
		НовЭтап.НомерЭтапа = Сч;
		
		Если Сч = 1 Тогда
			Этап = Перечисления.ВидыЭтаповРазработкиПроектов.Согласование;
			Наименование = "Согласование";
		ИначеЕсли Сч = 2 Тогда
			Этап = Перечисления.ВидыЭтаповРазработкиПроектов.Постановка;
			Наименование = "Постановка";
		ИначеЕсли Сч = 3 Тогда
			Этап = Перечисления.ВидыЭтаповРазработкиПроектов.Разработка;
			Наименование = "Разработка";
		ИначеЕсли Сч = 4 Тогда
			Этап = Перечисления.ВидыЭтаповРазработкиПроектов.Тестирование;
			Наименование = "Тестирование";
		ИначеЕсли Сч = 5 Тогда
			Этап = Перечисления.ВидыЭтаповРазработкиПроектов.Релиз;
			Наименование = "Релиз";
		КонецЕсли;
		
		НовЭтап.ВидЭтапа = Этап;
		НовЭтап.Наименование = Наименование;
		НовЭтап.Записать();
	КонецЦикла;	
	
	ЗафиксироватьТранзакцию();
	
	Возврат Истина;
КонецФункции	

Функция ЗафиксироватьПроектВРСПроектовРазработки(Проект) Экспорт
	Ответственный = ПолучитьОсновногоОтветственногоПоПроекту(Проект);
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Возврат Ложь;
	КонецеСли;	
	
	ЗафиксироватьПроектВРСУчетПроектовРазработки(Проект, Ответственный);
	ЗафиксироватьПроектВРССостояниеПроектовРазработки(Проект);
	
	Возврат Истина;
КонецФункции	


Функция ПолучитьОсновногоОтветственногоПоПроекту(Проект) Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ПроектыРазработкиУчастники.Сотрудник КАК Сотрудник
	            |ИЗ
	            |	Справочник.ПроектыРазработки.Участники КАК ПроектыРазработкиУчастники
	            |ГДЕ
	            |	ПроектыРазработкиУчастники.Ссылка = &Проект
	            |	И ПроектыРазработкиУчастники.РольУчастника = ЗНАЧЕНИЕ(Перечисление.РолиУчастниковПроектовРазработки.ОтветственныйЗаРеализацию)";
	Зап.УстановитьПараметр("Проект", Проект.Ссылка);
	
	Выб = Зап.Выполнить().Выбрать();
	Если Выб.Следующий() Тогда
		Возврат Выб.Сотрудник;
	Иначе	
		Возврат Неопределено;
	КонецЕсли;	
КонецФункции	

Функция ЗафиксироватьПроектВРСУчетПроектовРазработки(Проект, Ответственный) Экспорт
	Зап = Новый Запрос;
	
	Зап.Текст = "ВЫБРАТЬ
	            |	ЭтапыПроектовРазработки.Ссылка КАК Этап
	            |ИЗ
	            |	Справочник.ЭтапыПроектовРазработки КАК ЭтапыПроектовРазработки
	            |ГДЕ
	            |	ЭтапыПроектовРазработки.Владелец = &Владелец";
	Зап.УстановитьПараметр("Владелец", Проект);
	
	ВыборкаЭтаповРазработки = Зап.Выполнить().Выбрать();
	
	ТекВр = ТекущаяДата();
	
	Наб = РегистрыСведений.УчетПроектовРазработки.СоздатьНаборЗаписей();
	Наб.Отбор.Период.Установить(ТекВр);
	Наб.Отбор.Проект.Установить(Проект);
	
	Нов = Наб.Добавить();
	Нов.Период = ТекВр;
	Нов.Проект = Проект;
	Нов.ПланируемаяДатаНачалаРабот = НачалоДня(ТекущаяДата() + 86400);
	Нов.ПланируемаяДатаОкончанияРабот = НачалоДня(ТекущаяДата() + 86500);
	Нов.Ответственный = Ответственный;
	Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Наб.Записать();
	
	Пока ВыборкаЭтаповРазработки.Следующий() Цикл
		Наб = РегистрыСведений.УчетПроектовРазработки.СоздатьНаборЗаписей();
		Наб.Отбор.Период.Установить(ТекВр);
		Наб.Отбор.Проект.Установить(ВыборкаЭтаповРазработки.Этап);
		
		Нов = Наб.Добавить();
		Нов.Период = ТекВр;
		Нов.Проект = ВыборкаЭтаповРазработки.Этап;
		Нов.ПланируемаяДатаНачалаРабот = НачалоДня(ТекущаяДата() + 86400);
		Нов.ПланируемаяДатаОкончанияРабот = НачалоДня(ТекущаяДата() + 86500);
		Нов.Ответственный = Ответственный;
		Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		
		Наб.Записать();
		
	КонецЦикла;	
КонецФункции	


Функция ЗафиксироватьПроектВРССостояниеПроектовРазработки(Проект) Экспорт
	Зап = Новый Запрос;
	
	Зап.Текст = "ВЫБРАТЬ
	            |	ЭтапыПроектовРазработки.Ссылка КАК Этап
	            |ИЗ
	            |	Справочник.ЭтапыПроектовРазработки КАК ЭтапыПроектовРазработки
	            |ГДЕ
	            |	ЭтапыПроектовРазработки.Владелец = &Владелец";
	Зап.УстановитьПараметр("Владелец", Проект);
	
	ВыборкаЭтаповРазработки = Зап.Выполнить().Выбрать();
	
	ТекВр = ТекущаяДата();
	
	Наб = РегистрыСведений.СостояниеПроектовРазработки.СоздатьНаборЗаписей();
	Наб.Отбор.Период.Установить(ТекВр);
	Наб.Отбор.Проект.Установить(Проект);
	
	Нов = Наб.Добавить();
	Нов.Период = ТекВр;
	Нов.Проект = Проект;
	Нов.Состояние = Перечисления.СостоянияПроектовРазработки.Стартован;
	Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Наб.Записать();
	
	Пока ВыборкаЭтаповРазработки.Следующий() Цикл
		Наб = РегистрыСведений.СостояниеПроектовРазработки.СоздатьНаборЗаписей();
		Наб.Отбор.Период.Установить(ТекВр);
		Наб.Отбор.Проект.Установить(ВыборкаЭтаповРазработки.Этап);
		
		Нов = Наб.Добавить();
		Нов.Период = ТекВр;
		Нов.Проект = ВыборкаЭтаповРазработки.Этап;
		Нов.Состояние = Перечисления.СостоянияПроектовРазработки.Стартован;
		Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		
		Наб.Записать();
		
	КонецЦикла;	
КонецФункции	

Функция ПоПроектуСозданыЭтапыПроекта(Проект) Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ЭтапыПроектовРазработки.Ссылка КАК Ссылка
	            |ИЗ
	            |	Справочник.ЭтапыПроектовРазработки КАК ЭтапыПроектовРазработки
	            |ГДЕ
	            |	ЭтапыПроектовРазработки.Владелец = &Проект";
	Зап.УстановитьПараметр("Проект", Проект);
	Рез = Зап.Выполнить();
	
	Возврат Не Рез.Пустой();
КонецФункции

Функция ПроектУчтенВРСУчетПроектовРазработки(Проект) Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	УчетПроектовРазработки.Ответственный КАК Ответственный
	            |ИЗ
	            |	РегистрСведений.УчетПроектовРазработки КАК УчетПроектовРазработки
	            |ГДЕ
	            |	УчетПроектовРазработки.Проект = &Проект";
	Зап.УстановитьПараметр("Проект", Проект);
	Рез = Зап.Выполнить();
	
	Возврат Не Рез.Пустой();
КонецФункции

Функция ПроектУчтенВРССостояниеПроектовРазработки(Проект) Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	СостояниеПроектовРазработки.Состояние КАК Состояние
	            |ИЗ
	            |	РегистрСведений.СостояниеПроектовРазработки КАК СостояниеПроектовРазработки
	            |ГДЕ
	            |	СостояниеПроектовРазработки.Проект = &Проект";
	Зап.УстановитьПараметр("Проект", Проект);
	Рез = Зап.Выполнить();
	
	Возврат Не Рез.Пустой();
КонецФункции

Функция ПолучитьСписокПодсистемКонфигурации(СписокПодсистем) Экспорт
	Для Каждого Тек Из Метаданные.Подсистемы Цикл
		СписокПодсистем.Добавить(Тек.Имя, Тек.Представление()); 
	КонецЦикла;	
	
	Возврат СписокПодсистем;
КонецФункции	


Процедура ДополнитьСписокПодсистем(СписокПодсистем) Экспорт
	СписокПодсистем.Вставить(0, "МобильноеПриложениеЭкспедиторов", "Мобильное приложение экспедиторов", , Метаданные.ОбщиеКартинки.новаРейс.Картинка);
КонецПроцедуры	