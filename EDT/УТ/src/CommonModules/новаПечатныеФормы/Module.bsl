
// Возвращает пустую таблицу печатных форм.
//
// Возвращаемое значение:
//  <ТаблицаЗначений[ТаблицаПечатныхФорм]>
//
Функция ПолучитьТаблицуПечатныхФорм() Экспорт
	ТипСтрока = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(150));
	тзПечатныеФормы = Новый ТаблицаЗначений;
	тзПечатныеФормы.Колонки.Добавить("ИмяДокумента", ТипСтрока);
	тзПечатныеФормы.Колонки.Добавить("Представление", ТипСтрока);
	тзПечатныеФормы.Колонки.Добавить("ПечатнаяФорма", ТипСтрока);
	тзПечатныеФормы.Колонки.Добавить("ПредставлениеПечатнойФормы", ТипСтрока);
	
	Возврат тзПечатныеФормы;
КонецФункции

// Возвращает все возможные печатные формы. 
//
// Параметры:
//  ВключитьВстроенныеПечатныеФормы <Булево>: возвращать печатные формы УТЛ.
//  ВключитьПечатныеФормыКИС        <Булево>: возвращать печатные формы интегрированной конфигурации.
//
// Возвращаемое значение:
//  <ТаблицаЗначений[ТаблицаПечатныхФорм]>
//
Функция ПолучитьДеревоДокументов(ВключитьВстроенныеПечатныеФормы, ВключитьПечатныеФормыКИС) Экспорт
	тзПечатныеФормы = ПолучитьТаблицуПечатныхФорм();
	
	Если ВключитьВстроенныеПечатныеФормы Тогда
		мсПечатныеФормы = новаОбщиеПроцедуры.ПолучитьОбъектыМетаданныхКласса(Метаданные.Отчеты, Метаданные.Подсистемы.новаКлассыОбъектов.Подсистемы.новаПечатныеФормы);
		Для Каждого мдПечатнаяФорма Из мсПечатныеФормы Цикл
			Типы = мдПечатнаяФорма.Реквизиты.Владелец.Тип.Типы();
			Для Каждого Тип Из Типы Цикл
				мдОбъект = Метаданные.НайтиПоТипу(Тип);
				
				СтрокаПФ = тзПечатныеФормы.Добавить();
				СтрокаПФ.ИмяДокумента = мдОбъект.Имя;
				СтрокаПФ.Представление = мдОбъект.Представление();
				СтрокаПФ.ПечатнаяФорма = "НОВА" + мдПечатнаяФорма.Имя;
				СтрокаПФ.ПредставлениеПечатнойФормы = мдПечатнаяФорма.Представление();
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Если ВключитьПечатныеФормыКИС Тогда
		тзПечатныеФормыКИС = новаИнтеграция.ПолучитьДеревоПечатныхФормКИС();
		Для Каждого стрПечатнаяФормаКИС Из тзПечатныеФормыКИС Цикл
			ЗаполнитьЗначенияСвойств(тзПечатныеФормы.Добавить(), стрПечатнаяФормаКИС);
		КонецЦикла;	
	КонецЕсли; 
	
	Возврат тзПечатныеФормы;
КонецФункции

#Если Клиент Тогда
//
// Выводит на печать печатную форму. 
//
// Параметры:
//  Объект               <ДокументОбъект>: документ, который буден распечатан.
//  ТекущаяПечатнаяФорма <Строка>: имя печатной формы.
//  ПараметрыПечати      <Структура(Количество:<Число>, НаПринтер:<Булево>, ВыводитьВОдинТабличныйДокумент:<Булево>)>
//
Процедура Печать(Объект, ТекущаяПечатнаяФорма, ПараметрыПечати = Неопределено) Экспорт
	
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") Тогда
		Количество = ПараметрыПечати.Количество;
		НаПринтер = ПараметрыПечати.НаПринтер;
		ВыводитьВОдинТабличныйДокумент = ПараметрыПечати.ВыводитьВОдинТабличныйДокумент;
	Иначе
		Количество = 1;
		НаПринтер = Ложь;
		ВыводитьВОдинТабличныйДокумент = Ложь;
	КонецЕсли;
	
	ПечатнаяФорма = Сред(ТекущаяПечатнаяФорма, 5);
	Если Лев(ТекущаяПечатнаяФорма, 4) = "НОВА" Тогда
		
		ПечатнаяФормаОбъект = Отчеты[ПечатнаяФорма].Создать();
		Если ПечатнаяФорма = Неопределено Тогда Возврат; КонецЕсли;
		
		ПечатнаяФормаОбъект.Владелец = Объект;
		
		Если ВыводитьВОдинТабличныйДокумент Тогда
			ФормаПечати = ПолучитьОбщуюФорму("новаФормаПечати");
		Иначе
			ФормаПечати = ПолучитьОбщуюФорму("новаФормаПечати",, ПечатнаяФорма + Строка(Объект));
		КонецЕсли;
		
		ТД = ФормаПечати.ПолучитьТабличныйДокумент();
		Если Не ВыводитьВОдинТабличныйДокумент Тогда
			ТД.Очистить();
		КонецЕсли;
		
		Заголовок = "";
		Если Не ПечатнаяФормаОбъект.ВывестиНаПечать(Объект, ТД, Заголовок) Тогда Возврат; КонецЕсли;
		
		Если ВыводитьВОдинТабличныйДокумент Тогда
			ТД.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТД.КоличествоЭкземпляров = Количество;
		Если НаПринтер Тогда
			Если Не ВыводитьВОдинТабличныйДокумент Тогда
				ТД.Напечатать();
			КонецЕсли;
		Иначе
			ФормаПечати.Заголовок = ?(ПустаяСтрока(Заголовок), ПечатнаяФорма, Заголовок);
			ФормаПечати.Открыть();
		КонецЕсли;
		
	Иначе
		новаИнтеграция.Печать(Объект, ТекущаяПечатнаяФорма, ПараметрыПечати);		
	КонецЕсли;
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Процедура распечатывает бизнес-процесс Рейс и все подчиненные документы
//
// Параметры:
//  мсРейсы <Массив(<БизнесПроцессСсылка.новаРейсМестнойДоставки>)>
//
Процедура РаспечататьРейсы(мсРейсы, ШаблонПечатныхФорм) Экспорт
	
	ТаблицаПечати = Новый ТаблицаЗначений;
	ТаблицаПечати.Колонки.Добавить("Шаблон");
	ТаблицаПечати.Колонки.Добавить("Документ");
	ТаблицаПечати.Колонки.Добавить("ПечатнаяФорма");
	ТаблицаПечати.Колонки.Добавить("Количество");
	ТаблицаПечати.Колонки.Добавить("НаПринтер");
	
	ИтоговаяТаблица = Новый ТаблицаЗначений;
	ИтоговаяТаблица.Колонки.Добавить("Шаблон");
	ИтоговаяТаблица.Колонки.Добавить("Объект");
	
	//  печатная форма рейса
	МенеджерПФ = РегистрыСведений.новаПечатныеФормы;
	ТаблицаРейса = ТаблицаПечати.Скопировать();
	Отбор = Новый Структура("Шаблон", ШаблонПечатныхФорм);
	Выборка = МенеджерПФ.Выбрать(Отбор);
	Пока Выборка.Следующий() Цикл
		Если Выборка.Документ="новаРейсМестнойДоставки" Тогда
			НоваяСтрока 				= ТаблицаРейса.Добавить();
			НоваяСтрока.Шаблон = ШаблонПечатныхФорм;
			НоваяСтрока.Документ 		= Выборка.Документ;
			НоваяСтрока.ПечатнаяФорма 	= Выборка.ПечатнаяФорма;
			НоваяСтрока.Количество 		= Выборка.Количество;
			НоваяСтрока.НаПринтер 		= Выборка.НаПринтер;
		КонецЕсли; 
		
		НоваяСтрока 				= ТаблицаПечати.Добавить();
		НоваяСтрока.Шаблон = ШаблонПечатныхФорм;
		НоваяСтрока.Документ 		= Выборка.Документ;
		НоваяСтрока.ПечатнаяФорма 	= Выборка.ПечатнаяФорма;
		НоваяСтрока.Количество 		= Выборка.Количество;
		НоваяСтрока.НаПринтер 		= Выборка.НаПринтер;
	КонецЦикла; 
		
	// Печатные формы Контрагентов
	Для Каждого Рейс Из мсРейсы Цикл
		
		// Получаем Рейс и распечатываем		
		обМаршрутРейса = Обработки.новаИсточникМаршрутРейса.Создать();
		стРейс = обМаршрутРейса.НачатьРедактирование(Рейс, Неопределено);
		
		Для Каждого стрПФ Из ТаблицаРейса Цикл
			новаПечатныеФормы.Печать(стРейс.Рейс, стрПФ.ПечатнаяФорма, Новый Структура("Количество, НаПринтер, ВыводитьВОдинТабличныйДокумент", стрПФ.Количество, стрПФ.НаПринтер, ШаблонПечатныхФорм.ВыводитьВОдинТабличныйДокумент)); 
		КонецЦикла; 
		
		мсДоставки = обМаршрутРейса.ПолучитьДоставкиВПорядкеВыполнения(Рейс);
		
		Для Каждого Доставка Из мсДоставки Цикл
			// Получаем печатные формы 
			Контрагент = Неопределено;
			Если ТипЗнч(Доставка.Грузоотправитель) = Тип("СправочникСсылка.новаКонтрагенты") Тогда
				Контрагент = Доставка.Грузоотправитель;
				
			ИначеЕсли ТипЗнч(Доставка.Грузополучатель) = Тип("СправочникСсылка.новаКонтрагенты") Тогда
				Контрагент = Доставка.Грузополучатель;
				
			КонецЕсли; 
			
			новаИнтеграция.ПолучитьДокументыДоставки(Доставка, ШаблонПечатныхФорм, ИтоговаяТаблица);	
			новаИнтеграция.ПроверитьНаличиеНеобходимыхДокументов(Доставка);			
		КонецЦикла;		
	КонецЦикла;
	
	// распечатываем документы
	ТаблицаПечати.Свернуть("Шаблон, Документ, ПечатнаяФорма, Количество, НаПринтер");
	ИтоговаяТаблица.Свернуть("Шаблон, Объект");
	Для Каждого СтрокаОбъект Из ИтоговаяТаблица Цикл
	
		ТекущийДокумент = СтрокаОбъект.Объект;
		Строки = ТаблицаПечати.НайтиСтроки(новый Структура("Шаблон, Документ, ", СтрокаОбъект.Шаблон, ТекущийДокумент.Метаданные().Имя));
		Для Каждого Строка Из Строки Цикл
			Параметр = Новый Структура("Количество, НаПринтер, ВыводитьВОдинТабличныйДокумент", Строка.Количество, Строка.НаПринтер, ШаблонПечатныхФорм.ВыводитьВОдинТабличныйДокумент);
			новаПечатныеФормы.Печать(ТекущийДокумент.ПолучитьОбъект(), Строка.ПечатнаяФорма, Параметр);
		КонецЦикла; 
	КонецЦикла; 
КонецПроцедуры 
#КонецЕсли
