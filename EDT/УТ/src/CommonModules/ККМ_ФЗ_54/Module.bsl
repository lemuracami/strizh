Функция ПечатьЧека(СерверККТ, КассаККМ, ТаблицаТоваров, ПараметрыЧека, ДополнительныеПараметрыЧека,ЭтоВозврат = Ложь, ТипКассовогоЧека, НомерУстройства = Неопределено) Экспорт
	
//+++ БАО 05.10.2017 №1918
	
	Попытка
		
		Струк = Новый Структура;
//--- БАО 05.10.2017 №1918
		
		Если НомерУстройства <> Неопределено Тогда
			СерверККТ.CurrentDeviceNumber = НомерУстройства;
			Если СерверККТ.ResultCode = -9 Тогда
				//+++ БАО 05.10.2017 №1918
				//---Возврат Ложь;
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", -9);
				Струк.Вставить("ТекстОшибки", "Установка номера устройства, проблема");
				Возврат Струк;
				//--- БАО 05.10.2017 №1918
			КонецЕсли;	
		КонецеСли;
		
		
		
		// если есть открытый чек, то отменяем его
		Если СерверККТ.CheckState <> 0 тогда
//+++ БАО 05.10.2017 №1918
			//---Если СерверККТ.CancelCheck() <> 0 тогда
			//---	Возврат Ложь;
			РезОтменыЧека = СерверККТ.CancelCheck();
			Если РезОтменыЧека <> 0 Тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", РезОтменыЧека);
				Струк.Вставить("ТекстОшибки", "Отмена чека, проблема");
				Возврат Струк;
//--- БАО 05.10.2017 №1918	
			КонецЕсли;
		КонецЕсли;
		
		
		// входим в режим регистрации
		// устанавливаем пароль кассира
		СерверККТ.Password = "1";
		// входим в режим регистрации
		СерверККТ.Mode = 1;
//+++ БАО 05.10.2017 №1918
		//---Если СерверККТ.SetMode() <> 0 тогда
		//---	Возврат Ложь;
		Рез = СерверККТ.SetMode();
		Если Рез <> 0 тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Установка режима чека, проблема");
			Возврат Струк;
//--- БАО 05.10.2017 №1918	
		КонецЕсли;
		
		СостояниеСмены = Ложь;
		СменаОткрыта(СерверККТ, СостояниеСмены);
		Если Не СостояниеСмены Тогда
			//Рез = СерверККТ.OpenSession();
			//ЗарегистрироватьОткрытиеСменыККМ(КассаККМ);
			Если КассаККМ.ККМИнтегрированаВСерверККМ Тогда
				Ответ = РаботаСКассовымСерверомСервер.ОткрытьСменуНаСервереККМ(КассаККМ);
			Иначе
				Рез = СерверККТ.OpenSession();
				//+++ БАО 05.10.2017 №1918
				Если Рез <> 0 Тогда
					Струк.Вставить("Результат", Ложь);
					Струк.Вставить("КодОшибки", Рез);
					Струк.Вставить("ТекстОшибки", "Открытие кассовой смены, проблема");
					Возврат Струк;
				КонецЕсли;				
				//--- БАО 05.10.2017 №1918
				РаботаСКассовымСерверомСервер.ЗарегистрироватьОткрытиеСменыККМ(КассаККМ, "");
			КонецеСли;	
		КонецеСли;	
		
		
		
		//Если КассаККМ.НеВыводитьДанныеНаПечать Тогда
		//	СерверККТ.CheckMode = 0;
		//Иначе
		//	СерверККТ.CheckMode = 1;
		//КонецеСли;
		//СерверККТ.CheckType = 1;
		СерверККТ.CheckType = РаботаСКассовымСерверомСервер.ПолучитьИдентификаторТипаКассовогоЧекаДляККМ(ТипКассовогоЧека);
		
//+++ БАО 05.10.2017 №1918
		//---Рез = СерверККТ.OpenCheck();
		Рез = СерверККТ.OpenCheck();
		Если Рез <> 0 тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Открытие чека, проблема");
			Возврат Струк;
		КонецЕсли;
//--- БАО 05.10.2017 №1918
		
		///атрибуты информирования
		//СерверККТ.AttrNumber=1055;
		//СерверККТ.AttrValue=1; // передача почты или абонентского номера
		//If СерверККТ.WriteAttribute()<>0 then Возврат Ложь; КонецеСли;	
		
		
//+++ БАО 14.09.2017 №1770 
		Если СерверККТ.CheckType = 7 Или СерверККТ.CheckType = 9 Тогда 
			
			СерверККТ.AttrNumber = 1021;
			СерверККТ.AttrValue = ДополнительныеПараметрыЧека.Кассир; // кассир
			
			//+++ БАО 05.10.2017 №1918
			//---If СерверККТ.WriteAttribute()<>0 then Возврат Ложь; КонецеСли;	
			Рез = СерверККТ.WriteAttribute();
			Если Рез <> 0 Тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", Рез);
				Струк.Вставить("ТекстОшибки", "Установка кассир, проблема");
				Возврат Струк;
			КонецЕсли;		
			
			Если КассаККМ.ВерсияФФД = Перечисления.ВерсииФФД.Версия_1_0_5 Тогда
				// Тип коррекции
				СерверККТ.AttrNumber = 1173;
				СерверККТ.AttrValue = ДополнительныеПараметрыЧека.ТипКоррекции; // Самостоятельно, 0
				СерверККТ.WriteAttribute();
				
				// Основание для коррекции
				СерверККТ.AttrNumber = 1174;
				СерверККТ.BeginComplexAttribute();
				СерверККТ.AttrNumber = 1177;
				СерверККТ.AttrValue = ДополнительныеПараметрыЧека.ОснованиеКоррекции; // Наименование документа основания для коррекции
				СерверККТ.WriteAttribute();
				СерверККТ.AttrNumber = 1178;
				СерверККТ.AttrValue = lem.unixtime(ДополнительныеПараметрыЧека.ДатаДокументаОснования); // (01.05.2017) Дата документа основания для коррекции 
				СерверККТ.WriteAttribute();
				СерверККТ.AttrNumber = 1179;
				СерверККТ.AttrValue = ДополнительныеПараметрыЧека.НомерДокументаОснования; // Номер документа основания для коррекции
				СерверККТ.WriteAttribute();
				СерверККТ.EndComplexAttribute();	
			КонецеСли;
			
			
			
			Если ДополнительныеПараметрыЧека.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств Тогда
				СерверККТ.Name = "Коррекция прихода";
			Иначе 	
				СерверККТ.Name = "Коррекция расхода";
			КонецЕсли;
			
			
			СерверККТ.Price = ДополнительныеПараметрыЧека.СуммаДокумента;
			
			СерверККТ.Quantity = 1;
			
			СерверККТ.Department = 0;
			
			//НДС
			//Если Не ДополнительныеПараметрыЧека.ОрганизацияНеЯвляетсяПлательщикомНДС Тогда
			//	
			//	СерверККТ.TaxTypeNumber = ДополнительныеПараметрыЧека.СтавкаНДС;
			//	
			//КонецЕсли;
			
			
			НомерСтавкиНДС = НомерСтавкиНДСВДрайвере(КассаККМ, ДополнительныеПараметрыЧека.СтавкаНДС);
			СерверККТ.TaxTypeNumber = НомерСтавкиНДС;
			
			//+++ БАО 05.10.2017 №1918
			СерверККТ.Registration(); //---
			Если Рез <> 0 тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", Рез);
				Струк.Вставить("ТекстОшибки", "Регистрация корректировки чека , проблема");
				Возврат Струк;
			КонецЕсли;

			//--- БАО 05.10.2017 №1918
			
			// Оплата и закрытие чека
			
			// TypeClose - Тип оплаты:
			
			//           0 - Наличными
			
			//           1 - Электронными средствами платежа
			
			Если ДополнительныеПараметрыЧека.ТипОплаты = Справочники.ТипыОплат.Наличные Тогда
				СерверККТ.TypeClose = 0;
			ИначеЕсли ДополнительныеПараметрыЧека.ТипОплаты = Справочники.ТипыОплат.Терминал Тогда
				СерверККТ.TypeClose = 1;
			КонецЕсли;	
			
			СерверККТ.Summ = ДополнительныеПараметрыЧека.СуммаДокумента;
			//lem 24.05.2018
			
						// даем аттрибуты для передачи электронного чека
			//СерверККТ.AttrNumber = 1008;
			//СерверККТ.AttrValue = ДополнительныеПараметрыЧека.АдресИнформирования; // передача почты или абонентского номера
			//Рез = СерверККТ.WriteAttribute();
			//Если Рез <> 0 Тогда
			//	Струк.Вставить("Результат", Ложь);
			//	Струк.Вставить("КодОшибки", Рез);
			//	Струк.Вставить("ТекстОшибки", "Установка email, проблема");
			//	Возврат Струк;
			//КонецЕсли;	
			//end lem 24.05.2018

		Иначе 		
//--- БАО 14.09.2017 №1770
			
			// даем аттрибуты для передачи электронного чека
			СерверККТ.AttrNumber = 1008;
			СерверККТ.AttrValue = ДополнительныеПараметрыЧека.АдресИнформирования; // передача почты или абонентского номера
//+++ БАО 05.10.2017 №1918
			//---If СерверККТ.WriteAttribute()<>0 then Возврат Ложь; КонецеСли;	
			Рез = СерверККТ.WriteAttribute();
			Если Рез <> 0 Тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", Рез);
				Струк.Вставить("ТекстОшибки", "Установка email, проблема");
				Возврат Струк;
			КонецЕсли;	
			
//--- БАО 05.10.2017 №1918
			///атрибуты информирования
			
			СерверККТ.AttrNumber = 1021;
			СерверККТ.AttrValue = ДополнительныеПараметрыЧека.Кассир; // кассир
			
//+++ БАО 05.10.2017 №1918
			//---If СерверККТ.WriteAttribute()<>0 then Возврат Ложь; КонецеСли;	
			Рез = СерверККТ.WriteAttribute();
			Если Рез <> 0 Тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", Рез);
				Струк.Вставить("ТекстОшибки", "Установка кассир, проблема");
				Возврат Струк;
			КонецЕсли;			
			//--- БАО 05.10.2017 №1918

			
			Для каждого Тек Из ТаблицаТоваров Цикл
				Если Тек.Количество <= 0 Тогда
					Продолжить;
				КонецЕСли;	
				СерверККТ.Name = Тек.Наименование;
				СерверККТ.Price = Тек.Цена;
				СерверККТ.Quantity = Тек.Количество;
				СерверККТ.Department = Тек.НомерСекции;
				СерверККТ.TaxTypeNumber = Тек.СтавкаНДСФЗ54;
				Если Не ЭтоВозврат Тогда
//+++ БАО 05.10.2017 №1918
					//---Если СерверККТ.Registration() <> 0 тогда
					//---	Возврат Ложь;
					//---КонецЕсли;
					Рез = СерверККТ.Registration();
					Если Рез <> 0 тогда
						Струк.Вставить("Результат", Ложь);
						Струк.Вставить("КодОшибки", Рез);
						Струк.Вставить("ТекстОшибки", "Регистрация товара, проблема");
						Возврат Струк;
					КонецЕсли;
//--- БАО 05.10.2017 №1918
				Иначе
					Если СерверККТ.Return() <> 0 тогда
						Возврат Ложь;
					КонецЕсли;
				КонецеСли;
			КонецЦикла;
			
			СерверККТ.TypeClose = ДополнительныеПараметрыЧека.КодТипаОплатыНаККМ;
			
//+++ БАО 14.09.2017 №1770 
		КонецЕсли;
//--- БАО 14.09.2017 №1770
		
		
		
		Рез = СерверККТ.CloseCheck();
		
		Если Рез <> 0 тогда
//+++ БАО 05.10.2017 №1918
			//---Возврат Ложь;
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Закрытие чека, проблема");
			Возврат Струк;
//--- БАО 05.10.2017 №1918
		КонецЕсли;
		
		
		Результат = ПолучитьТекущиеПараметрыККМ(СерверККТ, ПараметрыЧека);
		
		Если Не Результат Тогда
//+++ БАО 05.10.2017 №1918
			//---Возврат Ложь;
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", 1);
			Струк.Вставить("ТекстОшибки", "Получение параметров пробитого чека, проблема");
			Возврат Струк;
			
//--- БАО 05.10.2017 №1918
		КонецеСли;	
//+++ БАО 05.10.2017 №1918
		//---Возврат Истина;
	Исключение
		
		Струк.Вставить("Результат", Ложь);
		Струк.Вставить("КодОшибки", 111);
		Струк.Вставить("ТекстОшибки", "ОБЩАЯ ПРОБЛЕМА!! (" + ОписаниеОшибки() + ")");
		Возврат Струк;
		
	КонецПопытки;
	
	Струк.Вставить("Результат", Истина);
	Струк.Вставить("КодОшибки", 0);
	Струк.Вставить("ТекстОшибки", "all good");
	Возврат Струк;
//--- БАО 05.10.2017 №1918
	
КонецФункции	



Функция ПечатьЧекаФФД_1_05(СерверККТ, КассаККМ, ТаблицаТоваров, ПараметрыЧека, ДополнительныеПараметрыЧека,ЭтоВозврат = Ложь, ТипКассовогоЧека, НомерУстройства = Неопределено) Экспорт
	
	
	Попытка
		
		Струк = Новый Структура;
		
		Если НомерУстройства <> Неопределено Тогда
			СерверККТ.CurrentDeviceNumber = НомерУстройства;
			Если СерверККТ.ResultCode = -9 Тогда
				//+++ БАО 05.10.2017 №1918
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", -9);
				Струк.Вставить("ТекстОшибки", "Установка номера устройства, проблема");
				Возврат Струк;
				//--- БАО 05.10.2017 №1918
			КонецЕсли;	
		КонецеСли;
		
		// если есть открытый чек, то отменяем его
		Если СерверККТ.CheckState <> 0 тогда
			//---Если СерверККТ.CancelCheck() <> 0 тогда
			//---	Возврат Ложь;
			РезОтменыЧека = СерверККТ.CancelCheck();
			Если РезОтменыЧека <> 0 Тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", РезОтменыЧека);
				Струк.Вставить("ТекстОшибки", "Отмена чека, проблема");
				Возврат Струк;
			КонецЕсли;
		КонецЕсли;
		
		
		// входим в режим регистрации
		// устанавливаем пароль кассира
		СерверККТ.Password = "1";
		// входим в режим регистрации
		СерверККТ.Mode = 1;
		//---Если СерверККТ.SetMode() <> 0 тогда
		//---	Возврат Ложь;
		Рез = СерверККТ.SetMode();
		Если Рез <> 0 тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Установка режима чека, проблема");
			Возврат Струк;
		КонецЕсли;
		
		СостояниеСмены = Ложь;
		СменаОткрыта(СерверККТ, СостояниеСмены);
		Если Не СостояниеСмены Тогда
			Если КассаККМ.ККМИнтегрированаВСерверККМ Тогда
				Ответ = РаботаСКассовымСерверомСервер.ОткрытьСменуНаСервереККМ(КассаККМ);
			Иначе
				Рез = СерверККТ.OpenSession();
				Если Рез <> 0 Тогда
					Струк.Вставить("Результат", Ложь);
					Струк.Вставить("КодОшибки", Рез);
					Струк.Вставить("ТекстОшибки", "Открытие кассовой смены, проблема");
					Возврат Струк;
				КонецЕсли;				
				РаботаСКассовымСерверомСервер.ЗарегистрироватьОткрытиеСменыККМ(КассаККМ, "");
			КонецеСли;	
		КонецеСли;	
		
		
		
		СерверККТ.CheckType = РаботаСКассовымСерверомСервер.ПолучитьИдентификаторТипаКассовогоЧекаДляККМ(ТипКассовогоЧека);
		
		Рез = СерверККТ.OpenCheck();
		Если Рез <> 0 тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Открытие чека, проблема");
			Возврат Струк;
		КонецЕсли;
		
		///атрибуты информирования
		//СерверККТ.AttrNumber=1055;
		//СерверККТ.AttrValue=1; // передача почты или абонентского номера
		//If СерверККТ.WriteAttribute()<>0 then Возврат Ложь; КонецеСли;	
		
		
		Если СерверККТ.CheckType = 7 Или СерверККТ.CheckType = 9 Тогда 
			
			СерверККТ.AttrNumber = 1021;
			СерверККТ.AttrValue = ДополнительныеПараметрыЧека.Кассир; // кассир
			
			Рез = СерверККТ.WriteAttribute();
			Если Рез <> 0 Тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", Рез);
				Струк.Вставить("ТекстОшибки", "Установка кассир, проблема");
				Возврат Струк;
			КонецЕсли;		
			
			Если КассаККМ.ВерсияФФД = Перечисления.ВерсииФФД.Версия_1_0_5 Тогда
				// Тип коррекции
				СерверККТ.AttrNumber = 1173;
				СерверККТ.AttrValue = ДополнительныеПараметрыЧека.ТипКоррекции; // Самостоятельно, 0
				СерверККТ.WriteAttribute();
				
				// Основание для коррекции
				СерверККТ.AttrNumber = 1174;
				СерверККТ.BeginComplexAttribute();
				СерверККТ.AttrNumber = 1177;
				СерверККТ.AttrValue = ДополнительныеПараметрыЧека.ОснованиеКоррекции; // Наименование документа основания для коррекции
				СерверККТ.WriteAttribute();
				СерверККТ.AttrNumber = 1178;
				СерверККТ.AttrValue = lem.unixtime(ДополнительныеПараметрыЧека.ДатаДокументаОснования); // (01.05.2017) Дата документа основания для коррекции 
				СерверККТ.WriteAttribute();
				СерверККТ.AttrNumber = 1179;
				СерверККТ.AttrValue = ДополнительныеПараметрыЧека.НомерДокументаОснования; // Номер документа основания для коррекции
				СерверККТ.WriteAttribute();
				СерверККТ.EndComplexAttribute();	
			КонецеСли;
			
			
			
			Если ДополнительныеПараметрыЧека.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств Тогда
				СерверККТ.Name = "Коррекция прихода";
			Иначе 	
				СерверККТ.Name = "Коррекция расхода";
			КонецЕсли;
			
			
			СерверККТ.Price = ДополнительныеПараметрыЧека.СуммаДокумента;
			
			СерверККТ.Quantity = 1;
			
			СерверККТ.Department = 0;
			
			
			
			НомерСтавкиНДС = НомерСтавкиНДСВДрайвере(КассаККМ, ДополнительныеПараметрыЧека.СтавкаНДС);
			СерверККТ.TaxTypeNumber = НомерСтавкиНДС;
			
			СерверККТ.Registration(); //---
			Если Рез <> 0 тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", Рез);
				Струк.Вставить("ТекстОшибки", "Регистрация корректировки чека , проблема");
				Возврат Струк;
			КонецЕсли;
			
			// Оплата и закрытие чека
			
			// TypeClose - Тип оплаты:
			
			//           0 - Наличными
			
			//           1 - Электронными средствами платежа
			
			Если ДополнительныеПараметрыЧека.ТипОплаты = Справочники.ТипыОплат.Наличные Тогда
				СерверККТ.TypeClose = 0;
			ИначеЕсли ДополнительныеПараметрыЧека.ТипОплаты = Справочники.ТипыОплат.Терминал Тогда
				СерверККТ.TypeClose = 1;
			КонецЕсли;	
			
			СерверККТ.Summ = ДополнительныеПараметрыЧека.СуммаДокумента;
			
		Иначе 		
			
			// даем аттрибуты для передачи электронного чека
			СерверККТ.AttrNumber = 1008;
			СерверККТ.AttrValue = ДополнительныеПараметрыЧека.АдресИнформирования; // передача почты или абонентского номера
			Рез = СерверККТ.WriteAttribute();
			Если Рез <> 0 Тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", Рез);
				Струк.Вставить("ТекстОшибки", "Установка email, проблема");
				Возврат Струк;
			КонецЕсли;	
			
			///атрибуты информирования
			
			// Якурнов: 1084 Дополнительный реквизит пользователя
			// >>>>>>>> Начало 06.11.2018 14:20:50 >>>>>>>>
			Если ДополнительныеПараметрыЧека.Свойство("НомерВнешнегоЗаказа") Тогда
				СерверККТ.AttrNumber = 1084;
				СерверККТ.AttrName = "Номер заказа Интернет-магазина"; 
				СерверККТ.AttrValue = ДополнительныеПараметрыЧека.НомерВнешнегоЗаказа;
				СерверККТ.AttrPrint = 0;
				СерверККТ.WriteAttribute();
				СерверККТ.AttrNumber = 1085;
				СерверККТ.AttrValue = "Номер заказа Интернет-магазина";
				СерверККТ.WriteAttribute();
				СерверККТ.AttrNumber = 1086;
				СерверККТ.AttrValue = ДополнительныеПараметрыЧека.НомерВнешнегоЗаказа;
                СерверККТ.WriteAttribute();
			КонецЕсли;
			// <<<<<<<< Конец 06.11.2018 14:20:50 <<<<<<<<
			
			
			СерверККТ.AttrNumber = 1021;
			СерверККТ.AttrValue = ДополнительныеПараметрыЧека.Кассир; // кассир
			
			Рез = СерверККТ.WriteAttribute();
			Если Рез <> 0 Тогда
				Струк.Вставить("Результат", Ложь);
				Струк.Вставить("КодОшибки", Рез);
				Струк.Вставить("ТекстОшибки", "Установка кассир, проблема");
				Возврат Струк;
			КонецЕсли;			
			
			
			Для каждого Тек Из ТаблицаТоваров Цикл
				Если Тек.Количество <= 0 Тогда
					Продолжить;
				КонецЕСли;	
				СерверККТ.BeginItem();
				
				//
				Если ДополнительныеПараметрыЧека.ВыводитьДанныеКонтрагента Тогда
					СерверККТ.AttrNumber=1222;
					СерверККТ.AttrValue= 6; //Признак АГЕНТ
					СерверККТ.WriteAttribute();				
				КонецеСли;	
				
				//
				
				СерверККТ.Name = Тек.Наименование;
 				СерверККТ.Price = Тек.Цена;
				СерверККТ.Quantity = Тек.Количество;
				СерверККТ.Summ = Окр(Тек.Количество*Тек.Цена, 2);
				СерверККТ.Department = Тек.НомерСекции;
				Если Не ДополнительныеПараметрыЧека.ВыводитьДанныеКонтрагента Тогда
					СерверККТ.TaxTypeNumber = Тек.СтавкаНДСФЗ54;
				КонецеСли;	
				//Если ДополнительныеПараметрыЧека.ТипОплаты = Справочники.ТипыОплат.ОплаченоВМагазине Тогда
				//	СерверККТ.PaymentMode = 1;
				//иначе
					СерверККТ.PaymentMode = 4;
				//КонецеСли;	
				
				
				//
				Если ДополнительныеПараметрыЧека.ВыводитьДанныеКонтрагента Тогда
					СерверККТ.AttrNumber=1226;
					СерверККТ.AttrValue= ДополнительныеПараметрыЧека.ИННКонтрагента; //ИНН Организации по агентскому договору.
					СерверККТ.WriteAttribute();
					СерверККТ.AttrNumber=1224;
					//ECR.WriteAttribute(); 
					СерверККТ.BeginComplexAttribute();
					СерверККТ.AttrNumber=1171; 
					СерверККТ.AttrValue = ДополнительныеПараметрыЧека.ТелефонКонтрагента; //Номер телефона Организации по агентскому договору 
					СерверККТ.WriteAttribute(); 
					СерверККТ.AttrNumber=1225; 
					СерверККТ.AttrValue = ДополнительныеПараметрыЧека.НаименованиеКонтрагента; //Наименование Организации по агентскому договору 
					СерверККТ.WriteAttribute();
					СерверККТ.EndComplexAttribute(); 
				КонецеСли;
				///
				
				Рез = СерверККТ.EndItem();
				Если Рез <> 0 тогда
					Струк.Вставить("Результат", Ложь);
					Струк.Вставить("КодОшибки", Рез);
					Струк.Вставить("ТекстОшибки", "запись товара ФФД 1.05, проблема");
					Возврат Струк;
				КонецЕсли;
				
				//СерверККТ.AttrNumber = 1215;
				//Рез = СерверККТ.ReadAttribute();
			КонецЦикла;
			
			Если ДополнительныеПараметрыЧека.ТипОплаты = Справочники.ТипыОплат.ОплаченоВМагазине Тогда
				СерверККТ.TypeClose = 2;
			Иначе	
				СерверККТ.TypeClose = ДополнительныеПараметрыЧека.КодТипаОплатыНаККМ;
			КонецеСли;	
			
		КонецЕсли;
		
				//СерверККТ.AttrNumber = 1215;
				//Рез = СерверККТ.ReadAttribute();
		
		Рез = СерверККТ.CloseCheck();
				//СерверККТ.AttrNumber = 1215;
				//Рез = СерверККТ.ReadAttribute();
		Если Рез <> 0 тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", Рез);
			Струк.Вставить("ТекстОшибки", "Закрытие чека, проблема");
			Возврат Струк;
		КонецЕсли;
		
		
		Результат = ПолучитьТекущиеПараметрыККМ(СерверККТ, ПараметрыЧека);
		
		Если Не Результат Тогда
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("КодОшибки", 1);
			Струк.Вставить("ТекстОшибки", "Получение параметров пробитого чека, проблема");
			Возврат Струк;
			
		КонецеСли;	
	Исключение
		
		Струк.Вставить("Результат", Ложь);
		Струк.Вставить("КодОшибки", 111);
		Струк.Вставить("ТекстОшибки", "ОБЩАЯ ПРОБЛЕМА!! (" + ОписаниеОшибки() + ")");
		Возврат Струк;
		
	КонецПопытки;
	
	Струк.Вставить("Результат", Истина);
	Струк.Вставить("КодОшибки", 0);
	Струк.Вставить("ТекстОшибки", "all good");
	Возврат Струк;
	
КонецФункции	



Функция ПодключитьсяКККМ(ККМ) Экспорт
	СерверККТ = Новый COMОбъект("AddIn.FprnM45");
	СерверККТ.CurrentDeviceNumber = ККМ.НомерККТВДрайвереАтол;	
	СерверККТ.HostAddress = ККМ.АдресККМ;
	СерверККТ.PortNumber = 99;
	СерверККТ.DeviceEnabled = 1;
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Если СерверККТ.GetStatus() <> 0 тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	Возврат СерверККТ;
КонецФункции	

Функция ОтключитьсяОтККМ(СерверККТ, ККМ) Экспорт
	СерверККТ.CurrentDeviceNumber = ККМ.НомерККТВДрайвереАтол;	
	СерверККТ.DeviceEnabled = 0;
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	Возврат Истина;
КонецФункции

Функция ПолучитьТекущиеПараметрыККМ(СерверККТ, СтруктураДанных) Экспорт
	
	СтруктураДанных = Новый Структура;
	
	
	//номер чека
	СерверККТ.RegisterNumber = 19;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	НомерЧека = СерверККТ.CheckNumber - 1;
	НомерДокумента = СерверККТ.DocNumber - 1;
	
	СтруктураДанных.Вставить("НомерЧека", НомерЧека);
	СтруктураДанных.Вставить("НомерДокумента", НомерДокумента);
	
	//номер смены
	СерверККТ.RegisterNumber = 21;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	НомерСмены = СерверККТ.Session + 1;
	СтруктураДанных.Вставить("НомерСмены", НомерСмены);
	
	//параметры ф. документа
	СерверККТ.RegisterNumber = 51;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	СуммаЧека = Число(СерверККТ.Summ);
	
	СтруктураДанных.Вставить("СуммаЧека", СуммаЧека);
	
	
	
	//параметры ф. документа
	СерверККТ.RegisterNumber = 52;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	ФПД = СерверККТ.FiscalSign;
	ФД = Формат(СерверККТ.DocNumber, "ЧГ=");
	ДатаЧека = Дата(СерверККТ.Year, СерверККТ.Month, СерверККТ.Day, СерверККТ.Hour, СерверККТ.Minute, 0);
	ТипЧека = Число(СерверККТ.LastCheckType);
	
	СтруктураДанных.Вставить("ФПД", ФПД);
	СтруктураДанных.Вставить("ФД", ФД);
	СтруктураДанных.Вставить("ДатаЧека", ДатаЧека);
	СтруктураДанных.Вставить("ТипЧека", ТипЧека);
	
	//параметры ККТ
	//СерверККТ.RegisterNumber = 22;
	//СерверККТ.GetRegister();
	//Если СерверККТ.ResultCode <> 0 тогда
	//	Возврат Ложь;
	//КонецЕсли;	
	//РН_ККТ = СерверККТ.SerialNumber;
	//
	//СтруктураДанных.Вставить("РН_ККТ", РН_ККТ);
	
	//параметры ФП
	СерверККТ.RegisterNumber = 47;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	ФН = СерверККТ.SerialNumber;
	
	СтруктураДанных.Вставить("ФН", ФН);
	
	Возврат Истина;
КонецФункции	


Функция СменаОткрыта(СерверККТ, СменаОткрыта) Экспорт
	
	СерверККТ.RegisterNumber = 18;
	СерверККТ.GetRegister();
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	
	СменаОткрыта = СерверККТ.SessionOpened;
	Возврат Истина;
КонецФункции	


Функция СнятьXОтчет(СерверККТ) Экспорт
	
	СерверККТ.Mode = 2; 
	// Режим отчетов без гашения Драйвер.Password = 30; 
	СерверККТ.SetMode();	
	
	СерверККТ.ReportType = 2;
	Если СерверККТ.Report() <> 0 тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции	

Функция СнятьZОтчет(СерверККТ) Экспорт
	
	СерверККТ.Mode = 3; 
	// Режим отчетов без гашения Драйвер.Password = 30; 
	Рез = СерверККТ.SetMode();	
	
	
	СерверККТ.ReportType = 1;
	Если СерверККТ.Report() <> 0 тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

Функция ПолучитьФН(НомерФН) Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	|	ФискальныеНакопители.Ссылка КАК ФН
	|ИЗ
	|	Справочник.ФискальныеНакопители КАК ФискальныеНакопители
	|ГДЕ
	|	ФискальныеНакопители.КодФН = &КодФН";
	Зап.УстановитьПараметр("КодФН", НомерФН);
	
	Выб = Зап.Выполнить().Выбрать();
	Если Выб.Следующий() Тогда
		Возврат Выб.ФН;
	КонецеСли;
	
	Нов = Справочники.ФискальныеНакопители.СоздатьЭлемент();
	Нов.Наименование = НомерФН;
	Нов.КодФН = НомерФН;
	Нов.Записать();
	
	Возврат Нов.Ссылка;
КонецФункции	

Функция ПодключитьсяКУстройствуККМ(СерверККТ, ККМ, НомерУстройства) Экспорт
	СерверККТ.CurrentDeviceNumber = НомерУстройства;
	
	Если СерверККТ.ResultCode = -9 Тогда
		Возврат Ложь;
	КонецеСли;	
	
	СерверККТ.HostAddress = ККМ.АдресККМ;
	СерверККТ.PortNumber = 99;
	СерверККТ.DeviceEnabled = 1;
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	
	Если СерверККТ.GetStatus() <> 0 тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции	


Функция ИнициализироватьСерверККТ() Экспорт
	Попытка
		СерверККТ = Новый COMОбъект("AddIn.FPrnM8");
	Исключение
		Ош = ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;	
	Возврат СерверККТ;
КонецФункции	

Функция ОтключитьсяОтУстройстваККМ(СерверККТ, НомерУстройства) Экспорт
	СерверККТ.CurrentDeviceNumber = НомерУстройства;	
	СерверККТ.DeviceEnabled = 0;
	Если СерверККТ.ResultCode <> 0 тогда
		Возврат Ложь;
	КонецЕсли;	
	Возврат Истина;
КонецФункции

Функция ОтменитьЧек(СерверККТ) Экспорт
	
	// если есть открытый чек, то отменяем его
	Если СерверККТ.CheckState <> 0 тогда
		Если СерверККТ.CancelCheck() <> 0 тогда
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;
	
	Возврат Истина;
КонецФункции


Процедура ДобавитьУстройствоATOL(СерверККТ, КассаККМ) Экспорт
	СерверККТ.AddDevice();
	СерверККТ.HostAddress = КассаККМ.АдресККМ;
	СерверККТ.PortNumber = 99;
	СерверККТ.DeviceEnabled = 1;
	СерверККТ.Model = 69;
	СерверККТ.UseAccessPassword = Истина;
	СерверККТ.DefaultPassword = "30";
КонецПроцедуры	

Функция СнятьОтчетККМ(СерверККТ, КассаККМ, ТипОтчета) Экспорт
	СерверККТ.Mode = 2; 
	СерверККТ.SetMode();	
	
	Если ТипОтчета = Перечисления.ТипыОтчетовККМ.XОтчет Тогда
		СерверККТ.ReportType = 2;
	ИначеЕсли ТипОтчета = Перечисления.ТипыОтчетовККМ.ОтчетОТекущемСостоянииРасчетов Тогда	
		СерверККТ.ReportType = 42;
	КонецЕсли;
	
	ЕстьОшибка = Ложь;
	
	Если СерверККТ.Report() <> 0 тогда		
		ЕстьОшибка = Истина;
	КонецЕсли;
	
	РаботаСКассовымСерверомСервер.ЗафиксироватьСнятиеОтчетаВРС(КассаККМ, ТипОтчета, ПараметрыСеанса.ТекущийПользователь, ЕстьОшибка);
	
	Возврат Не ЕстьОшибка;
КонецФункции	

//+++ БАО 05.10.2017 №1918
Процедура ЗаписьЛогаОшибкиККМ(КодОшибки, Описание, ПроизводительККМ, ЧекККМ) Экспорт
	
	ПроизводительККМссылка = ПроизводительККМ;	
	
	Если ТипЗнч(ПроизводительККМссылка) = Тип("СправочникСсылка.КассыККМ") Тогда
		ПроизводительККМссылка = ПроизводительККМ.ПроизводительККМ;
	КонецЕсли;	
	
	Элем = неопределено;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	КодыОшибокККМ.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КодыОшибокККМ КАК КодыОшибокККМ
	|ГДЕ
	|	КодыОшибокККМ.Владелец = &Владелец
	|	И КодыОшибокККМ.КодОшибкиККМ = &КодОшибкиККМ");
	Запрос.УстановитьПараметр("Владелец", ПроизводительККМссылка);
	Запрос.УстановитьПараметр("КодОшибкиККМ", КодОшибки);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
		Элем = Рез.Ссылка;			
	КонецЕсли;
	
	ТекВр = ТекущаяДата();
	Набор = РегистрыСведений.ЛогПробитияЧеков.СоздатьНаборЗаписей();
	Набор.Отбор.ЧекККМ.Установить(ЧекККМ);
	Набор.Прочитать();
	НЗапись = Набор.Добавить();
	НЗапись.ЧекККМ = ЧекККМ;
	НЗапись.Период = ТекВр;
	НЗапись.КодОшибки = КодОшибки;
	НЗапись.ОписаниеОшибки = Описание;
	НЗапись.КассаККМ = ЧекККМ.КассаККМ;

	
	Если Элем <> Неопределено Тогда	
		НЗапись.ОшибкаККМ = Элем;		
	КонецЕсли;
	
	Набор.Записать();
	
КонецПроцедуры
//--- БАО 05.10.2017 №1918

Функция НомерСтавкиНДСВДрайвере(ККМ, СтавкаНДС)
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	СтавкиНДСФЗ54ИдентификаторыВДрайвере.НомерНалога КАК НомерНалога
	            |ИЗ
	            |	Справочник.КассыККМ КАК КассыККМ
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтавкиНДСФЗ54.ИдентификаторыВДрайвере КАК СтавкиНДСФЗ54ИдентификаторыВДрайвере
	            |		ПО КассыККМ.ВерсияФФД = СтавкиНДСФЗ54ИдентификаторыВДрайвере.ВерсияФФД
	            |ГДЕ
	            |	СтавкиНДСФЗ54ИдентификаторыВДрайвере.Ссылка.Ссылка = &СтавкаНДС
	            |	И КассыККМ.Ссылка = &ККМ";
	Зап.УстановитьПараметр("ККМ", ККМ);
	Зап.УстановитьПараметр("СтавкаНДС", СтавкаНДС);
	
	Выб = Зап.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда
		Возврат Выб.НомерНалога;
	Иначе
		Возврат 0;
	КонецЕсли;	
КонецФункции	