
Процедура РегламентЗагрузкаДанныхКонтрагентовИзБП() Экспорт
	
	//Асеев 12.08.2025 (Задача № 5357)>>>
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиУчетаОбщиеСрезПоследних.ГруппаКонтрагентовДляЗагрузкиИзБП КАК ГруппаКонтрагентов
	|ИЗ
	|	РегистрСведений.НастройкиУчетаОбщие.СрезПоследних КАК НастройкиУчетаОбщиеСрезПоследних
	|ГДЕ
	|	НастройкиУчетаОбщиеСрезПоследних.ГруппаКонтрагентовДляЗагрузкиИзБП <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсточникиДанныхБазы1С.Ссылка КАК БазаИсточник
	|ИЗ
	|	Справочник.ИсточникиДанныхБазы1С КАК ИсточникиДанныхБазы1С
	|ГДЕ
	|	НЕ ИсточникиДанныхБазы1С.ПометкаУдаления
	|	И ИсточникиДанныхБазы1С.ТипКонфигурации = ЗНАЧЕНИЕ(Перечисление.ТипыКонфигураций1С.Бухгалтерия_3_0)
	|	И ИсточникиДанныхБазы1С.ЗагружатьКонтрагентов";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Результат = РезультатПакета[0];
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	ГруппаКонтрагентов = Выборка.ГруппаКонтрагентов;
	
	Результат = РезультатПакета[1];
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	ТаблицаПриемник = Новый ТаблицаЗначений;
	КолонкиТаблицы = ТаблицаПриемник.Колонки;
	КолонкиТаблицы.Добавить("ИНН", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(12));
	КолонкиТаблицы.Добавить("КПП", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(9));
	КолонкиТаблицы.Добавить("Наименование", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(100));
	КолонкиТаблицы.Добавить("НаименованиеПолное", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(500));
	
	Запрос.УстановитьПараметр("ГруппаКонтрагентов", ГруппаКонтрагентов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПриемник.ИНН КАК ИНН,
	|	ТаблицаПриемник.КПП КАК КПП,
	|	ТаблицаПриемник.Наименование КАК Наименование,
	|	ТаблицаПриемник.НаименованиеПолное КАК НаименованиеПолное
	|ПОМЕСТИТЬ ВТ_Приемник
	|ИЗ
	|	&ТаблицаПриемник КАК ТаблицаПриемник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка,
	|	ВТ_Приемник.ИНН КАК ИНН,
	|	ВТ_Приемник.КПП КАК КПП,
	|	ВТ_Приемник.Наименование КАК Наименование,
	|	ВТ_Приемник.НаименованиеПолное КАК НаименованиеПолное
	|ИЗ
	|	ВТ_Приемник КАК ВТ_Приемник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ВТ_Приемник.ИНН = Контрагенты.ИНН
	|			И ВТ_Приемник.КПП = Контрагенты.КПП
	|			И (Контрагенты.Родитель = &ГруппаКонтрагентов)
	|ГДЕ
	|	(Контрагенты.Ссылка ЕСТЬ NULL
	|			ИЛИ ВТ_Приемник.Наименование <> Контрагенты.Наименование
	|			ИЛИ ВТ_Приемник.НаименованиеПолное <> (ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК СТРОКА(500))))";
	
	ТекстЗапросаБП =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Контрагенты.ИНН КАК ИНН,
	|	Контрагенты.КПП КАК КПП,
	|	Контрагенты.Наименование КАК Наименование,
	|	ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК СТРОКА(500)) НаименованиеПолное
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО (ПлатежноеПоручение.Дата >= &Период)
	|			И ПлатежноеПоручение.Контрагент = Контрагенты.Ссылка
	|			И (Контрагенты.ИНН <> """")
	|			И (Контрагенты.КПП <> """")";
	
	Сейчас = ТекущаяДата();
	Период = НачалоДня(ДобавитьМесяц(Сейчас, - 12));
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураCOM = ПлатежиКомитентамСервер.ПолучитьСоединениеСБазой(Выборка.БазаИсточник);
		
		Если СтруктураCOM = Неопределено Тогда
			Сообщить("Не удалось установить соединение для " + Выборка.БазаИсточник);
			Продолжить;
		КонецЕсли;
		
		Соединение = СтруктураCOM.Соединение;
		БазаБп = СтруктураCOM.БазаБух;
		
		ЗапросБп = БазаБп.NewObject("Запрос");
		ЗапросБп.УстановитьПараметр("Период", Период);
		ЗапросБп.Текст = ТекстЗапросаБП;
		ВыборкаБп = ЗапросБп.Выполнить().Выбрать();
		Пока ВыборкаБп.Следующий() Цикл
			СтрокаТаблицы = ТаблицаПриемник.Добавить();
			СтрокаТаблицы.ИНН = ВыборкаБп.ИНН;
			СтрокаТаблицы.КПП = ВыборкаБп.КПП;
			СтрокаТаблицы.Наименование = ВыборкаБп.Наименование;
			СтрокаТаблицы.НаименованиеПолное = ВыборкаБп.НаименованиеПолное;
		КонецЦикла;
		
		Если ТаблицаПриемник.Количество() Тогда
			Запрос.УстановитьПараметр("ТаблицаПриемник", ТаблицаПриемник);
			ВыборкаКонтрагенты = Запрос.Выполнить().Выбрать();
			Пока ВыборкаКонтрагенты.Следующий() Цикл
				Если ВыборкаКонтрагенты.Ссылка = Null Тогда
					Спр = Справочники.Контрагенты.СоздатьЭлемент();
					Спр.Родитель = ГруппаКонтрагентов;
					Спр.УстановитьНовыйКод("БП00");
					//Сообщить("Создание " + ВыборкаКонтрагенты.Наименование + " ИНН " + ВыборкаКонтрагенты.ИНН);
					//Прервать;
				Иначе
					Спр = ВыборкаКонтрагенты.Ссылка.ПолучитьОбъект();
					//Сообщить("Обновление " + ВыборкаКонтрагенты.Наименование + " ИНН " + ВыборкаКонтрагенты.ИНН);
					//Прервать;
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(Спр, ВыборкаКонтрагенты);
				Спр.Записать();
			КонецЦикла;
		
			ТаблицаПриемник.Очистить();
		КонецЕсли;
		
	КонецЦикла;
	
	//Асеев 12.08.2025 (Задача № 5357)<<<	
	
КонецПроцедуры	

Процедура ЗагрузкаДанныхОПлатежахИзБП() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	упрСостоянияПлатежейСрезПоследних.Платеж.ИсточникДанных КАК ИсточникДанных,
	|	упрСостоянияПлатежейСрезПоследних.Платеж КАК ПлатежноеПоручение,
	|	упрСостоянияПлатежейСрезПоследних.Платеж.ИдентификаторПП_БП КАК ИдентификаторПП_БП
	|ИЗ
	|	РегистрСведений.упрСостоянияПлатежей.СрезПоследних КАК упрСостоянияПлатежейСрезПоследних
	|ГДЕ
	|	упрСостоянияПлатежейСрезПоследних.СостояниеПлатежа = ЗНАЧЕНИЕ(Перечисление.упрСостоянияПлатежей.Подготовлено)
	|	И НЕ упрСостоянияПлатежейСрезПоследних.Платеж.ПометкаУдаления
	|ИТОГИ ПО
	|	ИсточникДанных";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Сейчас = ТекущаяДата();
	
	СостоянияПлатежа = Новый Соответствие;
	СостоянияПлатежа.Вставить(1, Перечисления.упрСостоянияПлатежей.Подготовлено);
	СостоянияПлатежа.Вставить(2, Перечисления.упрСостоянияПлатежей.Отправлено);
	СостоянияПлатежа.Вставить(3, Перечисления.упрСостоянияПлатежей.Оплачено);
	СостоянияПлатежа.Вставить(4, Перечисления.упрСостоянияПлатежей.Отклонено);
	СостоянияПлатежа.Вставить(9, Перечисления.упрСостоянияПлатежей.ПомеченоНаУдаление);
	
	ТекстЗапросаБП =
	"ВЫБРАТЬ
	|	ПлатежноеПоручение.Ссылка КАК ПлатежноеПоручение,
	|	ВЫБОР
	|		КОГДА ПлатежноеПоручение.ПометкаУдаления
	|			ТОГДА 9
	|		КОГДА ЕСТЬNULL(СостоянияБанковскихДокументов.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.Подготовлено)
	|			ТОГДА 1
	|		КОГДА ЕСТЬNULL(СостоянияБанковскихДокументов.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.Отправлено)
	|			ТОГДА 2
	|		КОГДА ЕСТЬNULL(СостоянияБанковскихДокументов.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.Оплачено)
	|			ТОГДА 3
	|		КОГДА ЕСТЬNULL(СостоянияБанковскихДокументов.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.Отклонено)
	|			ТОГДА 4
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Состояние,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СостоянияБанковскихДокументов.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.Оплачено)
	|			ТОГДА ЕСТЬNULL(СписаниеСРасчетногоСчета.Ссылка, ЗНАЧЕНИЕ(Документ.СписаниеСРасчетногоСчета.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СписаниеСРасчетногоСчета.ПустаяСсылка)
	|	КОНЕЦ КАК Выписка
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияБанковскихДокументов КАК СостоянияБанковскихДокументов
	|		ПО (ПлатежноеПоручение.Ссылка = СостоянияБанковскихДокументов.СсылкаНаОбъект)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ПО (ПлатежноеПоручение.Ссылка = СписаниеСРасчетногоСчета.ДокументОснование)
	|ГДЕ
	|	ПлатежноеПоручение.Ссылка В (&ПлатежноеПоручение)
	|	И (ЕСТЬNULL(СостоянияБанковскихДокументов.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.ПустаяСсылка)) В (ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.Подготовлено), ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.Отправлено), ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.Оплачено), ЗНАЧЕНИЕ(Перечисление.СостоянияБанковскихДокументов.Отклонено))
	|			ИЛИ ПлатежноеПоручение.ПометкаУдаления)";
	
	ВыборкаИсточник = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИсточник.Следующий() Цикл
		
		СтруктураCOM = ПлатежиКомитентамСервер.ПолучитьСоединениеСБазой(ВыборкаИсточник.ИсточникДанных);
		
		Если СтруктураCOM = Неопределено Тогда
			Сообщить("Не удалось установить соединение для " + ВыборкаИсточник.ИсточникДанных);
			Продолжить;
		КонецЕсли;
		
		Соединение = СтруктураCOM.Соединение;
		БазаБп = СтруктураCOM.БазаБух;
		
		ДокументЗагрузки = Документы.упрЗагрузкаДанныхОПлатежахИзБП.СоздатьДокумент();
		ДокументЗагрузки.Дата = Сейчас;
		ДокументЗагрузки.ИсточникДанных = ВыборкаИсточник.ИсточникДанных;
		
		МассивБп = БазаБп.NewObject("Массив");
		
		Выборка = ВыборкаИсточник.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивБп.Добавить(БазаБп.Документы.ПлатежноеПоручение.ПолучитьСсылку(БазаБп.NewObject("УникальныйИдентификатор", Строка(Выборка.ИдентификаторПП_БП))));
		КонецЦикла;
		
		ЗапросБп = БазаБп.NewObject("Запрос");
		ЗапросБп.УстановитьПараметр("ПлатежноеПоручение", МассивБп);
		ЗапросБп.Текст = ТекстЗапросаБП;
		ВыборкаБп = ЗапросБп.Выполнить().Выбрать();
		Пока ВыборкаБп.Следующий() Цикл
			СтрокаИдентификатора = БазаБп.String(ВыборкаБп.ПлатежноеПоручение.УникальныйИдентификатор());
			ПлатежноеПоручение = Новый УникальныйИдентификатор(СтрокаИдентификатора);
			
			Выборка.Сбросить();
			Выборка.НайтиСледующий(ПлатежноеПоручение, "ИдентификаторПП_БП");
			
			СтрокаПП = ДокументЗагрузки.ПлатежныеПоручения.Добавить();
			СтрокаПП.ПлатежноеПоручение = Выборка.ПлатежноеПоручение;
			СтрокаПП.СостояниеПлатежа = СостоянияПлатежа[ВыборкаБп.Состояние];
			
			СтрокаИдентификатора = БазаБп.String(ВыборкаБп.Выписка.УникальныйИдентификатор());
			СтрокаПП.Выписка = Новый УникальныйИдентификатор(СтрокаИдентификатора);
			
		КонецЦикла;
		
		Если ДокументЗагрузки.ПлатежныеПоручения.Количество() Тогда
			ДокументЗагрузки.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура ЗаписатьИОтправитьОшибку(Ссылка, ТекстОшибки)
	
	Сейчас = ТекущаяДата();
	
	ЗаписьРегистра = РегистрыСведений.упрСостоянияПлатежей.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Период = Сейчас;
	ЗаписьРегистра.Платеж = Ссылка;
	ЗаписьРегистра.СостояниеПлатежа = Перечисления.упрСостоянияПлатежей.ОшибкаСозданияПП_БП;
	ЗаписьРегистра.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	ЗаписьРегистра.Комментарий = ТекстОшибки;
	ЗаписьРегистра.Записать();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	упрПлатежноеПоручение.Представление КАК Представление,
	|	упрПлатежноеПоручение.ИсточникДанных.Наименование КАК ИсточникДанныхНаименование
	|ИЗ
	|	Документ.упрПлатежноеПоручение КАК упрПлатежноеПоручение
	|ГДЕ
	|	упрПлатежноеПоручение.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	МассивПолучателей = Новый Массив;
	МассивПолучателей.Добавить("m.aseev@strizh-logistic.ru");
	Если Не ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		МассивПолучателей.Добавить("evgeniy.marochkin@strizh-logistic.ru");
	КонецЕсли;
	
	ТекстОшибки = ТекстОшибки + "
	|База бухгалтерии " + Выборка.ИсточникДанныхНаименование + "
	|" + Выборка.Представление + "
	|" + Сейчас;
	
	lem.ОтправитьСообщение(МассивПолучателей, "Ошибка создания ПП в БП " + Выборка.ИсточникДанныхНаименование + " " + Формат(Сейчас, "ДФ=dd.MM.yyyy"), ТекстОшибки);
	
КонецПроцедуры

Процедура СоздатьПлатежноеПоручениеБП(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	упрПлатежноеПоручение.ИсточникДанных КАК ИсточникДанных,
	|	упрПлатежноеПоручение.Организация.ИНН КАК ОрганизацияИНН,
	|	упрПлатежноеПоручение.Контрагент.ИНН КАК КонтрагентИНН,
	|	упрПлатежноеПоручение.Контрагент.КПП КАК КонтрагентКПП,
	|	ЕСТЬNULL(упрПлатежноеПоручение.СтавкаНДС.КодВАдминке, -1) КАК КодНДС,
	|	упрПлатежноеПоручение.ДатаПлатежа КАК ДатаПлатежа,
	|	упрПлатежноеПоручение.СуммаПлатежа КАК СуммаПлатежа,
	|	упрПлатежноеПоручение.НазначениеПлатежа КАК НазначениеПлатежа,
	|	упрПлатежноеПоручение.ИсточникДанных.ИдентификаторСтатьиДДСЖурналРасходов КАК ИдентификаторСтатьиДДС
	|ИЗ
	|	Документ.упрПлатежноеПоручение КАК упрПлатежноеПоручение
	|ГДЕ
	|	упрПлатежноеПоручение.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если Не ЗначениеЗаполнено(Выборка.ОрганизацияИНН) Тогда
		ТекстОшибки = "Не определен ИНН Организации документа УТ";
	ИначеЕсли Не ЗначениеЗаполнено(Выборка.КонтрагентИНН) Тогда
		ТекстОшибки = "Не определен ИНН Контрагента документа УТ";
	ИначеЕсли Не ЗначениеЗаполнено(Выборка.КонтрагентКПП) Тогда
		ТекстОшибки = "Не определен КПП Контрагента документа УТ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ЗаписатьИОтправитьОшибку(Ссылка, ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ТекстОшибки = "";
	СтруктураCOM = ПлатежиКомитентамСервер.ПолучитьСоединениеСБазой(Выборка.ИсточникДанных, ТекстОшибки);
	Если СтруктураCOM = Неопределено Тогда
		ЗаписатьИОтправитьОшибку(Ссылка, ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	Соединение = СтруктураCOM.Соединение;
	БазаБп = СтруктураCOM.БазаБух;
	
	//НовДок = СоединениеБУХ.Документы.ВнутреннееПотреблениеТоваров.СоздатьДокумент();
	//НовДок.ХозяйственнаяОперация = СоединениеБУХ.Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию;
	//НовДок.Дата = Объект.ДатаОтчета;
	
	ЗапросБп = БазаБп.NewObject("Запрос");
	ЗапросБп.УстановитьПараметр("ОрганизацияИНН", Выборка.ОрганизацияИНН);
	ЗапросБп.УстановитьПараметр("КонтрагентИНН", Выборка.КонтрагентИНН);
	ЗапросБп.УстановитьПараметр("КонтрагентКПП", Выборка.КонтрагентКПП);
	ЗапросБп.УстановитьПараметр("КодНДС", Выборка.КодНДС);
	ЗапросБп.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.Контрагент КАК Контрагент,
	|	ВложенныйЗапрос.Организация.Код КАК ОрганизацияКод,
	|	ВложенныйЗапрос.Контрагент.Код КАК КонтрагентКод,
	|	ВложенныйЗапрос.Организация.ОсновнойБанковскийСчет КАК СчетОрганизации,
	|	ВложенныйЗапрос.Контрагент.ОсновнойБанковскийСчет КАК СчетКонтрагента,
	|	ВЫБОР &КодНДС
	|		КОГДА 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|		КОГДА 5
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС5)
	|		КОГДА 7
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7)
	|		КОГДА 10
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|		КОГДА 18
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|		КОГДА 20
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|	КОНЕЦ КАК СтавкаНДС,
	|	Валюты.Ссылка КАК ВалютаДокумента,
	|	ВложенныйЗапрос.Организация.НаименованиеПолное КАК ТекстПлательщика,
	|	ВложенныйЗапрос.Контрагент.НаименованиеПолное КАК ТекстПолучателя,
	|	ВложенныйЗапрос.Организация.ИНН КАК ИННПлательщика,
	|	ВложенныйЗапрос.Организация.КПП КАК КПППлательщика,
	|	ВложенныйЗапрос.Контрагент.ИНН КАК ИННПолучателя,
	|	ВложенныйЗапрос.Контрагент.КПП КАК КПППолучателя,
	|	ОсновныеДоговорыКонтрагента.Договор КАК ДоговорКонтрагента
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		Организации.Ссылка КАК Организация,
	|		Контрагенты.Ссылка КАК Контрагент
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИСТИНА КАК Поле1) КАК ВложенныйЗапрос
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ПО (Организации.ИНН = &ОрганизацияИНН)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО (Контрагенты.ИНН = &КонтрагентИНН)
	|				И (Контрагенты.КПП = &КонтрагентКПП)) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК Валюты
	|		ПО (Валюты.Код = ""643"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеДоговорыКонтрагента КАК ОсновныеДоговорыКонтрагента
	|		ПО (ВложенныйЗапрос.Организация = ОсновныеДоговорыКонтрагента.Организация)
	|			И (ВложенныйЗапрос.Контрагент = ОсновныеДоговорыКонтрагента.Контрагент)
	|			И (ОсновныеДоговорыКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком))";
	
	ВыборкаБп = ЗапросБп.Выполнить().Выбрать();
	ВыборкаБп.Следующий();
	
	Если Не ЗначениеЗаполнено(ВыборкаБп.ОрганизацияКод) Тогда
		ТекстОшибки = "Не найдена Организация в базе БП";
	ИначеЕсли Не ЗначениеЗаполнено(ВыборкаБп.КонтрагентКод) Тогда
		ТекстОшибки = "Не найден Контрагент в базе БП";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ЗаписатьИОтправитьОшибку(Ссылка, ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.ИдентификаторСтатьиДДС) Тогда
		СтрокаИдентификатораДДС = Строка(Выборка.ИдентификаторСтатьиДДС);
	Иначе
		СтрокаИдентификатораДДС = Неопределено;
	КонецЕсли;
	
	Попытка
		ДокБух = БазаБп.Документы.ПлатежноеПоручение.СоздатьДокумент();
		ДокБух.Дата = Выборка.ДатаПлатежа;
		ДокБух.ВидОперации = БазаБп.Перечисления.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику;
		ДокБух.Организация = ВыборкаБп.Организация;
		ДокБух.СчетОрганизации = ВыборкаБп.СчетОрганизации;
		ДокБух.Контрагент = ВыборкаБп.Контрагент;
		ДокБух.ДоговорКонтрагента = ВыборкаБп.ДоговорКонтрагента;
		ДокБух.СчетКонтрагента = ВыборкаБп.СчетКонтрагента;
		ДокБух.СуммаДокумента = Выборка.СуммаПлатежа;
		ДокБух.СтавкаНДС = ВыборкаБп.СтавкаНДС;
		
		ПроцентНДС = БазаБп.УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ВыборкаБп.СтавкаНДС);
		ДокБух.СуммаНДС   = Окр(Выборка.СуммаПлатежа * ПроцентНДС / (100 + ПроцентНДС), 2);
		
		ДокБух.ВидПлатежа = "Электронно";
		ДокБух.ОчередностьПлатежа = 5;
		ДокБух.НазначениеПлатежа = Выборка.НазначениеПлатежа;
		ДокБух.ВалютаДокумента = ВыборкаБп.ВалютаДокумента;
		ДокБух.ТекстПлательщика = ВыборкаБп.ТекстПлательщика;
		ДокБух.ТекстПолучателя = ВыборкаБп.ТекстПолучателя;
		ДокБух.Комментарий = "Выгружено из УТЛ";
		ДокБух.ИННПлательщика = ВыборкаБп.ИННПлательщика;
		ДокБух.КПППлательщика = ВыборкаБп.КПППлательщика;
		ДокБух.ИННПолучателя = ВыборкаБп.ИННПолучателя;
		ДокБух.КПППолучателя = ВыборкаБп.КПППолучателя;
		ДокБух.Ответственный = БазаБп.ПараметрыСеанса.ТекущийПользователь;
		
		//ДокументБух.СтатьяДвиженияДенежныхСредств = БазаБух.Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Доход Принципалов (воз-т, переч  )");
		Если ЗначениеЗаполнено(Выборка.ИдентификаторСтатьиДДС) Тогда
			//ДокументБух.СтатьяДвиженияДенежныхСредств
			ДокБух.СтатьяДвиженияДенежныхСредств = БазаБп.Справочники.СтатьиДвиженияДенежныхСредств.ПолучитьСсылку(БазаБп.NewObject("УникальныйИдентификатор", Строка(Выборка.ИдентификаторСтатьиДДС)));
		КонецЕсли;
		
		ДокБух.Записать(БазаБп.РежимЗаписиДокумента.Проведение);
		СтрокаИдентификатора = БазаБп.String(ДокБух.Ссылка.УникальныйИдентификатор());
		НомерБП = ДокБух.Номер;
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		//Сообщить("Ошибка создания ПП в базе бухгалтерии" + Символы.ПС + ТекстОшибки);
	КонецПопытки;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ЗаписатьИОтправитьОшибку(Ссылка, ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	Сейчас = ТекущаяДата();
	
	ДокУТ = Ссылка.ПолучитьОбъект();
	ДокУТ.ИдентификаторПП_БП = Новый УникальныйИдентификатор(СтрокаИдентификатора);
	ДокУТ.НомерПП_БП = НомерБП;
	ДокУТ.Записать();
	
	ЗаписьРегистра = РегистрыСведений.упрСостоянияПлатежей.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Период = Сейчас;
	ЗаписьРегистра.Платеж = Ссылка;
	ЗаписьРегистра.СостояниеПлатежа = Перечисления.упрСостоянияПлатежей.Подготовлено;
	ЗаписьРегистра.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	ЗаписьРегистра.Записать();
	
КонецПроцедуры

