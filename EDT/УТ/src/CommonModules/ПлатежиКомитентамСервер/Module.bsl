Функция ПолучитьСоединениеСБазой(ПараметрыБД, ТекстОшибки = Неопределено) Экспорт

	СистемнаяИнфо = Новый СистемнаяИнформация;
	ПодстрокиВерсии = ПараметрыБД.ПолучитьОбъект().РазложитьСтрокуВМассивПодстрокЛокально(СистемнаяИнфо.ВерсияПриложения,".");
	Соединение = Новый ComОбъект("v" + ПодстрокиВерсии[0] + ПодстрокиВерсии[1] + ".ComConnector");
	
	СтруктураCOM = Новый Структура("Соединение", Соединение); 
	Попытка
		СтруктураCOM.Вставить("БазаБух", Соединение.Connect(ПараметрыБД.СтрокаСоединения));		
		Возврат СтруктураCOM;
		//Предупреждение("Подключение прошло успешно!");
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Сообщить(ТекстОшибки);
		Сообщить(ИнформацияОбОшибке().Описание);
		Возврат Неопределено;
	КонецПопытки;		

КонецФункции // ()
 

Процедура РегламентПроверкаПодтвержденияОплатыПоПлатежнымДокументам(ДелатьРассылку = Истина) Экспорт
	
	МассивСоздаваемыхДокументов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.Период КАК Период,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.Организация КАК Организация,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДокументПланируемыхПлатежей КАК ДокументПланируемыхПлатежей,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ИсточникДанных КАК ИсточникДанных,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.Контрагент КАК Контрагент,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДатаВозникновенияЗадолженности КАК ДатаВозникновенияЗадолженности,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ПлатежноеПоручение КАК ПлатежноеПоручение,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.Сумма КАК Сумма,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.СостояниеПлатежногоДокумента КАК СостояниеПлатежногоДокумента,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.Выписка КАК Выписка,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.НомерПлатежногоДокумента КАК НомерПлатежногоДокумента,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДатаПлатежногоДокумента КАК ДатаПлатежногоДокумента,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.НомерВыписки КАК НомерВыписки,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДатаВыписки КАК ДатаВыписки
		|ИЗ
		|	РегистрСведений.ИсторияСостоянийПлатежныхДокументов.СрезПоследних КАК ИсторияСостоянийПлатежныхДокументовСрезПоследних
		|ГДЕ
		|	(ИсторияСостоянийПлатежныхДокументовСрезПоследних.СостояниеПлатежногоДокумента = ЗНАЧЕНИЕ(Перечисление.СостоянияПлатежныжДокументов.ПлатежныйДокументСоздан)
		|			ИЛИ ИсторияСостоянийПлатежныхДокументовСрезПоследних.СостояниеПлатежногоДокумента = ЗНАЧЕНИЕ(Перечисление.СостоянияПлатежныжДокументов.ПлатежныйДокументОбновлен))
		|ИТОГИ ПО
		|	ДокументПланируемыхПлатежей,
		|	ИсточникДанных,
		|	ПлатежноеПоручение";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДокументПланируемыхПлатежей = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//1 - выберем по док.ПланируемыеПлатежиКомитентам
	Пока ВыборкаДокументПланируемыхПлатежей.Следующий() цикл
		
		Если ВыборкаДокументПланируемыхПлатежей.ДокументПланируемыхПлатежей.Пустая() Тогда
			Продолжить;
		КонецЕсли; 

		//откроем создания док оплаты		
		ДокОплатаКомитенту = Документы.ОтражениеОплатыПоКомитентам.СоздатьДокумент();
		ДокОплатаКомитенту.Дата = ТекущаяДата();
		ДокОплатаКомитенту.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		ДокОплатаКомитенту.ДокументПланируемыхПлатежей = ВыборкаДокументПланируемыхПлатежей.ДокументПланируемыхПлатежей;
		
		//2 - по источнику данных
		ВыборкаИсточникДанных = ВыборкаДокументПланируемыхПлатежей.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаИсточникДанных.Следующий() Цикл
			
			Если ВыборкаИсточникДанных.ИсточникДанных.Пустая() Тогда
				Продолжить;
			КонецЕсли; 
			
			//3 - подключимся через COM
			ПараметрыБД = ВыборкаИсточникДанных.ИсточникДанных;
			
			СтруктураCOM = ПлатежиКомитентамСервер.ПолучитьСоединениеСБазой(ПараметрыБД);
			
			Если СтруктураCOM = Неопределено Тогда
				Продолжить;
			КонецЕсли; 
			
			Соединение = СтруктураCOM.Соединение;
			БазаБух = СтруктураCOM.БазаБух;
			
			//4 - по платежному поручению
			ВыборкаПП = ВыборкаИсточникДанных.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПП.Следующий() Цикл
				
				Если НЕ ЗначениеЗаполнено(ВыборкаПП.ПлатежноеПоручение) Тогда
					Продолжить;
				КонецЕсли; 
				
				//5 - найдём документ ПлатежноеПоручение
				УИД = БазаБух.NewObject("УникальныйИдентификатор", Строка(ВыборкаПП.ПлатежноеПоручение));
				ДокументБух = БазаБух.Документы.ПлатежноеПоручение.GetRef(УИД);
				
				//6 - найдем оплаты
				ДокСписание = БазаБух.Документы.СписаниеСРасчетногоСчета.НайтиПоРеквизиту("ДокументОснование", ДокументБух);			
				
				//7 - нырнём в фактические оплаты
				ВыборкаДетальныеЗаписи = ВыборкаПП.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					//8 - если нашли оплату, добавим её
					Если НЕ ДокСписание.Пустая() И ДокСписание.Проведен Тогда
						
						НС = ДокОплатаКомитенту.ПроведенныеПлатежи.Добавить();
						НС.Организация						= ВыборкаДетальныеЗаписи.Организация;
						НС.Контрагент						= ВыборкаДетальныеЗаписи.Контрагент;
						НС.ИсточникДанных					= ВыборкаДетальныеЗаписи.ИсточникДанных;
						НС.ПлатежноеПоручение				= ВыборкаДетальныеЗаписи.ПлатежноеПоручение;
						НС.Выписка							= Новый УникальныйИдентификатор(БазаБух.String(ДокСписание.УникальныйИдентификатор()));;
						НС.НомерВыписки						= ДокСписание.Номер;
						НС.ДатаВыписки						= ДокСписание.Дата;
						НС.СуммаПлатежа						= ДокСписание.СуммаДокумента;
						НС.ДатаВозникновенияЗадолженности	= ВыборкаДетальныеЗаписи.ДатаВозникновенияЗадолженности;
						
						ОстаткиВзаиморасчетовСКомитентами	= ПолучитьОстаткиВзаиморасчетовСКомитентами(НС.Организация, НС.Контрагент, НС.ДатаВозникновенияЗадолженности);
						
						НС.ТекущееСостояниеВзаиморасчетов	= ОстаткиВзаиморасчетовСКомитентами.Выгрузить().Итог("СуммаОстаток");
						
						НС.НомерПлатежногоДокумента			= ВыборкаДетальныеЗаписи.НомерПлатежногоДокумента;
						НС.ДатаПлатежногоДокумента			= ВыборкаДетальныеЗаписи.ДатаПлатежногоДокумента;
						
						ВыборкаВзаиморасчеты = ОстаткиВзаиморасчетовСКомитентами.Выбрать();
						
						Пока ВыборкаВзаиморасчеты.Следующий() Цикл
							
							НС2 = ДокОплатаКомитенту.Заказы.Добавить();
							ЗаполнитьЗначенияСвойств(НС2, ВыборкаВзаиморасчеты);
							НС2.Контрагент = ВыборкаВзаиморасчеты.Комитент;
							НС2.Сумма = ВыборкаВзаиморасчеты.СуммаОстаток;
							НС2.ДатаВозникновенияЗадолженности = ВыборкаДетальныеЗаписи.ДатаВозникновенияЗадолженности;
							
						КонецЦикла;
						
						// Дробница Р. 10.10.2018 Задача № 2568 --
						ДокументПланируемыхПлатежей = ДокОплатаКомитенту.ДокументПланируемыхПлатежей;
						Для Каждого СтрокаСтатьиОплат Из ДокументБух.СтатьиОплат Цикл
							
							СтатьяРасчетов = Справочники.СтатьиРасчетовСКомитентами.НайтиПоКоду(СокрЛП(СтрокаСтатьиОплат.КодСтатьиОплаты));
							
							ОтборСтатьяРасчетов = Новый Структура("Организация,Комитент,СтатьяРасчетовСКомитентами,ДатаЗадолженности,Оплачивать",
							ВыборкаДетальныеЗаписи.Организация,ВыборкаДетальныеЗаписи.Контрагент,СтатьяРасчетов,СтрокаСтатьиОплат.ДатаВозникновенияЗадолженности, Истина);
							
							СтрокиОплаты = ДокументПланируемыхПлатежей.ПлатежиКИсполнению.Выгрузить(ДокументПланируемыхПлатежей.ПлатежиКИсполнению.НайтиСтроки(ОтборСтатьяРасчетов));
							
							СтрокиОплаты.Свернуть("Организация,Комитент,СтатьяРасчетовСКомитентами,ДатаЗадолженности", "СуммаЗадолженности");
							
							ДЛя Каждого СтрокаОплаты Из СтрокиОплаты Цикл
								
								СтрокаСтатьиРасчетов = ДокОплатаКомитенту.СтатьиРасчетов.Добавить();
								СтрокаСтатьиРасчетов.СтатьяРасчетов = СтрокаОплаты.СтатьяРасчетовСКомитентами;
								СтрокаСтатьиРасчетов.Организация = СтрокаОплаты.Организация;
								СтрокаСтатьиРасчетов.Контрагент = СтрокаОплаты.Комитент;
								СтрокаСтатьиРасчетов.ДатаВозникновенияЗадолженности = СтрокаОплаты.ДатаЗадолженности;
								СтрокаСтатьиРасчетов.Сумма = СтрокаОплаты.СуммаЗадолженности;
								
							КонецЦикла;	
							
						КонецЦикла;	
						// -- Дробница Р. 10.10.2018 Задача № 2568
						
						
					КонецЕсли;
					
				КонецЦикла; //-7 факт.оплаты
				
			КонецЦикла; //-4 плат.поручение
			
			//9 - закроем COM
			Соединение = Неопределено;
			БазаБух = Неопределено;
						
		КонецЦикла; //-2 источник данных		
		
		//10 - избавимся от дублей в ТЧ.СтатьиРасчетов
		ТЧ_СтатьиРасчетов = ДокОплатаКомитенту.СтатьиРасчетов.Выгрузить();			
		ТЧ_СтатьиРасчетов.Свернуть("Организация,Контрагент,ДатаВозникновенияЗадолженности,СтатьяРасчетов,Сумма");
		ДокОплатаКомитенту.СтатьиРасчетов.Загрузить(ТЧ_СтатьиРасчетов);
		
		//11 - если док заполнен, запишем и проведём его + добавить записи в РС
		Если ДокОплатаКомитенту.ПроведенныеПлатежи.Количество() > 0
			И ДокОплатаКомитенту.Заказы.Количество() > 0 Тогда
						
			ДокОплатаКомитенту.Записать(РежимЗаписиДокумента.Проведение);
			
			ВыполнитьЗаписьВРегистрСведенийИсторияСостоянийПлатежныхДокументов(ДокОплатаКомитенту.Ссылка);
			
			МассивСоздаваемыхДокументов.Добавить(ДокОплатаКомитенту.Ссылка);
			
		Иначе
			ДокОплатаКомитенту = Неопределено;
		КонецЕсли; 
				
	КонецЦикла; //-1 док.ПланируемыПлатежи
	
	//13 - рассылка детализация оплат на почту партнёрам 
	Если ДелатьРассылку Тогда
		ОтправитьEXCELОтчетНаПочту(МассивСоздаваемыхДокументов);
	КонецЕсли; 	
		
КонецПроцедуры	
	
Функция ПолучитьОстаткиВзаиморасчетовСКомитентами(Организация, Контрагент, ДатаВозникновенияЗадолженности)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыСКомитентамиОстатки.Организация КАК Организация,
		|	ВзаиморасчетыСКомитентамиОстатки.Комитент КАК Комитент,
		|	ВзаиморасчетыСКомитентамиОстатки.ДатаВозникновенияЗадолженности КАК ДатаВозникновенияЗадолженности,
		|	ВзаиморасчетыСКомитентамиОстатки.ТипЗаказа КАК ТипЗаказа,
		|	ВзаиморасчетыСКомитентамиОстатки.Заказ КАК Заказ,
		|	ВзаиморасчетыСКомитентамиОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКомитентамиПоЗаказам.Остатки(
		|			,
		|			Организация = &Организация
		|				И Комитент = &Комитент
		|				И ДатаВозникновенияЗадолженности = &ДатаВозникновенияЗадолженности) КАК ВзаиморасчетыСКомитентамиОстатки";
	
	Запрос.УстановитьПараметр("ДатаВозникновенияЗадолженности", ДатаВозникновенияЗадолженности);
	Запрос.УстановитьПараметр("Комитент", Контрагент);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
		
КонецФункции // ()

Процедура ВыполнитьЗаписьВРегистрСведенийИсторияСостоянийПлатежныхДокументов(ДокОплатаКомитенту)

	Набор = РегистрыСведений.ИсторияСостоянийПлатежныхДокументов.СоздатьНаборЗаписей();
	Набор.Отбор.ДокументПланируемыхПлатежей.Установить(ДокОплатаКомитенту.ДокументПланируемыхПлатежей);
	
	Набор.Прочитать();
	
	Для каждого ТекСтрока Из ДокОплатаКомитенту.ПроведенныеПлатежи Цикл
		
		Запись = Набор.Добавить();
		Запись.Период = ТекущаяДата();
		Запись.Организация = ТекСтрока.Организация;
		Запись.ДокументПланируемыхПлатежей = ДокОплатаКомитенту.ДокументПланируемыхПлатежей;
		Запись.ИсточникДанных = ТекСтрока.ИсточникДанных;
		Запись.Контрагент = ТекСтрока.Контрагент;
		Запись.ДатаВозникновенияЗадолженности = ТекСтрока.ДатаВозникновенияЗадолженности;
		
		Запись.ПлатежноеПоручение = ТекСтрока.ПлатежноеПоручение;
		
		Запись.Сумма = ТекСтрока.СуммаПлатежа;
		Запись.СостояниеПлатежногоДокумента = Перечисления.СостоянияПлатежныжДокументов.ПодтвержденаОплатаПоПлатежномуДокументу;
		Запись.Выписка = ТекСтрока.Выписка;
		
		Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		Запись.НомерПлатежногоДокумента = ТекСтрока.НомерПлатежногоДокумента;
		Запись.ДатаПлатежногоДокумента = ТекСтрока.ДатаПлатежногоДокумента;
		Запись.НомерВыписки = ТекСтрока.НомерВыписки;
		Запись.ДатаВыписки = ТекСтрока.ДатаВыписки;
		
	КонецЦикла; 
	
	Набор.Записать();
	
КонецПроцедуры

/////////////////////////////////////////////ЭЛ.ПОЧТА

// МассивДокументов - массив с ДокументСсылка.ОтражениеОплатыКомитентам
// ЭлАдрес - необязательный параметр, если заполнен, то отправка будет принудительно отправлена только на указанный адрес, игнорируя основной алгоритм
Процедура ОтправитьEXCELОтчетНаПочту(МассивДокументов, ЭлАдрес = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов)
		ИЛИ ТипЗнч(МассивДокументов) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли; 
	
	//делаем группировку по контрагенту и дате выписки
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.Ссылка КАК Ссылка,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.НомерСтроки КАК НомерСтроки,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.Организация КАК Организация,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.Контрагент КАК Контрагент,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.ИсточникДанных КАК ИсточникДанных,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.ПлатежноеПоручение КАК ПлатежноеПоручение,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.Выписка КАК Выписка,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.НомерВыписки КАК НомерВыписки,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.ДатаВыписки КАК ДатаВыписки,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.СуммаПлатежа КАК СуммаПлатежа,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.ДатаВозникновенияЗадолженности КАК ДатаВозникновенияЗадолженности,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.ТекущееСостояниеВзаиморасчетов КАК ТекущееСостояниеВзаиморасчетов
		|ПОМЕСТИТЬ ВТ1
		|ИЗ
		|	Документ.ОтражениеОплатыПоКомитентам.ПроведенныеПлатежи КАК ОтражениеОплатыПоКомитентамПроведенныеПлатежи
		|ГДЕ
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.Ссылка В(&СписокДокументов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.Контрагент КАК Контрагент,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.ДатаВыписки КАК ДатаВыписки,
		|	ОтражениеОплатыПоКомитентамЗаказы.Заказ КАК Заказ,
		|	ОтражениеОплатыПоКомитентамЗаказы.НомерСтроки КАК НПП,
		|	ОтражениеОплатыПоКомитентамЗаказы.Заказ.Номер КАК НомерЗаказаНаш,
		|	НАЧАЛОПЕРИОДА(ОтражениеОплатыПоКомитентамЗаказы.Заказ.Дата, ДЕНЬ) КАК ДатаДоставки,
		|	ОтражениеОплатыПоКомитентамЗаказы.Сумма КАК Сумма,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.ДатаВыписки КАК ДатаПлатежа,
		|	ЕСТЬNULL(ИсторияСостоянийПлатежныхДокументовСрезПоследних.НомерПлатежногоДокумента, """") КАК НомерПП,
		|	ОтражениеОплатыПоКомитентамЗаказы.Заказ.НомерВнешнегоЗаказа КАК НомерЗаказа
		|ИЗ
		|	Документ.ОтражениеОплатыПоКомитентам.Заказы КАК ОтражениеОплатыПоКомитентамЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтражениеОплатыПоКомитентам.ПроведенныеПлатежи КАК ОтражениеОплатыПоКомитентамПроведенныеПлатежи
		|		ПО ОтражениеОплатыПоКомитентамЗаказы.Ссылка = ОтражениеОплатыПоКомитентамПроведенныеПлатежи.Ссылка
//		|			И (ОтражениеОплатыПоКомитентамПроведенныеПлатежи.НомерСтроки = 1)
		|			И (ОтражениеОплатыПоКомитентамЗаказы.Контрагент = ОтражениеОплатыПоКомитентамПроведенныеПлатежи.Контрагент)
		|			И (ОтражениеОплатыПоКомитентамЗаказы.ДатаВозникновенияЗадолженности = ОтражениеОплатыПоКомитентамПроведенныеПлатежи.ДатаВозникновенияЗадолженности)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийПлатежныхДокументов.СрезПоследних КАК ИсторияСостоянийПлатежныхДокументовСрезПоследних
		|		ПО ОтражениеОплатыПоКомитентамЗаказы.Ссылка.ДокументПланируемыхПлатежей = ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДокументПланируемыхПлатежей
		|			И ОтражениеОплатыПоКомитентамЗаказы.Контрагент = ИсторияСостоянийПлатежныхДокументовСрезПоследних.Контрагент
		|			И (ОтражениеОплатыПоКомитентамПроведенныеПлатежи.ДатаВозникновенияЗадолженности = ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДатаВозникновенияЗадолженности)
		|			И (ИсторияСостоянийПлатежныхДокументовСрезПоследних.НомерВыписки <> """")
		|ГДЕ
		|	ОтражениеОплатыПоКомитентамЗаказы.Ссылка В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ВТ1.Ссылка
		|			ИЗ
		|				ВТ1 КАК ВТ1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтражениеОплатыПоКомитентамСтатьиРасчетов.Контрагент,
		|	ЕСТЬNULL(ВТ1.ДатаВыписки, ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДатаВыписки),
		|	ОтражениеОплатыПоКомитентамСтатьиРасчетов.СтатьяРасчетов,
		|	0,
		|	NULL,
		|	NULL,
		|	ОтражениеОплатыПоКомитентамСтатьиРасчетов.Сумма,
		|	ЕСТЬNULL(ВТ1.ДатаВыписки, ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДатаПлатежногоДокумента),
		|	ЕСТЬNULL(ИсторияСостоянийПлатежныхДокументовСрезПоследних.НомерПлатежногоДокумента, """"),
		|	ЕСТЬNULL(ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.Ссылка.Комментарий, """")
		|ИЗ
		|	Документ.ОтражениеОплатыПоКомитентам.СтатьиРасчетов КАК ОтражениеОплатыПоКомитентамСтатьиРасчетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ1 КАК ВТ1
		|		ПО ОтражениеОплатыПоКомитентамСтатьиРасчетов.Ссылка = ВТ1.Ссылка
		|			И ОтражениеОплатыПоКомитентамСтатьиРасчетов.Организация = ВТ1.Организация
		|			И ОтражениеОплатыПоКомитентамСтатьиРасчетов.Контрагент = ВТ1.Контрагент
		|			И ОтражениеОплатыПоКомитентамСтатьиРасчетов.ДатаВозникновенияЗадолженности = ВТ1.ДатаВозникновенияЗадолженности
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийПлатежныхДокументов.СрезПоследних КАК ИсторияСостоянийПлатежныхДокументовСрезПоследних
		|		ПО ОтражениеОплатыПоКомитентамСтатьиРасчетов.Ссылка.ДокументПланируемыхПлатежей = ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДокументПланируемыхПлатежей
		|			И ОтражениеОплатыПоКомитентамСтатьиРасчетов.Контрагент = ИсторияСостоянийПлатежныхДокументовСрезПоследних.Контрагент
		|			И ОтражениеОплатыПоКомитентамСтатьиРасчетов.ДатаВозникновенияЗадолженности = ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДатаВозникновенияЗадолженности
		|			И (ИсторияСостоянийПлатежныхДокументовСрезПоследних.НомерВыписки <> """")
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводДанныхПоСтатьямРасчетовСКомитентами.СтатьиРасчетов КАК ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов
		|		ПО ОтражениеОплатыПоКомитентамСтатьиРасчетов.Организация = ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.Ссылка.Организация
		|			И ОтражениеОплатыПоКомитентамСтатьиРасчетов.Контрагент = ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.Ссылка.Комитент
		|			И ОтражениеОплатыПоКомитентамСтатьиРасчетов.ДатаВозникновенияЗадолженности = ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.ДатаВозникновенияЗадолженности
		|			И ОтражениеОплатыПоКомитентамСтатьиРасчетов.СтатьяРасчетов = ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.СтатьяРасчетов
		|			И ОтражениеОплатыПоКомитентамСтатьиРасчетов.Сумма = ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.Сумма
		|			И ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.Ссылка.Проведен
		|ГДЕ
		|	ОтражениеОплатыПоКомитентамСтатьиРасчетов.СтатьяРасчетов.Наименование <> ""Выручка по заказам""
		|	И ОтражениеОплатыПоКомитентамСтатьиРасчетов.Ссылка В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ВТ1.Ссылка
		|			ИЗ
		|				ВТ1 КАК ВТ1)
		|
		|ИТОГИ ПО
		|	Контрагент,
		|	ДатаВыписки";
	
	Запрос.УстановитьПараметр("СписокДокументов", МассивДокументов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаКонтрагент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКонтрагент.Следующий() Цикл
		
		Если ВыборкаКонтрагент.Контрагент.Пустая() Тогда
			Продолжить;
		КонецЕсли; 
		
		//на каждую дату выписки своя детализация
		ВыборкаДатаВыписки = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ЗначениеЗаполнено(ВыборкаДатаВыписки) Тогда
			Продолжить;
		КонецЕсли; 
		
		Пока ВыборкаДатаВыписки.Следующий() Цикл
	
			ВыборкаДетальныеЗаписи = ВыборкаДатаВыписки.Выбрать();
			
			Комитент = ВыборкаДатаВыписки.Контрагент;
			
			ДатаВозникновенияЗадолженности = ВыборкаДатаВыписки.ДатаВыписки;
						
			СписокПолучателей 		= Новый Массив;
			
			//Геннадий 09.12.2020 ->
			СтрокаСписокПолучателей = "";
			//Геннадий 09.12.2020 <-
			
			Если НЕ Комитент.Пустая() Тогда
				Набор = РегистрыСведений.РассылкиКонтрагентов.СоздатьНаборЗаписей();
				Набор.Отбор.Контрагент.Установить(Комитент);
				Набор.Отбор.ТипРассылки.Установить(Перечисления.ТипыРассылки.ФинансоваяРассылка);
				Набор.Отбор.Активна.Установить(Истина);
				
				Набор.Прочитать();
				
				Для каждого Запись Из Набор Цикл
					СписокПолучателей.Добавить(Запись.Почта);
					//Геннадий 09.12.2020 ->
					СтрокаСписокПолучателей = ?(ПустаяСтрока(СтрокаСписокПолучателей), Запись.Почта, СтрокаСписокПолучателей + ";" + Запись.Почта);
					//Геннадий 09.12.2020 <-
				КонецЦикла;
				
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(ЭлАдрес) Тогда
				СписокПолучателей = Новый Массив;
				СписокПолучателей.Добавить(ЭлАдрес);
			КонецЕсли; 
			
			ТабДок = ПолучитьОтчетТабДок(ВыборкаДетальныеЗаписи);
			
			ИмяВрФайла = ПолучитьИмяВременногоФайла("xls");
			
			ТабДок.Записать(ИмяВрФайла, ТипФайлаТабличногоДокумента.XLS);
				
			//Геннадий #4415 24.12.2020 ->
			//передан параметр "Ошибка", для записи 
			Ошибка = "";
			НастройкаОтправкиОтчета = Справочники.НастройкиАвтоматическойОтправкиОтчетов.НайтиПоКоду("00000000035");
			//Асеев 31.10.2024 (Задача № 5339)>>>
			ОператорРассылки = lem.ОпределитьОператораРассылки(НастройкаОтправкиОтчета, Комитент);
			//Асеев 31.10.2024 (Задача № 5339)<<<
			Если ОператорРассылки = Справочники.ОператорыСМСРассылки.strizhLogistic Тогда
				СообщениеОтправлено = lem.ОтправитьСообщение(СписокПолучателей, "Детализация по "+Комитент+" за "+Формат(ДатаВозникновенияЗадолженности,"ДФ=dd.MM.yyyy"), "Отчет", ИмяВрФайла, "Компания ""Стриж""",,,,Ошибка);
			ИначеЕсли ОператорРассылки = Справочники.ОператорыСМСРассылки.union Тогда
				ОбработкаUnion 		= Обработки.СТРИЖ_ИнтеграцияUniOne.Создать();
				СообщениеОтправлено = ОбработкаUnion.ОтправитьEMAIL_HTTP(СписокПолучателей, "Детализация по "+Комитент+" за "+Формат(ДатаВозникновенияЗадолженности,"ДФ=dd.MM.yyyy"), "Отчет", ИмяВрФайла, "Компания ""Стриж""",,,,Ошибка);
			КонецЕсли;
			ЗаписьОшибкиВоВнешнийЛогПриОтправкеИнформации(Ошибка, ИмяВрФайла, СообщениеОтправлено, Комитент, СтрокаСписокПолучателей, НастройкаОтправкиОтчета, ОператорРассылки);	
			//Геннадий <-
			
			УдалитьФайлы(ИмяВрФайла);
			
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры 

Функция ПолучитьОтчетТабДок(ВыборкаДетальныеЗаписи) Экспорт

	Макет = Отчеты.ММ_РасшифровкаБанковскихПереводов.ПолучитьМакет("Приложение_6_2015");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
			
	ТабДок.Вывести(ОбластьШапка);
	
	ИтСум = 0;
	
	Сч = 1;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ОбластьСтрока.Параметры.НомерПП = Прав(ОбластьСтрока.Параметры.НомерПП,4);
		ОбластьСтрока.Параметры.НПП		= Сч;
		ТабДок.Вывести(ОбластьСтрока);
		
		ИтСум = ИтСум + ВыборкаДетальныеЗаписи.Сумма;
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
	ОбластьПодвал.Параметры.ИтСум = ИтСум;	
	ТабДок.Вывести(ОбластьПодвал);
	
	ТабДок.УдалитьОбласть(ТабДок.Область("C4"), ТипСмещенияТабличногоДокумента.ПоГоризонтали);
	
	Возврат ТабДок;
		
КонецФункции // ()

//Геннадий 30.11.2020 <-
Процедура ЗаписьОшибкиВоВнешнийЛогПриОтправкеИнформации(ТекстОшибки = "", ИмяВрФайла, СообщениеОтправлено, КонтрагентДляРассылки, СтрокаСписокПолучателей, Настройка, ОператорРассылки)
	
	//Настройка = Справочники.НастройкиАвтоматическойОтправкиОтчетов.НайтиПоКоду("00000000035");//ДетализацияОплатКомитентам
	
	ПараметрыЗаписи 					= ВнешнееЛогированиеСервер.ПараметрыЗаписиЛогаОтправкиОтчета(Справочники.ТипыОтправкиОтчетов.ОтчетПартнерамПочтойРегламент);
	ПараметрыЗаписи.НастройкаОтправки	= Настройка;
	
	ПараметрыЗаписи.Контрагент 			= КонтрагентДляРассылки;		
	ПараметрыЗаписи.ПериодФормирования 	= ТекущаяДата();
	
	ПараметрыЗаписи.ДвоичныеДанныеВыгрузки 	= Новый ДвоичныеДанные(ИмяВрФайла);
	
	ПараметрыЗаписи.GUID 				= Новый УникальныйИдентификатор;
	ПараметрыЗаписи.СписокПолучателей 	= СтрокаСписокПолучателей;
	
	
	ПараметрыЗаписи.ВидОтчетаСпр		= Справочники.ВидыОтправляемыхОтчетов.ДетализацияОплатКомитентам;
	ПараметрыЗаписи.ВидОтчета			= Настройка.Отчет;//Перечисления.ВидыОтправляемыхОтчетов.ДетализацияОплатКомитентам;
	
	ПараметрыЗаписи.ТекстОшибки			= ТекстОшибки;
	ПараметрыЗаписи.ОтчетОтправлен		= СообщениеОтправлено;
	ПараметрыЗаписи.ОператорРассылки	= ОператорРассылки.КлючДанныхТаблицыВнешнегоЛогирования;
	
	ВнешнееЛогированиеСервер.ЗаписатьСтрокуЛогаОтчетыКОтправке(ПараметрыЗаписи);
	
КонецПроцедуры
//Геннадий 30.11.2020 <-
/////////////////////////////////////////////ПРЕДЫДУЩИЕ ВЕРСИИ

Процедура РегламентПроверкаПодтвержденияОплатыПоПлатежнымДокументам_Старая(ДелатьРассылку = Истина) Экспорт

	МассивСоздаваемыхДокументов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.Период КАК Период,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.Организация КАК Организация,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДокументПланируемыхПлатежей КАК ДокументПланируемыхПлатежей,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ИсточникДанных КАК ИсточникДанных,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.Контрагент КАК Контрагент,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДатаВозникновенияЗадолженности КАК ДатаВозникновенияЗадолженности,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ПлатежноеПоручение КАК ПлатежноеПоручение,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.Сумма КАК Сумма,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.СостояниеПлатежногоДокумента КАК СостояниеПлатежногоДокумента,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.Выписка КАК Выписка,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.НомерПлатежногоДокумента КАК НомерПлатежногоДокумента,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДатаПлатежногоДокумента КАК ДатаПлатежногоДокумента,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.НомерВыписки КАК НомерВыписки,
		|	ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДатаВыписки КАК ДатаВыписки
		|ИЗ
		|	РегистрСведений.ИсторияСостоянийПлатежныхДокументов.СрезПоследних КАК ИсторияСостоянийПлатежныхДокументовСрезПоследних
		|ГДЕ
		|	(ИсторияСостоянийПлатежныхДокументовСрезПоследних.СостояниеПлатежногоДокумента = ЗНАЧЕНИЕ(Перечисление.СостоянияПлатежныжДокументов.ПлатежныйДокументСоздан)
		|			ИЛИ ИсторияСостоянийПлатежныхДокументовСрезПоследних.СостояниеПлатежногоДокумента = ЗНАЧЕНИЕ(Перечисление.СостоянияПлатежныжДокументов.ПлатежныйДокументОбновлен))
		|ИТОГИ ПО
		|	ИсточникДанных,
		|	Контрагент,
		|	ДокументПланируемыхПлатежей";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИсточникДанных = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//1 - источник данных
	Пока ВыборкаИсточникДанных.Следующий() Цикл
		
		Если ВыборкаИсточникДанных.ИсточникДанных.Пустая() Тогда
			Продолжить;
		КонецЕсли; 
		
		//2 - подключимся через COM
		ПараметрыБД = ВыборкаИсточникДанных.ИсточникДанных;
		
		СтруктураCOM = ПлатежиКомитентамСервер.ПолучитьСоединениеСБазой(ПараметрыБД);
		
		Если СтруктураCOM = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		Соединение = СтруктураCOM.Соединение;
		БазаБух = СтруктураCOM.БазаБух;
		
		НачатьТранзакцию();
		
		//3 - нырнем в контрагента
		ВыборкаКонтрагент = ВыборкаИсточникДанных.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаКонтрагент.Следующий() Цикл
			
			Если ВыборкаКонтрагент.Контрагент.Пустая() Тогда
				Продолжить;
			КонецЕсли;
			
			//4 - нырнём в док.ПланируемыеПлатежиКомитентам
			ВыборкаПлатежи = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПлатежи.Следующий() Цикл
				
				Если ВыборкаПлатежи.ДокументПланируемыхПлатежей.Пустая() Тогда
					Продолжить;
				КонецЕсли; 
				
				//откроем создания док оплаты		
				ДокОплатаКомитенту = Документы.ОтражениеОплатыПоКомитентам.СоздатьДокумент();
				ДокОплатаКомитенту.Дата = ТекущаяДата();
				ДокОплатаКомитенту.Пользователь = ПараметрыСеанса.ТекущийПользователь;
				ДокОплатаКомитенту.ДокументПланируемыхПлатежей = ВыборкаПлатежи.ДокументПланируемыхПлатежей;
				
				//5 - нырнём в фактические оплаты
				ВыборкаДетальныеЗаписи = ВыборкаПлатежи.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					УИД = БазаБух.NewObject("УникальныйИдентификатор", Строка(ВыборкаДетальныеЗаписи.ПлатежноеПоручение));
					ДокументБух = БазаБух.Документы.ПлатежноеПоручение.GetRef(УИД);
					
					ДокСписание = БазаБух.Документы.СписаниеСРасчетногоСчета.НайтиПоРеквизиту("ДокументОснование", ДокументБух);			
					
					//6 - если нашли оплату, добавим её
					Если НЕ ДокСписание.Пустая() И ДокСписание.Проведен Тогда
						
						НС = ДокОплатаКомитенту.ПроведенныеПлатежи.Добавить();
						НС.Организация						= ВыборкаДетальныеЗаписи.Организация;
						НС.Контрагент						= ВыборкаДетальныеЗаписи.Контрагент;
						НС.ИсточникДанных					= ВыборкаДетальныеЗаписи.ИсточникДанных;
						НС.ПлатежноеПоручение				= ВыборкаДетальныеЗаписи.ПлатежноеПоручение;
						НС.Выписка							= Новый УникальныйИдентификатор(БазаБух.String(ДокСписание.УникальныйИдентификатор()));;
						НС.НомерВыписки						= ДокСписание.Номер;
						НС.ДатаВыписки						= ДокСписание.Дата;
						НС.СуммаПлатежа						= ДокСписание.СуммаДокумента;
						НС.ДатаВозникновенияЗадолженности	= ВыборкаДетальныеЗаписи.ДатаВозникновенияЗадолженности;
						
						ОстаткиВзаиморасчетовСКомитентами	= ПолучитьОстаткиВзаиморасчетовСКомитентами(НС.Организация, НС.Контрагент, НС.ДатаВозникновенияЗадолженности);
						
						НС.ТекущееСостояниеВзаиморасчетов	= ОстаткиВзаиморасчетовСКомитентами.Выгрузить().Итог("СуммаОстаток");
						
						НС.НомерПлатежногоДокумента			= ВыборкаДетальныеЗаписи.НомерПлатежногоДокумента;
						НС.ДатаПлатежногоДокумента			= ВыборкаДетальныеЗаписи.ДатаПлатежногоДокумента;
						
						ВыборкаВзаиморасчеты = ОстаткиВзаиморасчетовСКомитентами.Выбрать();
						
						Пока ВыборкаВзаиморасчеты.Следующий() Цикл
							
							НС2 = ДокОплатаКомитенту.Заказы.Добавить();
							ЗаполнитьЗначенияСвойств(НС2, ВыборкаВзаиморасчеты);
							НС2.Контрагент = ВыборкаВзаиморасчеты.Комитент;
							НС2.Сумма = ВыборкаВзаиморасчеты.СуммаОстаток;
							
						КонецЦикла;
						
						// Дробница Р. 10.10.2018 Задача № 2568 --
						ДокументПланируемыхПлатежей = ДокОплатаКомитенту.ДокументПланируемыхПлатежей;
						Для Каждого СтрокаСтатьиОплат Из ДокументБух.СтатьиОплат Цикл
							
							СтатьяРасчетов = Справочники.СтатьиРасчетовСКомитентами.НайтиПоКоду(СокрЛП(СтрокаСтатьиОплат.КодСтатьиОплаты));
							
							ОтборСтатьяРасчетов = Новый Структура("Организация,Комитент,СтатьяРасчетовСКомитентами,ДатаЗадолженности,Оплачивать",
							ВыборкаДетальныеЗаписи.Организация,ВыборкаДетальныеЗаписи.Контрагент,СтатьяРасчетов,СтрокаСтатьиОплат.ДатаВозникновенияЗадолженности, Истина);
							
							СтрокиОплаты = ДокументПланируемыхПлатежей.ПлатежиКИсполнению.Выгрузить(ДокументПланируемыхПлатежей.ПлатежиКИсполнению.НайтиСтроки(ОтборСтатьяРасчетов));
							
							СтрокиОплаты.Свернуть("Организация,Комитент,СтатьяРасчетовСКомитентами,ДатаЗадолженности", "СуммаЗадолженности");
							
							ДЛя Каждого СтрокаОплаты Из СтрокиОплаты Цикл
								
								СтрокаСтатьиРасчетов = ДокОплатаКомитенту.СтатьиРасчетов.Добавить();
								СтрокаСтатьиРасчетов.СтатьяРасчетов = СтрокаОплаты.СтатьяРасчетовСКомитентами;
								СтрокаСтатьиРасчетов.Организация = СтрокаОплаты.Организация;
								СтрокаСтатьиРасчетов.Контрагент = СтрокаОплаты.Комитент;
								СтрокаСтатьиРасчетов.ДатаВозникновенияЗадолженности = СтрокаОплаты.ДатаЗадолженности;
								СтрокаСтатьиРасчетов.Сумма = СтрокаОплаты.СуммаЗадолженности;
								
							КонецЦикла;	
							
						КонецЦикла;	
						// -- Дробница Р. 10.10.2018 Задача № 2568
																																
					КонецЕсли; 
					
				КонецЦикла; // -детальныеоплаты
				
				//7 - если док заполнен, запишем и проведём его + добавить записи в РС
				Если ДокОплатаКомитенту.ПроведенныеПлатежи.Количество() > 0
					И ДокОплатаКомитенту.Заказы.Количество() > 0 Тогда
					
					ДокОплатаКомитенту.Записать(РежимЗаписиДокумента.Проведение);
				
					ВыполнитьЗаписьВРегистрСведенийИсторияСостоянийПлатежныхДокументов(ДокОплатаКомитенту.Ссылка);
										
					МассивСоздаваемыхДокументов.Добавить(ДокОплатаКомитенту.Ссылка);

				Иначе
					ДокОплатаКомитенту = Неопределено;
				КонецЕсли; 
												
			КонецЦикла; //-док.планируемыеплатежи 
			
		КонецЦикла; // -контрагент 
			
		//9 - закроем COM
		Соединение = Неопределено;
		БазаБух = Неопределено;
		
		ЗафиксироватьТранзакцию();	
		
	КонецЦикла; // -источникданных
	
	//10 - рассылка детализация оплат на почту партнёрам 
	Если ДелатьРассылку Тогда
		ОтправитьEXCELОтчетНаПочту(МассивСоздаваемыхДокументов);
	КонецЕсли; 

КонецПроцедуры
 
Процедура ОтправитьEXCELОтчетНаПочту_Старая(ДокСсылка) Экспорт
		
	Комитент = Справочники.Контрагенты.ПустаяСсылка();
	
	ДатаВозникновенияЗадолженности = ТекущаяДата();
	
	Для каждого ТекСтрока Из ДокСсылка.ПроведенныеПлатежи Цикл
		
		Комитент = ТекСтрока.Контрагент;
		
		ДатаВозникновенияЗадолженности = ТекСтрока.ДатаВыписки;
		
	КонецЦикла; 
	
	СписокПолучателей = Новый Массив;
	
	Если НЕ Комитент.Пустая() Тогда
		Набор = РегистрыСведений.РассылкиКонтрагентов.СоздатьНаборЗаписей();
		Набор.Отбор.Контрагент.Установить(Комитент);
		Набор.Отбор.ТипРассылки.Установить(Перечисления.ТипыРассылки.ФинансоваяРассылка);
		Набор.Отбор.Активна.Установить(Истина);
		
		Набор.Прочитать();
		
		Для каждого Запись Из Набор Цикл
			СписокПолучателей.Добавить(Запись.Почта);
		КонецЦикла;
		
	КонецЕсли; 
	
	//СписокПолучателей.Добавить("a.pryalkin@strizh-logistic.ru");  // Дробница Р. 
	//СписокПолучателей.Добавить("yulia.semenova@strizh-logistic.ru");
	
	ТабДок = ПолучитьОтчетТабДок(ДокСсылка);
	
	ИмяВрФайла = ПолучитьИмяВременногоФайла("xls");
	
	ТабДок.Записать(ИмяВрФайла, ТипФайлаТабличногоДокумента.XLS);
		
	lem.ОтправитьСообщение(СписокПолучателей, "Детализация по "+Комитент+" за "+Формат(ДатаВозникновенияЗадолженности,"ДФ=dd.MM.yyyy"), "Отчет", ИмяВрФайла, "Компания ""Стриж""");
	
	УдалитьФайлы(ИмяВрФайла);
	
КонецПроцедуры
 
Функция ПолучитьОтчетТабДок_Старая(ДокСсылка) Экспорт

	Макет = Отчеты.ММ_РасшифровкаБанковскихПереводов.ПолучитьМакет("Приложение_6_2015");
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтражениеОплатыПоКомитентамЗаказы.Заказ КАК Заказ,
		|	ОтражениеОплатыПоКомитентамЗаказы.НомерСтроки КАК НПП,
		|	ОтражениеОплатыПоКомитентамЗаказы.Заказ.Номер КАК НомерЗаказаНаш,
		|	НАЧАЛОПЕРИОДА(ОтражениеОплатыПоКомитентамЗаказы.Заказ.Дата, ДЕНЬ) КАК ДатаДоставки,
		|	ОтражениеОплатыПоКомитентамЗаказы.Сумма КАК Сумма,
		|	ОтражениеОплатыПоКомитентамПроведенныеПлатежи.ДатаВыписки КАК ДатаПлатежа,
		|	ЕСТЬNULL(ИсторияСостоянийПлатежныхДокументовСрезПоследних.НомерПлатежногоДокумента, """") КАК НомерПП,
		|	ОтражениеОплатыПоКомитентамЗаказы.Заказ.НомерВнешнегоЗаказа КАК НомерЗаказа
		|ИЗ
		|	Документ.ОтражениеОплатыПоКомитентам.Заказы КАК ОтражениеОплатыПоКомитентамЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтражениеОплатыПоКомитентам.ПроведенныеПлатежи КАК ОтражениеОплатыПоКомитентамПроведенныеПлатежи
		|		ПО ОтражениеОплатыПоКомитентамЗаказы.Ссылка = ОтражениеОплатыПоКомитентамПроведенныеПлатежи.Ссылка
		|			И (ОтражениеОплатыПоКомитентамПроведенныеПлатежи.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСостоянийПлатежныхДокументов.СрезПоследних КАК ИсторияСостоянийПлатежныхДокументовСрезПоследних
		|		ПО ОтражениеОплатыПоКомитентамЗаказы.Ссылка.ДокументПланируемыхПлатежей = ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДокументПланируемыхПлатежей
		|			И ОтражениеОплатыПоКомитентамЗаказы.Контрагент = ИсторияСостоянийПлатежныхДокументовСрезПоследних.Контрагент
		|			И ОтражениеОплатыПоКомитентамПроведенныеПлатежи.ДатаВозникновенияЗадолженности = ИсторияСостоянийПлатежныхДокументовСрезПоследних.ДатаВозникновенияЗадолженности
		|			И (ИсторияСостоянийПлатежныхДокументовСрезПоследних.НомерВыписки <> """")
		|ГДЕ
		|	ОтражениеОплатыПоКомитентамЗаказы.Ссылка = &Ссылка
		|	И ОтражениеОплатыПоКомитентамПроведенныеПлатежи.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТабДок.Вывести(ОбластьШапка);
	
	ИтСум = 0;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ОбластьСтрока.Параметры.НомерПП = Прав(ОбластьСтрока.Параметры.НомерПП,4);
		ТабДок.Вывести(ОбластьСтрока);
		
		ИтСум = ИтСум + ВыборкаДетальныеЗаписи.Сумма;
	КонецЦикла;
	
	ОбластьПодвал.Параметры.ИтСум = ИтСум;	
	ТабДок.Вывести(ОбластьПодвал);
	
	ТабДок.УдалитьОбласть(ТабДок.Область("C4"), ТипСмещенияТабличногоДокумента.ПоГоризонтали);
	
	Возврат ТабДок;
		
КонецФункции // ()
 

/////////////////////////////////////////////СЛУЖЕБНЫЕ ПРОЦЕДУРЫ

//+Степанов Добавлен аргумент ДокументСсылка для записи в РС ДокументыЗакрытыеДляИзменения Задача № 3439 
Процедура УстановитьСтатусДокументовВводДанных(ПлатежиКИсполнению, ДокументПроверен, ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		//|	ДокТЧ.Ссылка КАК Ссылка,
		|	ДокТЧ.НомерСтроки КАК НомерСтроки,
		|	ДокТЧ.Организация КАК Организация,
		|	ДокТЧ.Комитент КАК Комитент,
		|	ДокТЧ.ДатаЗадолженности КАК ДатаЗадолженности,
		|	ДокТЧ.СуммаЗадолженности КАК СуммаЗадолженности,
		|	ДокТЧ.СтатьяРасчетовСКомитентами КАК СтатьяРасчетовСКомитентами,
		|	ДокТЧ.Оплачивать КАК Оплачивать
		|ПОМЕСТИТЬ ПлатежиКИсполнению
		|ИЗ
		|	&ДокТЧ КАК ДокТЧ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		//|	ПланируемыеПлатежиКомитентамПлатежиКИсполнению.Ссылка КАК ДокументПланируемыеПлатежи,
		|	ПланируемыеПлатежиКомитентамПлатежиКИсполнению.НомерСтроки КАК НомерСтроки,
		|	ПланируемыеПлатежиКомитентамПлатежиКИсполнению.Организация КАК Организация,
		|	ПланируемыеПлатежиКомитентамПлатежиКИсполнению.Комитент КАК Комитент,
		|	ПланируемыеПлатежиКомитентамПлатежиКИсполнению.ДатаЗадолженности КАК ДатаЗадолженности,
		|	ПланируемыеПлатежиКомитентамПлатежиКИсполнению.СуммаЗадолженности КАК СуммаЗадолженности,
		|	ПланируемыеПлатежиКомитентамПлатежиКИсполнению.СтатьяРасчетовСКомитентами КАК СтатьяРасчетовСКомитентами,
		|	ЕСТЬNULL(ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.Ссылка, ЗНАЧЕНИЕ(Документ.ВводДанныхПоСтатьямРасчетовСКомитентами.ПустаяСсылка)) КАК ДокументВводДанных
		|ПОМЕСТИТЬ ВТ1
		|ИЗ
		|	ПлатежиКИсполнению КАК ПланируемыеПлатежиКомитентамПлатежиКИсполнению
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводДанныхПоСтатьямРасчетовСКомитентами.СтатьиРасчетов КАК ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов
		|		ПО ПланируемыеПлатежиКомитентамПлатежиКИсполнению.Организация = ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.Ссылка.Организация
		|			И ПланируемыеПлатежиКомитентамПлатежиКИсполнению.Комитент = ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.Ссылка.Комитент
		|			И ПланируемыеПлатежиКомитентамПлатежиКИсполнению.ДатаЗадолженности = ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.ДатаВозникновенияЗадолженности
		|			И ПланируемыеПлатежиКомитентамПлатежиКИсполнению.СтатьяРасчетовСКомитентами = ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.СтатьяРасчетов
		|			И ПланируемыеПлатежиКомитентамПлатежиКИсполнению.СуммаЗадолженности = ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.Сумма
		|			И (ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.Ссылка.Проведен)
		|ГДЕ
		|	ПланируемыеПлатежиКомитентамПлатежиКИсполнению.Оплачивать
		|	И ЕСТЬNULL(ВводДанныхПоСтатьямРасчетовСКомитентамиСтатьиРасчетов.Ссылка, ЗНАЧЕНИЕ(Документ.ВводДанныхПоСтатьямРасчетовСКомитентами.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Документ.ВводДанныхПоСтатьямРасчетовСКомитентами.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		//|	ВТ1.ДокументПланируемыеПлатежи КАК ДокументПланируемыеПлатежи,
		|	ВТ1.НомерСтроки КАК НомерСтроки,
		|	ВТ1.Организация КАК Организация,
		|	ВТ1.Комитент КАК Комитент,
		|	ВТ1.ДатаЗадолженности КАК ДатаЗадолженности,
		|	ВТ1.СуммаЗадолженности КАК СуммаЗадолженности,
		|	ВТ1.СтатьяРасчетовСКомитентами КАК СтатьяРасчетовСКомитентами,
		|	ВТ1.ДокументВводДанных КАК ДокументВводДанных,
		|	ЕСТЬNULL(ДокументыЗакрытыеДляИзмененияСрезПоследних.ЗакрытДляРедактирования, ЛОЖЬ) КАК ЗакрытДляРедактирования
		|ИЗ
		|	ВТ1 КАК ВТ1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыЗакрытыеДляИзменения.СрезПоследних КАК ДокументыЗакрытыеДляИзмененияСрезПоследних
		|		ПО ВТ1.ДокументВводДанных = ДокументыЗакрытыеДляИзмененияСрезПоследних.Документ
		|ИТОГИ
		|	КОЛИЧЕСТВО(ДокументВводДанных),
		|	МАКСИМУМ(Организация),
		|	МАКСИМУМ(Комитент),
		|	МАКСИМУМ(ДатаЗадолженности),
		|	МАКСИМУМ(СтатьяРасчетовСКомитентами),
		|	МАКСИМУМ(СуммаЗадолженности)		
		|ПО
		|	НомерСтроки";
				
	Запрос.УстановитьПараметр("ДокТЧ", ПлатежиКИсполнению);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНомерСтроки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНомерСтроки.Следующий() Цикл
		
		Если ВыборкаНомерСтроки.ДокументВводДанных > 1 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для "+ВыборкаНомерСтроки.Организация+" "+ВыборкаНомерСтроки.Комитент+" "+ВыборкаНомерСтроки.ДатаЗадолженности+" "+ВыборкаНомерСтроки.СтатьяРасчетовСКомитентами+" "+ВыборкаНомерСтроки.СуммаЗадолженности+" существует несколько документов Ввод данных по статьям!"+Символы.ПС+"Пожалуйста, оставьте только один корректный документ");
		КонецЕсли; 
		
		ВыборкаДетальныеЗаписи = ВыборкаНомерСтроки.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

			Если ВыборкаНомерСтроки.ДокументВводДанных > 1 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ВыборкаДетальныеЗаписи.ДокументВводДанных);
				Продолжить;
			КонецЕсли;
									
			Если ДокументПроверен И (НЕ ВыборкаДетальныеЗаписи.ЗакрытДляРедактирования) Тогда
				
				baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(ВыборкаДетальныеЗаписи.ДокументВводДанных, ДокументПроверен,ДокументСсылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(""+ВыборкаДетальныеЗаписи.ДокументВводДанных+" заблокирован");				
				
			КонецЕсли; 
			
		КонецЦикла;		
		
	КонецЦикла;
	
КонецПроцедуры
 