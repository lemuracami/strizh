Процедура ИнициализироватьПодключенияБДВнешнегоХранилища() Экспорт
	
	Попытка
		
		СтрокаСоединения = СокРЛП(Константы.СтрокаПодключенияБДВнешнегоХранилища.Получить());
		СоставСтроки = СтрРазделить(СтрокаСоединения, ";");
		ИмяПользователя = СтрЗаменить(СоставСтроки[2],"UID=","");
		Пароль = СтрЗаменить(СоставСтроки[3],"PWD=","");
		
		ПараметрыИнициализации = ВнешниеИсточникиДанных.ВнешнийЛог.ПолучитьОбщиеПараметрыСоединения();
		ПараметрыИнициализации.АутентификацияСтандартная = Истина;
		ПараметрыИнициализации.ИмяПользователя = ИмяПользователя;
		ПараметрыИнициализации.Пароль = Пароль; 
		ПараметрыИнициализации.СтрокаСоединения = СтрокаСоединения;
		ПараметрыИнициализации.СУБД = "MSSQLServer";
		
		ВнешниеИсточникиДанных.ВнешнееХранилищеДанных.УстановитьОбщиеПараметрыСоединения(ПараметрыИнициализации);
		ВнешниеИсточникиДанных.ВнешнееХранилищеДанных.УстановитьПараметрыСоединенияПользователя(ИмяПользователя(), ПараметрыИнициализации);
		ВнешниеИсточникиДанных.ВнешнееХранилищеДанных.УстановитьПараметрыСоединенияСеанса(ПараметрыИнициализации);
		ВнешниеИсточникиДанных.ВнешнееХранилищеДанных.УстановитьСоединение();
		
	Исключение
		Сообщить(ОписаниеОшибки());		
	КонецПопытки	
		
КонецПроцедуры

Функция ЗаписатьДанныеВоВнешнееХранилищеДанных(ИмяФайла, РасширениеФайла, АдресВХ = Неопределено, Данные = Неопределено, Документ = Неопределено, ТипДокумента, УзелМП = Неопределено, ФайлБезЗаказов = Ложь) Экспорт
	
	ID = 0;
	
	ЗаписьФайла = ВнешниеИсточникиДанных.ВнешнееХранилищеДанных.Таблицы.dbo_extFiles.СоздатьОбъект();
	
	Попытка
				
		Если ЗначениеЗаполнено(АдресВХ) Тогда
			Данные = ПолучитьИзВременногоХранилища(АдресВХ);
		КонецЕсли; 
		
		МА = "";		
		
		Если ЗначениеЗаполнено(УзелМП) Тогда
			МА = УзелМП.Код;
		КонецЕсли; 
		
		//ВнешниеИсточникиДанных.ВнешнееХранилищеДанных.dbo_extFileAdd(
		//	Данные,
		//	Строка(РасширениеФайла),
		//	ТипДокумента.Код,
		//	ТекущаяДата(),
		//	Данные.Размер(),
		//	Ложь,
		//	ТекущаяДата(),
		//	глЗначениеПеременной("глТекущийПользователь").Код,
		//	МА,
		//	ПараметрыСеанса.ЭтоТестоваяСреда,
		//	ИмяФайла);
			
		//ЗаписьФайла = ВнешниеИсточникиДанных.ВнешнееХранилищеДанных.Таблицы.dbo_extFiles.СоздатьМенеджерЗаписи();
		
		//ЗаписьФайла = ВнешниеИсточникиДанных.ВнешнееХранилищеДанных.Таблицы.dbo_extFiles.СоздатьОбъект();
		
		РазмерДанных = Данные.Размер();
		
		Польз = ОбщегоНазначения.Получить_глЗначениеПеременной("глТекущийПользователь");
		
		ЗаписьФайла.data = Данные;
		ЗаписьФайла.fileExt				= Строка(РасширениеФайла);
		ЗаписьФайла.typeFile			= ТипДокумента.Код;
		ЗаписьФайла.createDate			= ТекущаяДата();
		ЗаписьФайла.dataSize			= РазмерДанных;
		ЗаписьФайла.unloadedToAdminka	= Ложь;//Документ.ПереданНаСервер
		ЗаписьФайла.unloadingTime		= ТекущаяДата();//ДатаПередачиНаСервер
		ЗаписьФайла.MA					= МА;
		ЗаписьФайла.userId				= Польз.Код; 
		//глЗначениеПеременной("глТекущийПользователь").Код;
		ЗаписьФайла.isTest				= ПараметрыСеанса.ЭтоТестоваяСреда;
		ЗаписьФайла.fileName			= ИмяФайла;
		//Асеев 21.06.2022 (Задача № 4821)>>>
		ЗаписьФайла.withoutOrders		= ФайлБезЗаказов;
		//Асеев 21.06.2022 (Задача № 4821)<<<
						
		//ПроверкаЗаполнения
		//ДатаЗаписи = Дата(2020,02,17);
		//
		//ЗаписьФайла.createDate = ДатаЗаписи;
		//ЗаписьФайла.data = Неопределено;
		//ЗаписьФайла.dataSize = 45;
		//ЗаписьФайла.fileExt = "новый";
		//ЗаписьФайла.isTest = Истина;
		//ЗаписьФайла.typeFile = 45;
		//ЗаписьФайла.unloadedToAdminka = Ложь;//Документ.ПереданНаСервер
		//ЗаписьФайла.unloadingTime = ДатаЗаписи;//ДатаПередачиНаСервер
		//ЗаписьФайла.userId = "123456789";
		
		ЗаписьФайла.Записать();
		
		lem.ЗадержкаВыполненияКодаЧерезСетевойИнтерфейс(1);
		
		ID = ВнешниеИсточникиДанных.ВнешнееХранилищеДанных.dbo_fn_getIdExtFiles(РазмерДанных);
		
		
		//ЗаписьФайла.Прочитать();
		
		//ID = ЗаписьФайла.id;
		
	Исключение
		lem.ОтправитьНормальноеСообщениеАдминам("Ошибка записи файла во внешний источник данных", ОписаниеОшибки(),);
	КонецПопытки;
	
	Возврат ID;
	
КонецФункции

//Возвращает список значений (АдресВХ, ИмяФайла) с полученными файлами из внешнего хранилища
//СписокID - список значений (число)
//СписокТипыДокументов - список значений (спр.ТипыПрикрепленныхДокументов.Код)
Функция ПолучитьДанныеИзВнешнегоХранилища(СписокID, СписокТипыДокументов, СоответствиеВнешнихИдентификаторов = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	dbo_extFiles.Ссылка КАК Ссылка,
		|	dbo_extFiles.id КАК id,
		|	dbo_extFiles.data КАК data,
		|	dbo_extFiles.fileExt КАК fileExt,
		|	dbo_extFiles.typeFile КАК typeFile,
		|	dbo_extFiles.createDate КАК createDate,
		|	dbo_extFiles.dataSize КАК dataSize,
		|	dbo_extFiles.unloadedToAdminka КАК unloadedToAdminka,
		|	dbo_extFiles.unloadingTime КАК unloadingTime,
		|	dbo_extFiles.userId КАК userId,
		|	dbo_extFiles.MA КАК MA,
		|	dbo_extFiles.isTest КАК isTest,
		|	dbo_extFiles.fileName КАК fileName
		|ИЗ
		|	ВнешнийИсточникДанных.ВнешнееХранилищеДанных.Таблица.dbo_extFiles КАК dbo_extFiles
		|ГДЕ
		|	dbo_extFiles.id В(&СписокID)
		|	И dbo_extFiles.typeFile В(&СписокТипыДокументов)";
	
	Запрос.УстановитьПараметр("СписокID", СписокID);
	Запрос.УстановитьПараметр("СписокТипыДокументов", СписокТипыДокументов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокФайлов = Новый СписокЗначений;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() цикл
		ДД = ВыборкаДетальныеЗаписи.data;
		ИмяФйла = ""+ВыборкаДетальныеЗаписи.fileName+"."+ВыборкаДетальныеЗаписи.fileExt;
		СписокФайлов.Добавить(ПоместитьВоВременноеХранилище(ДД), ИмяФйла);
		
		//CeHbKA 05.08.2020
		Если СоответствиеВнешнихИдентификаторов <> Неопределено Тогда
			СоответствиеВнешнихИдентификаторов.Добавить(ВыборкаДетальныеЗаписи.id);	
		КонецЕсли;
		//CeHbKA 05.08.2020
		
	КонецЦикла;
	
	Возврат СписокФайлов;
	
КонецФункции