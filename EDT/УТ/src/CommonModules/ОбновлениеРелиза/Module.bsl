Функция ВыполнитьОбновлениеНаНовыйРелиз() Экспорт 
	#Если Клиент Тогда
		
		

	Если СокрЛП(ПараметрыСеанса.ТекущийПользователь.Наименование) = "Администратор УТЛ" Тогда
		
		Попытка
			
			ПоследняяДатаОбновленияКонфигурации = Константы.ПоследняяДатаОбновленияКонфигурации.Получить();
			ПоследняяДатаОбработчика = Константы.ПоследняяДатаОбработчика.Получить();
			
			ТекущаяДатаОбновленияКонфигурации = Дата(1,1,1);
			
			мС=Новый Массив;
			мС.Добавить("_$InfoBase$_.DBConfigUpdate" );                             
			стФ= Новый Структура("ДатаНачала,Событие");
			стФ.ДатаНачала=ТекущаяДата() - 3*60*60*24;
			стФ.Событие=мС;
			ТЗ=Новый ТаблицаЗначений();
			ТЗ.Колонки.Добавить("Дата");
			ТЗ.Колонки.Добавить("Событие");
			ВыгрузитьЖурналРегистрации(ТЗ,стФ,"Дата,Событие");
			Для каждого Эл из ТЗ Цикл 
				ТекущаяДатаОбновленияКонфигурации = Эл.Дата;
			КонецЦикла;
			           
			Если ПоследняяДатаОбновленияКонфигурации < ТекущаяДатаОбновленияКонфигурации Или Не ЗначениеЗаполнено(ПоследняяДатаОбновленияКонфигурации) Или Не ЗначениеЗаполнено(ТекущаяДатаОбновленияКонфигурации) Тогда
				
				Если ТекущаяДатаОбновленияКонфигурации = Дата(1,1,1) Тогда
					ТекущаяДатаОбновленияКонфигурации = ТекущаяДата();
				КонецЕсли;	
				
				СтруктураВозврата = ВыполнитьОбновлениеРелизаВФоне(ПоследняяДатаОбработчика, ПоследняяДатаОбновленияКонфигурации, Истина);
				
				Если СтруктураВозврата.МаксимальнаяДатаОбработчика = Дата(1,1,1) Тогда
					Возврат Истина;
				КонецЕсли;	
				
				Режим = РежимДиалогаВопрос.ДаНет;
				Ответ = Вопрос("ПоследняяДатаОбновленияКонфигурации: " + ПоследняяДатаОбновленияКонфигурации + ", ТекущаяДатаОбновленияКонфигурации: " + ТекущаяДатаОбновленияКонфигурации + ". Выполнить обновление данных?", Режим, 0);
				Если Ответ = КодВозвратаДиалога.Нет Тогда
					Возврат Истина;
				КонецЕсли; 
				
				Форма = ПолучитьФорму("Обработка.ОбновлениеРелиза.Форма");
				Форма.Объект.ПоследняяДатаОбработчика = ПоследняяДатаОбработчика;
				Форма.Объект.ТекущаяДатаОбновленияКонфигурации = ТекущаяДатаОбновленияКонфигурации;
				Форма.Объект.ПоследняяДатаОбновленияКонфигурации = ПоследняяДатаОбновленияКонфигурации;

				
				Для Каждого СтрокаМассивОбработчиков Из СтруктураВозврата.МассивОбработчиков Цикл 
					
					НоваяСтрока = Форма.Объект.Обработчики.Добавить();
					НоваяСтрока.Обработчик = СтрокаМассивОбработчиков;
					НоваяСтрока.Галка = Истина;
					
				КонецЦикла;	
				Форма.Открыть();
		
				
			КонецЕсли;	
			
		Исключение
			
			Сообщить(ОписаниеОшибки());
			
		КонецПопытки;
		
	КонецЕсли;
	
	#КонецЕсли
	
	Возврат Истина;
	
КонецФункции

Функция ВыполнитьОбновлениеРелизаВФоне(ПоследняяДатаОбработчика, ПоследняяДатаОбновленияКонфигурации, ЭтоЗапросДаты = Ложь, МассивОбработчиков = Неопределено) Экспорт 
	
	Попытка
		
		Если ЭтоЗапросДаты Тогда 
			МассивОбработчиков = Новый Массив;
		КонецЕсли;	
		
		МаксимальнаяДатаОбработчика = Дата(1,1,1); 
		
		//ДатаОбработчика = Образец(ПоследняяДатаОбработчика, ЭтоЗапросДаты);
		//Если ДатаОбработчика >= МаксимальнаяДатаОбработчика Тогда
		//	МаксимальнаяДатаОбработчика = ДатаОбработчика;
		//КонецЕсли;
		
		//И т.д.
		
				
		ДатаОбработчика = Образец_21_08_2017(ПоследняяДатаОбработчика, ЭтоЗапросДаты, МассивОбработчиков);
		Если ДатаОбработчика >= МаксимальнаяДатаОбработчика Тогда
			МаксимальнаяДатаОбработчика = ДатаОбработчика;
		КонецЕсли;
		
		//
		//
		//ДатаОбработчика = ДобавитьНовоеУведомление(ПоследняяДатаОбработчика, ЭтоЗапросДаты);
		//Если ДатаОбработчика >= МаксимальнаяДатаОбработчика Тогда
		//	МаксимальнаяДатаОбработчика = ДатаОбработчика;
		//КонецЕсли;
		//
		//		
		//ДатаОбработчика = ДобавитьНовоеУведомление_РегламентСозданиеМестПоЗаказам_Ошибка(ПоследняяДатаОбработчика, ЭтоЗапросДаты);
		//Если ДатаОбработчика >= МаксимальнаяДатаОбработчика Тогда
		//	МаксимальнаяДатаОбработчика = ДатаОбработчика;
		//КонецЕсли;

		//
		//ДатаОбработчика = ДобавитьНовоеУведомление_ПерекинутьИзУдалитьРежимыПечатиЧековВМППоТранспорту(ПоследняяДатаОбработчика, ЭтоЗапросДаты);
		//Если ДатаОбработчика >= МаксимальнаяДатаОбработчика Тогда
		//	МаксимальнаяДатаОбработчика = ДатаОбработчика;
		//КонецЕсли;
		//
		//ДатаОбработчика = ДобавитьНовоеУведомление_ОбработкаУдаленнойПриемкиЭкипажей_Ошибка(ПоследняяДатаОбработчика, ЭтоЗапросДаты);
		//Если ДатаОбработчика >= МаксимальнаяДатаОбработчика Тогда
		//	МаксимальнаяДатаОбработчика = ДатаОбработчика;
		//КонецЕсли;
		
		Если ЭтоЗапросДаты Тогда
			
			Возврат Новый Структура("МаксимальнаяДатаОбработчика, МассивОбработчиков", МаксимальнаяДатаОбработчика, МассивОбработчиков);
						
		КонецЕсли;	
		
		
		
		
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "ОбновлениеЗавершено";
		Сообщение.Сообщить();
		
		Если ЗначениеЗаполнено(ПоследняяДатаОбновленияКонфигурации) Тогда
			Константы.ПоследняяДатаОбновленияКонфигурации.Установить(ПоследняяДатаОбновленияКонфигурации);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(МаксимальнаяДатаОбработчика) Тогда
			Константы.ПоследняяДатаОбработчика.Установить(МаксимальнаяДатаОбработчика);
		КонецЕсли;	
		
	Исключение
		
		ЗаписьЖурналаРегистрации("ОбновлениеРелиза", УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки());
		Возврат Дата(1,1,1);
		
	КонецПопытки;
	
КонецФункции	

#Область НашиПроцедуры

Функция Образец(ПоследняяДатаОбработчика, ЭтоЗапросДаты = Ложь)
	
	ДатаОбработчика =  Дата(2017,07,27,12,05,00);
	
	Если ЭтоЗапросДаты И ПоследняяДатаОбработчика < ДатаОбработчика Тогда
		
		Возврат ДатаОбработчика;
		
	ИначеЕсли 	ЭтоЗапросДаты Тогда
		
		Возврат Дата(1,1,1);
		
	КонецЕсли;	

	
	Если ПоследняяДатаОбработчика > ДатаОбработчика Или ПоследняяДатаОбработчика = Дата(1,1,1) Тогда
		
		Обработчик =  "Образец"; 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Обработчик" + Символы.ПС + Обработчик;
		Сообщение.Сообщить();
		
		Попытка 
			
			ЧислоЭлементов = 3;
			Прогресс = 0;
			
			Для Сч = 1 По ЧислоЭлементов Цикл 
				
				//Док = Документы.ЗакрытиеЗаказов.НайтиПоНомеру("000080252");
				//ДокОбъект = Док.ПолучитьОбъект();
				//ДокОбъект.ДополнительныеСвойства.Вставить("НомерПотокаПриОтказе", 1);
				//ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
				
				Процент = Окр(Сч/ЧислоЭлементов*100);
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Прогресс" + Символы.ПС + Процент;
				Сообщение.Сообщить();
				
			КонецЦикла;	
			
		Исключение
			
			ТекстОшибки = ОписаниеОшибки();
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка" + Символы.ПС + "Обработчик" + Обработчик + Символы.ПС + ТекстОшибки;
			Сообщение.Сообщить();
			
		КонецПопытки;	
		
	КонецЕсли;
	
	Возврат ДатаОбработчика;
	
КонецФункции	

Функция ДобавитьНовоеУведомление(ПоследняяДатаОбработчика, ЭтоЗапросДаты = Ложь)
	
	ДатаОбработчика =  Дата(2017,08,02,10,43,00);
	
	Если ЭтоЗапросДаты И ПоследняяДатаОбработчика < ДатаОбработчика Тогда
		
		Возврат ДатаОбработчика;
		
	ИначеЕсли 	ЭтоЗапросДаты Тогда
		
		Возврат Дата(1,1,1);
		
	КонецЕсли;	

	
	Если ПоследняяДатаОбработчика < ДатаОбработчика Или ПоследняяДатаОбработчика = Дата(1,1,1) Тогда
		
		Обработчик =  "ДобавитьНовоеУведомление"; 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Обработчик" + Символы.ПС + Обработчик;
		Сообщение.Сообщить();
		
		Попытка 
			
				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.РейсПерекидка_ОшибкаПерекидки);
				НаборЗаписей.Отбор.АдресEmail.Установить("artur.borisov@strizh-logistic.ru");
					
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.РейсПерекидка_ОшибкаПерекидки;
				Запись.АдресEmail = "artur.borisov@strizh-logistic.ru";
				
				НаборЗаписей.Записать();
				
				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.РейсПерекидка_ОшибкаПерекидки);
				НаборЗаписей.Отбор.АдресEmail.Установить("evgeniy.marochkin@strizh-logistic.ru");
				
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.РейсПерекидка_ОшибкаПерекидки;
				Запись.АдресEmail = "evgeniy.marochkin@strizh-logistic.ru";
				
				НаборЗаписей.Записать();

				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.РейсПерекидка_ОшибкаПерекидки);
				НаборЗаписей.Отбор.АдресEmail.Установить("v.yakurnov@strizh-logistic.ru");
				
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.РейсПерекидка_ОшибкаПерекидки;
				Запись.АдресEmail = "v.yakurnov@strizh-logistic.ru";

			    НаборЗаписей.Записать();

				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Прогресс" + Символы.ПС + 100;
				Сообщение.Сообщить();
				
		Исключение
			
			ТекстОшибки = ОписаниеОшибки();
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка" + Символы.ПС + "Обработчик" + Обработчик + Символы.ПС + ТекстОшибки;
			Сообщение.Сообщить();
			
		КонецПопытки;	
		
	КонецЕсли;
	
	Возврат ДатаОбработчика;
	
КонецФункции	

Функция ДобавитьНовоеУведомление_РегламентСозданиеМестПоЗаказам_Ошибка(ПоследняяДатаОбработчика, ЭтоЗапросДаты = Ложь)
	
	ДатаОбработчика =  Дата(2017,08,07,12,00,00);
	
	Если ЭтоЗапросДаты И ПоследняяДатаОбработчика < ДатаОбработчика Тогда
		
		Возврат ДатаОбработчика;
		
	ИначеЕсли 	ЭтоЗапросДаты Тогда
		
		Возврат Дата(1,1,1);
		
	КонецЕсли;	
	
	Если ПоследняяДатаОбработчика < ДатаОбработчика Или ПоследняяДатаОбработчика = Дата(1,1,1) Тогда
		
		Обработчик =  "ДобавитьНовоеУведомление_РегламентСозданиеМестПоЗаказам_Ошибка"; 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Обработчик" + Символы.ПС + Обработчик;
		Сообщение.Сообщить();
		
		Попытка 
			
				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.РегламентСозданиеМестПоЗаказам_Ошибка);
				НаборЗаписей.Отбор.АдресEmail.Установить("artur.borisov@strizh-logistic.ru");
					
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.РегламентСозданиеМестПоЗаказам_Ошибка;
				Запись.АдресEmail = "artur.borisov@strizh-logistic.ru";
				
				НаборЗаписей.Записать();
				
				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.РегламентСозданиеМестПоЗаказам_Ошибка);
				НаборЗаписей.Отбор.АдресEmail.Установить("evgeniy.marochkin@strizh-logistic.ru");
				
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.РегламентСозданиеМестПоЗаказам_Ошибка;
				Запись.АдресEmail = "evgeniy.marochkin@strizh-logistic.ru";
				
				НаборЗаписей.Записать();

				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.РегламентСозданиеМестПоЗаказам_Ошибка);
				НаборЗаписей.Отбор.АдресEmail.Установить("v.yakurnov@strizh-logistic.ru");
				
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.РегламентСозданиеМестПоЗаказам_Ошибка;
				Запись.АдресEmail = "v.yakurnov@strizh-logistic.ru";

			    НаборЗаписей.Записать();

				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Прогресс" + Символы.ПС + 100;
				Сообщение.Сообщить();
				
		Исключение
			
			ТекстОшибки = ОписаниеОшибки();
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка" + Символы.ПС + "Обработчик" + Обработчик + Символы.ПС + ТекстОшибки;
			Сообщение.Сообщить();
			
		КонецПопытки;	
		
	КонецЕсли;
	
	Возврат ДатаОбработчика;
	
КонецФункции	

Функция ДобавитьНовоеУведомление_ПерекинутьИзУдалитьРежимыПечатиЧековВМППоТранспорту(ПоследняяДатаОбработчика, ЭтоЗапросДаты = Ложь)
	
	//отключил
	Возврат Дата(1,1,1);
    //отключил
	
	ДатаОбработчика =  Дата(2017,08,08,17,53,00);
	
	Если ЭтоЗапросДаты И ПоследняяДатаОбработчика < ДатаОбработчика Тогда
		
		Возврат ДатаОбработчика;
		
	ИначеЕсли 	ЭтоЗапросДаты Тогда
		
		Возврат Дата(1,1,1);
		
	КонецЕсли;	
	
	Если ПоследняяДатаОбработчика < ДатаОбработчика Или ПоследняяДатаОбработчика = Дата(1,1,1) Тогда
		
		Обработчик =  "ДобавитьНовоеУведомление_ПерекинутьИзУдалитьРежимыПечатиЧековВМППоТранспорту"; 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Обработчик" + Символы.ПС + Обработчик;
		Сообщение.Сообщить();
		
		Попытка 
			
			НачатьТранзакцию();
			НаборЗаписей = РегистрыСведений.УдалитьРежимыПечатиЧековВМППоТранспорту.СоздатьНаборЗаписей();
			НаборЗаписей.Прочитать();
			
			НаборЗаписейДополнительныеПараметрыТранспорта = РегистрыСведений.ДополнительныеПараметрыТранспорта.СоздатьНаборЗаписей();
			НаборЗаписейДополнительныеПараметрыТранспорта.Загрузить(НаборЗаписей.Выгрузить(,"Период, Транспорт, РежимПечатиЧеков"));
			НаборЗаписейДополнительныеПараметрыТранспорта.Записать();
			
			ЗафиксироватьТранзакцию();
			
			ЗаписьЖурналаРегистрации("ОбновлениеРелиза",УровеньЖурналаРегистрации.Информация,,, Обработки);
			
				
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = ОписаниеОшибки();
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка" + Символы.ПС + "Обработчик" + Обработчик + Символы.ПС + ТекстОшибки;
			Сообщение.Сообщить();
			
		КонецПопытки;	
		
	КонецЕсли;
	
	Возврат ДатаОбработчика;
	
КонецФункции	

Функция ДобавитьНовоеУведомление_ОбработкаУдаленнойПриемкиЭкипажей_Ошибка(ПоследняяДатаОбработчика, ЭтоЗапросДаты = Ложь)
	
	ДатаОбработчика =  Дата(2017,08,07,13,00,00);
	
	Если ЭтоЗапросДаты И ПоследняяДатаОбработчика < ДатаОбработчика Тогда
		
		Возврат ДатаОбработчика;
		
	ИначеЕсли 	ЭтоЗапросДаты Тогда
		
		Возврат Дата(1,1,1);
		
	КонецЕсли;	
	
	Если ПоследняяДатаОбработчика < ДатаОбработчика Или ПоследняяДатаОбработчика = Дата(1,1,1) Тогда
		
		Обработчик =  "ДобавитьНовоеУведомление_ОбработкаУдаленнойПриемкиЭкипажей_Ошибка"; 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Обработчик" + Символы.ПС + Обработчик;
		Сообщение.Сообщить();
		
		Попытка 
			
				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.ОбработкаУдаленнойПриемкиЭкипажей_Ошибка);
				НаборЗаписей.Отбор.АдресEmail.Установить("artur.borisov@strizh-logistic.ru");
					
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.ОбработкаУдаленнойПриемкиЭкипажей_Ошибка;
				Запись.АдресEmail = "artur.borisov@strizh-logistic.ru";
				
				НаборЗаписей.Записать();
				
				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.ОбработкаУдаленнойПриемкиЭкипажей_Ошибка);
				НаборЗаписей.Отбор.АдресEmail.Установить("evgeniy.marochkin@strizh-logistic.ru");
				
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.ОбработкаУдаленнойПриемкиЭкипажей_Ошибка;
				Запись.АдресEmail = "evgeniy.marochkin@strizh-logistic.ru";
				
				НаборЗаписей.Записать();

				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.ОбработкаУдаленнойПриемкиЭкипажей_Ошибка);
				НаборЗаписей.Отбор.АдресEmail.Установить("v.yakurnov@strizh-logistic.ru");
				
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.ОбработкаУдаленнойПриемкиЭкипажей_Ошибка;
				Запись.АдресEmail = "v.yakurnov@strizh-logistic.ru";

			    НаборЗаписей.Записать();

				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Прогресс" + Символы.ПС + 100;
				Сообщение.Сообщить();
				
		Исключение
			
			ТекстОшибки = ОписаниеОшибки();
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка" + Символы.ПС + "Обработчик" + Обработчик + Символы.ПС + ТекстОшибки;
			Сообщение.Сообщить();
			
		КонецПопытки;	
		
	КонецЕсли;
	
	Возврат ДатаОбработчика;

	
КонецФункции	

Функция ДобавитьНовоеУведомление_Регламент_рэОтправкаДанныхДляОбмена_ОшибкаОтправки(ПоследняяДатаОбработчика, ЭтоЗапросДаты = Ложь)
	
	ДатаОбработчика =  Дата(2017,08,17,10,35,00);
	
	Если ЭтоЗапросДаты И ПоследняяДатаОбработчика < ДатаОбработчика Тогда
		
		Возврат ДатаОбработчика;
		
	ИначеЕсли 	ЭтоЗапросДаты Тогда
		
		Возврат Дата(1,1,1);
		
	КонецЕсли;	
	
	Если ПоследняяДатаОбработчика < ДатаОбработчика Или ПоследняяДатаОбработчика = Дата(1,1,1) Тогда
		
		Обработчик =  "ДобавитьНовоеУведомление_Регламент_рэОтправкаДанныхДляОбмена_ОшибкаОтправки"; 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Обработчик" + Символы.ПС + Обработчик;
		Сообщение.Сообщить();
		
		Попытка 
			
				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.Регламент_рэОтправкаДанныхДляОбмена_ОшибкаОтправки);
				НаборЗаписей.Отбор.АдресEmail.Установить("artur.borisov@strizh-logistic.ru");
					
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.Регламент_рэОтправкаДанныхДляОбмена_ОшибкаОтправки;
				Запись.АдресEmail = "artur.borisov@strizh-logistic.ru";
				
				НаборЗаписей.Записать();
				
				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.Регламент_рэОтправкаДанныхДляОбмена_ОшибкаОтправки);
				НаборЗаписей.Отбор.АдресEmail.Установить("evgeniy.marochkin@strizh-logistic.ru");
				
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.Регламент_рэОтправкаДанныхДляОбмена_ОшибкаОтправки;
				Запись.АдресEmail = "evgeniy.marochkin@strizh-logistic.ru";
				
				НаборЗаписей.Записать();

				НаборЗаписей = РегистрыСведений.АдресаАбонентовПолученияУведомлений.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ВидСобытия.Установить(Перечисления.ВидыСобытийУведомленияАбонентов.Регламент_рэОтправкаДанныхДляОбмена_ОшибкаОтправки);
				НаборЗаписей.Отбор.АдресEmail.Установить("v.yakurnov@strizh-logistic.ru");
				
				Запись = НаборЗаписей.Добавить();
				Запись.ВидСобытия = Перечисления.ВидыСобытийУведомленияАбонентов.Регламент_рэОтправкаДанныхДляОбмена_ОшибкаОтправки;
				Запись.АдресEmail = "v.yakurnov@strizh-logistic.ru";

			    НаборЗаписей.Записать();

				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Прогресс" + Символы.ПС + 100;
				Сообщение.Сообщить();
				
		Исключение
			
			ТекстОшибки = ОписаниеОшибки();
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка" + Символы.ПС + "Обработчик" + Обработчик + Символы.ПС + ТекстОшибки;
			Сообщение.Сообщить();
			
		КонецПопытки;	
		
	КонецЕсли;
	
	Возврат ДатаОбработчика;

	
КонецФункции	

Функция Образец_21_08_2017(ПоследняяДатаОбработчика, ЭтоЗапросДаты = Ложь, МассивОбработчиков)
	
	ДатаОбработчика =  Дата(2017,08,21,17,56,00);
	Обработчик =  "Образец_21_08_2017"; 
	
	Если ЭтоЗапросДаты И ПоследняяДатаОбработчика < ДатаОбработчика Тогда
		
		МассивОбработчиков.Добавить(Обработчик);
		
		Возврат ДатаОбработчика;
		
	ИначеЕсли 	ЭтоЗапросДаты Тогда
		
		Возврат Дата(1,1,1);
		
	КонецЕсли;
	
	ЕстьВСписке = Ложь;
	
	Для Каждого СтрокаМассиваОбработчиков Из МассивОбработчиков Цикл 
		
		Если СтрокаМассиваОбработчиков = Обработчик Тогда
			ЕстьВСписке = Истина;
			Прервать;
		КонецЕсли;	
		
	КонецЦикла;
	
	Если Не ЕстьВСписке Тогда
		Возврат Дата(1,1,1);
	КонецЕсли;	
	
	Если ПоследняяДатаОбработчика < ДатаОбработчика Или ПоследняяДатаОбработчика = Дата(1,1,1) Тогда
		
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Обработчик" + Символы.ПС + Обработчик;
		Сообщение.Сообщить();
		
		Попытка 
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Прогресс" + Символы.ПС + 100;
				Сообщение.Сообщить();
				
		Исключение
			
			ТекстОшибки = ОписаниеОшибки();
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка" + Символы.ПС + "Обработчик" + Обработчик + Символы.ПС + ТекстОшибки;
			Сообщение.Сообщить();
			
		КонецПопытки;	
		
	КонецЕсли;
	
	Возврат ДатаОбработчика;

	
КонецФункции	



#КонецОбласти 

