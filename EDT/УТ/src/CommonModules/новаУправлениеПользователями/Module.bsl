
//Возвращает георамку пользователя, если она не назначена, 
//возвращается георамка Санкт-Петербурга
//
//  Параметры:
//    Пользователь - <СправочникСсылка.новаПользователи> пользователь,
//                   для которого определяется георамка
//
//  Возвращаемое значение:
//    <Структура>
//      МинимальнаяШирота - <Число 20,17> минимальная георамки
//      МинимальнаяДолгота - <Число 20,17> минимальная долгота георамки
//      МаксимальнаяШирота - <Число 20,17> максимальная широта георамки
//      МаксимальнаяДолгота - <Число 20,17> максимальная долгота георамки
//
Функция ПолучитьГеорамкуПоУмолчанию(Пользователь = Неопределено) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("МинимальнаяШирота", 0);
	Результат.Вставить("МинимальнаяДолгота", 0);
	Результат.Вставить("МаксимальнаяШирота", 0);
	Результат.Вставить("МаксимальнаяДолгота", 0);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|    МинимальнаяШирота
	|    ,МинимальнаяДолгота
	|    ,МаксимальнаяШирота
	|    ,МаксимальнаяДолгота
	|  ИЗ
	|    Справочник.новаПользователи
	|  ГДЕ
	|    Ссылка = &Пользователь
	|");
	
	Запрос.УстановитьПараметр("Пользователь", ?(Пользователь = Неопределено, ПараметрыСеанса.новаТекущийПользователь, Пользователь));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Результат.МинимальнаяШирота = Выборка.МинимальнаяШирота;
		Результат.МинимальнаяДолгота = Выборка.МинимальнаяДолгота;
		Результат.МаксимальнаяШирота = Выборка.МаксимальнаяШирота;
		Результат.МаксимальнаяДолгота = Выборка.МаксимальнаяДолгота;
	КонецЕсли;
	
	Если Результат.МинимальнаяШирота = Результат.МаксимальнаяШирота
	     или Результат.МинимальнаяДолгота = Результат.МаксимальнаяДолгота Тогда
		
		ГеорамкаПоУмолчанию = новаКарты.ПолучитьСписокГеорамокПоУмолчанию().Найти("СанктПетербург", "Имя");
		Если ГеорамкаПоУмолчанию <> Неопределено Тогда
			
			Результат.МинимальнаяШирота = ГеорамкаПоУмолчанию.МинимальнаяШирота;
			Результат.МинимальнаяДолгота = ГеорамкаПоУмолчанию.МинимальнаяДолгота;
			Результат.МаксимальнаяШирота = ГеорамкаПоУмолчанию.МаксимальнаяШирота;
			Результат.МаксимальнаяДолгота = ГеорамкаПоУмолчанию.МаксимальнаяДолгота;
		КонецЕсли;
	КонецЕсли;;
	
	Возврат Результат;
	
КонецФункции
 
//Проверяет наличие прав на подключение к КСЛ у текущего пользователя
//
//  Параметры:
//    ТихийРежим  - <Булево> Истина - вывести предупреждение, если прав не хватает.
//
//  Возвращаемое значение:
//    <Булево> - Истина, пользователь может подключиться к КСЛ
//               Ложь, пользователю отказано в доступе
//
Функция ПользовательИмеетПравоРаботатьСКСЛ(ТихийРежим = Ложь) Экспорт
	
	Результат = Истина;
	
	//Если не ( РольДоступна(Метаданные.Роли.новаАдминистраторУТЛ)
	//          или РольДоступна(Метаданные.Роли.новаПользовательУТЛ)) Тогда
	//	
	//	#Если Клиент Тогда
	//		Если не ТихийРежим Тогда
	//			
	//			Предупреждение("У Вас нет прав для использования модулей" + Символы.ПС + "конфигурации ""Управление транспортной логистикой""." + Символы.ПС + "Обратитесь к администратору");
	//		КонецЕсли;
	//	#КонецЕсли
	//	
	//	Результат = Ложь;
	//КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
