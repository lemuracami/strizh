
Процедура ЗаписатьДополнительныеПараметрыПоВозврату(Документ, Параметры) Экспорт
	ТекВр = ТекущаяДата();
	Наб = РегистрыСведений.ПараметрыИнтеграцииВозвратКомитенту.СоздатьНаборЗаписей();
	Наб.Отбор.Документ.Установить(Документ);
	Наб.Отбор.ТипОперации.Установить(Параметры.ТипОперации);
	Наб.Отбор.Период.Установить(ТекВр);
	
	Нов = Наб.Добавить();
	ЗаполнитьЗначенияСвойств(Нов, Параметры);
	Нов.Период = ТекВр;
	Нов.Документ = Документ;
	
	Наб.Записать();
Конецпроцедуры	


Функция ПолучитьСтатусПередачиТранспортировкиВДМ(Транспортировка) Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ПараметрыИнтеграцииВозвратКомитентуСрезПоследних.дмСтатус КАК Статус,
	            |	ПараметрыИнтеграцииВозвратКомитентуСрезПоследних.дмGUIDСообщения КАК GUIDСообщения
	            |ИЗ
	            |	РегистрСведений.ПараметрыИнтеграцииВозвратКомитенту.СрезПоследних КАК ПараметрыИнтеграцииВозвратКомитентуСрезПоследних
	            |ГДЕ
	            |	ПараметрыИнтеграцииВозвратКомитентуСрезПоследних.Документ = &Транспортировка
	            |	И ПараметрыИнтеграцииВозвратКомитентуСрезПоследних.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийИнтеграцияДМПоВозвратам.ПередачаДанныхОТранспортировке)";
	Зап.УстановитьПараметр("Транспортировка", Транспортировка);
	Выб = Зап.Выполнить().Выбрать();
	
	Струк = Новый Структура;
	
	Если Выб.Следующий() Тогда
		Если СокрлП(Выб.Статус = "200") Или СокрлП(Выб.Статус = "0") Тогда
			Струк.Вставить("Результат", Истина);
			Струк.Вставить("GUIDТранспортировки", Выб.GUIDСообщения);
			Возврат Истина;
		ИначеЕсли Выб.Статус = "400" Тогда	
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("GUIDТранспортировки", "");
		Иначе	
			Струк.Вставить("Результат", Ложь);
			Струк.Вставить("GUIDТранспортировки", "");
		КонецеСли;	
	Иначе
		Струк.Вставить("Результат", Ложь);
		Струк.Вставить("GUIDТранспортировки", "");
	КонецеСли;	
	
	Возврат Струк;
КонецФункции	

Функция ПроверитьГрупповуюОтправкуДМНаСервере(МассивВозвратов) Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ВозвратТоваровПоставщику.Ссылка КАК Док,
	            |	ВозвратТоваровПоставщику.Контрагент КАК Контрагент,
	            |	ПараметрыИнтеграцииВозвратКомитентуСрезПоследних.дмНомерЕдиницыОбработки КАК дмНомерЕдиницыОбработки,
	            |	ВозвратТоваровПоставщику.Номер КАК Номер
	            |ИЗ
	            |	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыИнтеграцииВозвратКомитенту.СрезПоследних КАК ПараметрыИнтеграцииВозвратКомитентуСрезПоследних
	            |		ПО (ВозвратТоваровПоставщику.Ссылка = (ВЫРАЗИТЬ(ПараметрыИнтеграцииВозвратКомитентуСрезПоследних.Документ КАК Документ.ВозвратТоваровПоставщику)))
	            |			И (ПараметрыИнтеграцииВозвратКомитентуСрезПоследних.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийИнтеграцияДМПоВозвратам.ПроверкаСтатусаВозврата))
	            |ГДЕ
	            |	ВозвратТоваровПоставщику.Ссылка В(&МассивВозвратов)
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ВозвратТоваровПоставщику.Ссылка КАК Док,
	            |	ТранспортировкаДокументы.Ссылка.Номер КАК НомерТранспортировки,
	            |	ВозвратТоваровПоставщику.Номер КАК Номер
	            |ИЗ
	            |	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Транспортировка.Документы КАК ТранспортировкаДокументы
	            |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыИнтеграцииВозвратКомитенту.СрезПоследних КАК ПараметрыИнтеграцииВозвратКомитентуСрезПоследних
	            |			ПО ТранспортировкаДокументы.Ссылка = ПараметрыИнтеграцииВозвратКомитентуСрезПоследних.Документ
	            |				И (ПараметрыИнтеграцииВозвратКомитентуСрезПоследних.дмСтатус = ""200"")
	            |				И (ПараметрыИнтеграцииВозвратКомитентуСрезПоследних.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийИнтеграцияДМПоВозвратам.ПередачаДанныхОТранспортировке))
	            |		ПО ВозвратТоваровПоставщику.Ссылка = ТранспортировкаДокументы.Документ
	            |ГДЕ
	            |	ВозвратТоваровПоставщику.Ссылка В(&МассивВозвратов)
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	Контрагенты.Ссылка КАК ДМ
	            |ИЗ
	            |	Справочник.Контрагенты КАК Контрагенты
	            |ГДЕ
	            |	Контрагенты.Код = ""Shop_428""";
	Зап.УстановитьПараметр("МассивВозвратов", МассивВозвратов);
	
	СтрукВозврата = Новый Структура;
	МассивОшибок = Новый Массив;
	ЕстьОшибка = ложь;
	
	Рез = Зап.ВыполнитьПакет();
	
	МагДМ = "";
	
	Выб = Рез[0].Выбрать();
	
	ВыбДМ = Рез[2].Выбрать();
	Если ВыбДМ.Следующий() Тогда
		МагДМ = ВыбДМ.ДМ;
	КонецеСли;	
	
	
	Пока Выб.Следующий() Цикл
		Если Выб.Контрагент <> МагДМ Тогда
			ЕстьОшибка = Истина;
			СтрукОшибок = Новый Структура;
			СтрукОшибок.Вставить("НомерДокумента", Выб.Номер);
			СтрукОшибок.Вставить("ОписаниеОшибки", "Возврат НЕ ДМ!");
			МассивОшибок.Добавить(СтрукОшибок);
		КонецеСли;	
		
		Если Не ЗначениеЗаполнено(Выб.дмНомерЕдиницыОбработки) Тогда
			ЕстьОшибка = Истина;
			СтрукОшибок = Новый Структура;
			СтрукОшибок.Вставить("НомерДокумента", Выб.Номер);
			СтрукОшибок.Вставить("ОписаниеОшибки", "Не назначена ЕО ДМ!");
			МассивОшибок.Добавить(СтрукОшибок);
		КонецеСли;	
	КонецЦикла;	
	
	Выб = Рез[1].Выбрать();
	Пока Выб.Следующий() Цикл
		ЕстьОшибка = Истина;
		СтрукОшибок = Новый Структура;
		СтрукОшибок.Вставить("НомерДокумента", Выб.Номер);
		СтрукОшибок.Вставить("ОписаниеОшибки", "Уже была назначена выгруженная транспортировка! Номер транспортировки " + Выб.НомерТранспортировки);
		МассивОшибок.Добавить(СтрукОшибок);
	КонецЦикла;	
	
	СтрукВозврата.Вставить("ЕстьОшибки", ЕстьОшибка);
	СтрукВозврата.Вставить("СписокОшибок", МассивОшибок);
	Возврат СтрукВозврата;
КонецФункции	

Процедура УстановитьСтатусОтправки(МассивВозвратов, Статус) Экспорт

	// МАС - 09.01.2018 - № --->> 
	Для Каждого Док Из МассивВозвратов Цикл
		ОбъектВозврат = Док.ПолучитьОбъект();
		ОбъектВозврат.СтатусВозврата = Статус;
		ОбъектВозврат.Записать(РежимЗаписиДокумента.Запись);
		ОбъектВозврат.Записать(РежимЗаписиДокумента.Проведение);
		// Якурнов: Отправляем данные в Озон 
		// >>>>>>>> Начало 30.10.2018 16:27:53 >>>>>>>>
		Если Статус = Справочники.СтатусыСкладскогоУчета.ВозвратОтправлен Тогда
			ОбъектВозврат.oz_ОтправитьДанныеВозвратовВОзон();
		КонецЕсли;	
		// <<<<<<<< Конец 30.10.2018 16:27:53 <<<<<<<<
		
	КонецЦикла;	
	// <<--- МАС
	
	Для Каждого Док Из МассивВозвратов Цикл
		ЕСли Статус = Справочники.СтатусыСкладскогоУчета.ПодготовленКВозврату Тогда
			ДокументОбъектГУССУ = Документы.ГрупповаяУстановкаСтатусовСкладскогоУчета.СоздатьДокумент();
			ДокументОбъектГУССУ.Дата = ТекущаяДата();
			ДокументОбъектГУССУ.Основание = Док;
			ДокументОбъектГУССУ.Ответственный = ПараметрыСеанса.ТекущийПользователь;
			ДокументОбъектГУССУ.СтатусСкладскогоУчета = Статус;
			
			МасДок = Новый Массив;
			МасДок.Добавить(Док);
			Выборка = ПолучитьЗаказыПоВозвратам(МасДок);
			Пока Выборка.Следующий() Цикл
				СтрокаТЧ = ДокументОбъектГУССУ.СтатусыЗаказов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТЧ,Выборка);
				СтрокаТЧ.СтатусСкладскогоУчета = Статус;
			КонецЦикла;
			
			ДокументОбъектГУССУ.Записать(РежимЗаписиДокумента.Проведение);
		КонецеСли;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьЗаказыПоВозвратам(МассивВозвратов)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ВозвратТоваровПоставщикуТовары.Ссылка.СтатусВозврата КАК СтатусСкладскогоУчета,
        |	РеализацияТоваровУслуг.Ссылка КАК Заказ,
        |	ВозвратТоваровПоставщикуТовары.ТипЗаказа КАК ТипЗаказа
        |ИЗ
        |	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        |		ПО (ЕСТЬNULL(ВозвратТоваровПоставщикуТовары.ДокументПоступления.Номер, ВозвратТоваровПоставщикуТовары.ВозвратТоваровОтПокупателя.Номер) = РеализацияТоваровУслуг.Номер)
        |ГДЕ
        |	ВозвратТоваровПоставщикуТовары.Ссылка.Ссылка В(&Ссылка)
        |
        |СГРУППИРОВАТЬ ПО
        |	ВозвратТоваровПоставщикуТовары.Ссылка.СтатусВозврата,
        |	РеализацияТоваровУслуг.Ссылка,
        |	ВозвратТоваровПоставщикуТовары.ТипЗаказа";
    
    Запрос.УстановитьПараметр("Ссылка", МассивВозвратов);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    Возврат ВыборкаДетальныеЗаписи;


КонецФункции

// Возвращает заказы из СписокЗаказов, у которых на ДатаСтатусов есть статус кладского учета Возврат 1 или Возврат 2
Функция СписокЗаказовСВозвратнымиСтатусами(ДатаСтатусов, СписокЗаказов) Экспорт
	
	СписокСтатусСкладскогоУчета = Новый Массив;
	СписокСтатусСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.Возврат1);
	СписокСтатусСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.Возврат2);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатусыСкладскогоУчетаСрезПоследних.Заказ КАК Заказ
		|ИЗ
		|	РегистрСведений.СтатусыСкладскогоУчета.СрезПоследних(
		|			&Дата,
		|			Заказ В (&МассивЗаказов)
		|				И СтатусСкладскогоУчета В (&СписокСтатусСкладскогоУчета)) КАК СтатусыСкладскогоУчетаСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", ДатаСтатусов);
	Запрос.УстановитьПараметр("МассивЗаказов", СписокЗаказов);
	Запрос.УстановитьПараметр("СписокСтатусСкладскогоУчета", СписокСтатусСкладскогоУчета);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заказ");
	
КонецФункции	
