
// Выполняет загрузку данных в соответствии с настройками обмена
//
// Параметры:
//  Код <Строка>: Код элемента справочника "новаОбменыДанными"
//
Процедура ВыполнитьЗагрузкуДанных(Код) Экспорт 
	
	Если ЗначениеЗаполнено(Код) Тогда
		Обмен = Справочники.новаОбменыДанными.НайтиПоКоду(Код);
		Если Обмен = Справочники.новаОбменыДанными.ПустаяСсылка() Тогда
#Если Клиент Тогда			
			Сообщить("Ошибка при выполнении обмена. Необходимо проверить настройку обмена");
#КонецЕсли
			Возврат;
		КонецЕсли;
	               
		ВыполнитьОбменПоНастройке(Обмен);
	КонецЕсли;
КонецПроцедуры

// Производит запись нового события в регистраторе событий
//
// Параметры:
//  РегистраторСобытия <ОбработкаОбъект.новаРегистраторСобытий>
//  Статус             <СтатусСообщения>
//  ТипДействия        <Строка>
//  Сообщение          <Строка>
//  Объект             <Произвольный>
//  УИ_Док             <Строка>
//
Процедура РегистрацияСобытия(РегистраторСобытия, Знач Статус = Неопределено, ТипДействия = "", Сообщение = "", Объект = Неопределено, УИ_Док = "") Экспорт
	Если РегистраторСобытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	РегистраторСобытия.Добавить(Статус, ТипДействия, Сообщение, Объект, УИ_Док);
КонецПроцедуры

// Инкрементирует значение количества записанных справочников на 1
//
// Параметры:
//  РегистраторСобытия <ОбработкаОбъект.новаРегистраторСобытий>
//  Количество         <Число>
//
Процедура УвеличитьКоличествоСправочников(РегистраторСобытия, Количество = 1) Экспорт
	Если РегистраторСобытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	РегистраторСобытия.УвеличитьКоличествоСправочников(Количество);
КонецПроцедуры

// Инкрементирует значение количества записанных документов на 1
//
// Параметры:
//  РегистраторСобытия <ОбработкаОбъект.новаРегистраторСобытий>
//  Количество         <Число>
//
Процедура УвеличитьКоличествоДокументов(РегистраторСобытия, Количество = 1) Экспорт
	Если РегистраторСобытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	РегистраторСобытия.УвеличитьКоличествоДокументов(Количество);
КонецПроцедуры

// Инкрементирует значение количества записанных бизнес-процессов на 1
//
// Параметры:
//  РегистраторСобытия <ОбработкаОбъект.новаРегистраторСобытий>
//  Количество         <Число>
//
Процедура УвеличитьКоличествоБП(РегистраторСобытия, Количество = 1) Экспорт
	Если РегистраторСобытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	РегистраторСобытия.УвеличитьКоличествоБП(Количество);
КонецПроцедуры

// Выполняет обмен в соответствии с настройкой обмена
//
// Параметры:
//  ОбменДанными              <СправочникСсылка.новаОбменыДанными>
//  ВыбиратьПериодДляЭкспорта <Булево>
//  СписокЗадачДляЭкспорта    <Булево>
//  ПроверкаВыполненияЭтапа   <Булево>
//
Процедура ВыполнитьОбменПоНастройке(ОбменДанными, ВыбиратьПериодДляЭкспорта = Истина, СписокЗадачДляЭкспорта = Неопределено,ПроверкаВыполненияЭтапа=Истина) Экспорт
	
	Если ОбменДанными.ТипОбмена = Перечисления.новаТипыОбменов.Загрузка Тогда
		
    	ЗагрузкаИзКИС = Обработки.новаЗагрузкаИзКИС.Создать();
		ЗагрузкаИзКИС.ЗаписыватьЛог 	= ОбменДанными.ЗаписыватьЛог;
		ЗагрузкаИзКИС.ВыводитьЛог	 	= ОбменДанными.ВыводитьЛог;
		ЗагрузкаИзКИС.КаталогЗагрузки	= ОбменДанными.КаталогЗагрузки;
		ДанныеПолучены = ЗагрузкаИзКИС.ЗагрузитьДанныеПоОбмену(ОбменДанными);
		Если ДанныеПолучены И НЕ константы.новаДанныеЗагружены.Получить() Тогда
        	Константы.новаДанныеЗагружены.Установить(Истина);	
		КонецЕсли; 
	ИначеЕсли ОбменДанными.ТипОбмена = Перечисления.новаТипыОбменов.Выгрузка Тогда
		
		ВыгрузкаВWMS = Обработки.новаВыгрузкаРейсовВWMS.Создать();		
#Если Клиент Тогда
		
		ДатаНачВыгрузки = "";
		ДатаКонВыгрузки = "";
		
		ДиалогВыбораДаты = Новый НастройкаПериода;
		ДиалогВыбораДаты.РедактироватьКакПериод = Ложь;
		
		ДатаНачВыгрузки = НачалоДня(ТекущаяДата());
		ДатаКонВыгрузки = КонецДня(ТекущаяДата());
		
		Если ВыбиратьПериодДляЭкспорта Тогда
			Если ДиалогВыбораДаты.Редактировать() Тогда
				ДатаНачВыгрузки = ?(ЗначениеЗаполнено(ДиалогВыбораДаты.ДатаНачала), ДиалогВыбораДаты.ДатаНачала, НачалоДня(ТекущаяДата()));
				ДатаКонВыгрузки = ?(ЗначениеЗаполнено(ДиалогВыбораДаты.ДатаОкончания), ДиалогВыбораДаты.ДатаОкончания, КонецДня(ТекущаяДата()));
			КонецЕсли;
		КонецЕсли;
		
		ВыгрузкаВWMS.ДатаНачВыгрузки 	= ДатаНачВыгрузки;
		ВыгрузкаВWMS.ДатаКонВыгрузки 	= ДатаКонВыгрузки;
		ВыгрузкаВWMS.ВыводитьЛог		= ОбменДанными.ВыводитьЛог;
		ВыгрузкаВWMS.ЗаписыватьЛог		= ОбменДанными.ЗаписыватьЛог;
		ВыгрузкаВWMS.КаталогВыгрузки 	= ОбменДанными.КаталогВыгрузки;
#КонецЕсли
		
		ВыгрузкаВWMS.ВыгрузитьДанныеПоОбмену(ОбменДанными, СписокЗадачДляЭкспорта,ПроверкаВыполненияЭтапа);
#Если Клиент Тогда

		мсОбъекты = Новый Массив;
		мсОбъекты.Добавить("Задача.новаЗадачаМестнойДоставки");
		новаОбщиеПроцедуры.ОповеститьОбОбновлении(мсОбъекты);
#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры
