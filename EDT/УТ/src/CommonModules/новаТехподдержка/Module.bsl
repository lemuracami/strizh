
// Выполняет подключение веб-сервиса
//
// Параметры:
//  новаКонтекст <Структура[Контекст]>
//
// Возвращаемое значение:
//  <WSПрокси>
//
Функция ПодключитьСервисТехподдержки(новаКонтекст) Экспорт
	Если Не новаКонтекст.Свойство("СервисТехподдержки") Тогда
		Попытка
			ОпределениеСервисаТехподдержки = Новый WSОпределения(ПолучитьАдресТехподдержки() + "/ws/wsSupport.1cws?wsdl", "Web", "123");
			СервисТехподдержки = Новый WSПрокси(ОпределениеСервисаТехподдержки, "http://www.nova-it.ru/support/support",
				"новаТехподдержка", 
				"новаТехподдержкаSoap");
			СервисТехподдержки.Пользователь = "Web";
			СервисТехподдержки.Пароль = "123";
		Исключение
			ОшибкаСервисаТехподдержки(ИнформацияОбОшибке());
			Возврат Неопределено;
		КонецПопытки;
		
		новаКонтекст.Вставить("СервисТехподдержки", СервисТехподдержки);
	КонецЕсли;
	
	Возврат новаКонтекст.СервисТехподдержки;
КонецФункции

// Заполняет данные объекта данными сообщения
//
// Параметры:
//  Объект    <ДокументОбъект>
//  Сообщение <Структура>
//
Процедура ЗаполнитьСообщение(Объект, Сообщение) Экспорт
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.новаЗаявкаВТехподдержку") Тогда
		ЗаполнитьЗначенияСвойств(Объект, Сообщение, "Дата, Автор, ДатаИзменения, Тема, Содержание");
		Объект.Номер = Сообщение.Номер;
		Объект.Состояние = Перечисления.новаСостоянияЗаявкиТехподдержки[Сообщение.Состояние];
	Иначе
		ЗаполнитьЗначенияСвойств(Объект, Сообщение, "Дата, Автор, ДатаИзменения, Содержание");
		Объект.Заявка = Документы.новаЗаявкаВТехподдержку.ПолучитьСсылку(Новый УникальныйИдентификатор(Сообщение.GUIDВладельца));
	КонецЕсли;
	Объект.ОтТехподдержки = Сообщение.МестоСоздания = "Техподдержка";
КонецПроцедуры

// Процедура - обработчик события перед записью
//
// Параметры:
//  Объект       <ДокументОбъект>
//  Отказ        <Булево>
//  новаКонтекст <Структура[Контекст]>
//
Процедура ПередЗаписьюОбъекта(Объект, Отказ, новаКонтекст) Экспорт
	Если Объект.ДополнительныеСвойства.Свойство("Загрузка") Тогда Возврат; КонецЕсли;
	
	СервисТехподдержки = ПодключитьСервисТехподдержки(новаКонтекст);
	Если СервисТехподдержки = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
//	Сообщение = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.nova-it.ru/support/support", "СообщениеТехподдержки"));

	Попытка
		Сообщение = СервисТехподдержки.ПолучитьПустоеСообщение();
	Исключение
		Сообщить("Не удалось подключиться к web-сервису!", СтатусСообщения.Важное);
		
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.новаЗаявкаВТехподдержку") Тогда
		Сообщение.ТипСообщения = "Заявка";
		Сообщение.Тема = Объект.Тема;
		Менеджер = Документы.новаЗаявкаВТехподдержку;
	Иначе
		Если Не ЗначениеЗаполнено(Объект.Заявка) Тогда
			Сообщить("Не заполнена заявка!");
			Отказ = Истина;
			
			Возврат;
		КонецЕсли;
		
		Сообщение.ТипСообщения = "Комментарий";
		Сообщение.GUIDВладельца = Строка(Объект.Заявка.УникальныйИдентификатор());
		Менеджер = Документы.новаКомментарийЗаявки;
	КонецЕсли;
	
	Сообщение.Содержание = Объект.Содержание;
	Если Объект.ЭтоНовый() Тогда
		УИД = Новый УникальныйИдентификатор();
		Объект.УстановитьСсылкуНового(Менеджер.ПолучитьСсылку(УИД));
		Сообщение.GUID = Строка(УИД);
	Иначе
		Сообщение.GUID = Строка(Объект.Ссылка.УникальныйИдентификатор());
	КонецЕсли;
	
	Попытка
		Ошибка = СервисТехподдержки.ОтправитьСообщение(новаКонтекст.ИдентификаторПоставки, Сообщение);
	Исключение
		Сообщить("Не удалось подключиться к web-сервису!", СтатусСообщения.Важное);
		
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	Если Не ПустаяСтрока(Ошибка) Тогда
		Сообщить(Ошибка, СтатусСообщения.Важное);
	
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Попытка
		Сообщения = СервисТехподдержки.ПолучитьСообщение(новаКонтекст.ИдентификаторПоставки, Сообщение.GUID);
	Исключение
		Сообщить("Не удалось подключиться к web-сервису!", СтатусСообщения.Важное);
		
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	ЗаполнитьСообщение(Объект, Сообщения.Сообщения[0]);
КонецПроцедуры

// Выполняет настройку колонок журнала
//
// Параметры:
//  Журнал    <ОбработкаОбъект.новаУниверсальныйЖурнал>
//  ИсточникЗаявок <ОбработкаОбъект.новаИсточникЗаявокТехподдержки>
//
Процедура НастроитьЖурналЗаявок(Журнал, ИсточникЗаявок) Экспорт
	ИсточникОбразец = ИсточникЗаявок;
	Журнал.ДобавитьНастройку("ЗаявкиСписком");
	Источник = ИсточникЗаявок;
	Журнал.ДобавитьИсточник(Источник);	
	Журнал.ДобавитьКолонку("Номер", ПоложениеКолонки.НоваяКолонка, -9);
	Журнал.ДобавитьКолонку("Дата", ПоложениеКолонки.НоваяКолонка, -9);
	Журнал.ДобавитьКолонку("Тема", ПоложениеКолонки.НоваяКолонка, 20);
	Журнал.ДобавитьКолонку("Состояние", ПоложениеКолонки.НоваяКолонка, 20);
	Журнал.ДобавитьСортировку("Дата", "ВОЗР");
	
	Журнал.ДобавитьНастройку("ПоСостоянию");
	Источник = Обработки.новаИсточникЗаявокТехподдержки.Создать();
	Источник.Архив = ИсточникОбразец.Архив;
	Журнал.ДобавитьИсточник(Источник);	
	Источник.КонструкторДанных.ЯчейкаОтображенияДетальнойСтрокиВИерархии = "Номер";
	Источник.КонструкторДанных.ДобавитьГруппировку("Состояние");	
	Журнал.УстановитьШиринуИерархии(50);	
	Журнал.ДобавитьКолонку("Дата", ПоложениеКолонки.НоваяКолонка, -9);
	Журнал.ДобавитьКолонку("Тема", ПоложениеКолонки.НоваяКолонка, 20);
	Журнал.ДобавитьСортировку("Состояние", "ВОЗР");
КонецПроцедуры

// Выполняет загрузку сообщений из веб-сервиса
//
// Параметры:
//  новаКонтекст <Структура[Контекст]>
//
Процедура ЗагрузитьСообщения(новаКонтекст) Экспорт
	СервисТехподдержки = ПодключитьСервисТехподдержки(новаКонтекст);
	Если СервисТехподдержки = Неопределено Тогда Возврат; КонецЕсли;
	
	МаксДатаИзменения = '00010101';
	
	Попытка
		НаборИдентификаторовСообщений = СервисТехподдержки.ПолучитьИдентификаторыСообщений(новаКонтекст.ИдентификаторПоставки, Константы.новаДатаПоследнегоСообщенияТехподдержки.Получить());
		
		КоличествоСообщений = НаборИдентификаторовСообщений.Сообщения.Количество();
		ъ = 1;
		Для Каждого ИдентификаторСообщения Из НаборИдентификаторовСообщений.Сообщения Цикл
			Состояние("Загрузка сообщений с сервера: " + Строка(ъ) + " из " + Строка(КоличествоСообщений));
			ъ = ъ + 1;
			
			Сообщения = СервисТехподдержки.ПолучитьСообщение(новаКонтекст.ИдентификаторПоставки, ИдентификаторСообщения);
			Для Каждого Сообщение Из Сообщения.Сообщения Цикл
				МаксДатаИзменения = Макс(МаксДатаИзменения, Сообщение.ДатаИзменения);
				
				Если Сообщение.ТипСообщения = "Заявка" Тогда
					СообщениеСсылка = Документы.новаЗаявкаВТехподдержку.ПолучитьСсылку(Новый УникальныйИдентификатор(Сообщение.GUID));
					обСообщение = СообщениеСсылка.ПолучитьОбъект();
					Если обСообщение = Неопределено Тогда
						обСообщение = Документы.новаЗаявкаВТехподдержку.СоздатьДокумент();
						обСообщение.УстановитьСсылкуНового(СообщениеСсылка);
					КонецЕсли;
					
					НаборЗаписей = РегистрыСведений.новаПросмотрыЗаявок.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Заявка.Установить(СообщениеСсылка);
					НаборЗаписей.Записать();
				Иначе
					СообщениеСсылка = Документы.новаКомментарийЗаявки.ПолучитьСсылку(Новый УникальныйИдентификатор(Сообщение.GUID));
					обСообщение = СообщениеСсылка.ПолучитьОбъект();
					Если обСообщение = Неопределено Тогда
						обСообщение = Документы.новаКомментарийЗаявки.СоздатьДокумент();
						обСообщение.УстановитьСсылкуНового(СообщениеСсылка);
					КонецЕсли;
					обСообщение.Заявка = Документы.новаЗаявкаВТехподдержку.ПолучитьСсылку(Новый УникальныйИдентификатор(Сообщение.GUIDВладельца));
				КонецЕсли;	
				
				ЗаполнитьСообщение(обСообщение, Сообщение);
				обСообщение.ДополнительныеСвойства.Вставить("Загрузка", Истина);
				обСообщение.Записать(РежимЗаписиДокумента.Проведение);
			КонецЦикла;
		КонецЦикла;
		
	Исключение
		ОшибкаСервисаТехподдержки(ИнформацияОбОшибке());
		Возврат;
	КонецПопытки;
	
	Если ЗначениеЗаполнено(МаксДатаИзменения) Тогда
		Константы.новаДатаПоследнегоСообщенияТехподдержки.Установить(МаксДатаИзменения);
		новаОбщиеПроцедуры.ОповеститьОбОбновлении(Метаданные.Документы.новаЗаявкаВТехподдержку.ПолноеИмя());
	КонецЕсли;
КонецПроцедуры

// Вызывает форму ошибки сервиса техподдержки
//
// Параметры:
//  Ошибка <ИнформацияОбОшибке>:
//
Процедура ОшибкаСервисаТехподдержки(Ошибка) Экспорт
	Форма = ПолучитьОбщуюФорму("новаФормаОшибкиWebСервиса");
	Форма.Ошибка = Ошибка;
	Форма.Открыть();
КонецПроцедуры

// Возвращает адрес техподдержки
//
// Возвращаемое значение:
//  <Строка>
//
Функция ПолучитьАдресТехподдержки() Экспорт
	Возврат "http://lic.nova-it.ru";
КонецФункции

// Возвращает таблицу обновлений релизов
//
// Параметры:
//  новаКонтекст <Структура[Контекст]>
//
// Возвращаемое значение:
//  <ТаблицаЗначений>
//
Функция ПолучитьСписокОбновлений(новаКонтекст) Экспорт
	СервисТехподдержки = ПодключитьСервисТехподдержки(новаКонтекст);
	Если СервисТехподдержки = Неопределено Тогда Возврат Неопределено; КонецЕсли;
	
	Попытка
		НаборСсылокДляСкачиванияРелизов = СервисТехподдержки.ПолучитьСсылкиДляСкачиванияРелизов(новаКонтекст.ИдентификаторПоставки);
		
		тзОбновления = Новый ТаблицаЗначений;
		тзОбновления.Колонки.Добавить("Релиз");
		тзОбновления.Колонки.Добавить("ВидПоставки");
		тзОбновления.Колонки.Добавить("Идентификатор");
		тзОбновления.Колонки.Добавить("СсылкаДляСкачиванияРелиза");
		тзОбновления.Колонки.Добавить("ПарольРелиза");
		тзОбновления.Колонки.Добавить("Ссылка");
		тзОбновления.Колонки.Добавить("Загружено", Новый ОписаниеТипов("Булево"));
		
		Для Каждого СсылкаДляСкачиванияРелиза Из НаборСсылокДляСкачиванияРелизов.Ссылка Цикл
			стрОбновление = тзОбновления.Добавить();
			ЗаполнитьЗначенияСвойств(стрОбновление, СсылкаДляСкачиванияРелиза);
			стрОбновление.Ссылка = СсылкаДляСкачиванияРелиза;
		КонецЦикла;
		
		тзОбновления.Сортировать("Релиз ВОЗР, ВидПоставки ВОЗР");
		
		Возврат тзОбновления;
	Исключение
		ОшибкаСервисаТехподдержки(ИнформацияОбОшибке());
		Возврат Неопределено;
	КонецПопытки;
КонецФункции

// Возвращает ссылку для скачивания обновления в виде структуры
//
// Параметры:
//  новаКонтекст              <Структура[Контекст]>
//  СсылкаДляСкачиванияРелиза <Строка>
//
// Возвращаемое значение:
//  <Структура>
//
Функция ПолучитьСсылкуДляСкачивания(новаКонтекст, СсылкаДляСкачиванияРелиза) Экспорт
	Ссылка = СсылкаДляСкачиванияРелиза;
	Если ПустаяСтрока(Ссылка.СсылкаДляСкачиванияРелиза) Тогда
		СервисТехподдержки = ПодключитьСервисТехподдержки(новаКонтекст);
		Если СервисТехподдержки = Неопределено Тогда Возврат Неопределено; КонецЕсли;
		
		Ссылка = СервисТехподдержки.ПодготовитьСсылкуДляСкачиванияРелиза(новаКонтекст.ИдентификаторПоставки, Ссылка);
		Если Ссылка = Неопределено Тогда Возврат Неопределено; КонецЕсли;
	КонецЕсли;
	
	стСсылкаДляСкачивания = Новый Структура("УРЛ, Пароль, ИмяФайла",
		Ссылка.СсылкаДляСкачиванияРелиза,
		Ссылка.ПарольРелиза,
		Ссылка.ИмяФайла);
		
	Возврат стСсылкаДляСкачивания;
КонецФункции
