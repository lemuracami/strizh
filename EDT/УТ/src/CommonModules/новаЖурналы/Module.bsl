
// Формирует пользовательское представление из имени встроенного языка: "ИмяОбъекта" -> "Имя объекта".
//
// Параметры:
//  Имя <Строка>: имя встроенного языка.
//
// Возвращаемое значение:
//  <Строка>: представление имени.
//
Функция ПолучитьПредставлениеИзИмени(Имя) Экспорт
	ДлинаИмени = СтрДлина(Имя);
	НачалоСлова = 1;
	ПерваяБуква = "";
	КодА = КодСимвола("А");
	КодЯ = КодСимвола("Я");
	ъ = 2;
	Пока ъ <= ДлинаИмени Цикл
		Буква = Сред(Имя, ъ, 1);
		КодБуквы = КодСимвола(Буква);
		Если КодБуквы >= КодА И КодБуквы <= КодЯ Тогда
			Если НачалоСлова = 1 Тогда
				Представление = Лев(Имя, ъ - 1);	
			Иначе
				Представление = Представление + " " + ПерваяБуква + Сред(Имя, НачалоСлова, ъ - НачалоСлова);
			КонецЕсли;
			
			ПерваяБуква = НРег(Буква);
			НачалоСлова = ъ + 1;
		КонецЕсли;
		ъ = ъ + 1;
	КонецЦикла;
	Если НачалоСлова = 1 Тогда
		Представление = Имя;
	Иначе
		Представление = Представление + " " + ПерваяБуква + Сред(Имя, НачалоСлова, ъ - НачалоСлова);
	КонецЕсли;

	Возврат Представление;
КонецФункции

// Создает экземпляр объекта <ОбработкаОбъект.новаУниверсальныйЖурнал>, вызывая для этого систему защиты,
//	т. к. эта обработка хранится в зашифрованном файле, а не в конфигурации.
//
// Возвращаемое значение:
//  <ОбработкаОбъект.новаУниверсальныйЖурнал>
//
Функция НовыйЖурнал() Экспорт
	Возврат Обработки.новаУниверсальныйЖурнал.Создать();
КонецФункции

// Создает экземпляр объекта <ОбработкаОбъект.новаКонструкторЗапроса>.
//
// Возвращаемое значение:
//  <ОбработкаОбъект.новаКонструкторЗапроса>
//
Функция НовыйКонструкторЗапроса() Экспорт
	Возврат Обработки.новаКонструкторЗапроса.Создать();
КонецФункции

// Процедура инициализации универсальных журналов, вызывается при начале работы.
//
// Параметры:
//  новаКонтекст <Структура[Контекст]>: используется для повторного использования вычисленных значений на клиенте.
//
Процедура Инициализировать(новаКонтекст) Экспорт
	ТекущаяСхема = ПараметрыСеанса.новаТекущийПользователь.СхемаОформленияЖурналов;
	Если ЗначениеЗаполнено(ТекущаяСхема) Тогда
		ПараметрыСеанса.новаТекущаяСхемаОформленияЖурналов = ТекущаяСхема;
	Иначе
		ПараметрыСеанса.новаТекущаяСхемаОформленияЖурналов = Справочники.новаСхемыОформленияЖурналов.СхемаПоУмолчанию;
	КонецЕсли;
КонецПроцедуры