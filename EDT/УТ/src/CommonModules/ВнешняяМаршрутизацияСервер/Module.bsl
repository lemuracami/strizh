
//Асеев 01.04.2021 (Задача № 4519)>>>
Функция createExternalRoute(externalRoute) Экспорт
	
	commonResponseТип = ФабрикаXDTO.Тип("http://strizh.delivery", "commonResponse");
	commonResponse = ФабрикаXDTO.Создать(commonResponseТип);
	
	commonResponse.isError = Истина;
	commonResponse.errorText = "";
	commonResponse.idObject = "";
	
	//routingOperator - код контрагента, к нему надо добавить префикс "Shop_" и искать в справочнике Контрагентов, пишем в Рейс.ВнешнийОператорМаршрутизации. Илья Бондарев , здесь из админки должен прилетать shopId, на основании AccessKey.
	//routingDate - Рейс.ДатаРейса.
	//routeId - Рейс.номерПалеты
	//orders - массив номеров заказов, ищем по Док.РТиУ и Док.Забор и пишем найденные объекты в Рейс.Заказы. Заказы.ВидЗаказа определяем по тому, РТиУ или Забор найден по номеру.
	//deliveryPlaceID - код региона-Спр.РегиональныеТерминалы, пишем в Рейс.ТерминалДоставки	
	
	ДатаРейса = externalRoute.routingDate;
	
	Сейчас = ТекущаяДата();
	Сегодня = НачалоДня(Сейчас);
	Если Сегодня > ДатаРейса Тогда
		commonResponse.errorText = "Метод вызван позже даты маршрутизации";
		Возврат commonResponse;
	КонецЕсли;
	
	НомерПалеты = externalRoute.routeId;
		
	ВнешнийОператорМаршрутизации = Справочники.Контрагенты.НайтиПоКоду("Shop_" + Формат(externalRoute.routingOperator, "ЧГ="));
	ТерминалДоставки = Справочники.РегиональныеТерминалы.НайтиПоКоду(externalRoute.deliveryPlaceID);

	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаРейса", ДатаРейса);
	Запрос.УстановитьПараметр("ОператорМаршрутизации", ВнешнийОператорМаршрутизации);
	Запрос.УстановитьПараметр("Регион", ТерминалДоставки);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиВнешнейМаршрутизацииСрезПоследних.НомерПалетыОт КАК НомерПалетыОт,
	|	НастройкиВнешнейМаршрутизацииСрезПоследних.НомерПалетыДо КАК НомерПалетыДо
	|ИЗ
	|	РегистрСведений.НастройкиВнешнейМаршрутизации.СрезПоследних(
	|			&ДатаРейса,
	|			ОператорМашрутизации = &ОператорМаршрутизации
	|				И Регион = &Регион) КАК НастройкиВнешнейМаршрутизацииСрезПоследних";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		commonResponse.errorText = "В настройках не заданы интервалы палет";
		Возврат commonResponse; 
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Если Не (НомерПалеты >= Выборка.НомерПалетыОт И НомерПалеты <= Выборка.НомерПалетыДо) Тогда
		commonResponse.errorText = "Номер палеты не соответствует интервалу в настройках";
		Возврат commonResponse;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НомерПалеты", НомерПалеты);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рейс.Ссылка КАК Рейс
	|ИЗ
	|	Документ.Рейс КАК Рейс
	|ГДЕ
	|	Рейс.НомерПалетты = &НомерПалеты
	|	И Рейс.ТерминалДоставки = &Регион
	|	И Рейс.ДатаРейса = &ДатаРейса
	|	И Рейс.ВнешнийОператорМаршрутизации = &ОператорМаршрутизации";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Рейс = Документы.Рейс.СоздатьДокумент();
		Рейс.Дата = Сейчас;
		Рейс.УстановитьНовыйНомер();
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();

		Если baoВызовСервера.РейсЗакрыт(Выборка.Рейс) Тогда
			commonResponse.errorText = "Рейс закрыт";
			Возврат commonResponse; 
		КонецЕсли;
		
		Рейс = Выборка.Рейс.ПолучитьОбъект();
		Рейс.ПометкаУдаления = Ложь;
	КонецЕсли;
	
	ТаблицаНомеровЗаказов = Новый ТаблицаЗначений;
	КолонкиТаблицы = ТаблицаНомеровЗаказов.Колонки;
	КолонкиТаблицы.Добавить("Номер", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(11));
	
	Для Каждого НомерЗаказа Из externalRoute.orders Цикл
		ТаблицаНомеровЗаказов.Добавить().Номер = Формат(НомерЗаказа, "ЧГ=");
	КонецЦикла;
	
	//Рейс = Документы.Рейс.СоздатьДокумент();
	Рейс.ДатаРейса = ДатаРейса;
	Рейс.НомерПалетты = НомерПалеты;
	Рейс.ТерминалДоставки = ТерминалДоставки;
	Рейс.МетодикаМаршрутизации = Перечисления.МетодикаЛогистическойМаршрутизации.ВнешняяМаршрутизация;
	Рейс.РежимЗагрузкиДанных = 1;
	Рейс.РольРейса = Справочники.РолиТранспорта.РольДоставки;
	Рейс.СменаРейса = Справочники.Смены.Смена1;
	Рейс.ВнешнийОператорМаршрутизации = ВнешнийОператорМаршрутизации;
	
	Запрос.УстановитьПараметр("ТаблицаНомеровЗаказов", ТаблицаНомеровЗаказов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНомеровЗаказов.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_НомераЗаказов
	|ИЗ
	|	&ТаблицаНомеровЗаказов КАК ТаблицаНомеровЗаказов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НомераЗаказов.Номер КАК Номер,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Ссылка, ЗаборТовара.Ссылка) КАК Заказ,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗаказовВероут.COLLECTION)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗаказовВероут.DROP)
	|	КОНЕЦ КАК ВидЗаказа
	|ИЗ
	|	ВТ_НомераЗаказов КАК ВТ_НомераЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ВТ_НомераЗаказов.Номер = РеализацияТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	|		ПО ВТ_НомераЗаказов.Номер = ЗаборТовара.Номер";
	
	ТаблицаЗаказов = Запрос.Выполнить().Выгрузить();
	
	СтрокаЗаказа = ТаблицаЗаказов.Найти(Null, "Заказ");
	Если СтрокаЗаказа <> Неопределено Тогда
		commonResponse.errorText = "Не найден заказ " + СтрокаЗаказа.Номер;
		Возврат commonResponse;
	КонецЕсли;
	
	Рейс.Заказы.Загрузить(ТаблицаЗаказов);
	
	ОшибкаТранзакции = Ложь;
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Попытка
		Рейс.Записать();		
		
		Рейс.СоздатьРейсМестнойДоставки();
					
		Рейс.Записать(РежимЗаписиДокумента.Проведение);
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ОшибкаТранзакции = Истина;
		commonResponse.errorText = ОписаниеОшибки();
	КонецПопытки;
	
	//Асеев 11.06.2021 (Задача № 4599)>>>
	Если ОшибкаТранзакции Тогда
		Возврат commonResponse;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Рейс", Рейс.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РейсЗаказы.Ссылка КАК ДокументРегистратор,
	|	РейсЗаказы.Заказ КАК Реализация,
	|	ВЫБОР
	|		КОГДА РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг).Номер
	|		ИНАЧЕ ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.ЗаборТовара).Номер
	|	КОНЕЦ КАК НомерЗаказа,
	|	&Регион КАК Терминал,
	|	ЛОЖЬ КАК БылоЗакрытие,
	|	225 КАК Статус,
	|	ЗНАЧЕНИЕ(Перечисление.ИнициаторыСостояния.ИнтернетМагазин) КАК ИнициаторСостояния,
	|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	|	ЛОЖЬ КАК БылаРегистрация
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|ГДЕ
	|	РейсЗаказы.Ссылка = &Рейс";
	
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();
	СопоставлениеИнициатора = РаботаСАдминкойСервер.СопоставлениеИнициатораСостоянияДляАдминки();
	
	Для Каждого СтрокаДвижения Из ТаблицаДвижений Цикл	
		
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалДоставки.Код));
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Initiator", РаботаСАдминкойСервер.ИнициаторСостоянияВАдминку(СтрокаДвижения.ИнициаторСостояния, СопоставлениеИнициатора), ДопПараметрыСтатуса);	
		МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СокрЛП(СтрокаДвижения.НомерЗаказа), 
		СтрокаДвижения.Статус, 
		"",
		,
		ТекущаяДата(),
		МассивСтатусовsetOrderStatus, 
		ДопПараметрыСтатуса); 
		
	КонецЦикла;
	
	Попытка
		mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусовSetOrderStatus, "SetOrderStatus");
		РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДвижений);
	Исключение
		ОшибкаТранзакции = Истина;
		commonResponse.errorText = ОписаниеОшибки();
	КонецПопытки;
	//Асеев 11.06.2021 (Задача № 4599)<<<
	
	Если Не ОшибкаТранзакции Тогда
		commonResponse.isError = Ложь;
		commonResponse.idObject = Рейс.Номер;
	КонецЕсли;	
	
	Возврат commonResponse;
	
КонецФункции
//Асеев 01.04.2021 (Задача № 4519)<<<

//Асеев 06.04.2021 (Задача № 4523)>>>
Функция setCrewForExternalRoute(crewExternalRoute) Экспорт
	
	commonResponseТип = ФабрикаXDTO.Тип("http://strizh.delivery", "commonResponse");
	commonResponse = ФабрикаXDTO.Создать(commonResponseТип);
	
	commonResponse.isError = Истина;
	commonResponse.errorText = "";
	commonResponse.idObject = "";
	
	//routingOperator - Находим контрагента (с добавлением префикса к коду "shop_"), используем этого контрагента для поиска по: рейс.ВнешнийОператорМаршрутизации, новаВодители.ВнешнийОператорМаршрутизации, новаТранспорт.ВнешнийОператорМаршрутизации
	//deliveryPlaceID - код терминала доставка, поиск по рейс.ТерминалДоставки, новаВодители.ТерминалДоставки, новаТранспорт.ТерминалДоставки.
	//routeId - поиск рейса по Рейс.номерПалеты
	//routingDate - поиск рейса по Рейс.ДатаРейса
	//carId - поиск (если не нашли - создание) по новаТранспорт.НомерГосударственнойРегистрации.
	//carBrand - при создании новаТранспорт пишем в новаТранспорт.Наименование = carBrand + " " + carId. Если новаТранспорт найден по carId, то поле не используем.
	//courierId - поиск (если не нашли - создание) по новаВодители.ИДВнешнегоОператораМаршрутизации.
	//courierFullName - при создании новаВодители пишем в новаВодители.Наименование = courierFullName . Если новаВодители найден по courierId, то поле не используем.	

	ДатаРейса = crewExternalRoute.routingDate;
	
	Сейчас = ТекущаяДата();
	
	НомерПалеты = crewExternalRoute.routeId;
	НомерГосударственнойРегистрации = crewExternalRoute.carId;
	МаркаМишины = crewExternalRoute.carBrand;
	ИДВнешнегоОператораМаршрутизации = crewExternalRoute.courierId;
	НаименованиеВодителя = crewExternalRoute.courierFullName;
	
	ВнешнийОператорМаршрутизации = Справочники.Контрагенты.НайтиПоКоду("Shop_" + Формат(crewExternalRoute.routingOperator, "ЧГ="));
	ТерминалДоставки = Справочники.РегиональныеТерминалы.НайтиПоКоду(crewExternalRoute.deliveryPlaceID);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаРейса", ДатаРейса);
	Запрос.УстановитьПараметр("ОператорМаршрутизации", ВнешнийОператорМаршрутизации);
	Запрос.УстановитьПараметр("Регион", ТерминалДоставки);
	Запрос.УстановитьПараметр("НомерПалеты", НомерПалеты);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рейс.Ссылка КАК Рейс
	|ИЗ
	|	Документ.Рейс КАК Рейс
	|ГДЕ
	|	Рейс.НомерПалетты = &НомерПалеты
	|	И Рейс.ТерминалДоставки = &Регион
	|	И Рейс.ДатаРейса = &ДатаРейса
	|	И Рейс.ВнешнийОператорМаршрутизации = &ОператорМаршрутизации";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		commonResponse.errorText = "Рейс не найден";
		Возврат commonResponse; 
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Рейс = Выборка.Рейс;
	
	Если baoВызовСервера.РейсЗакрыт(Рейс) Тогда
		commonResponse.errorText = "Рейс закрыт";
		Возврат commonResponse; 
	КонецЕсли;
	
	//Асеев 29.07.2021 (Задача № 4523)>>>
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	РегистрСведений.КонтрольВремени КАК КонтрольВремени
	|ГДЕ
	|	КонтрольВремени.Событие = ЗНАЧЕНИЕ(Справочник.СобытияКонтроляВремени.РаспечаткаМаршрутногоЛиста)
	|	И КонтрольВремени.Рейс = &Рейс";
	Если Не Запрос.Выполнить().Пустой() Тогда
		commonResponse.errorText = "Маршрутный лист распечатан";
		Возврат commonResponse; 
	КонецЕсли;
	//Асеев 29.07.2021 (Задача № 4523)<<<

	Запрос.УстановитьПараметр("НомерГосударственнойРегистрации", НомерГосударственнойРегистрации);
	Запрос.УстановитьПараметр("ИДВнешнегоОператораМаршрутизации", ИДВнешнегоОператораМаршрутизации);
	//Запрос.УстановитьПараметр("НаименованиеВодителя", НаименованиеВодителя);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	новаТранспорт.Ссылка КАК Транспорт,
	|	новаВодители.Ссылка КАК Водитель,
	|	новаТранспорт_Группа.Ссылка КАК ГруппаТранспорта,
	|	новаВодители_Группа.Ссылка КАК ГруппаВодителей
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИСТИНА КАК Поле1) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.новаТранспорт КАК новаТранспорт
	|		ПО (новаТранспорт.ВнешнийОператорМаршрутизации = &ОператорМаршрутизации)
	|			И (новаТранспорт.НомерГосударственнойРегистрации = &НомерГосударственнойРегистрации)
	|			И (новаТранспорт.Родитель.ТерминалДоставки = &Регион)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.новаВодители КАК новаВодители
	|		ПО (новаВодители.ВнешнийОператорМаршрутизации = &ОператорМаршрутизации)
	|			И (новаВодители.ИДВнешнегоОператораМаршрутизации = &ИДВнешнегоОператораМаршрутизации)
	//|			И (новаВодители.Наименование = &НаименованиеВодителя)
	|			И (новаВодители.Родитель.ТерминалДоставки = &Регион)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.новаТранспорт КАК новаТранспорт_Группа
	|		ПО (новаТранспорт_Группа.Родитель = ЗНАЧЕНИЕ(Справочник.новаТранспорт.ВнешняяМаршрутизация))
	|			И (новаТранспорт_Группа.ЭтоГруппа)
	|			И (новаТранспорт_Группа.ТерминалДоставки = &Регион)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.новаВодители КАК новаВодители_Группа
	|		ПО (новаВодители_Группа.Родитель = ЗНАЧЕНИЕ(Справочник.новаВодители.ВнешняяМаршрутизация))
	|			И (новаВодители_Группа.ЭтоГруппа)
	|			И (новаВодители_Группа.ТерминалДоставки = &Регион)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Транспорт = Выборка.Транспорт;
	Водитель = Выборка.Водитель;
	ГруппаТранспорта = Выборка.ГруппаТранспорта;
	ГруппаВодителей = Выборка.ГруппаВодителей;
	
	Если Транспорт = Null И ГруппаТранспорта = Null Тогда
		commonResponse.errorText = "Не удалось определить группу транспорта по региону";
		Возврат commonResponse; 
	КонецЕсли;
	Если Водитель = Null И ГруппаВодителей = Null Тогда
		commonResponse.errorText = "Не удалось определить группу водителей по региону";
		Возврат commonResponse; 
	КонецЕсли;
	
	ОшибкаТранзакции = Ложь;
	НачатьТранзакцию();
	Попытка
		Если Транспорт = Null Тогда
			Транспорт = Справочники.новаТранспорт.СоздатьЭлемент();
			Транспорт.Наименование = МаркаМишины + " " + НомерГосударственнойРегистрации;
			Транспорт.Родитель = ГруппаТранспорта;
			Транспорт.ВнешнийОператорМаршрутизации = ВнешнийОператорМаршрутизации;
			Транспорт.НомерГосударственнойРегистрации = НомерГосударственнойРегистрации;
			Транспорт.Записать();
			Транспорт = Транспорт.Ссылка;
		КонецЕсли;
		Если Водитель = Null Тогда
			Водитель = Справочники.новаВодители.СоздатьЭлемент();
			Водитель.Наименование = НаименованиеВодителя;
			Водитель.Родитель = ГруппаВодителей;
			Водитель.ВнешнийОператорМаршрутизации = ВнешнийОператорМаршрутизации;
			Водитель.ИДВнешнегоОператораМаршрутизации = ИДВнешнегоОператораМаршрутизации;
			Водитель.Записать();
			Водитель = Водитель.Ссылка;
		КонецЕсли;
		ЗаписьРегистра = РегистрыСведений.ПривязкаМашинКРейсам.СоздатьМенеджерЗаписи();
		ЗаписьРегистра.Период = Сейчас;
		ЗаписьРегистра.Рейс = Рейс;
		ЗаписьРегистра.Транспорт = Транспорт;
		ЗаписьРегистра.Водитель = Водитель;
		ЗаписьРегистра.КтоПривязал = ПараметрыСеанса.ТекущийПользователь;
		ЗаписьРегистра.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ОшибкаТранзакции = Истина;
		commonResponse.errorText = ОписаниеОшибки();
	КонецПопытки;
	
	Если Не ОшибкаТранзакции Тогда
		//Асеев 29.07.2021 (Задача № 4523)>>>
		ОтправитьЗаявкиНаПропускПоРейсуВнешнейМаршрутизации(Рейс);
		//Асеев 29.07.2021 (Задача № 4523)<<<
		
		commonResponse.isError = Ложь;
	КонецЕсли;
	
	Возврат commonResponse;
	
КонецФункции
//Асеев 06.04.2021 (Задача № 4523)<<<

//Асеев 07.04.2021 (Задача № 4529)>>>
Функция setOrdersStatusExternalRoute(ordersStatus) Экспорт
	
	commonResponseТип = ФабрикаXDTO.Тип("http://strizh.delivery", "commonResponse");
	commonResponse = ФабрикаXDTO.Создать(commonResponseТип);
	
	commonResponse.isError = Истина;
	commonResponse.errorText = "";
	commonResponse.idObject = "";
	
	ДопустимыеСтатусы = Новый Соответствие;
	ДопустимыеСтатусы.Вставить(231, Истина);
	ДопустимыеСтатусы.Вставить(232, Истина);
	ДопустимыеСтатусы.Вставить(235, Истина);
	ДопустимыеСтатусы.Вставить(237, Истина);
	
	ТаблицаЗаказов = Новый ТаблицаЗначений;
	КолонкиТаблицы = ТаблицаЗаказов.Колонки;
	КолонкиТаблицы.Добавить("НомерПалеты", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(5));
	КолонкиТаблицы.Добавить("ДатаРейса", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.Дата));
	КолонкиТаблицы.Добавить("КодТерминалаДоставки", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(9));
	КолонкиТаблицы.Добавить("НомерЗаказа", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(11));
	КолонкиТаблицы.Добавить("КодСтатуса", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(4));
	
	Для Каждого orderStatus Из ordersStatus.ordersStatus Цикл
		
		Если ДопустимыеСтатусы[orderStatus.status] = Неопределено Тогда
			commonResponse.errorText = "Недопустимый статус " + orderStatus.status;
			Возврат commonResponse; 
		КонецЕсли;
		
		СтрокаЗаказа = ТаблицаЗаказов.Добавить();
		СтрокаЗаказа.НомерПалеты = orderStatus.routeId;
		СтрокаЗаказа.ДатаРейса = orderStatus.routingDate;
		СтрокаЗаказа.КодТерминалаДоставки = orderStatus.deliveryPlaceID;
		СтрокаЗаказа.НомерЗаказа = Формат(orderStatus.order, "ЧГ=");
		СтрокаЗаказа.КодСтатуса = orderStatus.status;
	КонецЦикла;
	
	ВнешнийОператорМаршрутизации = Справочники.Контрагенты.НайтиПоКоду("Shop_" + Формат(ordersStatus.routingOperator, "ЧГ="));
	
	КолонкиТаблицы.Добавить("ОператорМаршрутизации", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаЗаказов.ЗаполнитьЗначения(ВнешнийОператорМаршрутизации, "ОператорМаршрутизации");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаЗаказов", ТаблицаЗаказов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗаказов.НомерПалеты КАК НомерПалеты,
	|	ТаблицаЗаказов.ДатаРейса КАК ДатаРейса,
	|	ТаблицаЗаказов.КодТерминалаДоставки КАК КодТерминалаДоставки,
	|	ТаблицаЗаказов.НомерЗаказа КАК НомерЗаказа,
	|	ТаблицаЗаказов.КодСтатуса КАК КодСтатуса,
	|	ТаблицаЗаказов.ОператорМаршрутизации КАК ОператорМаршрутизации
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	&ТаблицаЗаказов КАК ТаблицаЗаказов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.НомерПалеты КАК НомерПалеты,
	|	ВТ_Заказы.ДатаРейса КАК ДатаРейса,
	|	ВТ_Заказы.НомерЗаказа КАК НомерЗаказа,
	|	ВТ_Заказы.КодТерминалаДоставки КАК КодТерминалаДоставки,
	|	ВТ_Заказы.КодСтатуса КАК КодСтатуса,
	|	Т_Рейс.Ссылка КАК Рейс,
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|	СтатусыЗаказов.Ссылка КАК Статус,
	|	РегиональныеТерминалы.Ссылка КАК ТерминалДоставки
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК Т_Рейс
	|		ПО ВТ_Заказы.ДатаРейса = Т_Рейс.ДатаРейса
	|			И ВТ_Заказы.НомерПалеты = Т_Рейс.НомерПалетты
	|			И ВТ_Заказы.ОператорМаршрутизации = Т_Рейс.ВнешнийОператорМаршрутизации
	|			И ВТ_Заказы.КодТерминалаДоставки = Т_Рейс.ТерминалДоставки.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ВТ_Заказы.НомерЗаказа = РеализацияТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусыЗаказов КАК СтатусыЗаказов
	|		ПО ВТ_Заказы.КодСтатуса = СтатусыЗаказов.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегиональныеТерминалы КАК РегиональныеТерминалы
	|		ПО ВТ_Заказы.КодТерминалаДоставки = РегиональныеТерминалы.Код";
	
	ТаблицаЗаказов = Запрос.Выполнить().Выгрузить();
	
	СтрокаЗаказа = ТаблицаЗаказов.Найти(Null, "ТерминалДоставки");
	Если СтрокаЗаказа <> Неопределено Тогда
		commonResponse.errorText = "Не найден терминал доставки " + СтрокаЗаказа.КодТерминалаДоставки;
		Возврат commonResponse;
	КонецЕсли;
	
	СтрокаЗаказа = ТаблицаЗаказов.Найти(Null, "Рейс");
	Если СтрокаЗаказа <> Неопределено Тогда
		commonResponse.errorText = "Не найден рейс: номер палеты " + СтрокаЗаказа.НомерПалеты + " дата рейса " + Формат(СтрокаЗаказа.ДатаРейса, "ДФ=dd.MM.yyyy") + " терминал доставки " + СтрокаЗаказа.КодТерминалаДоставки;
		Возврат commonResponse;
	КонецЕсли;
	
	СтрокаЗаказа = ТаблицаЗаказов.Найти(Null, "Статус");
	Если СтрокаЗаказа <> Неопределено Тогда
		commonResponse.errorText = "Не найден статус " + СтрокаЗаказа.КодСтатуса;
		Возврат commonResponse;
	КонецЕсли;
	
	СтрокаЗаказа = ТаблицаЗаказов.Найти(Null, "Заказ");
	Если СтрокаЗаказа <> Неопределено Тогда
		commonResponse.errorText = "Не найден заказ " + СтрокаЗаказа.НомерЗаказа;
		Возврат commonResponse;
	КонецЕсли;
	
	ТаблицаТерминалов = ТаблицаЗаказов.Скопировать(, "ТерминалДоставки");
	ТаблицаТерминалов.Свернуть("ТерминалДоставки");
	МассивТерминалов = ТаблицаТерминалов.ВыгрузитьКолонку("ТерминалДоставки");
	
	СтруктураПоиска = Новый Структура("ТерминалДоставки");
	
	Сейчас = ТекущаяДата();
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	ОшибкаТранзакции = Ложь;
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Попытка
		Для Каждого ТерминалДоставки Из МассивТерминалов Цикл
			СтруктураПоиска.ТерминалДоставки = ТерминалДоставки;
			
			Док = Документы.ГрупповаяУстановкаСтатусовЗаказов.СоздатьДокумент();
			Док.Дата = Сейчас;
			Док.УстановитьНовыйНомер();
			Док.Ответственный = ТекПользователь;
			Док.ТерминалОбработки = ТерминалДоставки;
			Док.ВнешнийОператорМаршрутизации = ВнешнийОператорМаршрутизации;
			
			Док.СтатусыЗаказов.Загрузить(ТаблицаЗаказов.Скопировать(СтруктураПоиска, "Заказ,Статус,Рейс"));
			
			Док.Статус = Док.СтатусыЗаказов[0].Статус;
			
			Док.Записать(РежимЗаписиДокумента.Проведение);
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ОшибкаТранзакции = Истина;
		commonResponse.errorText = ОписаниеОшибки();
	КонецПопытки;
	
	Если Не ОшибкаТранзакции Тогда
		commonResponse.isError = Ложь;
	КонецЕсли;
	
	Возврат commonResponse;
	
КонецФункции
//Асеев 07.04.2021 (Задача № 4529)<<<

//Асеев 29.07.2021 (Задача № 4523)>>>
Процедура ОтправитьЗаявкиНаПропускПоРейсуВнешнейМаршрутизации(Рейс)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Рейс.Ссылка КАК Ссылка,
	|	Рейс.Транспорт КАК Транспорт,
	|	Рейс.ДатаРейса КАК ДатаРейса
	|ИЗ
	|	Документ.Рейс КАК Рейс
	|ГДЕ
	|	Рейс.Ссылка = &Рейс";
	
	Запрос.УстановитьПараметр("Рейс", Рейс);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ОбработкаUnione = Обработки.СТРИЖ_ИнтеграцияUniOne.Создать();
	МакетHTML 		= ПолучитьОбщийМакет("ПропускАвто");
	ДанныеПисьма	= ЗаполнитьОсновныеДанныеПисьма();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ДанныеПривязкиРейсаИМашины = ПолучитьПривязкиРейсаИМашины(ВыборкаДетальныеЗаписи.Ссылка);
		
		ТекстМакет = МакетHTML.ПолучитьТекст();
		ТекстМакет = СтрЗаменить(ТекстМакет, "[ДатаПриезда]", 		Формат(ВыборкаДетальныеЗаписи.ДатаРейса, "ДФ=dd.MM.yyyy"));	
		ТекстМакет = СтрЗаменить(ТекстМакет, "[Автомобиль]", 		?(ДанныеПривязкиРейсаИМашины = Неопределено, "", ДанныеПривязкиРейсаИМашины.Транспорт));	
		ТекстМакет = СтрЗаменить(ТекстМакет, "[Пассажир]",			"");	
		ТекстМакет = СтрЗаменить(ТекстМакет, "[Водитель]",			?(ДанныеПривязкиРейсаИМашины = Неопределено, "", ДанныеПривязкиРейсаИМашины.Водитель));	
		ТекстМакет = СтрЗаменить(ТекстМакет, "[ВремяПриездаС]", 	"08:00");	
		ТекстМакет = СтрЗаменить(ТекстМакет, "[ВремяПриездаПО]", 	"20:00");	
		ТекстПисьма = ТекстМакет;
		
		ОбработкаUnione.ОтправитьEMAIL_HTTP(ДанныеПисьма.СписокПолучателей, ДанныеПисьма.Тема, ТекстПисьма,,,,,,,,,, Ложь);
		
	КонецЦикла;
	
КонецПроцедуры
//Асеев 29.07.2021 (Задача № 4523)<<<


Процедура РегламентОтправкаЗаявокНаПропускПоВнешнейМаршрутизации() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Рейс.Ссылка КАК Ссылка,
		|	Рейс.Транспорт КАК Транспорт,
		|	Рейс.ДатаРейса КАК ДатаРейса
		|ИЗ
		|	Документ.Рейс КАК Рейс
		|ГДЕ
		|	Рейс.ДатаРейса = &ДатаРейса
		|	И Рейс.Проведен
		|	И НЕ Рейс.ВнешнийОператорМаршрутизации = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ДатаРейса", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ОбработкаUnione = Обработки.СТРИЖ_ИнтеграцияUniOne.Создать();
	МакетHTML 		= ПолучитьОбщийМакет("ПропускАвто");
	ДанныеПисьма	= ЗаполнитьОсновныеДанныеПисьма();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ДанныеПривязкиРейсаИМашины = ПолучитьПривязкиРейсаИМашины(ВыборкаДетальныеЗаписи.Ссылка);
		
		ТекстМакет = МакетHTML.ПолучитьТекст();
		ТекстМакет = СтрЗаменить(ТекстМакет, "[ДатаПриезда]", 		Формат(ВыборкаДетальныеЗаписи.ДатаРейса, "ДФ=dd.MM.yyyy"));	
		ТекстМакет = СтрЗаменить(ТекстМакет, "[Автомобиль]", 		?(ДанныеПривязкиРейсаИМашины = Неопределено, "", ДанныеПривязкиРейсаИМашины.Транспорт));	
		ТекстМакет = СтрЗаменить(ТекстМакет, "[Пассажир]",			"");	
		ТекстМакет = СтрЗаменить(ТекстМакет, "[Водитель]",			?(ДанныеПривязкиРейсаИМашины = Неопределено, "", ДанныеПривязкиРейсаИМашины.Водитель));	
		ТекстМакет = СтрЗаменить(ТекстМакет, "[ВремяПриездаС]", 	"08:00");	
		ТекстМакет = СтрЗаменить(ТекстМакет, "[ВремяПриездаПО]", 	"20:00");	
		ТекстПисьма = ТекстМакет;
		
		ОбработкаUnione.ОтправитьEMAIL_HTTP(ДанныеПисьма.СписокПолучателей, ДанныеПисьма.Тема, ТекстПисьма,,,,,,,,,, Ложь);
		
	КонецЦикла;
	
КонецПроцедуры	

Функция ПолучитьПривязкиРейсаИМашины(Рейс)
	
	Отбор = Новый Структура("Рейс", Рейс);
	Возврат РегистрыСведений.ПривязкаМашинКРейсам.ПолучитьПоследнее(ТекущаяДата(), Отбор);
	
КонецФункции

Функция ЗаполнитьОсновныеДанныеПисьма()
	
	ДанныеПисьма = Новый Структура;
	
	СписокПолучателей = Новый Массив;
	СписокПолучателей.Добавить("g.polyakov@strizh-logistic.ru");
	СписокПолучателей.Добавить("oper@opz.ru");
	СписокПолучателей.Добавить("bp@opz.ru");
	СписокПолучателей.Добавить("zakaz_propuska_for_copy@strizh-logistic.ru");

	ДанныеПисьма.Вставить("СписокПолучателей", 	СписокПолучателей);
	ДанныеПисьма.Вставить("Тема", 				"Печать пропуска");
	
	Возврат ДанныеПисьма;
	
КонецФункции