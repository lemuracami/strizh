
Функция ДанныеJSONВСтруктуру(ДанныеJSON, ИменаСвойствСоЗначениямиДата = "") Экспорт
	Чт = Новый ЧтениеJSON;
	Чт.УстановитьСтроку(ДанныеJSON);
	СтруктураДанных = ПрочитатьJSON(Чт, Ложь, ИменаСвойствСоЗначениямиДата, ФорматДатыJSON.Microsoft);
	Возврат СтруктураДанных;
КонецФункции

Функция СформироватьСтрокуJSON(СтруктураJSON) Экспорт
	НастройкиСериализации = Новый НастройкиСериализацииJSON;
	НастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.Microsoft;
	НастройкиСериализации.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.УниверсальнаяДата;	
	
	
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, СтруктураJSON, НастройкиСериализации);
	СтрокаJSON = ЗаписьJSON.Закрыть();
	Возврат СтрокаJSON;
КонецФункции


Функция НайтиКонтрагента(ИдентификаторКонтрагента)
	ИдентификаторКонтрагента = "Shop_" + Формат(ИдентификаторКонтрагента, "ЧГ=");
	Зап = Новый Запрос;
	Зап.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Код = &Код";
	Зап.УстановитьПараметр("Код", ИдентификаторКонтрагента);	
	Выб = Зап.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда
		Возврат Выб.Контрагент;
	Иначе
		Возврат Неопределено;
	КонецеСли;	
КонецФункции	

Функция НайтиСклад(Контрагент, ИдентификаторСклада)
	Зап = Новый Запрос;
	Зап.Текст =
	"ВЫБРАТЬ
	|	СкладыМагазинов.Ссылка КАК Склад
	|ИЗ
	|	Справочник.СкладыМагазинов КАК СкладыМагазинов
	|ГДЕ
	|	СкладыМагазинов.Владелец = &Контрагент
	|	И СкладыМагазинов.ИдентификаторНаправления = &ИдентификаторНаправления";
	Зап.УстановитьПараметр("ИдентификаторНаправления", ИдентификаторСклада);			
	Зап.УстановитьПараметр("Контрагент", Контрагент);			
	
	Выб = Зап.Выполнить().Выбрать();
	Если Выб.Следующий() Тогда
		Возврат Выб.Склад;
	Иначе
		Возврат Неопределено;
	КонецеСли;	
КонецФункции

Функция НайтиДокумент(Контрагент, Номер)
	Зап = Новый Запрос;
	Зап.Текст =
	"ВЫБРАТЬ
	|	ПриходЗаказовНаСклад.Ссылка КАК Док
	|ИЗ
	|	Документ.ПриходЗаказовНаСклад КАК ПриходЗаказовНаСклад
	|ГДЕ
	|	ПриходЗаказовНаСклад.Контрагент = &Контрагент
	|	И ПриходЗаказовНаСклад.НомерВходящегоДокумента = &НомерВходящегоДокумента";
	Зап.УстановитьПараметр("НомерВходящегоДокумента", Номер);			
	Зап.УстановитьПараметр("Контрагент", Контрагент);			
	
	Выб = Зап.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда
		Возврат Выб.Док;
	Иначе
		Возврат Документы.ПриходЗаказовНаСклад.ПустаяСсылка();
	КонецЕсли;	
КонецФункции	

Процедура ЗаполнитьТабличнуюЧастьЗаказы(ВходныеДанные, Контрагент, Док)
	
	Таб = Новый ТаблицаЗначений;
	Таб.Колонки.Добавить("ВнешнийНомерЗаказа", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(30)));
	Таб.Колонки.Добавить("НомерЗаказа", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(15)));
	Таб.Колонки.Добавить("КоличествоМест", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(10)));
	
	ТабШтр = Новый ТаблицаЗначений;
	ТабШтр.Колонки.Добавить("ВнешнийНомерЗаказа", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(30)));
	ТабШтр.Колонки.Добавить("ИдентификаторМеста", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(15)));
	ТабШтр.Колонки.Добавить("Штрихкод", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(30)));
	ТабШтр.Колонки.Добавить("Заказ");
	
	Для Каждого Тек Из ВходныеДанные Цикл
		Нов = Таб.Добавить();
		Нов.ВнешнийНомерЗаказа = Тек.number;
		Нов.НомерЗаказа = Тек.orderId;
		Нов.КоличествоМест = Тек.quantityPlaces;
		
		Если Тек.packages = Неопределено Тогда
			Продолжить;
		КонецеСли;	
		Для Сч = 0 По Тек.packages.Количество() - 1 Цикл
			Нов = ТабШтр.Добавить();
			Нов.ВнешнийНомерЗаказа = Тек.number;
			Нов.ИдентификаторМеста = Тек.packages[Сч].id;
			Нов.Штрихкод = Тек.packages[Сч].barcode;
		КонецЦикла;	
	КонецЦикла;	
	
	Зап = Новый Запрос;
	Зап.Текст =
	"ВЫБРАТЬ
	|	Таб.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
	|	Таб.НомерЗаказа КАК НомерЗаказа,
	|	Таб.КоличествоМест КАК КоличествоМест
	|ПОМЕСТИТЬ ВТ_Номера
	|ИЗ
	|	&Таб КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Номера.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
	|	ВТ_Номера.НомерЗаказа КАК НомерЗаказа,
	|	ВТ_Номера.КоличествоМест КАК КоличествоМест,
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ
	|ИЗ
	|	ВТ_Номера КАК ВТ_Номера
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ВТ_Номера.ВнешнийНомерЗаказа = РеализацияТоваровУслуг.НомерВнешнегоЗаказа
	|			И (РеализацияТоваровУслуг.ВладелецТовара = &Контрагент)";
	Зап.УстановитьПараметр("Контрагент", Контрагент);			
	Зап.УстановитьПараметр("Таб", Таб);
	Выб = Зап.Выполнить().Выбрать();			
	
	Пока Выб.Следующий() Цикл
		СтрокатабличнойЧасти = Док.Заказы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокатабличнойЧасти, Выб);
		
		Струк = Новый Структура;
		Струк.Вставить("ВнешнийНомерЗаказа", Выб.ВнешнийНомерЗаказа);
		
		НайСтроки = ТабШтр.НайтиСтроки(Струк);
		
		Для Сч = 0 По НайСтроки.Количество() - 1 Цикл
			НайСтроки[Сч].Заказ = Выб.Заказ;
		КонецЦикла;	
	КонецЦикла; 
	
	Для Каждого Тек Из ТабШтр Цикл
		Нов =  Док.ШтрихкодыПоМестам.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Тек);
	КонецЦикла;	
	
КонецПроцедуры

Функция СформироватьДокумент(carriage, shopId, Основание) Экспорт
	
	Результат = Новый Структура("result,error,carriageId");
	
	МассивЗначений = carriage.parcels;
	
	//Проверка на дубли заказов
	МасПроверки = Новый Массив;
	Для Каждого Тек Из МассивЗначений Цикл
		Нум = СокрЛП(Тек.number);
		Если МасПроверки.Найти(Нум) = Неопределено Тогда 
			МасПроверки.Добавить(Нум);
		Иначе	
			Результат.result = Ложь;
			Результат.error = "В списке parcel обнаружены дубли заказов! (заказ " + Нум + "). Передача АПП невозможна!";
			Результат.carriageId = "";
			Возврат Результат;     
		КонецЕСли;	
	КонецЦикла;	
	
    //Идентефикация пользователя
    Контрагент = НайтиКонтрагента(shopId);
    Если Не ЗначениеЗаполнено(Контрагент) Тогда
        Результат.result = Ложь;
        Результат.error = "Ошибка идентификации клиента!";
        Результат.carriageId = "";
        Возврат Результат;     
    КонецЕсли;
	
	Склад = НайтиСклад(Контрагент, carriage.stockId);
	
    //Формируем документ ПриходЗаказовНаСклад
    //Проверим на наличие ранее созданных документов по внешнему номеру
    //ДокументПриходзаказовНаСкладСсылка = //Документы.ПриходЗаказовНаСклад.НайтиПоРеквизиту("НомерВходящегоДокумента", carriage.Number); 
	ДокументПриходзаказовНаСкладСсылка = НайтиДокумент(Контрагент, carriage.Number);
    Если НЕ ДокументПриходзаказовНаСкладСсылка.Пустая() Тогда
        //Получаем объект
		ДатаДоставкиЗаказа = ТекущаяДата();
		ДокументПриходзаказовНаСкладОбъект = ДокументПриходзаказовНаСкладСсылка.ПолучитьОбъект();
		
		ВремяЗакрытия = Константы.ВремяОкончанияОперационногоДняСклада.Получить();
		
		ПределДаты = Дата(Год(ДатаДоставкиЗаказа), Месяц(ДатаДоставкиЗаказа), День(ДатаДоставкиЗаказа), Час(ВремяЗакрытия), Минута(ВремяЗакрытия), 0);
		
		//Асеев 09.08.2022 (по письму Приёмка Леруа в ОП) добавлено условие: найденный документ не может быть старше двух дней
		Если ДокументПриходзаказовНаСкладСсылка.Проведен И (ТекущаяДата() > ПределДаты Или (ТекущаяДата() - ДокументПриходзаказовНаСкладОбъект.Дата > 172800)) Тогда
		    Результат.result = Ложь;
			Результат.error = "Документ с таким номером в базе уже создан и проведен!";
		    Результат.carriageId = СокрЛП(ДокументПриходзаказовНаСкладСсылка.Номер);
			Возврат Результат;     
		КонецЕсли;
        
        //Очищаем табличные части для ввода новых данных
        ДокументПриходзаказовНаСкладОбъект.Заказы.Очистить();
        ДокументПриходзаказовНаСкладОбъект.Товары.Очистить();
		ДокументПриходзаказовНаСкладОбъект.ШтрихкодыПоМестам.Очистить();
        
        //Заполнение табличной части Заказы
        ЗаполнитьТабличнуюЧастьЗаказы(МассивЗначений, Контрагент, ДокументПриходзаказовНаСкладОбъект);
    Иначе
        //Создаем новый ДокументОбъект
        ДокументПриходзаказовНаСкладОбъект = Документы.ПриходЗаказовНаСклад.СоздатьДокумент();
        
        //Заполнение табличной части Заказы
        ЗаполнитьТабличнуюЧастьЗаказы(МассивЗначений, Контрагент, ДокументПриходзаказовНаСкладОбъект);
    КонецЕсли;
	
	//Асеев 07.09.2020 (Задача № 4197)>>>
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.ОбновлятьКоличествоМестЗаказовПриВыгрузкеАПП, ЛОЖЬ) КАК ОбновлятьКоличествоМестЗаказовПриВыгрузкеАПП
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИСТИНА КАК Поле1) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(&Период, Контрагент = &Контрагент) КАК ПараметрыКонтрагентовСрезПоследних
	|		ПО (ИСТИНА)";
	ВыборкаПараметрыКонтрагента = Запрос.Выполнить().Выбрать();
	ВыборкаПараметрыКонтрагента.Следующий();
	//Асеев 07.09.2020 (Задача № 4197)<<<
	
	//Записываем документ
	Попытка
		//Заполняем шапку
		ДокументПриходзаказовНаСкладОбъект.Основание = Основание;
		ДокументПриходзаказовНаСкладОбъект.Контрагент = Контрагент;
		
		//Асеев 07.09.2020 (Задача № 4197)>>>
		ДокументПриходзаказовНаСкладОбъект.ОбновлятьКоличествоМестЗаказов = ВыборкаПараметрыКонтрагента.ОбновлятьКоличествоМестЗаказовПриВыгрузкеАПП;
		//Асеев 07.09.2020 (Задача № 4197)<<<
		
		ДокументПриходзаказовНаСкладОбъект.НомерВходящегоДокумента = carriage.Number;
		ДокументПриходзаказовНаСкладОбъект.ДатаВходящегоДокумента = carriage.Date;
		ДокументПриходзаказовНаСкладОбъект.Дата = ТекущаяДата();
		ДокументПриходзаказовНаСкладОбъект.СкладМагазина = Склад;
		
		// Костыль для westwing - Михушкин - 05.05.2017
		Если Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_434 ") Тогда
			Попытка					
				СкладМ = ДокументПриходзаказовНаСкладОбъект.Заказы[0].Заказ.Товары[0].СкладМагазина;	
				ДокументПриходзаказовНаСкладОбъект.СкладМагазина = СкладМ;
				
				ДокументПриходзаказовНаСкладОбъект.ТерминалПриема = ДокументПриходзаказовНаСкладОбъект.Заказы[0].Заказ.ТерминалПриема;
				ДокументПриходзаказовНаСкладОбъект.ТерминалДоставки = ДокументПриходзаказовНаСкладОбъект.Заказы[0].Заказ.ТерминалДоставки;
			Исключение			
			КонецПопытки;	
		КонецЕсли;
		
		
		//Запись
		//Асеев 22.09.2021 (по письму Расхождение мест B2B в разблюдовках)>>>
		//ДокументПриходзаказовНаСкладОбъект.Записать(РежимЗаписиДокумента.Проведение);
		ДокументПриходзаказовНаСкладОбъект.Записать();
		Попытка
			ДокументПриходзаказовНаСкладОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ТекстОшибки = ОписаниеОшибки();
			pkv.ДобавитьВСписокОтложенногоПроведения(ДокументПриходзаказовНаСкладОбъект.Ссылка, "Не удалось провести " + ДокументПриходзаказовНаСкладОбъект + " addCarriage "+ ТекстОшибки);
		КонецПопытки;
		//Асеев 22.09.2021 (по письму Расхождение мест B2B в разблюдовках)<<<
		//Ответ
		Результат.result = Истина;
		Результат.carriageId = ДокументПриходзаказовНаСкладОбъект.Номер;
		Результат.error = "";
		Возврат Результат;
	Исключение
		//Ответ
		Результат.result = Ложь;
		Результат.carriageId = "";
		Результат.error = ОписаниеОшибки();
		Возврат Результат;
	КонецПопытки;
	
КонецФункции


//ВходныеДанные(
//carriage(number,date,stockId,parcels)
//shopId
//)
//parcels[number,orderId,quantityPlaces,packages],[]...//parcel
//packages[id,barcode],[]...//package
//на выходе(result,error,carriageId)
Функция ДобавитьПриход(ВходныеДанные) Экспорт
	
	Попытка
		carriage = ВходныеДанные.carriage;
		shopId = ВходныеДанные.shopId;
		
		СтруктураОтвета = СформироватьДокумент(carriage, shopId, Перечисления.ТипыЗагрузкиДанных.HTTPСервисСтриж);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтруктураОтвета = Новый Структура("result,error,carriageId", Ложь, ТекстОшибки, "");
	КонецПопытки;
	
	Возврат СтруктураОтвета;
	
КонецФункции


