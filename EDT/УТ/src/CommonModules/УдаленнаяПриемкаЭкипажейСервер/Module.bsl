Процедура РегламентОбработкаДанныхМП() Экспорт
	
	//+Степанов Добавлены временные таблицы(первые два запроса) для получения признака выполнения фонового задания.
	Запрос = Новый Запрос;
	//// Запрос заменен по Задача № 3329
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	МАКСИМУМ(КонтрольВремени.ДатаРейсов) КАК ДатаРейсов,
	//               |	КонтрольВремени.Терминал КАК Терминал
	//               |ПОМЕСТИТЬ ДатаНачалаЗаданияМаршрутизации
	//               |ИЗ
	//               |	РегистрСведений.КонтрольВремени КАК КонтрольВремени
	//               |ГДЕ
	//               |	КонтрольВремени.Рейс = ЗНАЧЕНИЕ(Документ.Рейс.ПустаяСсылка)
	//               |	И КонтрольВремени.ОкончаниеСобытия = ЛОЖЬ
	//               |	И КонтрольВремени.Событие = ЗНАЧЕНИЕ(Справочник.СобытияКонтроляВремени.ПМФиксацияМаршрутизации)
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	КонтрольВремени.Терминал
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	КонтрольВремени.ОкончаниеСобытия КАК ОкончаниеСобытия,
	//               |	КонтрольВремени.Терминал КАК Терминал,
	//               |	КонтрольВремени.ДатаРейсов КАК ДатаРейсов
	//               |ПОМЕСТИТЬ ДанныеОВыполненииРасчетаМаршрутизации
	//               |ИЗ
	//               |	ДатаНачалаЗаданияМаршрутизации КАК ДатаНачалаЗаданияМаршрутизации
	//               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрольВремени КАК КонтрольВремени
	//               |		ПО ДатаНачалаЗаданияМаршрутизации.ДатаРейсов = КонтрольВремени.ДатаРейсов
	//               |			И ДатаНачалаЗаданияМаршрутизации.Терминал = КонтрольВремени.Терминал
	//               |ГДЕ
	//               |	КонтрольВремени.Рейс = ЗНАЧЕНИЕ(Документ.Рейс.ПустаяСсылка)
	//               |	И КонтрольВремени.ОкончаниеСобытия = ИСТИНА
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	УчетДанныхМППоРейсам.ДокументМП КАК ДокументМП,
	//               |	УчетДанныхМППоРейсам.Рейс КАК Рейс,
	//               |	УчетДанныхМППоРейсам.ТипДокумента КАК ТипДокумента,
	//               |	УчетДанныхМППоРейсам.ЭтапОбработки КАК ЭтапОбработки,
	//               |	УчетДанныхМППоРейсам.ДокументКОбработке КАК ДокументКОбработке,
	//               |	УчетДанныхМППоРейсам.ОписаниеОшибки КАК ОписаниеОшибки,
	//               |	УчетДанныхМППоРейсам.ДокументМП.Дата КАК ДокументМПДата,
	//               |	ПРЕДСТАВЛЕНИЕ(УчетДанныхМППоРейсам.ДокументМП) КАК ДокументМППредставление,
	//               |	ПРЕДСТАВЛЕНИЕ(УчетДанныхМППоРейсам.Рейс) КАК РейсПредставление
	//               |ИЗ
	//               |	ДанныеОВыполненииРасчетаМаршрутизации КАК ДанныеОВыполненииРасчетаМаршрутизации
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетДанныхМППоРейсам КАК УчетДанныхМППоРейсам
	//               |		ПО УчетДанныхМППоРейсам.Рейс.ТерминалДоставки = ДанныеОВыполненииРасчетаМаршрутизации.Терминал
	//               |ГДЕ
	//               |	УчетДанныхМППоРейсам.ЭтапОбработки = ЗНАЧЕНИЕ(Перечисление.ЭтапыОбработкиДанныхМП.ОбработкаНазначена)
	//               |	И НЕ ДанныеОВыполненииРасчетаМаршрутизации.ОкончаниеСобытия ЕСТЬ NULL
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	ДокументМПДата,
	//               |	Рейс,
	//               |	ТипДокумента";
	
	////Новый запрос по Задача № 3329
	Запрос.Текст = "ВЫБРАТЬ
	|	МАКСИМУМ(КонтрольВремени.ДатаРейсов) КАК ДатаРейсов,
	|	КонтрольВремени.Терминал КАК Терминал
	|ПОМЕСТИТЬ ДатаНачалаЗаданияМаршрутизации
	|ИЗ
	|	РегистрСведений.КонтрольВремени КАК КонтрольВремени
	|ГДЕ
	|	КонтрольВремени.Рейс = ЗНАЧЕНИЕ(Документ.Рейс.ПустаяСсылка)
	|	И КонтрольВремени.ОкончаниеСобытия = ЛОЖЬ
	|	И КонтрольВремени.Событие = ЗНАЧЕНИЕ(Справочник.СобытияКонтроляВремени.ПМФиксацияМаршрутизации)
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтрольВремени.Терминал
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрольВремени.ОкончаниеСобытия КАК ОкончаниеСобытия,
	|	КонтрольВремени.Терминал КАК Терминал,
	|	КонтрольВремени.ДатаРейсов КАК ДатаРейсов
	|ПОМЕСТИТЬ ДанныеОВыполненииРасчетаМаршрутизации
	|ИЗ
	|	ДатаНачалаЗаданияМаршрутизации КАК ДатаНачалаЗаданияМаршрутизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрольВремени КАК КонтрольВремени
	|		ПО ДатаНачалаЗаданияМаршрутизации.ДатаРейсов = КонтрольВремени.ДатаРейсов
	|			И ДатаНачалаЗаданияМаршрутизации.Терминал = КонтрольВремени.Терминал
	|ГДЕ
	|	КонтрольВремени.Рейс = ЗНАЧЕНИЕ(Документ.Рейс.ПустаяСсылка)
	|	И КонтрольВремени.ОкончаниеСобытия = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетДанныхМППоРейсамСрезПоследних.ДокументМП КАК ДокументМП,
	|	УчетДанныхМППоРейсамСрезПоследних.Рейс КАК Рейс,
	|	УчетДанныхМППоРейсамСрезПоследних.ТипДокумента КАК ТипДокумента,
	|	УчетДанныхМППоРейсамСрезПоследних.ЭтапОбработки КАК ЭтапОбработки,
	|	УчетДанныхМППоРейсамСрезПоследних.ДокументКОбработке КАК ДокументКОбработке,
	|	УчетДанныхМППоРейсамСрезПоследних.ОписаниеОшибки КАК ОписаниеОшибки,
	|	УчетДанныхМППоРейсамСрезПоследних.ДокументМП.Дата КАК ДокументМПДата,
	|	ПРЕДСТАВЛЕНИЕ(УчетДанныхМППоРейсамСрезПоследних.ДокументМП) КАК ДокументМППредставление,
	|	ПРЕДСТАВЛЕНИЕ(УчетДанныхМППоРейсамСрезПоследних.Рейс) КАК РейсПредставление,
	|	новаОтчетВодителя.Ссылка КАК новаОтчетВодителя,
	|	ПриходДСПоОтчетуВодителя.Ссылка КАК ПриходДС
	|ИЗ
	|	ДанныеОВыполненииРасчетаМаршрутизации КАК ДанныеОВыполненииРасчетаМаршрутизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетДанныхМППоРейсам.СрезПоследних(, Рейс.ДатаРейса МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаВыборки, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаВыборки, ДЕНЬ)) КАК УчетДанныхМППоРейсамСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя КАК ПриходДСПоОтчетуВодителя
	|				ПО новаОтчетВодителя.Ссылка = ПриходДСПоОтчетуВодителя.ОтчетВодителя
	|					И (ПриходДСПоОтчетуВодителя.Проведен)
	|			ПО УчетДанныхМППоРейсамСрезПоследних.Рейс.РейсМестнойДоставки = новаОтчетВодителя.Рейс
	|		ПО (УчетДанныхМППоРейсамСрезПоследних.Рейс.ТерминалДоставки = ДанныеОВыполненииРасчетаМаршрутизации.Терминал)
	|ГДЕ
	|	УчетДанныхМППоРейсамСрезПоследних.ЭтапОбработки = ЗНАЧЕНИЕ(Перечисление.ЭтапыОбработкиДанныхМП.ОбработкаНазначена)
	|	И НЕ ДанныеОВыполненииРасчетаМаршрутизации.ОкончаниеСобытия ЕСТЬ NULL
	|	И ПриходДСПоОтчетуВодителя.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументМПДата,
	|	Рейс,
	|	ТипДокумента";
	
	Запрос.УстановитьПараметр("ДатаВыборки", ТекущаяДата());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Мас = ОбработкаСобытийИУведомленийСервер.ВернутьМассивАдресатовПоСобытию(Перечисления.ВидыСобытийУведомленияАбонентов.ОбработкаУдаленнойПриемкиЭкипажей_Ошибка);

	Пока Выборка.Следующий() Цикл
		
		//Мас = ОбработкаСобытийИУведомленийСервер.ВернутьМассивАдресатовПоСобытию(Перечисления.ВидыСобытийУведомленияАбонентов.ОбработкаУдаленнойПриемкиЭкипажей_Ошибка);
		
		Рейс = Выборка.Рейс;
		ОтчетПоТоварамМП = Выборка.ДокументМП;
		ОтчетПоДСМП = Выборка.ДокументМП;
		
		ТипОбработки = "";
		
		СтруктураВозврата =  Новый Структура("Ошибка, Документ", "", Неопределено);
		
		Если Выборка.ТипДокумента = 0 Тогда
			
			СтруктураВозврата = СоздатьВозвратЗаказовОтВодителя(Рейс, ОтчетПоТоварамМП);
			ТипОбработки = "СоздатьВозвратЗаказовОтВодителя";
			
		ИначеЕсли Выборка.ТипДокумента = 1 Тогда
			
			СтруктураВозврата = СоздатьНоваОтчетВодителя(Рейс);
			ТипОбработки = "СоздатьНоваОтчетВодителя";
			
		ИначеЕсли Выборка.ТипДокумента = 2 Тогда
			
			СтруктураВозврата = СоздатьПриходДСПоОтчетуВодителя(Рейс, ОтчетПоДСМП);
			ТипОбработки = "СоздатьПриходДСПоОтчетуВодителя";
	
			
		КонецЕсли;	
		
		МенеджерЗаписи = РегистрыСведений.УчетДанныхМППоРейсам.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период = ТекущаяДата(); // Задача № 3329
		МенеджерЗаписи.ДокументМП = Выборка.ДокументМП;
		МенеджерЗаписи.Рейс = Выборка.Рейс;
		МенеджерЗаписи.ТипДокумента = Выборка.ТипДокумента;
	 	МенеджерЗаписи.ДокументКОбработке = СтруктураВозврата.Документ;
		
		Если СтруктураВозврата.Ошибка <> "" Тогда
			
			
			МенеджерЗаписи.ЭтапОбработки = Перечисления.ЭтапыОбработкиДанныхМП.ОшибкаОбработки;
			МенеджерЗаписи.ОписаниеОшибки = СтруктураВозврата.Ошибка;
					
			Если Мас.Количество() > 0 Тогда
				
				ТекстПисьма = "Документ МП:"  + Выборка.ДокументМППредставление + ". Рейс: " + Выборка.РейсПредставление + "." + Символы.ПС + " Тип обработки " + ТипОбработки + ". Ошибка: " + Символы.ПС + СтруктураВозврата.Ошибка;
				lem.ОтправитьСообщение(Мас, "Выполнение регламента:  Обработка удаленной приемки экипажей", ТекстПисьма, , "Логистическая компания ""Стриж""", , ТипТекстаПочтовогоСообщения.ПростойТекст); 		
				
			КонецЕсли;
			
			
		Иначе 	
			
			МенеджерЗаписи.ЭтапОбработки = Перечисления.ЭтапыОбработкиДанныхМП.ОбработкаПроизведена;
			
		КонецЕсли;
		
		МенеджерЗаписи.Записать();
	
	КонецЦикла; 
	
КонецПроцедуры	

Функция СоздатьВозвратЗаказовОтВодителя(Рейс,ОтчетПоТоварамМП) Экспорт 
	
	Попытка
	
		Документ = Документы.ВозвратЗаказовОтВодителя.НайтиПоРеквизиту("Рейс", Рейс);
		
		Если Документ = Документы.ВозвратЗаказовОтВодителя.ПустаяСсылка() Тогда
			
			ДокументОбъект = Документы.ВозвратЗаказовОтВодителя.СоздатьДокумент();
						
		Иначе 
			
			ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Доставки.Очистить();
			ДокументОбъект.Товары.Очистить();
			
		КонецЕсли;
		
		
		ДокументОбъект.Дата = ТекущаяДата();
		ДокументОбъект.Рейс = Рейс;
		ДокументОбъект.УдаленноеЗакрытие =  baoВызовСервера.ПолучитьУдаленноеЗакрытиеДляТранспортаПоРейсу(Рейс);
		ДокументОбъект.Склад = ДокументОбъект.Рейс.ТерминалДоставки.Склад;
		
		ДокументОбъект.ЗаполнитьПоРейсуНаСервере(ДокументОбъект);
		//Геннадий #4191 от 31.08.2020 ->
		Если 
				ДокументОбъект.Транспорт.Код = "000562" Или
				ДокументОбъект.Транспорт.Код = "000757" Или
				ДокументОбъект.Транспорт.Код = "000731" Или
				ДокументОбъект.Транспорт.Код = "000524" Или
				ДокументОбъект.Транспорт.Код = "000853" Или
				ДокументОбъект.Транспорт.Код = "000522" Или
				ДокументОбъект.Транспорт.Код = "000560" Или
				ДокументОбъект.Транспорт.Код = "000732" Или
				ДокументОбъект.Транспорт.Код = "000480" Или
				ДокументОбъект.Транспорт.Код = "000201" Или
				ДокументОбъект.Транспорт.Код = "000276" Или
				ДокументОбъект.Транспорт.Код = "000640" Или
				ДокументОбъект.Транспорт.Код = "000790" Или
				ДокументОбъект.Транспорт.Код = "000814" Или
				ДокументОбъект.Транспорт.Код = "000677" Или
				ДокументОбъект.Транспорт.Код = "000627" Или
				ДокументОбъект.Транспорт.Код = "000667" Или
				ДокументОбъект.Транспорт.Код = "000813" Или
				ДокументОбъект.Транспорт.Код = "000726" Или
				ДокументОбъект.Транспорт.Код = "000555" Или
				ДокументОбъект.Транспорт.Код = "000233" Или
				ДокументОбъект.Транспорт.Код = "000762" Или
				ДокументОбъект.Транспорт.Код = "000651" Или
				ДокументОбъект.Транспорт.Код = "000387" Или
				ДокументОбъект.Транспорт.Код = "000746" Или
				ДокументОбъект.Транспорт.Код = "000413" Или
				ДокументОбъект.Транспорт.Код = "000456" Или
				ДокументОбъект.Транспорт.Код = "000633" Или
				ДокументОбъект.Транспорт.Код = "000810" Или
				ДокументОбъект.Транспорт.Код = "000592" Или
				ДокументОбъект.Транспорт.Код = "000848" Или
				ДокументОбъект.Транспорт.Код = "000808" Или
				ДокументОбъект.Транспорт.Код = "000847" Или
				ДокументОбъект.Транспорт.Код = "000402" Или
				ДокументОбъект.Транспорт.Код = "000519" Или
				ДокументОбъект.Транспорт.Код = "000238" Или
				ДокументОбъект.Транспорт.Код = "000666" Или
				ДокументОбъект.Транспорт.Код = "000632" Или
				ДокументОбъект.Транспорт.Код = "000445" Или
				ДокументОбъект.Транспорт.Код = "000647" Или
				ДокументОбъект.Транспорт.Код = "000804" Или
				ДокументОбъект.Транспорт.Код = "000512" Или
				ДокументОбъект.Транспорт.Код = "000713" Или
				ДокументОбъект.Транспорт.Код = "000850" Или
				ДокументОбъект.Транспорт.Код = "000620" Или
				ДокументОбъект.Транспорт.Код = "000563"
				Тогда
				
			ДокументОбъект.ДозаполнитьПоДаннымОтчетПоТоварамМП_Новая(ОтчетПоТоварамМП, ДокументОбъект);
		Иначе
			ДокументОбъект.ДозаполнитьПоДаннымОтчетПоТоварамМП(ОтчетПоТоварамМП, ДокументОбъект);
		КонецЕсли;
		//Геннадий #4191 от 31.08.2020 <-
		
		ДокументОбъект.Записать();
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	Исключение
		
		Возврат Новый Структура("Ошибка, Документ", ОписаниеОшибки(), ДокументОбъект.Ссылка);

	
	КонецПопытки;
		
	Возврат Новый Структура("Ошибка, Документ", "", ДокументОбъект.Ссылка);
	
КонецФункции	

Функция СоздатьНоваОтчетВодителя(Рейс) Экспорт 
	
	Попытка
	
		Документ = Документы.новаОтчетВодителя.НайтиПоРеквизиту("Рейс", Рейс.РейсМестнойДоставки);
		
		Если Документ = Документы.новаОтчетВодителя.ПустаяСсылка() Тогда
			
			ДокументОбъект = Документы.новаОтчетВодителя.СоздатьДокумент();
						
		Иначе 
			
			ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
			
			Для Каждого ТЧ Из ДокументОбъект.Ссылка.Метаданные().ТабличныеЧасти Цикл 
				
				ДокументОбъект[ТЧ.Имя].Очистить();
				
			КонецЦикла;	
			
			 			
		КонецЕсли;
		
		
		ДокументОбъект.Дата = ТекущаяДата();
		ДокументОбъект.Рейс = Рейс.РейсМестнойДоставки;
		ДокументОбъект.УдаленноеЗакрытие =  baoВызовСервера.ПолучитьУдаленноеЗакрытиеДляТранспортаПоРейсу(Рейс);
		
		//Задания
		ДокументОбъект.Заполнить(Рейс.РейсМестнойДоставки);
		ДокументОбъект.ОбновитьДанныеМПНаСервере(ДокументОбъект);
		ДокументОбъект.ОбновитьИтоговыеПоказателиНаСервере(ДокументОбъект);
		
		ДокументОбъект.Записать();
		
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	новаОтчетВодителяЗадания.Задание.Номер КАК НомерЗаказа,
		            |	новаОтчетВодителяЗадания.Ссылка.Транспорт КАК Транспорт,
		            |	новаОтчетВодителяЗадания.Ссылка.Водитель КАК Водитель
		            |ИЗ
		            |	Документ.новаОтчетВодителя.Задания КАК новаОтчетВодителяЗадания
		            |ГДЕ
		            |	новаОтчетВодителяЗадания.Ссылка = &Док
		            |	И новаОтчетВодителяЗадания.ПричинаОтказа.ТребоватьВводНовогоАдреса = ИСТИНА";
		Зап.УстановитьПараметр("Док", ДокументОбъект.Ссылка);
		Выб = Зап.Выполнить().Выбрать();
		
		СтрокаПисьма = "";
		СтрокаЗаголовка = "";
		
		Пока Выб.Следующий() Цикл
			Если Не ЗначениеЗаполнено(СтрокаЗаголовка) Тогда
				СтрокаЗаголовка = "Смена адреса удаленного закрытия, Авто " + Выб.Транспорт + ",  водитель " + Выб.Водитель;
			КонецЕсли;	
			
			СтрокаПисьма = СтрокаПисьма + "Заказ " + СокрЛП(Выб.НомерЗаказа) + Символы.ПС;
		КонецЦикла;	
		
		Если ЗначениеЗаполнено(СтрокаПисьма) Тогда
			Мас = Новый Массив;
			Мас.Добавить("logist@strizh-logistic.ru");
			//Мас.Добавить("dmitry.sherbinkin@strizh-logistic.ru");
			//Мас.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		
			lem.ОтправитьСообщение(Мас, СтрокаЗаголовка, СтрокаПисьма);
		КонецеСли;	
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	Исключение
		
		Возврат Новый Структура("Ошибка, Документ", ОписаниеОшибки(), ДокументОбъект.Ссылка);

	
	КонецПопытки;
		
	Возврат Новый Структура("Ошибка, Документ", "", ДокументОбъект.Ссылка);
	
КонецФункции	

Функция СоздатьПриходДСПоОтчетуВодителя(Рейс, ОтчетПоДСМП) Экспорт 
	                                                           
	Попытка
		
		ДокументноваОтчетВодителя = Документы.новаОтчетВодителя.НайтиПоРеквизиту("Рейс", Рейс.РейсМестнойДоставки);

		Если ДокументноваОтчетВодителя = Документы.новаОтчетВодителя.ПустаяСсылка() Тогда
			Документ = Документы.ПриходДСПоОтчетуВодителя.ПустаяСсылка();
			
			Возврат Новый Структура("Ошибка, Документ", "Не найден новаОтчетВодителя по Рейсу: " + Рейс.РейсМестнойДоставки, Неопределено);
			
		Иначе 
			Документ = Документы.ПриходДСПоОтчетуВодителя.НайтиПоРеквизиту("ОтчетВодителя", ДокументноваОтчетВодителя);
		КонецЕсли;	
		
		Если Документ = Документы.ПриходДСПоОтчетуВодителя.ПустаяСсылка() Тогда
			
			ДокументОбъект = Документы.ПриходДСПоОтчетуВодителя.СоздатьДокумент();
						
		Иначе 
			
			ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
			
			Для Каждого ТЧ Из ДокументОбъект.Ссылка.Метаданные().ТабличныеЧасти Цикл 
				
				ДокументОбъект[ТЧ.Имя].Очистить();
				
			КонецЦикла;	
			
			 			
		КонецЕсли;
		
		
		ДокументОбъект.Дата = ТекущаяДата();
		ДокументОбъект.ОтчетВодителя = ДокументноваОтчетВодителя;
		ДокументОбъект.УдаленноеЗакрытие =  baoВызовСервера.ПолучитьУдаленноеЗакрытиеДляТранспортаПоРейсу(Рейс);
		
		// Якурнов 29.10.2018 16:50:23 
		ДокументОбъект.ТерминалДоставки = ДокументноваОтчетВодителя.ТерминалДоставки;
		
		ДокументОбъект.ЗаполнитьНаСервере();
		ДокументОбъект.ДозаполнитьПоДаннымОтчетПоДСМП(ОтчетПоДСМП, ДокументОбъект); 
		//Асеев 03.10.2022 (Задача № 4905)>>>
		ДокументОбъект.ПересчитатьИтогиПоДоставкам();
		//Асеев 03.10.2022 (Задача № 4905)<<<		
		
		ДокументОбъект.Записать();
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	Исключение
		
		Возврат Новый Структура("Ошибка, Документ", ОписаниеОшибки(), ДокументОбъект.Ссылка);

	
	КонецПопытки;
		
	Возврат Новый Структура("Ошибка, Документ", "", ДокументОбъект.Ссылка);
	
КонецФункции	

//Асеев 26.02.2021 (по письму Проблема при приёмке удаленщиков.)>>>
Функция ЭтоСсылкаНаНесуществующийДокумент(Ссылка)
	
	ИмяДокумента = Ссылка.Метаданные().Имя;
	
	БлокировкаДанных = Новый БлокировкаДанных;
	
	ЭлементБлокировки = БлокировкаДанных.Добавить("Документ." + ИмяДокумента);
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Ссылка);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	
	БлокировкаДанных.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Документ." + ИмяДокумента + " КАК Т_Документ
	|ГДЕ
	|	Т_Документ.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции
//Асеев 26.02.2021 (по письму Проблема при приёмке удаленщиков.)<<<

Процедура РегламентНазначениеОбработкиДанныхМП() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОтчетПоТоварамМП.Ссылка КАК Ссылка,
	               |	ОтчетПоТоварамМП.Транспорт КАК Транспорт,
	               |	ОтчетПоТоварамМП.ДатаРейса КАК ДатаРейса,
	               |	ОтчетПоТоварамМП.ЭкипажСогласенСДанными КАК ЭкипажСогласенСДанными
	               |ПОМЕСТИТЬ ВТ_Документы
	               |ИЗ
	               |	Документ.ОтчетПоТоварамМП КАК ОтчетПоТоварамМП
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетДанныхМППоРейсам КАК УчетДанныхМППоРейсам
	               |		ПО ОтчетПоТоварамМП.Ссылка = УчетДанныхМППоРейсам.ДокументМП
	               |			И (УчетДанныхМППоРейсам.ТипДокумента = 0
	               |				ИЛИ УчетДанныхМППоРейсам.ТипДокумента = 1)
	               |ГДЕ
	               |	УчетДанныхМППоРейсам.ДокументМП ЕСТЬ NULL
	               |	И ОтчетПоТоварамМП.ПометкаУдаления = ЛОЖЬ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ОтчетПоДСМП.Ссылка,
	               |	ОтчетПоДСМП.Транспорт,
	               |	ОтчетПоДСМП.ДатаРейса,
	               |	ОтчетПоДСМП.ЭкипажСогласенСДанными
	               |ИЗ
	               |	Документ.ОтчетПоДСМП КАК ОтчетПоДСМП
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетДанныхМППоРейсам КАК УчетДанныхМППоРейсам
	               |		ПО ОтчетПоДСМП.Ссылка = УчетДанныхМППоРейсам.ДокументМП
	               |			И (УчетДанныхМППоРейсам.ТипДокумента = 2)
	               |ГДЕ
	               |	УчетДанныхМППоРейсам.ДокументМП ЕСТЬ NULL
	               |	И ОтчетПоДСМП.ПометкаУдаления = ЛОЖЬ
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Ссылка,
	               |	Транспорт,
	               |	ДатаРейса
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Документы.Ссылка КАК Ссылка,
	               |	ВТ_Документы.Транспорт КАК Транспорт,
	               |	ВТ_Документы.ДатаРейса КАК ДатаРейса,
	               |	МАКСИМУМ(ПривязкаМашинКРейсам.Период) КАК Период,
	               |	ВТ_Документы.ЭкипажСогласенСДанными КАК ЭкипажСогласенСДанными
	               |ПОМЕСТИТЬ ВТ_СрезРейсов
	               |ИЗ
	               |	ВТ_Документы КАК ВТ_Документы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам КАК ПривязкаМашинКРейсам
	               |		ПО (НАЧАЛОПЕРИОДА(ВТ_Документы.ДатаРейса, ДЕНЬ) = НАЧАЛОПЕРИОДА(ПривязкаМашинКРейсам.Рейс.ДатаРейса, ДЕНЬ))
	               |			И ВТ_Документы.Транспорт = ПривязкаМашинКРейсам.Транспорт
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Документы.Ссылка,
	               |	ВТ_Документы.Транспорт,
	               |	ВТ_Документы.ДатаРейса,
	               |	ВТ_Документы.ЭкипажСогласенСДанными
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Транспорт,
	               |	Период,
	               |	ДатаРейса
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СрезРейсов.Ссылка КАК Ссылка,
	               |	ВТ_СрезРейсов.Транспорт КАК Транспорт,
	               |	ВТ_СрезРейсов.ДатаРейса КАК ДатаРейса,
	               |	ЕСТЬNULL(ПривязкаМашинКРейсам.Рейс, ЗНАЧЕНИЕ(Документ.Рейс.ПустаяСсылка)) КАК Рейс,
	               |	ВТ_СрезРейсов.ЭкипажСогласенСДанными КАК ЭкипажСогласенСДанными
	               |ПОМЕСТИТЬ ВТ_СРейсами
	               |ИЗ
	               |	ВТ_СрезРейсов КАК ВТ_СрезРейсов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам КАК ПривязкаМашинКРейсам
	               |		ПО ВТ_СрезРейсов.Транспорт = ПривязкаМашинКРейсам.Транспорт
	               |			И (НАЧАЛОПЕРИОДА(ВТ_СрезРейсов.ДатаРейса, ДЕНЬ) = НАЧАЛОПЕРИОДА(ПривязкаМашинКРейсам.Рейс.ДатаРейса, ДЕНЬ))
	               |			И ВТ_СрезРейсов.Период = ПривязкаМашинКРейсам.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СРейсами.Ссылка КАК Ссылка,
	               |	ВТ_СРейсами.Рейс КАК Рейс,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА УчетДанныхМППоРейсам.ДокументМП ЕСТЬ NULL
	               |					ИЛИ УчетДанныхМППоРейсам.ЭтапОбработки = ЗНАЧЕНИЕ(Перечисление.ЭтапыОбработкиДанныхМП.ПропускОбработкиДанных)
	               |				ТОГДА ЛОЖЬ
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ) КАК ЕстьЗаписиСТакимРейсом,
	               |	ВТ_СРейсами.ЭкипажСогласенСДанными КАК ЭкипажСогласенСДанными,
	               |	ВТ_СРейсами.Ссылка.Дата КАК СсылкаДата
	               |ИЗ
	               |	ВТ_СРейсами КАК ВТ_СРейсами
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетДанныхМППоРейсам КАК УчетДанныхМППоРейсам
	               |		ПО ВТ_СРейсами.Рейс = УчетДанныхМППоРейсам.Рейс
	               |			И (ВЫБОР
	               |				КОГДА ВТ_СРейсами.Ссылка ССЫЛКА Документ.ОтчетПоТоварамМП
	               |						И (УчетДанныхМППоРейсам.ТипДокумента = 0
	               |							ИЛИ УчетДанныхМППоРейсам.ТипДокумента = 1)
	               |					ТОГДА ИСТИНА
	               |				КОГДА ВТ_СРейсами.Ссылка ССЫЛКА Документ.ОтчетПоДСМП
	               |						И УчетДанныхМППоРейсам.ТипДокумента = 2
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_СРейсами.Ссылка,
	               |	ВТ_СРейсами.Рейс,
	               |	ВТ_СРейсами.ЭкипажСогласенСДанными,
	               |	ВТ_СРейсами.Ссылка.Дата
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СсылкаДата";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработанныеРейсы = Новый ТаблицаЗначений;

	ОбработанныеРейсы.Колонки.Добавить("ТипДокумента", Новый ОписаниеТипов("Число"));
	
	ОбработанныеРейсы.Колонки.Добавить("Рейс", Новый ОписаниеТипов("ДокументСсылка.Рейс"));
	
	Пока Выборка.Следующий() Цикл  
		
		//Асеев 26.02.2021 (по письму Проблема при приёмке удаленщиков.)>>>
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Попытка
			
			//НачатьТранзакцию();
			Если ЭтоСсылкаНаНесуществующийДокумент(Выборка.Ссылка) Тогда
				ВызватьИсключение "Несуществующий документ";
			КонецЕсли;
			//Асеев 26.02.2021 (по письму Проблема при приёмке удаленщиков.)<<<
			
			Менеджер = РегистрыСведений.УчетДанныхМППоРейсам.СоздатьМенеджерЗаписи();
			Менеджер.Период = ТекущаяДата();
			Менеджер.ДокументМП = Выборка.Ссылка;
			Менеджер.Рейс = Выборка.Рейс;
			
			Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ОтчетПоДСМП") Тогда
				Менеджер.ТипДокумента = 2;
			КонецЕсли;	
			
			
			Если Не Выборка.ЭкипажСогласенСДанными Тогда 	
				Менеджер.ЭтапОбработки = Перечисления.ЭтапыОбработкиДанныхМП.ПропускОбработкиДанных;
			ИначеЕсли Выборка.Рейс = Документы.Рейс.ПустаяСсылка() Тогда
				Менеджер.ЭтапОбработки = Перечисления.ЭтапыОбработкиДанныхМП.РейсНеНайден;
			ИначеЕсли Выборка.ЕстьЗаписиСТакимРейсом Или ОбработанныеРейсы.НайтиСтроки(Новый Структура("ТипДокумента, Рейс", Менеджер.ТипДокумента, Выборка.Рейс)).Количество() > 0 Или Не Выборка.ЭкипажСогласенСДанными Тогда 	
				Менеджер.ЭтапОбработки = Перечисления.ЭтапыОбработкиДанныхМП.ПропускОбработкиДанных;
			Иначе 
				Менеджер.ЭтапОбработки = Перечисления.ЭтапыОбработкиДанныхМП.ОбработкаНазначена;
			КонецЕсли;
			
			Менеджер.Записать();
			
			Если Менеджер.ЭтапОбработки = Перечисления.ЭтапыОбработкиДанныхМП.ОбработкаНазначена Тогда
				
				НоваяСтрока = ОбработанныеРейсы.Добавить();
				НоваяСтрока.ТипДокумента = Менеджер.ТипДокумента;
				НоваяСтрока.Рейс = Выборка.Рейс;
				
			КонецЕсли;
			
			Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ОтчетПоТоварамМП") Тогда
				
				Менеджер = РегистрыСведений.УчетДанныхМППоРейсам.СоздатьМенеджерЗаписи();
				Менеджер.Период = ТекущаяДата();
				Менеджер.ДокументМП = Выборка.Ссылка;
				Менеджер.Рейс = Выборка.Рейс;
				Менеджер.ТипДокумента = 1;
				
				Если Выборка.Рейс = Документы.Рейс.ПустаяСсылка() Тогда
					Менеджер.ЭтапОбработки = Перечисления.ЭтапыОбработкиДанныхМП.РейсНеНайден;
				ИначеЕсли Выборка.ЕстьЗаписиСТакимРейсом Или ОбработанныеРейсы.НайтиСтроки(Новый Структура("ТипДокумента, Рейс", Менеджер.ТипДокумента, Выборка.Рейс)).Количество() > 0  Или Не Выборка.ЭкипажСогласенСДанными Тогда  	
					Менеджер.ЭтапОбработки = Перечисления.ЭтапыОбработкиДанныхМП.ПропускОбработкиДанных;
				Иначе 
					Менеджер.ЭтапОбработки = Перечисления.ЭтапыОбработкиДанныхМП.ОбработкаНазначена;
				КонецЕсли;
				
				Менеджер.Записать();
				
				Если Менеджер.ЭтапОбработки = Перечисления.ЭтапыОбработкиДанныхМП.ОбработкаНазначена Тогда
					
					НоваяСтрока = ОбработанныеРейсы.Добавить();
					НоваяСтрока.ТипДокумента = Менеджер.ТипДокумента;
					НоваяСтрока.Рейс = Выборка.Рейс;
					
				КонецЕсли;
				
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ЗаписьЖурналаРегистрации("РегламентНазначениеОбработкиДанныхМП", УровеньЖурналаРегистрации.Ошибка, , Выборка.Ссылка, ОписаниеОшибки());
		    
		КонецПопытки;
		
	КонецЦикла;	
	
КонецПроцедуры	



//ОбработкаУдаленнойПриемкиЭкипажей_Ошибка
//ВидыСобытийУведомленияАбонентов