
Процедура Инициализировать(новаКонтекст) Экспорт
	тзОтчеты = СоздатьТаблицуОтчетов();
	
	мдОтчетыСКД = Метаданные.Подсистемы.новаОтчетыСКД;
	Для Каждого мдОтчет Из Метаданные.Отчеты Цикл
		Если Не новаОбщиеПроцедуры.ОбъектПринадлежитПодсистеме(мдОтчет, мдОтчетыСКД) Тогда Продолжить; КонецЕсли;
		
		Для Каждого мдМакет Из мдОтчет.Макеты Цикл
			Если СокрЛП(мдМакет.ТипМакета) <> "ДвоичныеДанные" Тогда Продолжить; КонецЕсли;
			
			
			ДобавитьНастройкиОтчетаВТаблицу(мдОтчет, мдМакет, тзОтчеты);
			
		КонецЦикла;
	КонецЦикла;
	
	новаКонтекст.Вставить("ОтчетыСКД", тзОтчеты);
КонецПроцедуры

Функция ЭтоПробел(с)
	Возврат ПустаяСтрока(СокрЛП(с));
КонецФункции

Функция РазобратьСтрокуПараметров(СтрокаПараметров) Экспорт
	стПараметры = Новый Структура;
	
	Состояние = "НачалоИмениПараметра";
	
	ИмяПараметра = "";
	Параметр = "";
	
	ъ = 1;
	ДлинаСтрокиПараметров = СтрДлина(СтрокаПараметров);
	Пока ъ <= ДлинаСтрокиПараметров Цикл
		с = Сред(СтрокаПараметров, ъ, 1);
		ъ = ъ + 1;
		
		Если Состояние = "НачалоИмениПараметра" Тогда
			Если ЭтоПробел(с) Тогда Продолжить; КонецЕсли;
			Если КодСимвола(с) < КодСимвола("A") Тогда Продолжить; КонецЕсли;
			
			Состояние = "ИмяПараметра";
			ИмяПараметра = с;
			
			Продолжить;
			
		ИначеЕсли Состояние = "ИмяПараметра" Тогда
			Если ЭтоПробел(с) Тогда
				стПараметры.Вставить(ИмяПараметра);
				Состояние = "НачалоИмениПараметра";
				ИмяПараметра = "";
				
				Продолжить;
				
			ИначеЕсли с = "=" Тогда
				стПараметры.Вставить(ИмяПараметра);
				Состояние = "НачалоПараметра";
				
				Продолжить;
				
			ИначеЕсли с = ";" Тогда
				стПараметры.Вставить(ИмяПараметра);
				Состояние = "НачалоИмениПараметра";
				ИмяПараметра = "";
				
				Продолжить;
				
			Иначе
				ИмяПараметра = ИмяПараметра + с;
				
			КонецЕсли;
			
			Продолжить;
			
		ИначеЕсли Состояние = "НачалоПараметра" Тогда
			Если ЭтоПробел(с) Тогда
				Продолжить;
				
			ИначеЕсли с = """" Тогда
				Параметр = "";
				Состояние = "ПараметрВКавычках";
				Продолжить;
				
			Иначе
				Параметр = с;
				
				Состояние = "Параметр";
			КонецЕсли;
			
			Продолжить;
			
		ИначеЕсли Состояние = "Параметр" Тогда
			Если ЭтоПробел(с) Тогда
				стПараметры.Вставить(ИмяПараметра, Параметр);
				Состояние = "НачалоИмениПараметра";
				Продолжить;
				
			ИначеЕсли с = ";" Тогда
				стПараметры.Вставить(ИмяПараметра, Параметр);
				Состояние = "НачалоИмениПараметра";
				Продолжить;
				
			Иначе
				Параметр = Параметр + с;
			КонецЕсли;
			
		ИначеЕсли Состояние = "ПараметрВКавычках" Тогда
			Если с = """" Тогда
				стПараметры.Вставить(ИмяПараметра, Параметр);
				Состояние = "НачалоИмениПараметра";
				Продолжить;
				
			Иначе
				Параметр = Параметр + с;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Если Состояние = "ИмяПараметра" Тогда
		стПараметры.Вставить(ИмяПараметра);
	КонецЕсли;
	
	Если Состояние = "Параметр" Тогда
		стПараметры.Вставить(ИмяПараметра, Параметр);
	КонецЕсли;
	
	Если Состояние = "ПараметрВКавычках" Тогда
		стПараметры.Вставить(ИмяПараметра, Параметр);
	КонецЕсли;
	
	Возврат стПараметры;
КонецФункции

Функция ПолучитьТекстИзДвоичныхДанных(Данные)
	ВременныйФайл = ПолучитьИмяВременногоФайла("");
	Данные.Записать(ВременныйФайл);
	
	ТД = Новый ТекстовыйДокумент();
	ТД.Прочитать(ВременныйФайл);
	
	УдалитьФайлы(ВременныйФайл);
	
	Возврат ТД.ПолучитьТекст();
КонецФункции

Процедура ДобавитьНастройкиОтчетаВТаблицу(мдОтчет, мдНастройка, тзОтчеты)
	стПараметрыНастройки = РазобратьСтрокуПараметров(мдНастройка.Комментарий);
	
	Если Не стПараметрыНастройки.Свойство("Схема") Тогда Возврат; КонецЕсли;
	
	Отчет = Отчеты[мдОтчет.Имя].Создать();
	
	стрНастройка = тзОтчеты.Добавить();
	стрНастройка.Отчет = мдОтчет;
	стрНастройка.ИмяНастройки = мдНастройка.Имя;
	стрНастройка.Представление = мдНастройка.Синоним;
	стрНастройка.Картинка = БиблиотекаКартинок.Отчет;
	стрНастройка.Схема = Отчет.ПолучитьМакет(стПараметрыНастройки.Схема);
	стрНастройка.двНастройка = Отчет.ПолучитьМакет(мдНастройка.Имя);
	
	Если стПараметрыНастройки.Свойство("Макет") Тогда
		стрНастройка.Макет = Отчет.ПолучитьМакет(стПараметрыНастройки.Макет);
	КонецЕсли;
	
	Отчет.СхемаКомпоновкиДанных = стрНастройка.Схема;
	
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(ПолучитьТекстИзДвоичныхДанных(стрНастройка.двНастройка));
	стрНастройка.Настройка = СериализаторXDTO.ПрочитатьXML(Чтение);	
	
	Отчет.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Отчет.СхемаКомпоновкиДанных));
	Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(стрНастройка.Настройка);
	
	Для Каждого Параметр Из Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		ИмяПараметра = СокрЛП(Параметр.Параметр);
		
		КолонкаПараметра = тзОтчеты.Колонки.Найти("_" + ИмяПараметра);
		Если КолонкаПараметра = Неопределено Тогда
			тзОтчеты.Колонки.Добавить("_" + ИмяПараметра, Новый ОписаниеТипов("Булево"));
			стрНастройка["_" + ИмяПараметра] = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция СоздатьТаблицуОтчетов()
	тзОтчеты = Новый ТаблицаЗначений;
	тзОтчеты.Колонки.Добавить("Отчет");
	тзОтчеты.Колонки.Добавить("ИмяНастройки");
	тзОтчеты.Колонки.Добавить("Представление");
	тзОтчеты.Колонки.Добавить("Картинка");
	тзОтчеты.Колонки.Добавить("Схема");
	тзОтчеты.Колонки.Добавить("Макет");
	тзОтчеты.Колонки.Добавить("Настройка");
	тзОтчеты.Колонки.Добавить("двНастройка");
	
	Возврат тзОтчеты;
КонецФункции

Функция ПолучитьРасшифровкиПоПараметрам(стПараметры, новаКонтекст) Экспорт
	сзРасшифровки = Новый СписокЗначений;
	
	стПоиск = Новый Структура;
	Для Каждого ЭлПараметр Из стПараметры Цикл
		Если ЭлПараметр.Ключ = "ДатаНачала" Тогда Продолжить; КонецЕсли; 
		Если ЭлПараметр.Ключ = "ДатаОкончания" Тогда Продолжить; КонецЕсли; 
		
		стПоиск.Вставить("_" + ЭлПараметр.Ключ, Истина);
	КонецЦикла;
	
	Расшифровки = новаКонтекст.ОтчетыСКД.НайтиСтроки(стПоиск);
	Если Расшифровки.Количество() = 0 Тогда Возврат сзРасшифровки; КонецЕсли;
	
	Для Каждого Расшифровка Из Расшифровки Цикл
		сзРасшифровки.Добавить(Расшифровка, Расшифровка.Представление,, Расшифровка.Картинка);
	КонецЦикла;
	
	Возврат сзРасшифровки;
КонецФункции

Процедура Расшифровать(Расшифровка, стПараметры) Экспорт
	Отчет = Отчеты[Расшифровка.Отчет.Имя].Создать();
	стПараметры.Вставить("Настройка", Расшифровка.ИмяНастройки);
	Отчет.ПараметрыОткрытия = стПараметры;
	Форма = Отчет.ПолучитьФорму();
	Форма.Открыть();
КонецПроцедуры