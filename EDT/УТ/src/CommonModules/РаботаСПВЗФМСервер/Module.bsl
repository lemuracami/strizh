
Функция ДанныеJSONВСтруктуру(ДанныеJSON, ИменаСвойствСоЗначениямиДата = "") Экспорт
	Чт = Новый ЧтениеJSON;
	Чт.УстановитьСтроку(ДанныеJSON);
	СтруктураДанных = ПрочитатьJSON(Чт, Ложь, ИменаСвойствСоЗначениямиДата, ФорматДатыJSON.Microsoft);
	Возврат СтруктураДанных;
КонецФункции

Функция СформироватьСтрокуJSON(СтруктураJSON) Экспорт
	НастройкиСериализации = Новый НастройкиСериализацииJSON;
	НастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.Microsoft;
	НастройкиСериализации.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.УниверсальнаяДата;	
	
	
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, СтруктураJSON, НастройкиСериализации);
	СтрокаJSON = ЗаписьJSON.Закрыть();
	Возврат СтрокаJSON;
КонецФункции

Функция ПолучитьИнформациюОЗаказе(ВходныеДанные) Экспорт
	
	СтруктураОтвета = Новый Структура;
	
	Попытка
		
		НомерЗаказа = ВходныеДанные.orderAddId;
		Если ПустаяСтрока(НомерЗаказа) Тогда
			СтруктураОтвета.Вставить("result", Новый Структура("isDone,errorDescr", Ложь, "Заказ не найден"));
		Иначе
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НомерЗаказа", НомерЗаказа);
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ДополнительныеПараметрыЗаказа.Заказ.Номер КАК strizhId,
			|	ДополнительныеПараметрыЗаказа.Заказ.НомерВнешнегоЗаказа КАК externalId,
			|	ДополнительныеПараметрыЗаказа.Заказ.Телефон КАК phone,
			|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.Заказ.Контрагент.Наименование, """") КАК fio,
			|	ДополнительныеПараметрыЗаказа.Заказ.Дата КАК deliveryDate,
			|	ДополнительныеПараметрыЗаказа.Заказ.СтатусИнтернетМагазина КАК currentStatus,
			|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПунктПВЗ.КодПВЗ, """") КАК PP
			|ИЗ
			|	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
			|ГДЕ
			|	ДополнительныеПараметрыЗаказа.ДополнительныйНомерЗаказа = &НомерЗаказа";
			
			Результат = Запрос.Выполнить();
			Если Результат.Пустой() Тогда
				СтруктураОтвета.Вставить("result", Новый Структура("isDone,errorDescr", Ложь, "Заказ не найден"));
			Иначе
				orderInfo = Новый Структура("orderAddId,strizhId,externalId,phone,fio,deliveryDate,currentStatus,PP", НомерЗаказа);
				Выборка = Результат.Выбрать();
				Выборка.Следующий();
				ЗаполнитьЗначенияСвойств(orderInfo, Выборка);
				orderInfo.strizhId = СокрЛП(orderInfo.strizhId);
				СтруктураОтвета.Вставить("orderInfo", orderInfo);
				СтруктураОтвета.Вставить("result", Новый Структура("isDone,errorDescr", Истина));
			КонецЕсли;
		КонецЕсли;
		
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтруктураОтвета.Вставить("result", Новый Структура("isDone,errorDescr", Ложь, ТекстОшибки));
		
	КонецПопытки;
	
	Возврат СтруктураОтвета;
	
КонецФункции

Функция УстановитьСтатусЗаказа(ВходныеДанные) Экспорт
	
	СтруктураОтвета = Новый Структура;
	
	Попытка
		orderStatus = ВходныеДанные.orderStatus;
		
		НомерЗаказа = Формат(orderStatus.strizhId, "ЧГ=");
		КодПВЗ = orderStatus.PP;
		КодСтатуса = orderStatus.status;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НомерЗаказа", НомерЗаказа);
		Запрос.УстановитьПараметр("КодПВЗ", КодПВЗ);
		Запрос.УстановитьПараметр("КодСтатуса", КодСтатуса);
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
		|	ПунктыПВЗ.Ссылка КАК ПунктПВЗ,
		|	СтатусыЗаказов.Ссылка КАК Статус
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИСТИНА КАК Поле1) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО (РеализацияТоваровУслуг.Номер = &НомерЗаказа)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПунктыПВЗ КАК ПунктыПВЗ
		|		ПО (ПунктыПВЗ.КодПВЗ = &КодПВЗ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусыЗаказов КАК СтатусыЗаказов
		|		ПО (СтатусыЗаказов.Код = &КодСтатуса)";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		Док = Документы.ФиксацияСтатусаПВЗФМ.СоздатьДокумент();
		Док.Дата = ТекущаяДата();
		Док.УстановитьНовыйНомер();
		ЗаполнитьЗначенияСвойств(Док, Выборка);
		Док.Записать();
		
		//ВызватьИсключение "тестовое исключение";
		
		Док.Записать(РежимЗаписиДокумента.Проведение);
		СтруктураОтвета.Вставить("result", Новый Структура("isDone,errorDescr,numberDoc", Истина,, Док.Номер));
		
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтруктураОтвета.Вставить("result", Новый Структура("isDone,errorDescr", Ложь, ТекстОшибки));
		
	КонецПопытки;
	
	Возврат СтруктураОтвета;
	
КонецФункции

Функция ПолучитьИзмененныеЗаказы(ВходныеДанные) Экспорт
	
	СтруктураОтвета = Новый Структура;
	
	Попытка
		
		ШаблонЗаказ = Новый ФиксированнаяСтруктура("strizhId,orderAddId,externalId,PP,fio,deliveryDate,regionId");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("КодУзлаОбмена", "000000001");
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугИзменения.Ссылка.Номер КАК strizhId,
		|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ДополнительныйНомерЗаказа, """") КАК orderAddId,
		|	РеализацияТоваровУслугИзменения.Ссылка.НомерВнешнегоЗаказа КАК externalId,
		|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПунктПВЗ.КодПВЗ, """") КАК PP,
		|	ЕСТЬNULL(РеализацияТоваровУслугИзменения.Ссылка.Контрагент.Наименование, """") КАК fio,
		|	РеализацияТоваровУслугИзменения.Ссылка.Дата КАК deliveryDate,
		|	ЕСТЬNULL(РеализацияТоваровУслугИзменения.Ссылка.ТерминалДоставки.Код, 0) КАК regionId
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Изменения КАК РеализацияТоваровУслугИзменения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ОбменСПВЗФМ КАК ОбменСПВЗФМ
		|		ПО (ОбменСПВЗФМ.Код = &КодУзлаОбмена)
		|			И РеализацияТоваровУслугИзменения.Узел = ОбменСПВЗФМ.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
		|		ПО РеализацияТоваровУслугИзменения.Ссылка = ДополнительныеПараметрыЗаказа.Заказ";
		
		МассивЗаказов = Новый Массив;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтруктураЗаказа = Новый Структура(ШаблонЗаказ);
			ЗаполнитьЗначенияСвойств(СтруктураЗаказа, Выборка);
			МассивЗаказов.Добавить(СтруктураЗаказа);
			
		КонецЦикла;
		СтруктураОтвета.Вставить("result", Новый Структура("isDone,errorDescr,orders", Истина,, МассивЗаказов));
		
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтруктураОтвета.Вставить("result", Новый Структура("isDone,errorDescr", Ложь, ТекстОшибки));
		
	КонецПопытки;
	
	Возврат СтруктураОтвета;
	
КонецФункции

Функция УдалитьРегистрациюЗаказов(ВходныеДанные) Экспорт
	
	СтруктураОтвета = Новый Структура;
	
	Попытка
		ordersId = ВходныеДанные.ordersId;
		
		МассивНомеровЗаказов = Новый Массив;
		Для Каждого orderId Из ordersId Цикл
			МассивНомеровЗаказов.Добавить(Формат(orderId, "ЧГ="));
		КонецЦикла;

		УзелОбмена = ПланыОбмена.ОбменСПВЗФМ.НайтиПоКоду("000000001");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НомераЗаказов", МассивНомеровЗаказов);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Заказ
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Номер В (&НомераЗаказов)";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ПланыОбмена.УдалитьРегистрациюИзменений(УзелОбмена, Выборка.Заказ);
		КонецЦикла;
		СтруктураОтвета.Вставить("result", Новый Структура("isDone,errorDescr", Истина));
		
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		СтруктураОтвета.Вставить("result", Новый Структура("isDone,errorDescr", Ложь, ТекстОшибки));
		
	КонецПопытки;
	
	Возврат СтруктураОтвета;
	
КонецФункции


