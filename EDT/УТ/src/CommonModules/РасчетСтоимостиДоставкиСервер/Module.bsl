
//Асеев 15.10.2020 (Задача № 4309)>>>
Функция ЗагрузитьТарифыРасчетаСтоимостиДоставки(ДатаЗапроса)
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("modifyDate", ДатаЗапроса);
	
	ВидМетода = Перечисления.ВидыЗапросовWEBСервис.GetDeliveryCostCalculationTariffsResult;
	
	ПолученныеДанные = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(ВидМетода, ПараметрыЗапроса);
	Если Не ПолученныеДанные.Успешно Тогда
		Возврат Ложь;
	КонецЕсли;
	
	GetDeliveryCostCalculationTariffsResult = ПолученныеДанные.Данные.GetDeliveryCostCalculationTariffsResult;
	Если Не GetDeliveryCostCalculationTariffsResult.Succeded Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивДанных = GetDeliveryCostCalculationTariffsResult.Data;
	Если Не МассивДанных.Количество() Тогда
		Возврат Истина;
	КонецЕсли;
	
	ТаблицаТарифов = Новый ТаблицаЗначений;
	КолонкиТаблицы = ТаблицаТарифов.Колонки;
	КолонкиТаблицы.Добавить("ИнтернетМагазин", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(9));//ShopId ("Shop_" + Код)
	КолонкиТаблицы.Добавить("КодАдминки", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15));//Id
	КолонкиТаблицы.Добавить("ТребуетсяОплатаСтоимостиДоставкиПриОтказеОтВыкупа", Новый ОписаниеТипов("Булево"));//CostDelivRequiredIfRefuse
	КолонкиТаблицы.Добавить("ДатаАктуальностиТарифа", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));//StartDate
	КолонкиТаблицы.Добавить("БрейкиПоСтоимостиВыкупа");//BreaksAtTotalValue (DelivCostVal,TotalVal)
	
	Для Каждого СтруктураДанных Из МассивДанных Цикл
		СтрокаТаблицы = ТаблицаТарифов.Добавить();
		СтрокаТаблицы.ИнтернетМагазин = "Shop_" + Формат(СтруктураДанных.ShopId, "ЧГ=");
		СтрокаТаблицы.КодАдминки = СтруктураДанных.Id;
		СтрокаТаблицы.ТребуетсяОплатаСтоимостиДоставкиПриОтказеОтВыкупа = СтруктураДанных.CostDelivRequiredIfRefuse;
		СтрокаТаблицы.ДатаАктуальностиТарифа = СтруктураДанных.StartDate;
		
		БрейкиПоСтоимостиВыкупа = Новый Массив;
		
		Для Каждого BreaksAtTotalValue Из СтруктураДанных.BreaksAtTotalValue Цикл
			БрейкиПоСтоимостиВыкупа.Добавить(Новый Структура("СтоимостьВыкупа,СтоимостьДоставки", BreaksAtTotalValue.TotalVal, BreaksAtTotalValue.DelivCostVal));
		КонецЦикла;
		
		СтрокаТаблицы.БрейкиПоСтоимостиВыкупа = БрейкиПоСтоимостиВыкупа;
		
	КонецЦикла;
	
	ТаблицаТарифов.Индексы.Добавить("КодАдминки");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТарифов", ТаблицаТарифов.Скопировать(, "ИнтернетМагазин,КодАдминки"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТарифов.ИнтернетМагазин КАК ИнтернетМагазин,
	|	ТаблицаТарифов.КодАдминки КАК КодАдминки
	|ПОМЕСТИТЬ ВТ_Тарифы
	|ИЗ
	|	&ТаблицаТарифов КАК ТаблицаТарифов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Тарифы.КодАдминки КАК КодАдминки,
	|	Контрагенты.Ссылка КАК ИнтернетМагазин,
	|	ТарифыРасчетаСтоимостиДоставки.Ссылка КАК Тарифы
	|ИЗ
	|	ВТ_Тарифы КАК ВТ_Тарифы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ВТ_Тарифы.ИнтернетМагазин = Контрагенты.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТарифыРасчетаСтоимостиДоставки КАК ТарифыРасчетаСтоимостиДоставки
	|		ПО ВТ_Тарифы.КодАдминки = ТарифыРасчетаСтоимостиДоставки.КодАдминки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Тарифы <> Null Тогда
			ТарифыОбъект = Выборка.Тарифы.ПолучитьОбъект();
			ТарифыОбъект.БрейкиПоСтоимостиВыкупа.Очистить();
		Иначе
			ТарифыОбъект = Справочники.ТарифыРасчетаСтоимостиДоставки.СоздатьЭлемент();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ТарифыОбъект, Выборка);
		
		СтрокаТаблицы = ТаблицаТарифов.Найти(Выборка.КодАдминки, "КодАдминки");
		ЗаполнитьЗначенияСвойств(ТарифыОбъект, СтрокаТаблицы,, "ИнтернетМагазин,КодАдминки");
		
		Для Каждого СтруктураБрейка Из СтрокаТаблицы.БрейкиПоСтоимостиВыкупа Цикл
			ЗаполнитьЗначенияСвойств(ТарифыОбъект.БрейкиПоСтоимостиВыкупа.Добавить(), СтруктураБрейка);
		КонецЦикла;
		
		ТарифыОбъект.Записать();
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции
//Асеев 15.10.2020 (Задача № 4309)<<<

Процедура РегламентЗагрузкаТарифовРасчетаСтоимостиДоставки() Экспорт
	
	//Асеев 15.10.2020 (Задача № 4309)>>>
	ЗаписьРегистра = РегистрыСведений.ПараметрыРегламентныхЗаданий.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Ключ = "ПоследняяДатаЗагрузкиТарифовРасчетаСтоимостиДоставки";
	ЗаписьРегистра.Прочитать();
	
	Попытка
		ДатаЗапроса = Вычислить("'" + ЗаписьРегистра.Значение + "'");
	Исключение
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МылоОдминов.Мыло КАК Мыло
		|ИЗ
		|	РегистрСведений.МылоОдминов КАК МылоОдминов";
		lem.ОтправитьСообщение(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Мыло"), "РегламентЗагрузкаТарифовРасчетаСтоимостиДоставки", "Ошибочное значение даты последней загрузки тарифов (РегистрСведений.ПараметрыРегламентныхЗаданий, Ключ=ПоследняяДатаЗагрузкиТарифовРасчетаСтоимостиДоставки)");
		
		Возврат;
	КонецПопытки;
	
	ДатаВызова = ТекущаяДата();
	
	//ДатаЗапроса = '20200101';
	//ДатаЗапроса = ТекущаяДата();
	
	Если ЗагрузитьТарифыРасчетаСтоимостиДоставки(ДатаЗапроса) Тогда
		
		ЗаписьРегистра = РегистрыСведений.ПараметрыРегламентныхЗаданий.СоздатьМенеджерЗаписи();
		ЗаписьРегистра.Ключ = "ПоследняяДатаЗагрузкиТарифовРасчетаСтоимостиДоставки";
		ЗаписьРегистра.Значение = Формат(ДатаВызова, "ДФ=yyyyMMddHHmmss");
		ЗаписьРегистра.Записать();
		
	КонецЕсли;
	//Асеев 15.10.2020 (Задача № 4309)<<<
	
КонецПроцедуры




