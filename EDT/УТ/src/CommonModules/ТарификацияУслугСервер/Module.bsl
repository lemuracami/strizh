Функция ОпределитьАктуальнуюСхемуТарификации() Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	АктуальнаяСхемаМатрицыТарификацииСрезПоследних.СхемаМатрицыТарификации КАК СхемаМатрицыТарификации
	            |ИЗ
	            |	РегистрСведений.АктуальнаяСхемаМатрицыТарификации.СрезПоследних(, ) КАК АктуальнаяСхемаМатрицыТарификацииСрезПоследних";
	Выб = Зап.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда
		Возврат Выб.СхемаЛогистическихБрейков;
	Иначе
		Возврат Справочники.СхемыМатрицыТарификации.ПустаяСсылка();
	КонецеСли;	
КонецФункции

//Устанавливает в документы Реализация товаров услуг зону тарификации по регламентному заданию
//Параметры:
// КодТерминала - Число – код регионального терминала лоставки
// ДатаПривязки - Дата - дата, за которую необходимо обработать документы, если Неопределено, тогда ТекущаяДата()
Процедура РегламентПривязкаЗонДоставкиНаЗаказы(КодТерминала, ДатаПривязки = Неопределено) Экспорт
	
	Если ДатаПривязки = Неопределено Тогда 
		ДатаПривязки = ТекущаяДата();
	КонецЕсли;
	
	ПривязкаРайоновКАдресамЗаказов(ДатаПривязки);	
	
	//Асеев 04.09.2024 (Задача № 5317)>>>
	ПривязкаЗонТарификацииПартнеров(КодТерминала, ДатаПривязки);
	//Асеев 04.09.2024 (Задача № 5317)<<<
	
	Запрос = Новый Запрос;
	//Асеев 19.04.2021 (Задача № 3837)>>>
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ДополнительныеПараметрыЗаказа.Доставка ЕСТЬ NULL
	|				ИЛИ ДополнительныеПараметрыЗаказа.Доставка = ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Самовывоз
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних КАК ПараметрыТарифаЗаказаСрезПоследних
	|		ПО РеализацияТоваровУслуг.Ссылка = ПараметрыТарифаЗаказаСрезПоследних.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО РеализацияТоваровУслуг.Ссылка = ДополнительныеПараметрыЗаказа.Заказ
	|ГДЕ
	|	РеализацияТоваровУслуг.Дата МЕЖДУ &НачалоДня И &КонецДня
	|	И НЕ РеализацияТоваровУслуг.ПометкаУдаления
	|	И РеализацияТоваровУслуг.ТерминалДоставки.Код = &КодТерминала
	|	И ЕСТЬNULL(ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации, ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка)";
	//Асеев 19.04.2021 (Задача № 3837)<<<

	Запрос.УстановитьПараметр("КодТерминала", КодТерминала);
	//Запрос.УстановитьПараметр("СтатусИнтернетМагазина", 2);
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ДатаПривязки));
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ДатаПривязки));
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ЗаказыБезЗоныТарификации = Результат.Выгрузить();

		ЗаказыПоДоставке = ЗаказыБезЗоныТарификации.Скопировать(ЗаказыБезЗоныТарификации.НайтиСтроки(Новый Структура("Самовывоз", Ложь))).ВыгрузитьКолонку("Ссылка");
		ЗаказыСамовывоза = ЗаказыБезЗоныТарификации.Скопировать(ЗаказыБезЗоныТарификации.НайтиСтроки(Новый Структура("Самовывоз", Истина))).ВыгрузитьКолонку("Ссылка");
		
		//Асеев 30.12.2022 (Задача № 4913)>>>
		//ПривязкаЗонДоставкиНаЗаказы(ЗаказыПоДоставке);
		Если ЗаказыПоДоставке.Количество() Тогда
			УстановитьЗонуЗаказов(ЗаказыПоДоставке);
		КонецЕсли;
		//Асеев 30.12.2022 (Задача № 4913)<<<
		Если ЗаказыСамовывоза.Количество() Тогда
			ПривязкаЗонДоставкиНаЗаказыСамовывоза(ЗаказыСамовывоза);
		КонецЕсли;
	КонецЕсли;

	ПривязкаЗонДоставкиНаЗаборы(КодТерминала, ДатаПривязки); // Задача № 3373
	
КонецПроцедуры	

// Устанавливает в полученные по параметрам документы ЗаборТовара зону тарификации (Задача № 3373)
//Параметры:
// КодТерминала - Число – код регионального терминала доставки
// ДатаПривязки - Дата - дата, за которую необходимо обработать документы
Процедура ПривязкаЗонДоставкиНаЗаборы(КодТерминала, ДатаПривязки) Экспорт
	
	//Асеев 30.12.2022 (Задача № 4913)>>>
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаборТовара.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаборТовара КАК ЗаборТовара
	|ГДЕ
	|	ЗаборТовара.Дата МЕЖДУ &НачалоДня И &КонецДня
	|	И НЕ ЗаборТовара.ПометкаУдаления
	|	И ЗаборТовара.ТерминалДоставки.Код = &КодТерминала
	|	И ЗаборТовара.СтатусИнтернетМагазина = &СтатусИнтернетМагазина
	|	И ЗаборТовара.ЗонаТарификации = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка)";
	Запрос.УстановитьПараметр("КодТерминала", КодТерминала);
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ДатаПривязки));
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ДатаПривязки));
	Запрос.УстановитьПараметр("СтатусИнтернетМагазина", 2);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	МассивЗонЗаказов = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	УстановитьЗонуЗаказов(МассивЗонЗаказов);
	//Асеев 30.12.2022 (Задача № 4913)<<<
	
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ЗаборТовара.Ссылка КАК Ссылка,
	//	|	ЗаборТовара.СтатусИнтернетМагазина КАК СтатусИнтернетМагазина,
	//	|	ЗаборТовара.ТерминалДоставки.Код КАК КодТерминала,
	//	|	ЗаборТовара.ЗонаТарификации КАК ЗонаТарификации
	//	|ПОМЕСТИТЬ СписокЗаборов
	//	|ИЗ
	//	|	Документ.ЗаборТовара КАК ЗаборТовара
	//	|ГДЕ
	//	|	ЗаборТовара.Дата МЕЖДУ &НачалоДня И &КонецДня
	//	|	И НЕ ЗаборТовара.ПометкаУдаления
	//	|	И ЗаборТовара.ТерминалДоставки.Код = &КодТерминала
	//	|	И ЗаборТовара.СтатусИнтернетМагазина = &СтатусИнтернетМагазина
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	СписокЗаборов.Ссылка КАК Ссылка,
	//	|	СписокЗаборов.Ссылка.ЗонаТарификации КАК СсылкаЗонаТарификации
	//	|ПОМЕСТИТЬ ЗаборыКОбработке
	//	|ИЗ
	//	|	СписокЗаборов КАК СписокЗаборов
	//	|ГДЕ
	//	|	СписокЗаборов.ЗонаТарификации = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка)
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ЗаборТовара.Ссылка КАК Забор,
	//	|	ТарифныеСеткиДоступныеЗоныТарификации.Зона.Ссылка КАК ЗонаТарификации,
	//	|	ТарифныеСеткиДоступныеЗоныТарификации.Ссылка.КлассификаторТарификации КАК КлассификаторТарификации,
	//	|	ГруппыРайоновРайоны.Район КАК Район
	//	|ПОМЕСТИТЬ ВТДоступныеЗоныТарификации
	//	|ИЗ
	//	|	Документ.ЗаборТовара КАК ЗаборТовара
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТарифныеСетки.ДоступныеЗоныТарификации КАК ТарифныеСеткиДоступныеЗоныТарификации
	//	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов.Районы КАК ГруппыРайоновРайоны
	//	|			ПО ТарифныеСеткиДоступныеЗоныТарификации.Зона.Ссылка = ГруппыРайоновРайоны.Ссылка.Ссылка
	//	|		ПО ЗаборТовара.ТарифнаяСетка.Ссылка = ТарифныеСеткиДоступныеЗоныТарификации.Ссылка.Ссылка
	//	|ГДЕ
	//	|	ЗаборТовара.Ссылка В
	//	|			(ВЫБРАТЬ
	//	|				ЗаборыКОбработке.Ссылка
	//	|			ИЗ
	//	|				ЗаборыКОбработке)
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ЗаборыКОбработке.Ссылка КАК Ссылка
	//	|ИЗ
	//	|	ЗаборыКОбработке КАК ЗаборыКОбработке
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТДоступныеЗоныТарификации.Забор КАК Забор,
	//	|	ВТДоступныеЗоныТарификации.КлассификаторТарификации КАК КлассификаторТарификации,
	//	|	новаРайоныАдресов.Район КАК Район,
	//	|	ВТДоступныеЗоныТарификации.ЗонаТарификации КАК ЗонаТарификации
	//	|ИЗ
	//	|	ВТДоступныеЗоныТарификации КАК ВТДоступныеЗоныТарификации
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.новаРайоныАдресов КАК новаРайоныАдресов
	//	|		ПО ВТДоступныеЗоныТарификации.Забор.ТочкаДоставки.Адрес.Ссылка = новаРайоныАдресов.Адрес.Ссылка
	//	|			И ВТДоступныеЗоныТарификации.КлассификаторТарификации.Ссылка = новаРайоныАдресов.Классификатор.Ссылка
	//	|			И ВТДоступныеЗоныТарификации.Район.Ссылка = новаРайоныАдресов.Район.Ссылка";
	//
	//Запрос.УстановитьПараметр("КодТерминала", КодТерминала);
	//Запрос.УстановитьПараметр("КонецДня", КонецДня(ДатаПривязки));
	//Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ДатаПривязки));
	//Запрос.УстановитьПараметр("СтатусИнтернетМагазина", 2);
	//
	//РезультатЗапроса = Запрос.ВыполнитьПакет();
	//СписокЗаборов = РезультатЗапроса[3].Выгрузить().ВыгрузитьКолонку("Ссылка");
	//ДанныеПоЗонамДоставки = РезультатЗапроса[4].Выгрузить();

	//Для Каждого Забор Из СписокЗаборов Цикл
	//	
	//	СтрокаЗоны = ДанныеПоЗонамДоставки.Найти(Забор, "Забор");
	//	
	//	Если СтрокаЗоны = Неопределено Тогда
	//		
	//		Продолжить;
	//		
	//	КонецЕсли;
	//	
	//	ДокументЗабор = Забор.ПолучитьОбъект();
	//	ДокументЗабор.ЗонаТарификации = СтрокаЗоны.ЗонаТарификации;
	//	ДокументЗабор.ОбменДанными.Загрузка = Истина;
	//	ДокументЗабор.Записать();

	//КонецЦикла;	
	
КонецПроцедуры

//Устанавливает в переданные документы Реализация товаров услуг зону тарификации,
//только для заказов по доставке
//Параметры:
// Заказы - Массив – реализации товаров услуг по доставке с не заполненными ЗонаТарификации;
Процедура ПривязкаЗонДоставкиНаЗаказы(Заказы) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров КАК КартаТарификацииПартнеров,
	|	АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.СхемаЗонТарификацииПартнеров КАК СхемаЗонТарификации
	|ПОМЕСТИТЬ ВТ_РасчетЯндекс
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АктуальныеСхемыЗонКартТарификацииПартнеров.СрезПоследних КАК АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних
	|		ПО (РеализацияТоваровУслуг.Ссылка В (&СписокЗаказов))
	|			И (РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.МетодОпределенияЗоныТарификации = ЗНАЧЕНИЕ(Перечисление.МетодыОпределенияЗоныТарификации.МеханизмКартЯндекс))
	|			И РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров = АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.КартаКонструктораКарт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	ТарифныеСеткиДоступныеЗоныТарификации.Зона КАК ЗонаТарификации,
	|	ТарифныеСеткиДоступныеЗоныТарификации.Ссылка.КлассификаторТарификации КАК КлассификаторТарификации,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	ГруппыРайоновРайоны.Район КАК Район
	|ПОМЕСТИТЬ ВТДоступныеЗоныТарификации
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО (РеализацияТоваровУслуг.Ссылка В (&СписокЗаказов))
	|			И РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних КАК ПараметрыТарифаЗаказаСрезПоследних
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТарифныеСетки.ДоступныеЗоныТарификации КАК ТарифныеСеткиДоступныеЗоныТарификации
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов.Районы КАК ГруппыРайоновРайоны
	|				ПО ТарифныеСеткиДоступныеЗоныТарификации.Зона = ГруппыРайоновРайоны.Ссылка
	|			ПО ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка = ТарифныеСеткиДоступныеЗоныТарификации.Ссылка
	|		ПО РеализацияТоваровУслуг.Ссылка = ПараметрыТарифаЗаказаСрезПоследних.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_РасчетЯндекс.Реализация
	|ГДЕ
	|	ВТ_РасчетЯндекс.Реализация ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДоступныеЗоныТарификации.Реализация КАК Реализация,
	|	ВТДоступныеЗоныТарификации.ЗонаТарификации КАК ЗонаТарификации,
	|	ЗНАЧЕНИЕ(Перечисление.МетодыОпределенияЗоныТарификации.МеханизмНова) КАК МетодОпределенияЗоныТарификации,
	|	ЛОЖЬ КАК ЗонаНеОпределена
	|ИЗ
	|	ВТДоступныеЗоныТарификации КАК ВТДоступныеЗоныТарификации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.новаРайоныАдресов КАК новаРайоныАдресов
	|		ПО ВТДоступныеЗоныТарификации.Доставка.ТочкаПрибытия.Адрес = новаРайоныАдресов.Адрес
	|			И ВТДоступныеЗоныТарификации.КлассификаторТарификации = новаРайоныАдресов.Классификатор
	|			И ВТДоступныеЗоныТарификации.Район = новаРайоныАдресов.Район
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_РасчетЯндекс.Реализация,
	|	ЕСТЬNULL(ГруппыРайоновЗоныТарификацииПартнеров.Ссылка, ВТ_РасчетЯндекс.КартаТарификацииПартнеров.ЗонаТарификацииПриНепривязанномАдресе),
	|	ЗНАЧЕНИЕ(Перечисление.МетодыОпределенияЗоныТарификации.МеханизмКартЯндекс),
	|	ГруппыРайоновЗоныТарификацииПартнеров.Ссылка ЕСТЬ NULL
	|ИЗ
	|	ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТ_РасчетЯндекс.Реализация КАК Реализация,
	|			ВТ_РасчетЯндекс.КартаТарификацииПартнеров КАК КартаТарификацииПартнеров,
	|			ЗоныТарификацииПартнеровСрезПоследних.ЗонаТарификации.НомерЗоны КАК НомерЗоны
	|		ИЗ
	|			ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗоныТарификацииПартнеров.СрезПоследних(
	|						,
	|						(Заказ, СхемаЗонТарификации) В
	|							(ВЫБРАТЬ
	|								ВТ_РасчетЯндекс.Реализация КАК Реализация,
	|								ВТ_РасчетЯндекс.СхемаЗонТарификации КАК СхемаЗонТарификации
	|							ИЗ
	|								ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс)) КАК ЗоныТарификацииПартнеровСрезПоследних
	|				ПО ВТ_РасчетЯндекс.Реализация = ЗоныТарификацииПартнеровСрезПоследних.Заказ) КАК ВЗ_ЗоныТарификацииЗаказов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов.ЗоныТарификацииПартнеров КАК ГруппыРайоновЗоныТарификацииПартнеров
	|			ПО ВЗ_ЗоныТарификацииЗаказов.НомерЗоны = ГруппыРайоновЗоныТарификацииПартнеров.НомерЗоныТарификации
	|				И ВЗ_ЗоныТарификацииЗаказов.КартаТарификацииПартнеров = ГруппыРайоновЗоныТарификацииПартнеров.Ссылка.КартаТарификацииПартнеров
	|		ПО ВТ_РасчетЯндекс.Реализация = ВЗ_ЗоныТарификацииЗаказов.Реализация";
					
	Запрос.УстановитьПараметр("СписокЗаказов", Заказы);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	//+Степанов Задача № 3833
	//Асеев 11.09.2024 (Задача № 5321)>>>
	ТаблицаПараметровТарифовЗаказов = СоздатьТаблицуПараметровТарифовЗаказов();
	МассивЗаказовОшибкаЗоныЯндекс = Новый Массив;
	//Асеев 11.09.2024 (Задача № 5321)<<<
	//-Степанов Задача № 3833
	
	Для Каждого Заказ Из Заказы Цикл
		СтрокаЗоны = РезультатЗапроса.Найти(Заказ, "Реализация");
		Если СтрокаЗоны = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		//Асеев 11.09.2024 (Задача № 5321)>>>
		Если СтрокаЗоны.ЗонаНеОпределена Тогда
			МассивЗаказовОшибкаЗоныЯндекс.Добавить(СтрокаЗоны.Реализация);
		КонецЕсли;
		//Асеев 11.09.2024 (Задача № 5321)<<<
		
		ДокументРеализация = Заказ.ПолучитьОбъект();
		ДокументРеализация.ЗонаТарификации = СтрокаЗоны.ЗонаТарификации;
		ДокументРеализация.ОбменДанными.Загрузка = Истина;
		ДокументРеализация.Записать();
		//+Степанов Задача № 3833
		СтрокаПараметровТарифов = ТаблицаПараметровТарифовЗаказов.Добавить();
		СтрокаПараметровТарифов.Заказ = Заказ;
		СтрокаПараметровТарифов.ЗонаТарификации = СтрокаЗоны.ЗонаТарификации;		
		//Асеев 11.09.2024 (Задача № 5321)>>>
		СтрокаПараметровТарифов.МетодОпределенияЗоныТарификации = СтрокаЗоны.МетодОпределенияЗоныТарификации;
		//Асеев 11.09.2024 (Задача № 5321)<<<
		//-Степанов Задача № 3833
	КонецЦикла;	
	
	//Асеев 11.09.2024 (Задача № 5321)>>>
	Если МассивЗаказовОшибкаЗоныЯндекс.Количество() Тогда
		МаршрутизацияЗаказовСервер.ОтправитьПисьмоОшибкаЗоныЯндекс(МассивЗаказовОшибкаЗоныЯндекс, "ТарификацияУслугСервер.ПривязкаЗонДоставкиНаЗаказы");
	КонецЕсли;
	//Асеев 11.09.2024 (Задача № 5321)<<<
	
	//+Степанов Задача № 3833
	Если ТаблицаПараметровТарифовЗаказов.Количество() Тогда
		ЗаписатьПараметрыТарифаЗаказа(ТаблицаПараметровТарифовЗаказов);
	КонецЕсли;	
	//-Степанов Задача № 3833
КонецПроцедуры	

//Устанавливает в переданные документы Реализация товаров услуг зону тарификации,
//только для заказов по самовывозу
//Параметры:
// Заказы - Массив – реализации товаров услуг по самовывозу с не заполненными ЗонаТарификации;
Процедура ПривязкаЗонДоставкиНаЗаказыСамовывоза(Заказы)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыРегиональныхТерминаловСрезПоследних.РегиональныйТерминал КАК РегиональныйТерминал,
		|	ПараметрыРегиональныхТерминаловСрезПоследних.ЗонаТарификацииЗаказовСамовывоза КАК ЗонаТарификацииЗаказовСамовывоза
		|ИЗ
		|	РегистрСведений.ПараметрыРегиональныхТерминалов.СрезПоследних КАК ПараметрыРегиональныхТерминаловСрезПоследних";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ЗоныТарификацииТерминалов = Новый Соответствие;
	ЗоныТарификацииТерминалов.Вставить(Неопределено, Неопределено);
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗоныТарификацииТерминалов.Вставить(ВыборкаДетальныеЗаписи.РегиональныйТерминал, ВыборкаДетальныеЗаписи.ЗонаТарификацииЗаказовСамовывоза);
	КонецЦикла;
	
	//+Степанов Задача № 3833
	//Асеев 11.09.2024 (Задача № 5321)>>>
	ТаблицаПараметровТарифовЗаказов = СоздатьТаблицуПараметровТарифовЗаказов();
	//Асеев 11.09.2024 (Задача № 5321)<<<
	//-Степанов Задача № 3833

	
	Для Каждого Заказ Из Заказы Цикл
		
		//Асеев 19.04.2021 (Задача № 3837)>>>
		//Если ЗначениеЗаполнено(Заказ.ЗонаТарификации) Тогда продолжить КонецЕсли;
		//Асеев 19.04.2021 (Задача № 3837)<<<
				
		ДокументРеализация = Заказ.ПолучитьОбъект();
		ДокументРеализация.ЗонаТарификации = ЗоныТарификацииТерминалов[Заказ.ТерминалДоставки];
		ДокументРеализация.ОбменДанными.Загрузка = Истина;
		ДокументРеализация.Записать();
		
		//+Степанов Задача № 3833
		Если ТипЗнч(Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЗначениеЗаполнено(Заказ) Тогда
			СтрокаПараметровТарифа = ТаблицаПараметровТарифовЗаказов.Добавить();
			СтрокаПараметровТарифа.Заказ = Заказ;
			СтрокаПараметровТарифа.ЗонаТарификации = ЗоныТарификацииТерминалов[Заказ.ТерминалДоставки];
		КонецЕсли;
		//-Степанов Задача № 3833
		
	КонецЦикла;		
	//+Степанов Задача № 3833
	Если ТаблицаПараметровТарифовЗаказов.Количество() Тогда
		ЗаписатьПараметрыТарифаЗаказа(ТаблицаПараметровТарифовЗаказов);
	КонецЕсли;	
	//-Степанов Задача № 3833
КонецПроцедуры

Функция ПолучитьТаблицуТарификацииПоКомпонентам(МатрицаТарификации, ТаблицаЗаказов) Экспорт
	
КонецФункции	

//процедура осуществляет запись данных в новаРайоныАдресов, баг с спустыми районами так и не исчез, из-за справочника адресов
Процедура ПривязкаРайоновКАдресамЗаказов(ДатаОбработки) Экспорт
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Широта КАК Широта,
	            |	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Долгота КАК Долгота,
	            |	новаМестнаяДоставка.ТочкаПрибытия.Адрес КАК Адрес,
	            |	новаМестнаяДоставка.Номер КАК Номер,
	            |	КОЛИЧЕСТВО(ЕСТЬNULL(новаРайоныАдресов.Район, 0)) КАК Кол
	            |ИЗ
	            |	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	            |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.новаРайоныАдресов КАК новаРайоныАдресов
	            |			ПО новаМестнаяДоставка.ТочкаПрибытия.Адрес = новаРайоныАдресов.Адрес
	            |		ПО ДополнительныеПараметрыЗаказа.Доставка = новаМестнаяДоставка.Ссылка
	            |ГДЕ
	            |	новаМестнаяДоставка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Широта,
	            |	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Долгота,
	            |	новаМестнаяДоставка.ТочкаПрибытия.Адрес,
	            |	новаМестнаяДоставка.Номер
	            |
	            |ОБЪЕДИНИТЬ
	            |
	            |ВЫБРАТЬ
	            |	ЗаборТовара.ТочкаДоставки.Адрес.Широта,
	            |	ЗаборТовара.ТочкаДоставки.Адрес.Долгота,
	            |	ЗаборТовара.ТочкаДоставки.Адрес,
	            |	ЗаборТовара.Номер,
	            |	КОЛИЧЕСТВО(ЕСТЬNULL(новаРайоныАдресов.Район, 0))
	            |ИЗ
	            |	Документ.ЗаборТовара КАК ЗаборТовара
	            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.новаРайоныАдресов КАК новаРайоныАдресов
	            |		ПО ЗаборТовара.ТочкаДоставки.Адрес = новаРайоныАдресов.Адрес
	            |ГДЕ
	            |	ЗаборТовара.Дата МЕЖДУ &ДатаНач И &ДатаКон
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	ЗаборТовара.ТочкаДоставки.Адрес.Широта,
	            |	ЗаборТовара.ТочкаДоставки.Адрес.Долгота,
	            |	ЗаборТовара.ТочкаДоставки.Адрес,
	            |	ЗаборТовара.Номер";
	
	Зап.УстановитьПараметр("ДатаНач", НачалоДня(ДатаОбработки));			
	Зап.УстановитьПараметр("ДатаКон", КонецДня(ДатаОбработки));	
	
	Выб = Зап.Выполнить().Выбрать();
	
	Пока Выб.Следующий() Цикл
		Если Выб.Кол <> 1 Тогда
			Продолжить;
		КонецеСли;
		Если Не ЗначениеЗаполнено(Выб.Широта) Или Не ЗначениеЗаполнено(Выб.Долгота) Тогда
			Продолжить;
		КонецеСли;	
		тзГеоРайоны = новаКарты.РассчитатьГеоРайоныАдресов(, Выб.Широта, Выб.Долгота);
		
		НаборЗаписей = РегистрыСведений.новаРайоныАдресов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Адрес.Установить(Выб.Адрес);
		НаборЗаписей.Отбор.УказанВручную.Установить(Ложь);
		
		Для Каждого стрРайон Из тзГеоРайоны Цикл
			НаборЗаписей.Отбор.Классификатор.Установить(стрРайон.Классификатор);
			НаборЗаписей.Отбор.Район.Установить(стрРайон.Район);
			НаборЗаписей.Очистить();
			
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, стрРайон);
			Запись.Адрес = Выб.Адрес;
			Запись.УказанВручную = Ложь;
			
			НаборЗаписей.Записать();
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

#Область КомпонетыТарификации

Функция ЗаписьПоКомпонентеСуществует(ДанныеПроверки) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КомпонентыТарификацииЗаказов.Заказ КАК Заказ,
		|	КомпонентыТарификацииЗаказов.ДатаДоставки КАК ДатаДоставки,
		|	КомпонентыТарификацииЗаказов.КомпонентаТарификации КАК КомпонентаТарификации,
		|	КомпонентыТарификацииЗаказов.Показатель КАК Показатель,
		|	КомпонентыТарификацииЗаказов.Ставка КАК Ставка,
		|	КомпонентыТарификацииЗаказов.Сумма КАК Сумма,
		|	КомпонентыТарификацииЗаказов.ИдентификаторЗаписиТарифаВАдминке КАК ИдентификаторЗаписиТарифаВАдминке
		|ИЗ
		|	РегистрСведений.КомпонентыТарификацииЗаказов КАК КомпонентыТарификацииЗаказов
		|ГДЕ
		|	КомпонентыТарификацииЗаказов.Заказ = &Заказ
		|	И КомпонентыТарификацииЗаказов.ДатаДоставки = &ДатаДоставки
		|	И КомпонентыТарификацииЗаказов.КомпонентаТарификации = &КомпонентаТарификации
		|	И КомпонентыТарификацииЗаказов.Показатель = &Показатель
		|	И КомпонентыТарификацииЗаказов.Ставка = &Ставка
		|	И КомпонентыТарификацииЗаказов.Сумма = &Сумма
		|	И КомпонентыТарификацииЗаказов.ИдентификаторЗаписиТарифаВАдминке = &ИдентификаторЗаписиТарифаВАдминке";
	
	Запрос.УстановитьПараметр("ДатаДоставки", ДанныеПроверки.ДатаДоставки);
	Запрос.УстановитьПараметр("Заказ", ДанныеПроверки.Заказ);
	Запрос.УстановитьПараметр("ИдентификаторЗаписиТарифаВАдминке", ДанныеПроверки.ИдентификаторЗаписиТарифаВАдминке);
	Запрос.УстановитьПараметр("КомпонентаТарификации", ДанныеПроверки.КомпонентаТарификации);
	Запрос.УстановитьПараметр("Показатель", ДанныеПроверки.Показатель);
	Запрос.УстановитьПараметр("Ставка", ДанныеПроверки.Ставка);
	Запрос.УстановитьПараметр("Сумма", ДанныеПроверки.Сумма);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Возврат РезультатЗапроса.Следующий();
	
КонецФункции

Функция ЗарегистрироватьКомпонентыТарификации(ДвиженияКРегистрации) Экспорт
	
	ТекД = ТекущаяДата();
	Наб = РегистрыСведений.КомпонентыТарификацииЗаказов.СоздатьНаборЗаписей();
	Наб.Отбор.Заказ.Установить(ДвиженияКРегистрации.Заказ);
	Наб.Отбор.ДатаДоставки.Установить(ДвиженияКРегистрации.ДатаДоставки);
	Наб.Отбор.КомпонентаТарификации.Установить(ДвиженияКРегистрации.КомпонентаТарификации);
	
	Наб.Прочитать();
	
	Нов = Наб.Добавить();
	Нов.Период = ТекД;
	ЗаполнитьЗначенияСвойств(Нов, ДвиженияКРегистрации);
	Наб.записать();

КонецФункции	

Функция ПривестиДатуИзАдминки(ДатаИзАдминки)
	
	ДатаUnixtime = СтрЗаменить(ДатаИзАдминки,"/Date(", "");	
	ДатаUnixtime = СтрЗаменить(ДатаUnixtime,")/", "");	

	//CeHbKA
	Попытка
		ДатаЧислом = Число(Лев(ДатаUnixtime,10));
	Исключение
		ДатаЧислом = 0;
		
		МасОш = Новый Массив;
		МасОш.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		МасОш.Добавить("a.pryalkin@strizh-logistic.ru");
		
		ТекстПисьма = "При получении компонент тарификации заказов из админки произошла ошибка!" + 
		Символы.ПС + 
		"Ошибка преобразования даты "+ДатаИзАдминки;
		
		lem.ОтправитьСообщение(МасОш, "Ошибка получения компонент тарификации заказов", ТекстПисьма);
	КонецПопытки; 
	//CeHbKA
	
	Возврат Дата(1970,1,1,0,0,0) + ДатаЧислом;	
	
КонецФункции	

Функция ПодготовитьДанныеПоКомпонентамТарифовИзАдминки(Данные)
	
	СтруктураДанных = Новый Массив;

	//КомпонентаИзАдминки = Новый Соответствие;
	//КомпонентаИзАдминки.Вставить(1, Справочники.КомпонентыТарификации.ТарифДоставки);
	//КомпонентаИзАдминки.Вставить(2, Справочники.КомпонентыТарификации.ТарифДоставкиКилометражОтГраницОбласти);
	
	//CeHbKA #3941 23.04.2020
	КомпонентаИзАдминки = ПолучитьКомпонентыТарификацииСИдентификатором(Истина);
	//CeHbKA #3941 23.04.2020
	
	Если  Данные.Успешно Тогда
		Если Данные.Данные.GetOrdersTariffComponentsResult.Succeded Тогда
			
			Для Каждого Заказ Из Данные.Данные.GetOrdersTariffComponentsResult.Data Цикл
				
				ДокументЗаказ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(СтрЗаменить(СокрЛП(Заказ.OrderId),Символы.НПП,""));
				
				Если НЕ ДокументЗаказ.Пустая() Тогда
					
					Для Каждого Компонента Из Заказ.TariffComponents Цикл
												
						ДанныеКомпоненты = Новый Структура("Заказ, КомпонентаТарификации, Ставка, Показатель, Сумма, ИдентификаторЗаписиТарифаВАдминке, ДатаДоставки, ТипТарифа",
						//ДокументЗаказ, КомпонентаИзАдминки.Получить(Компонента.Component), Компонента.Tariff, Компонента.Mark, Компонента.Sum, Компонента.IdTariff, ПривестиДатуИзАдминки(Компонента.DeliveryDate), Компонента.TariffType);
						//CeHbKA
						ДокументЗаказ, КомпонентаИзАдминки.Получить(Компонента.Component), Компонента.Tariff, Компонента.Mark, Компонента.Sum, Компонента.IdTariff, Компонента.DeliveryDate, Компонента.TariffType);
						//CeHbKA
												
						СтруктураДанных.Добавить(ДанныеКомпоненты);
						
					КонецЦикла;
					
				КонецЕсли;
							
			КонецЦикла;	
		Иначе
			Возврат Ложь;	
		Конецесли;
	Иначе
		Возврат Ложь;
	КонецЕсли;	
	
	Возврат СтруктураДанных;
	
КонецФункции	

Функция УстановитьКомпонентыТарифовИзАдминки(МассивНомеровЗаказов) Экспорт
	
	Попытка
		
		РезультатЗапроса = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.GetOrdersTariffComponentsResult, МассивНомеровЗаказов);
		КомпонетыТарификацииПоЗаказам = ПодготовитьДанныеПоКомпонентамТарифовИзАдминки(РезультатЗапроса);
		
		МассивОшибочных = Новый Массив;
		
		Если Не КомпонетыТарификацииПоЗаказам = Ложь Тогда
			
			Для Каждого КомпонентаТарификацииЗаказа Из КомпонетыТарификацииПоЗаказам Цикл
				
				Если НачалоДня(КомпонентаТарификацииЗаказа.ДатаДоставки) = НачалоДня(ТекущаяДата()) Тогда //  Задача № 3143, коментарий ЕМ 13:52
					
					Попытка
						ТарификацияУслугСервер.ЗарегистрироватьКомпонентыТарификации(КомпонентаТарификацииЗаказа);
					Исключение
						МассивОшибочных.Добавить(КомпонентаТарификацииЗаказа.Заказ.Номер);
					КонецПопытки;
					
				КонецЕсли;
			
			КонецЦикла;
			
		Иначе
		КонецЕсли;	
		
		Если МассивОшибочных.Количество()>0 Тогда
			
			МасОш = Новый Массив;
			МасОш.Добавить("evgeniy.marochkin@strizh-logistic.ru");
			МасОш.Добавить("r.drobnitsa@strizh-logistic.ru");
			
			ТекстПисьма = "При получении компонент тарификации заказов из админки произошла ошибка!" + 
			Символы.ПС + 
			"Попытка массовой записи дублей данных" +
			Символы.ПС + 
			СтрСоединить(МассивОшибочных, ", ");
			
			lem.ОтправитьСообщение(МасОш, "Ошибка получения компонент тарификации заказов", ТекстПисьма);

		КонецЕсли;	
		
	Исключение
		
		МасОш = Новый Массив;
		МасОш.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		МасОш.Добавить("r.drobnitsa@strizh-logistic.ru");
		lem.ОтправитьСообщение(МасОш, "Ошибка получения компонент тарификации заказов", "При получении компонент тарификации заказов из админки произошла ошибка!" + Символы.ПС + "Текст ошибки: " + ОписаниеОшибки());
		
	КонецПопытки;
	
КонецФункции

//CeHbKA #3965 07.05.2020
Процедура ЗагрузитьКомпонентыТарифовДляОтклонённыхЗаказов(ДатаДоставки, Терминал) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслуг.Номер КАК Номер,
		|	РеализацияТоваровУслуг.Дата КАК Дата,
		|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусИнтернетМагазина
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.СтатусИнтернетМагазина = 4
		|	И РеализацияТоваровУслуг.ТерминалДоставки = &ТерминалДоставки
		|	И НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ДЕНЬ) = &ДатаДоставки";
	
	Запрос.УстановитьПараметр("ДатаДоставки", НачалоДня(ДатаДоставки));
	Запрос.УстановитьПараметр("ТерминалДоставки", Терминал);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивНомеровЗаказов = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивНомеровЗаказов.Добавить(СокрЛП(ВыборкаДетальныеЗаписи.Номер));
	КонецЦикла;
	
	Если МассивНомеровЗаказов.Количество() > 0 Тогда
		УстановитьКомпонентыТарифовИзАдминки(МассивНомеровЗаказов);	
		
		УстановитьПараметрыОтклонённыхЗаказовПослеВыгрузки(МассивНомеровЗаказов, Терминал);
	Иначе
		Возврат;
	КонецЕсли;
	
	ДокументСсылка = ПолучитьДокументВыгрузкаДанныхМаршрутизацииВАдминку(ДатаДоставки, Терминал);
	
	Если ДокументСсылка.Пустая() Тогда
		ДокОбъект					= Документы.ВыгрузкаДанныхМаршрутизацииВАдминку.СоздатьДокумент();
		ДокОбъект.Дата				= ?(НачалоДня(ТекущаяДата()) = НачалоДня(ДатаДоставки), ТекущаяДата(), ДатаДоставки);
		ДокОбъект.ДатаМаршрутизации = ДатаДоставки;
		ДокОбъект.Пользователь		= ПараметрыСеанса.ТекущийПользователь;
		ДокОбъект.Терминал			= Терминал;
		ДокОбъект.ДанныеПоТарификацииЗагруженыВ1С = Истина;
	Иначе
		ДокОбъект = ДокументСсылка.ПолучитьОбъект();
	КонецЕсли;
		
	Для каждого НомерЗаказа из МассивНомеровЗаказов цикл
		
		РТиУ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(НомерЗаказа);
		
		Если РТиУ.Пустая() Тогда
			Продолжить;
		КонецЕсли;
				
		Если ДокОбъект.Заказы.Найти(РТиУ, "Заказ") = Неопределено Тогда
			
			НСтр = ДокОбъект.Заказы.Добавить();
			НСтр.Заказ = РТиУ;
			НСтр.СостояниеЗаказа = Справочники.СтатусЗаказаИнтернетМагазина.ЗаказОтклонен;
			НСтр.УслугиСД = РТиУ.УслугиСД;
			НСтр.УслугиСДЧистые = РТиУ.УслугиСДЧистые;
			НСтр.РасчетныйБрейк = РТиУ.РасчетныйБрейк;
			НСтр.ЗонаТарификации = РТиУ.ЗонаТарификации;
			
		КонецЕсли;
				
	КонецЦикла;
	
	ДокОбъект.Записать();
	
КонецПроцедуры

Функция ПолучитьДокументВыгрузкаДанныхМаршрутизацииВАдминку(ДатаДокумента, Терминал) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыгрузкаДанныхМаршрутизацииВАдминку.Ссылка КАК Ссылка,
		|	ВыгрузкаДанныхМаршрутизацииВАдминку.Дата КАК Дата,
		|	ВыгрузкаДанныхМаршрутизацииВАдминку.Терминал КАК Терминал
		|ИЗ
		|	Документ.ВыгрузкаДанныхМаршрутизацииВАдминку КАК ВыгрузкаДанныхМаршрутизацииВАдминку
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(ВыгрузкаДанныхМаршрутизацииВАдминку.Дата, ДЕНЬ) = &ДатаДокумента
		|	И НЕ ВыгрузкаДанныхМаршрутизацииВАдминку.ПометкаУдаления
		|	И ВыгрузкаДанныхМаршрутизацииВАдминку.Терминал = &Терминал";
	
	Запрос.УстановитьПараметр("ДатаДокумента", НачалоДня(ДатаДокумента));
	Запрос.УстановитьПараметр("Терминал", Терминал);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;	
	КонецЦикла;
	
	Возврат Документы.ВыгрузкаДанныхМаршрутизацииВАдминку.ПустаяСсылка();
	
КонецФункции

Процедура УстановитьПараметрыОтклонённыхЗаказовПослеВыгрузки(МассивНомеровЗаказов, Терминал) Экспорт
	
	Запрос = Новый Запрос;
	//Асеев 11.09.2024 (Задача № 5321)>>>
	//Асеев 11.09.2024 (Задача № 5321)<<<
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ДЕНЬ) КАК ДатаДоставки,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров КАК КартаТарификацииПартнеров,
	|	АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.СхемаЗонТарификацииПартнеров КАК СхемаЗонТарификации,
	|	ДополнительныеПараметрыЗаказа.Доставка КАК Доставка,
	|	ДополнительныеПараметрыЗаказа.Доставка.Номер КАК НомерДоставки,
	|	ДополнительныеПараметрыЗаказа.Доставка.ТочкаПрибытия.Наименование КАК Адрес,
	|	ДополнительныеПараметрыЗаказа.Доставка.ТочкаПрибытия.АдресИзЯндекса КАК АдресИзЯндекса
	|ПОМЕСТИТЬ ВТ_РасчетЯндекс
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АктуальныеСхемыЗонКартТарификацииПартнеров.СрезПоследних КАК АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних
	|		ПО (РеализацияТоваровУслуг.Номер В (&СписокНомеровЗаказов))
	|			И (РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.МетодОпределенияЗоныТарификации = ЗНАЧЕНИЕ(Перечисление.МетодыОпределенияЗоныТарификации.МеханизмКартЯндекс))
	|			И РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров = АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.КартаКонструктораКарт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО РеализацияТоваровУслуг.Ссылка = ДополнительныеПараметрыЗаказа.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслуг.Дата, ДЕНЬ) КАК ДатаДоставки,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
	|	ДополнительныеПараметрыЗаказа.Доставка КАК Доставка,
	|	ДополнительныеПараметрыЗаказа.Доставка.Номер КАК НомерДоставки,
	|	ДополнительныеПараметрыЗаказа.Доставка.ТочкаПрибытия.Наименование КАК Адрес,
	|	ДополнительныеПараметрыЗаказа.Доставка.ТочкаПрибытия.АдресИзЯндекса КАК АдресИзЯндекса,
	|	ДополнительныеПараметрыЗаказа.Доставка.ТочкаПрибытия.Москва КАК Москва
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО РеализацияТоваровУслуг.Ссылка = ДополнительныеПараметрыЗаказа.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_РасчетЯндекс.Ссылка
	|ГДЕ
	|	РеализацияТоваровУслуг.Номер В(&СписокНомеровЗаказов)
	|	И ВТ_РасчетЯндекс.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	ТарифныеСеткиДоступныеЗоныТарификации.Зона КАК ЗонаТарификации,
	|	ТарифныеСеткиДоступныеЗоныТарификации.Ссылка.КлассификаторТарификации КАК КлассификаторТарификации,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	ГруппыРайоновРайоны.Район КАК Район
	|ПОМЕСТИТЬ ВТДоступныеЗоныТарификации
	|ИЗ
	|	ВТ_Заказы КАК РеализацияТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТарифныеСетки.ДоступныеЗоныТарификации КАК ТарифныеСеткиДоступныеЗоныТарификации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов.Районы КАК ГруппыРайоновРайоны
	|			ПО ТарифныеСеткиДоступныеЗоныТарификации.Зона = ГруппыРайоновРайоны.Ссылка
	|		ПО РеализацияТоваровУслуг.ТарифнаяСеткаПартнера = ТарифныеСеткиДоступныеЗоныТарификации.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТДоступныеЗоныТарификации.Реализация КАК Реализация,
	|	ВТДоступныеЗоныТарификации.КлассификаторТарификации КАК КлассификаторТарификации,
	|	ВТДоступныеЗоныТарификации.ЗонаТарификации КАК ЗонаТарификации
	|ПОМЕСТИТЬ ВТ_ЗоныДоставки
	|ИЗ
	|	ВТДоступныеЗоныТарификации КАК ВТДоступныеЗоныТарификации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.новаРайоныАдресов КАК новаРайоныАдресов
	|		ПО ВТДоступныеЗоныТарификации.Доставка.ТочкаПрибытия.Адрес = новаРайоныАдресов.Адрес
	|			И ВТДоступныеЗоныТарификации.КлассификаторТарификации = новаРайоныАдресов.Классификатор
	|			И ВТДоступныеЗоныТарификации.Район = новаРайоныАдресов.Район
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Ссылка КАК Ссылка,
	|	ВТ_Заказы.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_Заказы.Доставка КАК Доставка,
	|	ВТ_Заказы.НомерДоставки КАК НомерДоставки,
	|	ВТ_Заказы.Номер КАК Номер,
	|	ВТ_Заказы.Адрес КАК Адрес,
	|	ВТ_Заказы.АдресИзЯндекса КАК АдресИзЯндекса,
	|	ВЫБОР
	|		КОГДА ВТ_ЗоныДоставки.ЗонаТарификации ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ВТ_Заказы.Ссылка.ТарифнаяСеткаПартнера.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка)
	|						ТОГДА ВТ_Заказы.Ссылка.ТарифнаяСеткаПартнера.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ВТ_Заказы.Ссылка.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|								ТОГДА ВЫБОР
	|										КОГДА ВТ_Заказы.Москва
	|											ТОГДА ГруппыРайонов_Москва.Ссылка
	|										ИНАЧЕ ГруппыРайонов_ЗаМкад.Ссылка
	|									КОНЕЦ
	|							ИНАЧЕ ГруппыРайонов_КАД_30.Ссылка
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВТ_ЗоныДоставки.ЗонаТарификации
	|	КОНЕЦ КАК Зона,
	|	ВЫБОР
	|		КОГДА ВТ_ЗоныДоставки.ЗонаТарификации ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ВТ_Заказы.ТарифнаяСеткаПартнера.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка)
	|						ТОГДА ВТ_Заказы.ТарифнаяСеткаПартнера.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе.КодТарифа
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ВТ_Заказы.Ссылка.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|								ТОГДА ВЫБОР
	|										КОГДА ВТ_Заказы.Москва
	|											ТОГДА ГруппыРайонов_Москва.КодТарифа
	|										ИНАЧЕ ГруппыРайонов_ЗаМкад.КодТарифа
	|									КОНЕЦ
	|							ИНАЧЕ ГруппыРайонов_КАД_30.КодТарифа
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВТ_ЗоныДоставки.ЗонаТарификации.КодТарифа
	|	КОНЕЦ КАК КодТарифа,
	|	ЗНАЧЕНИЕ(Перечисление.МетодыОпределенияЗоныТарификации.МеханизмНова) КАК МетодОпределенияЗоныТарификации,
	|	ЛОЖЬ КАК ЗонаНеОпределена
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗоныДоставки КАК ВТ_ЗоныДоставки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов КАК ГруппыРайонов_Москва
	|			ПО (ГруппыРайонов_Москва.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.Москва))
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов КАК ГруппыРайонов_ЗаМкад
	|			ПО (ГруппыРайонов_ЗаМкад.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ЗаМкад))
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов КАК ГруппыРайонов_КАД_30
	|			ПО (ГруппыРайонов_КАД_30.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.КАД_30))
	|		ПО ВТ_Заказы.Ссылка = ВТ_ЗоныДоставки.Реализация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_РасчетЯндекс.Ссылка,
	|	ВТ_РасчетЯндекс.ДатаДоставки,
	|	ВТ_РасчетЯндекс.Доставка,
	|	ВТ_РасчетЯндекс.НомерДоставки,
	|	ВТ_РасчетЯндекс.Номер,
	|	ВТ_РасчетЯндекс.Адрес,
	|	ВТ_РасчетЯндекс.АдресИзЯндекса,
	|	ЕСТЬNULL(ГруппыРайоновЗоныТарификацииПартнеров.Ссылка, ВТ_РасчетЯндекс.КартаТарификацииПартнеров.ЗонаТарификацииПриНепривязанномАдресе),
	|	ЕСТЬNULL(ГруппыРайоновЗоныТарификацииПартнеров.Ссылка.КодТарифа, ВТ_РасчетЯндекс.КартаТарификацииПартнеров.ЗонаТарификацииПриНепривязанномАдресе.КодТарифа),
	|	ЗНАЧЕНИЕ(Перечисление.МетодыОпределенияЗоныТарификации.МеханизмКартЯндекс),
	|	ГруппыРайоновЗоныТарификацииПартнеров.Ссылка ЕСТЬ NULL
	|ИЗ
	|	ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТ_РасчетЯндекс.Ссылка КАК Ссылка,
	|			ВТ_РасчетЯндекс.КартаТарификацииПартнеров КАК КартаТарификацииПартнеров,
	|			ЗоныТарификацииПартнеровСрезПоследних.ЗонаТарификации.НомерЗоны КАК НомерЗоны
	|		ИЗ
	|			ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗоныТарификацииПартнеров.СрезПоследних(
	|						,
	|						(Заказ, СхемаЗонТарификации) В
	|							(ВЫБРАТЬ
	|								ВТ_РасчетЯндекс.Ссылка КАК Заказ,
	|								ВТ_РасчетЯндекс.СхемаЗонТарификации КАК СхемаЗонТарификации
	|							ИЗ
	|								ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс)) КАК ЗоныТарификацииПартнеровСрезПоследних
	|				ПО ВТ_РасчетЯндекс.Ссылка = ЗоныТарификацииПартнеровСрезПоследних.Заказ) КАК ВЗ_ЗоныТарификацииЗаказов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов.ЗоныТарификацииПартнеров КАК ГруппыРайоновЗоныТарификацииПартнеров
	|			ПО ВЗ_ЗоныТарификацииЗаказов.НомерЗоны = ГруппыРайоновЗоныТарификацииПартнеров.НомерЗоныТарификации
	|				И ВЗ_ЗоныТарификацииЗаказов.КартаТарификацииПартнеров = ГруппыРайоновЗоныТарификацииПартнеров.Ссылка.КартаТарификацииПартнеров
	|		ПО ВТ_РасчетЯндекс.Ссылка = ВЗ_ЗоныТарификацииЗаказов.Ссылка";
	
	Запрос.УстановитьПараметр("СписокНомеровЗаказов", МассивНомеровЗаказов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивПараметров = Новый Массив;
	//Асеев 11.09.2024 (Задача № 5321)>>>
	МассивЗаказовОшибкаЗоныЯндекс = Новый Массив;
	//Асеев 11.09.2024 (Задача № 5321)<<<
	
	СтрWho = СокрЛП(ПараметрыСеанса.ТекущийПользователь);
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Доставка) Тогда
			Продолжить;
		КонецЕСли;	
		
		//Асеев 11.09.2024 (Задача № 5321)>>>
		Если ВыборкаДетальныеЗаписи.ЗонаНеОпределена Тогда
			МассивЗаказовОшибкаЗоныЯндекс.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
		//Асеев 11.09.2024 (Задача № 5321)<<<
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.АдресИзЯндекса) Тогда
			Адрес = ВыборкаДетальныеЗаписи.АдресИзЯндекса;
		Иначе
			Адрес = ВыборкаДетальныеЗаписи.Адрес;
		КонецЕсли;
		
		НомерДоставки = СтрЗаменить(СокрЛП(ВыборкаДетальныеЗаписи.НомерДоставки), "abc", "");
		НомерДоставки = СтрЗаменить(НомерДоставки, "def", "");
	
		ПараметрыЗапроса = Новый Структура();
		ПараметрыЗапроса.Вставить("Address", ?(Адрес="NULL", "NULL", "'" + СтрЗаменить(Адрес, "'", "") + "'"));
		ПараметрыЗапроса.Вставить("Car", "");
		ПараметрыЗапроса.Вставить("DeliveryDate", ВыборкаДетальныеЗаписи.ДатаДоставки);
		ПараметрыЗапроса.Вставить("IsRegion", Формат(ВыборкаДетальныеЗаписи.КодТарифа, "ЧН=0; ЧГ="));
		ПараметрыЗапроса.Вставить("OrderId", НомерДоставки);
		ПараметрыЗапроса.Вставить("Who", СтрWho);
		
		МассивПараметров.Добавить(ПараметрыЗапроса);
		
	КонецЦикла;
	
	//Асеев 11.09.2024 (Задача № 5321)>>>
	Если МассивЗаказовОшибкаЗоныЯндекс.Количество() Тогда
		МаршрутизацияЗаказовСервер.ОтправитьПисьмоОшибкаЗоныЯндекс(МассивЗаказовОшибкаЗоныЯндекс, "ТарификацияУслугСервер.УстановитьПараметрыОтклонённыхЗаказовПослеВыгрузки");
	КонецЕсли;
	//Асеев 11.09.2024 (Задача № 5321)<<<
	
	Если МассивПараметров.Количество() > 0 Тогда
		
		ПараметрыЗапроса = Новый Структура;		
		ПараметрыЗапроса.Вставить("orderCars", МассивПараметров);
		
		СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetOrderCarsResult, ПараметрыЗапроса,,,Истина);
		
		Если НЕ СтруктураВозврата.Успешно Тогда
			//ВызватьИсключение СтруктураВозврата.ОписаниеОшибки;
			lem.ОтправитьСообщениеОдминам("Ошибка выгрузки отклонённых заказов в админку", "При выгрузке отклонённых заказов в админку произошла ошибка!" + Символы.ПС + "Текст ошибки: " + СтруктураВозврата.ОписаниеОшибки);
		КонецЕсли;
		
	КонецЕсли;
	
	Попытка
		ПодключениеКМагазину = Евген.СоздатьПодключениеКИнтернетМагазину(800); 
	Исключение
		//Возврат "Не удалось создать подключение: "+ОписаниеОшибки();
		lem.ОтправитьСообщениеОдминам("Ошибка выгрузки отклонённых заказов в админку", "При выгрузке отклонённых заказов в админку произошла ошибка!" + Символы.ПС + "Текст ошибки: " + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Мас = СтрСоединить(МассивНомеровЗаказов,",");	
	Ткст = "select dbo.mv_orders.orderIDStr, dbo.mv_orders.serviceDC, dbo.mv_orders.serviceDCClean, dbo.mv_orders.typeDelivery, dbo.mv_orders.tariffCategoryId, dbo.mv_orders.chargeableWeight from dbo.mv_orders where dbo.mv_orders.orderID in (" + Мас + ")";
	
	Рез_ = МаршрутизацияЗаказовСервер.ЗапросКИнтернетМагазинуПоВыгрузкеМашин(Ткст, ПодключениеКМагазину);
	Рез = Евген.СоздатьТаблицу(Рез_, "orderIDStr, serviceDC_Ч, serviceDCClean_Ч, typeDelivery_Ч, tariffCategoryId_Ч, chargeableWeight_Ч");
	
	//CeHbKA #3695 01.02.2021
	ТаблицаДопПараметров = Новый ТаблицаЗначений;
	ТаблицаДопПараметров.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));	
	ТаблицаДопПараметров.Колонки.Добавить("orderId");
	ТаблицаДопПараметров.Колонки.Добавить("Номер");
	ТаблицаДопПараметров.Колонки.Добавить("chargeableweight");
	//CeHbKA #3695 01.02.2021
	
	//+Степанов Задача № 3833
	//Асеев 11.09.2024 (Задача № 5321)>>>
	ТаблицаПараметровТарифовЗаказов = СоздатьТаблицуПараметровТарифовЗаказов();
	//Асеев 11.09.2024 (Задача № 5321)<<<
	//-Степанов Задача № 3833
		
	Для Каждого Тек Из Рез Цикл
				
		РТиУ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Тек.orderIDStr);
				
		Д = РТиУ.ПолучитьОбъект();
		Д.УслугиСД = Тек.serviceDC_Ч;
		Д.УслугиСДЧистые = Тек.serviceDCClean_Ч;
		Д.КатегорияДоставки = Тек.typeDelivery_Ч;
		
		//CeHbKA #3695 01.02.2021
		СтрокаДопПараметров = ТаблицаДопПараметров.Добавить();
		СтрокаДопПараметров.Ссылка = РТиУ;
		СтрокаДопПараметров.Номер = РТиУ.Номер;
		СтрокаДопПараметров.orderId = Тек.orderIDStr;
		СтрокаДопПараметров.chargeableweight = ?(ЗначениеЗаполнено(Тек.chargeableWeight_Ч), Тек.chargeableWeight_Ч, 0);
		//CeHbKA #3695 01.02.2021
		
		СтрокаПараметровТарифа = ТаблицаПараметровТарифовЗаказов.Добавить();
		СтрокаПараметровТарифа.Заказ = РТиУ;
		СтрокаПараметровТарифа.УслугиСД = ?(Тек.serviceDC_Ч = 0, -1, Тек.serviceDC_Ч);
		СтрокаПараметровТарифа.УслугиСДЧистые = ?(Тек.serviceDC_Ч = 0, -1, Тек.serviceDC_Ч);
		СтрокаПараметровТарифа.КатегорияДоставки =  Тек.typeDelivery_Ч;
		
		Р_Бр = "";
		Если ЗначениеЗаполнено(Д.ТарифнаяСеткаПартнера) Тогда
			Р_Бр = Справочники.РасчетныеБрейки.НайтиПоРеквизиту("КодБрейка", Тек.tariffCategoryId_Ч,, д.ТарифнаяСеткаПартнера);
		КонецеСли;	
		Если ЗначениеЗаполнено(Р_Бр) Тогда
			Д.РасчетныйБрейк = Р_Бр;
			СтрокаПараметровТарифа.РасчетныйБрейк = Р_Бр;
		КонецЕСли;	
		
		//CeHbKA #21.07.2020
		ВыборкаДетальныеЗаписи.Сбросить();
		
		СтруктураОтбора = Новый Структура("Ссылка", РТиУ);
		
		Пока ВыборкаДетальныеЗаписи.НайтиСледующий(СтруктураОтбора) Цикл
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Зона) 
				И Д.ЗонаТарификации.Пустая() Тогда
				Д.ЗонаТарификации = ВыборкаДетальныеЗаписи.Зона;
				СтрокаПараметровТарифа.ЗонаТарификации = ВыборкаДетальныеЗаписи.Зона;
				//Асеев 11.09.2024 (Задача № 5321)>>>
				СтрокаПараметровТарифа.МетодОпределенияЗоныТарификации = ВыборкаДетальныеЗаписи.МетодОпределенияЗоныТарификации;
				//Асеев 11.09.2024 (Задача № 5321)<<<
			КонецеСли;	
		КонецЦикла; 
		//CeHbKA #21.07.2020
				
		Д.Записать(РежимЗаписиДокумента.Запись);
				
	КонецЦикла;
	
	//+Степанов Задача № 3833
	Если ТаблицаПараметровТарифовЗаказов.Количество() Тогда
		ТарификацияУслугСервер.ЗаписатьПараметрыТарифаЗаказа(ТаблицаПараметровТарифовЗаказов);
	КонецЕсли;	
	//-Степанов Задача № 3833
	
	//CeHbKA #3695 01.02.2021
	Если ТаблицаДопПараметров.Количество() Тогда
		may.ЗаписьТабВРСДополнительныеПараметрыЗаказа(ТаблицаДопПараметров, ТаблицаДопПараметров);
	КонецЕсли; 
	//CeHbKA #3695 01.02.2021
	
КонецПроцедуры
//CeHbKA #3965 07.05.2020

//Функция ПараметрыКомпоненты(Компонента = Неопределено, Тариф=0, Показатель=0, Сумма=0, Идентификатор=0, ДатаДоставки = Неопределено, ТипТарифа=0) Экспорт
//Компонента - Справочник.КомпонентыТарификации
Функция ПараметрыКомпоненты(Компонента, Тариф=0, Показатель=0, Сумма=0, Идентификатор=0, ДатаДоставки = Неопределено, ТипТарифа=0) Экспорт
	
	//КомпонентаВАдминку = Новый Соответствие;
	//КомпонентаВАдминку.Вставить(Справочники.КомпонентыТарификации.ТарифДоставки, 1);
	//КомпонентаВАдминку.Вставить(Справочники.КомпонентыТарификации.ТарифДоставкиКилометражОтГраницОбласти, 2);
	//КомпонентаВАдминку.Вставить(Справочники.КомпонентыТарификации.ПустаяСсылка(), 0);
	//КомпонентаВАдминку.Вставить(неопределено, 0);

	////КомпонентаВАдминку = ?(Компонента = Справочники.КомпонентыТарификации.ТарифДоставки, 1, 2);	
	
	//CeHbKA #3941 #21.04.2020
	КомпонентаВАдминку = ПолучитьКомпонентыТарификацииСИдентификатором();
	КомпонентаВАдминку.Вставить(неопределено, 0);
	//CeHbKA #3941 #21.04.2020
	
	Возврат Новый Структура("Компонента, Тариф, Показатель, Сумма, Идентификатор, ДатаДоставки, ТипТарифа", КомпонентаВАдминку.Получить(Компонента), Тариф, Показатель, Сумма, Идентификатор, ДатаДоставки, ТипТарифа);
	
КонецФункции	

//Параметры компоненты:
//Компонента, Тариф=0, Показатель=0, Сумма=0, Идентификатор=0, ДатаДоставки = Неопределено, ТипТарифа=0
Функция ДобавитьДанныеПоЗаказу(Заказ, ПараметрыКомпоненты, МассивПараметров = Неопределено) Экспорт
	Если МассивПараметров = Неопределено Тогда
		МассивПараметров = Новый Массив;
	КонецЕсли;	
	//"Компонента, Тариф, Показатель, Сумма, Идентификатор, ДатаДоставки, ТипТарифа",
	//Компонента.Component, Компонента.Tariff, Компонента.Mark, Компонента.Sum, Компонента.IdTariff, Компонента.DeliveryDate, Компонента.TariffType
	
	Если ПараметрыКомпоненты.ДатаДоставки=Неопределено Тогда
		
		ПараметрыКомпоненты.ДатаДоставки = ТекущаяДата();
		
	КонецЕсли;
	
	НомерЗаказа = Число(Заказ.Номер);
	
	ПараметрыКомпонентыКОтправке = Новый Массив;
	ПараметрыКомпонентыКОтправке.Добавить(Новый Структура("Component,Tariff,Mark,Sum,IdTariff,DeliveryDate,TariffType", 
	ПараметрыКомпоненты.Компонента,ПараметрыКомпоненты.Тариф, ПараметрыКомпоненты.Показатель, ПараметрыКомпоненты.Сумма, ПараметрыКомпоненты.Идентификатор, ПараметрыКомпоненты.ДатаДоставки, ПараметрыКомпоненты.ТипТарифа));
	
	МассивПараметров.Добавить(Новый Структура("OrderId, TariffComponents", НомерЗаказа, ПараметрыКомпонентыКОтправке));
	
	Возврат МассивПараметров;

Конецфункции	

#КонецОбласти

#Область ОтказныеПозиции
//+Степанов Задача № 3761 Добавлен параметр КодМаркировки
Функция ПараметрыОтказнойПозиции(НомерЗаказа = "", КодТовара=0, Количество=0, Цена=0, ДатаСобытия = Неопределено, Штрихкод = "", КодМаркировки = "") Экспорт
	
	Если НомерЗаказа = "" Тогда НомерЗаказа = 0 КонецЕсли;
	Если ДатаСобытия = Неопределено Тогда ДатаСобытия = ТекущаяДата() КонецЕсли;
	Если Не ЗначениеЗаполнено(Штрихкод) ИЛИ Штрихкод = NULL Тогда Штрихкод = "" КонецЕсли;;		
	
	//+Степанов Задача № 3761
	//Возврат Новый Структура("orderId,skuId,count,price,complDate,barcode",НомерЗаказа,КодТовара,Количество,Цена,ДатаСобытия,Штрихкод);
	Возврат Новый Структура("orderId,skuId,count,price,complDate,barcode,markingCode",НомерЗаказа,КодТовара,Количество,Цена,ДатаСобытия,Штрихкод,КодМаркировки);

КонецФункции

Функция ДобавитьПараметрыОтказныхПозиций(ПараметрыОтказнойПозиции, МассивПараметров = Неопределено) Экспорт
	
	Если МассивПараметров = Неопределено Тогда
		МассивПараметров = новый Массив;
	КонецЕслИ;
	МассивПараметров.Добавить(ПараметрыОтказнойПозиции);
	
	Возврат МассивПараметров;
	
КонецФункции

#КонецОбласти

//Асеев 11.09.2024 (Задача № 5321)>>>
Функция СоздатьТаблицуПараметровТарифовЗаказов() Экспорт
	
	ТаблицаПараметровТарифовЗаказов = Новый ТаблицаЗначений;
	КолонкиТаблицы = ТаблицаПараметровТарифовЗаказов.Колонки;
	КолонкиТаблицы.Добавить("Заказ", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
	КолонкиТаблицы.Добавить("УслугиСД", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)));
	КолонкиТаблицы.Добавить("УслугиСДЧистые", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)));
	КолонкиТаблицы.Добавить("ЗонаТарификации", Новый ОписаниеТипов("СправочникСсылка.ГруппыРайонов"));	
	КолонкиТаблицы.Добавить("КатегорияДоставки", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Любой)));
	КолонкиТаблицы.Добавить("ТарифнаяСетка", Новый ОписаниеТипов("СправочникСсылка.ТарифныеСетки"));
	КолонкиТаблицы.Добавить("РасчетныйБрейк", Новый ОписаниеТипов("СправочникСсылка.РасчетныеБрейки"));
	КолонкиТаблицы.Добавить("МетодОпределенияЗоныТарификации", Новый ОписаниеТипов("ПеречислениеСсылка.МетодыОпределенияЗоныТарификации"));
	
	Возврат ТаблицаПараметровТарифовЗаказов;
	
КонецФункции
//Асеев 11.09.2024 (Задача № 5321)<<<

//+Степанов Задача № 3833
Процедура ЗаписатьПараметрыТарифаЗаказа(ПараметрыТарифа) Экспорт	
	Запрос = Новый Запрос;
	//Асеев 11.09.2024 (Задача № 5321)>>>
	//Асеев 11.09.2024 (Задача № 5321)<<<
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЗПараметровТарифов.Заказ КАК Заказ,
	|	ТЗПараметровТарифов.ЗонаТарификации КАК ЗонаТарификации,
	|	ТЗПараметровТарифов.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ТЗПараметровТарифов.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ТЗПараметровТарифов.УслугиСД КАК УслугиСД,
	|	ТЗПараметровТарифов.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ТЗПараметровТарифов.КатегорияДоставки КАК КатегорияДоставки,
	|	ТЗПараметровТарифов.МетодОпределенияЗоныТарификации КАК МетодОпределенияЗоныТарификации
	|ПОМЕСТИТЬ втПараметрыТарифовЗаказов
	|ИЗ
	|	&ТЗПараметровТарифов КАК ТЗПараметровТарифов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Заказ КАК Заказ,
	|	ВложенныйЗапрос.ЗонаТарификации КАК ЗонаТарификации,
	|	ВложенныйЗапрос.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ВложенныйЗапрос.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ВложенныйЗапрос.УслугиСД КАК УслугиСД,
	|	ВложенныйЗапрос.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ВложенныйЗапрос.КатегорияДоставки КАК КатегорияДоставки,
	|	ВложенныйЗапрос.МетодОпределенияЗоныТарификации КАК МетодОпределенияЗоныТарификации,
	|	&Период КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		втПараметрыТарифовЗаказов.Заказ КАК Заказ,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА втПараметрыТарифовЗаказов.ЗонаТарификации = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка)
	|					ТОГДА ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации
	|				ИНАЧЕ втПараметрыТарифовЗаказов.ЗонаТарификации
	|			КОНЕЦ) КАК ЗонаТарификации,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА втПараметрыТарифовЗаказов.РасчетныйБрейк = ЗНАЧЕНИЕ(Справочник.РасчетныеБрейки.ПустаяСсылка)
	|					ТОГДА ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк
	|				ИНАЧЕ втПараметрыТарифовЗаказов.РасчетныйБрейк
	|			КОНЕЦ) КАК РасчетныйБрейк,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА втПараметрыТарифовЗаказов.ТарифнаяСетка = ЗНАЧЕНИЕ(Справочник.ТарифныеСетки.ПустаяСсылка)
	|					ТОГДА ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка
	|				ИНАЧЕ втПараметрыТарифовЗаказов.ТарифнаяСетка
	|			КОНЕЦ) КАК ТарифнаяСетка,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА втПараметрыТарифовЗаказов.УслугиСД = 0
	|					ТОГДА ПараметрыТарифаЗаказаСрезПоследних.УслугиСД
	|				КОГДА втПараметрыТарифовЗаказов.УслугиСД = -1
	|					ТОГДА 0
	|				ИНАЧЕ втПараметрыТарифовЗаказов.УслугиСД
	|			КОНЕЦ) КАК УслугиСД,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА втПараметрыТарифовЗаказов.УслугиСДЧистые = 0
	|					ТОГДА ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые
	|				КОГДА втПараметрыТарифовЗаказов.УслугиСДЧистые = -1
	|					ТОГДА 0
	|				ИНАЧЕ втПараметрыТарифовЗаказов.УслугиСДЧистые
	|			КОНЕЦ) КАК УслугиСДЧистые,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА втПараметрыТарифовЗаказов.КатегорияДоставки = 0
	|					ТОГДА ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки
	|				ИНАЧЕ КатегорииДоставки2014.Ссылка
	|			КОНЕЦ) КАК КатегорияДоставки,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА втПараметрыТарифовЗаказов.МетодОпределенияЗоныТарификации = ЗНАЧЕНИЕ(Перечисление.МетодыОпределенияЗоныТарификации.ПустаяСсылка)
	|					ТОГДА ПараметрыТарифаЗаказаСрезПоследних.МетодОпределенияЗоныТарификации
	|				ИНАЧЕ втПараметрыТарифовЗаказов.МетодОпределенияЗоныТарификации
	|			КОНЕЦ) КАК МетодОпределенияЗоныТарификации,
	|		ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСДВРС,
	|		ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистыеВРС,
	|		ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификацииВРС,
	|		ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставкиВРС,
	|		ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаВРС,
	|		ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейкВРС,
	|		ПараметрыТарифаЗаказаСрезПоследних.МетодОпределенияЗоныТарификации КАК МетодОпределенияЗоныТарификацииВРС
	|	ИЗ
	|		втПараметрыТарифовЗаказов КАК втПараметрыТарифовЗаказов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|			ПО втПараметрыТарифовЗаказов.КатегорияДоставки = КатегорииДоставки2014.Категория
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(, ) КАК ПараметрыТарифаЗаказаСрезПоследних
	|			ПО втПараметрыТарифовЗаказов.Заказ = ПараметрыТарифаЗаказаСрезПоследних.Заказ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		втПараметрыТарифовЗаказов.Заказ,
	|		ПараметрыТарифаЗаказаСрезПоследних.УслугиСД,
	|		ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые,
	|		ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации,
	|		ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки,
	|		ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка,
	|		ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк,
	|		ПараметрыТарифаЗаказаСрезПоследних.МетодОпределенияЗоныТарификации) КАК ВложенныйЗапрос
	|ГДЕ
	|	ЕСТЬNULL(ВложенныйЗапрос.ЗонаТарификации <> ВложенныйЗапрос.ЗонаТарификацииВРС
	|				ИЛИ ВложенныйЗапрос.КатегорияДоставки <> ВложенныйЗапрос.КатегорияДоставкиВРС
	|				ИЛИ ВложенныйЗапрос.РасчетныйБрейк <> ВложенныйЗапрос.РасчетныйБрейкВРС
	|				ИЛИ ВложенныйЗапрос.ТарифнаяСетка <> ВложенныйЗапрос.ТарифнаяСеткаВРС
	|				ИЛИ ВложенныйЗапрос.УслугиСД <> ВложенныйЗапрос.УслугиСДВРС
	|				ИЛИ ВложенныйЗапрос.УслугиСДЧистые <> ВложенныйЗапрос.УслугиСДЧистыеВРС
	|				ИЛИ ВложенныйЗапрос.МетодОпределенияЗоныТарификации <> ВложенныйЗапрос.МетодОпределенияЗоныТарификацииВРС, ИСТИНА)";
	
	Запрос.УстановитьПараметр("ТЗПараметровТарифов", ПараметрыТарифа);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	ТаблицаЗаписей = Запрос.Выполнить().Выгрузить();	
	НаборЗаписей = РегистрыСведений.ПараметрыТарифаЗаказа.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(ТаблицаЗаписей);
	НаборЗаписей.Записать(Ложь);
КонецПроцедуры	
//-Степанов Задача № 3833

//CeHbKA #3941 23.04.2020
Функция ПолучитьКомпонентыТарификацииСИдентификатором(Инверсия = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомпонентыТарификации.Ссылка КАК КомпонентаТарификации,
		|	КомпонентыТарификации.ИдентификаторВАдминке КАК ИдентификаторВАдминке
		|ИЗ
		|	Справочник.КомпонентыТарификации КАК КомпонентыТарификации
		|ГДЕ
		|	НЕ КомпонентыТарификации.ПометкаУдаления
		|	И КомпонентыТарификации.ИдентификаторВАдминке <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИдентификаторВАдминке";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	КомпонентаИзАдминки = Новый Соответствие;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если Инверсия Тогда			
			КомпонентаИзАдминки.Вставить( ВыборкаДетальныеЗаписи.ИдентификаторВАдминке, ВыборкаДетальныеЗаписи.КомпонентаТарификации);
		Иначе
			КомпонентаИзАдминки.Вставить(ВыборкаДетальныеЗаписи.КомпонентаТарификации, ВыборкаДетальныеЗаписи.ИдентификаторВАдминке);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КомпонентаИзАдминки;
	
КонецФункции
//CeHbKA #3941 23.04.2020

//Асеев 31.03.2022 (Задача № 4771)>>>
Функция ПолучитьРасчетныеДанныеПримерки(ДанныеПримерки) Экспорт
	
	РасчетныеДанные = Новый Структура;
	
	Экспедитор = Неопределено;
	ДанныеПримерки.Свойство("Экспедитор", Экспедитор);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", ДанныеПримерки.Дата);
	Запрос.УстановитьПараметр("Период", КонецДня(ДанныеПримерки.Дата));
	Запрос.УстановитьПараметр("Водитель", ДанныеПримерки.Водитель);
	Запрос.УстановитьПараметр("Экспедитор", Экспедитор);
	Запрос.УстановитьПараметр("ТарифПримерки", ДанныеПримерки.ТарифПримерки);
	Запрос.УстановитьПараметр("КоличествоSKUПримерки", ДанныеПримерки.КоличествоSKUПримерки);
	Запрос.УстановитьПараметр("СоставЭкипажа", ДанныеПримерки.СоставЭкипажа);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Водитель) КАК УчастникЭкипажа,
	|	новаВодители.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТ_УчастникиЭкипажа
	|ИЗ
	|	Справочник.новаВодители КАК новаВодители
	|ГДЕ
	|	новаВодители.Ссылка = &Водитель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Экспедитор),
	|	новаЭкспедиторы.ФизЛицо
	|ИЗ
	|	Справочник.новаЭкспедиторы КАК новаЭкспедиторы
	|ГДЕ
	|	новаЭкспедиторы.Ссылка = &Экспедитор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УчастникиЭкипажа.УчастникЭкипажа КАК УчастникЭкипажа,
	|	ВТ_УчастникиЭкипажа.ФизЛицо КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПланируемыйГрафикРаботыСотрудниковСрезПоследних.РольСотрудника, ЗНАЧЕНИЕ(Справочник.РолиСотрудников.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.РолиСотрудников.ПустаяСсылка)
	|			ТОГДА ПланируемыйГрафикРаботыСотрудниковСрезПоследних.РольСотрудника
	|		ИНАЧЕ ЕСТЬNULL(ДополнительныеПараметрыФизЛицСрезПоследних.ОсновнаяРольСотрудника, ЗНАЧЕНИЕ(Справочник.РолиСотрудников.ПустаяСсылка))
	|	КОНЕЦ КАК РольСотрудника
	|ПОМЕСТИТЬ ВТ_РолиУчастниковЭкипажа
	|ИЗ
	|	ВТ_УчастникиЭкипажа КАК ВТ_УчастникиЭкипажа
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПланируемыйГрафикРаботыСотрудников.СрезПоследних(
	|				&Период,
	|				ФизЛицо В
	|						(ВЫБРАТЬ
	|							ВТ_УчастникиЭкипажа.ФизЛицо КАК ФизЛицо
	|						ИЗ
	|							ВТ_УчастникиЭкипажа КАК ВТ_УчастникиЭкипажа)
	|					И Дата = &Дата) КАК ПланируемыйГрафикРаботыСотрудниковСрезПоследних
	|		ПО ВТ_УчастникиЭкипажа.ФизЛицо = ПланируемыйГрафикРаботыСотрудниковСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыФизЛиц.СрезПоследних(
	|				&Период,
	|				ФизЛицо В
	|					(ВЫБРАТЬ
	|						ВТ_УчастникиЭкипажа.ФизЛицо КАК ФизЛицо
	|					ИЗ
	|						ВТ_УчастникиЭкипажа КАК ВТ_УчастникиЭкипажа)) КАК ДополнительныеПараметрыФизЛицСрезПоследних
	|		ПО ВТ_УчастникиЭкипажа.ФизЛицо = ДополнительныеПараметрыФизЛицСрезПоследних.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР ВТ_РолиУчастниковЭкипажа.УчастникЭкипажа
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Водитель)
	|			ТОГДА ""СтоимостьПримеркиВодитель""
	|		ИНАЧЕ ""СтоимостьПримеркиЭкспедитор""
	|	КОНЕЦ КАК ПоказательПримерки,
	|	ПоказателиТарифаПримерки.Тариф КАК Тариф
	|ИЗ
	|	ВТ_РолиУчастниковЭкипажа КАК ВТ_РолиУчастниковЭкипажа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПоказателиТарифаПримерки КАК ПоказателиТарифаПримерки
	|		ПО (ПоказателиТарифаПримерки.ТарифПримерки = &ТарифПримерки)
	|			И (&КоличествоSKUПримерки МЕЖДУ ПоказателиТарифаПримерки.КоличествоSKUОт И ПоказателиТарифаПримерки.КоличествоSKUДо)
	|			И (ПоказателиТарифаПримерки.СоставЭкипажа = &СоставЭкипажа)
	|			И ВТ_РолиУчастниковЭкипажа.РольСотрудника = ПоказателиТарифаПримерки.Роль";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РасчетныеДанные.Вставить(Выборка.ПоказательПримерки, Выборка.Тариф);
	КонецЦикла;
	
	Возврат РасчетныеДанные;
	
КонецФункции
//Асеев 31.03.2022 (Задача № 4771)<<<

Функция СоздатьНовуюПолигональнуюСхемуТарификации(КодРегиона) Экспорт

	ВидМетода = Перечисления.ВидыЗапросовWEBСервис.CreateMapResult;
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("КодРегиона", Формат(КодРегиона, "ЧГ="));
	//работает без передачи constructorId, т.к., эта функция вызывается только в контексте ПМ, внутри админки вшито, что если не передано - то дефолтная схема карт ПМ 
	Если КодРегиона = 1 Тогда
		ПараметрыЗапроса.Вставить("constructorId", Справочники.КартыКонструктораКарт.ТарификацияМСК3Зоны2022.ИдентификаторКарты);
	ИначеЕсли КодРегиона = 2 Тогда
		ПараметрыЗапроса.Вставить("constructorId", Справочники.КартыКонструктораКарт.ТарификацияСПб2022.ИдентификаторКарты);
	КонецеСли;	
	
	ПолученныеДанные = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(ВидМетода, ПараметрыЗапроса);
	Если Не ПолученныеДанные.Успешно Тогда
		Возврат Ложь;
	Иначе
	КонецеСли;		
	
	РезультатОбработки = ИнтеграцияСАдминкойWEBСервис.ОбработатьПолученныеДанные(ПолученныеДанные.Данные, ВидМетода);	

	Возврат РезультатОбработки;
	
КонецФункции

// Асеев 14.10.2022 (Задача № 4913)>>>
//
// Параметры:
//  МассивЗаказов		 - 	 - массив ссылок или массив номеров
//  ЗаписыватьЗонуВРС	 - 	 - 
//
Процедура УстановитьЗонуЗаказов(МассивЗаказов, ЗаписыватьЗонуВРС = Истина, ТаблицаПараметровТарифовЗаказов = Неопределено) Экспорт
	
	Если Не МассивЗаказов.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	
	ТекстПолеОтбора = ?(ТипЗнч(МассивЗаказов[0]) = Тип("Строка"), "Номер", "Ссылка");
	//Асеев 11.09.2024 (Задача № 5321)>>>
	//Асеев 11.09.2024 (Задача № 5321)<<<
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаборТовара.Ссылка КАК Заказ,
	|	ЗаборТовара.Номер КАК Номер,
	|	ЗаборТовара.ТарифнаяСетка.КартаТарификацииПартнеров КАК КартаТарификацииПартнеров,
	|	АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.СхемаЗонТарификацииПартнеров КАК СхемаЗонТарификации
	|ПОМЕСТИТЬ ВТ_РасчетЯндекс
	|ИЗ
	|	Документ.ЗаборТовара КАК ЗаборТовара
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АктуальныеСхемыЗонКартТарификацииПартнеров.СрезПоследних КАК АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних
	|		ПО (ЗаборТовара." + ТекстПолеОтбора + " В (&МассивЗаказов))
	|			И (ЗаборТовара.ТарифнаяСетка.МетодОпределенияЗоныТарификации = ЗНАЧЕНИЕ(Перечисление.МетодыОпределенияЗоныТарификации.МеханизмКартЯндекс))
	|			И ЗаборТовара.ТарифнаяСетка.КартаТарификацииПартнеров = АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.КартаКонструктораКарт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Номер,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров,
	|	АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.СхемаЗонТарификацииПартнеров
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АктуальныеСхемыЗонКартТарификацииПартнеров.СрезПоследних КАК АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних
	|		ПО (РеализацияТоваровУслуг." + ТекстПолеОтбора + " В (&МассивЗаказов))
	|			И (РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.МетодОпределенияЗоныТарификации = ЗНАЧЕНИЕ(Перечисление.МетодыОпределенияЗоныТарификации.МеханизмКартЯндекс))
	|			И РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров = АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.КартаКонструктораКарт";
	Если ТаблицаПараметровТарифовЗаказов = Неопределено Тогда
		ТекстЗапроса = ТекстЗапроса +
		"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
		|	РеализацияТоваровУслуг.Номер КАК Номер,
		|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
		|	новаМестнаяДоставка.ТочкаПрибытия.Адрес КАК Адрес,
		|	новаМестнаяДоставка.ТочкаПрибытия.Москва КАК Москва,
		|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
		|		ПО (РеализацияТоваровУслуг." + ТекстПолеОтбора + " В (&МассивЗаказов))
		|			И РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних КАК ПараметрыТарифаЗаказаСрезПоследних
		|		ПО РеализацияТоваровУслуг.Ссылка = ПараметрыТарифаЗаказаСрезПоследних.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
		|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_РасчетЯндекс.Заказ
		|ГДЕ
		|	ВТ_РасчетЯндекс.Заказ ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаборТовара.Ссылка,
		|	ЗаборТовара.Номер,
		|	ЗаборТовара.ТерминалДоставки,
		|	ЗаборТовара.ТочкаДоставки.Адрес,
		|	ЗаборТовара.ТочкаДоставки.Москва,
		|	ЗаборТовара.ТарифнаяСетка
		|ИЗ
		|	Документ.ЗаборТовара КАК ЗаборТовара
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
		|		ПО ЗаборТовара.Ссылка = ВТ_РасчетЯндекс.Заказ
		|ГДЕ
		|	ЗаборТовара." + ТекстПолеОтбора + " В(&МассивЗаказов)
		|	И ВТ_РасчетЯндекс.Заказ ЕСТЬ NULL";
	Иначе
		Запрос.УстановитьПараметр("ТаблицаПараметровТарифовЗаказов", ТаблицаПараметровТарифовЗаказов);
		ТекстЗапроса = ТекстЗапроса +
		"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПараметровТарифовЗаказов.Заказ КАК Заказ,
		|	ТаблицаПараметровТарифовЗаказов.ТарифнаяСетка КАК ТарифнаяСетка
		|ПОМЕСТИТЬ ВТ_ПараметрыТарифаЗаказа
		|ИЗ
		|	&ТаблицаПараметровТарифовЗаказов КАК ТаблицаПараметровТарифовЗаказов";
		ТекстЗапроса = ТекстЗапроса +
		"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
		|	РеализацияТоваровУслуг.Номер КАК Номер,
		|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
		|	новаМестнаяДоставка.ТочкаПрибытия.Адрес КАК Адрес,
		|	новаМестнаяДоставка.ТочкаПрибытия.Москва КАК Москва,
		|	ЕСТЬNULL(ВТ_ПараметрыТарифаЗаказа.ТарифнаяСетка, ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка) КАК ТарифнаяСеткаПартнера
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
		|		ПО (РеализацияТоваровУслуг." + ТекстПолеОтбора + " В (&МассивЗаказов))
		|			И РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыТарифаЗаказа КАК ВТ_ПараметрыТарифаЗаказа
		|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_ПараметрыТарифаЗаказа.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних КАК ПараметрыТарифаЗаказаСрезПоследних
		|		ПО РеализацияТоваровУслуг.Ссылка = ПараметрыТарифаЗаказаСрезПоследних.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
		|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_РасчетЯндекс.Заказ
		|ГДЕ
		|	ВТ_РасчетЯндекс.Заказ ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаборТовара.Ссылка,
		|	ЗаборТовара.Номер,
		|	ЗаборТовара.ТерминалДоставки,
		|	ЗаборТовара.ТочкаДоставки.Адрес,
		|	ЗаборТовара.ТочкаДоставки.Москва,
		|	ЗаборТовара.ТарифнаяСетка
		|ИЗ
		|	Документ.ЗаборТовара КАК ЗаборТовара
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
		|		ПО ЗаборТовара.Ссылка = ВТ_РасчетЯндекс.Заказ
		|ГДЕ
		|	ЗаборТовара." + ТекстПолеОтбора + " В(&МассивЗаказов)
		|	И ВТ_РасчетЯндекс.Заказ ЕСТЬ NULL";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса +
	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|" +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	ТарифныеСеткиДоступныеЗоныТарификации.Зона КАК ЗонаТарификации,
	|	ТарифныеСеткиДоступныеЗоныТарификации.Ссылка.КлассификаторТарификации КАК КлассификаторТарификации,
	|	ГруппыРайоновРайоны.Район КАК Район,
	|	ВТ_Заказы.Адрес КАК Адрес
	|ПОМЕСТИТЬ ВТДоступныеЗоныТарификации
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТарифныеСетки.ДоступныеЗоныТарификации КАК ТарифныеСеткиДоступныеЗоныТарификации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов.Районы КАК ГруппыРайоновРайоны
	|			ПО ТарифныеСеткиДоступныеЗоныТарификации.Зона = ГруппыРайоновРайоны.Ссылка
	|		ПО ВТ_Заказы.ТарифнаяСеткаПартнера = ТарифныеСеткиДоступныеЗоныТарификации.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТДоступныеЗоныТарификации.Заказ КАК Заказ,
	|	ВТДоступныеЗоныТарификации.КлассификаторТарификации КАК КлассификаторТарификации,
	|	ВТДоступныеЗоныТарификации.ЗонаТарификации КАК ЗонаТарификации
	|ПОМЕСТИТЬ ВТ_ЗоныДоставки
	|ИЗ
	|	ВТДоступныеЗоныТарификации КАК ВТДоступныеЗоныТарификации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.новаРайоныАдресов КАК новаРайоныАдресов
	|		ПО ВТДоступныеЗоныТарификации.Адрес = новаРайоныАдресов.Адрес
	|			И ВТДоступныеЗоныТарификации.КлассификаторТарификации = новаРайоныАдресов.Классификатор
	|			И ВТДоступныеЗоныТарификации.Район = новаРайоныАдресов.Район
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	ВТ_Заказы.Номер КАК Номер,
	|	ВЫБОР
	|		КОГДА ВТ_ЗоныДоставки.ЗонаТарификации ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ВТ_Заказы.ТарифнаяСеткаПартнера.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка)
	|						ТОГДА ВТ_Заказы.ТарифнаяСеткаПартнера.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ВТ_Заказы.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|								ТОГДА ВЫБОР
	|										КОГДА ВТ_Заказы.Москва
	|											ТОГДА ГруппыРайонов_Москва.Ссылка
	|										ИНАЧЕ ГруппыРайонов_ЗаМкад.Ссылка
	|									КОНЕЦ
	|							ИНАЧЕ ГруппыРайонов_КАД_30.Ссылка
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВТ_ЗоныДоставки.ЗонаТарификации
	|	КОНЕЦ КАК Зона,
	|	ВЫБОР
	|		КОГДА ВТ_ЗоныДоставки.ЗонаТарификации ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ВТ_Заказы.ТарифнаяСеткаПартнера.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка)
	|						ТОГДА ВТ_Заказы.ТарифнаяСеткаПартнера.КлассификаторТарификации.ЗонаТарификацииПриНепривязанномАдресе.КодТарифа
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ВТ_Заказы.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|								ТОГДА ВЫБОР
	|										КОГДА ВТ_Заказы.Москва
	|											ТОГДА ГруппыРайонов_Москва.КодТарифа
	|										ИНАЧЕ ГруппыРайонов_ЗаМкад.КодТарифа
	|									КОНЕЦ
	|							ИНАЧЕ ГруппыРайонов_КАД_30.КодТарифа
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВТ_ЗоныДоставки.ЗонаТарификации.КодТарифа
	|	КОНЕЦ КАК КодТарифа,
	|	ЗНАЧЕНИЕ(Перечисление.МетодыОпределенияЗоныТарификации.МеханизмНова) КАК МетодОпределенияЗоныТарификации,
	|	ЛОЖЬ КАК ЗонаНеОпределена
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов КАК ГруппыРайонов_Москва
	|		ПО (ГруппыРайонов_Москва.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.Москва))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов КАК ГруппыРайонов_ЗаМкад
	|		ПО (ГруппыРайонов_ЗаМкад.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ЗаМкад))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов КАК ГруппыРайонов_КАД_30
	|		ПО (ГруппыРайонов_КАД_30.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.КАД_30))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗоныДоставки КАК ВТ_ЗоныДоставки
	|		ПО ВТ_Заказы.Заказ = ВТ_ЗоныДоставки.Заказ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_РасчетЯндекс.Заказ,
	|	ВТ_РасчетЯндекс.Номер,
	|	ЕСТЬNULL(ГруппыРайоновЗоныТарификацииПартнеров.Ссылка, ВТ_РасчетЯндекс.КартаТарификацииПартнеров.ЗонаТарификацииПриНепривязанномАдресе),
	|	ЕСТЬNULL(ГруппыРайоновЗоныТарификацииПартнеров.Ссылка.КодТарифа, ВТ_РасчетЯндекс.КартаТарификацииПартнеров.ЗонаТарификацииПриНепривязанномАдресе.КодТарифа),
	|	ЗНАЧЕНИЕ(Перечисление.МетодыОпределенияЗоныТарификации.МеханизмКартЯндекс),
	|	ГруппыРайоновЗоныТарификацииПартнеров.Ссылка ЕСТЬ NULL
	|ИЗ
	|	ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТ_РасчетЯндекс.Заказ КАК Заказ,
	|			ВТ_РасчетЯндекс.КартаТарификацииПартнеров КАК КартаТарификацииПартнеров,
	|			ЗоныТарификацииПартнеровСрезПоследних.ЗонаТарификации.НомерЗоны КАК НомерЗоны
	|		ИЗ
	|			ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗоныТарификацииПартнеров.СрезПоследних(
	|						,
	|						(Заказ, СхемаЗонТарификации) В
	|							(ВЫБРАТЬ
	|								ВТ_РасчетЯндекс.Заказ КАК Реализация,
	|								ВТ_РасчетЯндекс.СхемаЗонТарификации КАК СхемаЗонТарификации
	|							ИЗ
	|								ВТ_РасчетЯндекс КАК ВТ_РасчетЯндекс)) КАК ЗоныТарификацииПартнеровСрезПоследних
	|				ПО ВТ_РасчетЯндекс.Заказ = ЗоныТарификацииПартнеровСрезПоследних.Заказ) КАК ВЗ_ЗоныТарификацииЗаказов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыРайонов.ЗоныТарификацииПартнеров КАК ГруппыРайоновЗоныТарификацииПартнеров
	|			ПО ВЗ_ЗоныТарификацииЗаказов.НомерЗоны = ГруппыРайоновЗоныТарификацииПартнеров.НомерЗоныТарификации
	|				И ВЗ_ЗоныТарификацииЗаказов.КартаТарификацииПартнеров = ГруппыРайоновЗоныТарификацииПартнеров.Ссылка.КартаТарификацииПартнеров
	|		ПО ВТ_РасчетЯндекс.Заказ = ВЗ_ЗоныТарификацииЗаказов.Заказ";
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	//Асеев 06.04.2023 (Задача № 5005)>>>
	//ШаблонЗоныЗаказа = Новый ФиксированнаяСтруктура("OrderId,TariffZoneId");
	//
	//МассивЗонЗаказов = Новый Массив;
	//
	//Выборка = Результат.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	СтруктураЗоныЗаказа = Новый Структура(ШаблонЗоныЗаказа);
	//	СтруктураЗоныЗаказа.OrderId = Число(Выборка.Номер);
	//	СтруктураЗоныЗаказа.TariffZoneId = Выборка.КодТарифа;
	//	
	//	МассивЗонЗаказов.Добавить(СтруктураЗоныЗаказа);
	//КонецЦикла;
	//
	//ПараметрыЗапроса = Новый Структура("orderZones", МассивЗонЗаказов);
	//
	//ВидМетода = Перечисления.ВидыЗапросовWEBСервис.setOrdersZoneResult;
	//
	//ПолученныеДанные = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(ВидМетода, ПараметрыЗапроса);
	//Если ПолученныеДанные.Успешно И ЗаписыватьЗонуВРС Тогда
	
	//Асеев 11.09.2024 (Задача № 5321)>>>
	МассивЗаказовОшибкаЗоныЯндекс = Новый Массив;
	//Асеев 11.09.2024 (Задача № 5321)<<<
	
	orderZones = Новый Массив;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		//Асеев 11.09.2024 (Задача № 5321)>>>
		Если Выборка.ЗонаНеОпределена Тогда
			МассивЗаказовОшибкаЗоныЯндекс.Добавить(Выборка.Заказ);
		КонецЕсли;
		//Асеев 11.09.2024 (Задача № 5321)<<<
		
		orderZones.Добавить(Новый Структура("orderId,zoneId", Число(Выборка.Номер), Выборка.КодТарифа));
	КонецЦикла;
	
	//Асеев 11.09.2024 (Задача № 5321)>>>
	Если МассивЗаказовОшибкаЗоныЯндекс.Количество() Тогда
		МаршрутизацияЗаказовСервер.ОтправитьПисьмоОшибкаЗоныЯндекс(МассивЗаказовОшибкаЗоныЯндекс, "ТарификацияУслугСервер.УстановитьЗонуЗаказов");
	КонецЕсли;
	//Асеев 11.09.2024 (Задача № 5321)<<<
	
	ПараметрыЗапроса = Новый Структура("orderZones", orderZones);
	
	СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке("SetOrdersZone", ПараметрыЗапроса,,,, Справочники.API.IntegrationService_v2);
	Если ЗаписыватьЗонуВРС И СтруктураВозврата.Успешно И Не СтруктураВозврата.Данные.Свойство("error") Тогда
	//Асеев 06.04.2023 (Задача № 5005)<<<
		
		ТипРТУ = Тип("ДокументСсылка.РеализацияТоваровУслуг");
		
		Если ТаблицаПараметровТарифовЗаказов = Неопределено Тогда
			ДозаполнениеПараметровТарифов = Ложь;
			//Асеев 11.09.2024 (Задача № 5321)>>>
			ТаблицаПараметровТарифовЗаказов = СоздатьТаблицуПараметровТарифовЗаказов();
			//Асеев 11.09.2024 (Задача № 5321)<<<
		Иначе
			ДозаполнениеПараметровТарифов = Истина;
		КонецЕсли;
		
		Выборка.Сбросить();
		Если ДозаполнениеПараметровТарифов Тогда
			//таблица дозаполняется без записи
			Пока Выборка.Следующий() Цикл
				Если ТипЗнч(Выборка.Заказ) = ТипРТУ Тогда
					СтрокаПараметровТарифа = ТаблицаПараметровТарифовЗаказов.Найти(Выборка.Заказ, "Заказ");
					Если СтрокаПараметровТарифа = Неопределено Тогда
						СтрокаПараметровТарифа = ТаблицаПараметровТарифовЗаказов.Добавить();
						СтрокаПараметровТарифа.Заказ = Выборка.Заказ;
					КонецЕсли;
					СтрокаПараметровТарифа.ЗонаТарификации = Выборка.Зона;
					//Асеев 11.09.2024 (Задача № 5321)>>>
					СтрокаПараметровТарифа.МетодОпределенияЗоныТарификации = Выборка.МетодОпределенияЗоныТарификации;
					//Асеев 11.09.2024 (Задача № 5321)<<<
				Иначе
					ДокументЗабор = Выборка.Заказ.ПолучитьОбъект();
					ДокументЗабор.ЗонаТарификации = Выборка.Зона;
					ДокументЗабор.ОбменДанными.Загрузка = Истина;
					ДокументЗабор.Записать();
				КонецЕсли;
			КонецЦикла;
		Иначе
			//таблица заполняется и записывается
			Пока Выборка.Следующий() Цикл
				Если ТипЗнч(Выборка.Заказ) = ТипРТУ Тогда
					СтрокаПараметровТарифа = ТаблицаПараметровТарифовЗаказов.Добавить();
					СтрокаПараметровТарифа.Заказ = Выборка.Заказ;
					СтрокаПараметровТарифа.ЗонаТарификации = Выборка.Зона;
					//Асеев 11.09.2024 (Задача № 5321)>>>
					СтрокаПараметровТарифа.МетодОпределенияЗоныТарификации = Выборка.МетодОпределенияЗоныТарификации;
					//Асеев 11.09.2024 (Задача № 5321)<<<
				Иначе
					ДокументЗабор = Выборка.Заказ.ПолучитьОбъект();
					ДокументЗабор.ЗонаТарификации = Выборка.Зона;
					ДокументЗабор.ОбменДанными.Загрузка = Истина;
					ДокументЗабор.Записать();				
				КонецЕсли;
			КонецЦикла;
			Если ТаблицаПараметровТарифовЗаказов.Количество() Тогда
				ЗаписатьПараметрыТарифаЗаказа(ТаблицаПараметровТарифовЗаказов);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
//Асеев 14.10.2022 (Задача № 4913)<<<

//Асеев 04.09.2024 (Задача № 5317)>>>
Процедура ЗагрузкаЗонТарификацииПартнеровЗаказов(МассивЗаказовЗаборов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказы", МассивЗаказовЗаборов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Номер КАК НомерЗаказа,
	|	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Широта КАК Широта,
	|	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Долгота КАК Долгота,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров.ИдентификаторКарты КАК ИдентификаторКарты
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО (РеализацияТоваровУслуг.Ссылка В (&Заказы))
	|			И (РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров <> ЗНАЧЕНИЕ(Справочник.КартыКонструктораКарт.ПустаяСсылка))
	|			И (РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров.ИдентификаторКарты <> """")
	|			И РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|			И (новаМестнаяДоставка.ТочкаПрибытия.Адрес.Широта <> 0)
	|			И (новаМестнаяДоставка.ТочкаПрибытия.Адрес.Долгота <> 0)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АктуальныеСхемыЗонКартТарификацииПартнеров.СрезПоследних КАК АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних
	|		ПО РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров = АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.КартаКонструктораКарт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.ТочкаДоставки.Адрес.Широта,
	|	ЗаборТовара.ТочкаДоставки.Адрес.Долгота,
	|	ЗаборТовара.ТарифнаяСетка.КартаТарификацииПартнеров.ИдентификаторКарты
	|ИЗ
	|	Документ.ЗаборТовара КАК ЗаборТовара
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АктуальныеСхемыЗонКартТарификацииПартнеров.СрезПоследних КАК АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних
	|		ПО (ЗаборТовара.Ссылка В (&Заказы))
	|			И (ЗаборТовара.ТарифнаяСетка.КартаТарификацииПартнеров <> ЗНАЧЕНИЕ(Справочник.КартыКонструктораКарт.ПустаяСсылка))
	|			И (ЗаборТовара.ТарифнаяСетка.КартаТарификацииПартнеров.ИдентификаторКарты <> """")
	|			И (ЗаборТовара.ТочкаДоставки.Адрес.Широта <> 0)
	|			И (ЗаборТовара.ТочкаДоставки.Адрес.Долгота <> 0)
	|			И ЗаборТовара.ТарифнаяСетка.КартаТарификацииПартнеров = АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.КартаКонструктораКарт";
	
	ОбработатьЗоныТарификацииПартнеровЗаказов(Запрос);
	
КонецПроцедуры

Процедура ПривязкаЗонТарификацииПартнеров(КодТерминала, ДатаПривязки) Экспорт
	
	ДатаПривязкиЗавтра = ДатаПривязки + 86400;
	
	Запрос= Новый Запрос;
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ДатаПривязкиЗавтра));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ДатаПривязкиЗавтра));
	Запрос.УстановитьПараметр("КодТерминала", КодТерминала);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|	РеализацияТоваровУслуг.Номер КАК НомерЗаказа,
	|	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Широта КАК Широта,
	|	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Долгота КАК Долгота,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров.ИдентификаторКарты КАК ИдентификаторКарты,
	|	АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.СхемаЗонТарификацииПартнеров КАК СхемаЗонТарификации
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО (РеализацияТоваровУслуг.Дата МЕЖДУ &НачалоДня И &КонецДня)
	|			И (РеализацияТоваровУслуг.ТерминалДоставки.Код = &КодТерминала)
	|			И (РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров <> ЗНАЧЕНИЕ(Справочник.КартыКонструктораКарт.ПустаяСсылка))
	|			И (РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров.ИдентификаторКарты <> """")
	|			И РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|			И (новаМестнаяДоставка.ТочкаПрибытия.Адрес.Широта <> 0)
	|			И (новаМестнаяДоставка.ТочкаПрибытия.Адрес.Долгота <> 0)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АктуальныеСхемыЗонКартТарификацииПартнеров.СрезПоследних КАК АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних
	|		ПО РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КартаТарификацииПартнеров = АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.КартаКонструктораКарт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаборТовара.Ссылка,
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.ТочкаДоставки.Адрес.Широта,
	|	ЗаборТовара.ТочкаДоставки.Адрес.Долгота,
	|	ЗаборТовара.ТарифнаяСетка.КартаТарификацииПартнеров.ИдентификаторКарты,
	|	АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.СхемаЗонТарификацииПартнеров
	|ИЗ
	|	Документ.ЗаборТовара КАК ЗаборТовара
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АктуальныеСхемыЗонКартТарификацииПартнеров.СрезПоследних КАК АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних
	|		ПО (ЗаборТовара.Дата МЕЖДУ &НачалоДня И &КонецДня)
	|			И (ЗаборТовара.ТерминалДоставки.Код = &КодТерминала)
	|			И (ЗаборТовара.ТарифнаяСетка.КартаТарификацииПартнеров <> ЗНАЧЕНИЕ(Справочник.КартыКонструктораКарт.ПустаяСсылка))
	|			И (ЗаборТовара.ТарифнаяСетка.КартаТарификацииПартнеров.ИдентификаторКарты <> """")
	|			И (ЗаборТовара.ТочкаДоставки.Адрес.Широта <> 0)
	|			И (ЗаборТовара.ТочкаДоставки.Адрес.Долгота <> 0)
	|			И ЗаборТовара.ТарифнаяСетка.КартаТарификацииПартнеров = АктуальныеСхемыЗонКартТарификацииПартнеровСрезПоследних.КартаКонструктораКарт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.НомерЗаказа КАК НомерЗаказа,
	|	ВТ_Заказы.Широта КАК Широта,
	|	ВТ_Заказы.Долгота КАК Долгота,
	|	ВТ_Заказы.ИдентификаторКарты КАК ИдентификаторКарты
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗоныТарификацииПартнеров.Заказ КАК Заказ,
	|			ЗоныТарификацииПартнеров.СхемаЗонТарификации КАК СхемаЗонТарификации
	|		ИЗ
	|			РегистрСведений.ЗоныТарификацииПартнеров КАК ЗоныТарификацииПартнеров
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					МАКСИМУМ(ЗоныТарификацииПартнеров.Период) КАК Период,
	|					ЗоныТарификацииПартнеров.Заказ КАК Заказ
	|				ИЗ
	|					РегистрСведений.ЗоныТарификацииПартнеров КАК ЗоныТарификацииПартнеров
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|						ПО ЗоныТарификацииПартнеров.Заказ = ВТ_Заказы.Заказ
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ЗоныТарификацииПартнеров.Заказ) КАК ВЗ_МаксПериодыЗон
	|				ПО ЗоныТарификацииПартнеров.Период = ВЗ_МаксПериодыЗон.Период
	|					И ЗоныТарификацииПартнеров.Заказ = ВЗ_МаксПериодыЗон.Заказ) КАК ВЗ_ЗоныТарификацииСтарые
	|		ПО ВТ_Заказы.Заказ = ВЗ_ЗоныТарификацииСтарые.Заказ
	|			И ВТ_Заказы.СхемаЗонТарификации = ВЗ_ЗоныТарификацииСтарые.СхемаЗонТарификации
	|ГДЕ
	|	ВЗ_ЗоныТарификацииСтарые.Заказ ЕСТЬ NULL";
	
	ОбработатьЗоныТарификацииПартнеровЗаказов(Запрос);
	
КонецПроцедуры

Процедура ОбработатьЗоныТарификацииПартнеровЗаказов(Запрос) Экспорт
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонPoint = Новый ФиксированнаяСтруктура("Id,Latitude,Longitude", 1);
	ШаблонДанные = Новый ФиксированнаяСтруктура("OrderId,Point,ConstructorId");
	
	МассивДанных = Новый Массив;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураPoint = Новый Структура(ШаблонPoint);
		СтруктураPoint.Latitude = Выборка.Широта;
		СтруктураPoint.Longitude = Выборка.Долгота;
		
		СтруктураДанные = Новый Структура(ШаблонДанные);
		СтруктураДанные.OrderId = Число(Выборка.НомерЗаказа);
		СтруктураДанные.Point = СтруктураPoint;
		СтруктураДанные.ConstructorId = Выборка.ИдентификаторКарты;
		
		МассивДанных.Добавить(СтруктураДанные);
	КонецЦикла;
	
	ДатаЗапроса = ТекущаяДата();
	
	ПараметрыЗапроса = Новый Структура("actualDate,ordersLocations,disableUpdateCoords", ДатаЗапроса, МассивДанных, Истина);
	
	ВидМетода = Перечисления.ВидыЗапросовWEBСервис.GetPolygonsForOrdersResult;
	
	ПолученныеДанные = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(ВидМетода, ПараметрыЗапроса);
	Если Не ПолученныеДанные.Успешно Тогда
		Возврат;
	КонецЕсли;
	
	Данные = ПолученныеДанные.Данные.GetPolygonsForOrdersResult.Data;
	
	ОписаниеТиповЧисло10 = ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10);
	ОписаниеТиповСтрока10 = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(10);
	
	ТаблицаЗон = Новый ТаблицаЗначений;
	КолонкиТаблицы = ТаблицаЗон.Колонки;
	КолонкиТаблицы.Добавить("НомерЗаказа", ОписаниеТиповСтрока10);
	КолонкиТаблицы.Добавить("НомерЗоны", ОписаниеТиповЧисло10);
	КолонкиТаблицы.Добавить("НомерСхемы", ОписаниеТиповЧисло10);
	
	Для Каждого ЭлементДанных Из Данные Цикл
		Если ЭлементДанных.Polygons <> Неопределено И ЭлементДанных.Polygons.Количество() Тогда
			СтрокаЗоны = ТаблицаЗон.Добавить();
			СтрокаЗоны.НомерЗаказа = Формат(ЭлементДанных.OrderLocation.OrderId, "ЧГ=");
			СтрокаЗоны.НомерЗоны = ЭлементДанных.Polygons[0].Id;
			СтрокаЗоны.НомерСхемы = ЭлементДанных.VersionId;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ТаблицаЗон.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаЗон", ТаблицаЗон);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗон.НомерЗаказа КАК НомерЗаказа,
	|	ТаблицаЗон.НомерЗоны КАК НомерЗоны,
	|	ТаблицаЗон.НомерСхемы КАК НомерСхемы
	|ПОМЕСТИТЬ ВТ_Зоны
	|ИЗ
	|	&ТаблицаЗон КАК ТаблицаЗон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Ссылка, ЗаборТовара.Ссылка) КАК Заказ,
	|	СхемыЗонТарификацииПартнеров.Ссылка КАК СхемаЗонТарификации,
	|	ЗоныТарификацииПартнеров.Ссылка КАК ЗонаТарификации
	|ПОМЕСТИТЬ ВТ_ЗоныТарификацииНовые
	|ИЗ
	|	ВТ_Зоны КАК ВТ_Зоны
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЗоныТарификацииПартнеров КАК ЗоныТарификацииПартнеров
	|		ПО ВТ_Зоны.НомерЗоны = ЗоныТарификацииПартнеров.id_Админка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СхемыЗонТарификацииПартнеров КАК СхемыЗонТарификацииПартнеров
	|		ПО ВТ_Зоны.НомерСхемы = СхемыЗонТарификацииПартнеров.id_Админка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ВТ_Зоны.НомерЗаказа = РеализацияТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	|		ПО ВТ_Зоны.НомерЗаказа = ЗаборТовара.Номер
	|ГДЕ
	|	НЕ ЕСТЬNULL(РеализацияТоваровУслуг.Ссылка, ЗаборТовара.Ссылка) ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗоныТарификацииНовые.Заказ КАК Заказ,
	|	ВТ_ЗоныТарификацииНовые.СхемаЗонТарификации КАК СхемаЗонТарификации,
	|	ВТ_ЗоныТарификацииНовые.ЗонаТарификации КАК ЗонаТарификации
	|ИЗ
	|	ВТ_ЗоныТарификацииНовые КАК ВТ_ЗоныТарификацииНовые
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗоныТарификацииПартнеров.Заказ КАК Заказ,
	|			ЗоныТарификацииПартнеров.СхемаЗонТарификации КАК СхемаЗонТарификации,
	|			ЗоныТарификацииПартнеров.ЗонаТарификации КАК ЗонаТарификации
	|		ИЗ
	|			РегистрСведений.ЗоныТарификацииПартнеров КАК ЗоныТарификацииПартнеров
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ЗоныТарификацииПартнеров.Заказ КАК Заказ,
	|					МАКСИМУМ(ЗоныТарификацииПартнеров.Период) КАК Период
	|				ИЗ
	|					ВТ_ЗоныТарификацииНовые КАК ВТ_ЗоныТарификацииНовые
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗоныТарификацииПартнеров КАК ЗоныТарификацииПартнеров
	|						ПО ВТ_ЗоныТарификацииНовые.Заказ = ЗоныТарификацииПартнеров.Заказ
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ЗоныТарификацииПартнеров.Заказ) КАК ВЗ_МаксПериодыЗон
	|				ПО ЗоныТарификацииПартнеров.Период = ВЗ_МаксПериодыЗон.Период
	|					И ЗоныТарификацииПартнеров.Заказ = ВЗ_МаксПериодыЗон.Заказ) КАК ВЗ_ЗоныТарификацииСтарые
	|		ПО ВТ_ЗоныТарификацииНовые.Заказ = ВЗ_ЗоныТарификацииСтарые.Заказ
	|			И ВТ_ЗоныТарификацииНовые.СхемаЗонТарификации = ВЗ_ЗоныТарификацииСтарые.СхемаЗонТарификации
	|			И ВТ_ЗоныТарификацииНовые.ЗонаТарификации = ВЗ_ЗоныТарификацииСтарые.ЗонаТарификации
	|ГДЕ
	|	ВЗ_ЗоныТарификацииСтарые.Заказ ЕСТЬ NULL";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ДатаЗаписи = ТекущаяДата();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаписьРегистра = РегистрыСведений.ЗоныТарификацииПартнеров.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка);
		ЗаписьРегистра.Период = ДатаЗаписи;
		ЗаписьРегистра.Записать();
	КонецЦикла;
	
КонецПроцедуры
//Асеев 04.09.2024 (Задача № 5317)<<<

Процедура РегламентРегулярноеЗакрытиеЗаказовПоРейсам(КодРегиона) Экспорт
	
КонецПроцедуры	
