//CeHbKA 31.07.2019 #3319 

Процедура ЗаписатьВыбранныйФайлВБД(ИмяФайла, РасширениеФайла, АдресВХ, Документ, ТипДокумента, МассивЗаказов = Неопределено, ИнтернетМагазин = Неопределено, ФайлБезЗаказов = Ложь) Экспорт
	
	//НовСпр = Справочники.ПрикрепленныеФайлы.СоздатьЭлемент();
	//НовСпр.РасширениеДокумента = РасширениеФайла;
	//НовСпр.ТипДокумента = ТипДокумента;
	//НовСпр.ДатаСоздания = ТекущаяДата();
	//НовСпр.Данные = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресВХ));
	//НовСпр.Наименование = СокрЛП(СтрЗаменить(ИмяФайла, "."+РасширениеФайла, ""));
	//НовСпр.Пользователь = глЗначениеПеременной("глТекущийПользователь");
	//НовСпр.Записать();
	
	//CeHbKA #3931 18.05.2020
	НовСпр = Справочники.ПрикрепленныеФайлы.ПустаяСсылка();
	//CeHbKA #3931 18.05.2020
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		МассивЗаказов = ПолучитьМассивЗаказовПоВозвратуПоставщику(Документ);	
	КонецЕсли; 
		
	//CeHbKA #3749 10.04.2020
	ДД = ПолучитьИзВременногоХранилища(АдресВХ);
	ИдентификаторВнешнихДанных = ВнешниеДанныеСервер.ЗаписатьДанныеВоВнешнееХранилищеДанных(ИмяФайла, РасширениеФайла, , ДД, Документ, ТипДокумента,, ФайлБезЗаказов);
	//ИдентификаторВнешнихДанных = 1010101;//тест
	//CeHbKA #3749 10.04.2020
	
	Если МассивЗаказов <> Неопределено Тогда
		
		Для каждого Заказ Из МассивЗаказов Цикл			
			
			Если ИнтернетМагазин <> Неопределено Тогда
				ДобавитьЗаписьВРегистрПрикрепленныеФайлы(Документ, НовСпр.Ссылка, Заказ, ИнтернетМагазин, ИдентификаторВнешнихДанных);							
			Иначе
				ДобавитьЗаписьВРегистрПрикрепленныеФайлы(Документ, НовСпр.Ссылка, Заказ, Заказ.ВладелецТовара, ИдентификаторВнешнихДанных);			
			КонецЕсли;
			
		КонецЦикла; 	
				
	ИначеЕсли ИнтернетМагазин <> Неопределено Тогда
		ДобавитьЗаписьВРегистрПрикрепленныеФайлы(Документ, НовСпр.Ссылка,, ИнтернетМагазин, ИдентификаторВнешнихДанных);							
	Иначе
		ДобавитьЗаписьВРегистрПрикрепленныеФайлы(Документ, НовСпр.Ссылка,,,ИдентификаторВнешнихДанных );									
	КонецЕсли; 
		
	ДобавитьЗаписьВРегистрСостоянияПрикрепленныхФайлов(НовСпр.Ссылка, Перечисления.СостоянияПрикрепленныхФайлов.ФайлДобавлен, ИдентификаторВнешнихДанных);
		
КонецПроцедуры // ()

Процедура ДобавитьЗаписьВРегистрПрикрепленныеФайлы(Документ, Данные, Заказ = Неопределено, ИнтернетМагазин = Неопределено, ИдентификаторВнешнихДанных = 0) Экспорт

	Набор = РегистрыСведений.ПрикрепленныеФайлы.СоздатьНаборЗаписей();
	
	Набор.Отбор.Документ.Установить(Документ);
	Набор.Отбор.Данные.Установить(Данные);
	Набор.Отбор.Заказ.Установить(Заказ);
	Набор.Отбор.ИнтернетМагазин.Установить(ИнтернетМагазин);
		
	Нов = Набор.Добавить();
	Нов.Данные = Данные;
	Нов.Документ = Документ;
	
	Нов.Заказ = Заказ;
	Нов.ИнтернетМагазин = ИнтернетМагазин;
	
	//CeHbKA #3931 21.04.2020
	Нов.ИдентификаторВнешнихДанных = ИдентификаторВнешнихДанных;
	//CeHbKA #3931 21.04.2020
	
	Попытка 
		Набор.Записать(Ложь);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		lem.ОтправитьНормальноеСообщениеАдминам("Ошибка записи документа в РС.ПрикрепленныеФайлы", ТекстОшибки);
	КонецПопытки;
	
КонецПроцедуры


Процедура ДобавитьЗаписьВРегистрПрикрепленныеФайлы_ЗаборТовара(Документ, Данные, Заказ = Неопределено, ИнтернетМагазин = Неопределено, ИдентификаторВнешнихДанных = 0) Экспорт

	Набор = РегистрыСведений.ПрикрепленныеФайлыЗаборы.СоздатьНаборЗаписей();
	
	Набор.Отбор.Документ.Установить(Документ);
	Набор.Отбор.Данные.Установить(Данные);
	Набор.Отбор.Заказ.Установить(Заказ);
	Набор.Отбор.ИнтернетМагазин.Установить(ИнтернетМагазин);
		
	Нов = Набор.Добавить();
	Нов.Данные = Данные;
	Нов.Документ = Документ;
	
	Нов.Заказ = Заказ;
	Нов.ИнтернетМагазин = ИнтернетМагазин;
	
	//CeHbKA #3931 21.04.2020
	Нов.ИдентификаторВнешнихДанных = ИдентификаторВнешнихДанных;
	//CeHbKA #3931 21.04.2020
	
	Попытка 
		Набор.Записать(Ложь);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		lem.ОтправитьНормальноеСообщениеАдминам("Ошибка записи документа в РС.ПрикрепленныеФайлыЗаборы", ТекстОшибки);
	КонецПопытки;
	
КонецПроцедуры

Процедура ДобавитьЗаписьВРегистрСостоянияПрикрепленныхФайлов(ПрикрепленныйФайл, СостояниеФайла, ИдентификаторВнешнихДанных = 0, ИдентификаторФайлаНаСервереАдминки = 0) Экспорт 

	Набор = РегистрыСведений.СостоянияПрикрепленныхФайлов.СоздатьНаборЗаписей();
	
	Если ЗначениеЗаполнено(ПрикрепленныйФайл) Тогда
		Набор.Отбор.ПрикрепленныйФайл.Установить(ПрикрепленныйФайл);	
	КонецЕсли;
	
	Если ИдентификаторВнешнихДанных <> 0 Тогда
		Набор.Отбор.ИдентификаторВнешнихДанных.Установить(ИдентификаторВнешнихДанных);	
	КонецЕсли;
		
	Набор.Прочитать();
		
	Запись								= Набор.Добавить();
	Запись.Период						= ТекущаяДата();
	Запись.ПрикрепленныйФайл			= ПрикрепленныйФайл;
	Запись.Пользователь					= ПараметрыСеанса.ТекущийПользователь;
	Запись.СостояниеФайла				= СостояниеФайла;
	Запись.ИдентификаторВнешнихДанных	= ИдентификаторВнешнихДанных;
	Запись.ИдентификаторФайлаНаСервереАдминки = ИдентификаторФайлаНаСервереАдминки;
	
	Попытка
		Набор.Записать();	
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Сообщить(ТекстОшибки);
	КонецПопытки; 

КонецПроцедуры
 
Процедура ПереместитьФайлНаСервере(ИмяФайлаИсточника, ИмяФайлаПриемника) Экспорт

	ПереместитьФайл(ИмяФайлаИсточника, ИмяФайлаПриемника);	

КонецПроцедуры

Функция ПолучитьМассивЗаказовПоВозвратуПоставщику(ДокументСсылка)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратТоваровПоставщикуТовары.Реализация КАК Заказ
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (ВозвратТоваровПоставщикуТовары.Ссылка = &ДокументСсылка)
	|			И ВозвратТоваровПоставщикуТовары.Реализация = РеализацияТоваровУслуг.Ссылка";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Результат.Выгрузить().ВыгрузитьКолонку("Заказ");
	КонецЕсли;
	
КонецФункции // ()
 
//CeHbKA 31.07.2019 #3319 

// Задача № 3435 
Функция СохранитьФайлНаСерверДокументов(ПрикрепленныйФайл, ИнтернетМагазин = Неопределено, Документ = Неопределено) Экспорт
	
	ПараметрыФайла = Новый Структура("FileName, FileExt, FileData, FileTypeId, DocumentNumber, DocumentDate, InternetShopId, OrgId, Who");
		
	ДвоичныеДанныеФайла = ПрикрепленныйФайл.Данные.Получить();
	FileData = base64Строка(ДвоичныеДанныеФайла);
	FileData = СтрЗаменить(FileData, Символы.ПС, "");
	FileData = СтрЗаменить(FileData, Символы.ВК, "");
	
	ПараметрыФайла.FileName 	= СокрЛП(ПрикрепленныйФайл.Наименование);
	ПараметрыФайла.FileExt 		= СокрЛП(ПрикрепленныйФайл.РасширениеДокумента);
	ПараметрыФайла.FileData 	= FileData;
	ПараметрыФайла.FileTypeId 	= Формат(ПрикрепленныйФайл.ТипДокумента.Код, "ЧГ=");
	ПараметрыФайла.Who 			= СокрЛП(ПрикрепленныйФайл.Пользователь.Наименование);
	ПараметрыФайла.OrgId 		= "2";
	
	Если Не ИнтернетМагазин = Неопределено Тогда
		ПараметрыФайла.InternetShopId = СокрЛП(СтрЗаменить(ИнтернетМагазин.Код,"Shop_",""));
	КонецЕсли;
	
	Если Не Документ = Неопределено Тогда
		ПараметрыФайла.DocumentNumber = СокрЛП(Документ.Номер);
		ПараметрыФайла.DocumentDate = Документ.Дата;
	КонецЕсли;
	
	ЗапросСохраненияФайла = Новый Структура("file", ПараметрыФайла);
	
	ФайлДляКонтроля = Неопределено;
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		ФайлДляКонтроля = "D:\tmp\SaveFileResult_" + ПрикрепленныйФайл.Наименование + ".json";
	КонецЕсли;
	
	Возврат ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SaveFileResult,  ЗапросСохраненияФайла, ФайлДляКонтроля);
	
КонецФункции

Функция ПометитьНаУдалениеФайлНаСервереДокументов(ИдФайла) Экспорт
	
	ИдФайла = СтрЗаменить(Строка(ИдФайла), Символы.НПП,"");
	
	ЗапросПометкиУдаления = Новый Структура("fileId", Строка(ИдФайла));
	
	ФайлДляКонтроля = Неопределено;
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		ФайлДляКонтроля = "D:\tmp\DeleteFileResult_" + Строка(ИдФайла) + ".json";
	КонецЕсли;
	
	Возврат ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.DeleteFileResult,  ЗапросПометкиУдаления, ФайлДляКонтроля);
	
КонецФункции
// Задача № 3435

//CeHbKA 12.09.2019 #3433
Процедура ВыгрузитьУдаленныеФайлыНаСервер(КонецВыборкиПоУдаленнымФайлам) Экспорт
	
	НачалоВыборкиПоУдаленнымФайлам = ПолучитьЗначениеНачалаВыборкиПоУдаленнымФайлам();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостоянияПрикрепленныхФайлов.Период КАК Период,
		|	СостоянияПрикрепленныхФайлов.ПрикрепленныйФайл КАК ПрикрепленныйФайл,
		|	СостоянияПрикрепленныхФайлов.СостояниеФайла КАК СостояниеФайла,
		|	СостоянияПрикрепленныхФайлов.Пользователь КАК Пользователь,
		|	СостоянияПрикрепленныхФайлов.ПрикрепленныйФайл.IDНаСервере КАК IDНаСервере
		|ИЗ
		|	РегистрСведений.СостоянияПрикрепленныхФайлов КАК СостоянияПрикрепленныхФайлов
		|ГДЕ
		|	СостоянияПрикрепленныхФайлов.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И СостоянияПрикрепленныхФайлов.ПрикрепленныйФайл.ПереданНаСервер = ИСТИНА
		|	И СостоянияПрикрепленныхФайлов.СостояниеФайла = ЗНАЧЕНИЕ(Перечисление.СостоянияПрикрепленныхФайлов.ФайлУдален)";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоВыборкиПоУдаленнымФайлам);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецВыборкиПоУдаленнымФайлам);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ИдФайла = ВыборкаДетальныеЗаписи.IDНаСервере;
		
		Если ИдФайла = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		РезультатУдаления = ПометитьНаУдалениеФайлНаСервереДокументов(ИдФайла);
		
		Если НЕ РезультатУдаления.Успешно Тогда
			ЗаписьЖурналаРегистрации("Удаление прикрепл. файлов на сервере",,,ВыборкаДетальныеЗаписи.ПрикрепленныйФайл,"Не удалось удалить запись на сервере",);
		КонецЕсли; 
		
		Набор = РегистрыСведений.ПараметрыРегламентныхЗаданий.СоздатьНаборЗаписей();
		Набор.Отбор.Ключ.Установить("ВыгрузкаФайловНаСерверДокументов");
		
		Набор.Прочитать();
		Набор.Очистить();
		
		Запись			= Набор.Добавить();
		Запись.Ключ		= "ВыгрузкаФайловНаСерверДокументов";
		Запись.Значение = КонецВыборкиПоУдаленнымФайлам;
		
		Набор.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьЗначениеНачалаВыборкиПоУдаленнымФайлам() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыРегламентныхЗаданий.Ключ КАК Ключ,
		|	ПараметрыРегламентныхЗаданий.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.ПараметрыРегламентныхЗаданий КАК ПараметрыРегламентныхЗаданий
		|ГДЕ
		|	ПараметрыРегламентныхЗаданий.Ключ = ""ВыгрузкаФайловНаСерверДокументов""";
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат Дата(ВыборкаДетальныеЗаписи.Значение);
	КонецЦикла;
	
	Возврат Дата(1900, 1, 1);
	
КонецФункции // ()
//CeHbKA 12.09.2019 #3433 

//CeHbKA #3931 27.04.2020
Функция СохранитьФайлНаСерверДокументов_Новая(ИмяФайла, РасширениеФайла, Данные, ТипДокументаКод, ИнтернетМагазин = Неопределено, Документ = Неопределено) Экспорт
	
	ПараметрыФайла = Новый Структура("FileName, FileExt, FileData, FileTypeId, DocumentNumber, DocumentDate, InternetShopId, OrgId, Who");
		
	ДвоичныеДанныеФайла = Данные;
	FileData = base64Строка(ДвоичныеДанныеФайла);
	FileData = СтрЗаменить(FileData, Символы.ПС, "");
	FileData = СтрЗаменить(FileData, Символы.ВК, "");
	
	ПараметрыФайла.FileName 	= СокрЛП(ИмяФайла);
	ПараметрыФайла.FileExt 		= СокрЛП(РасширениеФайла);
	ПараметрыФайла.FileData 	= FileData;
	ПараметрыФайла.FileTypeId 	= Формат(ТипДокументаКод, "ЧГ=");
	ПараметрыФайла.Who 			= СокрЛП(ПараметрыСеанса.ТекущийПользователь);
	ПараметрыФайла.OrgId 		= "2";
	
	Если Не ИнтернетМагазин = Неопределено Тогда
		ПараметрыФайла.InternetShopId = СокрЛП(СтрЗаменить(ИнтернетМагазин.Код,"Shop_",""));
	КонецЕсли;
	
	Если Не Документ = Неопределено Тогда
		ПараметрыФайла.DocumentNumber = СокрЛП(Документ.Номер);
		ПараметрыФайла.DocumentDate = Документ.Дата;
	КонецЕсли;
	
	ЗапросСохраненияФайла = Новый Структура("file", ПараметрыФайла);
	
	ФайлДляКонтроля = Неопределено;
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		ФайлДляКонтроля = "D:\tmp\SaveFileResult_" + ИмяФайла + ".json";
	КонецЕсли;
	
	Возврат ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SaveFileResult,  ЗапросСохраненияФайла, ФайлДляКонтроля);
	
КонецФункции

Процедура ВыгрузитьУдаленныеФайлыНаСервер_Новая(КонецВыборкиПоУдаленнымФайлам) Экспорт
	
	НачалоВыборкиПоУдаленнымФайлам = ПолучитьЗначениеНачалаВыборкиПоУдаленнымФайлам();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СостоянияПрикрепленныхФайлов.Период КАК Период,
	|	СостоянияПрикрепленныхФайлов.СостояниеФайла КАК СостояниеФайла,
	|	СостоянияПрикрепленныхФайлов.Пользователь КАК Пользователь,
	|	СостоянияПрикрепленныхФайлов.ИдентификаторФайлаНаСервереАдминки КАК IDНаСервере,
	|	СостоянияПрикрепленныхФайлов.ИдентификаторВнешнихДанных КАК ИдентификаторВнешнихДанных
	|ПОМЕСТИТЬ ВТ_УдалённыеФайлы
	|ИЗ
	|	РегистрСведений.СостоянияПрикрепленныхФайлов КАК СостоянияПрикрепленныхФайлов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрикрепленныеФайлы КАК ПрикрепленныеФайлы
	|		ПО СостоянияПрикрепленныхФайлов.ИдентификаторВнешнихДанных = ПрикрепленныеФайлы.ИдентификаторВнешнихДанных
	|			И (ПрикрепленныеФайлы.Заказ = ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка))
	|ГДЕ
	|	СостоянияПрикрепленныхФайлов.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И СостоянияПрикрепленныхФайлов.СостояниеФайла = ЗНАЧЕНИЕ(Перечисление.СостоянияПрикрепленныхФайлов.ФайлУдален)
	|	И СостоянияПрикрепленныхФайлов.ИдентификаторВнешнихДанных <> 0
	|	И ПрикрепленныеФайлы.ИдентификаторВнешнихДанных ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УдалённыеФайлы.Период КАК Период,
	|	ВТ_УдалённыеФайлы.СостояниеФайла КАК СостояниеФайла,
	|	ВТ_УдалённыеФайлы.Пользователь КАК Пользователь,
	|	ВТ_УдалённыеФайлы.IDНаСервере КАК IDНаСервере,
	|	ВТ_УдалённыеФайлы.ИдентификаторВнешнихДанных КАК ИдентификаторВнешнихДанных,
	|	ЕСТЬNULL(СостоянияПрикрепленныхФайловСрезПоследних.СостояниеФайла, ЗНАЧЕНИЕ(Перечисление.СостоянияПрикрепленныхФайлов.ПустаяСсылка)) КАК СостояниеФайлаВыгружен
	|ИЗ
	|	ВТ_УдалённыеФайлы КАК ВТ_УдалённыеФайлы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПрикрепленныхФайлов.СрезПоследних(
	|				&ДатаОкончания,
	|				ИдентификаторВнешнихДанных В
	|						(ВЫБРАТЬ
	|							ВТ_УдалённыеФайлы.ИдентификаторВнешнихДанных КАК ИдентификаторВнешнихДанных
	|						ИЗ
	|							ВТ_УдалённыеФайлы КАК ВТ_УдалённыеФайлы)
	|					И СостояниеФайла = ЗНАЧЕНИЕ(Перечисление.СостоянияПрикрепленныхФайлов.ФайлВыгруженНаСерверДокументов)) КАК СостоянияПрикрепленныхФайловСрезПоследних
	|		ПО ВТ_УдалённыеФайлы.ИдентификаторВнешнихДанных = СостоянияПрикрепленныхФайловСрезПоследних.ИдентификаторВнешнихДанных";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоВыборкиПоУдаленнымФайлам);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецВыборкиПоУдаленнымФайлам);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.СостояниеФайлаВыгружен.Пустая() Тогда
			Продолжить;
		КонецЕсли;
			
		ИдФайла = ВыборкаДетальныеЗаписи.IDНаСервере;
		
		Если ИдФайла = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		РезультатУдаления = ПометитьНаУдалениеФайлНаСервереДокументов(ИдФайла);
		
		Если НЕ РезультатУдаления.Успешно Тогда
			ЗаписьЖурналаРегистрации("Удаление прикрепл. файлов на сервере",,,ВыборкаДетальныеЗаписи.ИдентификаторВнешнихДанных,"Не удалось удалить запись на сервере",);
		КонецЕсли; 
		
		Набор = РегистрыСведений.ПараметрыРегламентныхЗаданий.СоздатьНаборЗаписей();
		Набор.Отбор.Ключ.Установить("ВыгрузкаФайловНаСерверДокументов");
		
		Набор.Прочитать();
		Набор.Очистить();
		
		Запись			= Набор.Добавить();
		Запись.Ключ		= "ВыгрузкаФайловНаСерверДокументов";
		Запись.Значение = КонецВыборкиПоУдаленнымФайлам;
		
		Набор.Записать();
		
	КонецЦикла;
	
КонецПроцедуры
//CeHbKA #3931 27.04.2020

Процедура ЗаписатьВыбранныйФайлМПВБД(ИмяФайла, РасширениеФайла, Данные, ТипДокумента, Заказ, ИДФайлаМП, УзелОбмена, ДатаСоздания, ТипЗаказа = Неопределено) Экспорт 
	
	Если ТипЗаказа = Неопределено Тогда
		ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
	КонецеСли;	
	
	//НовСпр = Справочники.ПрикрепленныеФайлы.СоздатьЭлемент();
	//НовСпр.РасширениеДокумента = РасширениеФайла;
	//НовСпр.ТипДокумента = ТипДокумента;
	//НовСпр.ДатаСоздания = ДатаСоздания;
	//НовСпр.Данные = Данные;
	//НовСпр.Наименование = СокрЛП(СтрЗаменить(ИмяФайла, "."+РасширениеФайла, ""));
	//НовСпр.Пользователь = глЗначениеПеременной("глТекущийПользователь");
	//НовСпр.КодМП = ИДФайлаМП;
	//НовСпр.УзелМП = УзелОбмена;
	//НовСпр.Записать();
	
	//CeHbKA #3931 18.05.2020
	НовСпр = Справочники.ПрикрепленныеФайлы.ПустаяСсылка();
	//CeHbKA #3931 18.05.2020
	
	//CeHbKA #3749 13.04.2020
	ДД = Данные.Получить();
	ИдентификаторВнешнихДанных = ВнешниеДанныеСервер.ЗаписатьДанныеВоВнешнееХранилищеДанных(ИмяФайла, РасширениеФайла, , ДД, , ТипДокумента, УзелОбмена); 	
	//CeHbKA #3749 13.04.2020
	
	Если ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Тогда
		ДобавитьЗаписьВРегистрПрикрепленныеФайлы(Заказ, НовСпр.Ссылка, Заказ, Заказ.ВладелецТовара, ИдентификаторВнешнихДанных);			
	ИначеЕсли ТипЗаказа = Перечисления.ТипыЗаказов.Забор Тогда
		ДобавитьЗаписьВРегистрПрикрепленныеФайлы_ЗаборТовара(Заказ, НовСпр.Ссылка, Заказ, Заказ.Контрагент, ИдентификаторВнешнихДанных);			
	КонецеСли;	
			
	
	ДобавитьЗаписьВРегистрСостоянияПрикрепленныхФайлов(НовСпр.Ссылка, Перечисления.СостоянияПрикрепленныхФайлов.ФайлДобавлен, ИдентификаторВнешнихДанных);
		
КонецПроцедуры 


//CeHbKA 05.08.2020
Функция ПолучитьСписокЗначенийПрикрепленныеФайлы(ДокументСсылка, СоответствиеВнешнихИдентификаторов = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПрикрепленныеФайлы.Данные КАК Файл
		|ПОМЕСТИТЬ ВТ_ПрикрепленныеФайлы
		|ИЗ
		|	РегистрСведений.ПрикрепленныеФайлы КАК ПрикрепленныеФайлы
		|ГДЕ
		|	ПрикрепленныеФайлы.Документ = &ДокументСсылка
		|	И ПрикрепленныеФайлы.Данные <> Значение(Справочник.ПрикрепленныеФайлы.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПрикрепленныеФайлы.Файл КАК Файл,
		|	ЕСТЬNULL(СостоянияПрикрепленныхФайловСрезПоследних.СостояниеФайла, Значение(Перечисление.СостоянияПрикрепленныхФайлов.ФайлДобавлен)) КАК Состояние
		|ИЗ
		|	ВТ_ПрикрепленныеФайлы КАК ВТ_ПрикрепленныеФайлы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПрикрепленныхФайлов.СрезПоследних(
		|				,
		|				ПрикрепленныйФайл В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ПрикрепленныеФайлы.Файл КАК Файл
		|					ИЗ
		|						ВТ_ПрикрепленныеФайлы КАК ВТ_ПрикрепленныеФайлы)) КАК СостоянияПрикрепленныхФайловСрезПоследних
		|		ПО ВТ_ПрикрепленныеФайлы.Файл = СостоянияПрикрепленныхФайловСрезПоследних.ПрикрепленныйФайл";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокФайлов = Новый СписокЗначений;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.Состояние = Перечисления.СостоянияПрикрепленныхФайлов.ФайлУдален Тогда
			Продолжить;
		КонецЕсли; 
		
		ДД = ВыборкаДетальныеЗаписи.Файл.Данные.Получить();		
		СписокФайлов.Добавить(ПоместитьВоВременноеХранилище(ДД), ВыборкаДетальныеЗаписи.Файл.Наименование);
		
		//CeHbKA 05.08.2020
		Если СоответствиеВнешнихИдентификаторов <> Неопределено Тогда
			СоответствиеВнешнихИдентификаторов.Добавить(ВыборкаДетальныеЗаписи.Файл);	
		КонецЕсли;
		//CeHbKA 05.08.2020
		
	КонецЦикла;
	
	СписокФайловНовый = ПолучитьСписокЗначенийПрикрепленныеФайлы_Новая(ДокументСсылка, СоответствиеВнешнихИдентификаторов);		
	
	//CeHbKA 17.06.2020
	Для каждого СтрокаСЗ из СписокФайловНовый цикл
		НС = СписокФайлов.Добавить();
		ЗаполнитьЗначенияСвойств(НС, СтрокаСЗ);
	КонецЦикла;
	//CeHbKA 17.06.2020
	
	//CeHbKA 15.01.2020
	АдресВХ = ПоместитьВоВременноеХранилище(СписокФайлов);
	
	Возврат АдресВХ;
	//CeHbKA 15.01.2020

КонецФункции // ()

Функция ПолучитьСписокЗначенийПрикрепленныеФайлы_Новая(ДокументСсылка, СоответствиеВнешнихИдентификаторов = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПрикрепленныеФайлы.ИдентификаторВнешнихДанных КАК ИдентификаторВнешнихДанных
		|ПОМЕСТИТЬ ВТ_ПрикрепленныеФайлы
		|ИЗ
		|	РегистрСведений.ПрикрепленныеФайлы КАК ПрикрепленныеФайлы
		|ГДЕ
		|	ПрикрепленныеФайлы.Документ = &ДокументСсылка
		|	И ПрикрепленныеФайлы.ИдентификаторВнешнихДанных <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПрикрепленныеФайлы.ИдентификаторВнешнихДанных КАК ИдентификаторВнешнихДанных,
		|	ЕСТЬNULL(СостоянияПрикрепленныхФайловСрезПоследних.СостояниеФайла, ЗНАЧЕНИЕ(Перечисление.СостоянияПрикрепленныхФайлов.ФайлДобавлен)) КАК Состояние
		|ИЗ
		|	ВТ_ПрикрепленныеФайлы КАК ВТ_ПрикрепленныеФайлы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПрикрепленныхФайлов.СрезПоследних(
		|				,
		|				ИдентификаторВнешнихДанных В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ПрикрепленныеФайлы.ИдентификаторВнешнихДанных КАК ИдентификаторВнешнихДанных
		|					ИЗ
		|						ВТ_ПрикрепленныеФайлы КАК ВТ_ПрикрепленныеФайлы)) КАК СостоянияПрикрепленныхФайловСрезПоследних
		|		ПО ВТ_ПрикрепленныеФайлы.ИдентификаторВнешнихДанных = СостоянияПрикрепленныхФайловСрезПоследних.ИдентификаторВнешнихДанных";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокID = Новый СписокЗначений;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.Состояние = Перечисления.СостоянияПрикрепленныхФайлов.ФайлУдален Тогда
			Продолжить;
		КонецЕсли; 
		
		СписокID.Добавить(ВыборкаДетальныеЗаписи.ИдентификаторВнешнихДанных);
		
		//ДД = ВыборкаДетальныеЗаписи.Файл.Данные.Получить();		
		//СписокФайлов.Добавить(ПоместитьВоВременноеХранилище(ДД), ВыборкаДетальныеЗаписи.Файл.Наименование);
		
	КонецЦикла;
	
	СписокТипыДокументов = Новый СписокЗначений();
	СписокТипыДокументов.Добавить(Справочники.ТипыПрикрепленныхДокументов.НакладнаяНаВозврат.Код);
	
	СписокФайлов = ВнешниеДанныеСервер.ПолучитьДанныеИзВнешнегоХранилища(СписокID, СписокТипыДокументов, СоответствиеВнешнихИдентификаторов);
	
	Возврат СписокФайлов;

КонецФункции // ()
//CeHbKA 05.08.2020
