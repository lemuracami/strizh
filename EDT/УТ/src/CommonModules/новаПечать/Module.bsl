
// Инициализирует подсистему "Печать". Вызывается при начале работы системы.
//
// Параметры:
//  новаКонтекст <Структура[Контекст]>: используется для повторного использования вычисленных значений на клиенте.
//
Процедура Инициализировать(новаКонтекст) Экспорт
	соПечатныеФормыОбъектов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Документ КАК Объект,
	|	ПечатнаяФорма КАК ПечатнаяФорма
	|ИЗ
	|	РегистрСведений.новаПечатныеФормы
	|ГДЕ
	|	Шаблон = ЗНАЧЕНИЕ(Справочник.новаШаблоныПечатныхФорм.ОсновныеПечатныеФормы)";
	
	тзОсновныеПечатныеФормы = Запрос.Выполнить().Выгрузить();
	
	мсПечатныеФормы = новаОбщиеПроцедуры.ПолучитьОбъектыМетаданныхКласса(Метаданные.Отчеты, Метаданные.Подсистемы.новаКлассыОбъектов.Подсистемы.новаПечатныеФормы);
	Для Каждого мдПечатнаяФорма Из мсПечатныеФормы Цикл
		Типы = мдПечатнаяФорма.Реквизиты.Владелец.Тип.Типы();
		Для Каждого Тип Из Типы Цикл
			мдОбъект = Метаданные.НайтиПоТипу(Тип);
			Если мдОбъект = Неопределено Тогда Продолжить; КонецЕсли;
			
			тзПечатныеФормыОбъекта = соПечатныеФормыОбъектов[мдОбъект];
			Если тзПечатныеФормыОбъекта = Неопределено Тогда
				тзПечатныеФормыОбъекта = Новый ТаблицаЗначений;
				тзПечатныеФормыОбъекта.Колонки.Добавить("ПечатнаяФорма");
				тзПечатныеФормыОбъекта.Колонки.Добавить("Основная");
				
				соПечатныеФормыОбъектов.Вставить(мдОбъект, тзПечатныеФормыОбъекта);
			КонецЕсли;
			
			стрПечатнаяФорма = тзПечатныеФормыОбъекта.Добавить();
			стрПечатнаяФорма.ПечатнаяФорма = мдПечатнаяФорма;
			стрПечатнаяФорма.Основная = тзОсновныеПечатныеФормы.НайтиСтроки(Новый Структура("Объект, ПечатнаяФорма", мдОбъект.Имя, "НОВА" + мдПечатнаяФорма.Имя)).Количество() > 0;
		КонецЦикла;
	КонецЦикла;
	
	новаКонтекст.Вставить("ПечатныеФормыОбъектов", соПечатныеФормыОбъектов);
КонецПроцедуры

// Добаляет в переданную форму элементы управления, реализующие возмжность печати.
//
// Параметры:
//  Форма        <Форма>
//  новаКонтекст <Структура[Контекст]>: используется для повторного использования вычисленных значений на клиенте.
//
Процедура ПодключитьИнтерфейсПечати(Форма, новаКонтекст) Экспорт
	тзПечатныеФормы = Новый ТаблицаЗначений;
	тзПечатныеФормы.Колонки.Добавить("ПечатнаяФорма");
	тзПечатныеФормы.Колонки.Добавить("Представление");
	тзПечатныеФормы.Колонки.Добавить("Основная");
	тзПечатныеФормы.Колонки.Добавить("Порядок");
	
	тзПечатныеФормыОбъекта = новаКонтекст.ПечатныеФормыОбъектов[Форма.ЭтотОбъект.Метаданные()];
	Если тзПечатныеФормыОбъекта = Неопределено Тогда Возврат; КонецЕсли;
	
	Для Каждого стрПечатнаяФормаОбъекта Из тзПечатныеФормыОбъекта Цикл
		стрПечатнаяФорма = тзПечатныеФормы.Добавить();
		стрПечатнаяФорма.ПечатнаяФорма = Отчеты[стрПечатнаяФормаОбъекта.ПечатнаяФорма.Имя].Создать();
		Если стрПечатнаяФорма.ПечатнаяФорма.СвойстваПечатнойФормы.Свойство("Представление") Тогда
			стрПечатнаяФорма.Представление = стрПечатнаяФорма.ПечатнаяФорма.СвойстваПечатнойФормы.Представление;
		Иначе
			стрПечатнаяФорма.Представление = стрПечатнаяФормаОбъекта.ПечатнаяФорма.Представление();
		КонецЕсли;
		стрПечатнаяФорма.Порядок = тзПечатныеФормы.Количество();
		стрПечатнаяФорма.Основная = стрПечатнаяФормаОбъекта.Основная;
	КонецЦикла;
	
	СоздатьИнтерфейсПечати(Форма, Форма.ЭлементыФормы.ОсновныеДействияФормы, тзПечатныеФормы);
КонецПроцедуры

// Добаляет кнопки печати связанных с формой печатных форм на командную панель формы.
//
// Параметры:
//  Форма           <Форма>
//  КоманднаяПанель <КоманднаяПанель>
//  тзПечатныеФормы <ТаблицаЗначений[ТаблицаПечатныхФорм]>
//
Процедура СоздатьИнтерфейсПечати(Форма, КоманднаяПанель, тзПечатныеФормы)
	тзПечатныеФормы.Сортировать("Порядок УБЫВ");	
	
	Если Не Форма.Расширение.Свойство("КнопкиПечатныхФорм") Тогда
		Форма.Расширение.Вставить("КнопкиПечатныхФорм", Новый Соответствие);
	КонецЕсли;
		
	ПрочиеПечатныеФормы = тзПечатныеФормы.НайтиСтроки(Новый Структура("Основная", Ложь));
	Если ПрочиеПечатныеФормы.Количество() > 0 Тогда
		КнопкаМенюПечати = КоманднаяПанель.Кнопки.Вставить(0,, ТипКнопкиКоманднойПанели.Подменю, "Печать");
		КнопкаМенюПечати.Картинка = БиблиотекаКартинок.Отчет;
		КнопкаМенюПечати.Отображение = ОтображениеКнопкиКоманднойПанели.НадписьКартинка;
		СоздатьКнопкиПечати(Форма, КнопкаМенюПечати.Кнопки, ПрочиеПечатныеФормы);
	КонецЕсли;
	
	СоздатьКнопкиПечати(Форма, КоманднаяПанель.Кнопки, тзПечатныеФормы.НайтиСтроки(Новый Структура("Основная", Истина)));
КонецПроцедуры

// Добаляет кнопки печати связанных с формой печатных форм в коллекцию кнопок командной панели.
//
// Параметры:
//  Форма         <Форма>
//  Кнопки        <КнопкиКоманднойПанели>
//  ПечатныеФормы <Массив(<СтрокаТаблицыЗначений[ПечатнаяФорма]>)>
//
Процедура СоздатьКнопкиПечати(Форма, Кнопки, ПечатныеФормы)
	Для Каждого стрПечатнаяФорма Из ПечатныеФормы Цикл
		КнопкаПечатнойФормы = Кнопки.Вставить(0,, ТипКнопкиКоманднойПанели.Действие, стрПечатнаяФорма.Представление);
		Форма.Расширение.КнопкиПечатныхФорм.Вставить(КнопкаПечатнойФормы, стрПечатнаяФорма.ПечатнаяФорма);
		КнопкаПечатнойФормы.Картинка = БиблиотекаКартинок.Отчет;
		КнопкаПечатнойФормы.Отображение = ОтображениеКнопкиКоманднойПанели.НадписьКартинка;
		
		новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, КнопкаПечатнойФормы,
			"Нажатие",
			0,
			"новаПечать.ВывестиПечатнуюФорму(ЭтаФорма, Параметр1);");
	КонецЦикла;
КонецПроцедуры

// Обработчик события "Нажатие" кнопки печати печатной формы.
//
// Параметры:
//  Форма  <Форма>
//  Кнопка <КнопкаКоманднойПанели>
//
Процедура ВывестиПечатнуюФорму(Форма, Кнопка) Экспорт
	Если Форма.ЭтотОбъект.Модифицированность() Тогда
		Сообщить("Необходимо записать документ",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	ПечатнаяФорма = Форма.Расширение.КнопкиПечатныхФорм[Кнопка];
	Если ПечатнаяФорма = Неопределено Тогда Возврат; КонецЕсли;
	
	ПечатнаяФорма.Владелец = Форма.ЭтотОбъект;
	
	ФормаПечати = ПолучитьОбщуюФорму("новаФормаПечати",, Строка(ПечатнаяФорма) + Строка(Форма.ЭтотОбъект));
	
	ТД = ФормаПечати.ПолучитьТабличныйДокумент();
	ТД.Очистить();
	Заголовок = "";
	Если Не ПечатнаяФорма.ВывестиНаПечать(Форма, ТД, Заголовок) Тогда Возврат; КонецЕсли;
	
	ФормаПечати.Заголовок = ?(ПустаяСтрока(Заголовок), Кнопка.Текст, Заголовок);
	ФормаПечати.Открыть();
КонецПроцедуры
		