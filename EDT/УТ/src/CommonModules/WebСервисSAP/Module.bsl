Функция ВыполнитьОперациюWS(ПроксиФабрикиXDTO, ИмяОперацииWS, СтруктураПараметров1С = Неопределено) Экспорт
	Перем СтруктураПараметровОперацииWS;
	
	СтруктураПараметровОперацииWS = ИнициализироватьСтруктуруПараметровОперацииWS(СтруктураПараметров1С);
	
	ПолучитьСтруктуруПараметровОперацииWS(ПроксиФабрикиXDTO, ИмяОперацииWS, СтруктураПараметровОперацииWS);
	
	СтрокаПараметровОперацииWS = ПолучитьСтрокуПараметровОперацииWSПоСтруктуре(СтруктураПараметровОперацииWS, "СтруктураПараметровОперацииWS");
	
	ПреобразоватьСтруктуруПараметровОперацииWS(ПроксиФабрикиXDTO, ИмяОперацииWS, СтрокаПараметровОперацииWS);
	
	Попытка
		Если СтруктураПараметровОперацииWS.ВозвращаемоеЗначение = Неопределено Тогда
			Выполнить("ПроксиФабрикиXDTO." + ИмяОперацииWS + "(" + СтрокаПараметровОперацииWS + ")");
		Иначе
			Выполнить("СтруктураПараметровОперацииWS.ВозвращаемоеЗначение = ПроксиФабрикиXDTO." + ИмяОперацииWS + "(" + СтрокаПараметровОперацииWS + ")");
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	СтруктураПараметровОперацииWS.ВозвращаемоеЗначение = ПреобразоватьОбъектXDTOвСтруктуру(СтруктураПараметровОперацииWS.ВозвращаемоеЗначение);
	Если ТипЗнч(СтруктураПараметровОперацииWS.Параметры) = Тип("Структура") Тогда
		Для Каждого Пар Из СтруктураПараметровОперацииWS.Параметры Цикл
			СтруктураПараметровОперацииWS.Параметры.Вставить("Значение", ПреобразоватьОбъектXDTOвСтруктуру(Пар.Значение));
		КонецЦикла;
	КонецЕсли;
	
	Возврат СтруктураПараметровОперацииWS;
	
КонецФункции //ВыполнитьОперациюWS

// Процедура заполняет структуру параметров WS по структуре параметров 1С
//
// Параметры:
// ПроксиФабрикиXDTO, ИмяОперацииWS, СтруктураПараметров1С, СтруктураПараметровОперацииWS
//
Процедура ПолучитьСтруктуруПараметровОперацииWS(ПроксиФабрикиXDTO, ИмяОперацииWS, СтруктураПараметровОперацииWS)
	
	
	Перем ТипОперацииWS;
	
	ПроверятьПараметр1С = (СтруктураПараметровОперацииWS.Параметры1С <> Неопределено);
	
	Для каждого ОперацияWS Из ПроксиФабрикиXDTO.ТочкаПодключения.Интерфейс.Операции Цикл
		
		Если ОперацияWS.Имя = ИмяОперацииWS Тогда
			
			Если ОперацияWS.ВозвращаемоеЗначение <> Неопределено Тогда
				СтруктураПараметровОперацииWS.ВозвращаемоеЗначение = ПроксиФабрикиXDTO.ФабрикаXDTO.Создать(ОперацияWS.ВозвращаемоеЗначение.Тип);
			КонецЕсли;
			
			// Добавим URIПространстваИмен и Объект типа операции
			Для каждого ПакетXDTO ИЗ ПроксиФабрикиXDTO.ФабрикаXDTO.Пакеты Цикл
				Для каждого СвойствоXDTO Из ПакетXDTO.КорневыеСвойства Цикл
					Если СвойствоXDTO.Имя = ИмяОперацииWS Тогда
						СтруктураПараметровОперацииWS.URIПространстваИмен = ПакетXDTO.URIПространстваИмен;
						ТипОперацииWS = СвойствоXDTO.Тип;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			ОбъектXDTO = ПроксиФабрикиXDTO.ФабрикаXDTO.Создать(ТипОперацииWS);
			Для каждого ПараметрОперацииWS Из ОперацияWS.Параметры Цикл
				
				Объект1С = Неопределено;
				Если ПроверятьПараметр1С И СтруктураПараметровОперацииWS.Параметры1С.Свойство(ПараметрОперацииWS.Имя, Объект1С) Тогда
					ОбъектПараметраОперацииWS = ПолучитьОбъектXDTOпоСтруктуреОбъекта1С(ПроксиФабрикиXDTO, ПараметрОперацииWS.Тип, Объект1С);
					ОбъектXDTO[ПараметрОперацииWS.Имя] = ОбъектПараметраОперацииWS;
					СтруктураПараметровОперацииWS.Параметры.Вставить(ПараметрОперацииWS.Имя, ОбъектПараметраОперацииWS);
				Иначе
					СтруктураПараметровОперацииWS.Параметры.Вставить(ПараметрОперацииWS.Имя, Неопределено);
				КонецЕсли;
				
			КонецЦикла;
			//СтруктураПараметровОперацииWS.ОбъектОперацииWS = ОбъектXDTO;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьСтруктуруПараметровОперацииWS(ПроксиФабрикиXDTO, ИмяОперацииWS, СтруктураПараметровОперацииWS)

// Процедура Преобразует формат параметров WS 1c в формат WS внешней системы (SAP)
//
// Параметры:
// ПроксиФабрикиXDTO, ИмяОперацииWS, СтруктураПараметровОперацииWS
//
Процедура ПреобразоватьСтруктуруПараметровОперацииWS(ПроксиФабрикиXDTO, ИмяОперацииWS, СтруктураПараметровОперацииWS)
	
	
	
	Для каждого ОперацияWS Из ПроксиФабрикиXDTO.ТочкаПодключения.Интерфейс.Операции Цикл
		
		Если ОперацияWS.Имя = ИмяОперацииWS Тогда
			
			Для каждого Параметр Из СтруктураПараметровОперацииWS.Параметры Цикл
				
				ЗаписьXML = Новый ЗаписьXML;
				ЗаписьXML.УстановитьСтроку("UTF-8");
				ЗаписьXML.ЗаписатьОбъявлениеXML();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента(ИмяОперацииWS);
				ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("", СтруктураПараметровОперацииWS.URIПространстваИмен);
				
				ПроксиФабрикиXDTO.ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, Параметр.Значение, Параметр.Ключ);
				
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				Стр = ЗаписьXML.Закрыть();
				
				// Преобразуем XML (для более сложных случаев надо задействовать XSLT)
				Стр = СтрЗаменить(Стр, ИмяОперацииWS, "n0:" + ИмяОперацииWS);
				Стр = СтрЗаменить(Стр, "xmlns=", "xmlns:n0=");
				
				ЧтениеXML = Новый ЧтениеXML;
				ЧтениеXML.УстановитьСтроку(Стр);
				ЧтениеXML.ПерейтиКСодержимому();
				ЧтениеXML.Прочитать();
				
				Попытка
					СтруктураПараметровОперацииWS.Параметры.Вставить(Параметр.Ключ, ПроксиФабрикиXDTO.ФабрикаXDTO.ПрочитатьXML(ЧтениеXML));
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;
				
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ПреобразоватьСтруктуруПараметровОперацииWS(ПроксиФабрикиXDTO, ИмяОперацииWS, СтруктураПараметровОперацииWS)

// Функция возвращает строку параметров через запятую из структуры
//
// Параметры:
// Нет
//
Функция ПолучитьСтрокуПараметровОперацииWSПоСтруктуре(СтруктураПараметровОперацииWS, ИмяПеременнойСтруктурыПараметровОперацииWS)
	
	
	
	Перем ВозвращаемоеЗнач;
	
	ВозвращаемоеЗнач = "";
	Если ТипЗнч(СтруктураПараметровОперацииWS) = Тип("Структура") Тогда
		Для каждого Пар Из СтруктураПараметровОперацииWS.Параметры Цикл
			ВозвращаемоеЗнач = ВозвращаемоеЗнач + ", " + ИмяПеременнойСтруктурыПараметровОперацииWS + ".Параметры." + Пар.Ключ;
		КонецЦикла;
		Если ВозвращаемоеЗнач <> "" Тогда
			ВозвращаемоеЗнач = Сред(ВозвращаемоеЗнач, 3);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВозвращаемоеЗнач;
	
КонецФункции // ПолучитьСтрокуПараметровОперацииWSПоСтруктуре(СтруктураПараметровОперацииWS, ИмяСтруктурыПараметровОперацииWS)


// Функция возвращает структуру по объекту XDTO
//
Функция ПреобразоватьОбъектXDTOвСтруктуру(ОбъектXDTO)
	
	
	
	Перем ВозвращаемоеЗнач;
	
	Если ОбъектXDTO = Неопределено Тогда
		
		ВозвращаемоеЗнач = Неопределено;
		
	ИначеЕсли ТипЗнч(ОбъектXDTO) = Тип("ЗначениеXDTO") Тогда
		
		ВозвращаемоеЗнач = ОбъектXDTO.Значение;
		
	ИначеЕсли ТипЗнч(ОбъектXDTO) = Тип("ОбъектXDTO") Тогда
		
		ВозвращаемоеЗнач = Новый Структура;
		
		Для каждого СвойствоXDTO Из ОбъектXDTO.Свойства() Цикл
			
			ВозвращаемоеЗнач.Вставить(СвойствоXDTO.Имя);
			
			Попытка // свойство - списокXDTO
				
				СписокXDTO = ОбъектXDTO.ПолучитьСписок(СвойствоXDTO);
				КоличествоСписка = СписокXDTO.Количество();
				
				МассивЗначений = Новый Массив;
				Для Сч = 0 По КоличествоСписка - 1 Цикл
					МассивЗначений.Добавить(ПреобразоватьОбъектXDTOвСтруктуру(СписокXDTO.ПолучитьXDTO(Сч)));
				КонецЦикла;
				
				ВозвращаемоеЗнач[СвойствоXDTO.Имя] = МассивЗначений;
				
			Исключение // свойство - объектXDTO/значениеXDTO
				
				ВозвращаемоеЗнач[СвойствоXDTO.Имя] = ПреобразоватьОбъектXDTOвСтруктуру(ОбъектXDTO.ПолучитьXDTO(СвойствоXDTO));
				
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ВозвращаемоеЗнач;
	
КонецФункции