

Процедура ЗаполнитьДокумент(ДокОтчетВодителя) Экспорт

	ЭтотОбъект.Дата = ТекущаяДата();
	ЭтотОбъект.ОтчетВодителя = ДокОтчетВодителя;
	ЭтотОбъект.ДанныеМПВодителя.Загрузить(ДокОтчетВодителя.ДанныеМобильногоПриложения.Выгрузить());	
	
	ЗапПЗ = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                     |	ПредварительноеЗакрытиеРейсаЗаказы.Ссылка КАК Ссылка
	                     |ПОМЕСТИТЬ ВТ
	                     |ИЗ
	                     |	Документ.ПредварительноеЗакрытиеРейса.Заказы КАК ПредварительноеЗакрытиеРейсаЗаказы
	                     |ГДЕ
	                     |	ПредварительноеЗакрытиеРейсаЗаказы.Ссылка.ОтчетВодителя = &ОтчетВодителя
	                     |
	                     |УПОРЯДОЧИТЬ ПО
	                     |	ПредварительноеЗакрытиеРейсаЗаказы.Ссылка.Дата
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ПредварительноеЗакрытиеРейсаЗаказы.Заказ КАК Заказ,
	                     |	ПредварительноеЗакрытиеРейсаЗаказы.ТекущаяДатаДоставки КАК ТекущаяДатаДоставки
	                     |ИЗ
	                     |	ВТ КАК ВТ
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПредварительноеЗакрытиеРейса.Заказы КАК ПредварительноеЗакрытиеРейсаЗаказы
	                     |		ПО ВТ.Ссылка = ПредварительноеЗакрытиеРейсаЗаказы.Ссылка");
	ЗапПЗ.УстановитьПараметр("ОтчетВодителя", ДокОтчетВодителя);					 
	РезТЗ = ЗапПЗ.Выполнить().Выгрузить();	
	
		
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	новаОтчетВодителяЗадания.Задание,
	                      |	новаОтчетВодителяЗадания.Выполнено,
	                      |	новаОтчетВодителяЗадания.РезультатДоставки,
	                      |	новаОтчетВодителяЗадания.Перенесено,
	                      |	новаОтчетВодителяЗадания.ПричинаНевыполнения,
	                      |	новаОтчетВодителяЗадания.ДатаПереноса,
	                      |	новаОтчетВодителяЗадания.ПричинаОтказа,
	                      |	новаОтчетВодителяЗадания.НедостаточноДанных,
	                      |	новаОтчетВодителяЗадания.АдресДо,
	                      |	новаОтчетВодителяЗадания.АдресПосле,
	                      |	новаОтчетВодителяЗадания.АдресПослеТекст,
	                      |	новаОтчетВодителяЗадания.ТипОплаты,
	                      |	новаОтчетВодителяЗадания.НовыйИнтервалДоставки,
	                      |	новаОтчетВодителяЗадания.ЗаказыВозвращеныНаСклад,
	                      |	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	                      |	РеализацияТоваровУслуг.Дата КАК ДатаЗаказа
	                      |ИЗ
	                      |	Документ.новаОтчетВодителя.Задания КАК новаОтчетВодителяЗадания
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	                      |		ПО новаОтчетВодителяЗадания.Задание.Номер = РеализацияТоваровУслуг.Номер
	                      |ГДЕ
	                      |	новаОтчетВодителяЗадания.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ДокОтчетВодителя);	
	ТЗЗадания = Запрос.Выполнить().Выгрузить();
	
	// заполнение ТЧ Заказы
	//ТЧЗадания = ДокОтчетВодителя.Задания.Выгрузить();
	Для каждого Стр Из ТЗЗадания Цикл
		
		НСтр = Заказы.Добавить();
		//Заказ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Стр.Задание.Номер);
		НСтр.Заказ = Стр.Заказ;

		Если НЕ ЗначениеЗаполнено(Стр.РезультатДоставки) Тогда
			НСтр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена;
			//НСтр.ДатаПереноса = НачалоДня(ТекущаяДата() + 86400);
			НСтр.ДатаПереноса = НачалоДня(ДокОтчетВодителя.Рейс.ДатаНачала) + 86400;
			НСтр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки;
			НСтр.ПредварительноеЗакрытие = Истина;
			//НСтр.ПричинаОтказа = ;
				
		ИначеЕсли ЗначениеЗаполнено(Стр.ДатаПереноса) Тогда	
			НСтр.РезультатДоставки = Стр.РезультатДоставки;
			НСтр.ДатаПереноса = Стр.ДатаПереноса;
			НСтр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки;
			НСтр.ПредварительноеЗакрытие = Истина;
			//НСтр.ТекущаяДатаДоставки = Стр.ДатаЗаказа;		
		Иначе
			НСтр.ДатаПереноса = Стр.ДатаПереноса;
			НСтр.ПредварительноеЗакрытие = Ложь;
			НСтр.ПричинаНевыполнения = Стр.ПричинаНевыполнения;
			НСтр.ПричинаОтказа = Стр.ПричинаОтказа;
			НСтр.РезультатДоставки = Стр.РезультатДоставки;
			//НСтр.ТекущаяДатаДоставки = Стр.ДатаЗаказа;			
		КонецЕсли;	
		
		НайТекДата = РезТЗ.НайтиСтроки(Новый Структура("Заказ", Стр.Заказ));
		Если НайТекДата.Количество() И ЗначениеЗаполнено(НайТекДата[0].ТекущаяДатаДоставки) Тогда
		    НСтр.ТекущаяДатаДоставки = НайТекДата[0].ТекущаяДатаДоставки;
		Иначе	
			НСтр.ТекущаяДатаДоставки = Стр.ДатаЗаказа;
		КонецЕсли;
				
	КонецЦикла;
	

КонецПроцедуры


Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Отказ = Истина;
	
	Если Не Отказ Тогда
		ОткатитьДатуДоставки();
	КонецеСли;
	
КонецПроцедуры

//Документ проводится по РС СостоянияЗаказов и РС ДатыДоставок
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
		
	// РС СостоянияЗаказов
	Набор = РегистрыСведений.СостоянияЗаказов.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(ЭтотОбъект.Ссылка);
	Набор.Прочитать();
	Набор.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.Заказ КАК Заказ,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ТекущаяДатаДоставки КАК ТекущаяДатаДоставки,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.РезультатДоставки КАК РезультатДоставки,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПричинаНевыполнения КАК ПричинаНевыполнения,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПричинаОтказа КАК ПричинаОтказа,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ДатаПереноса КАК ДатаПереноса,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПредварительноеЗакрытие КАК ПредварительноеЗакрытие,
	                      |	новаМестнаяДоставка.Ссылка КАК Доставка,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПричинаОтказа.СторонаПретензии КАК СторонаПретензии,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.Ссылка.ОтчетВодителя КАК ОтчетВодителя,
	                      |	Рейс.Ссылка КАК Рейс,
	                      |	Рейс.ДатаРейса КАК ДатаДоставки
	                      |ИЗ
	                      |	Документ.ПредварительноеЗакрытиеРейса.Заказы КАК ПредварительноеЗакрытиеРейсаЗаказы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	                      |		ПО ПредварительноеЗакрытиеРейсаЗаказы.Заказ.Номер = новаМестнаяДоставка.Номер
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК Рейс
	                      |		ПО ПредварительноеЗакрытиеРейсаЗаказы.Ссылка.ОтчетВодителя.Рейс = Рейс.РейсМестнойДоставки
	                      |ГДЕ
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Для каждого Стр Из Рез Цикл
		Если Стр.ПредварительноеЗакрытие Тогда
			НЗапись = Набор.Добавить();
			НЗапись.Период = Дата;
			НЗапись.Доставка = Стр.Доставка;
			НЗапись.Заказ = Стр.Заказ;
			НЗапись.ПричинаНеВыполнения = Стр.ПричинаНевыполнения;
			НЗапись.ПричинаОтказа = Стр.ПричинаОтказа;
			НЗапись.СторонаПретензий = Стр.СторонаПретензии;
			НЗапись.Регистратор = ЭтотОбъект.Ссылка;
			НЗапись.РезультатДоставки = Стр.РезультатДоставки;
			//НЗапись.Водитель = ОтчетВодителя.Водитель;
			//НЗапись.Экспедитор = ОтчетВодителя.Экспедитор;
			НЗапись.ДатаПереноса = Стр.ДатаПереноса;
			НЗапись.Рейс = Стр.Рейс;
			НЗапись.ДатаДоставки = Стр.ДатаДоставки;
			
			Если  Не ЗначениеЗаполнено(Стр.Рейс) Тогда
				
				НЗапись.ДатаДоставки =  Стр.Заказ.Дата;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Набор.Записать();

	
	
	// РС ДатыДоставок
	НаборДД = РегистрыСведений.ДатыДоставок.СоздатьНаборЗаписей();
	НаборДД.Отбор.Регистратор.Установить(ЭтотОбъект.Ссылка);
	НаборДД.Прочитать();
	НаборДД.Очистить();
	
	Для каждого Стр Из Заказы Цикл
		Если ЗначениеЗаполнено(Стр.ДатаПереноса) Тогда
			
			НЗапись = НаборДД.Добавить();
			НЗапись.Период = Дата;
			НЗапись.Доставка = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(СокрЛП(Стр.Заказ.Номер));
			НЗапись.Заказ = Стр.Заказ;
			НЗапись.ДатаДоставки = Стр.ДатаПереноса;
			//НЗапись.ПричинаИзмененияДаты = ;
			//НЗапись.ПричинаИзмененияДатыСпр = Перечисления.ПричиныИзмененияДатыДоставки.;
		КонецЕсли;
		
	КонецЦикла;

	НаборДД.Записать();
	
	//Асеев 03.10.2023 (Задача № 5137)>>>
	//ИзменятьДатыДоставки = Документы.новаОтчетВодителя.ВыполнятьИзменениеДатыДоставки(ОтчетВодителя);
	ИзменятьДатыДоставки = Ложь;
	//Асеев 03.10.2023 (Задача № 5137)<<<
	
	Если ИзменятьДатыДоставки Тогда
	// изменение дат	
		ИзменениеДатДоставок();
	КонецЕсли;
	
	АктуализироватьДанныеПредварительногоЗакрытия(ИзменятьДатыДоставки);
	
	// МАС - 10.11.2017 - Запрещаем изменять рейс при предварительном закрытии --->> 
	ЗапросР = Новый Запрос("ВЫБРАТЬ
	                      |	Рейс.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.Рейс КАК Рейс
	                      |ГДЕ
	                      |	Рейс.РейсМестнойДоставки = &РейсМестнойДоставки");
	ЗапросР.УстановитьПараметр("РейсМестнойДоставки", ОтчетВодителя.Рейс);
	РезР = ЗапросР.Выполнить().Выбрать();
	РезР.Следующий();
	
	РейсСсылка = РезР.Ссылка;
	
	Если НЕ baoВызовСервера.РейсЗакрыт(РейсСсылка) Тогда
		//+Степанов Задача № 3439 
		//baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(РейсСсылка, Истина);
		baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(РейсСсылка, Истина,Ссылка);
		//-Степанов
	КонецЕсли;
	// <<--- МАС 
	
	ДвижениеПоСтатусамПредварительногоЗакрытияРейсов();
КонецПроцедуры



Процедура ОткатитьДатуДоставки()
	
	МассивЗаказовДляОпределенияСмены = Новый Массив; //Задача № 3345
	
	Для Каждого Тек Из Заказы Цикл
		
		
		Если ЗначениеЗаполнено(Тек.ДатаПереноса) И Тек.ПредварительноеЗакрытие Тогда
			
			ДоставкаБП = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Тек.Заказ.Номер);
			
			Стр = Новый Структура;
			Стр.Вставить("Доставка", ДоставкаБП.Ссылка);
			НайПред = РегистрыСведений.ДатыДоставок.ПолучитьПоследнее(Дата - 1, Стр);
			
			Если ЗначениеЗаполнено(НайПред.ДатаДоставки) Тогда
				Д = ДоставкаБП.ПолучитьОбъект();
				//Д = Тек.Задание.ПолучитьОбъект();
				Д.Дата = НайПред.ДатаДоставки;  
				
				ЧН = Час(Д.ВремяОтправленияС);
				ЧК = Час(Д.ВремяОтправленияПо);
				
				МН = Минута(Д.ВремяОтправленияС);
				МК = Минута(Д.ВремяОтправленияПо);
				
				ЧН_ = Час(Д.ВремяПрибытияС);
				ЧК_ = Час(Д.ВремяПрибытияПо);
				
				МН_ = Минута(Д.ВремяПрибытияС);
				МК_ = Минута(Д.ВремяПрибытияПо);
				
				
				Д.ВремяОтправленияС = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
				Д.ВремяОтправленияПо = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
				
				Д.ВремяПрибытияС = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
				Д.ВремяПрибытияПо = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
				
				Д.Записать();
				
							
				Д_ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Д.Номер); // , Д.Дата
				Если Не Д_.Пустая() Тогда
					Док = Д_.ПолучитьОбъект();
					Док.Дата = НайПред.ДатаДоставки;
					УстановитьДатуВАдминке(Д.Номер, НайПред.ДатаДоставки);
					Док.Записать(РежимЗаписиДокумента.Запись);
					Если Док.Проведен Тогда
						Док.Записать(РежимЗаписиДокумента.Проведение);
					КонецеСли;
					
					МассивЗаказовДляОпределенияСмены.Добавить(Док.Ссылка); //Задача № 3345
					
				КонецеСли;	
				
				Д_ = Документы.ВозвратТоваровОтПокупателя.НайтиПоНомеру(Д.Номер, Д.Дата); // , Д.Дата
				Если Не Д_.Пустая() Тогда
					Док = Д_.ПолучитьОбъект();
					Док.Дата = НайПред.ДатаДоставки;
					Док.Записать(РежимЗаписиДокумента.Запись);
					Если Док.Проведен Тогда
						Док.Записать(РежимЗаписиДокумента.Проведение);
					КонецеСли;	
				КонецеСли;	
				
			КонецеСли;
		КонецеСли;
		
	КонецЦикла;	
	
	МаршрутизацияЗаказовСервер.УстановкаСменыДляЗаказов(МассивЗаказовДляОпределенияСмены); //Задача № 3345
	
КонецПроцедуры	

Процедура ИзменениеДатДоставок()
	
	МассивЗаказовДляОпределенияСмены = Новый Массив; //Задача № 3345
	
	Для Каждого Тек Из Заказы Цикл
		
		Если ЗначениеЗаполнено(Тек.ДатаПереноса) И Тек.ПредварительноеЗакрытие Тогда
			
			Нов = Движения.ДатыДоставок.Добавить();
			ДоставкаБП = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Тек.Заказ.Номер);
			Нов.Доставка = ДоставкаБП;
			Нов.Заказ = Тек.Заказ;
			Нов.ДатаДоставки = Тек.ДатаПереноса;
			Нов.Период = Дата;
			
			Д = ДоставкаБП.ПолучитьОбъект();
			Д.Дата = Тек.ДатаПереноса;
			
			ЧН = Час(Д.ВремяОтправленияС);
			ЧК = Час(Д.ВремяОтправленияПо);
			
			МН = Минута(Д.ВремяОтправленияС);
			МК = Минута(Д.ВремяОтправленияПо);
			
			ЧН_ = Час(Д.ВремяПрибытияС);
			ЧК_ = Час(Д.ВремяПрибытияПо);
			
			МН_ = Минута(Д.ВремяПрибытияС);
			МК_ = Минута(Д.ВремяПрибытияПо);
			
			
			Д.ВремяОтправленияС = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
			Д.ВремяОтправленияПо = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
			
			Д.ВремяПрибытияС = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
			Д.ВремяПрибытияПо = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
			
			Д.Записать();
			
			
				
			УстановитьДатуВАдминке(Д.Номер, Тек.ДатаПереноса);

			Д_ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Д.Номер);  // , Д.Дата
			Если Не Д_.Пустая() Тогда
				Док = Д_.ПолучитьОбъект();
				Док.Дата = Тек.ДатаПереноса;
				Док.Записать(РежимЗаписиДокумента.Запись);
				Если Док.Проведен Тогда
					Док.Записать(РежимЗаписиДокумента.Проведение);
				КонецеСли;
				
				МассивЗаказовДляОпределенияСмены.Добавить(Док.Ссылка); //Задача № 3345
				
			КонецеСли;
			
			Д_ = Документы.ВозвратТоваровОтПокупателя.НайтиПоНомеру(Д.Номер, Дата); // , Д.Дата
			Если Не Д_.Пустая() Тогда
				Док = Д_.ПолучитьОбъект();
				Док.Дата = Тек.ДатаПереноса;
				Док.Записать(РежимЗаписиДокумента.Запись);
				Если Док.Проведен Тогда
					Док.Записать(РежимЗаписиДокумента.Проведение);
				КонецеСли;	
			КонецеСли;
			
		КонецеСли;	
		
	КонецЦикла;	
	
	МаршрутизацияЗаказовСервер.УстановкаСменыДляЗаказов(МассивЗаказовДляОпределенияСмены); //Задача № 3345
	
КонецПроцедуры

Процедура УстановитьДатуВАдминке(НомерЗ, ДатаЗ)
	
	// ++Задача № 3381
	//Попытка
	//	ПодключениеКМагазину = Евген.СоздатьПодключениеКИнтернетМагазину(); 
	//Исключение
	//	НормальныйХодВыполнения = Ложь;
	//	Возврат;
	//КонецПопытки;
	//
	//Ткст = "
	//|UPDATE _order
	//|SET DeliveryDate = '" + Евген.ДатаВSQL(ДатаЗ, Ложь) + "', whoLastChange = '"+ПараметрыСеанса.ТекущийПользователь+"'
	//| WHERE orderId = " + Формат(НомерЗ, "ЧГ=") + "
	//|EXEC mp_saveOrderHistory " + Формат(НомерЗ, "ЧГ=");
	//ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
	//
	////Ткст = "
	////|EXEC p1c_removeCarriageFromOrder " + Формат(НомерЗ, "ЧГ=") + "
	////|EXEC mp_saveOrderHistory " + Формат(НомерЗ, "ЧГ=");
	////ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
	
	ПараметрыЗаказа = Новый Структура("OrderId, DeliveryDate, Who",
	Число(НомерЗ), ДатаЗ, СокрЛП(ПараметрыСеанса.ТекущийПользователь));
	
	ПараметрыЗапроса = новый Массив;
	ПараметрыЗапроса.Добавить(ПараметрыЗаказа);
	
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		ФайлДляКонтроля = "D:\tmp\SetOrdersDeliveryDate_" + СокрЛП(НомерЗ) + ".json";
		ТолькоСохранитьФайл = Ложь;
	Иначе
		ФайлДляКонтроля = Неопределено;
		ТолькоСохранитьФайл = Ложь;
	КонецЕсли;
	
	РезультатОтправки = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(
	Перечисления.ВидыЗапросовWEBСервис.SetOrdersDeliveryDateResult, 
	ПараметрыЗапроса, 
	ФайлДляКонтроля, 
	ТолькоСохранитьФайл);
	// --Задача № 3381
	
КонецПроцедуры


Функция ЗапросКИнтернетМагазину(ТекстЗапроса, ПодключениеКМагазину) Экспорт

	Cmd = Новый COMОбъект("ADODB.Command");
	Cmd.ActiveConnection = ПодключениеКМагазину;
	Cmd.CommandText = ТекстЗапроса;
	Cmd.CommandType = 1;
	
	Попытка
		Возврат Cmd.Execute();	
	Исключение
	КонецПопытки;
	
КонецФункции // ЗапросКИнтернетМагазину()


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;	
	КонецЕсли;
	
	//+Степанов
	 Если РежимЗаписи <> РежимЗаписиДокумента.Запись
			И РегистрыСведений.КонтрольВремени.ВыполняетсяСобытиеМаршрутизации(ОтчетВодителя.ТерминалДоставки) Тогда
		Сообщить("Выполняется событие маршрутизации! Документы закрыты для изменения!");
		Отказ = Истина;
	КонецЕсли;
	//-Степанов

	
	Если ДополнительныеСвойства.Свойство("ОбходПроверок") Тогда
		Возврат;	
	КонецЕсли;
		
	
	//+++ БАО 13.06.2017 №1024
	//Если РейсЗакрытКУдалению Тогда
	Если baoВызовСервера.РейсЗакрыт(Ссылка) Тогда
	//--- БАО 13.06.2017 №1024  	
		Отказ = Истина;
		#Если Клиент Тогда
			Сообщить("Рейс закрыт");
		#КонецЕсли	
		Возврат;
	КонецЕсли;
	
	
	
	Если ЭтотОбъект.Проведен И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		#Если Клиент Тогда
			Сообщить("Повторное проведение запрещено");
		#КонецЕсли
		Отказ = Истина;
		Возврат;		
	КонецЕсли;
	
КонецПроцедуры



Процедура АктуализироватьДанныеПредварительногоЗакрытия(ИзменятьДатыДоставки)
	
	МассивЗаказовДляОпределенияСмены = Новый Массив; //Задача № 3345
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ПредварительноеЗакрытиеРейса.Ссылка
	                      |ПОМЕСТИТЬ ВТ
	                      |ИЗ
	                      |	Документ.ПредварительноеЗакрытиеРейса КАК ПредварительноеЗакрытиеРейса
	                      |ГДЕ
	                      |	ПредварительноеЗакрытиеРейса.ОтчетВодителя = &ОтчетВодителя
	                      |	И ПредварительноеЗакрытиеРейса.Дата <= &Дата
	                      |	И ПредварительноеЗакрытиеРейса.Ссылка <> &Ссылка_Текущ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ПредварительноеЗакрытиеРейса.Дата
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.Заказ,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ТекущаяДатаДоставки,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.РезультатДоставки,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПричинаНевыполнения,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПричинаОтказа,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ДатаПереноса,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПредварительноеЗакрытие
	                      |ПОМЕСТИТЬ ВТ_ТЧ
	                      |ИЗ
	                      |	ВТ КАК ВТ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПредварительноеЗакрытиеРейса.Заказы КАК ПредварительноеЗакрытиеРейсаЗаказы
	                      |		ПО ВТ.Ссылка = ПредварительноеЗакрытиеРейсаЗаказы.Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ТекущаяДатаДоставки,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПредварительноеЗакрытие,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.Заказ,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.РезультатДоставки,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПричинаНевыполнения,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПричинаОтказа,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ДатаПереноса
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТЧ.Заказ,
	                      |	ВТ_ТЧ.ТекущаяДатаДоставки,
	                      |	ВТ_ТЧ.РезультатДоставки,
	                      |	ВТ_ТЧ.ПричинаНевыполнения,
	                      |	ВТ_ТЧ.ПричинаОтказа,
	                      |	ВТ_ТЧ.ДатаПереноса,
	                      |	ВТ_ТЧ.ПредварительноеЗакрытие,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ТекущаяДатаДоставки КАК ТекущаяДатаДоставкиФакт,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.РезультатДоставки КАК РезультатДоставкиФакт,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПричинаНевыполнения КАК ПричинаНевыполненияФакт,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПричинаОтказа КАК ПричинаОтказаФакт,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ДатаПереноса КАК ДатаПереносаФакт,
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.ПредварительноеЗакрытие КАК ПредварительноеЗакрытиеФакт,
	                      |	новаМестнаяДоставка.Ссылка КАК Доставка
	                      |ИЗ
	                      |	ВТ_ТЧ КАК ВТ_ТЧ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПредварительноеЗакрытиеРейса.Заказы КАК ПредварительноеЗакрытиеРейсаЗаказы
	                      |		ПО ВТ_ТЧ.Заказ = ПредварительноеЗакрытиеРейсаЗаказы.Заказ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	                      |		ПО ВТ_ТЧ.Заказ.Номер = новаМестнаяДоставка.Номер
	                      |ГДЕ
	                      |	ПредварительноеЗакрытиеРейсаЗаказы.Ссылка = &Ссылка_Текущ");	
	Запрос.УстановитьПараметр("ОтчетВодителя", ЭтотОбъект.ОтчетВодителя);
	Запрос.УстановитьПараметр("Ссылка_Текущ", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);	
	Рез = Запрос.Выполнить().Выбрать();
	
	
	Пока Рез.Следующий() Цикл
		
		
		Если Рез.ПредварительноеЗакрытие И НЕ Рез.ПредварительноеЗакрытиеФакт Тогда // Изменение предварительного закрытия -->
					
			
			// Если перенос
			Если Рез.ПричинаНевыполненияФакт = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки ИЛИ Рез.ПричинаНевыполненияФакт = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
			
				
				Если ИзменятьДатыДоставки Тогда
				
				// Изменение даты
				Если НачалоДня(Рез.Заказ.Дата) <> НачалоДня(Рез.ДатаПереносаФакт) Тогда
					
					
					НоваяДата = Рез.ДатаПереносаФакт;
					
					Нов = Движения.ДатыДоставок.Добавить();
					Нов.Доставка = Рез.Доставка;
					Нов.ДатаДоставки = НоваяДата;
					Нов.Период = ТекущаяДата();
					Д = Рез.Доставка.ПолучитьОбъект();
					Д.Дата = НоваяДата;
					
					ЧН = Час(Д.ВремяОтправленияС);
					ЧК = Час(Д.ВремяОтправленияПо);
					
					МН = Минута(Д.ВремяОтправленияС);
					МК = Минута(Д.ВремяОтправленияПо);
					
					ЧН_ = Час(Д.ВремяПрибытияС);
					ЧК_ = Час(Д.ВремяПрибытияПо);
					
					МН_ = Минута(Д.ВремяПрибытияС);
					МК_ = Минута(Д.ВремяПрибытияПо);		
					
					Д.ВремяОтправленияС = Дата(Формат(Год(НоваяДата), "ЧГ=") + Формат(Месяц(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
					Д.ВремяОтправленияПо = Дата(Формат(Год(НоваяДата), "ЧГ=") + Формат(Месяц(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
					
					Д.ВремяПрибытияС = Дата(Формат(Год(НоваяДата), "ЧГ=") + Формат(Месяц(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
					Д.ВремяПрибытияПо = Дата(Формат(Год(НоваяДата), "ЧГ=") + Формат(Месяц(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
					Д.Записать();
					
					
					
					УстановитьДатуВАдминке(Д.Номер, НоваяДата);

					Д_ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Д.Номер);  // , Д.Дата
					Если Не Д_.Пустая() Тогда
						Док = Д_.ПолучитьОбъект();
						Док.Дата = НоваяДата;
						Док.Записать(РежимЗаписиДокумента.Запись);
						Если Док.Проведен Тогда
							Док.Записать(РежимЗаписиДокумента.Проведение);
						КонецеСли;	
						
						МассивЗаказовДляОпределенияСмены.Добавить(Док.Ссылка); //Задача № 3345
						
					КонецеСли;
					
					Д_ = Документы.ВозвратТоваровОтПокупателя.НайтиПоНомеру(Д.Номер, Дата); // , Д.Дата
					Если Не Д_.Пустая() Тогда
						Док = Д_.ПолучитьОбъект();
						Док.Дата = НоваяДата;
						Док.Записать(РежимЗаписиДокумента.Запись);
						Если Док.Проведен Тогда
							Док.Записать(РежимЗаписиДокумента.Проведение);
						КонецеСли;	
					КонецеСли;
				
				КонецЕсли;
				КонецЕсли;
							
				// ----------------- отвязка
				Если НачалоДня(Рез.ДатаПереноса) <> НачалоДня(Рез.ДатаПереносаФакт) Тогда
					
					//отвязка от рейса						
					ЗапросРейс = Новый Запрос("ВЫБРАТЬ
					                          |	РейсЗаказы.Ссылка КАК Ссылка
					                          |ИЗ
					                          |	Документ.Рейс.Заказы КАК РейсЗаказы
					                          |ГДЕ
					                          |	РейсЗаказы.Заказ = &Заказ
					                          |	И РейсЗаказы.Ссылка.ДатаРейса < &ДатаНачалоДня
					                          |	И РейсЗаказы.Ссылка.Проведен
					                          |
					                          |СГРУППИРОВАТЬ ПО
					                          |	РейсЗаказы.Ссылка");
					ЗапросРейс.УстановитьПараметр("Заказ", Рез.Заказ);	
					ЗапросРейс.УстановитьПараметр("ДатаКонецДня", КонецДня(Рез.ДатаПереноса));
					ЗапросРейс.УстановитьПараметр("ДатаНачалоДня", НачалоДня(Рез.ДатаПереносаФакт));
					РезРейс = ЗапросРейс.Выполнить().Выбрать();
					
					ТекВр = ТекущаяДата();

					Пока РезРейс.Следующий() Цикл			
						
						Набор = РегистрыСведений.ЗаказыКОтвязкеОтРейсов.СоздатьНаборЗаписей();
						Набор.Отбор.Период.Установить(ТекВр);

						НЗапись = Набор.Добавить();
						НЗапись.Заказ = Рез.Заказ;
						НЗапись.Рейс  = РезРейс.Ссылка;
						НЗапись.Период = ТекВр;
						НЗапись.ТипОтвязки = Перечисления.ТипыОтвязкиЗаказовОтМашин.ПредварительноеЗакрытиеРейса;
						
						// Якурнов 06.08.2018 14:17:30
						НЗапись.ДокументРегистратор = Ссылка;

						Попытка
							Набор.Записать();	
						Исключение	
						КонецПопытки;
						
						// проводим все рейсы из выборки
						РейсОбъект = РезРейс.Ссылка.ПолучитьОбъект();
						
						//+++ БАО 08.06.2017 №1024 
						//Если НЕ РейсОбъект.РейсЗакрыт Тогда
						Если НЕ baoВызовСервера.РейсЗакрыт(РейсОбъект.Ссылка) Тогда
						//--- БАО 08.06.2017 №1024 
							
							Попытка
								РейсОбъект.Записать(РежимЗаписиДокумента.Запись);	
							Исключение		
							КонецПопытки;
							
							Попытка
								РейсОбъект.Записать(РежимЗаписиДокумента.Проведение);	
							Исключение
								#Если Клиент Тогда
									Сообщить("Проведение документа " + РейсОбъект.Ссылка + " не удалось");
								#КонецЕсли
							КонецПопытки;
							
						КонецЕсли;
					
					КонецЦикла;	// отвязка от рейса
							
					
				КонецЕсли; // <<-- отвязка
				
				
				
				
				//Отмена отвязки 	
				Если НачалоДня(Рез.ДатаПереноса) = НачалоДня(Рез.ДатаПереносаФакт) Тогда
					ТекВр = ТекущаяДата();
					ЗапросОтвязка = новый Запрос("ВЫБРАТЬ
					                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.Период,
					                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.Заказ,
					                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.Рейс,
					                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.ТипОтвязки,
					                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.ЗаказНайден,
					                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.ВосстановлениеРегламентом
					                             |ИЗ
					                             |	Документ.Рейс КАК РейсДок
					                             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаказыКОтвязкеОтРейсов.СрезПоследних(&Период, ) КАК ЗаказыКОтвязкеОтРейсовСрезПоследних
					                             |		ПО ЗаказыКОтвязкеОтРейсовСрезПоследних.Рейс = РейсДок.Ссылка
					                             |ГДЕ
					                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.Заказ = &Заказ
					                             |	И РейсДок.РейсМестнойДоставки = &Рейс");
					ЗапросОтвязка.УстановитьПараметр("Период", ТекВр);	
					ЗапросОтвязка.УстановитьПараметр("Рейс", ОтчетВодителя.Рейс);
					ЗапросОтвязка.УстановитьПараметр("Заказ", Рез.Заказ);
					РезОтвязка = ЗапросОтвязка.Выполнить().Выбрать();
					
					Если РезОтвязка.Следующий() Тогда
					
						Если РезОтвязка.ТипОтвязки = Перечисления.ТипыОтвязкиЗаказовОтМашин.ПредварительноеЗакрытиеРейса Тогда
										
							ЗапросРейс = Новый Запрос("ВЫБРАТЬ
							                          |	РейсЗаказы.Ссылка КАК Ссылка
							                          |ИЗ
							                          |	Документ.Рейс.Заказы КАК РейсЗаказы
							                          |ГДЕ
							                          |	РейсЗаказы.Заказ = &Заказ
							                          |	И РейсЗаказы.Ссылка.ДатаРейса > &Дата
							                          |	И РейсЗаказы.Ссылка.Проведен
							                          |
							                          |СГРУППИРОВАТЬ ПО
							                          |	РейсЗаказы.Ссылка");
							ЗапросРейс.УстановитьПараметр("Заказ", Рез.Заказ);	
							ЗапросРейс.УстановитьПараметр("Дата", КонецДня(Дата));
						
							РезРейс = ЗапросРейс.Выполнить().Выбрать();
							
							
							Пока РезРейс.Следующий() Цикл			
								Набор = РегистрыСведений.ЗаказыКОтвязкеОтРейсов.СоздатьНаборЗаписей();
								Набор.Отбор.Период.Установить(ТекВр);

								НЗапись = Набор.Добавить();
								НЗапись.Заказ = Рез.Заказ;
								НЗапись.Рейс  = РезРейс.Ссылка;
								НЗапись.Период = ТекВр;
								НЗапись.ТипОтвязки = Перечисления.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки;
								
								// Якурнов 06.08.2018 14:42:42
								НЗапись.ДокументРегистратор = Ссылка;
								
								Попытка
									Набор.Записать();	
								Исключение	
								КонецПопытки;
								
								// проводим все рейсы из выборки
								РейсОбъект = РезРейс.Ссылка.ПолучитьОбъект();
								
								//+++ БАО 08.06.2017 №1024 
								//Если НЕ РейсОбъект.РейсЗакрыт Тогда		
								Если НЕ baoВызовСервера.РейсЗакрыт(РейсОбъект.Ссылка) Тогда		
								//--- БАО 08.06.2017 №1024 
									
									Попытка			
										РейсОбъект.Записать(РежимЗаписиДокумента.Запись);	
									исключение			
									конецПопытки;
									
									Попытка
										РейсОбъект.Записать(РежимЗаписиДокумента.Проведение);	
									Исключение
										#Если Клиент Тогда
											Сообщить("Проведение документа " + РейсОбъект.Ссылка + " не удалось");
										#КонецЕсли
									КонецПопытки;
									
								КонецЕсли;
								
							КонецЦикла;	
												
						КонецЕсли;	
						
					КонецЕсли;
					
				КонецЕсли;  //Отмена отвязки
				
					
				
				
			Иначе // нет переноса		
				
				НоваяДата = Рез.ТекущаяДатаДоставки;
				
				Если ИзменятьДатыДоставки Тогда
				
				// ---------------- возврат даты								
				Если НачалоДня(Рез.Заказ.Дата) <> НачалоДня(НоваяДата) Тогда	
					
					Нов = Движения.ДатыДоставок.Добавить();
					Нов.Доставка = Рез.Доставка;
					Нов.ДатаДоставки = НоваяДата;
					Нов.Период = ТекущаяДата();
					Д = Рез.Доставка.ПолучитьОбъект();
					Д.Дата = НоваяДата;
					
					ЧН = Час(Д.ВремяОтправленияС);
					ЧК = Час(Д.ВремяОтправленияПо);
					
					МН = Минута(Д.ВремяОтправленияС);
					МК = Минута(Д.ВремяОтправленияПо);
					
					ЧН_ = Час(Д.ВремяПрибытияС);
					ЧК_ = Час(Д.ВремяПрибытияПо);
					
					МН_ = Минута(Д.ВремяПрибытияС);
					МК_ = Минута(Д.ВремяПрибытияПо);		
					
					Д.ВремяОтправленияС = Дата(Формат(Год(НоваяДата), "ЧГ=") + Формат(Месяц(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
					Д.ВремяОтправленияПо = Дата(Формат(Год(НоваяДата), "ЧГ=") + Формат(Месяц(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
					
					Д.ВремяПрибытияС = Дата(Формат(Год(НоваяДата), "ЧГ=") + Формат(Месяц(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
					Д.ВремяПрибытияПо = Дата(Формат(Год(НоваяДата), "ЧГ=") + Формат(Месяц(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(НоваяДата), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
					Д.Записать();
					
					
					
					УстановитьДатуВАдминке(Д.Номер, НоваяДата);

					Д_ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Д.Номер);  // , Д.Дата
					Если Не Д_.Пустая() Тогда
						Док = Д_.ПолучитьОбъект();
						Док.Дата = НоваяДата;
						Док.Записать(РежимЗаписиДокумента.Запись);
						Если Док.Проведен Тогда
							Док.Записать(РежимЗаписиДокумента.Проведение);
						КонецеСли;	
						
						МассивЗаказовДляОпределенияСмены.Добавить(Док.Ссылка); //Задача № 3345

					КонецеСли;
					
					Д_ = Документы.ВозвратТоваровОтПокупателя.НайтиПоНомеру(Д.Номер, Дата); // , Д.Дата
					Если Не Д_.Пустая() Тогда
						Док = Д_.ПолучитьОбъект();
						Док.Дата = НоваяДата;
						Док.Записать(РежимЗаписиДокумента.Запись);
						Если Док.Проведен Тогда
							Док.Записать(РежимЗаписиДокумента.Проведение);
						КонецеСли;	
					КонецеСли;
				
				КонецЕсли;
				КонецЕсли;

				
				// ----------------- отвязка от рейса					
				ЗапросРейс = Новый Запрос("ВЫБРАТЬ
				                          |	РейсЗаказы.Ссылка КАК Ссылка
				                          |ИЗ
				                          |	Документ.Рейс.Заказы КАК РейсЗаказы
				                          |ГДЕ
				                          |	РейсЗаказы.Заказ = &Заказ
				                          |	И РейсЗаказы.Ссылка.ДатаРейса > &ДатаКонецДня
				                          |	И РейсЗаказы.Ссылка.Проведен
				                          |
				                          |СГРУППИРОВАТЬ ПО
				                          |	РейсЗаказы.Ссылка");
				ЗапросРейс.УстановитьПараметр("Заказ", Рез.Заказ);	
				ЗапросРейс.УстановитьПараметр("ДатаКонецДня", КонецДня(Рез.ТекущаяДатаДоставки));
				//ЗапросРейс.УстановитьПараметр("ДатаНачалоДня", НачалоДня(НоваяДата));
				РезРейс = ЗапросРейс.Выполнить().Выбрать();
				
				ТекВр = ТекущаяДата();

				Пока РезРейс.Следующий() Цикл			
					
					Набор = РегистрыСведений.ЗаказыКОтвязкеОтРейсов.СоздатьНаборЗаписей();
					Набор.Отбор.Период.Установить(ТекВр);

					НЗапись = Набор.Добавить();
					НЗапись.Заказ = Рез.Заказ;
					НЗапись.Рейс  = РезРейс.Ссылка;
					НЗапись.Период = ТекВр;
					НЗапись.ТипОтвязки = Перечисления.ТипыОтвязкиЗаказовОтМашин.ПредварительноеЗакрытиеРейса;
					
					// Якурнов 06.08.2018 14:05:14
					НЗапись.ДокументРегистратор = Ссылка;

					Попытка
						Набор.Записать();	
					Исключение	
					КонецПопытки;
					
					// проводим все рейсы из выборки
					РейсОбъект = РезРейс.Ссылка.ПолучитьОбъект();
					
					//+++ БАО 08.06.2017 №1024 
					//Если НЕ РейсОбъект.РейсЗакрыт Тогда
					Если НЕ baoВызовСервера.РейсЗакрыт(РейсОбъект.Ссылка) Тогда
					//--- БАО 08.06.2017 №1024 	
						
						Попытка
							РейсОбъект.Записать(РежимЗаписиДокумента.Запись);	
						Исключение		
						КонецПопытки;
						
						Попытка
							РейсОбъект.Записать(РежимЗаписиДокумента.Проведение);	
						Исключение
							#Если Клиент Тогда
								Сообщить("Проведение документа " + РейсОбъект.Ссылка + " не удалось");
							#КонецЕсли
						КонецПопытки;
						
					КонецЕсли;
				
				КонецЦикла;	// отвязка от рейса <--
				
			
			КонецЕсли;  
			
			
		КонецЕсли; // предварительное закрытие <--
					
		
	КонецЦикла;

	МаршрутизацияЗаказовСервер.УстановкаСменыДляЗаказов(МассивЗаказовДляОпределенияСмены); //Задача № 3345
	
КонецПроцедуры

Процедура ДвижениеПоСтатусамПредварительногоЗакрытияРейсов()
	Движения.СтатусыПредварительногоЗакрытияРейсов.Очистить();
	Движения.СтатусыПредварительногоЗакрытияРейсов.Записывать = Истина;
	
	//Асеев 17.08.2023 (Задача № 5105)>>>
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ОтчетВодителя", ОтчетВодителя);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПредварительноеЗакрытиеРейсаЗаказы.Заказ КАК Заказ,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПредварительногоЗакрытияРейсов.РейсЗакрытПредварительно) КАК СтатусПредварительногоЗакрытияРейса,
	|	Т_Рейс.Ссылка КАК РейсРесурс,
	|	Т_Рейс.ДатаРейса КАК ДатаРейса,
	|	ВЫБОР
	|		КОГДА ПредварительноеЗакрытиеРейсаЗаказы.ПредварительноеЗакрытие
	|			ТОГДА ПредварительноеЗакрытиеРейсаЗаказы.ДатаПереноса
	|	КОНЕЦ КАК ДатаДоставкиЗаказа,
	|	Т_Рейс.Ссылка КАК Рейс,
	|	&Пользователь КАК Пользователь
	|ИЗ
	|	Документ.ПредварительноеЗакрытиеРейса.Заказы КАК ПредварительноеЗакрытиеРейсаЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс КАК Т_Рейс
	|			ПО новаОтчетВодителя.Рейс = Т_Рейс.РейсМестнойДоставки
	|				И (Т_Рейс.Проведен)
	|		ПО (ПредварительноеЗакрытиеРейсаЗаказы.Ссылка = &Ссылка)
	|			И (новаОтчетВодителя.Ссылка = &ОтчетВодителя)";
	
	Движения.СтатусыПредварительногоЗакрытияРейсов.Загрузить(Запрос.Выполнить().Выгрузить());
	//Асеев 17.08.2023 (Задача № 5105)<<<
	
КонецПроцедуры	

