
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Проверка заполнения
	Перем Заголовок;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = "Проведение документа """ + СокрЛП(Ссылка) + """: ";
	
	спОшибки = Новый Массив;
	// Проверка заполнения шапки
	СтруктураОбязательныхПолей = Новый Структура("АЗС");
	Для Каждого ОбязательноеПоле Из СтруктураОбязательныхПолей Цикл
		Если Не ЗначениеЗаполнено(ЭтотОбъект[ОбязательноеПоле.Ключ]) Тогда
			спОшибки.Добавить("  Не заполнен реквизит "+ОбязательноеПоле.Ключ+".");
		КонецЕсли;
	КонецЦикла;
		
	СтруктураОбязательныхПолей = Новый Структура("Транспорт, Бак, Количество, Дата");
	Для Каждого СтрокаЗаправки из Заправки Цикл
		Для Каждого ОбязательноеПоле Из СтруктураОбязательныхПолей Цикл
			Если Не ЗначениеЗаполнено(СтрокаЗаправки[ОбязательноеПоле.Ключ]) Тогда
				спОшибки.Добавить("  В строке номер " + СтрокаЗаправки.НомерСтроки +" не заполнен реквизит "+ОбязательноеПоле.Ключ+".");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если спОшибки.Количество() <> 0 Тогда
		Отказ = Истина;
		Сообщить(Заголовок,СтатусСообщения.Важное);
		Для Каждого Ошибка из спОшибки Цикл
			Сообщить(Ошибка);
		КонецЦикла;
	КонецЕсли;
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(Отказ, РежимПроведения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДвиженияПоРегистрам(Отказ, РежимПроведения)
	
	// Движения по регистру ОстаткиГСМ
	Для Каждого СтрокаЗаправки Из Заправки Цикл
		Движение = Движения.новаОстаткиГСМ.ДобавитьПриход();
		Движение.Период		 = СтрокаЗаправки.Дата + (СтрокаЗаправки.Время - НачалоДня(СтрокаЗаправки.Время));
//		Движение.Транспорт	 = СтрокаЗаправки.Транспорт;
		Движение.Бак		 = СтрокаЗаправки.Бак;
		Движение.Количество  = СтрокаЗаправки.Количество;
		Движение.Стоимость	 = СтрокаЗаправки.Сумма;
		Движение.ПутевойЛист = СтрокаЗаправки.ПутевойЛист;
	КонецЦикла;
	
КонецПроцедуры
