
&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
    ПериодПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПериодПриИзмененииНаСервере()
    Объект.НачалоПериода = Период.ДатаНачала;
    Объект.КонецПериода  = Период.ДатаОкончания;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    Период.ДатаНачала = Объект.НачалоПериода;
    Период.ДатаОкончания = Объект.КонецПериода;
КонецПроцедуры

&НаСервере
//&НаКлиенте
Процедура ЗаполнитьНаСервере()
    Объект.Заказы.Очистить();
    //ТаблицаКРаспределению = Объект.Заказы.Выгрузить();
    
    Запрос = Новый Запрос;
    Запрос.Текст = ТекстЗапросаЗаполнитьНаСервере();
    Запрос.УстановитьПараметр("НачалоПериода",Объект.НачалоПериода);
    Запрос.УстановитьПараметр("КонецПериода",Объект.КонецПериода);
    Договора = Новый СписокЗначений;
    //Договора.Добавить(Справочники.СубагентскиеДоговоры.НайтиПоКоду("00000000003"));//Стриж+Стриж
    //Договора.Добавить(Справочники.СубагентскиеДоговоры.НайтиПоКоду("00000000004"));//Стриж+ЗАО
    Для каждого Стр Из Объект.ДоговорыСубагентов Цикл
        Договора.Добавить(Стр.Договор);
    КонецЦикла;
    Запрос.УстановитьПараметр("Договор",Договора);
    Запрос.УстановитьПараметр("СтатусИнтернетМагазина",Справочники.СтатусЗаказаИнтернетМагазина.ЗаказЗакрыт);
    Результат = Запрос.Выполнить().Выгрузить();
    
    Объект.ДоговорыСубагентовКРасчету.Сортировать("ДатаНачалаДоговора Возр");
	
	
	МасНомеров = Новый Массив;
	
	//Сч = 0;
	//Для каждого Стр Из Объект.ДоговорыСубагентовКРасчету Цикл
	//    
	//    РаспределеннаяСумма = 0;
	//    СуммаКРаспределению = Стр.СуммаКРаспределению;
	//    
	//    Пока Сч<= Результат.Количество()-1 Цикл
	//        Если Стр.ДатаНачалаДоговора <= Результат[Сч].Период ИЛИ НЕ ЗначениеЗаполнено(Стр.ДатаНачалаДоговора) Тогда
	//            СуммаЗаказа = Результат[Сч].СуммаОценочная;
	//			//Если СуммаЗаказа < 0 Тогда
	//			//	Продолжить;
	//			//КонецеСли;	
	//            СуммаДоставкиДоМКАД = Результат[Сч].СуммаДоставкиДоМКАД;
	//            СуммаДоставкиЗаМКАД = Результат[Сч].СуммаДоставкиЗаМКАД;
	//            РаспределеннаяСумма = РаспределеннаяСумма+СуммаЗаказа+СуммаДоставкиДоМКАД+СуммаДоставкиЗаМКАД;
	//            Если РаспределеннаяСумма<= СуммаКРаспределению Тогда
	//                СтрокаЗаказы = Объект.Заказы.Добавить();
	//                ЗаполнитьЗначенияСвойств(СтрокаЗаказы,Результат[Сч]);
	//                СтрокаЗаказы.Договор = Стр.Договор;
	//                СтрокаЗаказы.Субагент = Стр.Контрагент;
	//            Иначе
	//                СтрокаЗаказы = Объект.Заказы.Добавить();
	//                ЗаполнитьЗначенияСвойств(СтрокаЗаказы,Результат[Сч]);
	//                СтрокаЗаказы.Договор = Стр.Договор;
	//                СтрокаЗаказы.Субагент = Стр.Контрагент;
	//                Стр.СуммаРаспределенная = РаспределеннаяСумма;
	//                Сч = Сч+1;   
	//                Прервать;
	//			КонецЕсли;
	//			
	//			МасНомеров.Добавить(СокрЛП(СтрокаЗаказы.Реализация.Номер));
	//        КонецЕсли;
	//        Сч = Сч+1;   
	//    КонецЦикла;
	//    
	//КонецЦикла;
	
	Сч = - 1;
	Кол = Объект.ДоговорыСубагентовКРасчету.Количество();
	Для Каждого Тек Из Результат Цикл
		
		
		Сч = Сч + 1;
		Если Сч > Кол - 1 Тогда
			Сч = 0;
		КонецеСли;	
		
		
		Для Каждого ТекК_ Из Объект.ДоговорыСубагентовКРасчету Цикл
			ТекК = Объект.ДоговорыСубагентовКРасчету[Сч];
			Если ТекК.СуммаКРаспределению < ТекК.СуммаРаспределенная Тогда
				Сч = Сч + 1;
				Если Сч > Кол - 1 Тогда
					Сч = 0;
				КонецеСли;	
				
				Продолжить;
			КонецеСли;
			
			Если ЗначениеЗаполнено(ТекК.ДатаНачалаДоговора) Тогда
				Если Тек.Период <= ТекК.ДатаНачалаДоговора Тогда
					Сч = Сч + 1;
					Если Сч > Кол - 1 Тогда
						Сч = 0;
					КонецеСли;	
					Продолжить;
				КонецеСли;	
			КонецеСли;	
			
			
			СуммаЗаказа = Тек.ОплаченоКлиентовНал;
			// с января по новому Тек.СуммаОценочная + Тек.СуммаДоставкиДоМКАД + Тек.СуммаДоставкиЗаМКАД;
			
			СтрокаЗаказы = Объект.Заказы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаЗаказы, Тек);
			СтрокаЗаказы.Договор = ТекК.Договор;
			СтрокаЗаказы.Субагент = ТекК.Контрагент;
			ТекК.СуммаРаспределенная = ТекК.СуммаРаспределенная + СуммаЗаказа;
			МасНомеров.Добавить(СокрЛП(Тек.НомерЗаказа));
			Прервать;
		КонецЦикла;	
	КонецЦикла;	
	
	
	ВыполнитьПересчет(МасНомеров);
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаЗаполнитьНаСервере()

Возврат "ВЫБРАТЬ
        |	УчетСубагентов.ЮрЛицо,
        |	УчетСубагентов.Договор,
        |	УчетСубагентов.ТипОплаты,
        |	УчетСубагентов.ИнтернетМагазин,
        |	УчетСубагентов.Реализация,
        |	УчетСубагентов.СтатусЗаказа,
        |	УчетСубагентов.ПричинаНевыполнения,
        |	УчетСубагентов.СтатусИнтернетМагазина,
        |	УчетСубагентов.ПричинаОтказа,
        |	УчетСубагентов.ТарифнаяСетка,
        |	ВЫРАЗИТЬ(УчетСубагентов.КатегорияДоставки КАК Справочник.КатегорииДоставки2014) КАК КатегорияДоставки,
        |	УчетСубагентов.ТипЗаказа,
        |	УчетСубагентов.РасчетныйБрейк,
        |	УчетСубагентов.ТарифнаяСеткаПартнера,
        |	УчетСубагентов.ЗонаТарификации,
        |	УчетСубагентов.ТарифныйПлан,
        |	УчетСубагентов.РассчитаноПоТарифномуПлану,
        |	УчетСубагентов.СуммаОценочная,
        |	УчетСубагентов.СуммаПолученная,
        |	УчетСубагентов.СуммаДоставкиДоМКАД,
        |	УчетСубагентов.СуммаДоставкиЗаМКАД,
        |	УчетСубагентов.УслугиСД,
        |	УчетСубагентов.БанковскаяКомиссия,
        |	УчетСубагентов.КассовоеОбслуживание,
        |	УчетСубагентов.СуммаВозврата,
        |	УчетСубагентов.Масса,
        |	УчетСубагентов.СуммаЧастичногоВозврата,
        |	УчетСубагентов.ОплаченоКлиентовНал,
        |	УчетСубагентов.АгентскоеВознаграждение,
        |	УчетСубагентов.ПредоплатаПоКредиту,
        |	УчетСубагентов.СтраховойСбор,
        |	УчетСубагентов.Поступление,
        |	УчетСубагентов.Списание,
        |	УчетСубагентов.Оприходование,
        |	УчетСубагентов.Перемещение,
        |	УчетСубагентов.Доставка,
        |	УчетСубагентов.Возврат,
        |	УчетСубагентов.ПризнакВозврата,
        |	УчетСубагентов.Период,
        |	УчетСубагентов.Реализация.Номер КАК НомерЗаказа
        |ИЗ
        |	РегистрНакопления.УчетСубагентов КАК УчетСубагентов
        |ГДЕ
        |	УчетСубагентов.Период МЕЖДУ &НачалоПериода И &КонецПериода
        |	И УчетСубагентов.Договор В(&Договор)
        |	И УчетСубагентов.СтатусИнтернетМагазина = &СтатусИнтернетМагазина
        |	И УчетСубагентов.СуммаОценочная > 0";	

КонецФункции 


&НаКлиенте
Процедура Заполнить(Команда)
    ЗаполнитьНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ДоговорыСубагентовКРасчетуДатаНачалаДоговораПриИзменении(Элемент)
    ТекущиеДанные = Элементы.ДоговорыСубагентовКРасчету.ТекущиеДанные;
    Если ТекущиеДанные <> Неопределено Тогда
        Если НЕ (ТекущиеДанные.ДатаНачалаДоговора >Объект.НачалоПериода И ТекущиеДанные.ДатаНачалаДоговора<Объект.КонецПериода) Тогда
            ТекущиеДанные.ДатаНачалаДоговора = Дата("00010101");
            Сообщить("Дата не соответсвует выбранному периоду.");
        КонецЕсли;
    КонецЕсли;
        
КонецПроцедуры

&НаСервере
//&НаКлиенте
Процедура ВыполнитьПересчет(МасНомеров)
	Подключение = Евген.СоздатьПодключениеКИнтернетМагазину();
	РезАдминка = Неопределено;
	
	//+++ БАО 13.10.2017 №1964 
	ТекстЗапроса = "create table #orderList (orderID Int Not Null)" + Символы.ПС;
	//+++ БАО 13.10.2017 №1964 
	
	Если МасНомеров.Количество() > 0 Тогда
		НомераМ = "";
		Для Каждого СтрМ из МасНомеров Цикл
			//+++ БАО 13.10.2017 №1964
			//---НомераМ = НомераМ + "," + СокрЛП(СтрМ);
			Попытка
				НомерЧисло = Число(СокрЛП(СтрМ));
			Исключение
				Продолжить;
			КонецПопытки;
			
			ТекстЗапроса = ТекстЗапроса + "insert  #orderList(orderID) values(" + СокрЛП(СтрМ) + ")" + Символы.ПС; 
			
			//--- БАО 13.10.2017 №1964
			
		КонецЦикла;
		Попытка	
			//RS = Евген.ЗапросКИнтернетМагазину("
			//|SELECT 
			//|	O.baseSumForServices AS База,
			//|	O.orderIDStr AS Номер
			//|FROM
			//|mv_orders O 
			//|WHERE
			//|O.orderID IN("+Сред(НомераМ,2)+")", Подключение);
			
			ТекстЗапроса = ТекстЗапроса + "
			|SELECT 
			|	O.baseSumForServices AS База,
			|	O.orderIDStr AS Номер
			|FROM
			|mv_orders O
			|INNER JOIN #orderList OL On O.orderID = OL.orderID";
			
			RS = Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Подключение);
			
			
			РезАдминка = Евген.СоздатьТаблицу(RS, "База_Ч, Номер");
		Исключение	
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
	
	
	// МАС - 13.11.2017 - №2032 --->> 
	Если Объект.ТарифныйПлан = Справочники.ТарифныеПланы.ОсновнойТарифВторогоУровня ИЛИ НЕ ЗначениеЗаполнено(Объект.ТарифныйПлан) Тогда  // старый код
		
		Для Каждого Тек Из Объект.Заказы Цикл
			Если РезАдминка = Неопределено Тогда						
				НайАдм = Неопределено;
			Иначе
				НайАдм = РезАдминка.Найти(СокрЛП(Тек.Реализация.Номер));
			КонецЕсли;
			
			
			Если НайАдм <> Неопределено Тогда
				Тек.АгентскоеВознаграждение = Окр(НайАдм.База_Ч*0.9/100, 2);
			Иначе
				Тек.АгентскоеВознаграждение = 0;
			КонецеСли;	
			
			ЭтоМосква = Истина;
			Если СокрЛП(Тек.ЗонаТарификации.Код) = "00000000003" Или СокрЛП(Тек.ЗонаТарификации.Код) = "00000000030"  Или СокрЛП(Тек.ЗонаТарификации.Код) = "00000000031" Тогда
				ЭтоМосква = Истина;
			Иначе
				ЭтоМосква = Ложь;
			КонецеСли;
			
			Если Объект.НачалоПериода < Дата("20160701000000") Тогда
				Если Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.МГТ1 Или Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.МГТ2 Тогда
					Если ЭтоМосква Тогда
						Тек.УслугиСД = 120;
					Иначе
						Тек.УслугиСД = 200;
					КонецЕСли;
				ИначеЕсли Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.СГТ1 Или Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.СГТ2 Тогда	
					Если ЭтоМосква Тогда
						Тек.УслугиСД = 225;
					Иначе
						Тек.УслугиСД = 315;
					КонецЕСли;
				ИначеЕсли Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.КГТ1 Или Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.КГТ2 Тогда	
					Если ЭтоМосква Тогда
						Тек.УслугиСД = 475;
					Иначе
						Тек.УслугиСД = 570;
					КонецЕСли;
				КонецеСли;
			Иначе
				Если Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.МГТ1 Или Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.МГТ2 Тогда
					Если ЭтоМосква Тогда
						Тек.УслугиСД = 145;
						////питер
					ИначеЕсли Тек.ЗонаТарификации = Справочники.ГруппыРайонов.СПб Тогда
						Тек.УслугиСД = 240;
					ИначеЕсли Тек.ЗонаТарификации = Справочники.ГруппыРайонов.КАД_30 Тогда
						Тек.УслугиСД = 475;					
						////питер
					Иначе
						Тек.УслугиСД = 235;
					КонецЕСли;
				ИначеЕсли Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.СГТ1 Или Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.СГТ2 Тогда	
					Если ЭтоМосква Тогда
						Тек.УслугиСД = 255;
						////питер
					ИначеЕсли Тек.ЗонаТарификации = Справочники.ГруппыРайонов.СПб Тогда
						Тек.УслугиСД = 495;
					ИначеЕсли Тек.ЗонаТарификации = Справочники.ГруппыРайонов.КАД_30 Тогда
						Тек.УслугиСД = 730;					
						////питер					
					Иначе
						Тек.УслугиСД = 355;
					КонецЕСли;
				ИначеЕсли Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.КГТ1 Или Тек.КатегорияДоставки = Справочники.КатегорииДоставки2014.КГТ2 Тогда	
					Если ЭтоМосква Тогда
						Тек.УслугиСД = 525;
						////питер
					ИначеЕсли Тек.ЗонаТарификации = Справочники.ГруппыРайонов.СПб Тогда
						Тек.УслугиСД = 920;
					ИначеЕсли Тек.ЗонаТарификации = Справочники.ГруппыРайонов.КАД_30 Тогда
						Тек.УслугиСД = 1180;					
						////питер										
					Иначе
						Тек.УслугиСД = 650;
					КонецЕСли;
				КонецеСли;
			КонецеСли;
		КонецЦикла;
		
	
	Иначе  // новый код
		
		МасЗаказов = Объект.Заказы.Выгрузить(, "Реализация");
		ЗапросВес = Новый Запрос("ВЫБРАТЬ
		                         |	ЗакрытыеЗаказы.Реализация КАК Заказ,
		                         |	ЕСТЬNULL(ЗакрытыеЗаказы.ТарифицируемыйВес, 0) КАК Вес
		                         |ИЗ
		                         |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
		                         |ГДЕ
		                         |	ЗакрытыеЗаказы.Реализация.Ссылка В(&МасЗаказов)");
		ЗапросВес.УстановитьПараметр("МасЗаказов", МасЗаказов);
		ВесТЗ = ЗапросВес.Выполнить().Выгрузить();
		
				
		Для Каждого Тек Из Объект.Заказы Цикл
			
			Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
				ЗапросБрейки = Новый Запрос(
				"ВЫБРАТЬ
				|	ТарификацияРасчетаУслугСДСрезПоследних.СтоимостьУслугиСД
				|ИЗ
				|	РегистрСведений.ТарификацияРасчетаУслугСД.СрезПоследних КАК ТарификацияРасчетаУслугСДСрезПоследних
				|ГДЕ
				|	ТарификацияРасчетаУслугСДСрезПоследних.Тариф = &Тариф
				|	И ТарификацияРасчетаУслугСДСрезПоследних.ТипЗаказа = &ТипЗаказа");
			Иначе
				ЗапросБрейки = Новый Запрос(
				"ВЫБРАТЬ
				|	ТарифныеПланыДоступныеБрейки.РасчетныйБрейк КАК РасчетныйБрейк,
				|	ТарифныеПланыДоступныеБрейки.Ссылка КАК ТарифСсылка
				|ПОМЕСТИТЬ ВремБрейк
				|ИЗ
				|	Справочник.ТарифныеПланы.ДоступныеБрейки КАК ТарифныеПланыДоступныеБрейки
				|ГДЕ
				|	ТарифныеПланыДоступныеБрейки.РасчетныйБрейк.ВесОт <= &ВесЗаказа
				|	И ТарифныеПланыДоступныеБрейки.РасчетныйБрейк.ВесДо > &ВесЗаказа
				|	И ТарифныеПланыДоступныеБрейки.Ссылка = &Тариф
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТарификацияРасчетаУслугСДСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
				|	ТарификацияРасчетаУслугСДСрезПоследних.СтоимостьУслугиСД КАК СтоимостьУслугиСД,
				|	ТарификацияФинансовыхУслугСрезПоследних.ПроцентАгентскогоВознаграждения КАК ПроцентАгентскогоВознаграждения
				|ИЗ
				|	ВремБрейк КАК ВремБрейк
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТарификацияРасчетаУслугСД.СрезПоследних КАК ТарификацияРасчетаУслугСДСрезПоследних
				|		ПО (ТарификацияРасчетаУслугСДСрезПоследних.РасчетныйБрейк = ВремБрейк.РасчетныйБрейк)
				|			И ВремБрейк.ТарифСсылка = ТарификацияРасчетаУслугСДСрезПоследних.Тариф
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарификацияФинансовыхУслуг.СрезПоследних КАК ТарификацияФинансовыхУслугСрезПоследних
				|		ПО ВремБрейк.ТарифСсылка = ТарификацияФинансовыхУслугСрезПоследних.Тариф
				|ГДЕ
				|	ТарификацияРасчетаУслугСДСрезПоследних.ЗонаДоставки = &ЗонаДоставки
				|	И ТарификацияРасчетаУслугСДСрезПоследних.ТипЗаказа = &ТипЗаказа");
			КонецЕсли;
			
			
			НайВес = ВесТЗ.НайтиСтроки(Новый Структура("Заказ", Тек.Реализация));
			Если НайВес.Количество() Тогда			
				Вес = НайВес[0].Вес;			
			Иначе		
				Вес = 0;		
			КонецЕсли;
			
			
			ЗапросБрейки.УстановитьПараметр("ВесЗаказа"   , Вес);
			ЗапросБрейки.УстановитьПараметр("Тариф"       , Объект.ТарифныйПлан);
			ЗапросБрейки.УстановитьПараметр("ЗонаДоставки", Тек.ЗонаТарификации);
			ЗапросБрейки.УстановитьПараметр("ТипЗаказа"   , Тек.ТипЗаказа);
			СтоимостьУслугиСД = ЗапросБрейки.Выполнить().Выбрать();              
			
			Если СтоимостьУслугиСД.Следующий() Тогда
				Тек.УслугиСД = СтоимостьУслугиСД.СтоимостьУслугиСД;
				Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
					Тек.РасчетныйБрейк = Справочники.РасчетныеБрейки.ПустаяСсылка();
				Иначе	
					Тек.РасчетныйБрейк = СтоимостьУслугиСД.РасчетныйБрейк;
				КонецЕсли;
				
				
				// МАС - 12.12.2017 - № --->> 			
				Если РезАдминка = Неопределено Тогда						
					НайАдм = Неопределено;
				Иначе
					НайАдм = РезАдминка.Найти(СокрЛП(Тек.Реализация.Номер));
				КонецЕсли;	
				
				Если НайАдм <> Неопределено Тогда
					Тек.АгентскоеВознаграждение = Окр(НайАдм.База_Ч * СтоимостьУслугиСД.ПроцентАгентскогоВознаграждения / 100, 2);
				Иначе
					Тек.АгентскоеВознаграждение = 0;
				КонецеСли;			
				// <<--- МАС 		
				
			Иначе
				Тек.УслугиСД = 0;
				Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
					Тек.РасчетныйБрейк = Справочники.РасчетныеБрейки.ПустаяСсылка();
				Иначе
					//Тек.РасчетныйБрейк = СтоимостьУслугиСД.РасчетныйБрейк;
				КонецЕсли;
			КонецЕсли;
					
			
		КонецЦикла;
		
		
	
	КонецЕсли;
	// <<--- МАС
	
		
КонецПроцедуры	

&НаКлиенте
Процедура Пересчет(Команда)
	
	МасНомеров = Новый Массив;
	
	//Для Каждого Тек Из Объект.Заказы Цикл
	//	МасНомеров.Добавить(СокрЛП(Тек.Реализация.Номер));
	//КонецЦикла;	
	
	Зап = Новый Запрос;
    Зап.Текст = "ВЫБРАТЬ
                |	РасчетСубагентовДополнительныйЗаказы.Реализация.Номер КАК МасНомеров
                |ИЗ
                |	Документ.РасчетСубагентовДополнительный.Заказы КАК РасчетСубагентовДополнительныйЗаказы
                |ГДЕ
                |	РасчетСубагентовДополнительныйЗаказы.Ссылка = &Док";
	Зап.УстановитьПараметр("Док", Объект.Ссылка);
	
	МасНомеров = Зап.Выполнить().Выгрузить().ВыгрузитьКолонку("МасНомеров");
	Для Каждого Тек Из МасНомеров Цикл
		Тек = СокрЛП(Тек);
	КонецЦикла;	
	
	
	ВыполнитьПересчет(МасНомеров);
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
	
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	АктивныеТарифныеПланыСубагентовВторогоУровняСрезПоследних.ТарифныйПлан КАК ТарифныйПлан
		                      |ИЗ
		                      |	РегистрСведений.АктивныеТарифныеПланыСубагентовВторогоУровня.СрезПоследних(&Период, ДоговорАктивен = ИСТИНА) КАК АктивныеТарифныеПланыСубагентовВторогоУровняСрезПоследних");
		Запрос.УстановитьПараметр("Период", ТекущаяДата());
		Рез = Запрос.Выполнить().Выбрать();
		
		Если Рез.Следующий() Тогда			
			Объект.ТарифныйПлан = Рез.ТарифныйПлан;			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

