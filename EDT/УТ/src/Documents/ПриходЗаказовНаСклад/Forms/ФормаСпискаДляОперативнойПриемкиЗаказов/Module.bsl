Перем ВыбЗнач;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	//Элементы.Список.Период = Новый СтандартныйПериод(ВариантСтандартногоПериода.Сегодня);
	
	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоказатьБезАПП.Пометка = Ложь;
	Элементы.ГруппаБезАПП.Видимость = Ложь;	
	
КонецПроцедуры

&НаКлиенте

Процедура Заполнить(Команда)
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда	
		//Струк = СписокВыборНаСервере();
		ТекДанные = Элементы.Список.ТекущиеДанные;
		Струк = Новый Структура("Ключ", ТекДанные.ФактическийПриход);
		
		Если ЗначениеЗаполнено(ТекДанные.ФактическийПриход) Тогда
			Форма = ПолучитьФорму("Документ.ФактическийПриходЗаказовНаСклад.Форма.ФормаДокументаОперативнаяПриемка", Струк);
			Форма.Открыть();
		Иначе		
			ДокСсылка = СоздатьФактПриходНаСервере(Элементы.Список.ТекущаяСтрока);
			//Док.ПолучитьФорму("Документ.ФактическийПриходЗаказовНаСклад.Форма.ФормаДокументаОперативнаяПриемка").Открыть();
			
			Форма = ПолучитьФорму("Документ.ФактическийПриходЗаказовНаСклад.Форма.ФормаДокументаОперативнаяПриемка", Новый Структура("Ключ", ДокСсылка));
			//Форма.Объект.Апп = Элементы.Список.ТекущаяСтрока;
		КонецеСли;	
		Форма.Открыть();
	КонецеСли;
	
КонецПроцедуры


Функция СоздатьФактПриходНаСервере(Основание)

	Док = Документы.ФактическийПриходЗаказовНаСклад.СоздатьДокумент();
	//Док.ШКПоМестам = Основание.ШтрихкодыПоМестам.Количество();

	// МАС - 26.09.2017 - № --->> 
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПараметрыКонтрагентовСрезПоследних.ТипОперативнойПриемки КАК ТипОперативнойПриемки
	                      |ИЗ
	                      |	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(, Контрагент = &Контрагент) КАК ПараметрыКонтрагентовСрезПоследних");
	Запрос.УстановитьПараметр("Контрагент", Основание.Контрагент);
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() И ЗначениеЗаполнено(Рез.ТипОперативнойПриемки) Тогда		
		Если Рез.ТипОперативнойПриемки = Перечисления.ТипыОперативнойПриемки.БезШКПоМестам Тогда			
			Док.ШКПоМестам = Ложь;	
		ИначеЕсли Рез.ТипОперативнойПриемки = Перечисления.ТипыОперативнойПриемки.ШКПоМестам Тогда
			Док.ШКПоМестам = Истина;
		Иначе
			Док.ШКПоМестам = Основание.ШтрихкодыПоМестам.Количество();
		КонецЕсли;			
	Иначе		
		Док.ШКПоМестам = Основание.ШтрихкодыПоМестам.Количество();	
	КонецЕсли;
	// <<--- МАС 
	
	
	Док.Заполнить(Основание);
	Док.Дата = ТекущаяДата();
	Док.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат Док.Ссылка;
	
КонецФункции // ()


//Асеев 11.02.2022 (по письму Электронный документ ОП)>>>
&НаКлиенте
Процедура СоздатьИОткрытьФактПрихода(ТекСтрока)
	
	НовыйфактПриход = СоздатьФактПриход(ТекСтрока);
	Форма = ПолучитьФорму("Документ.ФактическийПриходЗаказовНаСклад.Форма.ФормаДокументаОперативнаяПриемка", Новый Структура("Ключ", НовыйфактПриход));
	Форма.Открыть();			
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаСообщенияПроверкиГотовностиМест(ДопПараметры) Экспорт
	
	СоздатьИОткрытьФактПрихода(ДопПараметры.ТекСтрока);
	
КонецПроцедуры
//Асеев 11.02.2022 (по письму Электронный документ ОП)<<<


&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда	
		
		ТекДанные = Элементы.Список.ТекущиеДанные;
		Струк = Новый Структура("Ключ", ТекДанные.ФактическийПриход);
		//Струк = СписокВыборНаСервере();
		Если ЗначениеЗаполнено(ТекДанные.ФактическийПриход) Тогда
			Форма = ПолучитьФорму("Документ.ФактическийПриходЗаказовНаСклад.Форма.ФормаДокументаОперативнаяПриемка", Струк);
			Форма.Открыть();
		Иначе
			
			// МАС - 19.04.2018 - № --->> 
			//НовыйфактПриход = СоздатьФактПриход(Элементы.Список.ТекущаяСтрока);
			//Форма = ПолучитьФорму("Документ.ФактическийПриходЗаказовНаСклад.Форма.ФормаДокументаОперативнаяПриемка", Новый Структура("Ключ", НовыйфактПриход));
			//Форма.Открыть();
			//Асеев 11.02.2022 (по письму Электронный документ ОП)>>>
			ТекстСообщения = "";
			//НеСоздаватьМестаЗаказовПоПриходнымАПП = Ложь = Создавать места по АПП - Если мест нет, никакое сообщение не формируется, ожидаем появления мест по данным АПП
			//НеСоздаватьМестаЗаказовПоПриходнымАПП = Истина = Не создавать места по АПП - Если мест нет, формируется сообщение, НЕ ожидаем появления мест
			//Асеев 11.02.2022 (по письму Электронный документ ОП)<<<
			ВсеОК = ПроверкаГотовностиМестЗаказов(ТекДанные.Номер, ТекДанные.Контрагент, ТекстСообщения);
			Если ВсеОК Тогда
				СоздатьИОткрытьФактПрихода(Элементы.Список.ТекущаяСтрока);
			ИначеЕсли ТекстСообщения = "" Тогда
				Сообщить("Данные пока не готовы, попробуйте повторить действие через 10 минут");
			Иначе
				ПоказатьПредупреждение(Новый ОписаниеОповещения("ОбработкаСообщенияПроверкиГотовностиМест", ЭтотОбъект, Новый Структура("ТекСтрока", Элементы.Список.ТекущаяСтрока)), ТекстСообщения);
			КонецЕсли;
			// <<--- МАС 
					
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверкаГотовностиМестЗаказов(НомерАПП, КонтрагентСсылка, ТекстСообщения)
	
	ДокАПП = Документы.ПриходЗаказовНаСклад.НайтиПоНомеру(НомерАПП);
	ШКПоМестам = Ложь;
	//Асеев 11.02.2022 (по письму Электронный документ ОП)>>>
	НеСоздаватьМестаЗаказовПоПриходнымАПП = Ложь;
	//Асеев 11.02.2022 (по письму Электронный документ ОП)<<<
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПараметрыКонтрагентовСрезПоследних.ТипОперативнойПриемки КАК ТипОперативнойПриемки,
	                      |	ПараметрыКонтрагентовСрезПоследних.НеСоздаватьМестаЗаказовПоПриходнымАПП КАК НеСоздаватьМестаЗаказовПоПриходнымАПП
	                      |ИЗ
	                      |	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(, Контрагент = &Контрагент) КАК ПараметрыКонтрагентовСрезПоследних");
	Запрос.УстановитьПараметр("Контрагент", КонтрагентСсылка);
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() Тогда
		НеСоздаватьМестаЗаказовПоПриходнымАПП = Рез.НеСоздаватьМестаЗаказовПоПриходнымАПП;
		Если Рез.ТипОперативнойПриемки = Перечисления.ТипыОперативнойПриемки.БезШКПоМестам Тогда
			ШКПоМестам = Ложь;
		ИначеЕсли Рез.ТипОперативнойПриемки = Перечисления.ТипыОперативнойПриемки.ШКПоМестам Тогда
			ШКПоМестам = Истина;
		Иначе
			Если ЗначениеЗаполнено(ДокАПП) Тогда
				ШКПоМестам = ДокАПП.ШтрихкодыПоМестам.Количество();
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(ДокАПП) Тогда
			ШКПоМестам = ДокАПП.ШтрихкодыПоМестам.Количество();
		КонецЕсли;
	КонецЕсли;
		
	Если НЕ ШКПоМестам Тогда
		Возврат Истина;
	КонецЕсли;
	
	
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	ПараметрыКонтрагентовСрезПоследних.ТипОперативнойПриемки КАК ТипОперативнойПриемки
	//                      |ИЗ
	//                      |	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(, Контрагент = &Контрагент) КАК ПараметрыКонтрагентовСрезПоследних");
	//Запрос.УстановитьПараметр("Контрагент", КонтрагентСсылка);
	//Рез = Запрос.Выполнить().Выбрать();
	//Если Рез.Следующий() И ЗначениеЗаполнено(Рез.ТипОперативнойПриемки) Тогда		
	//	Если Рез.ТипОперативнойПриемки <> Перечисления.ТипыОперативнойПриемки.ШКПоМестам Тогда
	//		Возврат Истина;
	//	КонецЕсли;	
	//Иначе
	//	Возврат Истина;	
	//КонецЕсли;
	
	
	// проверка на создание мест по заказам отключена в связи с внедрением механизма по созданию мест по РС.Штрихкоды, без АПП//////---------- 11.04.2019
	
	//ЗапросСозданиеМест = Новый Запрос("ВЫБРАТЬ
	//                      |	СозданиеМестПоЗаказам.Период КАК Период,
	//                      |	СозданиеМестПоЗаказам.ПриходЗаказов КАК ПриходЗаказов,
	//                      |	СозданиеМестПоЗаказам.Заказ КАК Заказ,
	//                      |	СозданиеМестПоЗаказам.МестоЗаказа КАК МестоЗаказа
	//                      |ИЗ
	//                      |	РегистрСведений.СозданиеМестПоЗаказам КАК СозданиеМестПоЗаказам
	//                      |ГДЕ
	//                      |	СозданиеМестПоЗаказам.ПриходЗаказов.Номер = &НомерАПП");
	//ЗапросСозданиеМест.УстановитьПараметр("НомерАПП", НомерАПП);
	//Рез = ЗапросСозданиеМест.Выполнить();
	//
	//Если Рез.Пустой() Тогда
	//    Возврат Ложь;
	//Иначе	
	//	Возврат Истина;	
	//КонецЕсли;	
	// проверка на создание мест по заказам отключена в связи с внедрением механизма по созданию мест по РС.Штрихкоды, без АПП//////---------- 11.04.2019	
	Если СокрЛП(ДокАПП.Контрагент.Код) = "Shop_428" Тогда 
		Возврат Истина;
	Иначе	
		//Асеев 11.02.2022 (по письму Электронный документ ОП)>>>
		//Возврат РаботаСМестамиЗаказовСервер.ПроверкаСозданияМестЗаказовПоАПП(НомерАПП);
		Если НеСоздаватьМестаЗаказовПоПриходнымАПП Тогда
			НомераЗаказовБезМест = Новый Массив;
			Результат = РаботаСМестамиЗаказовСервер.ПроверкаСозданияМестЗаказовПоАПП(НомерАПП, НомераЗаказовБезМест);
			Если Не Результат Тогда
				МассивСтрок = Новый Массив;
				Для Каждого НомерЗаказа Из НомераЗаказовБезМест Цикл
					МассивСтрок.Добавить("Заказ " + СокрЛП(НомерЗаказа) + " - отсутствуют ШК по местам");
				КонецЦикла;
				ТекстСообщения = СтрСоединить(МассивСтрок, Символы.ПС);
			КонецЕсли;
			Возврат Результат;
		Иначе
			Возврат РаботаСМестамиЗаказовСервер.ПроверкаСозданияМестЗаказовПоАПП(НомерАПП);
		КонецЕсли;
		//Асеев 11.02.2022 (по письму Электронный документ ОП)<<<
	КонецеСли;	
КонецФункции // ()


Функция СоздатьФактПриход(ДокСсылка)

	НДок = Документы.ФактическийПриходЗаказовНаСклад.СоздатьДокумент();
	//НДок.ШКПоМестам = ДокСсылка.ШтрихкодыПоМестам.Количество();
	
	
	// МАС - 26.09.2017 - № --->> 
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПараметрыКонтрагентовСрезПоследних.ТипОперативнойПриемки КАК ТипОперативнойПриемки
	                      |ИЗ
	                      |	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(, Контрагент = &Контрагент) КАК ПараметрыКонтрагентовСрезПоследних");
	Запрос.УстановитьПараметр("Контрагент", ДокСсылка.Контрагент);
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() И ЗначениеЗаполнено(Рез.ТипОперативнойПриемки) Тогда		
		Если Рез.ТипОперативнойПриемки = Перечисления.ТипыОперативнойПриемки.БезШКПоМестам Тогда			
			НДок.ШКПоМестам = Ложь;	
		ИначеЕсли Рез.ТипОперативнойПриемки = Перечисления.ТипыОперативнойПриемки.ШКПоМестам Тогда
			НДок.ШКПоМестам = Истина;
		Иначе
			НДок.ШКПоМестам = ДокСсылка.ШтрихкодыПоМестам.Количество();
		КонецЕсли;			
	Иначе		
		НДок.ШКПоМестам = ДокСсылка.ШтрихкодыПоМестам.Количество();	
	КонецЕсли;
	// <<--- МАС	
	
	НДок.Заполнить(ДокСсылка);
	НДок.Дата = ТекущаяДата();	
	НДок.Записать(РежимЗаписиДокумента.Запись);
	Возврат НДок.Ссылка;
	
КонецФункции // ()

&НаСервере
Функция СписокВыборНаСервере()
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		|	ФактическийПриходЗаказовНаСклад.Ссылка КАК Док
		|ИЗ
		|	Документ.ФактическийПриходЗаказовНаСклад КАК ФактическийПриходЗаказовНаСклад
		|ГДЕ
		|	ФактическийПриходЗаказовНаСклад.АПП.Ссылка = &ПриходЗаказов";
		Зап.УстановитьПараметр("ПриходЗаказов", Элементы.Список.ТекущаяСтрока.Ссылка);
		Рез = зап.Выполнить();
		Выб = Рез.Выбрать();
		если Выб.Следующий() Тогда
			Возврат Новый Структура("Ключ", Выб.Док);
		КонецеСли;	
	КонецЕСли;	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеДанных" Тогда	
		Элементы.Список.Обновить();		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоНесколькимДокументам(Команда)
	
	МассивДокументов = Элементы.Список.ВыделенныеСтроки;
	
	
	
	// проверки
	
		
	
	Если МассивДокументов.Количество() Тогда	
		ДокСсылка = ЗаполнитьПоНесколькимДокументамСервер(МассивДокументов);		
		Форма = ПолучитьФорму("Документ.ФактическийПриходЗаказовНаСклад.Форма.ФормаДокументаОперативнаяПриемка", Новый Структура("Ключ", ДокСсылка));
		Форма.Открыть();
	КонецЕсли;	
	
КонецПроцедуры

Функция ЗаполнитьПоНесколькимДокументамСервер(МассивДокументов)

	Док = Документы.ФактическийПриходЗаказовНаСклад.СоздатьДокумент();
	Док.ШКПоМестам = МассивДокументов[0].ШтрихкодыПоМестам.Количество();
	Док.Заполнить(МассивДокументов);
	Док.Дата = ТекущаяДата();
	Док.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат Док.Ссылка;
	
КонецФункции // ()

&НаКлиенте
Процедура СоздатьФактПриходБезАПП(Команда)
	
	ВыбЗнач = Неопределено;
	         
	//ВыбЗнач = ВернутьГруппуКомитентов();
	
	ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");	
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ОбработатьСозданиеБезАПП", ЭтотОбъект), ВыбЗнач, "Выберите контрагента", ОписаниеТипов);
	
КонецПроцедуры

Функция ВернутьГруппуКомитентов()

	Возврат Справочники.Контрагенты.НайтиПоКоду("000000004");

КонецФункции // ()


&НаКлиенте
Процедура ОбработатьСозданиеБезАПП(Параметр1, Параметр2) Экспорт
	
	Если ЗначениеЗаполнено(Параметр1) Тогда
		
		ДокСсылка = СоздатьНовыйДокБезАПП(Параметр1);
		Форма = ПолучитьФорму("Документ.ФактическийПриходЗаказовНаСклад.Форма.ФормаДокументаОперативнаяПриемка", Новый Структура("Ключ", ДокСсылка));
		Форма.Открыть();
	Иначе
		Сообщить("Не выбран контрагент");
	КонецЕсли;
				
	
КонецПроцедуры

Функция СоздатьНовыйДокБезАПП(Параметр1)

	Док = Документы.ФактическийПриходЗаказовНаСклад.СоздатьДокумент();
	Док.Контрагент = Параметр1;
	Док.ОперативнаяПриемкаЗаказов = Истина;
	Док.ШКПоМестам = Ложь;
	Док.Дата = ТекущаяДата();
	Док.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	Док.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат Док.Ссылка;

КонецФункции // ()

&НаКлиенте
Процедура НайтиЗаказ(Команда)
		
	Подсказка = "Введите номер заказа";
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки", ЭтотОбъект);
	ПоказатьВводСтроки(Оповещение, "", Подсказка, 0, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаСтроки(Строка, Параметры) Экспорт
	
    Если НЕ Строка = Неопределено Тогда	
		СписокДокументов = НайтиЗаказНаСервере(СокрЛП(Строка));	
		Отбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		Отбор.Представление = "ПоискЗаказа";
		Отбор.ПравоеЗначение = СписокДокументов;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	
	// МАС - 27.11.2017 - поиск в списке без АПП --->>
	Если НЕ Строка = Неопределено Тогда	
		СписокДокументов = ПоискПоДокументамПриемкиБезАПП(СокрЛП(Строка));	
		Отбор = СписокБезАПП.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		Отбор.Представление = "ПоискЗаказаБезАПП";
		Отбор.ПравоеЗначение = СписокДокументов;
		Отбор.Использование = Истина;
	КонецЕсли;
	// <<--- МАС 
	
	
КонецПроцедуры

&НаСервере
Функция НайтиЗаказНаСервере(НомерЗаказа)

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПриходЗаказовНаСкладЗаказы.Ссылка КАК Ссылка
	                      |ПОМЕСТИТЬ ВТ_АПП
	                      |ИЗ
	                      |	Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
	                      |ГДЕ
	                      |	(ПриходЗаказовНаСкладЗаказы.Заказ.Номер = &Номер
	                      |			ИЛИ ПриходЗаказовНаСкладЗаказы.ВнешнийНомерЗаказа = &Номер)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_АПП.Ссылка КАК Ссылка,
	                      |	ФактическийПриходЗаказовНаСклад.Ссылка КАК Ссылка1
	                      |ПОМЕСТИТЬ ВТ_ИТОГ
	                      |ИЗ
	                      |	ВТ_АПП КАК ВТ_АПП
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФактическийПриходЗаказовНаСклад КАК ФактическийПриходЗаказовНаСклад
	                      |		ПО ВТ_АПП.Ссылка = ФактическийПриходЗаказовНаСклад.АПП
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ПриходЗаказовНаСклад.Ссылка,
	                      |	NULL
	                      |ИЗ
	                      |	Документ.ФактическийПриходЗаказовНаСклад.НеопознанныеШК КАК ФактическийПриходЗаказовНаСкладНеопознанныеШК
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходЗаказовНаСклад КАК ПриходЗаказовНаСклад
	                      |		ПО ФактическийПриходЗаказовНаСкладНеопознанныеШК.Ссылка.АПП = ПриходЗаказовНаСклад.Ссылка
	                      |ГДЕ
	                      |	(ФактическийПриходЗаказовНаСкладНеопознанныеШК.Заказ.НомерВнешнегоЗаказа = &Номер
	                      |			ИЛИ ФактическийПриходЗаказовНаСкладНеопознанныеШК.Заказ.Номер = &Номер)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ВТ_ИТОГ.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	ВТ_ИТОГ КАК ВТ_ИТОГ");	
	Запрос.УстановитьПараметр("Номер", НомерЗаказа);
	Рез = Запрос.Выполнить().Выбрать();
	
	Спис = Новый СписокЗначений;
	
	Пока Рез.Следующий() Цикл	
		Спис.Добавить(Рез.Ссылка);				
	КонецЦикла;
	
	Возврат Спис;
	
	
КонецФункции



// МАС - 27.11.2017 - № --->> 
&НаСервере
Функция ПоискПоДокументамПриемкиБезАПП(НомерЗаказа)

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
	                      |ГДЕ
	                      |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер = &Номер
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ФактическийПриходЗаказовНаСкладНеопознанныеШК.Ссылка
	                      |ИЗ
	                      |	Документ.ФактическийПриходЗаказовНаСклад.НеопознанныеШК КАК ФактическийПриходЗаказовНаСкладНеопознанныеШК
	                      |ГДЕ
	                      |	ФактическийПриходЗаказовНаСкладНеопознанныеШК.Заказ.Номер = &Номер");	
	Запрос.УстановитьПараметр("Номер", НомерЗаказа);
	Рез = Запрос.Выполнить().Выбрать();
	
	Спис = Новый СписокЗначений;
	
	Пока Рез.Следующий() Цикл	
		Спис.Добавить(Рез.Ссылка);				
	КонецЦикла;
	
	Возврат Спис;
	
	
КонецФункции
// <<--- МАС 


&НаСервере
Процедура ОтменитьПоискЗаказаНаСервере()
		
	Для каждого Стр Из Список.Отбор.Элементы Цикл
		Если Стр.Представление = "ПоискЗаказа" Тогда			
			Стр.Использование = Ложь;		
		КонецЕсли;	
		Если Стр.Представление = "ПоискШК" Тогда			
			Стр.Использование = Ложь;		
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Стр Из СписокБезАПП.Отбор.Элементы Цикл
		Если Стр.Представление = "ПоискЗаказаБезАПП" Тогда			
			Стр.Использование = Ложь;		
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоискЗаказа(Команда)
		
	ОтменитьПоискЗаказаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиШК(Команда)
	
	Подсказка = "Введите Штрихкод";
	Оповещение = Новый ОписаниеОповещения("ПослеВводаШК", ЭтотОбъект);
	ПоказатьВводСтроки(Оповещение, "", Подсказка, 0, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаШК(Строка, Параметры) Экспорт
	
    Если НЕ Строка = Неопределено Тогда	
		СписокДокументов = НайтиШКНаСервере(СокрЛП(Строка));	
		Отбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		Отбор.Представление = "ПоискШК";
		Отбор.ПравоеЗначение = СписокДокументов;
		Отбор.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиШКНаСервере(Штрихкод)

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Ссылка КАК Ссылка
	                      |ПОМЕСТИТЬ ВТ_АПП
	                      |ИЗ
	                      |	Документ.ПриходЗаказовНаСклад.ШтрихкодыПоМестам КАК ПриходЗаказовНаСкладШтрихкодыПоМестам
	                      |ГДЕ
	                      |	ПриходЗаказовНаСкладШтрихкодыПоМестам.Штрихкод = &Штрихкод
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_АПП.Ссылка КАК Ссылка,
	                      |	ФактическийПриходЗаказовНаСклад.Ссылка КАК Ссылка1
	                      |ПОМЕСТИТЬ ВТ_ИТОГ
	                      |ИЗ
	                      |	ВТ_АПП КАК ВТ_АПП
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФактическийПриходЗаказовНаСклад КАК ФактическийПриходЗаказовНаСклад
	                      |		ПО ВТ_АПП.Ссылка = ФактическийПриходЗаказовНаСклад.АПП
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ПриходЗаказовНаСклад.Ссылка,
	                      |	NULL
	                      |ИЗ
	                      |	Документ.ФактическийПриходЗаказовНаСклад.НеопознанныеШК КАК ФактическийПриходЗаказовНаСкладНеопознанныеШК
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходЗаказовНаСклад КАК ПриходЗаказовНаСклад
	                      |		ПО ФактическийПриходЗаказовНаСкладНеопознанныеШК.Ссылка.АПП = ПриходЗаказовНаСклад.Ссылка
	                      |ГДЕ
	                      |	ФактическийПриходЗаказовНаСкладНеопознанныеШК.Штрихкод = &Штрихкод
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ВТ_ИТОГ.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	ВТ_ИТОГ КАК ВТ_ИТОГ");	
	Запрос.УстановитьПараметр("Штрихкод", Штрихкод);
	Рез = Запрос.Выполнить().Выбрать();
	
	Спис = Новый СписокЗначений;
	
	Пока Рез.Следующий() Цикл	
		Спис.Добавить(Рез.Ссылка);				
	КонецЦикла;
	
	Возврат Спис;
	
	
КонецФункции


&НаСервере
Процедура ОтменитьПоискШКНаСервере()
		
	Для каждого Стр Из Список.Отбор.Элементы Цикл
		Если Стр.Представление = "ПоискШК" Тогда			
			Стр.Использование = Ложь;		
		КонецЕсли;		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоискШК(Команда)		
	ОтменитьПоискШКНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБезАПП(Команда)
	
	Элементы.ГруппаБезАПП.Видимость = НЕ Элементы.ГруппаБезАПП.Видимость;
	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоказатьБезАПП.Пометка = Элементы.ГруппаБезАПП.Видимость;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокБезАППВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Док = Элементы.СписокБезАПП.ТекущиеДанные.Ссылка;
	ОткрытьЗначение(Док);	
	
	
КонецПроцедуры


