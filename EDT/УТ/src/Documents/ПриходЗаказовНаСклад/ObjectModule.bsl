
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
    Если ДанныеЗаполнения<> Неопределено Тогда
        СтандартнаяОбработка = Ложь;
        Дата = ТекущаяДата();
        Контрагент = ДанныеЗаполнения.Контрагент;
        НомерВходящегоДокумента = ДанныеЗаполнения.ВходящийНомер;
        ДатаВходящегоДокумента = ДанныеЗаполнения.ДатаЗагрузки;
        Основание = ДанныеЗаполнения;
        Заказы.Очистить();
        Для каждого Стр Из ДанныеЗаполнения.Заказы Цикл
            СтрокаЗаказы = Заказы.Добавить();
            ЗаполнитьЗначенияСвойств(СтрокаЗаказы, Стр);
		КонецЦикла; 
		
		// Михушкин --->> 
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Накладная003") Тогда
			ТерминалПриема   = ДанныеЗаполнения.ТерминалПриема;
			ТерминалДоставки = ДанныеЗаполнения.ТерминалДоставки;	
		Иначе
			Если Заказы.Количество() Тогда
				ТерминалПриема   = Заказы[0].Заказ.ТерминалПриема;
				ТерминалДоставки = Заказы[0].Заказ.ТерминалДоставки;
			КонецЕсли;		
		КонецЕсли;
		// <<--- Михушкин 	
	КонецЕсли;
	
КонецПроцедуры

// Задача № 3117
Процедура РегистрацияСтатусовЗаказов(ЗаказыКРегистрацииСтатусов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПриходЗаказовНаСкладЗаказы.Ссылка КАК ДокументРегистратор,
		|	ПриходЗаказовНаСкладЗаказы.Заказ КАК Реализация,
		|	ПриходЗаказовНаСкладЗаказы.Заказ.ТерминалПриема КАК Терминал,
		|	ЛОЖЬ КАК БылоЗакрытие,
		|	214 КАК Статус,
		|	ЗНАЧЕНИЕ(Перечисление.ИнициаторыСостояния.ИнтернетМагазин) КАК ИнициаторСостояния,
		|	ЛОЖЬ КАК ПредварительноеЗакрытие,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыЗаказов.Период) КАК БылаРегистрация
		|ПОМЕСТИТЬ ВТ_Итог
		|ИЗ
		|	Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
		|		ПО ПриходЗаказовНаСкладЗаказы.Заказ = СтатусыЗаказов.Заказ
		|			И (СтатусыЗаказов.Статус = 214)
		|			И ПриходЗаказовНаСкладЗаказы.Ссылка = СтатусыЗаказов.ДокументРегистратор
		|ГДЕ
		|	ПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
		|	И ПриходЗаказовНаСкладЗаказы.Заказ В(&Заказ)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриходЗаказовНаСкладЗаказы.Ссылка,
		|	ПриходЗаказовНаСкладЗаказы.Заказ,
		|	ПриходЗаказовНаСкладЗаказы.Заказ.ТерминалПриема
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Итог.ДокументРегистратор КАК ДокументРегистратор,
		|	ВТ_Итог.Реализация КАК Реализация,
		|	ВТ_Итог.Терминал КАК Терминал,
		|	ВТ_Итог.БылоЗакрытие КАК БылоЗакрытие,
		|	ВТ_Итог.Статус КАК Статус,
		|	ВТ_Итог.ИнициаторСостояния КАК ИнициаторСостояния,
		|	ВТ_Итог.ПредварительноеЗакрытие КАК ПредварительноеЗакрытие,
		|	ВТ_Итог.БылаРегистрация КАК БылаРегистрация
		|ИЗ
		|	ВТ_Итог КАК ВТ_Итог
		|ГДЕ
		|	ВТ_Итог.БылаРегистрация = 0";
	
	Запрос.УстановитьПараметр("Заказ", ЗаказыКРегистрацииСтатусов);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();
	МассивСтатусов = Неопределено;		
	
	СопоставлениеИнициатора = РаботаСАдминкойСервер.СопоставлениеИнициатораСостоянияДляАдминки();
	
	Для Каждого СтрокаЗаказ Из ТаблицаДвижений Цикл
							
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Initiator", РаботаСАдминкойСервер.ИнициаторСостоянияВАдминку(СтрокаЗаказ.ИнициаторСостояния, СопоставлениеИнициатора));				
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(СтрокаЗаказ.Терминал.Код), ДопПараметрыСтатуса);
		
		МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СтрокаЗаказ.Реализация.Номер, СтрокаЗаказ.Статус, "",,,МассивСтатусов,ДопПараметрыСтатуса);
		
	КонецЦикла;	
	
	СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);  // ВРЕМЕННАЯ ЗАГЛУШКА ОТКЛЮЧЕНА
	
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДвижений); 	
	
КонецПроцедуры	

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Вставить содержимое обработчика.
	
	// Задача № 3021	
	ЗаказыСВозвратнымСтатусом = РаботаСВозвратамиСервер.СписокЗаказовСВозвратнымиСтатусами(Дата, Заказы.ВыгрузитьКолонку("Заказ"));	
	// Задача № 3021
	
	// Задача № 3117
	ЗаказыКРегистрацииСтатусов = Новый Массив;
	// Задача № 3117
	
	Движения.СтатусыСкладскогоУчета.Очистить();
	Движения.СтатусыСкладскогоУчета.Записывать = Истина;
	Для Каждого Тек Из Заказы Цикл
		Если Тек.Заказ.Пустая() Тогда
			Продолжить;
		КонецеСли;	
		
		ЗаказыКРегистрацииСтатусов.Добавить(Тек.Заказ); // Задача № 3117
		
		// Задача № 3021
		Если Не ЗаказыСВозвратнымСтатусом.Найти(Тек.Заказ) = Неопределено Тогда
			// Если есть возвратный статус на заказ, то мы его пропускаем
			Продолжить;
		КонецЕсли;	
		// Задача № 3021
		
		Нов = Движения.СтатусыСкладскогоУчета.Добавить();
		Нов.Период = Дата;
		Нов.ТипЗаказа = lem.ПолучитьТипЗаказа(Тек.Заказ);
		Нов.Заказ = Тек.Заказ;
		Нов.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходПодтвержденПриходнымДокументом;
	КонецЦикла;	
		
	//Асеев 08.09.2020 (Задача № 4197)>>>
	Если ОбновлятьКоличествоМестЗаказов Тогда
		//Асеев 08.09.2020 (Задача № 4197)<<<
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	ПриходЗаказовНаСкладЗаказы.Заказ.Номер КАК НомерЗаказа,
		            |	ПриходЗаказовНаСкладЗаказы.КоличествоМест,
		            |	ПриходЗаказовНаСкладЗаказы.Заказ.Ссылка КАК Заказ
		            |ИЗ
		            |	Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
		            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаказыКОтложеннойОбработке КАК ЗаказыКОтложеннойОбработке
		            |		ПО ПриходЗаказовНаСкладЗаказы.Заказ.Ссылка = ЗаказыКОтложеннойОбработке.Заказ.Ссылка
		            |			И (ПриходЗаказовНаСкладЗаказы.Ссылка = ВЫРАЗИТЬ(ЗаказыКОтложеннойОбработке.ДокументРегистратор КАК Документ.ПриходЗаказовНаСклад).Ссылка)
		            |ГДЕ
		            |	ПриходЗаказовНаСкладЗаказы.КоличествоМест > 1
		            |	И ПриходЗаказовНаСкладЗаказы.Ссылка.Ссылка = &Док
		            |	И ЕСТЬNULL(ЗаказыКОтложеннойОбработке.Период, ИСТИНА) = ИСТИНА";
		
		Зап.УстановитьПараметр("Док", Ссылка);
		Рез = Зап.Выполнить();
		Выб = Рез.Выбрать();
		Сч = 1;
		Если Не Рез.Пустой() Тогда		
			Таб = Новый ТаблицаЗначений;
			Таб.Колонки.Добавить("Заказ");
			Таб.Колонки.Добавить("ТипОбработки");
			Таб.Колонки.Добавить("Период");
			Таб.Колонки.Добавить("ЭтапОбработки");
			Таб.Колонки.Добавить("Значение1");
			Таб.Колонки.Добавить("Значение2");
			Таб.Колонки.Добавить("ДокументРегистратор");
			
			МомВремени = ТекущаяДата();
			Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();	
			СтрОбновлениеКолМестВАдминке = "declare @t [dbo].[TOrderPiecesOfFreight] insert into @t values";
			ТребуетсяОбновлениеВАдминке = Ложь;
			
			Пока Выб.Следующий() Цикл
				//lem.СоздатьЗаписьОтложеннойОбработкиЗаказа(Выб.Заказ, Ссылка, Перечисления.ТипыОтложеннойОбработкиЗаказов.ОбновлениеКоличестваМест, Выб.КоличествоМест);
				
				Если Не ЗначениеЗаполнено(Выб.Заказ) Тогда
					Продолжить;
				КонецЕсли;	
				
				Нов = Таб.Добавить();
				Нов.Заказ = Выб.Заказ;
				Нов.ТипОбработки = Перечисления.ТипыОтложеннойОбработкиЗаказов.ОбновлениеКоличестваМест;
				Нов.Период = МомВремени;
				Нов.ЭтапОбработки = Перечисления.ЭтапыОтложеннойОбработкиЗаказов.ОбработкаНазначена;
				Нов.Значение1 = Выб.КоличествоМест;
				Нов.Значение2 = "";
				Нов.ДокументРегистратор = Ссылка;
				
				Если Сч = 1 Тогда
					СтрОбновлениеКолМестВАдминке = СтрОбновлениеКолМестВАдминке + "(" + СокрЛП(Выб.НомерЗаказа) + ", " + Выб.КоличествоМест + ")";
					Сч = 2;
				Иначе
					СтрОбновлениеКолМестВАдминке = СтрОбновлениеКолМестВАдминке + ",(" + СокрЛП(Выб.НомерЗаказа) + ", " + Выб.КоличествоМест + ")";
				КонецЕсли;	
				ТребуетсяОбновлениеВАдминке = Истина;
			КонецЦикла;	
			
			Если ТребуетсяОбновлениеВАдминке Тогда			
				СтрОбновлениеКолМестВАдминке = СтрОбновлениеКолМестВАдминке + Символы.ПС + "EXEC dbo.import_setOrderPiecesOfFreight @t";
				Евген.ЗапросКИнтернетМагазину(СтрОбновлениеКолМестВАдминке, Подкл);
			КонецЕсли;	
			
			lem.ЗаписатьНаборОтложеннойОбработкиЗаказа(МомВремени, Перечисления.ТипыОтложеннойОбработкиЗаказов.ОбновлениеКоличестваМест, Таб);	
		КонецЕсли;
	КонецЕсли;
	
	РегистрацияСтатусовЗаказов(ЗаказыКРегистрацииСтатусов); // Задача № 3117
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//Если ЭтоНовый() Тогда
	//	УстановитьСсылкуНового(Документы.ПриходЗаказовНаСклад.ПолучитьСсылку(Новый УникальныйИдентификатор()));	
	//КонецЕсли;
	ЗаказыТЗ = Заказы.Выгрузить();
	
	
	//Подсчет показателей	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗаказыТЗ.КоличествоМест КАК КоличествоМест,
	                      |	ЗаказыТЗ.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа
	                      |ПОМЕСТИТЬ ВТ
	                      |ИЗ
	                      |	&ЗаказыТЗ КАК ЗаказыТЗ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ.КоличествоМест КАК КоличествоМест,
	                      |	ВТ.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа
	                      |ПОМЕСТИТЬ ВТ2
	                      |ИЗ
	                      |	ВТ КАК ВТ
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ.КоличествоМест,
	                      |	ВТ.ВнешнийНомерЗаказа
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СУММА(ВТ2.КоличествоМест) КАК КоличествоМест,
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ2.ВнешнийНомерЗаказа) КАК КоличествоЗаказов
	                      |ИЗ
	                      |	ВТ2 КАК ВТ2");
	Запрос.УстановитьПараметр("ЗаказыТЗ", ЗаказыТЗ);
	Рез = Запрос.Выполнить().Выбрать();
	
	
	
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	ПриходЗаказовНаСкладЗаказы.КоличествоМест КАК КоличествоМест,
	//                      |	ПриходЗаказовНаСкладЗаказы.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа
	//                      |ПОМЕСТИТЬ ВТ
	//                      |ИЗ
	//                      |	Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
	//                      |ГДЕ
	//                      |	ПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	ПриходЗаказовНаСкладЗаказы.КоличествоМест,
	//                      |	ПриходЗаказовНаСкладЗаказы.ВнешнийНомерЗаказа
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	СУММА(ВТ.КоличествоМест) КАК КоличествоМест,
	//                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ.ВнешнийНомерЗаказа) КАК КоличествоЗаказов
	//                      |ИЗ
	//                      |	ВТ КАК ВТ");
	//Запрос.УстановитьПараметр("Ссылка", ?(ЗначениеЗаполнено(ЭтотОбъект.Ссылка), ЭтотОбъект.Ссылка, ЭтотОбъект.ПолучитьСсылкуНового()));
	//Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда	
		КоличествоМест = Рез.КоличествоМест;
		КоличествоЗаказов = Рез.КоличествоЗаказов;	
	КонецЕсли;
	
		
КонецПроцедуры

