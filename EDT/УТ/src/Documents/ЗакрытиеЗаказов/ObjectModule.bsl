Перем ФормаИндикатора, ФормаИндикацииХодаЗагрузки, БылПроведен;

//+++ БАО 20.07.2017 №1334  
Перем ОтказЛогФайл, ОтказИмяФайлаЛога;

//--- БАО 20.07.2017 №1334  

Процедура ЗаполнитьРасстоянияОтМагистральногоКольца()
	МасНомеров = Новый Массив;
	Для Каждого Тек Из Заказы Цикл
		Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
			Продолжить;
		КонецеСли;	
		Если Не Тек.ЗонаТарификации.ЗонаЗаПределамиМагистрали Тогда
			Продолжить;
		КонецеСли;	
		МасНомеров.Добавить(СокрЛП(Тек.Номер));
	КонецЦикла;	
	
	Если МасНомеров.Количество() = 0 Тогда
		Возврат;
	КонецеСли;	
	
	
	Мас = "";
	МаршрутизацияЗаказовСервер.ПолучитьРасстоянияПоЗаказамВДокументеЗакрытия(МасНомеров, Мас);
	
	// очистка старых данных
	Струк = Новый Структура;
	Струк.Вставить("ТипЗамераРасстояния", Перечисления.ТипыЗамераРасстояний.ПоПрямойОтБлизжайшегоСъездаСМагистрали);
	НайСтроки = Расстояния.НайтиСтроки(Струк);
	Для Сч = 0 По НайСтроки.Количество() - 1 Цикл
		Расстояния.Удалить(НайСтроки[Сч]);
	КонецЦикла;	
	
	// Якурнов 18.07.2018 16:45:06
	КоэффициентТарификацииКилометража = ПолучитьПовышающийКоэффициентТарификацииКилометража();

	Попытка
	Для Каждого Тек Из Мас Цикл
		Нов = Расстояния.Добавить();
		
		// Якурнов 18.07.2018 16:42:14
		Нов.Заказ = Тек.Заказ;
		Нов.РезультатРасчета = Тек.Расстояние;
		Нов.ТипЗамераРасстояния = Тек.ТипЗамераРасстояния;
		
		Если Тек.Заказ.ЗонаТарификации.ПрименятьПовышающийКоэффициент Тогда
			Нов.ПовышающийКоэффициент = КоэффициентТарификацииКилометража;
			Нов.Расстояние = Нов.РезультатРасчета *(1 + КоэффициентТарификацииКилометража);
		Иначе
			Нов.Расстояние = Нов.РезультатРасчета;
		КонецЕсли;
		
		//ЗаполнитьЗначенияСвойств(Нов, Тек);
	КонецЦикла;	
Исключение
	
	КонецПопытки;
КонецПроцедуры	

Функция ЕстьКорректировкиПоЗаказам() Экспорт
	Зап = Новый Запрос;
	Зап.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Документ.КорректировкаУслугСД КАК КорректировкаУслугСД
	|ГДЕ
	|	КорректировкаУслугСД.ЗакрытиеЗаказов = &Док
	|	И КорректировкаУслугСД.Проведен";
	Зап.УстановитьПараметр("Док", Ссылка);
	Возврат Не Зап.Выполнить().Пустой();
КонецФункции

//Асеев 11.03.2024 (Задача № 5241)>>>
Процедура ОтменитьКорректировкиПоЗаказам()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаУслугСД.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаУслугСД КАК КорректировкаУслугСД
	|ГДЕ
	|	КорректировкаУслугСД.ЗакрытиеЗаказов = &Ссылка
	|	И НЕ КорректировкаУслугСД.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Ссылка.ПолучитьОбъект();
		//Док = Документы.КорректировкаУслугСД.СоздатьДокумент();
		Если Док.Проведен Тогда
			Док.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			Док.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПровестиКорректировкиПоЗаказам()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаУслугСД.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаУслугСД КАК КорректировкаУслугСД
	|ГДЕ
	|	КорректировкаУслугСД.ЗакрытиеЗаказов = &Ссылка
	|	И НЕ КорректировкаУслугСД.ПометкаУдаления
	|	И НЕ КорректировкаУслугСД.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	КорректировкаУслугСД.Дата";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Ссылка.ПолучитьОбъект();
		//Док = Документы.КорректировкаУслугСД.СоздатьДокумент();
		Док.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
КонецПроцедуры
//Асеев 11.03.2024 (Задача № 5241)<<<

Функция СчитатьОбновленныеСуммыИзАдминки(СУслугами = Ложь, УслугиСПодъемом = Истина) Экспорт
	
	Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
	Стр = "";
	Сч = 1;
	Для Каждого Тек Из Заказы Цикл
		Если Сч = Заказы.Количество() Тогда
			Стр = Стр + СокрЛП(Формат(Число(Тек.Номер),"ЧГ="));
		Иначе	
			Стр = Стр + СокрЛП(Формат(Число(Тек.Номер),"ЧГ=")) + ",";
		КонецеСли;	
		Сч = Сч + 1;
	КонецЦикла;	
	
	
	Если Стр <> "" Тогда
		
		//Ткст = "select o.orderId, o.cashservice, o.AgentComission, o.BankKom, o.ServiceDC, o.insurance
		
		//CeHbKA #4155 20.08.2020
		//новое поле agentCommissionPrepaid
		Ткст = "select o.orderId, o.cashservice, o.AgentComission, o.BankKom, o.ServiceDC, o.insurance, o.agentCommissionPrepaid
		//CeHbKA #4155 20.08.2020
		
		|from mv_orders o (nolock) where 
		|o.orderId IN (" + Стр + ")";
		РС = Евген.ЗапросКИнтернетМагазину(Ткст, Соединение);
		
		//Таб = СоздатьТаблицу(РС, "orderID, cashService_Ч, AgentComission_Ч, BankKom_Ч, ServiceDC_Ч, insurance_Ч");
		
		//CeHbKA #4155 20.08.2020
		//новое поле agentCommissionPrepaid
		Таб = СоздатьТаблицу(РС, "orderID, cashService_Ч, AgentComission_Ч, BankKom_Ч, ServiceDC_Ч, insurance_Ч, agentCommissionPrepaid_Ч");
		//CeHbKA #4155 20.08.2020
		
		Для Каждого тек Из Заказы Цикл
			Тек.АгентскоеВознаграждение = 0;
			Тек.КассовоеОбслуживание = 0;
			Тек.БанковскаяКомиссия = 0;
			Если СУслугами Тогда
				Тек.Показатель1 = 0;
			КонецеСли;
			Тек.СтраховойСбор = 0;
		КонецЦикла;	
		
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлБлок = БлокировкаДанных.Добавить("РегистрСведений.ИсторияВычисляемыхСумм");
		ЭлБлок.ИсточникДанных = Заказы;
		ЭлБлок.ИспользоватьИзИсточникаДанных("Заказ", "Реализация");
		ЭлБлок.Режим = РежимБлокировкиДанных.Разделяемый;
		
		ТекВр = ТекущаяДата();
		Наб = РегистрыСведений.ИсторияВычисляемыхСумм.СоздатьНаборЗаписей();
		Наб.Отбор.Период.Установить(ТекВр);
		
		
		
		Для Каждого Тек Из Таб Цикл
			Ном = Формат(Число(Тек.orderID), "ЧГ=");
			Дл = 11 - СтрДлина(Ном);
			Для Сч = 1 По Дл Цикл
				Ном = Ном + " ";
			КонецЦикла;	
			
			Струк = Новый Структура;
			Струк.Вставить("Номер", Ном);
			НайСтр = Заказы.НайтиСтроки(Струк);
			Счетчик = 0;
			Если НайСтр.Количество() <> 0 Тогда
				Для Каждого Най Из НайСтр Цикл
					Най.КассовоеОбслуживание = Тек.cashService_Ч;
					Най.АгентскоеВознаграждение = Тек.AgentComission_Ч;
					Най.БанковскаяКомиссия = Тек.BankKom_Ч;
					Най.СтраховойСбор = Тек.insurance_Ч;
					Если СУслугами Тогда
						Если УслугиСПодъемом Тогда
							Най.Показатель1 = Тек.ServiceDC_Ч - Най.Показатель2;
						Иначе
							Най.Показатель1 = Тек.ServiceDC_Ч;
						КонецеСли;	
					КонецеСли;	
					//CeHbKA #4155 20.08.2020
					Най.ВознаграждениеАгентаПоПредоплаченнымЗаказам = Тек.agentCommissionPrepaid_Ч;
					//CeHbKA #4155 20.08.2020
					
					Счетчик = Счетчик + 1;
					Если Счетчик  = 1 Тогда
						Нов = Наб.Добавить();
						Нов.Заказ = Най.Реализация;
						Нов.Закрытие = Ссылка;
						Нов.СуммаАгентскогоВознаграждения = Тек.AgentComission_Ч;
						Нов.СуммаКассовогоОбслуживания = Тек.cashService_Ч;
						Нов.СуммаБанковскойКомиссии = Тек.BankKom_Ч;
						Нов.СуммаСтраховогоСбора = Тек.insurance_Ч;
						Нов.Период = ТекВр;
						//CeHbKA #4155 20.08.2020
						Нов.ВознаграждениеАгентаПоПредоплаченнымЗаказам = Тек.agentCommissionPrepaid_Ч;
						//CeHbKA #4155 20.08.2020
					КонецеСли;
				КонецЦикла;
			Иначе
				Струк = Новый Структура;
				Струк.Вставить("Номер", СокрЛП(Ном));
				
				НайСтр =  Заказы.НайтиСтроки(Струк);
				Счетчик = 0;
				Если НайСтр.Количество() <> 0 Тогда
					Для Каждого Най Из НайСтр Цикл
						Най.КассовоеОбслуживание = Тек.cashService_Ч;
						Най.АгентскоеВознаграждение = Тек.AgentComission_Ч;
						Най.БанковскаяКомиссия = Тек.BankKom_Ч;
						Най.СтраховойСбор = Тек.insurance_Ч;
						Если СУслугами Тогда
							Если УслугиСПодъемом Тогда
								Най.Показатель1 = Тек.ServiceDC_Ч - Най.Показатель2;
							Иначе
								Най.Показатель1 = Тек.ServiceDC_Ч;
							КонецеСли;	
						КонецеСли;	
						Счетчик = Счетчик + 1;
						Если Счетчик  = 1 Тогда
							
							Нов = Наб.Добавить();
							Нов.Заказ = Най.Реализация;
							Нов.Закрытие = Ссылка;
							Нов.СуммаАгентскогоВознаграждения = Тек.AgentComission_Ч;
							Нов.СуммаКассовогоОбслуживания = Тек.cashService_Ч;
							Нов.СуммаБанковскойКомиссии = Тек.BankKom_Ч;
							Нов.СуммаСтраховогоСбора = Тек.insurance_Ч;

							Нов.Период = ТекВр;
						КонецеСли;
					КонецЦикла;
				КонецеСли;
			конецеСли;	
		КонецЦикла;	
		
		Записать(РежимЗаписиДокумента.Запись);
		Наб.Записать();
		
	КонецЕсли;	
		
КонецФункции	

Процедура ОбновитьОтказСЗаездомПоЗаказуВАдминке(Ном)
	Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
	евген.ЗапросКИнтернетМагазину("
	|UPDATE _order
	|SET deliveryPriceRUR = 0, deliveryForMkadrur = 0
	|	WHERE
	|		orderId = " + Формат(Ном, "ЧГ="), Соединение);
	
	евген.ЗапросКИнтернетМагазину("
	|UPDATE _orderRBS
	|SET amount = 0
	|	WHERE
	|		orderId = " + Формат(Ном, "ЧГ="), Соединение);
	
КонецПроцедуры	

Процедура ОбновитьПризнакВозвратаВАдминке(Фл, Ном)
	Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
	
	
	евген.ЗапросКИнтернетМагазину("
	|UPDATE _order
	|SET isRefusal = " + Число(Фл) + "
	|	WHERE
	|		orderId = " + Формат(Ном, "ЧГ="), Соединение);
КонецПроцедуры	

Процедура ОбновитьМашинуВАдминке(Транспорт, Ном)
	Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
	
	RS = евген.ЗапросКИнтернетМагазину("
	|SELECT carID From _car
	|	WHERE
	|		carNumber = '" + СокрЛП(СокрЛП(Транспорт.НомерГосударственнойРегистрации)) + "'", Соединение);
	Сп = СоздатьТаблицу(RS, "carID_Ч");
	
	Если Сп.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	//ЗапросКИнтернетМагазину("
	//|DECLARE @t TOrderCar   
	//|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" +Формат(Ном, "ЧГ=") + ",'" + НомерМашины + "','" + ПараметрыСеанса.ТекущийПользователь + "', '"+ДатаИз1С(ДатаДоставки, Ложь)+"', " + ?(Адрес="NULL", "NULL", "'" + Адрес + "'") + ?(флМосква, ",0", ",1") + ")
	//|EXEC import_setOrderCarsFrom1C @t
	//|");
	евген.ЗапросКИнтернетМагазину("
	|UPDATE _order
	|SET carID = " + Формат(Сп[0].carID_Ч, "ЧГ=")  + " 
	|	WHERE
	|		orderId = " + Формат(Ном, "ЧГ="), Соединение);
КонецПроцедуры

Функция ПроверкаНаНаличиеДвиженийПоЗаказам(Стр)
	Зап = Новый Запрос;
	Мас = Новый Массив;
	
	Для Каждого Тек Из Заказы Цикл
		Если Не Тек.Закрыть И Не Тек.Отклонить Тогда
			Продолжить;
		КонецеСли;	
		Мас.Добавить(Тек.Реализация.Ссылка);
	КонецЦикла;	
		
	
	//Зап.Текст = "ВЫБРАТЬ
	//            |	ЗакрытыеЗаказы.Реализация.Номер КАК Номер
	//            |ИЗ
	//            |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	//            |ГДЕ
	//            |	ЗакрытыеЗаказы.Реализация.Ссылка В(&МасСсылок)
	//            |	И ЗакрытыеЗаказы.Регистратор.Ссылка <> &Док";
	
	
	Зап.Текст = "ВЫБРАТЬ
	            |	ЗакрытыеЗаказы.Реализация.Номер КАК Номер
	            |ИЗ
	            |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	            |ГДЕ
	            |	ЗакрытыеЗаказы.Реализация.Ссылка В(&МасСсылок)
	            |	И ЗакрытыеЗаказы.Регистратор.Ссылка <> &Док
	            |	И НЕ ЗакрытыеЗаказы.Регистратор ССЫЛКА Документ.КорректировкаУслугСД";
	
	
				
	Зап.УстановитьПараметр("МасСсылок", Мас);
	Зап.УстановитьПараметр("Док", ЭтотОбъект.Ссылка);
	
	Рез = Зап.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат истина;
	Иначе
		Стр = "";
		Выб = Рез.Выбрать();
		Пока Выб.Следующий() Цикл
			Стр = Стр + СокрлП(Выб.Номер) + ", ";
		КонецЦикла;	
		Стр = Стр + "Е";
		Стр = СтрЗаменить(Стр, ", Е", "");
		Возврат Ложь;
	КонецеСли;	
КонецФункции

Процедура ЗакрытиеЗаказов() Экспорт
    //+++++Серегин М.В. 09.11.2015 17:27:54 не нужно
    //Движения.ЗакрытыеЗаказы.Записывать = Истина;
    //+++++Серегин М.В. 09.11.2015 17:27:48 
    Движения.ЗакрытыеЗаказы.БлокироватьДляИзменения = Истина;
    Движения.ЗакрытыеЗаказы.Записать();
    //-----Серегин М.В. 09.11.2015 17:27:49 
	
	//++Задача № 3491	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗакрытиеЗаказовЗаказы.Ссылка КАК Ссылка,
		|	ЗакрытиеЗаказовЗаказы.Реализация КАК Реализация,
		|	ЗакрытиеЗаказовЗаказы.Закрыть КАК Закрыть,
		|	ЗакрытиеЗаказовЗаказы.Отклонить КАК Отклонить
		|ПОМЕСТИТЬ ВТ_ЗаказыИЗаборы
		|ИЗ
		|	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
		|ГДЕ
		|	ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
		|	И (ЗакрытиеЗаказовЗаказы.Закрыть
		|			ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗакрытиеЗаказовРейсыПоЗаказам.Ссылка КАК Ссылка,
		|	ЗакрытиеЗаказовРейсыПоЗаказам.Заказ КАК Заказ,
		|	КОЛИЧЕСТВО(ЗакрытиеЗаказовРейсыПоЗаказам.РезультатДоставки) КАК РезультатДоставки
		|ПОМЕСТИТЬ ВТ_Рейсы
		|ИЗ
		|	Документ.ЗакрытиеЗаказов.РейсыПоЗаказам КАК ЗакрытиеЗаказовРейсыПоЗаказам
		|ГДЕ
		|	ЗакрытиеЗаказовРейсыПоЗаказам.Ссылка = &Ссылка
		|	И (ЗакрытиеЗаказовРейсыПоЗаказам.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена)
		|			ИЛИ ЗакрытиеЗаказовРейсыПоЗаказам.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично)
		|			ИЛИ ЗакрытиеЗаказовРейсыПоЗаказам.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
		|				И (ЗакрытиеЗаказовРейсыПоЗаказам.ПричинаНеВыполненияДоставки = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносСЗаездом)
		|					ИЛИ ЗакрытиеЗаказовРейсыПоЗаказам.ПричинаНеВыполненияДоставки = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)))
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗакрытиеЗаказовРейсыПоЗаказам.Ссылка,
		|	ЗакрытиеЗаказовРейсыПоЗаказам.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗаказыИЗаборы.Ссылка КАК Ссылка,
		|	ВТ_ЗаказыИЗаборы.Реализация КАК Заказ,
		|	ЕСТЬNULL(ВТ_Рейсы.РезультатДоставки, 0) КАК КоличествоТарифицируемыхРейсов
		|ИЗ
		|	ВТ_ЗаказыИЗаборы КАК ВТ_ЗаказыИЗаборы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Рейсы КАК ВТ_Рейсы
		|		ПО ВТ_ЗаказыИЗаборы.Ссылка = ВТ_Рейсы.Ссылка
		|			И ВТ_ЗаказыИЗаборы.Реализация = ВТ_Рейсы.Заказ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);	
	ДанныеПоРейсамЗаказов = Запрос.Выполнить().Выгрузить();	
	//--Задача № 3491
	
	Для Каждого Тек Из Заказы Цикл
		Если Не ЗначениеЗаполнено(Тек.ТипЗаказа) Тогда
			Продолжить;
		КонецеСли;	
		Если Не (Тек.Закрыть Или Тек.Отклонить) = Истина Тогда
			Продолжить;
		КонецеСли;	
		
		Нов = Движения.ЗакрытыеЗаказы.Добавить();
		
		//++Задача № 3491
		СтрокаДанныеПоРейсамЗаказа  =  ДанныеПоРейсамЗаказов.Найти(Тек.Реализация, "Заказ");
		Если Не СтрокаДанныеПоРейсамЗаказа = Неопределено Тогда
			Нов.КоличествоТарифицируемыхРейсов = СтрокаДанныеПоРейсамЗаказа.КоличествоТарифицируемыхРейсов;
		КонецЕсли;	
		//++Задача № 3491	
		
		Отбор = Новый Структура;
		Отбор.Вставить("БылПереносСЗаездом", Истина);
		Отбор.Вставить("Заказ", Тек.Реализация);
		ВрТаб = РейсыПоЗаказам.Выгрузить(Отбор,"СтавкаПереносаСЗаездом");
		Нов.СтоимостьПереносовСЗаездами = ВрТаб.Итог("СтавкаПереносаСЗаездом");
		Нов.КоличествоПереносовСЗаездами = ВрТаб.Количество();
		
		Нов.ПричинаОтказа = Тек.ПричинаОтказа;
		Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
			Нов.Период = ДатаЗакрытия;
		Иначе	
			Нов.Период = Тек.Реализация.Дата;
		КонецЕсли;	
		Нов.БанковскаяКомиссия = Тек.БанковскаяКомиссия;
		Нов.СтраховойСбор      = Тек.СтраховойСбор;                // Костя 291015
		Нов.ПричинаОтклоненияЗаказа = Тек.ПричинаОтклоненияЗаказа; // Костя 111115
		Нов.Возврат = Тек.Возврат;
		Нов.Доставка = Тек.Доставка;
		Нов.ИнтернетМагазин = Тек.ВладелецТовара;
		Если СчитатьКассовоеОбслуживание Тогда
			Нов.КассовоеОбслуживание = Тек.КассовоеОбслуживаниеНовое;
		Иначе	
			Нов.КассовоеОбслуживание = Тек.КассовоеОбслуживание;
		КонецеСли;	
		
		Нов.Клиент = Тек.Контрагент;
		Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Забор Тогда
			Нов.Клиент = Тек.ВладелецТовара;
		КонецеСли;
		
		Нов.Оприходование = Тек.Оприходование;
		Нов.Перемещение = Тек.Перемещение;
		Нов.УслугиСДЧистые = Тек.УслугиСДЧистые;
		Нов.Поступление = Тек.Поступление;
		Нов.ПричинаНевыполнения = Тек.ПричинаНевыполнения;
		Нов.Реализация = Тек.Реализация;
		Нов.Списание = Тек.Списание;
		Нов.СтатусЗаказа = Тек.РезультатДоставки;
		Нов.VIPДоставка = Тек.VIPДоставка;
		Нов.ПредоплатаПоКредиту = Тек.ПредоплатаПоКредиту;
		Нов.ЗонаТарификации = Тек.ЗонаТарификации;
		
		Нов.ТерминалДоставки = Тек.ТерминалДоставки;
		Нов.ТерминалПриёма = Тек.ТерминалПриема;
		Нов.ФактическийВес = Тек.ФактическийВес;
		
		Если Тек.Закрыть Тогда
			Нов.СтатусИнтернетМагазина = Справочники.СтатусЗаказаИнтернетМагазина.ЗаказЗакрыт;
		ИначеЕсли Тек.Отклонить Тогда
			Нов.СтатусИнтернетМагазина = Справочники.СтатусЗаказаИнтернетМагазина.ЗаказОтклонен;
		КонецЕсли;
		
		Если Тек.Закрыть И Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
			//Нов.СуммаДоставкиДоМКАД = 0;
			//Нов.СуммаДоставкиЗаМКАД = 0;
			Нов.СуммаДоставкиДоМКАД = Тек.СуммаДоставкиДоМКАД;
			Нов.СуммаДоставкиЗаМКАД = Тек.СуммаДоставкиЗаМКАД;
			
			ОбновитьОтказСЗаездомПоЗаказуВАдминке(СокрЛП(Тек.Реализация.Номер));
		Иначе	
			Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз  Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Фрахт Тогда
				Нов.СуммаДоставкиДоМКАД = Тек.СуммаДоставкиДоМКАД;
				Нов.СуммаДоставкиЗаМКАД = Тек.СуммаДоставкиЗаМКАД;
			КонецеСли;
		КонецеСли;	
		
		ТоварыДоставки = Новый Массив;
		Если ЗначениеЗаполнено(тек.Доставка) Тогда
			Струк = Новый Структура;
			Струк.Вставить("Доставка", Тек.Доставка);
			ТоварыДоставки = Товары.НайтиСтроки(Струк);
		ИначеЕсли ЗначениеЗаполнено(Тек.Реализация) Тогда
			Струк = Новый Структура;
			Струк.Вставить("Реализация", Тек.Реализация);
			ТоварыДоставки = Товары.НайтиСтроки(Струк);
		КонецеСли;	
		
		
		СтоимостьОценочнаяПоТоварно = 0;
		СумТ = 0;
		СумП =  - Тек.ПредоплатаПоКредиту;
		Мас = 0;
		//КолТ = ;
		Если Тек.ТипЗаказа <> Перечисления.ТипыЗаказов.Фрахт Тогда
			Для Сч = 0 По ТоварыДоставки.Количество() - 1 Цикл
				СумТ = СумТ + ТоварыДоставки[Сч].Сумма;
				СумП = СумП + ТоварыДоставки[Сч].СуммаНовая;
				Мас = Мас + ТоварыДоставки[Сч].Масса;
				СтоимостьОценочнаяПоТоварно = СтоимостьОценочнаяПоТоварно +
					(ТоварыДоставки[Сч].Количество - ТоварыДоставки[Сч].КоличествоВозвращено)
					* ТоварыДоставки[Сч].ОценочнаяСтоимость;
				//лТ = КолТ + ТоварыДоставки[Сч].Количество;
			КонецЦикла;	
		Иначе
			СумТ = Тек.Реализация.Товары.Итог("Сумма");
			СумП = Тек.Реализация.Товары.Итог("Сумма");
			//Мас = Мас + ТоварыДоставки[Сч].Масса;
		КонецеСли;
		
		
		Если ТипЗнч(Тек.Реализация) = Тип("ДокументСсылка.Фрахт") И Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Тогда
			СумТ = Тек.Реализация.Товары.Итог("Сумма");
			СумП = Тек.Реализация.Товары.Итог("Сумма");
		КонецЕсли;	
		
		Нов.СтоимостьОценочнаяПоТоварно = СтоимостьОценочнаяПоТоварно;
		Нов.СуммаОценочная = СумТ;
		Нов.СуммаПолученная = СумП;
		Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда
			Если ЗначениеЗаполнено(Тек.Возврат) Тогда
				Нов.СуммаВозврата = Тек.Возврат.Товары.Итог("Сумма");
			КонецеСли;	
		КонецеСли;	
		
		Если Тек.ДоставкаИзмененаНаСамовывоз ТОгда
			Нов.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз;
		Иначе	
			Нов.ТипЗаказа = Тек.ТипЗаказа;
		КонецеСли;	
		
		Нов.ТипОплаты = Тек.ТипОплаты;
		Нов.УслугиСД = Тек.Показатель1 + Тек.Показатель2 + Тек.Показатель3 + Тек.Показатель4 + Тек.Показатель5 + Тек.Показатель6;
		Нов.КатегорияДоставки = Тек.КатегорияДоставки;
		Нов.Масса = Мас;
		Нов.Экспедитор = Тек.Экспедитор;
		Нов.Водитель = Тек.Водитель;
		Нов.АгентскоеВознаграждение = Тек.АгентскоеВознаграждение;
		Нов.Транспорт = Тек.Транспорт;
		Нов.ПризнакВозврата = Тек.ПризнакВозврата;
		Нов.ОбъемныйБрейк = Тек.ОбъемныйБрейк;
		Нов.ОбъемЗабора = Тек.ОбъёмЗабора;
		Нов.ОбъемЗабораПоЗаказам = Тек.ОбъемЗаказовВЗаборе;
		Нов.ВыгруженныйОбъем = Тек.ВыгруженныйОбъем;
		Нов.ПодъемныйБрейк = Тек.ПодъемныйБрейк;
		Нов.СтоимостьПодъемаМП = Тек.СтоимостьПодъемаПоДаннымМП;
		
		Нов.ФрахтЧасов = Тек.ФрахтЧасов;
		
		Нов.ЮрЛицо = Тек.ЮрЛицо;
		
		Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
		Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
		Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
		Нов.ТарифицируемыйВес = Тек.ТарифицируемыйВес;
		
		Если Нов.ТипОплаты <> Справочники.ТипыОплат.Наличные И Нов.ТипОплаты <> Справочники.ТипыОплат.ВКредит И Нов.ТипОплаты <> Справочники.ТипыОплат.Терминал Тогда 
			Если СумП < 0 Тогда СумП = 0; КонецЕсли; //светильники
		КонецеСли;	
		
		Если Нов.ТипОплаты = Справочники.ТипыОплат.ВКредит И Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда  
			Если СумП < 0 Тогда СумП = 0; КонецЕсли; // кредит, отказ с заездом
		КонецеСли;	
		
		
		Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
			Нов.СуммаЧастичногоВозврата = СумТ-СумП - Тек.ПредоплатаПоКредиту;   // -Тек.СуммаДоставкиДоМКАД-Тек.СуммаДоставкиЗаМКАД
			//Если Нов.ТипОплаты = Справочники.ТипыОплат.ВКредит И Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом  Тогда 
			//	Нов.СуммаЧастичногоВозврата = 0; // кредит, отказ с заездом
			//КонецеСли;	
		КонецеСли;	
			
		Если Нов.ТипОплаты = Справочники.ТипыОплат.Наличные Или Нов.ТипОплаты = Справочники.ТипыОплат.Терминал Или Нов.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда
			Если Тек.ПричинаНевыполнения <> Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
				Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Фрахт  Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
					Если Тек.ПричинаНевыполнения <> Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
						
						// Михушкин - 14.11.2016 - Поменяли из-за Лореаля - не шло СКлиента--->> 
						//Если Тек.УчитыватьИтогоКОплате И Тек.ЗапретЧастичногоВыкупа Тогда
						// <<--- Михушкин 	
						Если Тек.УчитыватьИтогоКОплате И Тек.РезультатДоставки <> Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
							Нов.ОплаченоКлиентовНал = Тек.КОплатеКлиентом;  //  + Тек.СуммаДоставкиДоМКАД+Тек.СуммаДоставкиЗаМКАД
						Иначе
							Нов.ОплаченоКлиентовНал = СумП + Тек.СуммаДоставкиДоМКАД+Тек.СуммаДоставкиЗаМКАД;  //  + Тек.СуммаДоставкиДоМКАД+Тек.СуммаДоставкиЗаМКАД							
						КонецеСли;	
					Иначе
						Нов.ОплаченоКлиентовНал = СумП;
					КонецеСли;	
				Иначе
					Если Тек.УчитыватьИтогоКОплате И Тек.ЗапретЧастичногоВыкупа Тогда
						Нов.ОплаченоКлиентовНал = Тек.КОплатеКлиентом;
					Иначе	
						Нов.ОплаченоКлиентовНал = СумП;
					КонецеСли;	
				КонецеСли;
			КонецеСли;	
		КонецеСли;
		
		
		Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда // Михушкин 24.05.2016
			Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
				Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
			Иначе
				Нов.Партнер = Тек.ВладелецТовара;
			КонецеСли;
		КонецЕсли;
		
		//Нов.Партнер = Тек.ВладелецТовара;  // Михушкин 05.05.2016
		//Если Не Контрагент.Родитель.ОсновнойМагазин.Пустая() Тогда
		//	Нов.Партнер = Контрагент.Родитель.ОсновнойМагазин;
		//Иначе
		//	Нов.Партнер = Контрагент;
		//КонецеСли;	
		
		
		//Если (Нов.ТипОплаты = Справочники.ТипыОплат.Наличные Или Нов.ТипОплаты = Справочники.ТипыОплат.ВКредит) И ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз Тогда
		//	Нов.ОплаченоКлиентовНал = СумП + Тек.СуммаДоставкиДоМКАД+Тек.СуммаДоставкиЗаМКАД;
		//КонецеСли;
        //Серегин М.В. 19.08.2015 10:34:46 
        Нов.ОценочнаяСтоимость = Тек.ОценочнаяСтоимость;
        //Серегин М.В. 19.08.2015 10:34:57 
        //+++++Серегин М.В. 06.10.2015 17:55:47
        
        //+++++Серегин М.В. 18.02.2016 10:01:44 
		//	УчитыватьИтогоКОплате = Ложь; 
		//Если ТипЗнч(Тек.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		//	УчитыватьИтогоКОплате = Тек.Реализация.УчитыватьИтогоКОплате;
		//КонецЕсли;	
        //-----Серегин М.В. 18.02.2016 10:02:19 
        
		//Если УчитыватьИтогоКОплате Тогда //+++++Серегин М.В. 17.02.2016 18:47:22 было Если Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_248") Тогда 
		//    //+++++Серегин М.В. 28.10.2015 15:24:02 костыль
		//    Если (Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом И Тек.Закрыть) ИЛИ Тек.Отклонить Тогда
		//        Нов.ОплаченоКлиентовНал = 0;
		//        //-----Серегин М.В. 28.10.2015 15:24:10 конец костыля
		//    Иначе
		//        Нов.ОплаченоКлиентовНал = Тек.КОплатеКлиентом;
		//    КонецЕсли;
		//КонецЕсли;
        //-----Серегин М.В. 06.10.2015 17:55:50
		
		//CeHbKA #4155 08.09.2020
		Нов.ВознаграждениеАгентаПоПредоплаченнымЗаказам = Тек.ВознаграждениеАгентаПоПредоплаченнымЗаказам;
		//CeHbKA #4155 08.09.2020
		
		//Асеев 20.05.2021 (Задача № 4569)>>>
		Нов.ТарифицируемыйОбъемныйВес = Тек.ТарифицируемыйОбъемныйВес;
		Нов.ТарификацияПоОбъемномуВесу = Тек.ТарификацияПоОбъемномуВесу;
		//Асеев 20.05.2021 (Задача № 4569)<<<
		
    КонецЦикла;
    //+++++Серегин М.В. 09.11.2015 17:27:48 
    Движения.ЗакрытыеЗаказы.БлокироватьДляИзменения = Истина;
    Движения.ЗакрытыеЗаказы.Записать();
    //-----Серегин М.В. 09.11.2015 17:27:49 

КонецПроцедуры	
//+Степанов Задача № 3837 добавлено чтение реквизитов из РС параметров тарифов
Процедура ОтражениеЗарплаты(Отказ) Экспорт
	
	//+Степанов Задача № 3837
	Если ДатаЗакрытия < '20200416000000' Тогда
		ОтражениеЗарплаты_до_16042020(Отказ);
		Возврат;
	КонецЕсли;	
	//-Степанов Задача № 3837
	
	Движения.РасчетЗарплаты.Очистить();
	Движения.РасчетЗарплаты.Записывать = Истина;
	
	Движения.СводПоЗарплате.Очистить();
	Движения.СводПоЗарплате.Записывать = Истина;
	
	Движения.ОперативнаяЭкономикаЗаказов.Очистить();
	Движения.ОперативнаяЭкономикаЗаказов.Записывать = Истина;	
	
	
	Отказ = Ложь;
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ТарифыРасчетаЗППоКомитентамСрезПоследних.Комитент,
	            |	ТарифыРасчетаЗППоКомитентамСрезПоследних.ТарифЗП Как ВидТарифаЗП
	            |ИЗ
	            |	РегистрСведений.ТарифыРасчетаЗППоКомитентам.СрезПоследних(&ДатаСреза, ) КАК ТарифыРасчетаЗППоКомитентамСрезПоследних";
	Зап.УстановитьПараметр("ДатаСреза", КонецДня(ДатаЗакрытия));	
	
	ТарифыПоКомитентам = Зап.Выполнить().Выгрузить();
	
	Тарифы = may.ПолучитьТарифы(ДатаЗакрытия);
	ТарифыНаем = may.ПолучитьТарифыНаем(ДатаЗакрытия);
	
	МетодикаПримененияПериода = РегистрыСведений.МетодикаРасчетаЗППоПредприятию.ПолучитьПоследнее(ДатаЗакрытия).ТипПримененияПериода;
	
	//+++ Костя ЗП На ПрямыеЗатраты
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");	
	ТабПрямыхЗатрат    = Новый ТаблицаЗначений;
	ТабПрямыхЗатрат.Колонки.Добавить("СтатьяЗатрат"     ,Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатратКомпании"),"Статья Затрат");
	ТабПрямыхЗатрат.Колонки.Добавить("КатегорияДоставки",Новый ОписаниеТипов("СправочникСсылка.КатегорииДоставки2014"),"Категория Доставки");
	ТабПрямыхЗатрат.Колонки.Добавить("Сумма"            ,ОписаниеТиповЧисло, "Сумма");
	ТабПрямыхЗатрат.Колонки.Добавить("ТипЗаказа"        ,Новый ОписаниеТипов("ПеречислениеСсылка.ТипыЗаказов"),"Тип Заказа");
	СтатьяЗатрат = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
	//--- Костя ЗП На ПрямыеЗатраты
	
	//+Степанов Задача № 3837
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗакрытиеЗаказовЗаказы.Реализация КАК Реализация
	               |ПОМЕСТИТЬ втРеализации
	               |ИЗ
	               |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	               |ГДЕ
	               |	ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
	               |	И ЗакрытиеЗаказовЗаказы.Реализация ССЫЛКА Документ.РеализацияТоваровУслуг
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втРеализации.Реализация КАК Реализация,
	               |	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	               |	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации.ТерриториальностьДляРасчетаЗП КАК ТерриториальностьДляРасчетаЗП
	               |ИЗ
	               |	втРеализации КАК втРеализации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	               |				,
	               |				Заказ В
	               |					(ВЫБРАТЬ
	               |						втРеализации.Реализация КАК Реализация
	               |					ИЗ
	               |						втРеализации КАК втРеализации)) КАК ПараметрыТарифаЗаказаСрезПоследних
	               |		ПО втРеализации.Реализация = ПараметрыТарифаЗаказаСрезПоследних.Заказ";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТаблицаЗонТарификации = Запрос.Выполнить().Выгрузить();
	//-Степанов Задача № 3837
	
	Для Каждого Тек Из Заказы Цикл
		Если Не Тек.Закрыть  Тогда
			Продолжить;
		КонецеСли;	
		Если Тек.ТипЗаказа <> Перечисления.ТипыЗаказов.Доставка И Тек.ТипЗаказа <> Перечисления.ТипыЗаказов.Забор И Тек.ТипЗаказа <> Перечисления.ТипыЗаказов.Фрахт Тогда
			Продолжить;
		КонецЕсли;	
		//+Степанов Задача № 3837
		СтрокаТЗЗонТарификации = ТаблицаЗонТарификации.Найти(Тек.Реализация, "Реализация");
		Если СтрокаТЗЗонТарификации = Неопределено Тогда
			ЗонаТарификацииИзРС = Справочники.ГруппыРайонов.ПустаяСсылка();
		Иначе
			ЗонаТарификацииИзРС = СтрокаТЗЗонТарификации.ЗонаТарификации;
			ТерриториальностьДляРасчетаЗПИзРС = СтрокаТЗЗонТарификации.ТерриториальностьДляРасчетаЗП;
		КонецЕсли;
		//-Степанов Задача № 3837
		Если Не Тек.Водитель.Пустая() И Не Тек.Экспедитор.Пустая() Тогда
			ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный;
		ИначеЕсли Не Тек.Водитель.Пустая() Тогда
			ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажБезЭкспедитора;
		Иначе
			Сообщить("Отсутствует экипаж: " + СокрЛП(Тек.Номер), СтатусСообщения.ОченьВажное);
			Продолжить;
		КонецеСли;	
		
		Струк = Новый Структура;
		Струк.Вставить("Комитент", Тек.ВладелецТовара);
		РежимРасчетаПоКонтрагенту = РегистрыСведений.ТарифыРасчетаЗППоКомитентам.ПолучитьПоследнее(ДатаЗакрытия, Струк);
		
		Струк = Новый Структура;
		Струк.Вставить("ФизЛицо", Тек.Водитель);
		РежимРасчетаВ = РегистрыСведений.МетодикаРасчетаЗППоФизЛицам.ПолучитьПоследнее(ДатаЗакрытия, Струк);
		
		Струк = Новый Структура;
		Струк.Вставить("ФизЛицо", Тек.Экспедитор);
		РежимРасчетаЭ = РегистрыСведений.МетодикаРасчетаЗППоФизЛицам.ПолучитьПоследнее(ДатаЗакрытия, Струк);
		
		
		СумДоМКАд = 0;
		СумЗаМКАд = 0;
        Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Тогда
            ////Серегин М.В. 25.06.2015 14:30:24 Старый код
            //Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
            //	СумП = Окр(Тек.Показатель2/2, 2);
            //Иначе
            //	СумП = Тек.Показатель2;
            //КонецЕСли;	
            //Серегин М.В. 25.06.2015 14:30:29 новы код расчет ЗП данные берем из новой колонки ПодъемВодитель
			Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
				СумП = Окр(Тек.ПодъемВодитель/2, 2);
			Иначе
				СумП = Тек.ПодъемВодитель;
            КонецЕСли;	
			Если Не РежимРасчетаВ.Оклад И Не РежимРасчетаВ.НеУчаствуетВФот Тогда
				Нов = Движения.РасчетЗарплаты.Добавить();
				Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
					Нов.Период = ДатаЗакрытия;
				Иначе
					Нов.Период = Тек.Реализация.Дата;
				КонецеСли;	
				Нов.ФизЛицо = Тек.Водитель;
				Нов.ТипЭкипажа = ВариантЭ;
				Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
				Нов.Транспорт = Тек.Транспорт;
				Нов.Доставка = Тек.Реализация;
				Нов.ДоставкаБП = Тек.Доставка;
				Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
				Нов.КатегорияДоставки = Тек.КатегорияДоставки;
				
				// Михушкин --->> 
				Нов.ПравилаОпределенияКатегорииЗаказаДляЗП = Тек.ПравилаОпределенияКатегорииЗаказаДляЗП;
				
				Если ТипЗнч(Тек.Реализация.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда			
					ЗапросКатегория = Новый Запрос("ВЫБРАТЬ
					                               |	ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП
					                               |ИЗ
					                               |	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
					                               |ГДЕ
					                               |	ДополнительныеПараметрыЗаказа.Заказ = &Заказ
					                               |	И НЕ ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП ЕСТЬ NULL ");
					ЗапросКатегория.УстановитьПараметр("Заказ", Тек.Реализация.Ссылка);					  
					РезКатегория = ЗапросКатегория.Выполнить().Выбрать();
					Если РезКатегория.Следующий() И ЗначениеЗаполнено(РезКатегория.КатегорияДляРасчетаЗП) Тогда	
						Нов.КатегорияЗаказаДляРасчетаЗП = РезКатегория.КатегорияДляРасчетаЗП;
					Иначе
						Нов.КатегорияЗаказаДляРасчетаЗП = Тек.КатегорияДоставки;
					КонецЕсли;
				КонецЕсли;
				// <<--- Михушкин 
				
				Нов.ТипДоставки = Тек.ТипЗаказа;
				Нов.VIPДоставка = Тек.VIPДоставка;
				Нов.ЮрЛицо = Тек.ЮрЛицо;
				Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
				Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
				Нов.ЗонаТарификации = Тек.ЗонаТарификации;
				Нов.Регион = Тек.ТерминалДоставки;
				Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
				Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
				
				// Михушкин --->> 			
				Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
					Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
						Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
					Иначе
						Нов.Партнер = Тек.ВладелецТовара;
					КонецеСли;
				КонецЕсли;
				// <<--- Михушкин 
				
				
				Если Тек.VIPДоставка Тогда
					Коэф = 2;
				Иначе
					Коэф = 1;
				КонецеСли;	
				Если ТерминалДоставки.Пустая() Или ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
					Если Тек.Доставка.ТочкаПрибытия.Москва Тогда
						СумДоМкад = 1;
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
					Иначе
						СумЗаМкад = 1;
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыМКАД;
					КонецеСли;
				Иначе
					Если ЗначениеЗаполнено(ЗонаТарификацииИзРС) Тогда
						Если ТерриториальностьДляРасчетаЗПИзРС = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД Тогда
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
							СумДоМкад = 1;
						ИначеЕсли ТерриториальностьДляРасчетаЗПИзРС = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД Тогда
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД;
							СумЗаМКАд = 1;
						КонецеСли;	
					Иначе
						СумДоМкад = 1;
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
					КонецеСли;	
				КонецеСли;
				Струк = Новый СТруктура;
				Струк.Вставить("ТипЭкипажа", ВариантЭ);
				Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Водитель);
				
				//Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);	
				Струк.Вставить("КатегорияДоставки", Нов.КатегорияЗаказаДляРасчетаЗП);
				
				
				Струк3 = Новый Структура;
				Струк3.Вставить("Транспорт", Тек.Транспорт);
				ТП = РегистрыСведений.ТипыТранспорта.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), Струк3).ТипТранспорта;
				Если Не ЗначениеЗаполнено(ТП) Тогда
					ТП = Справочники.ТипыТранспортаДляРасчетаЗП.Основной;
				КонецеСли;	
				Струк.Вставить("ТипТранспорта", ТП);
				
				
				// Михушкин --->>
				//НоваяКатегорияДоставки = Неопределено;
				//Если ЗначениеЗаполнено(Тек.ПравилаОпределенияКатегорииЗаказаДляЗП) Тогда
				//	Для каждого ПравилоСтр Из Тек.ПравилаОпределенияКатегорииЗаказаДляЗП.Правила Цикл
				//	    Если ПравилоСтр.ВесОт < Тек.ВесЗаказа И Тек.ВесЗаказа <= ПравилоСтр.ВесДо И НЕ ЗначениеЗаполнено(НоваяКатегорияДоставки) Тогда							
				//			НоваяКатегорияДоставки = ПравилоСтр.КатегорияЗаказаДляРасчетаЗП;										
				//		КонецЕсли;					 						
				//	КонецЦикла; 	
				//	Если ЗначениеЗаполнено(НоваяКатегорияДоставки) Тогда					
				//		Струк.Вставить("КатегорияДоставки", НоваяКатегорияДоставки);						
				//	Иначе
				//	    Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);
				//	КонецЕсли;	    	
				//Иначе
				//	Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);			
				//КонецЕсли;
				// <<--- Михушкин 
				
				Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);	
				Струк.Вставить("Регион", Тек.ТерминалДоставки);
				
				// Михушкин - 19.09 --->> 
				ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
				// <<--- Михушкин 			
				
				Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
					Если Не ЗначениеЗаполнено(РежимРасчетаВ.ВидТарифаЗП) Тогда
						Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
							Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
								Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
								Если Не ЗначениеЗаполнено(Тариф) Тогда
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							Иначе
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
						ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
							Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
						КонецеСли;	
						
						Если Не ЗначениеЗаполнено(Тариф) Тогда
							Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
						КонецеСли;	
						Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
						Нов.ВидТарифаРасчетаЗП = Тариф;
					Иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаВ.ВидТарифаЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаВ.ВидТарифаЗП;
					КонецеСли;	
				иначе
					Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
					Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
				КонецЕсли;
				
				СтрукТр = Новый Структура;
				СтрукТр.Вставить("Транспорт", Тек.Транспорт);
				Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
				Если Не Наем Тогда
					Най = Тарифы.НайтиСтроки(Струк);
				Иначе
					Най = ТарифыНаем.НайтиСтроки(Струк);
					Нов.НаёмныйЭкипаж = Истина;
				КонецеСли;
				
				Если Не РежимРасчетаВ.Оклад Тогда
					Если Най.Количество() = 1 Тогда
						Если СумДоМКАд = 1 Тогда
							Нов.Сумма = Коэф*Най[0].СтоимостьДоМКАД;
						ИначеЕсли СумЗаМКАд = 1 Тогда
							Нов.Сумма = Коэф*Най[0].СтоимостьЗаМКАД;
						КонецеСли;	
					КонецеСли;	
					Нов.Подъём = СумП;
									
					// Экономика - ПодъемВодитель(расход) - 26.08.2016
					Если СумП <> 0 Тогда
						Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
						Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
					    Движение.Период = ДатаЗакрытия;	
						Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
							Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
								Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
							Иначе
								Движение.Партнер = Тек.ВладелецТовара;
							КонецеСли;
						КонецЕсли;		
						Движение.ИнтернетМагазин = Тек.ВладелецТовара;
						Движение.ТипЗаказа = Тек.ТипЗаказа;
						Движение.Заказ = Тек.Реализация;
						Движение.Рейс = Тек.Рейс;
						Движение.Водитель = Тек.Водитель;
						Движение.Транспорт = Тек.Транспорт;
						Движение.Экспедитор = Тек.Экспедитор;
						//Движение.Показатель = СтавкаЭквайринга;
						Движение.ДоходРасход = Перечисления.ДоходРасход.Расход;	
						Движение.Статья = Справочники.СтатьиЗатратКомпании.СтоимостьПодъемаОплачиваемая;
					    Движение.Сумма = СумП;
					КонецеСли;
					
					
					
					//+++ Костя ЗП На ПрямыеЗатраты
					НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
					НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
					НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
					НоваяСтрЗатрат.Сумма             = Нов.Сумма + СумП;
					НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
					//--- Костя ЗП На ПрямыеЗатраты
					
					Нов2 = Движения.СводПоЗарплате.Добавить();
					Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов2.Период = ДатаЗакрытия;
					Иначе
						Нов2.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов2.ПоказательКоличества = 1;
					Нов2.Сумма = Нов.Сумма + СумП;
					Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
					Нов2.ФизЛицо = Тек.Водитель;
					Нов2.ЮрЛицо = Тек.ЮрЛицо;
					Нов2.Регион = Тек.ТерминалДоставки;
                    //+++++Серегин М.В. 29.02.2016 12:15:46 
                    Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                    //-----Серегин М.В. 29.02.2016 12:15:47 
					
					
					// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
					Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
					Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
				    Движение.Период = ДатаЗакрытия;	
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Движение.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;		
					Движение.ИнтернетМагазин = Тек.ВладелецТовара;
					Движение.ТипЗаказа = Тек.ТипЗаказа;
					Движение.Заказ = Тек.Реализация;
					Движение.Рейс = Тек.Рейс;
					Движение.Водитель = Тек.Водитель;
					Движение.Транспорт = Тек.Транспорт;
					Движение.Экспедитор = Тек.Экспедитор;
					//Движение.Показатель = СтавкаЭквайринга;
					Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
					Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
				    Движение.Сумма = Нов.Сумма;
					// <<--- Михушкин 
					
					
				КонецЕсли;
			КонецеСли;
							
			Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
				Если Не РежимРасчетаЭ.Оклад И Не РежимРасчетаЭ.НеУчаствуетВФот Тогда

					Нов = Движения.РасчетЗарплаты.Добавить();
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов.Период = ДатаЗакрытия;
					Иначе
						Нов.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов.ФизЛицо = Тек.Экспедитор;
					Нов.ТипЭкипажа = ВариантЭ;
					Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
					Нов.Транспорт = Тек.Транспорт;
					Нов.Доставка = Тек.Реализация;
					Нов.ДоставкаБП = Тек.Доставка;
					Нов.КатегорияДоставки = Тек.КатегорияДоставки;					
					// Михушкин --->> 
					Нов.ПравилаОпределенияКатегорииЗаказаДляЗП = Тек.ПравилаОпределенияКатегорииЗаказаДляЗП;
					
					Если ТипЗнч(Тек.Реализация.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда			
						ЗапросКатегория = Новый Запрос("ВЫБРАТЬ
						                               |	ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП
						                               |ИЗ
						                               |	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
						                               |ГДЕ
						                               |	ДополнительныеПараметрыЗаказа.Заказ = &Заказ
						                               |	И НЕ ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП ЕСТЬ NULL ");
						ЗапросКатегория.УстановитьПараметр("Заказ", Тек.Реализация.Ссылка);					  
						РезКатегория = ЗапросКатегория.Выполнить().Выбрать();
						Если РезКатегория.Следующий() И ЗначениеЗаполнено(РезКатегория.КатегорияДляРасчетаЗП) Тогда	
							Нов.КатегорияЗаказаДляРасчетаЗП = РезКатегория.КатегорияДляРасчетаЗП;
						Иначе
							Нов.КатегорияЗаказаДляРасчетаЗП = Тек.КатегорияДоставки
						КонецЕсли;
					КонецЕсли;
					// <<--- Михушкин
					Нов.ТипДоставки = Тек.ТипЗаказа;
					Нов.VIPДоставка = Тек.VIPДоставка;
					Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
					Нов.ЮрЛицо = Тек.ЮрЛицо;
					Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
					Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
					Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
					Нов.ЗонаТарификации = Тек.ЗонаТарификации;
					Нов.Регион = Тек.ТерминалДоставки;	
					Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
					// Михушкин --->> 			
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Нов.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;
					// <<--- Михушкин					
					
					Если Тек.VIPДоставка Тогда
						Коэф = 2;
					Иначе
						Коэф = 1;
					КонецеСли;	
					
					Если ТерминалДоставки.Пустая() Или ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
						Если Тек.Доставка.ТочкаПрибытия.Москва Тогда
							СумДоМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
						Иначе
							СумЗаМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыМКАД;
						КонецеСли;
					Иначе
						//+Степанов Задача № 3837	
						Если ЗначениеЗаполнено(ЗонаТарификацииИзРС) Тогда
							Если ТерриториальностьДляРасчетаЗПИзРС = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД Тогда
								Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
								СумДоМкад = 1;
							ИначеЕсли ТерриториальностьДляРасчетаЗПИзРС = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД Тогда
								Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД;
								СумЗаМКАд = 1;
							КонецеСли;	
						Иначе
							СумДоМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
						КонецеСли;						
						//-Степанов Задача № 3837
					КонецеСли;
					Струк = Новый СТруктура;
					Струк.Вставить("ТипЭкипажа", ВариантЭ);
					Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Экспедитор);
					//Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);
					Струк.Вставить("КатегорияДоставки", Нов.КатегорияЗаказаДляРасчетаЗП);
									
					// Михушкин --->>
					//НоваяКатегорияДоставки = Неопределено;
					//Если ЗначениеЗаполнено(Тек.ПравилаОпределенияКатегорииЗаказаДляЗП) Тогда
					//	Для каждого ПравилоСтр Из Тек.ПравилаОпределенияКатегорииЗаказаДляЗП.Правила Цикл
					//	    Если ПравилоСтр.ВесОт < Тек.ВесЗаказа И Тек.ВесЗаказа <= ПравилоСтр.ВесДо Тогда							
					//			НоваяКатегорияДоставки = ПравилоСтр.КатегорияЗаказаДляРасчетаЗП;										
					//		КонецЕсли;					 						
					//	КонецЦикла; 	
					//	Если ЗначениеЗаполнено(НоваяКатегорияДоставки) Тогда					
					//		Струк.Вставить("КатегорияДоставки", НоваяКатегорияДоставки);						
					//	Иначе
					//	    Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);
					//	КонецЕсли;	    	
					//Иначе
					//	Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);			
					//КонецЕсли;
					// <<--- Михушкин
					
					Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);
					Струк.Вставить("Регион", Тек.ТерминалДоставки);
					
					// Михушкин - 19.09 --->> 
					ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
					// <<--- Михушкин 	
					
					Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
						Если Не ЗначениеЗаполнено(РежимРасчетаЭ.ВидТарифаЗП) Тогда
							Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
								Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
									Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
									Если Не ЗначениеЗаполнено(Тариф) Тогда
										//Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), Новый Структура("Регион", )).Тариф;
										Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
									КонецеСли;	
								Иначе
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
							Если Не ЗначениеЗаполнено(Тариф) Тогда
								Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
							КонецеСли;	
							Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
							Нов.ВидТарифаРасчетаЗП = Тариф;
						Иначе
							Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаЭ.ВидТарифаЗП);
							Нов.ВидТарифаРасчетаЗП = РежимРасчетаЭ.ВидТарифаЗП;
						КонецеСли;	
					иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
					КонецЕсли;
				
					СтрукТр = Новый Структура;
					СтрукТр.Вставить("Транспорт", Тек.Транспорт);
					Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
					Если Не Наем Тогда
						Най = Тарифы.НайтиСтроки(Струк);
					Иначе
						Най = ТарифыНаем.НайтиСтроки(Струк);
						Нов.НаёмныйЭкипаж = Истина;
					КонецеСли;
					
					Если Не РежимРасчетаЭ.Оклад Тогда
						Если Най.Количество() = 1 Тогда
							Если СумДоМКАд = 1 Тогда
								Нов.Сумма = Коэф*Най[0].СтоимостьДоМКАД;
							ИначеЕсли СумЗаМКАд = 1 Тогда
								Нов.Сумма = Коэф*Най[0].СтоимостьЗаМКАД;
							КонецеСли;	
						КонецеСли;	
						Нов.Подъём = СумП;
						
						// Экономика - ПодъемВодитель(расход) - 26.08.2016
						Если СумП <> 0 Тогда
							Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
							Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
						    Движение.Период = ДатаЗакрытия;	
							Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
								Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
									Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
								Иначе
									Движение.Партнер = Тек.ВладелецТовара;
								КонецеСли;
							КонецЕсли;		
							Движение.ИнтернетМагазин = Тек.ВладелецТовара;
							Движение.ТипЗаказа = Тек.ТипЗаказа;
							Движение.Заказ = Тек.Реализация;
							Движение.Рейс = Тек.Рейс;
							Движение.Водитель = Тек.Водитель;
							Движение.Транспорт = Тек.Транспорт;
							Движение.Экспедитор = Тек.Экспедитор;
							//Движение.Показатель = СтавкаЭквайринга;
							Движение.ДоходРасход = Перечисления.ДоходРасход.Расход;	
							Движение.Статья = Справочники.СтатьиЗатратКомпании.СтоимостьПодъемаОплачиваемая;
						    Движение.Сумма = СумП;
						КонецеСли;
						
						
						
						//+++ Костя ЗП На ПрямыеЗатраты
						НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
						НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
						НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
						НоваяСтрЗатрат.Сумма             = Нов.Сумма + СумП;
						НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
						//--- Костя ЗП На ПрямыеЗатраты
						
						Нов2 = Движения.СводПоЗарплате.Добавить();
						Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
						Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
							Нов2.Период = ДатаЗакрытия;
						Иначе
							Нов2.Период = Тек.Реализация.Дата;
						КонецеСли;	
						Нов2.ПоказательКоличества = 1;
						Нов2.Сумма = Нов.Сумма + СумП;
						Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
						Нов2.ФизЛицо = Тек.Экспедитор;	
						Нов2.ЮрЛицо = Тек.ЮрЛицо;
						Нов2.Регион = Тек.ТерминалДоставки;
                        //+++++Серегин М.В. 29.02.2016 12:15:46 
                        Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                        //-----Серегин М.В. 29.02.2016 12:15:47 
						
						
						
						// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
						Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
						Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
					    Движение.Период = ДатаЗакрытия;	
						Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
							Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
								Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
							Иначе
								Движение.Партнер = Тек.ВладелецТовара;
							КонецеСли;
						КонецЕсли;		
						Движение.ИнтернетМагазин = Тек.ВладелецТовара;
						Движение.ТипЗаказа = Тек.ТипЗаказа;
						Движение.Заказ = Тек.Реализация;
						Движение.Рейс = Тек.Рейс;
						Движение.Водитель = Тек.Водитель;
						Движение.Транспорт = Тек.Транспорт;
						Движение.Экспедитор = Тек.Экспедитор;
						//Движение.Показатель = СтавкаЭквайринга;
						Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
						Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
					    Движение.Сумма = Нов.Сумма;
						// <<--- Михушкин
					КонецеСли;
				КонецеСли;	
			КонецеСли;
		ИначеЕсли Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Забор Тогда
			Если Не РежимРасчетаВ.Оклад И Не РежимРасчетаВ.НеУчаствуетВФот Тогда
				
				Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
					СумП = Окр(Тек.Показатель2/2, 2);
				Иначе
					СумП = Тек.Показатель2;
				КонецЕСли;	
				
				Нов = Движения.РасчетЗарплаты.Добавить();
				Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
					Нов.Период = ДатаЗакрытия;
				Иначе
					Нов.Период = Тек.Реализация.Дата;
				КонецеСли;	
				Нов.ФизЛицо = Тек.Водитель;
				Нов.ТипЭкипажа = ВариантЭ;
				Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
				Нов.Транспорт = Тек.Транспорт;
				Нов.Доставка = Тек.Реализация;
				Нов.ТипДоставки = Тек.ТипЗаказа;
				Нов.VIPДоставка = Тек.VIPДоставка;
				Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
				Нов.ЮрЛицо = Тек.ЮрЛицо;
				Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
				Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
				Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
				Нов.ЗонаТарификации = Тек.ЗонаТарификации;
				Нов.Регион = Тек.ТерминалДоставки;
				Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
				// Михушкин --->> 			
				Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
					Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
						Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
					Иначе
						Нов.Партнер = Тек.ВладелецТовара;
					КонецеСли;
				КонецЕсли;
				// <<--- Михушкин
				
				Если Тек.VIPДоставка Тогда
					Коэф = 2;
				Иначе
					Коэф = 1;
				КонецеСли;	
				
				Если ТерминалДоставки.Пустая() Или ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
					Если Тек.Доставка.ТочкаПрибытия.Москва Тогда
						СумДоМкад = 1;
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
					Иначе
						СумЗаМкад = 1;
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыМКАД;
					КонецеСли;
				Иначе
					Если ЗначениеЗаполнено(Тек.Реализация.ЗонаТарификации) Тогда
						Если Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД Тогда
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
							СумДоМкад = 1;
						ИначеЕсли Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД Тогда
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД;
							СумЗаМКАд = 1;
						КонецеСли;	
					Иначе
						СумДоМкад = 1;
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
					КонецеСли;	
				КонецеСли;
				
				
				Струк3 = Новый Структура;
				Струк3.Вставить("Транспорт", Тек.Транспорт);
				ТП = РегистрыСведений.ТипыТранспорта.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), Струк3).ТипТранспорта;
				
				Нов.Подъём = СумП;
				
				// Экономика - ПодъемВодитель(расход) - 26.08.2016
				Если СумП <> 0 Тогда
					Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
					Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
				    Движение.Период = ДатаЗакрытия;	
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Движение.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;		
					Движение.ИнтернетМагазин = Тек.ВладелецТовара;
					Движение.ТипЗаказа = Тек.ТипЗаказа;
					Движение.Заказ = Тек.Реализация;
					Движение.Рейс = Тек.Рейс;
					Движение.Водитель = Тек.Водитель;
					Движение.Транспорт = Тек.Транспорт;
					Движение.Экспедитор = Тек.Экспедитор;
					//Движение.Показатель = СтавкаЭквайринга;
					Движение.ДоходРасход = Перечисления.ДоходРасход.Расход;	
					Движение.Статья = Справочники.СтатьиЗатратКомпании.СтоимостьПодъемаОплачиваемая;
				    Движение.Сумма = СумП;
				КонецеСли;
				
				// Михушкин - 19.09 --->> 
				ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
				// <<--- Михушкин

				Струк = Новый СТруктура;
				Струк.Вставить("ТипЭкипажа", ВариантЭ);
				Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Водитель);
				Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);
				
				Если Не ЗначениеЗаполнено(ТП) Тогда
					ТП = Справочники.ТипыТранспортаДляРасчетаЗП.Основной;
				КонецеСли;	
				Струк.Вставить("ТипТранспорта", ТП);
				Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
					
					Если Не ЗначениеЗаполнено(РежимРасчетаВ.ВидТарифаЗП) Тогда
						Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
							Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
								Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
								Если Не ЗначениеЗаполнено(Тариф) Тогда
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							Иначе
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
						ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
							Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
						КонецеСли;	
						Если Не ЗначениеЗаполнено(Тариф) Тогда
							Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
						КонецеСли;	
						Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
						Нов.ВидТарифаРасчетаЗП = Тариф;
					Иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаВ.ВидТарифаЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаВ.ВидТарифаЗП;
					КонецеСли;	
				иначе
					Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
					Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
                КонецЕсли;
                
                //+++++Серегин М.В. 19.02.2016 10:58:17 
				Струк.Вставить("ОбъёмЗабора", Тек.ОбъёмЗабора);
                //-----Серегин М.В. 19.02.2016 10:58:19 
                
				СтрукТр = Новый Структура;
				СтрукТр.Вставить("Транспорт", Тек.Транспорт);
				Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
				Если Не Наем Тогда
					//+++++Серегин М.В. 19.02.2016 10:54:27 было Най = Тарифы.НайтиСтроки(Струк);
                    Най = НайтиДанныеПоТарифам(Струк);
				Иначе
					//+++++Серегин М.В. 19.02.2016 10:55:07 было Най = ТарифыНаем.НайтиСтроки(Струк);
                    Най = НайтиДанныеПоТарифамНаемники(Струк);
					Нов.НаёмныйЭкипаж = Истина;
				КонецеСли;
				
				Если Не РежимРасчетаВ.Оклад Тогда
					
					Если Най.Количество() = 1 Тогда
						Если СумДоМКАд = 1 Тогда
							Нов.Сумма = Коэф*Най[0].СтоимостьДоМКАД;
						ИначеЕсли СумЗаМКАд = 1 Тогда
							Нов.Сумма = Коэф*Най[0].СтоимостьЗаМКАД;
						КонецеСли;	
					КонецеСли;	
					
					//+++ Костя ЗП На ПрямыеЗатраты
					НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
					НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
					НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
					НоваяСтрЗатрат.Сумма             = Нов.Сумма + СумП;
					НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
					//--- Костя ЗП На ПрямыеЗатраты
					
					Нов2 = Движения.СводПоЗарплате.Добавить();
					Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов2.Период = ДатаЗакрытия;
					Иначе
						Нов2.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов2.ПоказательКоличества = 1;
					Нов2.Сумма = Нов.Сумма;
					Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
					Нов2.ФизЛицо = Тек.Водитель;
					Нов.ТипТранспорта = ТП;   
					Нов2.ЮрЛицо = Тек.ЮрЛицо;
					Нов2.Регион = Тек.ТерминалДоставки;
                    //+++++Серегин М.В. 29.02.2016 12:15:46 
                    Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                    //-----Серегин М.В. 29.02.2016 12:15:47 
					
					
					// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
					Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
					Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
				    Движение.Период = ДатаЗакрытия;	
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Движение.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;		
					Движение.ИнтернетМагазин = Тек.ВладелецТовара;
					Движение.ТипЗаказа = Тек.ТипЗаказа;
					Движение.Заказ = Тек.Реализация;
					Движение.Рейс = Тек.Рейс;
					Движение.Водитель = Тек.Водитель;
					Движение.Транспорт = Тек.Транспорт;
					Движение.Экспедитор = Тек.Экспедитор;
					//Движение.Показатель = СтавкаЭквайринга;
					Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
					Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
				    Движение.Сумма = Нов.Сумма;
					// <<--- Михушкин
					
				КонецеСли;
			КонецеСли;
			Если Не РежимРасчетаЭ.Оклад И Не РежимРасчетаЭ.НеУчаствуетВФот Тогда
				Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
					
					СумП = Окр(Тек.Показатель2/2, 2); // добавлено 02.08.2016 по ошибке (СумП не было)
					
					Нов = Движения.РасчетЗарплаты.Добавить();
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов.Период = ДатаЗакрытия;
					Иначе
						Нов.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов.ФизЛицо = Тек.Экспедитор;
					Нов.ТипЭкипажа = ВариантЭ;
					Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
					Нов.Транспорт = Тек.Транспорт;
					Нов.Доставка = Тек.Реализация;
					Нов.ТипДоставки = Тек.ТипЗаказа;
					Нов.VIPДоставка = Тек.VIPДоставка;
					Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
					Нов.ЮрЛицо = Тек.ЮрЛицо;
					Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
					Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
					Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
					Нов.ЗонаТарификации = Тек.ЗонаТарификации;
					Нов.Регион = Тек.ТерминалДоставки;
					Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
					
					// Михушкин --->> 			
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Нов.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;
					// <<--- Михушкин
					
					Если Тек.VIPДоставка Тогда
						Коэф = 2;
					Иначе
						Коэф = 1;
					КонецеСли;	
					
					Если ТерминалДоставки.Пустая() Или ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
						Если Тек.Доставка.ТочкаПрибытия.Москва Тогда
							СумДоМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
						Иначе
							СумЗаМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыМКАД;
						КонецеСли;
					Иначе
						Если ЗначениеЗаполнено(Тек.Реализация.ЗонаТарификации) Тогда
							Если Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД Тогда
								Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
								СумДоМкад = 1;
							ИначеЕсли Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД Тогда
								Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД;
								СумЗаМКАд = 1;
							КонецеСли;	
						Иначе
							СумДоМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
						КонецеСли;	
					КонецеСли;
					Струк = Новый СТруктура;
					
					// Михушкин - 19.09 --->> 
					ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
					// <<--- Михушкин
					
					Струк.Вставить("ТипЭкипажа", ВариантЭ);
					Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Экспедитор);
					Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);
					
					Струк3 = Новый Структура;
					Струк3.Вставить("Транспорт", Тек.Транспорт);
					ТП = РегистрыСведений.ТипыТранспорта.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), Струк3).ТипТранспорта;
					
					
					Если Не ЗначениеЗаполнено(ТП) Тогда
						ТП = Справочники.ТипыТранспортаДляРасчетаЗП.Основной;
					КонецеСли;	
					Струк.Вставить("ТипТранспорта", ТП);
					Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
						
						Если Не ЗначениеЗаполнено(РежимРасчетаЭ.ВидТарифаЗП) Тогда
							Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
								Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
									Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
									Если Не ЗначениеЗаполнено(Тариф) Тогда
										Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
									КонецеСли;	
								Иначе
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
							Если Не ЗначениеЗаполнено(Тариф) Тогда
								Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
							КонецеСли;	
							Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
							Нов.ВидТарифаРасчетаЗП = Тариф;
						Иначе
							Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаЭ.ВидТарифаЗП);
							Нов.ВидТарифаРасчетаЗП = РежимРасчетаЭ.ВидТарифаЗП;
						КонецеСли;	
					иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
                    КонецЕсли;
                    
                //+++++Серегин М.В. 19.02.2016 10:58:17 
				Струк.Вставить("ОбъёмЗабора", Тек.ОбъёмЗабора);
                //-----Серегин М.В. 19.02.2016 10:58:19 
					
					СтрукТр = Новый Структура;
					СтрукТр.Вставить("Транспорт", Тек.Транспорт);
					Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
					Если Не Наем Тогда
                        //+++++Серегин М.В. 19.02.2016 10:54:27 было Най = Тарифы.НайтиСтроки(Струк);
                        Най = НайтиДанныеПоТарифам(Струк);
                    Иначе
                        //+++++Серегин М.В. 19.02.2016 10:55:07 было Най = ТарифыНаем.НайтиСтроки(Струк);
                        Най = НайтиДанныеПоТарифамНаемники(Струк);
                        Нов.НаёмныйЭкипаж = Истина;
					КонецеСли;
					
					Если Не РежимРасчетаЭ.Оклад Тогда
						
						Если Най.Количество() = 1 Тогда
							Если СумДоМКАд = 1 Тогда
							Нов.Сумма = Коэф*Най[0].СтоимостьДоМКАД;
							ИначеЕсли СумЗаМКАд = 1 Тогда
								Нов.Сумма = Най[0].СтоимостьЗаМКАД;
							КонецеСли;	
						КонецеСли;	
						//Нов.Подъём = СумП;
						
						//+++ Костя ЗП На ПрямыеЗатраты
						НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
						НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
						НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
						НоваяСтрЗатрат.Сумма             = Нов.Сумма + СумП;
						НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
						//--- Костя ЗП На ПрямыеЗатраты
						
						Нов2 = Движения.СводПоЗарплате.Добавить();
						Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
						Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
							Нов2.Период = ДатаЗакрытия;
						Иначе
							Нов2.Период = Тек.Реализация.Дата;
						КонецеСли;	
						Нов2.ПоказательКоличества = 1;
						Нов2.Сумма = Нов.Сумма;
						Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
						Нов2.ФизЛицо = Тек.Экспедитор;
						Нов.ТипТранспорта = ТП;
						Нов2.ЮрЛицо = Тек.ЮрЛицо;
						Нов2.Регион = Тек.ТерминалДоставки;
                        //+++++Серегин М.В. 29.02.2016 12:15:46 
                        Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                        //-----Серегин М.В. 29.02.2016 12:15:47 
						
						
						// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
						Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
						Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
					    Движение.Период = ДатаЗакрытия;	
						Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
							Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
								Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
							Иначе
								Движение.Партнер = Тек.ВладелецТовара;
							КонецеСли;
						КонецЕсли;		
						Движение.ИнтернетМагазин = Тек.ВладелецТовара;
						Движение.ТипЗаказа = Тек.ТипЗаказа;
						Движение.Заказ = Тек.Реализация;
						Движение.Рейс = Тек.Рейс;
						Движение.Водитель = Тек.Водитель;
						Движение.Транспорт = Тек.Транспорт;
						Движение.Экспедитор = Тек.Экспедитор;
						//Движение.Показатель = СтавкаЭквайринга;
						Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
						Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
					    Движение.Сумма = Нов.Сумма;
						// <<--- Михушкин
					КонецеСли;
				КонецеСли;
			КонецеСли;
		ИначеЕсли Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Фрахт Тогда
			Если Не РежимРасчетаВ.Оклад И Не РежимРасчетаВ.НеУчаствуетВФот Тогда
				Если Тек.ФрахтЧасов = 0 Тогда
					Продолжить;
				КонецеСли;
				Нов = Движения.РасчетЗарплаты.Добавить();
				Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
					Нов.Период = ДатаЗакрытия;
				Иначе
					Нов.Период = Тек.Реализация.Дата;
				КонецеСли;	
				Нов.VIPДоставка = Тек.VIPДоставка;
				Если Тек.VIPДоставка Тогда
					Коэф = 2;
				Иначе
					Коэф = 1;
				КонецеСли;	
				
				Нов.ФизЛицо = Тек.Водитель;
				Нов.ТипЭкипажа = ВариантЭ;
				Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
				Нов.Транспорт = Тек.Транспорт;
				Нов.Доставка = Тек.Реализация;
				Нов.ТипДоставки = Тек.ТипЗаказа;
				Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
				Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
				Нов.ЮрЛицо = Тек.ЮрЛицо;
				Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
				Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
				Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
				Нов.ЗонаТарификации = Тек.ЗонаТарификации;
				Нов.Регион = Тек.ТерминалДоставки;
				Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
				
				// Михушкин --->> 			
				Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
					Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
						Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
					Иначе
						Нов.Партнер = Тек.ВладелецТовара;
					КонецеСли;
				КонецЕсли;
				// <<--- Михушкин
				
				Струк = Новый СТруктура;
				Струк.Вставить("ТипЭкипажа", ВариантЭ);
				Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Водитель);
				Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);
				Струк.Вставить("Регион", Тек.ТерминалДоставки);
				
				// Михушкин - 19.09 --->> 
				ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
				// <<--- Михушкин
				
				Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
					
					Если Не ЗначениеЗаполнено(РежимРасчетаВ.ВидТарифаЗП) Тогда
						Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
							Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
								Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
								Если Не ЗначениеЗаполнено(Тариф) Тогда
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							Иначе
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
						ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
							Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
						КонецеСли;	
						Если Не ЗначениеЗаполнено(Тариф) Тогда
							Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
						КонецеСли;	
						Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
						Нов.ВидТарифаРасчетаЗП = Тариф;
					Иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаВ.ВидТарифаЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаВ.ВидТарифаЗП;
					КонецеСли;	
				иначе
					Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
					Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
				КонецЕсли;
				
				СтрукТр = Новый Структура;
				СтрукТр.Вставить("Транспорт", Тек.Транспорт);
				Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
				Если Не Наем Тогда
					Най = Тарифы.НайтиСтроки(Струк);
				Иначе
					Най = ТарифыНаем.НайтиСтроки(Струк);
					Нов.НаёмныйЭкипаж = Истина;
				КонецеСли;
				
				Если Най.Количество() = 0 Тогда
					#Если Клиент Тогда
						Сообщить("Не определен зарплатный тариф для критериев заказа: " + СокрЛП(Тек.Реализация.Номер) + ", тарифная сетка: " + СокрЛП(Струк.ВидТарифаРасчетаЗП), СтатусСообщения.ОченьВажное);
					#КонецеСли
					Отказ = Истина;
					Продолжить;
				КонецеСли;
				Если Най[0].СтавкаФрахт = 0 Тогда
					Если Най.Количество() = 1 Тогда
						Нов.Сумма = Коэф*Най[0].СтоимостьЧас*Тек.ФрахтЧасов;
					КонецеСли;
				Иначе
					Нов.Сумма = Най[0].СтавкаФрахт;
				КонецеСли;	
				Нов.ОтработаноЧасов = Тек.ФрахтЧасов;
				
				Если Най[0].МинимальнаяСтоимость <> 0 Тогда
					Если Най[0].МинимальнаяСтоимость > Нов.Сумма Тогда
						Нов.Сумма = Най[0].МинимальнаяСтоимость;
						Нов.РасчетПоМинимальнойСтоимости = Истина;
					КонецеСли;	
				КонецеСли;	
				
				//+++ Костя ЗП На ПрямыеЗатраты
				НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
				НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
				НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
				НоваяСтрЗатрат.Сумма             = Нов.Сумма;
				НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
				//--- Костя ЗП На ПрямыеЗатраты
				
				Нов2 = Движения.СводПоЗарплате.Добавить();
				Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
				Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
					Нов2.Период = ДатаЗакрытия;
				Иначе
					Нов2.Период = Тек.Реализация.Дата;
				КонецеСли;	
				Нов2.ПоказательКоличества = 1;
				Нов2.Сумма = Нов.Сумма;
				Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
				Нов2.ФизЛицо = Тек.Водитель;
				Нов2.ЮрЛицо = Тек.ЮрЛицо;
				Нов2.Регион = Тек.ТерминалДоставки;
                //+++++Серегин М.В. 29.02.2016 12:15:46 
                Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                //-----Серегин М.В. 29.02.2016 12:15:47 
				
				// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
				Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
				Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
			    Движение.Период = ДатаЗакрытия;	
				Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
					Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
						Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
					Иначе
						Движение.Партнер = Тек.ВладелецТовара;
					КонецеСли;
				КонецЕсли;		
				Движение.ИнтернетМагазин = Тек.ВладелецТовара;
				Движение.ТипЗаказа = Тек.ТипЗаказа;
				Движение.Заказ = Тек.Реализация;
				Движение.Рейс = Тек.Рейс;
				Движение.Водитель = Тек.Водитель;
				Движение.Транспорт = Тек.Транспорт;
				Движение.Экспедитор = Тек.Экспедитор;
				//Движение.Показатель = СтавкаЭквайринга;
				Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
				Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
			    Движение.Сумма = Нов.Сумма;
				// <<--- Михушкин
			КонецеСли;
			
			Если Не РежимРасчетаЭ.Оклад И Не РежимРасчетаЭ.НеУчаствуетВФот Тогда
				Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
					
					СумП = Окр(Тек.Показатель2/2, 2); // добавлено 02.08.2016 по ошибке (СумП не было)
								
					Нов = Движения.РасчетЗарплаты.Добавить();
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов.Период = ДатаЗакрытия;
					Иначе
						Нов.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов.ФизЛицо = Тек.Экспедитор;
					Нов.ТипЭкипажа = ВариантЭ;
					Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
					Нов.Транспорт = Тек.Транспорт;
					Нов.Доставка = Тек.Реализация;
					Нов.ТипДоставки = Тек.ТипЗаказа;
					Нов.VIPДоставка = Тек.VIPДоставка;
					Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
					Нов.ЮрЛицо = Тек.ЮрЛицо;
					Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
					Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
					Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
					Нов.ЗонаТарификации = Тек.ЗонаТарификации;
					Нов.Регион = Тек.ТерминалДоставки;
					Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
					// Михушкин --->> 			
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Нов.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;
					// <<--- Михушкин
					
					Если Тек.VIPДоставка Тогда
						Коэф = 2;
					Иначе
						Коэф = 1;
					КонецеСли;	
					
					//Если Тек.Доставка.ТочкаПрибытия.Москва Тогда
					СумДоМкад = 1;
					Если ТерминалДоставки.Пустая() Или ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
					ИначеЕсли ТерминалДоставки = Справочники.РегиональныеТерминалы.СПбСтриж Тогда	
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
					КонецеСли;	
					//Иначе
					//	СумЗаМкад = 1;
					//	Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыМКАД;
					//КонецеСли;
					Струк = Новый СТруктура;
					
					Струк.Вставить("ТипЭкипажа", ВариантЭ);
					Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Экспедитор);
					Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);
					Струк.Вставить("Регион", Тек.ТерминалДоставки);
					
					// Михушкин - 19.09 --->> 
					ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
					// <<--- Михушкин
					
					Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
						Если Не ЗначениеЗаполнено(РежимРасчетаЭ.ВидТарифаЗП) Тогда
							Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
								Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
									Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
									Если Не ЗначениеЗаполнено(Тариф) Тогда
										Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
									КонецеСли;	
								Иначе
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
							Если Не ЗначениеЗаполнено(Тариф) Тогда
								Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
							КонецеСли;	
							Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
							Нов.ВидТарифаРасчетаЗП = Тариф;
						Иначе
							Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаЭ.ВидТарифаЗП);
							Нов.ВидТарифаРасчетаЗП = РежимРасчетаЭ.ВидТарифаЗП;
						КонецеСли;	
					иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
					КонецЕсли;
					СтрукТр = Новый Структура;
					СтрукТр.Вставить("Транспорт", Тек.Транспорт);
					Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
					Если Не Наем Тогда
						Най = Тарифы.НайтиСтроки(Струк);
					Иначе
						Най = ТарифыНаем.НайтиСтроки(Струк);
						Нов.НаёмныйЭкипаж = Истина;
					КонецеСли;
					Если Най.Количество() = 1 Тогда
						Нов.Сумма = Коэф*Най[0].СтоимостьЧас*Тек.ФрахтЧасов;
					КонецеСли;
					
					Нов.ОтработаноЧасов = Тек.ФрахтЧасов;
					
					Если Най[0].МинимальнаяСтоимость <> 0 Тогда
						Если Най[0].МинимальнаяСтоимость > Нов.Сумма Тогда
							Нов.Сумма = Най[0].МинимальнаяСтоимость;
							Нов.РасчетПоМинимальнойСтоимости = Истина;
						КонецеСли;	
					КонецеСли;	
					
					//+++ Костя ЗП На ПрямыеЗатраты
					НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
					НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
					НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
					НоваяСтрЗатрат.Сумма             = Нов.Сумма;
					НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
					//--- Костя ЗП На ПрямыеЗатраты
					
					Нов2 = Движения.СводПоЗарплате.Добавить();
					Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов2.Период = ДатаЗакрытия;
					Иначе
						Нов2.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов2.ПоказательКоличества = 1;
					Нов2.Сумма = Нов.Сумма;
					Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
					Нов2.ФизЛицо = Тек.Экспедитор;
					Нов2.ЮрЛицо = Тек.ЮрЛицо;
					Нов2.Регион = Тек.ТерминалДоставки;
                    //+++++Серегин М.В. 29.02.2016 12:15:46 
                    Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                    //-----Серегин М.В. 29.02.2016 12:15:47 
					
					// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
					Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
					Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
				    Движение.Период = ДатаЗакрытия;	
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Движение.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;		
					Движение.ИнтернетМагазин = Тек.ВладелецТовара;
					Движение.ТипЗаказа = Тек.ТипЗаказа;
					Движение.Заказ = Тек.Реализация;
					Движение.Рейс = Тек.Рейс;
					Движение.Водитель = Тек.Водитель;
					Движение.Транспорт = Тек.Транспорт;
					Движение.Экспедитор = Тек.Экспедитор;
					//Движение.Показатель = СтавкаЭквайринга;
					Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
					Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
				    Движение.Сумма = Нов.Сумма;
					// <<--- Михушкин
				КонецеСли;
			КонецеСли;
		КонецеСли;
	КонецЦикла;	
	
	//+++ Костя Запись ЗП На ПрямыеЗатраты
	Если ТабПрямыхЗатрат.Количество() > 0 Тогда
		
		ТабПрямыхЗатрат.Свернуть("СтатьяЗатрат, КатегорияДоставки, ТипЗаказа","Сумма");
		
		// Регистр ВводДанныхОРасходахКомпании
		Движения.ВводДанныхОРасходахКомпании.Записывать = Истина;		
		Движения.ВводДанныхОРасходахКомпании.Очистить();
		
		Для Каждого ТекСтрокаСтатьиЗатрат Из ТабПрямыхЗатрат Цикл
			Движение = Движения.ВводДанныхОРасходахКомпании.Добавить();
			Движение.Период            = Дата;
			Движение.Партнер           = Контрагент;
			Движение.СтатьяЗатрат      = СтатьяЗатрат;
			Движение.ТипЗатрат         = СтатьяЗатрат.ТипЗатрат;
			Движение.ВидЗатрат         = Перечисления.ВидыЗатратКомпании.ПрямыеРасходы;
			Движение.КатегорияДоставки = ТекСтрокаСтатьиЗатрат.КатегорияДоставки;
			Движение.ТипЗаказа         = ТекСтрокаСтатьиЗатрат.ТипЗаказа;
			Движение.Сумма             = ТекСтрокаСтатьиЗатрат.Сумма;
		КонецЦикла;
		
	КонецЕсли;
	//--- Костя Запись ЗП На ПрямыеЗатраты
	
	
	
КонецПроцедуры	

Процедура ОтражениеЗарплаты_до_16042020(Отказ) Экспорт
	
	Движения.РасчетЗарплаты.Очистить();
	Движения.РасчетЗарплаты.Записывать = Истина;
	
	Движения.СводПоЗарплате.Очистить();
	Движения.СводПоЗарплате.Записывать = Истина;
	
	Движения.ОперативнаяЭкономикаЗаказов.Очистить();
	Движения.ОперативнаяЭкономикаЗаказов.Записывать = Истина;	
	
	
	Отказ = Ложь;
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ТарифыРасчетаЗППоКомитентамСрезПоследних.Комитент,
	            |	ТарифыРасчетаЗППоКомитентамСрезПоследних.ТарифЗП Как ВидТарифаЗП
	            |ИЗ
	            |	РегистрСведений.ТарифыРасчетаЗППоКомитентам.СрезПоследних(&ДатаСреза, ) КАК ТарифыРасчетаЗППоКомитентамСрезПоследних";
	Зап.УстановитьПараметр("ДатаСреза", КонецДня(ДатаЗакрытия));	
	
	ТарифыПоКомитентам = Зап.Выполнить().Выгрузить();
	
	Тарифы = may.ПолучитьТарифы(ДатаЗакрытия);
	ТарифыНаем = may.ПолучитьТарифыНаем(ДатаЗакрытия);
	
	МетодикаПримененияПериода = РегистрыСведений.МетодикаРасчетаЗППоПредприятию.ПолучитьПоследнее(ДатаЗакрытия).ТипПримененияПериода;
	
	//+++ Костя ЗП На ПрямыеЗатраты
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");	
	ТабПрямыхЗатрат    = Новый ТаблицаЗначений;
	ТабПрямыхЗатрат.Колонки.Добавить("СтатьяЗатрат"     ,Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатратКомпании"),"Статья Затрат");
	ТабПрямыхЗатрат.Колонки.Добавить("КатегорияДоставки",Новый ОписаниеТипов("СправочникСсылка.КатегорииДоставки2014"),"Категория Доставки");
	ТабПрямыхЗатрат.Колонки.Добавить("Сумма"            ,ОписаниеТиповЧисло, "Сумма");
	ТабПрямыхЗатрат.Колонки.Добавить("ТипЗаказа"        ,Новый ОписаниеТипов("ПеречислениеСсылка.ТипыЗаказов"),"Тип Заказа");
	СтатьяЗатрат = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
	//--- Костя ЗП На ПрямыеЗатраты
	
	
	Для Каждого Тек Из Заказы Цикл
		Если Не Тек.Закрыть  Тогда
			Продолжить;
		КонецеСли;	
		Если Тек.ТипЗаказа <> Перечисления.ТипыЗаказов.Доставка И Тек.ТипЗаказа <> Перечисления.ТипыЗаказов.Забор И Тек.ТипЗаказа <> Перечисления.ТипыЗаказов.Фрахт Тогда
			Продолжить;
		КонецЕсли;	
		Если Не Тек.Водитель.Пустая() И Не Тек.Экспедитор.Пустая() Тогда
			ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный;
		ИначеЕсли Не Тек.Водитель.Пустая() Тогда
			ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажБезЭкспедитора;
		Иначе
			Сообщить("Отсутствует экипаж: " + СокрЛП(Тек.Номер), СтатусСообщения.ОченьВажное);
			Продолжить;
		КонецеСли;	
		
		Струк = Новый Структура;
		Струк.Вставить("Комитент", Тек.ВладелецТовара);
		РежимРасчетаПоКонтрагенту = РегистрыСведений.ТарифыРасчетаЗППоКомитентам.ПолучитьПоследнее(ДатаЗакрытия, Струк);
		
		Струк = Новый Структура;
		Струк.Вставить("ФизЛицо", Тек.Водитель);
		РежимРасчетаВ = РегистрыСведений.МетодикаРасчетаЗППоФизЛицам.ПолучитьПоследнее(ДатаЗакрытия, Струк);
		
		Струк = Новый Структура;
		Струк.Вставить("ФизЛицо", Тек.Экспедитор);
		РежимРасчетаЭ = РегистрыСведений.МетодикаРасчетаЗППоФизЛицам.ПолучитьПоследнее(ДатаЗакрытия, Струк);
		
		
		СумДоМКАд = 0;
		СумЗаМКАд = 0;
        Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Тогда
            ////Серегин М.В. 25.06.2015 14:30:24 Старый код
            //Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
            //	СумП = Окр(Тек.Показатель2/2, 2);
            //Иначе
            //	СумП = Тек.Показатель2;
            //КонецЕСли;	
            //Серегин М.В. 25.06.2015 14:30:29 новы код расчет ЗП данные берем из новой колонки ПодъемВодитель
			Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
				СумП = Окр(Тек.ПодъемВодитель/2, 2);
			Иначе
				СумП = Тек.ПодъемВодитель;
            КонецЕСли;	
			Если Не РежимРасчетаВ.Оклад И Не РежимРасчетаВ.НеУчаствуетВФот Тогда
				Нов = Движения.РасчетЗарплаты.Добавить();
				Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
					Нов.Период = ДатаЗакрытия;
				Иначе
					Нов.Период = Тек.Реализация.Дата;
				КонецеСли;	
				Нов.ФизЛицо = Тек.Водитель;
				Нов.ТипЭкипажа = ВариантЭ;
				Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
				Нов.Транспорт = Тек.Транспорт;
				Нов.Доставка = Тек.Реализация;
				Нов.ДоставкаБП = Тек.Доставка;
				Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
				Нов.КатегорияДоставки = Тек.КатегорияДоставки;
				
				// Михушкин --->> 
				Нов.ПравилаОпределенияКатегорииЗаказаДляЗП = Тек.ПравилаОпределенияКатегорииЗаказаДляЗП;
				
				Если ТипЗнч(Тек.Реализация.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда			
					ЗапросКатегория = Новый Запрос("ВЫБРАТЬ
					                               |	ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП
					                               |ИЗ
					                               |	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
					                               |ГДЕ
					                               |	ДополнительныеПараметрыЗаказа.Заказ = &Заказ
					                               |	И НЕ ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП ЕСТЬ NULL ");
					ЗапросКатегория.УстановитьПараметр("Заказ", Тек.Реализация.Ссылка);					  
					РезКатегория = ЗапросКатегория.Выполнить().Выбрать();
					Если РезКатегория.Следующий() И ЗначениеЗаполнено(РезКатегория.КатегорияДляРасчетаЗП) Тогда	
						Нов.КатегорияЗаказаДляРасчетаЗП = РезКатегория.КатегорияДляРасчетаЗП;
					Иначе
						Нов.КатегорияЗаказаДляРасчетаЗП = Тек.КатегорияДоставки;
					КонецЕсли;
				КонецЕсли;
				// <<--- Михушкин 
				
				Нов.ТипДоставки = Тек.ТипЗаказа;
				Нов.VIPДоставка = Тек.VIPДоставка;
				Нов.ЮрЛицо = Тек.ЮрЛицо;
				Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
				Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
				Нов.ЗонаТарификации = Тек.ЗонаТарификации;
				Нов.Регион = Тек.ТерминалДоставки;
				Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
				Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
				
				// Михушкин --->> 			
				Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
					Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
						Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
					Иначе
						Нов.Партнер = Тек.ВладелецТовара;
					КонецеСли;
				КонецЕсли;
				// <<--- Михушкин 
				
				
				Если Тек.VIPДоставка Тогда
					Коэф = 2;
				Иначе
					Коэф = 1;
				КонецеСли;	
				Если ТерминалДоставки.Пустая() Или ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
					Если Тек.Доставка.ТочкаПрибытия.Москва Тогда
						СумДоМкад = 1;
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
					Иначе
						СумЗаМкад = 1;
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыМКАД;
					КонецеСли;
				Иначе
					Если ЗначениеЗаполнено(Тек.Реализация.ЗонаТарификации) Тогда
							Если Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД Тогда
								Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
								СумДоМкад = 1;
							ИначеЕсли Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД Тогда
								Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД;
								СумЗаМКАд = 1;
							КонецеСли;	
						Иначе
							СумДоМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
						КонецеСли;		
				КонецеСли;
				Струк = Новый СТруктура;
				Струк.Вставить("ТипЭкипажа", ВариантЭ);
				Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Водитель);
				
				//Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);	
				Струк.Вставить("КатегорияДоставки", Нов.КатегорияЗаказаДляРасчетаЗП);
				
				
				Струк3 = Новый Структура;
				Струк3.Вставить("Транспорт", Тек.Транспорт);
				ТП = РегистрыСведений.ТипыТранспорта.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), Струк3).ТипТранспорта;
				Если Не ЗначениеЗаполнено(ТП) Тогда
					ТП = Справочники.ТипыТранспортаДляРасчетаЗП.Основной;
				КонецеСли;	
				Струк.Вставить("ТипТранспорта", ТП);
				
				
				// Михушкин --->>
				//НоваяКатегорияДоставки = Неопределено;
				//Если ЗначениеЗаполнено(Тек.ПравилаОпределенияКатегорииЗаказаДляЗП) Тогда
				//	Для каждого ПравилоСтр Из Тек.ПравилаОпределенияКатегорииЗаказаДляЗП.Правила Цикл
				//	    Если ПравилоСтр.ВесОт < Тек.ВесЗаказа И Тек.ВесЗаказа <= ПравилоСтр.ВесДо И НЕ ЗначениеЗаполнено(НоваяКатегорияДоставки) Тогда							
				//			НоваяКатегорияДоставки = ПравилоСтр.КатегорияЗаказаДляРасчетаЗП;										
				//		КонецЕсли;					 						
				//	КонецЦикла; 	
				//	Если ЗначениеЗаполнено(НоваяКатегорияДоставки) Тогда					
				//		Струк.Вставить("КатегорияДоставки", НоваяКатегорияДоставки);						
				//	Иначе
				//	    Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);
				//	КонецЕсли;	    	
				//Иначе
				//	Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);			
				//КонецЕсли;
				// <<--- Михушкин 
				
				Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);	
				Струк.Вставить("Регион", Тек.ТерминалДоставки);
				
				// Михушкин - 19.09 --->> 
				ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
				// <<--- Михушкин 			
				
				Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
					Если Не ЗначениеЗаполнено(РежимРасчетаВ.ВидТарифаЗП) Тогда
						Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
							Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
								Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
								Если Не ЗначениеЗаполнено(Тариф) Тогда
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							Иначе
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
						ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
							Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
						КонецеСли;	
						
						Если Не ЗначениеЗаполнено(Тариф) Тогда
							Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
						КонецеСли;	
						Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
						Нов.ВидТарифаРасчетаЗП = Тариф;
					Иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаВ.ВидТарифаЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаВ.ВидТарифаЗП;
					КонецеСли;	
				иначе
					Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
					Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
				КонецЕсли;
				
				СтрукТр = Новый Структура;
				СтрукТр.Вставить("Транспорт", Тек.Транспорт);
				Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
				Если Не Наем Тогда
					Най = Тарифы.НайтиСтроки(Струк);
				Иначе
					Най = ТарифыНаем.НайтиСтроки(Струк);
					Нов.НаёмныйЭкипаж = Истина;
				КонецеСли;
				
				Если Не РежимРасчетаВ.Оклад Тогда
					Если Най.Количество() = 1 Тогда
						Если СумДоМКАд = 1 Тогда
							Нов.Сумма = Коэф*Най[0].СтоимостьДоМКАД;
						ИначеЕсли СумЗаМКАд = 1 Тогда
							Нов.Сумма = Коэф*Най[0].СтоимостьЗаМКАД;
						КонецеСли;	
					КонецеСли;	
					Нов.Подъём = СумП;
									
					// Экономика - ПодъемВодитель(расход) - 26.08.2016
					Если СумП <> 0 Тогда
						Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
						Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
					    Движение.Период = ДатаЗакрытия;	
						Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
							Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
								Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
							Иначе
								Движение.Партнер = Тек.ВладелецТовара;
							КонецеСли;
						КонецЕсли;		
						Движение.ИнтернетМагазин = Тек.ВладелецТовара;
						Движение.ТипЗаказа = Тек.ТипЗаказа;
						Движение.Заказ = Тек.Реализация;
						Движение.Рейс = Тек.Рейс;
						Движение.Водитель = Тек.Водитель;
						Движение.Транспорт = Тек.Транспорт;
						Движение.Экспедитор = Тек.Экспедитор;
						//Движение.Показатель = СтавкаЭквайринга;
						Движение.ДоходРасход = Перечисления.ДоходРасход.Расход;	
						Движение.Статья = Справочники.СтатьиЗатратКомпании.СтоимостьПодъемаОплачиваемая;
					    Движение.Сумма = СумП;
					КонецеСли;
					
					
					
					//+++ Костя ЗП На ПрямыеЗатраты
					НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
					НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
					НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
					НоваяСтрЗатрат.Сумма             = Нов.Сумма + СумП;
					НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
					//--- Костя ЗП На ПрямыеЗатраты
					
					Нов2 = Движения.СводПоЗарплате.Добавить();
					Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов2.Период = ДатаЗакрытия;
					Иначе
						Нов2.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов2.ПоказательКоличества = 1;
					Нов2.Сумма = Нов.Сумма + СумП;
					Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
					Нов2.ФизЛицо = Тек.Водитель;
					Нов2.ЮрЛицо = Тек.ЮрЛицо;
					Нов2.Регион = Тек.ТерминалДоставки;
                    //+++++Серегин М.В. 29.02.2016 12:15:46 
                    Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                    //-----Серегин М.В. 29.02.2016 12:15:47 
					
					
					// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
					Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
					Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
				    Движение.Период = ДатаЗакрытия;	
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Движение.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;		
					Движение.ИнтернетМагазин = Тек.ВладелецТовара;
					Движение.ТипЗаказа = Тек.ТипЗаказа;
					Движение.Заказ = Тек.Реализация;
					Движение.Рейс = Тек.Рейс;
					Движение.Водитель = Тек.Водитель;
					Движение.Транспорт = Тек.Транспорт;
					Движение.Экспедитор = Тек.Экспедитор;
					//Движение.Показатель = СтавкаЭквайринга;
					Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
					Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
				    Движение.Сумма = Нов.Сумма;
					// <<--- Михушкин 
					
					
				КонецЕсли;
			КонецеСли;
							
			Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
				Если Не РежимРасчетаЭ.Оклад И Не РежимРасчетаЭ.НеУчаствуетВФот Тогда

					Нов = Движения.РасчетЗарплаты.Добавить();
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов.Период = ДатаЗакрытия;
					Иначе
						Нов.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов.ФизЛицо = Тек.Экспедитор;
					Нов.ТипЭкипажа = ВариантЭ;
					Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
					Нов.Транспорт = Тек.Транспорт;
					Нов.Доставка = Тек.Реализация;
					Нов.ДоставкаБП = Тек.Доставка;
					Нов.КатегорияДоставки = Тек.КатегорияДоставки;					
					// Михушкин --->> 
					Нов.ПравилаОпределенияКатегорииЗаказаДляЗП = Тек.ПравилаОпределенияКатегорииЗаказаДляЗП;
					
					Если ТипЗнч(Тек.Реализация.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда			
						ЗапросКатегория = Новый Запрос("ВЫБРАТЬ
						                               |	ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП
						                               |ИЗ
						                               |	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
						                               |ГДЕ
						                               |	ДополнительныеПараметрыЗаказа.Заказ = &Заказ
						                               |	И НЕ ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП ЕСТЬ NULL ");
						ЗапросКатегория.УстановитьПараметр("Заказ", Тек.Реализация.Ссылка);					  
						РезКатегория = ЗапросКатегория.Выполнить().Выбрать();
						Если РезКатегория.Следующий() И ЗначениеЗаполнено(РезКатегория.КатегорияДляРасчетаЗП) Тогда	
							Нов.КатегорияЗаказаДляРасчетаЗП = РезКатегория.КатегорияДляРасчетаЗП;
						Иначе
							Нов.КатегорияЗаказаДляРасчетаЗП = Тек.КатегорияДоставки
						КонецЕсли;
					КонецЕсли;
					// <<--- Михушкин
					Нов.ТипДоставки = Тек.ТипЗаказа;
					Нов.VIPДоставка = Тек.VIPДоставка;
					Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
					Нов.ЮрЛицо = Тек.ЮрЛицо;
					Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
					Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
					Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
					Нов.ЗонаТарификации = Тек.ЗонаТарификации;
					Нов.Регион = Тек.ТерминалДоставки;	
					Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
					// Михушкин --->> 			
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Нов.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;
					// <<--- Михушкин					
					
					Если Тек.VIPДоставка Тогда
						Коэф = 2;
					Иначе
						Коэф = 1;
					КонецеСли;	
					
					Если ТерминалДоставки.Пустая() Или ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
						Если Тек.Доставка.ТочкаПрибытия.Москва Тогда
							СумДоМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
						Иначе
							СумЗаМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыМКАД;
						КонецеСли;
					Иначе
						Если ЗначениеЗаполнено(Тек.Реализация.ЗонаТарификации) Тогда
							Если Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД Тогда
								Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
								СумДоМкад = 1;
							ИначеЕсли Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД Тогда
								Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД;
								СумЗаМКАд = 1;
							КонецеСли;	
						Иначе
							СумДоМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
						КонецеСли;	
					КонецеСли;
					Струк = Новый СТруктура;
					Струк.Вставить("ТипЭкипажа", ВариантЭ);
					Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Экспедитор);
					//Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);
					Струк.Вставить("КатегорияДоставки", Нов.КатегорияЗаказаДляРасчетаЗП);
									
					// Михушкин --->>
					//НоваяКатегорияДоставки = Неопределено;
					//Если ЗначениеЗаполнено(Тек.ПравилаОпределенияКатегорииЗаказаДляЗП) Тогда
					//	Для каждого ПравилоСтр Из Тек.ПравилаОпределенияКатегорииЗаказаДляЗП.Правила Цикл
					//	    Если ПравилоСтр.ВесОт < Тек.ВесЗаказа И Тек.ВесЗаказа <= ПравилоСтр.ВесДо Тогда							
					//			НоваяКатегорияДоставки = ПравилоСтр.КатегорияЗаказаДляРасчетаЗП;										
					//		КонецЕсли;					 						
					//	КонецЦикла; 	
					//	Если ЗначениеЗаполнено(НоваяКатегорияДоставки) Тогда					
					//		Струк.Вставить("КатегорияДоставки", НоваяКатегорияДоставки);						
					//	Иначе
					//	    Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);
					//	КонецЕсли;	    	
					//Иначе
					//	Струк.Вставить("КатегорияДоставки", Тек.КатегорияДоставки);			
					//КонецЕсли;
					// <<--- Михушкин
					
					Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);
					Струк.Вставить("Регион", Тек.ТерминалДоставки);
					
					// Михушкин - 19.09 --->> 
					ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
					// <<--- Михушкин 	
					
					Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
						Если Не ЗначениеЗаполнено(РежимРасчетаЭ.ВидТарифаЗП) Тогда
							Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
								Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
									Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
									Если Не ЗначениеЗаполнено(Тариф) Тогда
										//Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), Новый Структура("Регион", )).Тариф;
										Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
									КонецеСли;	
								Иначе
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
							Если Не ЗначениеЗаполнено(Тариф) Тогда
								Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
							КонецеСли;	
							Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
							Нов.ВидТарифаРасчетаЗП = Тариф;
						Иначе
							Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаЭ.ВидТарифаЗП);
							Нов.ВидТарифаРасчетаЗП = РежимРасчетаЭ.ВидТарифаЗП;
						КонецеСли;	
					иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
					КонецЕсли;
				
					СтрукТр = Новый Структура;
					СтрукТр.Вставить("Транспорт", Тек.Транспорт);
					Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
					Если Не Наем Тогда
						Най = Тарифы.НайтиСтроки(Струк);
					Иначе
						Най = ТарифыНаем.НайтиСтроки(Струк);
						Нов.НаёмныйЭкипаж = Истина;
					КонецеСли;
					
					Если Не РежимРасчетаЭ.Оклад Тогда
						Если Най.Количество() = 1 Тогда
							Если СумДоМКАд = 1 Тогда
								Нов.Сумма = Коэф*Най[0].СтоимостьДоМКАД;
							ИначеЕсли СумЗаМКАд = 1 Тогда
								Нов.Сумма = Коэф*Най[0].СтоимостьЗаМКАД;
							КонецеСли;	
						КонецеСли;	
						Нов.Подъём = СумП;
						
						// Экономика - ПодъемВодитель(расход) - 26.08.2016
						Если СумП <> 0 Тогда
							Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
							Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
						    Движение.Период = ДатаЗакрытия;	
							Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
								Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
									Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
								Иначе
									Движение.Партнер = Тек.ВладелецТовара;
								КонецеСли;
							КонецЕсли;		
							Движение.ИнтернетМагазин = Тек.ВладелецТовара;
							Движение.ТипЗаказа = Тек.ТипЗаказа;
							Движение.Заказ = Тек.Реализация;
							Движение.Рейс = Тек.Рейс;
							Движение.Водитель = Тек.Водитель;
							Движение.Транспорт = Тек.Транспорт;
							Движение.Экспедитор = Тек.Экспедитор;
							//Движение.Показатель = СтавкаЭквайринга;
							Движение.ДоходРасход = Перечисления.ДоходРасход.Расход;	
							Движение.Статья = Справочники.СтатьиЗатратКомпании.СтоимостьПодъемаОплачиваемая;
						    Движение.Сумма = СумП;
						КонецеСли;
						
						
						
						//+++ Костя ЗП На ПрямыеЗатраты
						НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
						НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
						НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
						НоваяСтрЗатрат.Сумма             = Нов.Сумма + СумП;
						НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
						//--- Костя ЗП На ПрямыеЗатраты
						
						Нов2 = Движения.СводПоЗарплате.Добавить();
						Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
						Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
							Нов2.Период = ДатаЗакрытия;
						Иначе
							Нов2.Период = Тек.Реализация.Дата;
						КонецеСли;	
						Нов2.ПоказательКоличества = 1;
						Нов2.Сумма = Нов.Сумма + СумП;
						Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
						Нов2.ФизЛицо = Тек.Экспедитор;	
						Нов2.ЮрЛицо = Тек.ЮрЛицо;
						Нов2.Регион = Тек.ТерминалДоставки;
                        //+++++Серегин М.В. 29.02.2016 12:15:46 
                        Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                        //-----Серегин М.В. 29.02.2016 12:15:47 
						
						
						
						// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
						Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
						Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
					    Движение.Период = ДатаЗакрытия;	
						Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
							Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
								Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
							Иначе
								Движение.Партнер = Тек.ВладелецТовара;
							КонецеСли;
						КонецЕсли;		
						Движение.ИнтернетМагазин = Тек.ВладелецТовара;
						Движение.ТипЗаказа = Тек.ТипЗаказа;
						Движение.Заказ = Тек.Реализация;
						Движение.Рейс = Тек.Рейс;
						Движение.Водитель = Тек.Водитель;
						Движение.Транспорт = Тек.Транспорт;
						Движение.Экспедитор = Тек.Экспедитор;
						//Движение.Показатель = СтавкаЭквайринга;
						Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
						Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
					    Движение.Сумма = Нов.Сумма;
						// <<--- Михушкин
					КонецеСли;
				КонецеСли;	
			КонецеСли;
		ИначеЕсли Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Забор Тогда
			Если Не РежимРасчетаВ.Оклад И Не РежимРасчетаВ.НеУчаствуетВФот Тогда
				
				Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
					СумП = Окр(Тек.Показатель2/2, 2);
				Иначе
					СумП = Тек.Показатель2;
				КонецЕСли;	
				
				Нов = Движения.РасчетЗарплаты.Добавить();
				Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
					Нов.Период = ДатаЗакрытия;
				Иначе
					Нов.Период = Тек.Реализация.Дата;
				КонецеСли;	
				Нов.ФизЛицо = Тек.Водитель;
				Нов.ТипЭкипажа = ВариантЭ;
				Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
				Нов.Транспорт = Тек.Транспорт;
				Нов.Доставка = Тек.Реализация;
				Нов.ТипДоставки = Тек.ТипЗаказа;
				Нов.VIPДоставка = Тек.VIPДоставка;
				Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
				Нов.ЮрЛицо = Тек.ЮрЛицо;
				Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
				Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
				Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
				Нов.ЗонаТарификации = Тек.ЗонаТарификации;
				Нов.Регион = Тек.ТерминалДоставки;
				Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
				// Михушкин --->> 			
				Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
					Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
						Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
					Иначе
						Нов.Партнер = Тек.ВладелецТовара;
					КонецеСли;
				КонецЕсли;
				// <<--- Михушкин
				
				Если Тек.VIPДоставка Тогда
					Коэф = 2;
				Иначе
					Коэф = 1;
				КонецеСли;	
				
				Если ТерминалДоставки.Пустая() Или ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
					Если Тек.Доставка.ТочкаПрибытия.Москва Тогда
						СумДоМкад = 1;
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
					Иначе
						СумЗаМкад = 1;
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыМКАД;
					КонецеСли;
				Иначе
					Если ЗначениеЗаполнено(Тек.Реализация.ЗонаТарификации) Тогда
						Если Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД Тогда
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
							СумДоМкад = 1;
						ИначеЕсли Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД Тогда
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД;
							СумЗаМКАд = 1;
						КонецеСли;	
					Иначе
						СумДоМкад = 1;
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
					КонецеСли;	
				КонецеСли;
				
				
				Струк3 = Новый Структура;
				Струк3.Вставить("Транспорт", Тек.Транспорт);
				ТП = РегистрыСведений.ТипыТранспорта.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), Струк3).ТипТранспорта;
				
				Нов.Подъём = СумП;
				
				// Экономика - ПодъемВодитель(расход) - 26.08.2016
				Если СумП <> 0 Тогда
					Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
					Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
				    Движение.Период = ДатаЗакрытия;	
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Движение.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;		
					Движение.ИнтернетМагазин = Тек.ВладелецТовара;
					Движение.ТипЗаказа = Тек.ТипЗаказа;
					Движение.Заказ = Тек.Реализация;
					Движение.Рейс = Тек.Рейс;
					Движение.Водитель = Тек.Водитель;
					Движение.Транспорт = Тек.Транспорт;
					Движение.Экспедитор = Тек.Экспедитор;
					//Движение.Показатель = СтавкаЭквайринга;
					Движение.ДоходРасход = Перечисления.ДоходРасход.Расход;	
					Движение.Статья = Справочники.СтатьиЗатратКомпании.СтоимостьПодъемаОплачиваемая;
				    Движение.Сумма = СумП;
				КонецеСли;
				
				// Михушкин - 19.09 --->> 
				ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
				// <<--- Михушкин

				Струк = Новый СТруктура;
				Струк.Вставить("ТипЭкипажа", ВариантЭ);
				Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Водитель);
				Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);
				
				Если Не ЗначениеЗаполнено(ТП) Тогда
					ТП = Справочники.ТипыТранспортаДляРасчетаЗП.Основной;
				КонецеСли;	
				Струк.Вставить("ТипТранспорта", ТП);
				Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
					
					Если Не ЗначениеЗаполнено(РежимРасчетаВ.ВидТарифаЗП) Тогда
						Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
							Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
								Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
								Если Не ЗначениеЗаполнено(Тариф) Тогда
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							Иначе
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
						ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
							Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
						КонецеСли;	
						Если Не ЗначениеЗаполнено(Тариф) Тогда
							Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
						КонецеСли;	
						Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
						Нов.ВидТарифаРасчетаЗП = Тариф;
					Иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаВ.ВидТарифаЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаВ.ВидТарифаЗП;
					КонецеСли;	
				иначе
					Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
					Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
                КонецЕсли;
                
                //+++++Серегин М.В. 19.02.2016 10:58:17 
				Струк.Вставить("ОбъёмЗабора", Тек.ОбъёмЗабора);
                //-----Серегин М.В. 19.02.2016 10:58:19 
                
				СтрукТр = Новый Структура;
				СтрукТр.Вставить("Транспорт", Тек.Транспорт);
				Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
				Если Не Наем Тогда
					//+++++Серегин М.В. 19.02.2016 10:54:27 было Най = Тарифы.НайтиСтроки(Струк);
                    Най = НайтиДанныеПоТарифам(Струк);
				Иначе
					//+++++Серегин М.В. 19.02.2016 10:55:07 было Най = ТарифыНаем.НайтиСтроки(Струк);
                    Най = НайтиДанныеПоТарифамНаемники(Струк);
					Нов.НаёмныйЭкипаж = Истина;
				КонецеСли;
				
				Если Не РежимРасчетаВ.Оклад Тогда
					
					Если Най.Количество() = 1 Тогда
						Если СумДоМКАд = 1 Тогда
							Нов.Сумма = Коэф*Най[0].СтоимостьДоМКАД;
						ИначеЕсли СумЗаМКАд = 1 Тогда
							Нов.Сумма = Коэф*Най[0].СтоимостьЗаМКАД;
						КонецеСли;	
					КонецеСли;	
					
					//+++ Костя ЗП На ПрямыеЗатраты
					НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
					НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
					НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
					НоваяСтрЗатрат.Сумма             = Нов.Сумма + СумП;
					НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
					//--- Костя ЗП На ПрямыеЗатраты
					
					Нов2 = Движения.СводПоЗарплате.Добавить();
					Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов2.Период = ДатаЗакрытия;
					Иначе
						Нов2.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов2.ПоказательКоличества = 1;
					Нов2.Сумма = Нов.Сумма;
					Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
					Нов2.ФизЛицо = Тек.Водитель;
					Нов.ТипТранспорта = ТП;   
					Нов2.ЮрЛицо = Тек.ЮрЛицо;
					Нов2.Регион = Тек.ТерминалДоставки;
                    //+++++Серегин М.В. 29.02.2016 12:15:46 
                    Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                    //-----Серегин М.В. 29.02.2016 12:15:47 
					
					
					// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
					Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
					Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
				    Движение.Период = ДатаЗакрытия;	
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Движение.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;		
					Движение.ИнтернетМагазин = Тек.ВладелецТовара;
					Движение.ТипЗаказа = Тек.ТипЗаказа;
					Движение.Заказ = Тек.Реализация;
					Движение.Рейс = Тек.Рейс;
					Движение.Водитель = Тек.Водитель;
					Движение.Транспорт = Тек.Транспорт;
					Движение.Экспедитор = Тек.Экспедитор;
					//Движение.Показатель = СтавкаЭквайринга;
					Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
					Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
				    Движение.Сумма = Нов.Сумма;
					// <<--- Михушкин
					
				КонецеСли;
			КонецеСли;
			Если Не РежимРасчетаЭ.Оклад И Не РежимРасчетаЭ.НеУчаствуетВФот Тогда
				Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
					
					СумП = Окр(Тек.Показатель2/2, 2); // добавлено 02.08.2016 по ошибке (СумП не было)
					
					Нов = Движения.РасчетЗарплаты.Добавить();
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов.Период = ДатаЗакрытия;
					Иначе
						Нов.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов.ФизЛицо = Тек.Экспедитор;
					Нов.ТипЭкипажа = ВариантЭ;
					Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
					Нов.Транспорт = Тек.Транспорт;
					Нов.Доставка = Тек.Реализация;
					Нов.ТипДоставки = Тек.ТипЗаказа;
					Нов.VIPДоставка = Тек.VIPДоставка;
					Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
					Нов.ЮрЛицо = Тек.ЮрЛицо;
					Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
					Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
					Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
					Нов.ЗонаТарификации = Тек.ЗонаТарификации;
					Нов.Регион = Тек.ТерминалДоставки;
					Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
					
					// Михушкин --->> 			
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Нов.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;
					// <<--- Михушкин
					
					Если Тек.VIPДоставка Тогда
						Коэф = 2;
					Иначе
						Коэф = 1;
					КонецеСли;	
					
					Если ТерминалДоставки.Пустая() Или ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
						Если Тек.Доставка.ТочкаПрибытия.Москва Тогда
							СумДоМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
						Иначе
							СумЗаМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыМКАД;
						КонецеСли;
					Иначе
						Если ЗначениеЗаполнено(Тек.Реализация.ЗонаТарификации) Тогда
							Если Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД Тогда
								Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
								СумДоМкад = 1;
							ИначеЕсли Тек.Реализация.ЗонаТарификации.ТерриториальностьДляРасчетаЗП = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД Тогда
								Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыКАД;
								СумЗаМКАд = 1;
							КонецеСли;	
						Иначе
							СумДоМкад = 1;
							Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
						КонецеСли;	
					КонецеСли;
					Струк = Новый СТруктура;
					
					// Михушкин - 19.09 --->> 
					ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
					// <<--- Михушкин
					
					Струк.Вставить("ТипЭкипажа", ВариантЭ);
					Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Экспедитор);
					Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);
					
					Струк3 = Новый Структура;
					Струк3.Вставить("Транспорт", Тек.Транспорт);
					ТП = РегистрыСведений.ТипыТранспорта.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), Струк3).ТипТранспорта;
					
					
					Если Не ЗначениеЗаполнено(ТП) Тогда
						ТП = Справочники.ТипыТранспортаДляРасчетаЗП.Основной;
					КонецеСли;	
					Струк.Вставить("ТипТранспорта", ТП);
					Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
						
						Если Не ЗначениеЗаполнено(РежимРасчетаЭ.ВидТарифаЗП) Тогда
							Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
								Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
									Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
									Если Не ЗначениеЗаполнено(Тариф) Тогда
										Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
									КонецеСли;	
								Иначе
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
							Если Не ЗначениеЗаполнено(Тариф) Тогда
								Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
							КонецеСли;	
							Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
							Нов.ВидТарифаРасчетаЗП = Тариф;
						Иначе
							Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаЭ.ВидТарифаЗП);
							Нов.ВидТарифаРасчетаЗП = РежимРасчетаЭ.ВидТарифаЗП;
						КонецеСли;	
					иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
                    КонецЕсли;
                    
                //+++++Серегин М.В. 19.02.2016 10:58:17 
				Струк.Вставить("ОбъёмЗабора", Тек.ОбъёмЗабора);
                //-----Серегин М.В. 19.02.2016 10:58:19 
					
					СтрукТр = Новый Структура;
					СтрукТр.Вставить("Транспорт", Тек.Транспорт);
					Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
					Если Не Наем Тогда
                        //+++++Серегин М.В. 19.02.2016 10:54:27 было Най = Тарифы.НайтиСтроки(Струк);
                        Най = НайтиДанныеПоТарифам(Струк);
                    Иначе
                        //+++++Серегин М.В. 19.02.2016 10:55:07 было Най = ТарифыНаем.НайтиСтроки(Струк);
                        Най = НайтиДанныеПоТарифамНаемники(Струк);
                        Нов.НаёмныйЭкипаж = Истина;
					КонецеСли;
					
					Если Не РежимРасчетаЭ.Оклад Тогда
						
						Если Най.Количество() = 1 Тогда
							Если СумДоМКАд = 1 Тогда
							Нов.Сумма = Коэф*Най[0].СтоимостьДоМКАД;
							ИначеЕсли СумЗаМКАд = 1 Тогда
								Нов.Сумма = Най[0].СтоимостьЗаМКАД;
							КонецеСли;	
						КонецеСли;	
						//Нов.Подъём = СумП;
						
						//+++ Костя ЗП На ПрямыеЗатраты
						НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
						НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
						НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
						НоваяСтрЗатрат.Сумма             = Нов.Сумма + СумП;
						НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
						//--- Костя ЗП На ПрямыеЗатраты
						
						Нов2 = Движения.СводПоЗарплате.Добавить();
						Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
						Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
							Нов2.Период = ДатаЗакрытия;
						Иначе
							Нов2.Период = Тек.Реализация.Дата;
						КонецеСли;	
						Нов2.ПоказательКоличества = 1;
						Нов2.Сумма = Нов.Сумма;
						Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
						Нов2.ФизЛицо = Тек.Экспедитор;
						Нов.ТипТранспорта = ТП;
						Нов2.ЮрЛицо = Тек.ЮрЛицо;
						Нов2.Регион = Тек.ТерминалДоставки;
                        //+++++Серегин М.В. 29.02.2016 12:15:46 
                        Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                        //-----Серегин М.В. 29.02.2016 12:15:47 
						
						
						// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
						Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
						Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
					    Движение.Период = ДатаЗакрытия;	
						Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
							Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
								Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
							Иначе
								Движение.Партнер = Тек.ВладелецТовара;
							КонецеСли;
						КонецЕсли;		
						Движение.ИнтернетМагазин = Тек.ВладелецТовара;
						Движение.ТипЗаказа = Тек.ТипЗаказа;
						Движение.Заказ = Тек.Реализация;
						Движение.Рейс = Тек.Рейс;
						Движение.Водитель = Тек.Водитель;
						Движение.Транспорт = Тек.Транспорт;
						Движение.Экспедитор = Тек.Экспедитор;
						//Движение.Показатель = СтавкаЭквайринга;
						Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
						Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
					    Движение.Сумма = Нов.Сумма;
						// <<--- Михушкин
					КонецеСли;
				КонецеСли;
			КонецеСли;
		ИначеЕсли Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Фрахт Тогда
			Если Не РежимРасчетаВ.Оклад И Не РежимРасчетаВ.НеУчаствуетВФот Тогда
				Если Тек.ФрахтЧасов = 0 Тогда
					Продолжить;
				КонецеСли;
				Нов = Движения.РасчетЗарплаты.Добавить();
				Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
					Нов.Период = ДатаЗакрытия;
				Иначе
					Нов.Период = Тек.Реализация.Дата;
				КонецеСли;	
				Нов.VIPДоставка = Тек.VIPДоставка;
				Если Тек.VIPДоставка Тогда
					Коэф = 2;
				Иначе
					Коэф = 1;
				КонецеСли;	
				
				Нов.ФизЛицо = Тек.Водитель;
				Нов.ТипЭкипажа = ВариантЭ;
				Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
				Нов.Транспорт = Тек.Транспорт;
				Нов.Доставка = Тек.Реализация;
				Нов.ТипДоставки = Тек.ТипЗаказа;
				Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
				Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
				Нов.ЮрЛицо = Тек.ЮрЛицо;
				Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
				Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
				Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
				Нов.ЗонаТарификации = Тек.ЗонаТарификации;
				Нов.Регион = Тек.ТерминалДоставки;
				Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
				
				// Михушкин --->> 			
				Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
					Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
						Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
					Иначе
						Нов.Партнер = Тек.ВладелецТовара;
					КонецеСли;
				КонецЕсли;
				// <<--- Михушкин
				
				Струк = Новый СТруктура;
				Струк.Вставить("ТипЭкипажа", ВариантЭ);
				Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Водитель);
				Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);
				Струк.Вставить("Регион", Тек.ТерминалДоставки);
				
				// Михушкин - 19.09 --->> 
				ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
				// <<--- Михушкин
				
				Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
					
					Если Не ЗначениеЗаполнено(РежимРасчетаВ.ВидТарифаЗП) Тогда
						Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
							Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
								Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
								Если Не ЗначениеЗаполнено(Тариф) Тогда
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							Иначе
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
						ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
							Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
						КонецеСли;	
						Если Не ЗначениеЗаполнено(Тариф) Тогда
							Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
						КонецеСли;	
						Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
						Нов.ВидТарифаРасчетаЗП = Тариф;
					Иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаВ.ВидТарифаЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаВ.ВидТарифаЗП;
					КонецеСли;	
				иначе
					Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
					Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
				КонецЕсли;
				
				СтрукТр = Новый Структура;
				СтрукТр.Вставить("Транспорт", Тек.Транспорт);
				Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
				Если Не Наем Тогда
					Най = Тарифы.НайтиСтроки(Струк);
				Иначе
					Най = ТарифыНаем.НайтиСтроки(Струк);
					Нов.НаёмныйЭкипаж = Истина;
				КонецеСли;
				
				Если Най.Количество() = 0 Тогда
					#Если Клиент Тогда
						Сообщить("Не определен зарплатный тариф для критериев заказа: " + СокрЛП(Тек.Реализация.Номер) + ", тарифная сетка: " + СокрЛП(Струк.ВидТарифаРасчетаЗП), СтатусСообщения.ОченьВажное);
					#КонецеСли
					Отказ = Истина;
					Продолжить;
				КонецеСли;
				Если Най[0].СтавкаФрахт = 0 Тогда
					Если Най.Количество() = 1 Тогда
						Нов.Сумма = Коэф*Най[0].СтоимостьЧас*Тек.ФрахтЧасов;
					КонецеСли;
				Иначе
					Нов.Сумма = Най[0].СтавкаФрахт;
				КонецеСли;	
				Нов.ОтработаноЧасов = Тек.ФрахтЧасов;
				
				Если Най[0].МинимальнаяСтоимость <> 0 Тогда
					Если Най[0].МинимальнаяСтоимость > Нов.Сумма Тогда
						Нов.Сумма = Най[0].МинимальнаяСтоимость;
						Нов.РасчетПоМинимальнойСтоимости = Истина;
					КонецеСли;	
				КонецеСли;	
				
				//+++ Костя ЗП На ПрямыеЗатраты
				НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
				НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
				НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
				НоваяСтрЗатрат.Сумма             = Нов.Сумма;
				НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
				//--- Костя ЗП На ПрямыеЗатраты
				
				Нов2 = Движения.СводПоЗарплате.Добавить();
				Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
				Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
					Нов2.Период = ДатаЗакрытия;
				Иначе
					Нов2.Период = Тек.Реализация.Дата;
				КонецеСли;	
				Нов2.ПоказательКоличества = 1;
				Нов2.Сумма = Нов.Сумма;
				Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
				Нов2.ФизЛицо = Тек.Водитель;
				Нов2.ЮрЛицо = Тек.ЮрЛицо;
				Нов2.Регион = Тек.ТерминалДоставки;
                //+++++Серегин М.В. 29.02.2016 12:15:46 
                Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                //-----Серегин М.В. 29.02.2016 12:15:47 
				
				// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
				Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
				Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
			    Движение.Период = ДатаЗакрытия;	
				Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
					Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
						Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
					Иначе
						Движение.Партнер = Тек.ВладелецТовара;
					КонецеСли;
				КонецЕсли;		
				Движение.ИнтернетМагазин = Тек.ВладелецТовара;
				Движение.ТипЗаказа = Тек.ТипЗаказа;
				Движение.Заказ = Тек.Реализация;
				Движение.Рейс = Тек.Рейс;
				Движение.Водитель = Тек.Водитель;
				Движение.Транспорт = Тек.Транспорт;
				Движение.Экспедитор = Тек.Экспедитор;
				//Движение.Показатель = СтавкаЭквайринга;
				Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
				Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
			    Движение.Сумма = Нов.Сумма;
				// <<--- Михушкин
			КонецеСли;
			
			Если Не РежимРасчетаЭ.Оклад И Не РежимРасчетаЭ.НеУчаствуетВФот Тогда
				Если ВариантЭ = Перечисления.ТипыТарифовРасчетаЗарплаты.ЭкипажПолный Тогда
					
					СумП = Окр(Тек.Показатель2/2, 2); // добавлено 02.08.2016 по ошибке (СумП не было)
								
					Нов = Движения.РасчетЗарплаты.Добавить();
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов.Период = ДатаЗакрытия;
					Иначе
						Нов.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов.ФизЛицо = Тек.Экспедитор;
					Нов.ТипЭкипажа = ВариантЭ;
					Нов.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
					Нов.Транспорт = Тек.Транспорт;
					Нов.Доставка = Тек.Реализация;
					Нов.ТипДоставки = Тек.ТипЗаказа;
					Нов.VIPДоставка = Тек.VIPДоставка;
					Нов.ВидВыполненияДоставки = Перечисления.ВидыВыполненияДоставокЭкипажами.Доставка;
					Нов.ЮрЛицо = Тек.ЮрЛицо;
					Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
					Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
					Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
					Нов.ЗонаТарификации = Тек.ЗонаТарификации;
					Нов.Регион = Тек.ТерминалДоставки;
					Нов.ОбъёмЗабора = Тек.ОбъёмЗабора;
					// Михушкин --->> 			
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Нов.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Нов.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;
					// <<--- Михушкин
					
					Если Тек.VIPДоставка Тогда
						Коэф = 2;
					Иначе
						Коэф = 1;
					КонецеСли;	
					
					//Если Тек.Доставка.ТочкаПрибытия.Москва Тогда
					СумДоМкад = 1;
					Если ТерминалДоставки.Пустая() Или ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахМКАД;
					ИначеЕсли ТерминалДоставки = Справочники.РегиональныеТерминалы.СПбСтриж Тогда	
						Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаВПределахКАД;
					КонецеСли;	
					//Иначе
					//	СумЗаМкад = 1;
					//	Нов.Территориальность = Перечисления.ТерриториальностьДоставок.ДоставкаЗаПределыМКАД;
					//КонецеСли;
					Струк = Новый СТруктура;
					
					Струк.Вставить("ТипЭкипажа", ВариантЭ);
					Струк.Вставить("УчастникЭкипажа", Перечисления.УчастникЭкипажа.Экспедитор);
					Струк.Вставить("ТипЗаказа", Тек.ТипЗаказа);
					Струк.Вставить("Регион", Тек.ТерминалДоставки);
					
					// Михушкин - 19.09 --->> 
					ОтборРегион = Новый Структура("Регион", Тек.ТерминалДоставки);
					// <<--- Михушкин
					
					Если Не ЗначениеЗаполнено(РежимРасчетаПоКонтрагенту.ТарифЗП) Тогда				
						Если Не ЗначениеЗаполнено(РежимРасчетаЭ.ВидТарифаЗП) Тогда
							Если МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ПустаяСсылка() Или МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаПриемаФизлица Тогда
								Если ЗначениеЗаполнено(Нов.ФизЛицо.ДатаПриемаНаРаботу) Тогда
									Тариф = РегистрыСведений.ТарифыРасчетаЗППоДатеПриема.ПолучитьПоследнее(КонецДня(Нов.ФизЛицо.ДатаПриемаНаРаботу)).Тариф;
									Если Не ЗначениеЗаполнено(Тариф) Тогда
										Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
									КонецеСли;	
								Иначе
									Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
								КонецеСли;	
							ИначеЕсли МетодикаПримененияПериода = Перечисления.ТипыПримененияПериодаТарифаРасчетаЗП.ДатаЗаказа Тогда
								Тариф = РегистрыСведений.ОсновныеТарифыРасчетаЗП.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), ОтборРегион).Тариф;
							КонецеСли;	
							Если Не ЗначениеЗаполнено(Тариф) Тогда
								Тариф = Справочники.ВидыТарифовРасчетаЗП.Основной;
							КонецеСли;	
							Струк.Вставить("ВидТарифаРасчетаЗП", Тариф);
							Нов.ВидТарифаРасчетаЗП = Тариф;
						Иначе
							Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаЭ.ВидТарифаЗП);
							Нов.ВидТарифаРасчетаЗП = РежимРасчетаЭ.ВидТарифаЗП;
						КонецеСли;	
					иначе
						Струк.Вставить("ВидТарифаРасчетаЗП", РежимРасчетаПоКонтрагенту.ТарифЗП);
						Нов.ВидТарифаРасчетаЗП = РежимРасчетаПоКонтрагенту.ТарифЗП;
					КонецЕсли;
					СтрукТр = Новый Структура;
					СтрукТр.Вставить("Транспорт", Тек.Транспорт);
					Наем = РегистрыСведений.НаёмныйТранспорт.ПолучитьПоследнее(КонецДня(ДатаЗакрытия), СтрукТр).Наемник;
					Если Не Наем Тогда
						Най = Тарифы.НайтиСтроки(Струк);
					Иначе
						Най = ТарифыНаем.НайтиСтроки(Струк);
						Нов.НаёмныйЭкипаж = Истина;
					КонецеСли;
					Если Най.Количество() = 1 Тогда
						Нов.Сумма = Коэф*Най[0].СтоимостьЧас*Тек.ФрахтЧасов;
					КонецеСли;
					
					Нов.ОтработаноЧасов = Тек.ФрахтЧасов;
					
					Если Най[0].МинимальнаяСтоимость <> 0 Тогда
						Если Най[0].МинимальнаяСтоимость > Нов.Сумма Тогда
							Нов.Сумма = Най[0].МинимальнаяСтоимость;
							Нов.РасчетПоМинимальнойСтоимости = Истина;
						КонецеСли;	
					КонецеСли;	
					
					//+++ Костя ЗП На ПрямыеЗатраты
					НоваяСтрЗатрат = ТабПрямыхЗатрат.Добавить();
					НоваяСтрЗатрат.СтатьяЗатрат      = СтатьяЗатрат;
					НоваяСтрЗатрат.КатегорияДоставки = Тек.КатегорияДоставки;
					НоваяСтрЗатрат.Сумма             = Нов.Сумма;
					НоваяСтрЗатрат.ТипЗаказа         = Тек.ТипЗаказа;
					//--- Костя ЗП На ПрямыеЗатраты
					
					Нов2 = Движения.СводПоЗарплате.Добавить();
					Нов2.ТипРасчетаЗарплаты = Перечисления.ТипыРасчетаЗарплаты.СдельныйРасчетПоДоставкам;
					Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
						Нов2.Период = ДатаЗакрытия;
					Иначе
						Нов2.Период = Тек.Реализация.Дата;
					КонецеСли;	
					Нов2.ПоказательКоличества = 1;
					Нов2.Сумма = Нов.Сумма;
					Нов2.УчастникЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
					Нов2.ФизЛицо = Тек.Экспедитор;
					Нов2.ЮрЛицо = Тек.ЮрЛицо;
					Нов2.Регион = Тек.ТерминалДоставки;
                    //+++++Серегин М.В. 29.02.2016 12:15:46 
                    Нов2.ТипНУ = Перечисления.ТипыНУЭкипажей.РасчетЗП;
                    //-----Серегин М.В. 29.02.2016 12:15:47 
					
					// Михушкин - движение по РН ОперативнаяЭкономикаЗаказов --->> 
					Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
					Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
				    Движение.Период = ДатаЗакрытия;	
					Если ЗначениеЗаполнено(Тек.ВладелецТовара) Тогда 
						Если Не Тек.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
							Движение.Партнер = Тек.ВладелецТовара.Родитель.ОсновнойМагазин;
						Иначе
							Движение.Партнер = Тек.ВладелецТовара;
						КонецеСли;
					КонецЕсли;		
					Движение.ИнтернетМагазин = Тек.ВладелецТовара;
					Движение.ТипЗаказа = Тек.ТипЗаказа;
					Движение.Заказ = Тек.Реализация;
					Движение.Рейс = Тек.Рейс;
					Движение.Водитель = Тек.Водитель;
					Движение.Транспорт = Тек.Транспорт;
					Движение.Экспедитор = Тек.Экспедитор;
					//Движение.Показатель = СтавкаЭквайринга;
					Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
					Движение.Статья = Справочники.СтатьиЗатратКомпании.ЗаработнаяПлата;
				    Движение.Сумма = Нов.Сумма;
					// <<--- Михушкин
				КонецеСли;
			КонецеСли;
		КонецеСли;
	КонецЦикла;	
	
	//+++ Костя Запись ЗП На ПрямыеЗатраты
	Если ТабПрямыхЗатрат.Количество() > 0 Тогда
		
		ТабПрямыхЗатрат.Свернуть("СтатьяЗатрат, КатегорияДоставки, ТипЗаказа","Сумма");
		
		// Регистр ВводДанныхОРасходахКомпании
		Движения.ВводДанныхОРасходахКомпании.Записывать = Истина;		
		Движения.ВводДанныхОРасходахКомпании.Очистить();
		
		Для Каждого ТекСтрокаСтатьиЗатрат Из ТабПрямыхЗатрат Цикл
			Движение = Движения.ВводДанныхОРасходахКомпании.Добавить();
			Движение.Период            = Дата;
			Движение.Партнер           = Контрагент;
			Движение.СтатьяЗатрат      = СтатьяЗатрат;
			Движение.ТипЗатрат         = СтатьяЗатрат.ТипЗатрат;
			Движение.ВидЗатрат         = Перечисления.ВидыЗатратКомпании.ПрямыеРасходы;
			Движение.КатегорияДоставки = ТекСтрокаСтатьиЗатрат.КатегорияДоставки;
			Движение.ТипЗаказа         = ТекСтрокаСтатьиЗатрат.ТипЗаказа;
			Движение.Сумма             = ТекСтрокаСтатьиЗатрат.Сумма;
		КонецЦикла;
		
	КонецЕсли;
	//--- Костя Запись ЗП На ПрямыеЗатраты
	
	
	
КонецПроцедуры	

Процедура ОбновлениеСтатусовВАдминке(Подкл) Экспорт
    #Область  СтарыйКод
    ////Стр = Стр + "
    ////|INSERT INTO @t ([orderID],[StatusID],[who],[CompleteDate],[ServiceDC],[Comment],[isRefusal],[ReasonRefusal],[deliveryPrice],[payType]) VALUES (" + Сокрлп(Тек.Реализация.Номер) + "," + Строка(Статус) + ",'" + ПараметрыСеанса.ТекущийПользователь + "', null,null,null,null,null,null,null)";
    //Статус = 0;
    //Стр = "";
    //Стр2 = "";
    //ТекстСоставлен = Ложь;
    //СтрТекстЗапроса = ""; //+++
    //Для Каждого Тек Из Заказы Цикл
    //	Если ТипДоставки = Перечисления.ТипыЗаказов.Доставка Тогда
    //		Если Тек.Закрыть Или Тек.Отклонить Тогда
    //			Статус = 401;
    //			Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда
    //				СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",301,'Закрытие заказов'";
    //                //+++++Серегин М.В. 06.11.2015 10:48:32 к оптимизации
    //                Если lem.СохранитьСтатус(Тек.Реализация, 301, Ссылка) Тогда
    //					//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //					СтрТекстЗапроса = СтрТекстЗапроса + "(" +Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",301,'Закрытие заказов'"+")"+",";//+++
    //					
    //                КонецеСли;
    //				//
    //				//СтрЗапроса = "EXEC import_setOrderFinalStatus " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",301,'Закрытие заказов'";
    //				Если lem.СохранитьФинальныйСтатус(Тек.Реализация, 301, Ссылка) Тогда
    //					//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //                КонецеСли;
    //                //-----Серегин М.В. 06.11.2015 10:48:42
    //				Статус = 301;
    //			КонецеСли;
    //			
    //			Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
    //				СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",302,'Закрытие заказов'";
    //				Если lem.СохранитьСтатус(Тек.Реализация, 302, Ссылка) Тогда
    //					//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //					СтрТекстЗапроса = СтрТекстЗапроса + "(" + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",302,'Закрытие заказов'"+")"+",";//+++	
    //					
    //				КонецЕСли;	
    //				//
    //				//СтрЗапроса = "EXEC import_setOrderFinalStatus " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",302,'Закрытие заказов'";
    //				Если lem.СохранитьФинальныйСтатус(Тек.Реализация, 302, Ссылка) Тогда
    //					//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //				КонецеСли;	
    //				Статус = 302;
    //			КонецеСли;
    //			
    //			Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена И Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
    //				СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",303,'Закрытие заказов'";
    //				Если lem.СохранитьСтатус(Тек.Реализация, 303, Ссылка) Тогда
    //					//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //					СтрТекстЗапроса = СтрТекстЗапроса + "(" + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",303,'Закрытие заказов'"+")"+",";//+++		
    //					
    //				КонецеСли;	
    //				//
    //				//СтрЗапроса = "EXEC import_setOrderFinalStatus " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",303,'Закрытие заказов'";
    //				Если lem.СохранитьФинальныйСтатус(Тек.Реализация, 303, Ссылка) Тогда
    //					//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //				КонецеСли;	
    //				Статус = 303;
    //			КонецеСли;
    //			
    //			Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена И Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
    //				СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",304,'Закрытие заказов'";
    //				Если lem.СохранитьСтатус(Тек.Реализация, 304, Ссылка) Тогда
    //					//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //					СтрТекстЗапроса = СтрТекстЗапроса + "(" + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",304,'Закрытие заказов'"+")"+",";//+++						
    //					
    //				КонецеСли;	
    //				//СтрЗапроса = "EXEC import_setOrderFinalStatus " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",304,'Закрытие заказов'";
    //				Если lem.СохранитьФинальныйСтатус(Тек.Реализация, 304, Ссылка) Тогда
    //					//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //				КонецеСли;	
    //				Статус = 304;
    //			КонецеСли;
    //			Стр2 = Стр2 + "
    //			|INSERT INTO @t ([orderID],[FinalStatusID],[who]) VALUES (" + Сокрлп(Тек.Реализация.Номер) + "," + Строка(Статус) + ",'" + ПараметрыСеанса.ТекущийПользователь + "')";
    //			
    //			//Стр = Стр + "
    //			//|INSERT INTO @t ([orderID],[StatusID],[who],[CompleteDate],[ServiceDC],[Comment],[isRefusal],[ReasonRefusal],[deliveryPrice],[payType]) VALUES (" + Сокрлп(Тек.Реализация.Номер) + "," + Строка(Статус) + ",'" + ПараметрыСеанса.ТекущийПользователь + "', null,null,null,null,null,null,null)";
    //		ТекстСоставлен = Истина;
    //		КонецеСли;
    //	ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз Тогда
    //		Если Тек.Закрыть Или Тек.Отклонить Тогда
    //			Статус = 401;
    //			
    //			Если Тек.Закрыть Тогда
    //				Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда
    //					СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",301,'Закрытие заказов'";
    //					Если lem.СохранитьСтатус(Тек.Реализация, 301, Ссылка) Тогда
    //						//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //						СтрТекстЗапроса = СтрТекстЗапроса + "(" + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",301,'Закрытие заказов'"+")"+",";//+++								
    //						
    //					КонецеСли;	
    //					//
    //					//СтрЗапроса = "EXEC import_setOrderFinalStatus " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",301,'Закрытие заказов'";
    //					Если lem.СохранитьФинальныйСтатус(Тек.Реализация, 301, Ссылка) Тогда
    //						//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //					КонецеСли;
    //					Статус = 301;
    //				ИначеЕсли Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
    //					СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",302,'Закрытие заказов'";
    //					Если lem.СохранитьСтатус(Тек.Реализация, 302, Ссылка) Тогда
    //						//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //						СтрТекстЗапроса = СтрТекстЗапроса + "(" + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",302,'Закрытие заказов'"+")"+",";//+++														
    //						
    //					КонецеСли;	
    //					//
    //					//СтрЗапроса = "EXEC import_setOrderFinalStatus " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",302,'Закрытие заказов'";
    //					Если lem.СохранитьФинальныйСтатус(Тек.Реализация, 302, Ссылка) Тогда
    //						//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //					КонецеСли;
    //					Статус = 302;
    //				КонецеСли;
    //				ТекстСоставлен = Истина;					
    //			КонецеСли;
    //			
    //			
    //			Если Тек.Отклонить Тогда
    //				СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",304,'Закрытие заказов'";
    //				Если lem.СохранитьСтатус(Тек.Реализация, 304, Ссылка) Тогда
    //					//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //					СтрТекстЗапроса = СтрТекстЗапроса + "(" + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",304,'Закрытие заказов'"+")"+",";//+++													
    //					
    //				КонецеСли;	
    //				//
    //				//СтрЗапроса = "EXEC import_setOrderFinalStatus " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",301,'Закрытие заказов'";
    //                Если lem.СохранитьФинальныйСтатус(Тек.Реализация, 304, Ссылка) Тогда
    //					//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //				КонецеСли;
    //				Статус = 304;
    //				ТекстСоставлен = Истина;				
    //			КонецеСли;
    //			
    //			//Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
    //			//	СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",302,'Закрытие заказов'";
    //			//	Если lem.СохранитьСтатус(Тек.Реализация, 302, Ссылка) Тогда
    //			//		Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //			//	КонецЕСли;	
    //			//	//
    //			//	//СтрЗапроса = "EXEC import_setOrderFinalStatus " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",302,'Закрытие заказов'";
    //			//	Если lem.СохранитьФинальныйСтатус(Тек.Реализация, 302, Ссылка) Тогда
    //			//		//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //			//	КонецеСли;	
    //			//	Статус = 302;
    //			//КонецеСли;
    //			
    //			//Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена И Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
    //			//	СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",303,'Закрытие заказов'";
    //			//	Если lem.СохранитьСтатус(Тек.Реализация, 303, Ссылка) Тогда
    //			//		Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //			//	КонецеСли;	
    //			//	//
    //			//	//СтрЗапроса = "EXEC import_setOrderFinalStatus " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",303,'Закрытие заказов'";
    //			//	Если lem.СохранитьФинальныйСтатус(Тек.Реализация, 303, Ссылка) Тогда
    //			//		//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //			//	КонецеСли;	
    //			//	Статус = 303;
    //			//КонецеСли;
    //			//
    //			//Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена И Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
    //			//	СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",304,'Закрытие заказов'";
    //			//	Если lem.СохранитьСтатус(Тек.Реализация, 304, Ссылка) Тогда
    //			//		Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //			//	КонецеСли;	
    //			//	//СтрЗапроса = "EXEC import_setOrderFinalStatus " + Формат(Сокрлп(Тек.Реализация.Номер), "ЧГ=") + ",304,'Закрытие заказов'";
    //			//	Если lem.СохранитьФинальныйСтатус(Тек.Реализация, 304, Ссылка) Тогда
    //			//		//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //			//	КонецеСли;	
    //			//	Статус = 304;
    //			//КонецеСли;
    //			Стр2 = Стр2 + "
    //			|INSERT INTO @t ([orderID],[FinalStatusID],[who]) VALUES (" + Сокрлп(Тек.Реализация.Номер) + "," + Строка(Статус) + ",'" + ПараметрыСеанса.ТекущийПользователь + "')";
    //			
    //			//Стр = Стр + "
    //			//|INSERT INTO @t ([orderID],[StatusID],[who],[CompleteDate],[ServiceDC],[Comment],[isRefusal],[ReasonRefusal],[deliveryPrice],[payType]) VALUES (" + Сокрлп(Тек.Реализация.Номер) + "," + Строка(Статус) + ",'" + ПараметрыСеанса.ТекущийПользователь + "', null,null,null,null,null,null,null)";
    //		КонецеСли;
    //	КонецеСли;
    //КонецЦикла;	
    #КонецОбласти 
    
    #Область НовыйКод
    
    //+++++Серегин М.В. 10.11.2015 10:20:33
    СтрТекстЗапроса="";
    Стр2 = "";
    ТекстСоставлен = Ложь;
    Статус = 0;
    ТаблицаДанных  = ПолучитьДанныеОбновлениеСтатусовВАдминке();
	
	// Задача № 2813
	МассивСтатусов = Неопределено;

	Для каждого Стр Из ТаблицаДанных Цикл
		
		ЗапросПЗ = Новый Запрос("ВЫБРАТЬ
		                        |	СтатусыЗакрытияЗаказов.Период
		                        |ИЗ
		                        |	РегистрСведений.СтатусыЗакрытияЗаказов КАК СтатусыЗакрытияЗаказов
		                        |ГДЕ
		                        |	СтатусыЗакрытияЗаказов.Заказ = &Заказ
		                        |	И СтатусыЗакрытияЗаказов.СтатусЗакрытия = &СтатусЗакрытия");
		ЗапросПЗ.УстановитьПараметр("Заказ", Стр.Реализация);	
		ЗапросПЗ.УстановитьПараметр("СтатусЗакрытия", Перечисления.СтатусыПредварительногоЗакрытияЗаказов.ЗаказЗакрытПредварительно);
		
		Если ЗапросПЗ.Выполнить().Пустой() Тогда		
			Статус = Стр.Статус;
			Если Стр.Статус <> 401 Тогда
				Если Стр.ОтображатьВАдминке Тогда
					//// --- Отключено в рамках Задача № 2813
	                // СтрТекстЗапроса = СтрТекстЗапроса + "(" +Формат(Сокрлп(Стр.Номер), "ЧГ=") + ","+Стр.Статус+",'Закрытие заказов'"+")"+",";//+++
					//// --- Отключено в рамках Задача № 2813
					
					//Задача № 3241 // коммент. ЕМ 19.07.2019 12:24 и 16:22
					Если Стр.Статус = 303 Или  Стр.Статус = 304 Тогда
						Продолжить;
					Конецесли;	
					//Задача № 3241
					
					ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалДоставки.Код));// Задача № 3027
					
					//CeHbKA #3227 21.06.2019
					Если НЕ Стр.ПричинаОтказаПереноса.Пустая() Тогда
						ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonId", СокрЛП(Стр.ПричинаОтказаПереноса.Код), ДопПараметрыСтатуса); 
						ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonRefusal", СокрЛП(Стр.ПричинаОтказаПереноса.Наименование), ДопПараметрыСтатуса); // Задача № 3027
					КонецЕсли;	
					//CeHbKA #3227 21.06.2019
					
					//Асеев 26.04.2024 (Задача № 5267)>>>
					ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("OperationId", 3, ДопПараметрыСтатуса);
					//Асеев 26.04.2024 (Задача № 5267)<<<
					
					// Задача № 2813
					МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Стр.Номер, Стр.Статус, "Закрытие заказов",,,МассивСтатусов, ДопПараметрыСтатуса);
	            КонецЕсли; 
				Стр2 = Стр2 + "
				|INSERT INTO @t ([orderID],[FinalStatusID],[who]) VALUES (" + Сокрлп(Стр.Номер) + "," + Строка(Стр.Статус) + ",'" + ПараметрыСеанса.ТекущийПользователь + "')";
	            ТекстСоставлен = Истина;
	        КонецЕсли;			
		КонецЕсли; 
		
		//Если НЕ Стр.ПредварительноеЗакрытие Тогда // Михушкин - предварительное закрытие
			//Статус = Стр.Статус;
			//Если Стр.Статус <> 401 Тогда
			//    Если Стр.ОтображатьВАдминке Тогда
			//        СтрТекстЗапроса = СтрТекстЗапроса + "(" +Формат(Сокрлп(Стр.Реализация.Номер), "ЧГ=") + ","+Стр.Статус+",'Закрытие заказов'"+")"+",";//+++
			//    КонецЕсли; 
			//	Стр2 = Стр2 + "
			//	|INSERT INTO @t ([orderID],[FinalStatusID],[who]) VALUES (" + Сокрлп(Стр.Реализация.Номер) + "," + Строка(Стр.Статус) + ",'" + ПараметрыСеанса.ТекущийПользователь + "')";
			//    ТекстСоставлен = Истина;
			//КонецЕсли;
		//КонецЕсли;
    КонецЦикла;
    //-----Серегин М.В. 10.11.2015 10:20:35
    
    #КонецОбласти 
    
	//// --- Отключено в рамках Задача № 2813
	////+++
	//Если ТекстСоставлен И ЗначениеЗаполнено(СтрТекстЗапроса) Тогда
	//	ДлинаТекста = СтрДлина(СтрТекстЗапроса);
	//	СтрТекстЗапроса = Лев(СтрТекстЗапроса,ДлинаТекста-1);
	//	ТекстЗапроса = "
	//	|DECLARE @t TOrderStatusId
	//	|INSERT INTO @t (orderID, statusId, comment) VALUES " +
	//	СтрТекстЗапроса +" EXEC import_setOrdersStatusIDFrom1C @t";
	//	Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Подкл);		
	//КонецЕсли;
	////+++
	//// --- Отключено в рамках Задача № 2813
	
	// Задача № 2813
	СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);
	
	Если Статус <> 0 Тогда	
		//Стр = "DECLARE @t TSetOrderStatus   " + Стр + " EXEC import_setOrderStatusFrom1C @t";
		//Евген.ЗапросКИнтернетМагазину(Стр, Подкл);
		
		Стр2 = "DECLARE @t TOrderFinalStatus   " + Стр2 + " EXEC import_setOrderFinalStatus @t";
		Евген.ЗапросКИнтернетМагазину(Стр2, Подкл);
	КонецеСли;
	
	// костыль
	ТаблицаДанных.Колонки.Добавить("БылоЗакрытие");
	
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДанных,,ТерминалДоставки);
    // Задача № 3027 //smv.СохранитьСтатус(ТаблицаДанных);
	
	//РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныеСтатусы(ТаблицаДанных); Отключено в рамках 2586, 1 этап переделки записи статусов
	// Задача № 2586 //smv.СохранитьФинальныйСтатус(ТаблицаДанных);
	
КонецПроцедуры

Функция ПроверитьТабличнуюЧасть() Экспорт
	СтрокаНомеровПустыхЮриков = "";
	Для Каждого Тек Из Заказы Цикл
		Если Тек.Закрыть или Тек.Отклонить Тогда
			Если Тек.ЮрЛицо.Пустая() Тогда
				СтрокаНомеровПустыхЮриков = СтрокаНомеровПустыхЮриков + Тек.Номер + ",";
			КонецеСли;	
		КонецеСли;
	КонецЦикла;	
	
	Если СтрокаНомеровПустыхЮриков <> "" Тогда
		#Если Клиент Тогда
			Сообщить("Не определены юридические лица по заказам : " + СтрокаНомеровПустыхЮриков, СтатусСообщения.ОченьВажное);
		#КонецеСли	
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецеСли;	
КонецФункции	

Функция ПроверитьТабличнуюЧастьНаРезультат() Экспорт
	СтрокаНомеровНеопределенныхРезультатов = "";
	Для Каждого Тек Из Заказы Цикл
		Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка И (Тек.Закрыть или Тек.Отклонить) Тогда
			Если Тек.РезультатДоставки.Пустая() Тогда
				СтрокаНомеровНеопределенныхРезультатов = СтрокаНомеровНеопределенныхРезультатов + Тек.Номер + ",";
			КонецеСли;	
		КонецеСли;
	КонецЦикла;	
	
	Если СтрокаНомеровНеопределенныхРезультатов <> "" Тогда
		#Если Клиент Тогда
			Сообщить("Не определены результаты доставки по заказам : " + СтрокаНомеровНеопределенныхРезультатов, СтатусСообщения.ОченьВажное);
		#КонецеСли	
		
		//+++ БАО 20.07.2017 №1334  
	
		Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
			bao.ЗаписатьВФайлЛогаОтказа("Не определены результаты доставки по заказам : " + СтрокаНомеровНеопределенныхРезультатов, ДополнительныеСвойства);  
			
		КонецЕсли;	
		
		//--- БАО 20.07.2017 №1334 

		
		Возврат Ложь;
		
		
		
	Иначе
		Возврат Истина;
	КонецеСли;	
КонецФункции	

Функция РасчитатьСтоимостьТоваровЗаказа(Заказ) // Задача № 2586 ItemsPrice
		
	СтрокиТоваров = Товары.Выгрузить(Товары.НайтиСтроки(Новый Структура("Реализация", Заказ)));
	
	СуммаТоваров = СтрокиТоваров.Итог("СуммаНовая"); // Конкретизация задачи 2586 от 14:52 19.08.2019
	
	// отключено по Конкретизация задачи 2586 от 14:52 19.08.2019
	//СуммаТоваров = 0;	
	//Для Каждого СтрокаТовара Из СтрокиТоваров Цикл
	//	СуммаТоваров = СуммаТоваров + ((СтрокаТовара.Количество - СтрокаТовара.КоличествоВозвращено) * СтрокаТовара.Цена);
	//КонецЦикла;	
	
	Возврат СуммаТоваров;
	
КонецФункции

Процедура СформироватьДвижениеПоСтатусамСкладскогоУчета(Стр)
	
	Если smv.ЗаказПодтвержденПриходом(Стр.Реализация, Дата, Справочники.СтатусыСкладскогоУчета.ПриходПодтвержденПриходнымДокументом) И smv.НебылоВозврата(Стр.Реализация) Тогда
		СтатусСкладскогоУчета = smv.ПолучитьСтатусСкладскогоУчетаВозвраты(Стр.Реализация.Номер, Стр.РезультатДоставки, Стр.ПричинаНевыполнения, Стр.Реализация.Дата);
		Если ЗначениеЗаполнено(СтатусСкладскогоУчета) Тогда
			ТипЗаказа = smv.ПолучитьТипЗаказа(Стр.Реализация);
			СтруктураДанных = Новый Структура;
			СтруктураДанных.Вставить("Заказ", Стр.Реализация);
			СтруктураДанных.Вставить("СтатусСкладскогоУчета", СтатусСкладскогоУчета);
			СтруктураДанных.Вставить("ТипЗаказа", ТипЗаказа);
			Движение = Движения.СтатусыСкладскогоУчета.Добавить();
			Движение.Период = Дата;
			Движение.Заказ = СтруктураДанных.Заказ;
			Движение.СтатусСкладскогоУчета = СтруктураДанных.СтатусСкладскогоУчета;
			Движение.ТипЗаказа = СтруктураДанных.ТипЗаказа;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	//+++ БАО 25.07.2017 №1334  
	
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
		
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Начало.", ДополнительныеСвойства);  
		
	КонецЕсли;	
	
	//--- БАО 25.07.2017 №1334 	
	
	Если ОбменДанными.Загрузка ИЛИ ДополнительныеСвойства.Свойство("ОбходПроверок") Тогда
	Иначе
		ПроверкиПоСтатусамЗакрытия(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("ОбходПроверокКорректировок") Тогда
		Если ЕстьЗаписиВРегистрахЗакрытий() Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ЗарегистрироватьКомпонентыРасчета(); // Задача № 3113
	
	//CeHbKA
	//Движения.ВзаиморасчетыСКомитентами.Записывать = Истина;
	//Движения.ВзаиморасчетыСКомитентами.Очистить();
	//	
	//ДвиженияВзаиморасчетыСКомитентами();
	//CeHbKA
	
	//Блокировка = Новый БлокировкаДанных;
	//ЭлементБлокировки = Блокировка.Добавить("Справочник.Рейс");
	//ЭлементБлокировки.УстановитьЗначение("Ссылка", Рейс.Ссылка);
	//ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	//ЭлементБлокировки.ИсточникДанных = Ссылка;
	////ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "Рейс");
	//Блокировка.Заблокировать();

	//+++ БАО 25.07.2017 №1334  
	
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
		
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Обработка Рейс.", ДополнительныеСвойства);  
		
	КонецЕсли;	
	
	//--- БАО 25.07.2017 №1334 
	
	Если ВариантЗаполнения = 1 Тогда
		
		// установка признака РейсЗакрыт - Рейс
		Попытка	
			
			//+++ БАО 08.06.2017 №1024 
			
			// комментим блок для проверки гипотезы о блокировке из-за записи рейсов
			//Если НЕ Рейс.РейсЗакрыт Тогда				
			//	ДокРейс = Рейс.ПолучитьОбъект();
			//	ДокРейс.ДополнительныеСвойства.Вставить("ОбходПроверок", Истина);
			//	ДокРейс.РейсЗакрыт = Истина;
			//	ДокРейс.Записать(РежимЗаписиДокумента.Запись);							
			//КонецЕсли;				
			ПредставлениеРейса = Строка(Рейс);
			//+Степанов Задача № 3439 
			//baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(Рейс, Истина);
			baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(Рейс, Истина,Ссылка);
			//-Степанов
			
			//+++ БАО 08.06.2017 №1024 
		Исключение
			ТекстОшибки = ОписаниеОшибки();
			#Если Клиент Тогда
				Сообщить("Не удалось установить признак ""Рейс закрыт"" для документа рейс (" + ПредставлениеРейса + ")" + Символы.ПС + "Описание ошибки: " + ТекстОшибки);
			#КонецЕсли
			
			//+++ БАО 21.07.2017 №1334  
			Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
				
				ТекстОшибки = "Не удалось установить признак Рейс закрыт для документа рейс " + ПредставлениеРейса + ". Описание ошибки: " + ТекстОшибки;
				
				bao.ЗаписатьВФайлЛогаОтказа(ТекстОшибки, ДополнительныеСвойства);  
			
			КонецЕсли;
			//--- БАО 21.07.2017 №1334  
		
		КонецПопытки;
		
		//+++ БАО 25.07.2017 №1334  
		
		Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
			bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Обработка ПриходДС.", ДополнительныеСвойства);  
			
		КонецЕсли;	
		
		//--- БАО 25.07.2017 №1334 		
	
	    // установка признака РейсЗакрыт - ПриходДС
		Попытка	
			//+++ БАО 08.06.2017 №1024 
			//ЗапросПриходДС = Новый Запрос("ВЫБРАТЬ
			//                              |	ПриходДСПоОтчетуВодителя.Ссылка,
			//                              |	ПриходДСПоОтчетуВодителя.РейсЗакрыт
			//                              |ИЗ
			//                              |	Документ.ПриходДСПоОтчетуВодителя КАК ПриходДСПоОтчетуВодителя
			//                              |ГДЕ
			//                              |	ПриходДСПоОтчетуВодителя.ПометкаУдаления = ЛОЖЬ
			//                              |	И ПриходДСПоОтчетуВодителя.ОтчетВодителя.Рейс = &РейсБП");
			
			ЗапросПриходДС = Новый Запрос("ВЫБРАТЬ
			                              |	ПриходДСПоОтчетуВодителя.Ссылка КАК Ссылка,
			                              |	ЕСТЬNULL(ДокументыЗакрытыеДляИзмененияСрезПоследних.ЗакрытДляРедактирования, ЛОЖЬ) КАК РейсЗакрыт
			                              |ИЗ
			                              |	Документ.ПриходДСПоОтчетуВодителя КАК ПриходДСПоОтчетуВодителя
			                              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыЗакрытыеДляИзменения.СрезПоследних КАК ДокументыЗакрытыеДляИзмененияСрезПоследних
			                              |		ПО ПриходДСПоОтчетуВодителя.Ссылка = ДокументыЗакрытыеДляИзмененияСрезПоследних.Документ
			                              |ГДЕ
			                              |	ПриходДСПоОтчетуВодителя.ПометкаУдаления = ЛОЖЬ
			                              |	И ПриходДСПоОтчетуВодителя.ОтчетВодителя.Рейс = &РейсБП");

			
			//--- БАО 08.06.2017 №1024 
			ЗапросПриходДС.УстановитьПараметр("РейсБП", Рейс.РейсМестнойДоставки);	
			РезПриходДС = ЗапросПриходДС.Выполнить().Выбрать();
			
			ПредставлениеРейса = Строка(Рейс);
			
			Если РезПриходДС.Следующий() Тогда					
				Если НЕ РезПриходДС.РейсЗакрыт Тогда
					//+++ БАО 08.06.2017 №1024 
					//ДокПриходДС = РезПриходДС.Ссылка.ПолучитьОбъект();
					//ДокПриходДС.ОбменДанными.Загрузка = Истина;
					//ДокПриходДС.РейсЗакрыт = Истина;
					//ДокПриходДС.Записать(РежимЗаписиДокумента.Запись);
					//+Степанов Задача № 3439
					//baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(РезПриходДС.Ссылка, Истина);
					baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(РезПриходДС.Ссылка, Истина,Ссылка);
					//-Степанов
					//--- БАО 08.06.2017 №1024 
				КонецЕсли;						
			КонецЕсли;	
			
		Исключение
			//ТекстОшибки = ОписаниеОшибки();
			//#Если Клиент Тогда
			//	Сообщить("Не удалось установить признак ""Рейс закрыт"" для документа ПриходДСПоОтчетуВодителя (по рейсу: " + Рейс.Ссылка + ")" + Символы.ПС + "Описание ошибки: " + ТекстОшибки);
			//#КонецЕсли
			
			//+++ БАО 21.07.2017 №1334  
			Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
				
				ТекстОшибки = ОписаниеОшибки();
			
				bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". Не удалось установить признак ""Рейс закрыт"" для документа ПриходДСПоОтчетуВодителя по рейс (" + ПредставлениеРейса + ")" + Символы.ПС + "Описание ошибки: " + ТекстОшибки, ДополнительныеСвойства);  
			
			КонецЕсли;
			//--- БАО 21.07.2017 №1334  

		КонецПопытки;

		//+++ БАО 25.07.2017 №1334  
		
		Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
			bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Обработка ВозвратЗаказовОтВодителя.", ДополнительныеСвойства);  
			
		КонецЕсли;	
		
		//--- БАО 25.07.2017 №1334
		
		// установка признака РейсЗакрыт - Возврат заказов
		Попытка	
			//+++ БАО 08.06.2017 №1024 
			//ЗапросВозврат = Новый Запрос("ВЫБРАТЬ
			//                             |	ВозвратЗаказовОтВодителя.Ссылка,
			//                             |	ВозвратЗаказовОтВодителя.РейсЗакрыт
			//                             |ИЗ
			//                             |	Документ.ВозвратЗаказовОтВодителя КАК ВозвратЗаказовОтВодителя
			//                             |ГДЕ
			//                             |	ВозвратЗаказовОтВодителя.ПометкаУдаления = ЛОЖЬ
			//                             |	И ВозвратЗаказовОтВодителя.Рейс = &Рейс");
			
					ЗапросВозврат = Новый Запрос("ВЫБРАТЬ
					                             |	ВозвратЗаказовОтВодителя.Ссылка КАК Ссылка,
					                             |	ЕСТЬNULL(ДокументыЗакрытыеДляИзмененияСрезПоследних.ЗакрытДляРедактирования, ЛОЖЬ) КАК РейсЗакрыт
					                             |ИЗ
					                             |	Документ.ВозвратЗаказовОтВодителя КАК ВозвратЗаказовОтВодителя
					                             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыЗакрытыеДляИзменения.СрезПоследних КАК ДокументыЗакрытыеДляИзмененияСрезПоследних
					                             |		ПО ВозвратЗаказовОтВодителя.Ссылка = ДокументыЗакрытыеДляИзмененияСрезПоследних.Документ
					                             |ГДЕ
					                             |	ВозвратЗаказовОтВодителя.ПометкаУдаления = ЛОЖЬ
					                             |	И ВозвратЗаказовОтВодителя.Рейс = &Рейс
												 //Асеев 25.11.2020 (по письму Re: ПодтверждениеСкладУдаленнойПриемки)>>>
					                             |	И НЕ ВозвратЗаказовОтВодителя.РежимПодтвержденияУдаленногоЗакрытия");
												 //Асеев 25.11.2020 (по письму Re: ПодтверждениеСкладУдаленнойПриемки)<<<
			//--- БАО 08.06.2017 №1024 		

			ЗапросВозврат.УстановитьПараметр("Рейс", Рейс);	
			РезВозврат = ЗапросВозврат.Выполнить().Выбрать();
			
			ПредставлениеРейса = Строка(Рейс);
			
			Пока РезВозврат.Следующий() Цикл					
				Если НЕ РезВозврат.РейсЗакрыт Тогда	
					//+++ БАО 08.06.2017 №1024 
					//ДокВозврат = РезВозврат.Ссылка.ПолучитьОбъект();
					//ДокВозврат.ОбменДанными.Загрузка = Истина;
					//ДокВозврат.РейсЗакрыт = Истина;
					//ДокВозврат.Записать(РежимЗаписиДокумента.Запись);
					//+Степанов Задача № 3439
					//baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(РезВозврат.Ссылка, Истина);
					baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(РезВозврат.Ссылка, Истина,Ссылка);
					//-Степанов
					//--- БАО 08.06.2017 №1024 
				КонецЕсли;						
			КонецЦикла;
			
		Исключение
			//ТекстОшибки = ОписаниеОшибки();
			//#Если Клиент Тогда
			//	Сообщить("Не удалось установить признак ""Рейс закрыт"" для документа Возврат на склад (по рейсу: " + Рейс.Ссылка + ")" + Символы.ПС + "Описание ошибки: " + ТекстОшибки);
			//#КонецЕсли
			
			//+++ БАО 21.07.2017 №1334  
			Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
				
				ТекстОшибки = ОписаниеОшибки();
			
				bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". Не удалось установить признак ""Рейс закрыт"" для документа ВозвратЗаказовОтВодителя по рейс (" + ПредставлениеРейса + ")" + Символы.ПС + "Описание ошибки: " + ТекстОшибки, ДополнительныеСвойства);  
			
			КонецЕсли;
			//--- БАО 21.07.2017 №1334  
		КонецПопытки;
		
		//+++ БАО 25.07.2017 №1334  
		
		Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
			bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Обработка ПогрузкаВАвто.", ДополнительныеСвойства);  
			
		КонецЕсли;	
		
		//--- БАО 25.07.2017 №1334
		
		// установка признака РейсЗакрыт - Погрузка в авто
		Попытка	
			ЗапросПогрузка = Новый Запрос("ВЫБРАТЬ
			                              |	ПогрузкаВАвто.Ссылка КАК Ссылка,
			                              |	ЕСТЬNULL(ДокументыЗакрытыеДляИзмененияСрезПоследних.ЗакрытДляРедактирования, ЛОЖЬ) КАК РейсЗакрыт
			                              |ИЗ
			                              |	Документ.ПогрузкаВАвто КАК ПогрузкаВАвто
			                              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыЗакрытыеДляИзменения.СрезПоследних КАК ДокументыЗакрытыеДляИзмененияСрезПоследних
			                              |		ПО ПогрузкаВАвто.Ссылка = ДокументыЗакрытыеДляИзмененияСрезПоследних.Документ
			                              |ГДЕ
			                              |	ПогрузкаВАвто.ПометкаУдаления = ЛОЖЬ
			                              |	И ПогрузкаВАвто.Рейс = &Рейс");
			ЗапросПогрузка.УстановитьПараметр("Рейс", Рейс);	
			РезПогрузка = ЗапросПогрузка.Выполнить().Выбрать();
			
			ПредставлениеРейса = Строка(Рейс);
			
			Пока РезПогрузка.Следующий() Цикл					
				Если НЕ РезПогрузка.РейсЗакрыт Тогда
					//+++ БАО 13.06.2017 №1024
					//---ДокПогрузка = РезПогрузка.Ссылка.ПолучитьОбъект();
					//---ДокПогрузка.ОбменДанными.Загрузка = Истина;
					//---ДокПогрузка.РейсЗакрыт = Истина;
					//---ДокПогрузка.Записать(РежимЗаписиДокумента.Запись);
					//+Степанов Задача № 3439
					//baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(РезПогрузка.Ссылка, Истина);
					baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(РезПогрузка.Ссылка, Истина,Ссылка);
					//-Степанов
					//--- БАО 13.06.2017 №1024
				КонецЕсли;						
			КонецЦикла;
			
		Исключение
			//ТекстОшибки = ОписаниеОшибки();
			//#Если Клиент Тогда
			//	Сообщить("Не удалось установить признак ""Рейс закрыт"" для документа Погрузка в авто (по рейсу: " + Рейс.Ссылка + ")" + Символы.ПС + "Описание ошибки: " + ТекстОшибки);
			//#КонецЕсли
			
			//+++ БАО 21.07.2017 №1334  
			Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
				
				ТекстОшибки = ОписаниеОшибки();
			
				bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". Не удалось установить признак ""Рейс закрыт"" для документа ПогрузкаВАвто по рейс (" + ПредставлениеРейса + ")" + Символы.ПС + "Описание ошибки: " + ТекстОшибки, ДополнительныеСвойства);  
			
			КонецЕсли;
			//--- БАО 21.07.2017 №1334  

			
		КонецПопытки;
		
	//Задача № 3617 Переварюха В.В. 23.11.2019	
	ВызовFinalizationPendingChanges();
	//Задача № 3617 Переварюха В.В. 23.11.2019

	КонецЕсли;
	
	
	
	//Если ЕстьКорректировкиПоЗаказам() Тогда
	//    Сообщить("По документу обнаружены корректировки, проведение невозможно.");    
	//	Отказ = Истина;
	//    Возврат;
	//КонецеСли;	
	
	//+++ БАО 25.07.2017 №1334  
		
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Обработка ПроверитьНаДублиЗаказов.", ДополнительныеСвойства);  
			
	КонецЕсли;	
		
	//--- БАО 25.07.2017 №1334
	
    //+++++Серегин М.В. 03.03.2016 17:26:20 
    Если ПроверитьНаДублиЗаказов() Тогда //есть дубли
        Сообщить("В документе есть дважды закрытые/отклоненные заказы, проведение невозможно.");    
    	Отказ = Истина;
		
		//+++ БАО 20.07.2017 №1334  
		
		Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
			bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". В документе есть дважды закрытые/отклоненные заказы, проведение невозможно.", ДополнительныеСвойства);  
			
		КонецЕсли;	
		
		//--- БАО 20.07.2017 №1334 
		
        Возврат;
    КонецЕсли;
    //-----Серегин М.В. 03.03.2016 17:26:22 
    
    
	НоваяДата = Неопределено;
	Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
		НоваяДата = Дата(Год(ДатаЗакрытия), Месяц(ДатаЗакрытия), День(ДатаЗакрытия), 20, 0, 0);
		Если НоваяДата > КонецДня(ТекущаяДата()) Тогда
			Сообщить("Дата закрытия не может быть больше сегодняшней даты", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаНомеров = "";
	
	//+++ БАО 25.07.2017 №1334  
		
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Обработка ПроверкаНаНаличиеДвиженийПоЗаказам.", ДополнительныеСвойства);  
			
	КонецЕсли;	
		
	//--- БАО 25.07.2017 №1334

	Если Не ПроверкаНаНаличиеДвиженийПоЗаказам(СтрокаНомеров) Тогда
		#Если Клиент Тогда
			Сообщить("Заказы: " + СтрокаНомеров + " уже либо закрыты, либо отклонены!");
		#КонецЕсли
		Отказ = истина;
		
		//+++ БАО 20.07.2017 №1334  
		
		Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
			bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". Заказы: " + СтрокаНомеров + " уже либо закрыты, либо отклонены!", ДополнительныеСвойства);  
			
		КонецЕсли;	
		
		//--- БАО 20.07.2017 №1334 

		Возврат;
	КонецЕсли;	
	
	//Если Не ПроверитьТабличнуюЧасть() Тогда
	//	Отказ = истина;
	//	Возврат;
	//КонецеСли;	
	
	//+++ БАО 25.07.2017 №1334  
		
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Обработка ПроверитьТабличнуюЧастьНаРезультат.", ДополнительныеСвойства);  
			
	КонецЕсли;	
		
	//--- БАО 25.07.2017 №1334
	
	//Если ТипДоставки = Перечисления.ТипыЗаказов.Доставка Тогда
		Если Не ПроверитьТабличнуюЧастьНаРезультат() Тогда
			Отказ = истина;
			Возврат;
		КонецеСли;	
	//КонецеСли;
	
	Кол = 0;
	Для Каждого Стр Из Заказы Цикл
		Если Стр.Закрыть Или Стр.Отклонить Тогда
			Кол = Кол + 1;
		КонецЕсли;
	КонецЦикла;	
	
	
	//+++ БАО 25.07.2017 №1334  
		
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Обработка ОбновитьПризнакВозвратаВАдминке.", ДополнительныеСвойства);  
			
	КонецЕсли;	
		
	//--- БАО 25.07.2017 №1334

	Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
	Н = 0;
	
	#Если Клиент Тогда
	ФормаИндикацииХодаЗагрузки = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаИндикацииХодаЗагрузки.НаименованиеОбработкиДанных = "Закрытие заказов";
	ФормаИндикацииХодаЗагрузки.Открыть();
	
	ФормаИндикацииХодаЗагрузки.КомментарийОбработкиДанных = "Проведение заказов";
	
	ФормаИндикацииХодаЗагрузки.МаксимальноеЗначение = Кол;
	ФормаИндикацииХодаЗагрузки.Значение = 0;
	#КонецЕсли
    
    //Серегин М.В. 31.07.2015 15:56:55 
    Движения.СтатусыСкладскогоУчета.Очистить();
    Движения.СтатусыСкладскогоУчета.Записывать = Истина;
    Движения.НедовложенияПоЗаказам.Очистить();
    Движения.НедовложенияПоЗаказам.Записывать = Истина;
    Движения.ДанныеЧастичныхЗаказов.Очистить();
    Движения.ДанныеЧастичныхЗаказов.Записывать = Истина;
    //Серегин М.В. 31.07.2015 15:56:58 
	
	МассивФинальныхСтатусов = Новый Массив; // Задача № 3191
	
	//Асеев 15.03.2024 (Задача № 3163)>>>
	СтруктураРасстояния = Новый Структура("Заказ,ТипЗамераРасстояния",, Перечисления.ТипыЗамераРасстояний.ПоПрямойОтБлизжайшегоСъездаСМагистрали);
	//Асеев 15.03.2024 (Задача № 3163)<<<
	
	#Область ОпределениеИУстановкаСтатусовЗаказов
	
	Для Каждого Стр Из Заказы Цикл
		ОбновитьПризнакВозвратаВАдминке(Стр.ПризнакВозврата, СокрЛП(Стр.Реализация.Номер));
		Если стр.Закрыть Или Стр.Отклонить Тогда
			Н = Н + 1;
			#Если Клиент Тогда
				Состояние("" + Н + " из " + Кол);
			#КонецЕсли
			//НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
			
			//+++ БАО 27.07.2017 №1334
			НомерРеализации =  Стр.Реализация.Номер;
			//--- БАО 27.07.2017 №1334
			
			Попытка
				Сообщить("Закрытие " + СокрЛП(Стр.Реализация.Номер));
				
				Реализация = Стр.Реализация.ПолучитьОбъект();
				БылСтатус = Реализация.СтатусИнтернетМагазина;
				если Стр.Закрыть Тогда
					Реализация.СтатусИнтернетМагазина = 3;
				ИначеЕсли Стр.Отклонить Тогда
					Реализация.СтатусИнтернетМагазина = 4;
				КонецеСли;	
				
				Реализация.ЗакрытиеЗаказов = Ссылка;
				#Область ПереустановкаДатРТиУиБП
				// ++ Задача № 3185				
				Если ТипЗНЧ(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
					
					//Обработка Заказа
					// Будем менять дату только если она не соответствует ДатаЗакрытия	
					Если НачалоДня(Реализация.Дата) <> НачалоДня(ДатаЗакрытия) Тогда 					
						Реализация.Дата = ДатаЗакрытия;						
					КонецЕсли;
					
					//Обработка БП
					// Будем менять дату только если она не соответствует ДатаЗакрытия	
					Если ЗначениеЗаполнено(Стр.Доставка) Тогда
						ДоставкаОбъект = Стр.Доставка.ПолучитьОбъект();
						Если НачалоДня(ДоставкаОбъект.Дата) <> НачалоДня(ДатаЗакрытия) Тогда		
							// Алгоритм взят из Документ.ИзменениеДатыДоставки
							ДоставкаОбъект.Дата = ДатаЗакрытия;
														
							ЧН = Час(ДоставкаОбъект.ВремяОтправленияС);
							ЧК = Час(ДоставкаОбъект.ВремяОтправленияПо);
							
							МН = Минута(ДоставкаОбъект.ВремяОтправленияС);
							МК = Минута(ДоставкаОбъект.ВремяОтправленияПо);
							
							ЧН_ = Час(ДоставкаОбъект.ВремяПрибытияС);
							ЧК_ = Час(ДоставкаОбъект.ВремяПрибытияПо);
							
							МН_ = Минута(ДоставкаОбъект.ВремяПрибытияС);
							МК_ = Минута(ДоставкаОбъект.ВремяПрибытияПо);
												
							ДоставкаОбъект.ВремяОтправленияС = Дата(Формат(Год(ДатаЗакрытия), "ЧГ=") + Формат(Месяц(ДатаЗакрытия), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаЗакрытия), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
							ДоставкаОбъект.ВремяОтправленияПо = Дата(Формат(Год(ДатаЗакрытия), "ЧГ=") + Формат(Месяц(ДатаЗакрытия), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаЗакрытия), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
							
							ДоставкаОбъект.ВремяПрибытияС = Дата(Формат(Год(ДатаЗакрытия), "ЧГ=") + Формат(Месяц(ДатаЗакрытия), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаЗакрытия), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
							ДоставкаОбъект.ВремяПрибытияПо = Дата(Формат(Год(ДатаЗакрытия), "ЧГ=") + Формат(Месяц(ДатаЗакрытия), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаЗакрытия), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");							
							
							ДоставкаОбъект.Записать();
							
						КонецЕсли;	
					КонецЕсли;
					
				КонецЕсли;			
				// -- Задача № 3185
				#КонецОбласти
				
				Если Стр.Закрыть Тогда
					
					//// Задача 2586
					//СтатусКЗаписи = 0;
					//Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда					
					//	СтатусКЗаписи = 301;
					//ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
					//	СтатусКЗаписи = 302;
					//ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена 
					//	И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
					//	СтатусКЗаписи = 303;
					//ИначеЕсли  Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена
					//	И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
					//	СтатусКЗаписи = 304;
					//Иначе 
					//	СтатусКЗаписи = 401;
					//КонецЕсли; 
					//// Задача 2586
					
					// Задача № 3241
					СтатусКЗаписи = 0;
					Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда					
						СтатусКЗаписи = 301;
					ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
						СтатусКЗаписи = 302;
					ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена 
						И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
						СтатусКЗаписи = 305;
					ИначеЕсли  Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена
						И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
						СтатусКЗаписи = 305;
					Иначе 
						//Геннадий #3239 03.07.2020 ->
						//СтатусКЗаписи = 401;
						СтатусКЗаписи = 305;
						//Геннадий #3239 03.07.2020 <-
					КонецЕсли; 
					// Задача № 3241

					
					Если Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
						ФлагОтказСЗаездом = 1;
					Иначе
						ФлагОтказСЗаездом = 0;
					КонецЕсли;	
					Если Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Или Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
						//Если ТипДоставки = Перечисления.ТипыЗаказов.Доставка Или ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз Тогда
						
						//Серегин М.В. 04.06.2015 15:39:54 старый код
						Если Не Реализация.Проведен  Тогда
							Если Реализация.ПометкаУдаления Тогда
								Реализация.ПометкаУдаления = Ложь;
								Реализация.Записать(РежимЗаписиДокумента.Запись);
							КонецеСли;
							
							Реализация.Записать(РежимЗаписиДокумента.Проведение);
						Иначе
							Реализация.Записать(РежимЗаписиДокумента.Запись);
						КонецЕСли;
						//Серегин М.В. 04.06.2015 15:39:59 новый код
						
						Если ЗначениеЗаполнено(стр.Перемещение) Тогда
							Перемещение = стр.Перемещение.ПолучитьОбъект();
							Если Перемещение.ПометкаУдаления Тогда
								Перемещение.ПометкаУдаления = Ложь;
								Перемещение.Записать(РежимЗаписиДокумента.Запись);
							КонецеСли;	
							Если Не Перемещение.Проведен  Тогда
								Перемещение.Записать(РежимЗаписиДокумента.Проведение);
							КонецЕСли;	
						КонецеСли;
						
						Если ЗначениеЗаполнено(стр.Списание) Тогда
							Списание = стр.Списание.ПолучитьОбъект();
							Если Не Списание.Проведен  Тогда
								Списание.Записать(РежимЗаписиДокумента.Проведение);
							КонецЕСли;	
						КонецеСли;
						
						Если ЗначениеЗаполнено(стр.Оприходование) Тогда
							Оприходование = стр.Оприходование.ПолучитьОбъект();
							Если Не Оприходование.Проведен  Тогда
								Оприходование.Записать(РежимЗаписиДокумента.Проведение);
							КонецЕСли;	
						КонецеСли;
						
						Если ЗначениеЗаполнено(стр.Возврат) Тогда
							ВозвратПок = стр.Возврат.ПолучитьОбъект();
							Если ВозвратПок.ПометкаУдаления Тогда
								ВозвратПок.ПометкаУдаления = Ложь;
								#Если Клиент Тогда
									Сообщить("!!! Не должно быть удаленных возвратов: " + ВозвратПок);
								#КонецЕсли
							КонецЕсли;
							Если Не ВозвратПок.Проведен Тогда
								ВозвратПок.Записать(РежимЗаписиДокумента.Проведение);
							КонецеСли;	
						КонецЕсли;
						
						Если Реализация.Ссылка.Проведен Тогда
							//ЗафиксироватьТранзакцию();
							ЗаписьЖурналаРегистрации("Закрытие заказа", УровеньЖурналаРегистрации.Информация, Метаданные.Документы.РеализацияТоваровУслуг, Стр.Реализация, ""+БылСтатус+" -> 3");
							Комм = Лев(СокрЛП(Стр.КомментарийСД), 100);
							
							//Костя 111115 / ReasonRefusal ID  ЗАКРЫТЬ/
							ReasonRefusalID = ?(ЗначениеЗаполнено(Стр.ПричинаОтклоненияЗаказа.Код), Прав(Стр.ПричинаОтклоненияЗаказа.Код,1),0);
							//Костя 111115
							//Параметры
							orderID = СокрЛП(Стр.Реализация.Номер);
							who = ПараметрыСеанса.ТекущийПользователь;
							completeDate = Евген.ДатаВSQL(?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата), Ложь);
							serviceDC = Формат(Стр.Показатель1 + Стр.Показатель2 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
							serviceDCclean = Формат(Стр.УслугиСДЧистые, "ЧРД=.; ЧН=0; ЧГ=");
							//Формат(Стр.Показатель1 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
							comment = СтрЗаменить(Комм, "'", """");
							isRefusal = Строка(ФлагОтказСЗаездом);
							ReasonRefusal = ?(Стр.ПричинаОтказа.Пустая(), "", СокрЛП(Стр.ПричинаОтказа.Наименование));
							
							//CeHbKA #3225
							reasonId = ?(Стр.ПричинаОтказа.Пустая(), "", СокрЛП(Стр.ПричинаОтказа.Код));
							//CeHbKA #3225
							
							DeliveryPrice = Формат(Стр.СуммаДоставкиДоМКАД, "ЧРД=.; ЧН=0; ЧГ=");
							// Задача № 2586 deliveryPrice = ?(Стр.СуммаДоставкиДоМКАД = Стр.ПредСуммаДоставкиДоМКАД, "null", Формат(Стр.СуммаДоставкиДоМКАД, "ЧРД=.; ЧН=0; ЧГ="));
														//payType  = ?(Стр.ТипОплаты = Стр.ПредТипОплаты, "null", Формат(Стр.ТипОплаты.Код, "ЧН=0; ЧГ="));
							payType  = Формат(Стр.ТипОплаты.Код, "ЧН=0; ЧГ=");
							
							НоваяСуммаИтого = "null";
							
							// проверка на частичку с итого к оплате
							Если Стр.УчитыватьИтогоКОплате Тогда
								Струк = новый Структура;
								Струк.Вставить("Реализация", Стр.Реализация);
								НайТов = Товары.НайтиСтроки(Струк);
								Сум = 0;
								СумНов = 0;
								Для Сч = 0 По НайТов.Количество() - 1 Цикл
									Сум = Сум + НайТов[Сч].Сумма;
									СумНов = СумНов + НайТов[Сч].СуммаНовая;
								КонецЦикла;
								Если Сум <> СумНов и СумНов <> 0 Тогда
									Если Не Стр.ЗапретЧастичногоВыкупа Тогда
										НоваяСуммаИтого = Формат(СумНов + стр.СуммаДоставкиДоМКАД + стр.СуммаДоставкиЗаМКАД, "ЧРД=.; ЧН=0; ЧГ=");
									Иначе
										Отказ = Истина;
										#Если Клиент Тогда
											Сообщить("По заказу № " + СокрЛП(Стр.Номер) + " установлен запрет частичного выкупа, но при этом обнаружен частичный выкуп!", СтатусСообщения.ОченьВажное);
										#КонецЕсли	
										
										//+++ БАО 25.07.2017 №1334  
										
										Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
											
											bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. По заказу № " + СокрЛП(Стр.Номер) + " установлен запрет частичного выкупа, но при этом обнаружен частичный выкуп!", ДополнительныеСвойства);  
											
										КонецЕсли;	
										
										//--- БАО 25.07.2017 №1334

									КонецеСли;	
								КонецеСли;	
							КонецеСли;
							
							Если СтатусКЗаписи = 301 ИЛИ СтатусКЗаписи = 302 Тогда
								ItemsPrice =  РасчитатьСтоимостьТоваровЗаказа(Стр.Реализация); // Задача № 2586
							ИначеЕсли СтатусКЗаписи = 305 Тогда
								ItemsPrice = 0;
								DeliveryPrice = 0;
							Иначе
								ItemsPrice = Неопределено;
							КонецЕсли;
							
							// Отключено в рамках 2586
							//ТекстЗапроса = "
							//|DECLARE @t TSetOrderStatus
							//|INSERT INTO @t ([orderID],[statusId],[who],[completeDate],serviceDC,serviceDCclean,comment, isRefusal, ReasonRefusal, deliveryPrice, payType, ReasonRefusalID, totalCost, closeFlag) VALUES (" +
							//orderID +", 3, '" +	who +"', '"+completeDate+"', "+serviceDC+"," +serviceDCclean+",'" +comment+"', "+isRefusal+ ", '" +ReasonRefusal+"'," +deliveryPrice+ "," +payType+","+ReasonRefusalID+"," + НоваяСуммаИтого +","+?(Стр.ПредварительноеЗакрытие, 2, "NULL")+")
							//|EXEC import_setOrderStatusFrom1C @t
							//|";
							//Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
							
							//// Задача № 2586
							//mas.ОтправитьФинальныйСтатусВАдминку(orderID, 3, comment,
							//who,
							//?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
							//serviceDC,
							//serviceDCclean,
							//IsRefusal,
							//ReasonRefusal,
							//?(DeliveryPrice = "null", Неопределено, DeliveryPrice),
							//PayType,
							//ReasonRefusalId,
							//,
							//?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
							//ТерминалДоставки.Код,
							//ItemsPrice);
							//// Задача № 2586
							
							//Геннадий #4051 22.06.2020 ->
							//заглушка на передачу кода 401
							Если Не СтатусКЗаписи = 401 Тогда
								
								//Асеев 15.03.2024 (Задача № 3163)>>>
								СтруктураРасстояния.Заказ = Стр.Реализация;
								СтрокиРасстояний = Расстояния.НайтиСтроки(СтруктураРасстояния);
								DistBeyondHighway = ?(СтрокиРасстояний.Количество(), СтрокиРасстояний[0].Расстояние, Неопределено);
								//Асеев 15.03.2024 (Задача № 3163)<<<
								
								// Задача № 3191
								МассивФинальныхСтатусов = mas.ДобавитьФинальныйСтатусКПакету(orderID, 3, comment,
								who,
								?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
								serviceDC,
								serviceDCclean,
								IsRefusal,
								ReasonRefusal,
								?(DeliveryPrice = "null", Неопределено, DeliveryPrice),
								PayType,
								ReasonRefusalId,
								,
								?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
								ТерминалДоставки.Код,
								ItemsPrice,
								МассивФинальныхСтатусов,
								reasonId,
								СтатусКЗаписи,
								DistBeyondHighway);
								//CeHbKA #3225 18.06.2019 //Задача № 3241 
								// Задача № 3191
							
								// Задача № 2586, 1 этап переделки записи статусов
								РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(Реализация.Ссылка, СтатусКЗаписи, 3, Ссылка);
								// Задача № 2586, 1 этап переделки записи статусов
							КонецЕсли;	
							//Геннадий #4051 22.06.2020 <-
							
							//Обновление таблицы
							Если Стр.Показатель2 > 0 Тогда
								price = Формат(Стр.Показатель2, "ЧРД=.; ЧН=0; ЧГ=");
								ТекстЗапроса = "
								|DECLARE @t TOrderService
								|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +",6,'"+who+"',1,"+price+")
								|EXEC import_updateOrdersServices @t
								|";
								Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
							КонецЕсли;
							
							Если ДатаЗакрытия >= Дата("20150727000000") Тогда
								//Серегин М.В. 23.07.2015 18:38:50 обновление в админке услуг
								ПараметрыОтбора = Новый Структура("Реализация", Стр.Реализация);
								СтрокиУслуги = Услуги.НайтиСтроки(ПараметрыОтбора);
								Для каждого СтрСУ Из СтрокиУслуги Цикл
									price = Формат(СтрСУ.СуммаДляИзменения, "ЧРД=.; ЧН=0; ЧГ=");
									serviceID = СтрСУ.Услуга.НомерПоказателяАдминки;
									Если serviceID <> 6 Тогда
										ТекстЗапроса = "
										|DECLARE @t TOrderService
										|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +","+serviceID+",'"+who+"',1,"+price+")
										|EXEC import_updateOrdersServices @t
										|";
										Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
									КонецЕсли;
								КонецЦикла;
								//Серегин М.В. 15.07.2015 12:52:03 
							КонецеСли;
							
							
							/////lem, убираем в соответствии с задачей Процедура import_setOrderWeigth procedure перебивает тарифную категорию
							//Если ЗначениеЗаполнено(Стр.КатегорияДоставки) Тогда
							//	ТекстЗапроса = "EXEC import_setOrderWeigth " + СокрЛП(Стр.Реализация.Номер) + ", null, null, " + Строка(Стр.КатегорияДоставки.Категория) + ", null,null"; 
							//	Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
							//КонецеСли;	
							
							Зап_ = Новый Запрос;
							Зап_.Текст = "ВЫБРАТЬ
							|	КонтрагентыПередаваемыеВТранзакции.Контрагент
							|ИЗ
							|	РегистрСведений.КонтрагентыПередаваемыеВТранзакции КАК КонтрагентыПередаваемыеВТранзакции
							|ГДЕ
							|	КонтрагентыПередаваемыеВТранзакции.Контрагент = &Контрагент";
							Зап_.УстановитьПараметр("Контрагент", Стр.ВладелецТовара.Ссылка);
							Рез_ = Зап_.Выполнить();
							
							Если Не Рез_.Пустой() Тогда // И Не ТранзакционнаяМодель
								lem.ОтобразитьТранзакциюВАдминке(Соединение, Справочники.ТипыТранзакций.DELIVERY, Реализация.Дата, Формат(-Стр.Показатель1, "ЧРД=.; ЧН=0; ЧГ="), Реализация.Ссылка);
								//lem.ОтобразитьТранзакциюВАдминке(Соединение, Справочники.ТипыТранзакций.CASH_COMISSION, Реализация.Дата, Формат(-Стр.КассовоеОбслуживание, "ЧРД=.; ЧН=0; ЧГ="), Реализация.Ссылка);
								Если Не ТранзакционнаяМодель Тогда
									Записать(РежимЗаписиДокумента.Запись);
									ТранзакционнаяМодель = Истина;
								КонецеСли;	
							КонецеСли;
							
							//Асеев 30.08.2024 (по письму Нет возвратного статуса)>>>
							СформироватьДвижениеПоСтатусамСкладскогоУчета(Стр);
							//Асеев 30.08.2024 (по письму Нет возвратного статуса)<<<
							
							//Серегин М.В. 31.07.2015 14:57:49 отмена возврата по недовложениям (только по заказам которые закрыты или отклонены) 
							//Найдем строки в ТЧ Товары по реализации
							СтрокиТовары = Товары.НайтиСтроки(Новый Структура("Реализация",Реализация.Ссылка));
							КоличествоНедовложение = 0;
							КоличествоВозвращено = 0;
							
							Для каждого СтрСтрокиТовары Из СтрокиТовары Цикл
								Если СтрСтрокиТовары.Недовложение > 0 Тогда
									//Движения по  РН Недовложения по заказам
									//отражаем движения по товарам заказа по которым были недовложения
									Движение = Движения.НедовложенияПоЗаказам.Добавить();
									Движение.Период = Дата;
									Движение.Заказ = Реализация.Ссылка;
									Движение.Номенклатура = СтрСтрокиТовары.Номенклатура;
									Движение.Количество = СтрСтрокиТовары.Недовложение;
									Движение.Цена = СтрСтрокиТовары.Цена;
									Движение.Сумма = СтрСтрокиТовары.Цена*СтрСтрокиТовары.Недовложение;
									
									//Движения по РН ДанныеЧастичныхЗаказов отменяем движения которые сделал документ (ПриходДС/ДанныеСамовывоза)
									//по товарам недовложениям
									ДвижениеДЧЗ = Движения.ДанныеЧастичныхЗаказов.Добавить();
									ДвижениеДЧЗ.ВидДвижения = ВидДвиженияНакопления.Расход;
									ДвижениеДЧЗ.Период = Дата;
									ДвижениеДЧЗ.Заказ = Реализация.Ссылка;
									ДвижениеДЧЗ.Сумма = СтрСтрокиТовары.Недовложение*СтрСтрокиТовары.Цена;
									ДвижениеДЧЗ.Номенклатура = СтрСтрокиТовары.Номенклатура;
									ДвижениеДЧЗ.Количество = СтрСтрокиТовары.Недовложение;
									//Асеев 07.09.2020 (Задача № 4187)>>>
									ДвижениеДЧЗ.КодМаркировки = СтрСтрокиТовары.КодМаркировки;
									//Асеев 07.09.2020 (Задача № 4187)<<<
								КонецЕсли;
								КоличествоВозвращено = КоличествоВозвращено+СтрСтрокиТовары.КоличествоВозвращено;
								КоличествоНедовложение = КоличествоНедовложение+СтрСтрокиТовары.Недовложение; 
							КонецЦикла;
							
							//Если не было реально недоставленых товаров,  а только недовложения, то ставим заказ в статус ЗаказНеВозвратный,
							//дабы он не попадал в наборную ведомость
							Если КоличествоВозвращено = 0 И КоличествоНедовложение >0 Тогда
								ТипЗаказа = smv.ПолучитьТипЗаказа(Реализация.Ссылка);
								Движение = Движения.СтатусыСкладскогоУчета.Добавить();
								Движение.Период = Дата;
								Движение.Заказ = Реализация.Ссылка;
								Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ЗаказНеВозвратный;
								Движение.ТипЗаказа = ТипЗаказа;
							КонецЕсли;
							//Серегин М.В. 31.07.2015 14:57:53 
							
							
							
						Иначе
							#Если Клиент Тогда
								Сообщить(" - закрытие заказа не произведено", СтатусСообщения.Важное);
							#КонецЕсли
							Отказ = Истина;
							
							//+++ БАО 25.07.2017 №1334  
							
							Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
								
								bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. По заказу № " + СокрЛП(Стр.Номер) + " установлен запрет частичного выкупа, но при этом обнаружен частичный выкуп!", ДополнительныеСвойства);  
								
							КонецЕсли;	
							
							//--- БАО 25.07.2017 №1334
							
							//ОтменитьТранзакцию();
						КонецеСли;
						
					ИначеЕсли Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Забор Тогда
						
						Реализация.СтатусИнтернетМагазинаСпр = Справочники.СтатусЗаказаИнтернетМагазина.ЗаказЗакрыт;		
						Реализация.Записать(РежимЗаписиДокумента.Запись);
						
						//ЗафиксироватьТранзакцию();
						Комм= Лев(СокрЛП(Стр.КомментарийСД), 100);
						
						Если СтатусКЗаписи = 301 ИЛИ СтатусКЗаписи = 302 Тогда
							ItemsPrice =  РасчитатьСтоимостьТоваровЗаказа(Стр.Реализация); // Задача № 2586
						Иначе
							ItemsPrice = Неопределено;
						КонецЕсли;

						
						//Серегин М.В. 15.07.2015 10:54:17 новый код
						//Параметры
						orderID = СокрЛП(Стр.Реализация.Номер);
						who = ПараметрыСеанса.ТекущийПользователь;
						completeDate = Евген.ДатаВSQL(?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата), Ложь);
						serviceDC = Формат(Стр.Показатель1 + Стр.Показатель2 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
						serviceDCclean = Формат(Стр.УслугиСДЧистые, "ЧРД=.; ЧН=0; ЧГ=");
						//serviceDCclean = Формат(Стр.Показатель1 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
						comment = СтрЗаменить(Комм, "'", """");
						isRefusal = 0;
						ReasonRefusal = "";
						
						deliveryPrice = Формат(Стр.СуммаДоставкиДоМКАД, "ЧРД=.; ЧН=0; ЧГ=");
						// Задача № 2586 deliveryPrice = ?(Стр.СуммаДоставкиДоМКАД = Стр.ПредСуммаДоставкиДоМКАД, "null", Формат(Стр.СуммаДоставкиДоМКАД, "ЧРД=.; ЧН=0; ЧГ="));
						
						payType  = ?(Стр.ТипОплаты = Стр.ПредТипОплаты, "null", Формат(Стр.ТипОплаты.Код, "ЧН=0; ЧГ="));
						
						// Отключено в рамках Задача № 2586
						//ТекстЗапроса = "
						//|DECLARE @t TSetOrderStatus
						//|INSERT INTO @t ([orderID],[statusId],[who],[completeDate],serviceDC,serviceDCclean,comment, isRefusal, ReasonRefusal, deliveryPrice, payType, closeFlag) VALUES (" +
						//orderID +", 3, '" +who+"', '"+completeDate+"', "+serviceDC+"," +serviceDCclean+",'" +comment+"', "+isRefusal+ ", '" +ReasonRefusal+"',"+deliveryPrice+ "," +payType+","+?(Стр.ПредварительноеЗакрытие, 2, "NULL")+")
						//|EXEC import_setOrderStatusFrom1C @t
						//|";
						//Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
						
						//// Задача № 2586 						
						//mas.ОтправитьФинальныйСтатусВАдминку(orderID, 3, comment,
						//who,
						//?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
						//serviceDC,
						//serviceDCclean,
						//IsRefusal,
						//ReasonRefusal,
						//?(DeliveryPrice = "null", Неопределено, DeliveryPrice),
						//?(PayType = "null", Неопределено, PayType),
						//,
						//,
						//?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
						//ТерминалДоставки.Код,
						//ItemsPrice);
						//// Задача № 2586
						
						//Асеев 15.03.2024 (Задача № 3163)>>>
						СтруктураРасстояния.Заказ = Стр.Реализация;
						СтрокиРасстояний = Расстояния.НайтиСтроки(СтруктураРасстояния);
						DistBeyondHighway = ?(СтрокиРасстояний.Количество(), СтрокиРасстояний[0].Расстояние, Неопределено);
						//Асеев 15.03.2024 (Задача № 3163)<<<
						
						// Задача № 3191 						
						МассивФинальныхСтатусов = mas.ДобавитьФинальныйСтатусКПакету(orderID, 3, comment,
						who,
						?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
						serviceDC,
						serviceDCclean,
						IsRefusal,
						ReasonRefusal,
						?(DeliveryPrice = "null", Неопределено, DeliveryPrice),
						?(PayType = "null", Неопределено, PayType),
						,
						,
						?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
						ТерминалДоставки.Код,
						ItemsPrice,
						МассивФинальныхСтатусов,
						,
						СтатусКЗаписи,
						DistBeyondHighway);
						//Задача № 3241
						// Задача № 3191

						
						// Задача № 2586, 1 этап переделки записи статусов
						РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(Реализация.Ссылка, СтатусКЗаписи, 3, Ссылка);
						// Задача № 2586, 1 этап переделки записи статусов
						
						//Обновление таблицы
						Если Стр.Показатель2 > 0 Тогда
							price = Формат(Стр.Показатель2, "ЧРД=.; ЧН=0; ЧГ=");
							ТекстЗапроса = "
							|DECLARE @t TOrderService
							|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +",6,'"+who+"',1,"+price+")
							|EXEC import_updateOrdersServices @t
							|";
							Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
						КонецЕсли;
						
						Если ДатаЗакрытия >= Дата("20150727000000") Тогда
							//Серегин М.В. 23.07.2015 18:38:50 обновление в админке услуг
							ПараметрыОтбора = Новый Структура("Реализация", Стр.Реализация);
							СтрокиУслуги = Услуги.НайтиСтроки(ПараметрыОтбора);
							Для каждого СтрСУ Из СтрокиУслуги Цикл
								price = Формат(СтрСУ.СуммаДляИзменения, "ЧРД=.; ЧН=0; ЧГ=");
								serviceID = СтрСУ.Услуга.НомерПоказателяАдминки;
								Если serviceID <> 6 Тогда
									ТекстЗапроса = "
									|DECLARE @t TOrderService
									|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +","+serviceID+",'"+who+"',1,"+price+")
									|EXEC import_updateOrdersServices @t
									|";
									Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
								КонецЕсли;
							КонецЦикла;
							//Серегин М.В. 15.07.2015 12:52:03 
						КонецеСли;
						
						если Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Забор И Стр.Транспорт <> Стр.Реализация.Транспорт Тогда
							ОбновитьМашинуВАдминке(Стр.Транспорт, СокрЛП(Стр.Реализация.Номер));
						КонецеСли;	
						
						Зап_ = Новый Запрос;
						Зап_.Текст = "ВЫБРАТЬ
						|	КонтрагентыПередаваемыеВТранзакции.Контрагент
						|ИЗ
						|	РегистрСведений.КонтрагентыПередаваемыеВТранзакции КАК КонтрагентыПередаваемыеВТранзакции
						|ГДЕ
						|	КонтрагентыПередаваемыеВТранзакции.Контрагент = &Контрагент";
						Зап_.УстановитьПараметр("Контрагент", Стр.ВладелецТовара.Ссылка);
						Рез_ = Зап_.Выполнить();
						
						Если Не Рез_.Пустой()  Тогда   //И Не ТранзакционнаяМодель
							//lem.ОтобразитьТранзакциюВАдминке(Соединение, Справочники.ТипыТранзакций.WITHDRAW, Реализация.Дата, Формат(-Стр.Показатель1, "ЧРД=.; ЧН=0; ЧГ="), Реализация.Ссылка);
							//Если Не ТранзакционнаяМодель Тогда
							//	Записать(РежимЗаписиДокумента.Запись);
							//	ТранзакционнаяМодель = Истина;
							//КонецеСли;	
						КонецеСли;	
						
					ИначеЕсли Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Фрахт Тогда
						//Серегин М.В. 04.06.2015 15:16:36 для изменения статуса интернет магазина
						Реализация.СтатусИнтернетМагазинаСпр = Справочники.СтатусЗаказаИнтернетМагазина.ЗаказЗакрыт;
						Если Не Реализация.Проведен  Тогда
							Если Реализация.ПометкаУдаления Тогда
								Реализация.ПометкаУдаления = Ложь;
								Реализация.Записать(РежимЗаписиДокумента.Запись);
							КонецеСли;
							
							Реализация.Записать(РежимЗаписиДокумента.Проведение);
						Иначе
							Реализация.Записать(РежимЗаписиДокумента.Запись);
						КонецЕСли;	
						//Серегин М.В. 04.06.2015 15:16:38 
						//ЗафиксироватьТранзакцию();
						Комм= Лев(СокрЛП(Стр.КомментарийСД), 100);
						
						Если СтатусКЗаписи = 301 ИЛИ СтатусКЗаписи = 302 Тогда
							ItemsPrice =  РасчитатьСтоимостьТоваровЗаказа(Стр.Реализация); // Задача № 2586
						Иначе
							ItemsPrice = Неопределено;
						КонецЕсли;

						
						//Серегин М.В. 15.07.2015 10:54:17 новый код
						//Параметры
						orderID = СокрЛП(Стр.Реализация.Номер);
						who = ПараметрыСеанса.ТекущийПользователь;
						completeDate = Евген.ДатаВSQL(?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата), Ложь);
						serviceDC = Формат(Стр.Показатель1 + Стр.Показатель2 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
						//serviceDCclean = Формат(Стр.Показатель1 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
						serviceDCclean = Формат(Стр.УслугиСДЧистые, "ЧРД=.; ЧН=0; ЧГ=");
						comment = СтрЗаменить(Комм, "'", """");
						isRefusal = 0;
						ReasonRefusal = "";
						
						deliveryPrice = Формат(Стр.СуммаДоставкиДоМКАД, "ЧРД=.; ЧН=0; ЧГ=");
						// Задача № 2586 deliveryPrice = ?(Стр.СуммаДоставкиДоМКАД = Стр.ПредСуммаДоставкиДоМКАД, "null", Формат(Стр.СуммаДоставкиДоМКАД, "ЧРД=.; ЧН=0; ЧГ="));
						
						payType  = ?(Стр.ТипОплаты = Стр.ПредТипОплаты, "null", Формат(Стр.ТипОплаты.Код, "ЧН=0; ЧГ="));
						
						// Отключено в рамках Задача № 2586 
						//ТекстЗапроса = "
						//|DECLARE @t TSetOrderStatus
						//|INSERT INTO @t ([orderID],[statusId],[who],[completeDate],serviceDC,serviceDCclean,comment, isRefusal, ReasonRefusal, deliveryPrice, payType, closeFlag) VALUES (" +
						//orderID +", 3, '" +who+"', '"+completeDate+"', "+serviceDC+"," +serviceDCclean+",'" +comment+"', "+isRefusal+ ", '" +ReasonRefusal+"',"+deliveryPrice+ "," +payType+","+?(Стр.ПредварительноеЗакрытие, 2, "NULL")+")
						//|EXEC import_setOrderStatusFrom1C @t
						//|";
						//Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
										
						//// Задача № 2586 						
						//mas.ОтправитьФинальныйСтатусВАдминку(orderID, 3, comment,
						//who,
						//?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
						//serviceDC,
						//serviceDCclean,
						//IsRefusal,
						//ReasonRefusal,
						//?(DeliveryPrice = "null", Неопределено, DeliveryPrice),
						//?(PayType = "null", Неопределено, PayType),
						//,
						//,
						//?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
						//ТерминалДоставки.Код,
						//ItemsPrice);
						//// Задача № 2586
						
						// Задача № 3191 						
						МассивФинальныхСтатусов = mas.ДобавитьФинальныйСтатусКПакету(orderID, 3, comment,
						who,
						?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
						serviceDC,
						serviceDCclean,
						IsRefusal,
						ReasonRefusal,
						?(DeliveryPrice = "null", Неопределено, DeliveryPrice),
						?(PayType = "null", Неопределено, PayType),
						,
						,
						?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
						ТерминалДоставки.Код,
						ItemsPrice,
						МассивФинальныхСтатусов,
						,
						СтатусКЗаписи);  //Задача № 3241 
						// Задача № 3191
					
						// Задача № 2586, 1 этап переделки записи статусов
						РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(Реализация.Ссылка, СтатусКЗаписи, 3, Ссылка);
						// Задача № 2586, 1 этап переделки записи статусов
						
						//Обновление таблицы
						Если Стр.Показатель2 > 0 Тогда
							price = Формат(Стр.Показатель2, "ЧРД=.; ЧН=0; ЧГ=");
							ТекстЗапроса = "
							|DECLARE @t TOrderService
							|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +",6,'"+who+"',1,"+price+")
							|EXEC import_updateOrdersServices @t
							|";
							Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
						КонецЕсли;
						Если ДатаЗакрытия >= Дата("20150727000000") Тогда
							//Серегин М.В. 23.07.2015 18:38:50 обновление в админке услуг
							ПараметрыОтбора = Новый Структура("Реализация", Стр.Реализация);
							СтрокиУслуги = Услуги.НайтиСтроки(ПараметрыОтбора);
							Для каждого СтрСУ Из СтрокиУслуги Цикл
								price = Формат(СтрСУ.СуммаДляИзменения, "ЧРД=.; ЧН=0; ЧГ=");
								serviceID = СтрСУ.Услуга.НомерПоказателяАдминки;
								Если serviceID <> 6 Тогда
									ТекстЗапроса = "
									|DECLARE @t TOrderService
									|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +","+serviceID+",'"+who+"',1,"+price+")
									|EXEC import_updateOrdersServices @t
									|";
									Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
								КонецЕсли;
							КонецЦикла;
							//Серегин М.В. 15.07.2015 12:52:03 
						КонецеСли;
						
						если Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Фрахт И Стр.Транспорт <> Стр.Реализация.Транспорт Тогда
							ОбновитьМашинуВАдминке(Стр.Транспорт, СокрЛП(Стр.Реализация.Номер));
						КонецеСли;	
						
					КонецеСли;
				Иначеесли Стр.Отклонить Тогда
										
					// Задача № 3241
					СтатусКЗаписи = 0;
					Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена 
						И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
						СтатусКЗаписи = 305;
					ИначеЕсли  Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена
						И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
						СтатусКЗаписи = 305;
					Иначе 
						//Геннадий #3239 03.07.2020 ->
						//СтатусКЗаписи = 401;
						СтатусКЗаписи = 305;
						//Геннадий #3239 03.07.2020 <-						
					КонецЕсли; 
					// Задача № 3241					
					
					
					Если Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Или Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
						
						Если ВариантЗаполнения=3 Тогда
							СтатусКЗаписи = 305; //Задача № 3247
						КонецЕсли;	

						Реализация.Записать(РежимЗаписиДокумента.ОтменаПроведения);
						
						Реализация.СтатусИнтернетМагазина = 4;
						Реализация.ПометкаУдаления = Истина;
						Реализация.Записать(РежимЗаписиДокумента.Запись);
						
						Если ЗначениеЗаполнено(стр.Возврат) Тогда
							ВозвратПок = стр.Возврат.ПолучитьОбъект();
							ВозвратПок.Записать(РежимЗаписиДокумента.ОтменаПроведения);
						КонецЕсли;
						
						//Асеев 29.09.2021 (по письму Леруа отмена)>>>
						//Если Не Реализация.Ссылка.Проведен Тогда
						//Асеев 29.09.2021 (по письму Леруа отмена)<<<
							//ЗафиксироватьТранзакцию();
							//НоваяДата = Неопределено;
							ЗаписьЖурналаРегистрации("Отмена заказа", УровеньЖурналаРегистрации.Информация, Метаданные.Документы.РеализацияТоваровУслуг, Стр.Реализация, ""+БылСтатус+" -> 4");
							Комм = Лев(СокрЛП(Стр.КомментарийСД), 100);
							
							//Костя 111115 / ReasonRefusal ID
							ReasonRefusalID = ?(ЗначениеЗаполнено(Стр.ПричинаОтклоненияЗаказа.Код), Прав(Стр.ПричинаОтклоненияЗаказа.Код,1), 0);
							//Костя 111115
							//Серегин М.В. 15.07.2015 10:54:17 новый код
							//Параметры
							orderID = СокрЛП(Стр.Реализация.Номер);
							who = ПараметрыСеанса.ТекущийПользователь;
							completeDate = Евген.ДатаВSQL(?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата), Ложь);
							serviceDC = Формат(Стр.Показатель1 + Стр.Показатель2 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
							//serviceDCclean = Формат(Стр.Показатель1 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
							serviceDCclean = Формат(Стр.УслугиСДЧистые, "ЧРД=.; ЧН=0; ЧГ=");
							comment = СтрЗаменить(Комм, "'", """");
							isRefusal = 0;
							ReasonRefusal = ?(Стр.ПричинаОтказа.Пустая(), "", СокрЛП(Стр.ПричинаОтказа.Наименование));
							deliveryPrice = "NULL";
							payType  = "NULL";
							
							//CeHbKA #3225
							reasonId = ?(Стр.ПричинаОтказа.Пустая(), "", СокрЛП(Стр.ПричинаОтказа.Код));
							//CeHbKA #3225
							
							// Отключено в рамках Задача № 2586 
							//ТекстЗапроса = "
							//|DECLARE @t TSetOrderStatus
							//|INSERT INTO @t ([orderID],[statusId],[who],[completeDate],serviceDC,serviceDCclean,comment, isRefusal, ReasonRefusal, deliveryPrice, payType, ReasonRefusalID, closeFlag) VALUES (" +
							//orderID +", 4, '" +who+"', '"+completeDate+"', "+serviceDC+"," +serviceDCclean+",'" +comment+"', "+isRefusal+ ", '" +ReasonRefusal+"'," +deliveryPrice+ "," +payType+","+ReasonRefusalID+","+?(Стр.ПредварительноеЗакрытие, 2, "NULL")+")
							//|EXEC import_setOrderStatusFrom1C @t
							//|";
							//Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
							
							//// Задача № 2586 						
							//mas.ОтправитьФинальныйСтатусВАдминку(orderID, 4, comment,
							//who,
							//?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
							//serviceDC,
							//serviceDCclean,
							//IsRefusal,
							//ReasonRefusal,
							//,
							//,
							//ReasonRefusalID,
							//,
							//?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
							//ТерминалДоставки.Код);
							//// Задача № 2586
							
							//Геннадий #4051 22.06.2020 ->
							//заглушка на передачу кода 401
							Если Не СтатусКЗаписи = 401 Тогда
								
								//Асеев 15.03.2024 (Задача № 3163)>>>
								СтруктураРасстояния.Заказ = Стр.Реализация;
								СтрокиРасстояний = Расстояния.НайтиСтроки(СтруктураРасстояния);
								DistBeyondHighway = ?(СтрокиРасстояний.Количество(), СтрокиРасстояний[0].Расстояние, Неопределено);
								//Асеев 15.03.2024 (Задача № 3163)<<<
								
								// Задача № 3191 						
								МассивФинальныхСтатусов = mas.ДобавитьФинальныйСтатусКПакету(orderID, 4, comment,
								who,
								?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
								serviceDC,
								serviceDCclean,
								IsRefusal,
								ReasonRefusal,
								,
								,
								ReasonRefusalID,
								,
								?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
								ТерминалДоставки.Код,
								,
								МассивФинальныхСтатусов,
								reasonId,
								СтатусКЗаписи,
								DistBeyondHighway);
								//CeHbKA #3225 18.06.2019 //Задача № 3241 
								// Задача № 3191
								
								
								// Задача № 2586, 1 этап переделки записи статусов
								РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(Реализация.Ссылка, СтатусКЗаписи, 4, Ссылка);
								// Задача № 2586, 1 этап переделки записи статусов
								
							КонецЕсли;
							//Геннадий #4051 22.06.2020 <-
							
							//Обновление таблицы
							Если Стр.Показатель2 > 0 Тогда
								price = Формат(Стр.Показатель2, "ЧРД=.; ЧН=0; ЧГ=");
								ТекстЗапроса = "
								|DECLARE @t TOrderService
								|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +",6,'"+who+"',1,"+price+")
								|EXEC import_updateOrdersServices @t
								|";
								Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
							КонецЕсли;
							
							Если ДатаЗакрытия >= Дата("20150727000000") Тогда
								
								//Серегин М.В. 23.07.2015 18:38:50 обновление в админке услуг
								ПараметрыОтбора = Новый Структура("Реализация", Стр.Реализация);
								СтрокиУслуги = Услуги.НайтиСтроки(ПараметрыОтбора);
								Для каждого СтрСУ Из СтрокиУслуги Цикл
									price = Формат(СтрСУ.СуммаДляИзменения, "ЧРД=.; ЧН=0; ЧГ=");
									serviceID = СтрСУ.Услуга.НомерПоказателяАдминки;
									Если serviceID <> 6 Тогда
										ТекстЗапроса = "
										|DECLARE @t TOrderService
										|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +","+serviceID+",'"+who+"',1,"+price+")
										|EXEC import_updateOrdersServices @t
										|";
										Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
									КонецЕсли;
								КонецЦикла;
								//Серегин М.В. 15.07.2015 12:52:03 
							КонецеСли;
							
							//Асеев 30.08.2024 (по письму Нет возвратного статуса)>>>
							СформироватьДвижениеПоСтатусамСкладскогоУчета(Стр);
							//Асеев 30.08.2024 (по письму Нет возвратного статуса)<<<
							
							//Серегин М.В. 03.08.2015 11:10:39 недовложения
							//Серегин М.В. 31.07.2015 14:57:49 отмена возврата по недовложениям  
							//Найдем строки в ТЧ Товары по реализации
							СтрокиТовары = Товары.НайтиСтроки(Новый Структура("Реализация",Реализация.Ссылка));
							КоличествоНедовложение = 0;
							КоличествоВозвращено = 0;
							
							Для каждого СтрСтрокиТовары Из СтрокиТовары Цикл
								Если СтрСтрокиТовары.Недовложение > 0 Тогда
									//Движения по  РН Недовложения по заказам
									//отражаем движения по товарам заказа по которым были недовложения
									Движение = Движения.НедовложенияПоЗаказам.Добавить();
									Движение.Период = Дата;
									Движение.Заказ = Реализация.Ссылка;
									Движение.Номенклатура = СтрСтрокиТовары.Номенклатура;
									Движение.Количество = СтрСтрокиТовары.Недовложение;
									Движение.Цена = СтрСтрокиТовары.Цена;
									Движение.Сумма = СтрСтрокиТовары.Цена*СтрСтрокиТовары.Недовложение;
									
									//Движения по РН ДанныеЧастичныхЗаказов отменяем движения которые сделал документ (ПриходДС/ДанныеСамовывоза)
									//по товарам недовложениям
									ДвижениеДЧЗ = Движения.ДанныеЧастичныхЗаказов.Добавить();
									ДвижениеДЧЗ.ВидДвижения = ВидДвиженияНакопления.Расход;
									ДвижениеДЧЗ.Период = Дата;
									ДвижениеДЧЗ.Заказ = Реализация.Ссылка;
									ДвижениеДЧЗ.Сумма = СтрСтрокиТовары.Недовложение*СтрСтрокиТовары.Цена;
									ДвижениеДЧЗ.Номенклатура = СтрСтрокиТовары.Номенклатура;
									ДвижениеДЧЗ.Количество = СтрСтрокиТовары.Недовложение;
									//Асеев 07.09.2020 (Задача № 4187)>>>
									ДвижениеДЧЗ.КодМаркировки = СтрСтрокиТовары.КодМаркировки;
									//Асеев 07.09.2020 (Задача № 4187)<<<
								КонецЕсли;
								КоличествоВозвращено = КоличествоВозвращено+СтрСтрокиТовары.КоличествоВозвращено;
								КоличествоНедовложение = КоличествоНедовложение+СтрСтрокиТовары.Недовложение; 
							КонецЦикла;
							
							//Если не было реально недоставленых товаров,  а только недовложения, то ставим заказ в статус ЗаказНеВозвратный,
							//дабы он не попадал в наборную ведомость
							Если КоличествоВозвращено = 0 И КоличествоНедовложение >0 Тогда
								ТипЗаказа = smv.ПолучитьТипЗаказа(Реализация.Ссылка);
								Движение = Движения.СтатусыСкладскогоУчета.Добавить();
								Движение.Период = Дата;
								Движение.Заказ = Реализация.Ссылка;
								Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ЗаказНеВозвратный;
								Движение.ТипЗаказа = ТипЗаказа;
							КонецЕсли;
							//Серегин М.В. 31.07.2015 14:57:53 
							//Серегин М.В. 03.08.2015 11:10:44 
							
						//Асеев 29.09.2021 (по письму Леруа отмена)>>>
						//Иначе
						//	#Если Клиент Тогда
						//		Сообщить(" - отмена заказа не произведена", СтатусСообщения.Важное);
						//	#КонецЕсли
						//	Отказ = Истина;
						//	//ОтменитьТранзакцию();
						//	
						//	//+++ БАО 25.07.2017 №1334  
						//	
						//	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
						//		
						//		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. - отмена заказа не произведена. Реализация " + СокрЛП(Стр.Номер) + " не проведена.", ДополнительныеСвойства);  
						//		
						//	КонецЕсли;	
						//	
						//	//--- БАО 25.07.2017 №1334
						//	
						//	
						//КонецеСли;
						//Асеев 29.09.2021 (по письму Леруа отмена)<<<
						
					ИначеЕсли Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Забор Тогда
						//ЗафиксироватьТранзакцию();
						Комм= Лев(СокрЛП(Стр.КомментарийСД), 100);
						
						//Костя 111115 / ReasonRefusal ID // ЗАБОР
						ReasonRefusalID = ?(ЗначениеЗаполнено(Стр.ПричинаОтклоненияЗаказа.Код), Прав(Стр.ПричинаОтклоненияЗаказа.Код,1), 0);
						//Костя 111115						
						
						//Серегин М.В. 15.07.2015 10:54:17 новый код
						//Параметры
						orderID = СокрЛП(Стр.Реализация.Номер);
						who = ПараметрыСеанса.ТекущийПользователь;
						completeDate = Евген.ДатаВSQL(?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата), Ложь);
						serviceDC = Формат(Стр.Показатель1 + Стр.Показатель2 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
						//serviceDCclean = Формат(Стр.Показатель1 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
						serviceDCclean = Формат(Стр.УслугиСДЧистые, "ЧРД=.; ЧН=0; ЧГ=");
						comment = СтрЗаменить(Комм, "'", """");
						isRefusal = 0;
						ReasonRefusal = "";
						deliveryPrice = "NULL";
						payType  = "NULL";
						
						// Отключено Задача № 2586 
						//ТекстЗапроса = "
						//|DECLARE @t TSetOrderStatus
						//|INSERT INTO @t ([orderID],[statusId],[who],[completeDate],serviceDC,serviceDCclean,comment, isRefusal, ReasonRefusal, deliveryPrice, payType, ReasonRefusalID, closeFlag) VALUES (" +
						//orderID +", 4, '" +who+"', '"+completeDate+"', "+serviceDC+"," +serviceDCclean+",'" +comment+"', "+isRefusal+ ", '" +ReasonRefusal+"',"+deliveryPrice+ "," +payType+","+ReasonRefusalID+","+?(Стр.ПредварительноеЗакрытие, 2, "NULL")+")
						//|EXEC import_setOrderStatusFrom1C @t
						//|";
						//Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
						
						//// Задача № 2586 						
						//mas.ОтправитьФинальныйСтатусВАдминку(orderID, 4, comment,
						//who,
						//?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
						//serviceDC,
						//serviceDCclean,
						//IsRefusal,
						//ReasonRefusal,
						//,
						//,
						//ReasonRefusalID,
						//,
						//?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
						//ТерминалДоставки.Код);
						//// Задача № 2586
						
						//Асеев 15.03.2024 (Задача № 3163)>>>
						СтруктураРасстояния.Заказ = Стр.Реализация;
						СтрокиРасстояний = Расстояния.НайтиСтроки(СтруктураРасстояния);
						DistBeyondHighway = ?(СтрокиРасстояний.Количество(), СтрокиРасстояний[0].Расстояние, Неопределено);
						//Асеев 15.03.2024 (Задача № 3163)<<<
						
						// Задача № 3191 						
						МассивФинальныхСтатусов = mas.ДобавитьФинальныйСтатусКПакету(orderID, 4, comment,
						who,
						?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
						serviceDC,
						serviceDCclean,
						IsRefusal,
						ReasonRefusal,
						,
						,
						ReasonRefusalID,
						,
						?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
						ТерминалДоставки.Код,
						,
						МассивФинальныхСтатусов,
						,
						СтатусКЗаписи,
						DistBeyondHighway);
						// Задача № 3241
						// Задача № 3191

						
						// Задача № 2586, 1 этап переделки записи статусов
						РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(Реализация.Ссылка, СтатусКЗаписи, 4, Ссылка);
						// Задача № 2586, 1 этап переделки записи статусов

						
						//Обновление таблицы
						Если Стр.Показатель2 > 0 Тогда
							price = Формат(Стр.Показатель2, "ЧРД=.; ЧН=0; ЧГ=");
							ТекстЗапроса = "
							|DECLARE @t TOrderService
							|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +",6,'"+who+"',1,"+price+")
							|EXEC import_updateOrdersServices @t
							|";
							Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
						КонецЕсли;
						
						
						Если ДатаЗакрытия >= Дата("20150727000000") Тогда
							//Серегин М.В. 23.07.2015 18:38:50 обновление в админке услуг
							ПараметрыОтбора = Новый Структура("Реализация", Стр.Реализация);
							СтрокиУслуги = Услуги.НайтиСтроки(ПараметрыОтбора);
							Для каждого СтрСУ Из СтрокиУслуги Цикл
								price = Формат(СтрСУ.СуммаДляИзменения, "ЧРД=.; ЧН=0; ЧГ=");
								serviceID = СтрСУ.Услуга.НомерПоказателяАдминки;
								Если serviceID <> 6 Тогда
									ТекстЗапроса = "
									|DECLARE @t TOrderService
									|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +","+serviceID+",'"+who+"',1,"+price+")
									|EXEC import_updateOrdersServices @t
									|";
									Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
								КонецЕсли;
							КонецЦикла;
							//Серегин М.В. 15.07.2015 12:52:03 
						КонецеСли;
						если Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Забор И Стр.Транспорт <> Стр.Реализация.Транспорт Тогда
							ОбновитьМашинуВАдминке(Стр.Транспорт, СокрЛП(Стр.Реализация.Номер));
						КонецеСли;	
					ИначеЕсли Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Фрахт Тогда
						//Серегин М.В. 04.06.2015 15:18:14  
						Реализация.Записать(РежимЗаписиДокумента.ОтменаПроведения);
						Реализация.СтатусИнтернетМагазина = 4;
						Реализация.СтатусИнтернетМагазинаСпр = Справочники.СтатусЗаказаИнтернетМагазина.ЗаказОтклонен;
						Реализация.ПометкаУдаления = Истина;
						Реализация.Записать(РежимЗаписиДокумента.Запись);
						//Серегин М.В. 04.06.2015 15:18:16 
						
						//ЗафиксироватьТранзакцию();
						Комм= Лев(СокрЛП(Стр.КомментарийСД), 100);
						
						
						//Костя 111115 / ReasonRefusal ID  ФРАХТ
						ReasonRefusalID = ?(ЗначениеЗаполнено(Стр.ПричинаОтклоненияЗаказа.Код), Прав(Стр.ПричинаОтклоненияЗаказа.Код,1), 0);
						//Костя 111115
						
						//Серегин М.В. 15.07.2015 10:54:17 новый код
						//Параметры
						orderID = СокрЛП(Стр.Реализация.Номер);
						who = ПараметрыСеанса.ТекущийПользователь;
						completeDate = Евген.ДатаВSQL(?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата), Ложь);
						serviceDC = Формат(Стр.Показатель1 + Стр.Показатель2 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
						//serviceDCclean = Формат(Стр.Показатель1 + Стр.Показатель3 + Стр.Показатель4 + Стр.Показатель5 + Стр.Показатель6, "ЧРД=.; ЧН=0; ЧГ=");
						serviceDCclean = Формат(Стр.УслугиСДЧистые, "ЧРД=.; ЧН=0; ЧГ=");
						comment = СтрЗаменить(Комм, "'", """");
						isRefusal = 0;
						ReasonRefusal = "";
						deliveryPrice = "NULL";
						payType  = "NULL";
						
						// Отключено в рамках Задача № 2586
						//ТекстЗапроса = "
						//|DECLARE @t TSetOrderStatus
						//|INSERT INTO @t ([orderID],[statusId],[who],[completeDate],serviceDC,serviceDCclean,comment, isRefusal, ReasonRefusal, deliveryPrice, payType, ReasonRefusalID, closeFlag) VALUES (" +
						//orderID +", 4, '" +who+"', '"+completeDate+"', "+serviceDC+"," +serviceDCclean+",'" +comment+"', "+isRefusal+ ", '" +ReasonRefusal+"',"+deliveryPrice+ "," +payType+","+ReasonRefusalID+","+?(Стр.ПредварительноеЗакрытие, 2, "NULL")+")
						//|EXEC import_setOrderStatusFrom1C @t
						//|";
						//Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
						
						//// Задача № 2586 						
						//mas.ОтправитьФинальныйСтатусВАдминку(orderID, 4, comment,
						//who,
						//?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
						//serviceDC,
						//serviceDCclean,
						//IsRefusal,
						//ReasonRefusal,
						//,
						//,
						//ReasonRefusalID,
						//,
						//?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
						//ТерминалДоставки.Код);
						//// Задача № 2586
						
						// Задача № 3191 						
						МассивФинальныхСтатусов = mas.ДобавитьФинальныйСтатусКПакету(orderID, 4, comment,
						who,
						?(НоваяДата = Неопределено, Реализация.Дата, НоваяДата),
						serviceDC,
						serviceDCclean,
						IsRefusal,
						ReasonRefusal,
						,
						,
						ReasonRefusalID,
						,
						?(Стр.ПредварительноеЗакрытие, 2, Неопределено),
						ТерминалДоставки.Код,
						,
						МассивФинальныхСтатусов,
						,
						СтатусКЗаписи); //Задача № 3241
						// Задача № 3191
						
						// Задача № 2586, 1 этап переделки записи статусов
						РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(Реализация.Ссылка, СтатусКЗаписи, 4, Ссылка);
						// Задача № 2586, 1 этап переделки записи статусов

						
						//Обновление таблицы
						Если Стр.Показатель2 > 0 Тогда
							price = Формат(Стр.Показатель2, "ЧРД=.; ЧН=0; ЧГ=");
							ТекстЗапроса = "
							|DECLARE @t TOrderService
							|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +",6,'"+who+"',1,"+price+")
							|EXEC import_updateOrdersServices @t
							|";
							Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
						КонецЕсли;
						
						Если ДатаЗакрытия >= Дата("20150727000000") Тогда
							
							//Серегин М.В. 23.07.2015 18:38:50 обновление в админке услуг
							ПараметрыОтбора = Новый Структура("Реализация", Стр.Реализация);
							СтрокиУслуги = Услуги.НайтиСтроки(ПараметрыОтбора);
							Для каждого СтрСУ Из СтрокиУслуги Цикл
								price = Формат(СтрСУ.СуммаДляИзменения, "ЧРД=.; ЧН=0; ЧГ=");
								serviceID = СтрСУ.Услуга.НомерПоказателяАдминки;
								Если serviceID <> 6 Тогда
									ТекстЗапроса = "
									|DECLARE @t TOrderService
									|INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +","+serviceID+",'"+who+"',1,"+price+")
									|EXEC import_updateOrdersServices @t
									|";
									Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
								КонецЕсли;
							КонецЦикла;
							//Серегин М.В. 15.07.2015 12:52:03 
						Конецесли;
					КонецЕсли;	
				КонецеСли;
				
				Реализация.Записать(РежимЗаписиДокумента.Запись);
				
			Исключение
				//+++ БАО 27.07.2017 №1334
				ТекстОшибки =  ОписаниеОшибки();
				
				#Если Клиент Тогда
					Сообщить(ТекстОшибки, СтатусСообщения.Важное);
				#КонецЕсли
				Отказ = Истина;
				//ОтменитьТранзакцию();
				
				//+++ БАО 25.07.2017 №1334  
				
				Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
					
					bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. ОбновитьПризнакВозвратаВАдминке. Номер заказа " + СокрЛП(Стр.Номер) +  " .Ошибка: " + ТекстОшибки, ДополнительныеСвойства);  
					
				КонецЕсли;	
				
				//--- БАО 25.07.2017 №1334
				
				Прервать;
			КонецПопытки;
		КонецЕсли;
		#Если Клиент Тогда
			
			ФормаИндикацииХодаЗагрузки.Значение = ФормаИндикацииХодаЗагрузки.Значение + 1;
			ФормаИндикацииХодаЗагрузки.КомментарийЗначения = "Доставка № " + СокрЛП(Стр.Реализация.Номер) + " от " + Формат(Стр.Реализация.Дата, "ДФ=дд.ММ.гггг") + " (" + Строка(Н) + " из " + Строка(Кол) + ")";
		#КонецЕсли
		
		
	КонецЦикла;
	
	// Задача № 3191
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		ФайлДляКонтроля = Неопределено;
		// для теста 
		//ФайлДляКонтроля = "D:\tmp\test_final_state_Posted" + СокрЛП(новый УникальныйИдентификатор()) + ".json";
	Иначе	
		ФайлДляКонтроля = Неопределено;
	КонецЕсли;

	Если МассивФинальныхСтатусов.Количество() > 0 Тогда
		
		РезультатОтправкиВАдминку = mas.ОтправитьМассивСтатусовЗаказов(МассивФинальныхСтатусов, "SetOrdersFinalStatus", ФайлДляКонтроля); 
		Если Не РезультатОтправкиВАдминку.Успешно Тогда
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	// Задача № 3191
	
	#КонецОбласти
	
	//+++ БАО 25.07.2017 №1334  
		
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Завершение ОбновитьПризнакВозвратаВАдминке.", ДополнительныеСвойства);  
			
	КонецЕсли;	
		
	//--- БАО 25.07.2017 №1334
	
	
	//Если ТипДоставки = Перечисления.ТипыЗаказов.Доставка Или ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз Тогда
		Если Не Отказ Тогда
			// ОбновитьЗаказыВАдминке("Проведение"); // Отключено по Задача № 3357
		КонецеСли;	
	//КонецеСли;
	
	//+++ БАО 25.07.2017 №1334  
		
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Запись в регистры. Начало.", ДополнительныеСвойства);  
			
	КонецЕсли;	
		
	//--- БАО 25.07.2017 №1334
	
	//НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Движения.СостоянияЗаказов.Записывать = Истина;
	//Движения.ФинансоваяЗадолженностьПоКомитентам.Записывать = Истина;
	
	
	Если не Отказ Тогда
		
		Для Каждого Тек Из Заказы Цикл
			Если Не Тек.Закрыть Тогда
				Продолжить;
			КонецеСли;	
			Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка
				ИЛИ Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
				Если Тек.ПредПричинаНевыполнения <> Тек.ПричинаНевыполнения Или Тек.РезультатДоставки <> тек.ПредРезультатДоставки Тогда
					Нов = Движения.СостоянияЗаказов.Добавить();
					Нов.Доставка = Тек.Доставка;
					Нов.Период = Дата;
					Нов.ПричинаНеВыполнения = Тек.ПричинаНевыполнения;
					Нов.РезультатДоставки = Тек.РезультатДоставки;
					
					// Задача № 2991
					
					Если ЗначениеЗаполнено(Тек.РейсДокумент) Тогда
						
						Нов.Рейс = Тек.РейсДокумент;
						Нов.ДатаДоставки = Тек.РейсДокумент.ДатаРейса;
						
					Иначе
						
						Нов.ДатаДоставки = Тек.Реализация.Дата;
						
					КонецЕсли;	
					
					Нов.ПричинаОтказа = Тек.ПричинаОтказа;
					Нов.СторонаПретензий = Тек.ПричинаОтказа.СторонаПретензии;
					
					// Задача № 2991

                    //+++++Серегин М.В. 28.09.2015 11:32:58 
                    Нов.Заказ = Тек.Реализация.Ссылка;
                    //-----Серегин М.В. 28.09.2015 11:33:00 
					// Михушкин --->> 
					//Нов.Экспедитор = Тек.Экспедитор;
					//Нов.Водитель   = Тек.Водитель;
					// <<--- Михушкин 
				КонецЕсли;	
			КонецЕсли;
			
			ПровОплата = Ложь;
			
		КонецЦикла;	
		//ПроведениеДоходовКомпании();
		ПроведениеРасшифровкиУслугСД();
		
		Если Не ВариантЗаполнения = 3 Тогда //Задача № 3247	
			ОтражениеЗарплаты(Отказ);			
		КонецЕсли;
		
		ОбновлениеСтатусовВАдминке(Соединение);
		
		Если Не ВариантЗаполнения = 3 Тогда //Задача № 3247	
			ОтразитьДвиженияПоСубагентам();
		КонецЕсли;
	
		ПровестиДоходыКомпании();     

		//+++ Костя / ОстаткиЗаказов
		ВводОстатковПоЗаказам();
		
		//+++ Костя 13112015 // Запись отказных позиций из 1с в админку
		ЗаписатьОтказныеПозицииИз1СВАдминку();
		//+++ Костя 13112015 
        
        //+++++Серегин М.В. 06.11.2015 10:42:44 к оптимизации
		Для Каждого Тек Из Заказы Цикл
			Если Тек.Закрыть Или Тек.Отклонить Тогда
				Если ТипЗнч(Тек.Реализация.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
					lem.ОтразитьСоставЗаказаВИстории(Ссылка, Тек.Реализация.Ссылка);
				КонецеСли;	
			КонецеСли;	
        КонецЦикла;	
        //-----Серегин М.В. 06.11.2015 10:42:51 
		ОбновитьСуммыКомиссийВАдминке(1, Соединение);
		СчитатьОбновленныеСуммыИзАдминки();

		ЗакрытиеЗаказов(); 
		
		// Михушкин - 10.05.2016 - РС РейсыПоЗаказам - Заполняем регистр для статистики выполнения заказов --->> 
		РейсыПоЗаказам();
		// <<--- Михушкин 		
		
		// Михушкин - 14.06.2016 - РС РасчетРасстояний --->> 
		РасчетРасстояний();
		// <<--- Михушкин
		
		// Михушкин --->> 
		СтатусыЗакрытияЗаказов(РежимЗаписиДокумента.Проведение);
		// <<--- Михушкин 
		
		// Михушкин --->>  
		ОперативнаяЭкономикаЗаказов(); 
		ЗакрытьЗадачиПользователю();
		ЗаписатьДанныеРеализаций();
		// <<--- Михушкин
		ЗафиксироватьМестоположениеЗаказа();
		
		//+Степанов Задача № 3945
		ЗаписатьСостоянияЗакрытияЗаказов(Истина);
		//-Степанов Задача № 3945
		
	КонецЕсли;	
	
	//#Если Клиент Тогда
	//	ФормаИндикатора.Закрыть();
	//#КонецЕсли
	#Если Клиент Тогда
	ФормаИндикацииХодаЗагрузки.Закрыть();
	#КонецЕсли
	
	//+++ БАО 25.07.2017 №1334  
		
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ОбработкаПроведения. Конец.", ДополнительныеСвойства);  
			
	КонецЕсли;	
		
	//--- БАО 25.07.2017 №1334
			
	//ЗафиксироватьТранзакцию();
	
	// Якурнов 09.10.2018 18:02:53
	oz_РаботаССервисом.ВыполнитьОбменДаннымиOZONПриЗакрытииЗаказов(Ссылка);
	
	//CeHbKA #4383 10.11.2020
	ВыполнитьДвиженияПоРС_зпИсходныеДанныеРасчетаЗППоЗаказамДополнительныеНачисления();
	//CeHbKA #4383 10.11.2020
	
	//Асеев 21.09.2023 (Задача № 5125)>>>
	Движения.эк_ЗатратыЗаработнаяПлата.Записывать = Истина;
	Движения.эк_ЗатратыЗаработнаяПлата.Очистить();
	
	РегистрыСведений.эк_ЗатратыЗаработнаяПлата.ЗаполнитьДвижения(Движения.эк_ЗатратыЗаработнаяПлата,, Движения.зпИсходныеДанныеРасчетаЗППоЗаказамДополнительныеНачисления);
	//Асеев 21.09.2023 (Задача № 5125)<<<
	
	Движения.зпИсходныеДанныеРасчетаМинимальнойЗП.Записывать = Истина;
	Движения.зпИсходныеДанныеРасчетаМинимальнойЗП.Очистить();
	Если ВариантЗаполнения = 1 И Заказы.Количество() Тогда
		//Асеев 09.02.2024 (Задача № 5227)>>>
		Если РегистрыСведений.РежимыПроверокДокументовПриИзменении.ПолучитьРазрешенияДокумента(Ссылка, Перечисления.ОбластиПроверокИзмененияДанных.зп_ФиксацияЗП) Тогда
			ПолнаяБлокировка = Неопределено;
		Иначе
			ПолнаяБлокировка = РегистрыСведений.зпИсходныеДанныеРасчетаМинимальнойЗП.ПолнаяБлокировкаФормирования(ТерминалДоставки, ДатаЗакрытия, Дата);
		КонецЕсли;
		//Асеев 09.02.2024 (Задача № 5227)<<<
		Если ПолнаяБлокировка = Неопределено Тогда
		
			//Асеев 16.05.2023 (Задача № 5041)>>>
			ВыполнитьДвиженияПоРС_зпИсходныеДанныеРасчетаМинимальнойЗП();
			//Асеев 16.05.2023 (Задача № 5041)<<<
			//Асеев 27.09.2023 (Задача № 5129)>>>
			РегистрыСведений.эк_ЗатратыЗаработнаяПлата.РаспределитьМинимальнуюЗП(Движения.эк_ЗатратыЗаработнаяПлата, Движения.зпИсходныеДанныеРасчетаМинимальнойЗП);
			//Асеев 27.09.2023 (Задача № 5129)<<<
			
		ИначеЕсли ПолнаяБлокировка Тогда
			Отказ = Истина;
			Сообщить("Произведена фиксация месяца по минимальной з/п " + Формат(ДатаЗакрытия, "ДФ='MMMM yyyy'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//Асеев 03.11.2023 (Задача № 5161)>>>
	ВыполнитьДвиженияПоРСэкУчетПроизводственныхОпераций();
	//Асеев 03.11.2023 (Задача № 5161)<<<
	
	//Асеев 11.03.2024 (Задача № 5241)>>>
	//этот код должен быть в конце обработчика ОбработкаПроведения
	Движения.Записать();
	ПровестиКорректировкиПоЗаказам();
	//Асеев 11.03.2024 (Задача № 5241)<<<
	
КонецПроцедуры

//Асеев 16.05.2023 (Задача № 5041)>>>
Процедура ВыполнитьДвиженияПоРС_зпИсходныеДанныеРасчетаМинимальнойЗП() Экспорт
	
	СтрокаЗаказов = Заказы[0];
	Водитель = СтрокаЗаказов.Водитель.ФизЛицо;
	Экспедитор = СтрокаЗаказов.Экспедитор.ФизЛицо;
	
	ТаблицаДанных = РегистрыСведений.зпИсходныеДанныеРасчетаМинимальнойЗП.ПолучитьТаблицуДанных(Дата, ТерминалДоставки, СхемаРасчетаЗП, ТарифРасчетаЗП, ДатаЗакрытия, Рейс, Водитель, Экспедитор);
	
	Движения.зпИсходныеДанныеРасчетаМинимальнойЗП.Загрузить(ТаблицаДанных);
	
КонецПроцедуры
//Асеев 16.05.2023 (Задача № 5041)<<<

//Асеев 03.11.2023 (Задача № 5161)>>>
Процедура ВыполнитьДвиженияПоРСэкУчетПроизводственныхОпераций()
	
	Движения.экУчетПроизводственныхОпераций.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("ПериодДвижений", ДатаЗакрытия);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ТерминалДоставки", ТерминалДоставки);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗакрытиеЗаказовЗаказы.Реализация КАК Заказ,
	|	ЗакрытиеЗаказовЗаказы.ТерминалПриема КАК ТерминалПриема
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	|ГДЕ
	|	ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
	|	И (ЗакрытиеЗаказовЗаказы.Отклонить
	|			ИЛИ ЗакрытиеЗаказовЗаказы.Закрыть
	|				И ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично))
	|	И ЗакрытиеЗаказовЗаказы.Реализация ССЫЛКА Документ.РеализацияТоваровУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	МАКСИМУМ(экУчетПроизводственныхОпераций.ВидОперации = ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПередачаЗаказовНаМагистраль)) КАК ОбратныйПотокНаМагистраль,
	|	МАКСИМУМ(экУчетПроизводственныхОпераций.ВидОперации = ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПриходЗаказовСМагистрали)) КАК ОбратныйПотокСМагистрали
	|ПОМЕСТИТЬ ВТ_РанниеОперации
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.экУчетПроизводственныхОпераций КАК экУчетПроизводственныхОпераций
	|		ПО (экУчетПроизводственныхОпераций.Период < &Период)
	|			И ВТ_Заказы.Заказ = экУчетПроизводственныхОпераций.Заказ
	|			И (экУчетПроизводственныхОпераций.ВидОперации В (ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПередачаЗаказовНаМагистраль), ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПриходЗаказовСМагистрали)))
	|			И (экУчетПроизводственныхОпераций.ОбратныйПоток)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Заказы.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ПериодДвижений КАК Период,
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	ВТ_Заказы.ТерминалПриема КАК Регион,
	|	ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ВозвратЗаказовПоставщику) КАК ВидОперации,
	|	ЛОЖЬ КАК ОбратныйПоток
	|ПОМЕСТИТЬ ВТ_ИсходныеДанные
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ПериодДвижений,
	|	ВТ_Заказы.Заказ,
	|	&ТерминалДоставки,
	|	ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПередачаЗаказовНаМагистраль),
	|	ИСТИНА
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РанниеОперации КАК ВТ_РанниеОперации
	|		ПО ВТ_Заказы.Заказ = ВТ_РанниеОперации.Заказ
	|ГДЕ
	|	ВТ_Заказы.ТерминалПриема <> &ТерминалДоставки
	|	И НЕ ЕСТЬNULL(ВТ_РанниеОперации.ОбратныйПотокНаМагистраль, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ПериодДвижений,
	|	ВТ_Заказы.Заказ,
	|	ВТ_Заказы.ТерминалПриема,
	|	ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПриходЗаказовСМагистрали),
	|	ИСТИНА
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РанниеОперации КАК ВТ_РанниеОперации
	|		ПО ВТ_Заказы.Заказ = ВТ_РанниеОперации.Заказ
	|ГДЕ
	|	ВТ_Заказы.ТерминалПриема = &ТерминалДоставки
	|	И ЕСТЬNULL(ВТ_РанниеОперации.ОбратныйПотокНаМагистраль, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(ВТ_РанниеОперации.ОбратныйПотокСМагистрали, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ПериодДвижений,
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.ТерминалДоставки,
	|	ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.МагистральноеПеремещение),
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка)
	|			И ЗакрытиеЗаказовЗаказы.Реализация = РеализацияТоваровУслуг.Ссылка
	|			И (РеализацияТоваровУслуг.ТерминалПриема <> РеализацияТоваровУслуг.ТерминалДоставки)
	|			И (ЗакрытиеЗаказовЗаказы.Закрыть
	|				ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить)";
	
	ТаблицаДвижений = РегистрыСведений.экУчетПроизводственныхОпераций.ПолучитьТаблицуДвижений(Запрос);
	
	Движения.экУчетПроизводственныхОпераций.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры
//Асеев 03.11.2023 (Задача № 5161)<<<


Процедура ДвиженияВзаиморасчетыСКомитентами()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗакрытиеЗаказовЗаказы.ЮрЛицо КАК Организация,
		|	ЗакрытиеЗаказовЗаказы.ВладелецТовара КАК ВладелецТовара,
		|	&ДатаЗакрытия КАК ДатаВозникновенияЗадолженности,
		|	ЗакрытиеЗаказовЗаказы.ТипЗаказа КАК ТипЗаказа,
		|	ЗакрытиеЗаказовЗаказы.Реализация КАК Заказ,
		|	ЗакрытиеЗаказовЗаказы.ПринятаяСумма КАК Сумма
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	&ДокТЧ КАК ЗакрытиеЗаказовЗаказы
		|ГДЕ
		|	ЗакрытиеЗаказовЗаказы.Закрыть
		|	И ЗакрытиеЗаказовЗаказы.ТипОплаты В(&ТипОплаты)
		|	И ЗакрытиеЗаказовЗаказы.ТипЗаказа В(&ТипЗаказа)
		|	И ЗакрытиеЗаказовЗаказы.ПринятаяСумма <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокТЧ.Организация КАК Организация,
		|	ДокТЧ.ВладелецТовара КАК ВладелецТовара,
		|	ДокТЧ.ДатаВозникновенияЗадолженности КАК ДатаВозникновенияЗадолженности,
		|	ДокТЧ.ТипЗаказа КАК ТипЗаказа,
		|	ДокТЧ.Заказ КАК Заказ,
		|	ДокТЧ.Сумма КАК Сумма
		|ИЗ
		|	ДокТЧ КАК ДокТЧ";
		
	ТипыЗаказов = Новый Массив();
	ТипыЗаказов.Добавить(Перечисления.ТипыЗаказов.Доставка);
	ТипыЗаказов.Добавить(Перечисления.ТипыЗаказов.Самовывоз);
	
	ТипыОплаты = Новый Массив();
	ТипыОплаты.Добавить(Справочники.ТипыОплат.Наличные);
	ТипыОплаты.Добавить(Справочники.ТипыОплат.ВКредит);
	ТипыОплаты.Добавить(Справочники.ТипыОплат.Терминал);
	
	Запрос.УстановитьПараметр("ТипЗаказа", ТипыЗаказов);
	Запрос.УстановитьПараметр("ТипОплаты", ТипыОплаты);
	Запрос.УстановитьПараметр("ДокТЧ", Заказы.Выгрузить());
	Запрос.УстановитьПараметр("ДатаЗакрытия", ДатаЗакрытия);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Запись = Движения.ВзаиморасчетыСКомитентамиПоЗаказам.ДобавитьПриход();
		Запись.Период = Дата;
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаДетальныеЗаписи);
		
		Если Запись.Организация.Пустая() Тогда
			Запись.Организация = Справочники.Организации.НайтиПоКоду("00-000001");
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ВладелецТовара) Тогда // Михушкин 24.05.2016
			Если Не ВыборкаДетальныеЗаписи.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
				Запись.Комитент = ВыборкаДетальныеЗаписи.ВладелецТовара.Родитель.ОсновнойМагазин;
			Иначе
				Запись.Комитент = ВыборкаДетальныеЗаписи.ВладелецТовара;
			КонецеСли;
		КонецЕсли;
		
	КонецЦикла;	

КонецПроцедуры
 
Процедура ЗафиксироватьМестоположениеЗаказа()
	Зап = Новый Запрос;
	
	Зап.Текст = "ВЫБРАТЬ
	            |	ЗакрытиеЗаказовЗаказы.Реализация.Ссылка КАК Заказ,
	            |	ВЫБОР
	            |		КОГДА ЗакрытиеЗаказовЗаказы.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
	            |				ИЛИ ЗакрытиеЗаказовЗаказы.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
	            |				ИЛИ ЗакрытиеЗаказовЗаказы.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
	            |			ТОГДА ИСТИНА
	            |		ИНАЧЕ ЛОЖЬ
	            |	КОНЕЦ КАК УКлиента,
	            |	ЗакрытиеЗаказовЗаказы.ТерминалДоставки КАК Терминал
	            |ИЗ
	            |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	            |ГДЕ
	            |	ЗакрытиеЗаказовЗаказы.Ссылка.Ссылка = &Док
	            |	И (ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена)
	            |			ИЛИ ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично))
	            |	И ЗакрытиеЗаказовЗаказы.Закрыть = ИСТИНА
	            |	И (ЗакрытиеЗаказовЗаказы.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
	            |			ИЛИ ЗакрытиеЗаказовЗаказы.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
	            |			ИЛИ ЗакрытиеЗаказовЗаказы.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен))";
	Зап.УстановитьПараметр("Док", Ссылка);			
	
	
	Рез = Зап.Выполнить().Выгрузить();
	
//+++ БАО 02.08.2017 №1550	

	//Список = Новый СписокЗначений;
	//Массив = Рез.ВыгрузитьКолонку("Заказ");
	//Список.ЗагрузитьЗначения(Массив);
	Список = Рез.Скопировать(, "Заказ, Терминал");
	
//--- БАО 02.08.2017 №1550	
	
	lem.ЗафиксироватьМестонахождениеЗаказа(Список, Справочники.ВидыМестонахожденияЗаказа.УКлиента, Ссылка);
КонецПроцедуры	

Процедура ВводОстатковПоЗаказам()

    #Область Устарело
    ////+++++Серегин М.В. 03.02.2016 16:35:41 старый код
    //УчитыватьОстатки = Ложь;
    //Запрос = Новый Запрос(
    //"ВЫБРАТЬ
    //|	УчетОстатковПоКонтрагентам.УчитыватьОстатки
    //|ИЗ
    //|	РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
    //|ГДЕ
    //|	УчетОстатковПоКонтрагентам.Контрагент = &Контрагент
    //|	И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков");
    //Запрос.УстановитьПараметр("Контрагент", Контрагент);	
    //Запрос.УстановитьПараметр("ДатаНачалаУчетаОстатков", Дата);
    //Результат = Запрос.Выполнить().Выбрать();
    //Если Результат.Следующий() Тогда
    //	УчитыватьОстатки = Результат.УчитыватьОстатки;	
    //КонецЕсли;
    //
    //Если УчитыватьОстатки Тогда
    //	Запрос = Новый Запрос(
    //	//"ВЫБРАТЬ
    //	//|	ЗакрытиеЗаказовТовары.Номенклатура,
    //	//|	ВЫРАЗИТЬ(ЗакрытиеЗаказовЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка КАК Заказ,
    //	//|	ВЫРАЗИТЬ(ЗакрытиеЗаказовЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Склад КАК Склад,
    //	//|	ВЫРАЗИТЬ(ЗакрытиеЗаказовЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Организация КАК Организация,
    //	//|	ЗакрытиеЗаказовТовары.СуммаНовая,
    //	//|	ЗакрытиеЗаказовТовары.Количество,
    //	//|	ЗакрытиеЗаказовТовары.КоличествоВозвращено,
    //	//|	ЗакрытиеЗаказовТовары.Недовложение,
    //	//|	ЗакрытиеЗаказовТовары.Сумма
    //	//|ИЗ
    //	//|	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
    //	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
    //	//|		ПО ЗакрытиеЗаказовЗаказы.Ссылка = ЗакрытиеЗаказовТовары.Ссылка
    //	//|ГДЕ
    //	//|	ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
    //	//|	И ЗакрытиеЗаказовЗаказы.Закрыть");
    //	"ВЫБРАТЬ
    //    |   ЗакрытиеЗаказовТовары.Номенклатура,
    //    |   ЗакрытиеЗаказовТовары.СуммаНовая,
    //    |   ЗакрытиеЗаказовТовары.Количество,
    //    |   ЗакрытиеЗаказовТовары.КоличествоВозвращено,
    //    |   ЗакрытиеЗаказовТовары.Недовложение,
    //    |   ЗакрытиеЗаказовТовары.Сумма,
    //    |   ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка КАК Заказ,
    //    |   ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Склад КАК Склад,
    //    |   ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Организация КАК Организация
    //    |ИЗ
    //    |   Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
    //    |       ПОЛНОЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
    //    |       ПО ЗакрытиеЗаказовТовары.Ссылка = ЗакрытиеЗаказовЗаказы.Ссылка
    //    |           И (ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка = ВЫРАЗИТЬ(ЗакрытиеЗаказовЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка)
    //    |ГДЕ
    //    |   ЗакрытиеЗаказовТовары.Ссылка = &Ссылка
    //    |   И ЗакрытиеЗаказовЗаказы.Закрыть");
    //	
    //	Запрос.УстановитьПараметр("Ссылка",Ссылка);
    //	ОстаткиТоваров = Запрос.Выполнить().Выгрузить();
    //	
    //	Если ОстаткиТоваров.Количество() > 0 Тогда
    //		//+++++Серегин М.В. 06.11.2015 10:52:56 к оптимизации
    //		Движения.ОстаткиЗаказов.Записывать = Истина;
    //		Движения.ОстаткиЗаказов.Очистить();
    //		Для Каждого Товар Из ОстаткиТоваров Цикл
    //			ТипДоставкиЗаказа = smv.ПолучитьТипЗаказаNew(Товар.Заказ.Ссылка);
    //			Если ТипДоставкиЗаказа = Неопределено Тогда 
    //				Продолжить;
    //				//ИначеЕсли ТипДоставкиЗаказа = Перечисления.ТипыЗаказов.Обмен Тогда
    //				//	Движение = Движения.ОстаткиЗаказов.ДобавитьПриход();
    //				//	Движение.Период       = Дата;
    //				//	Движение.Заказ        = Товар.Заказ;
    //				//	Движение.Номенклатура = Товар.Номенклатура;
    //				//	Движение.Склад        = Товар.Склад;
    //				//	Движение.Организация  = Товар.Организация;
    //				//	Движение.Количество   = Товар.Количество;// - Товар.КоличествоВозвращено - Товар.Недовложение;
    //				//	Движение.СуммаПрод    = Товар.Сумма;
    //				//	//Движение.СуммаЗакуп = ?
    //				
    //			ИначеЕсли ТипДоставкиЗаказа = Перечисления.ТипыЗаказов.Возврат Тогда
    //				Движение = Движения.ОстаткиЗаказов.ДобавитьПриход();
    //				Движение.Период       = ДатаЗакрытия; //+++++Серегин М.В. 03.02.2016 16:32:26 было Дата;
    //				Движение.Заказ        = Товар.Заказ;
    //				Движение.Номенклатура = Товар.Номенклатура;
    //				Движение.Склад        = Товар.Склад;
    //				Движение.Организация  = Товар.Организация;
    //				Движение.Количество   = Товар.Количество - Товар.КоличествоВозвращено - Товар.Недовложение;
    //				Движение.СуммаПрод    = Товар.СуммаНовая;
    //				Движение.ТипЗаказа    = ТипДоставкиЗаказа;
    //				//Движение.СуммаЗакуп = ?					
    //			ИначеЕсли ТипДоставкиЗаказа = Перечисления.ТипыЗаказов.Доставка ИЛИ  ТипДоставкиЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
    //				Движение = Движения.ОстаткиЗаказов.ДобавитьРасход();
    //				Движение.Период       = ДатаЗакрытия; //+++++Серегин М.В. 03.02.2016 16:32:36 было Дата;
    //				Движение.Заказ        = Товар.Заказ;
    //				Движение.Номенклатура = Товар.Номенклатура;
    //				Движение.Склад        = Товар.Склад;
    //				Движение.Организация  = Товар.Организация;
    //				Движение.Количество   = Товар.Количество - Товар.КоличествоВозвращено - Товар.Недовложение;
    //				Движение.СуммаПрод    = Товар.СуммаНовая;
    //				Движение.ТипЗаказа    = ТипДоставкиЗаказа;
    //				//Движение.СуммаЗакуп = ?					
    //			КонецЕсли;
    //		КонецЦикла;
    //		//-----Серегин М.В. 06.11.2015 10:53:03 
    //    КонецЕсли;
    //	
    //КонецЕсли;
    ////-----Серегин М.В. 03.02.2016 16:35:53 
    #КонецОбласти 
    
    //+++++Серегин М.В. 03.02.2016 16:35:56 новый код проверил
    Движения.ОстаткиЗаказов.Записывать = Истина;
    Движения.ОстаткиЗаказов.Очистить();
    УчитыватьОстатки = Ложь;
    Запрос = Новый Запрос(
    "ВЫБРАТЬ
    |	УчетОстатковПоКонтрагентам.УчитыватьОстатки
    |ИЗ
    |	РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
    |ГДЕ
    |	УчетОстатковПоКонтрагентам.Контрагент = &Контрагент
    |	И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков");
    Запрос.УстановитьПараметр("Контрагент", Контрагент);	
    Запрос.УстановитьПараметр("ДатаНачалаУчетаОстатков", Дата);
    Результат = Запрос.Выполнить().Выбрать();
    Если Результат.Следующий() Тогда
    	УчитыватьОстатки = Результат.УчитыватьОстатки;	
    КонецЕсли;
    
	//Если УчитыватьОстатки Тогда
	//	Запрос = Новый Запрос(
	//	"ВЫБРАТЬ
	//	|	ЗакрытиеЗаказовТовары.Номенклатура,
	//	|	ЗакрытиеЗаказовТовары.СуммаНовая,
	//	|	ЗакрытиеЗаказовТовары.Количество,
	//	|	ЗакрытиеЗаказовТовары.КоличествоВозвращено,
	//	|	ЗакрытиеЗаказовТовары.Недовложение,
	//	|	ЗакрытиеЗаказовТовары.Сумма,
	//	|	ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка КАК Заказ,
	//	|	ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Склад КАК Склад,
	//	|	ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Организация КАК Организация,
	//	|	ЗакрытиеЗаказовЗаказы.ТерминалПриема,
	//	|	ЗакрытиеЗаказовЗаказы.ТерминалДоставки
	//	|ПОМЕСТИТЬ ВТ_Товары
	//	|ИЗ
	//	|	Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
	//	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	//	|		ПО ЗакрытиеЗаказовТовары.Ссылка = ЗакрытиеЗаказовЗаказы.Ссылка
	//	|			И (ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка = ВЫРАЗИТЬ(ЗакрытиеЗаказовЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка)
	//	|ГДЕ
	//	|	ЗакрытиеЗаказовТовары.Ссылка = &Ссылка
	//	|	И ЗакрытиеЗаказовЗаказы.Закрыть
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_Товары.Заказ
	//	|ПОМЕСТИТЬ ВТ_Заказы
	//	|ИЗ
	//	|	ВТ_Товары КАК ВТ_Товары
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВТ_Товары.Заказ
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	//	|	ВложенныйЗапрос.Номер
	//	|ПОМЕСТИТЬ ВТ_РеализацияКоличество
	//	|ИЗ
	//	|	(ВЫБРАТЬ
	//	|		РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
	//	|		РеализацияТоваровУслугТовары.Количество КАК Количество
	//	|	ИЗ
	//	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	//	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	//	|			ПО РеализацияТоваровУслугТовары.Ссылка = ВТ_Заказы.Заказ
	//	|	ГДЕ
	//	|		НЕ РеализацияТоваровУслугТовары.Номенклатура.Артикул В
	//	|					(ВЫБРАТЬ
	//	|						УслугиПоЗаказам.Артикул
	//	|					ИЗ
	//	|						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
	//	|	
	//	|	ОБЪЕДИНИТЬ ВСЕ
	//	|	
	//	|	ВЫБРАТЬ
	//	|		РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
	//	|		РеализацияТоваровУслугПодарочныеПозиции.Количество
	//	|	ИЗ
	//	|		Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
	//	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	//	|			ПО РеализацияТоваровУслугПодарочныеПозиции.Ссылка = ВТ_Заказы.Заказ
	//	|	ГДЕ
	//	|		НЕ РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
	//	|					(ВЫБРАТЬ
	//	|						УслугиПоЗаказам.Артикул
	//	|					ИЗ
	//	|						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)) КАК ВложенныйЗапрос
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВложенныйЗапрос.Номер
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
	//	|	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество
	//	|ПОМЕСТИТЬ ВТ_ВозвратПокупателяюКоличество
	//	|ИЗ
	//	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	//	|		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = ВТ_Заказы.Заказ.Номер
	//	|ГДЕ
	//	|	НЕ ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул В
	//	|				(ВЫБРАТЬ
	//	|					УслугиПоЗаказам.Артикул
	//	|				ИЗ
	//	|					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	новаМестнаяДоставка.Номер
	//	|ПОМЕСТИТЬ новаМестнаяДоставка
	//	|ИЗ
	//	|	БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	//	|		ПО новаМестнаяДоставка.Номер = ВТ_Заказы.Заказ.Номер
	//	|ГДЕ
	//	|	НЕ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	РеализацияТоваровУслуг.Ссылка.Номер КАК РеализацияНомер,
	//	|	ВТ_ВозвратПокупателяюКоличество.Номер КАК ВозвратНомер,
	//	|	ЕСТЬNULL(ВТ_ВозвратПокупателяюКоличество.Количество, 0) КАК ВозвратКоличество,
	//	|	ЕСТЬNULL(ВТ_РеализацияКоличество.Количество, 0) КАК РеализацияКоличество,
	//	|	новаМестнаяДоставка.Номер КАК МестнаяДоставкаНомер
	//	|ПОМЕСТИТЬ ВТ_Итог
	//	|ИЗ
	//	|	ВТ_Заказы КАК ВТ_Заказы
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеализацияКоличество КАК ВТ_РеализацияКоличество
	//	|			ПО РеализацияТоваровУслуг.Номер = ВТ_РеализацияКоличество.Номер
	//	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВозвратПокупателяюКоличество КАК ВТ_ВозвратПокупателяюКоличество
	//	|			ПО РеализацияТоваровУслуг.Номер = ВТ_ВозвратПокупателяюКоличество.Номер
	//	|			ЛЕВОЕ СОЕДИНЕНИЕ новаМестнаяДоставка КАК новаМестнаяДоставка
	//	|			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	//	|		ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВЫБОР
	//	|		КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
	//	|			ТОГДА ВЫБОР
	//	|					КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
	//	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
	//	|					ИНАЧЕ ВЫБОР
	//	|							КОГДА ВТ_Итог.РеализацияКоличество = 0
	//	|									И ВТ_Итог.ВозвратКоличество > 0
	//	|								ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
	//	|							ИНАЧЕ ВЫБОР
	//	|									КОГДА ВТ_Итог.РеализацияКоличество > 0
	//	|											И ВТ_Итог.ВозвратКоличество > 0
	//	|										ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
	//	|									ИНАЧЕ НЕОПРЕДЕЛЕНО
	//	|								КОНЕЦ
	//	|						КОНЕЦ
	//	|				КОНЕЦ
	//	|		ИНАЧЕ ВЫБОР
	//	|				КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
	//	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
	//	|				ИНАЧЕ ВЫБОР
	//	|						КОГДА ВТ_Итог.РеализацияКоличество = 0
	//	|								И ВТ_Итог.ВозвратКоличество > 0
	//	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
	//	|						ИНАЧЕ ВЫБОР
	//	|								КОГДА ВТ_Итог.РеализацияКоличество > 0
	//	|										И ВТ_Итог.ВозвратКоличество > 0
	//	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
	//	|								ИНАЧЕ НЕОПРЕДЕЛЕНО
	//	|							КОНЕЦ
	//	|					КОНЕЦ
	//	|			КОНЕЦ
	//	|	КОНЕЦ КАК ТипЗаказа,
	//	|	ВТ_Итог.РеализацияНомер КАК НомерЗаказа
	//	|ПОМЕСТИТЬ ВТ_ТипыЗаказов
	//	|ИЗ
	//	|	ВТ_Итог КАК ВТ_Итог
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВЫБОР
	//	|		КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
	//	|			ТОГДА ВЫБОР
	//	|					КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
	//	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
	//	|					ИНАЧЕ ВЫБОР
	//	|							КОГДА ВТ_Итог.РеализацияКоличество = 0
	//	|									И ВТ_Итог.ВозвратКоличество > 0
	//	|								ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
	//	|							ИНАЧЕ ВЫБОР
	//	|									КОГДА ВТ_Итог.РеализацияКоличество > 0
	//	|											И ВТ_Итог.ВозвратКоличество > 0
	//	|										ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
	//	|									ИНАЧЕ НЕОПРЕДЕЛЕНО
	//	|								КОНЕЦ
	//	|						КОНЕЦ
	//	|				КОНЕЦ
	//	|		ИНАЧЕ ВЫБОР
	//	|				КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
	//	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
	//	|				ИНАЧЕ ВЫБОР
	//	|						КОГДА ВТ_Итог.РеализацияКоличество = 0
	//	|								И ВТ_Итог.ВозвратКоличество > 0
	//	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
	//	|						ИНАЧЕ ВЫБОР
	//	|								КОГДА ВТ_Итог.РеализацияКоличество > 0
	//	|										И ВТ_Итог.ВозвратКоличество > 0
	//	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
	//	|								ИНАЧЕ НЕОПРЕДЕЛЕНО
	//	|							КОНЕЦ
	//	|					КОНЕЦ
	//	|			КОНЕЦ
	//	|	КОНЕЦ,
	//	|	ВТ_Итог.РеализацияНомер
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_Товары.Номенклатура,
	//	|	ВТ_Товары.СуммаНовая,
	//	|	ВТ_Товары.Количество,
	//	|	ВТ_Товары.КоличествоВозвращено,
	//	|	ВТ_Товары.Недовложение,
	//	|	ВТ_Товары.Сумма,
	//	|	ВТ_Товары.Заказ,
	//	|	ВТ_Товары.Склад,
	//	|	ВТ_Товары.Организация,
	//	|	ВТ_ТипыЗаказов.ТипЗаказа,
	//	|	ВТ_Товары.ТерминалПриема,
	//	|	ВТ_Товары.ТерминалДоставки
	//	|ИЗ
	//	|	ВТ_Товары КАК ВТ_Товары
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТипыЗаказов КАК ВТ_ТипыЗаказов
	//	|		ПО ВТ_Товары.Заказ.Номер = ВТ_ТипыЗаказов.НомерЗаказа");
	
	
	
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗакрытиеЗаказовТовары.Номенклатура,
	                      |	ЗакрытиеЗаказовТовары.СуммаНовая,
	                      |	ЗакрытиеЗаказовТовары.Количество,
	                      |	ЗакрытиеЗаказовТовары.КоличествоВозвращено,
	                      |	ЗакрытиеЗаказовТовары.Недовложение,
	                      |	ЗакрытиеЗаказовТовары.Сумма,
	                      |	ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка КАК Заказ,
	                      |	ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Склад КАК Склад,
	                      |	ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Организация КАК Организация,
	                      |	ЗакрытиеЗаказовЗаказы.ТерминалПриема,
	                      |	ЗакрытиеЗаказовЗаказы.ТерминалДоставки
	                      |ПОМЕСТИТЬ ВТ_Товары
	                      |ИЗ
	                      |	Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
	                      |		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	                      |		ПО ЗакрытиеЗаказовТовары.Ссылка = ЗакрытиеЗаказовЗаказы.Ссылка
	                      |			И (ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка = ВЫРАЗИТЬ(ЗакрытиеЗаказовЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка)
	                      |ГДЕ
	                      |	ЗакрытиеЗаказовТовары.Ссылка = &Ссылка
	                      |	И ЗакрытиеЗаказовЗаказы.Закрыть
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_Товары.Заказ
	                      |ПОМЕСТИТЬ ВТ_Заказы
	                      |ИЗ
	                      |	ВТ_Товары КАК ВТ_Товары
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_Товары.Заказ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	                      |	ВложенныйЗапрос.Номер
	                      |ПОМЕСТИТЬ ВТ_РеализацияКоличество
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
	                      |		РеализацияТоваровУслугТовары.Количество КАК Количество
	                      |	ИЗ
	                      |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	                      |			ПО РеализацияТоваровУслугТовары.Ссылка = ВТ_Заказы.Заказ
	                      |	ГДЕ
	                      |		НЕ РеализацияТоваровУслугТовары.Номенклатура.Артикул В
	                      |					(ВЫБРАТЬ
	                      |						УслугиПоЗаказам.Артикул
	                      |					ИЗ
	                      |						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
	                      |	
	                      |	ОБЪЕДИНИТЬ ВСЕ
	                      |	
	                      |	ВЫБРАТЬ
	                      |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
	                      |		РеализацияТоваровУслугПодарочныеПозиции.Количество
	                      |	ИЗ
	                      |		Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	                      |			ПО РеализацияТоваровУслугПодарочныеПозиции.Ссылка = ВТ_Заказы.Заказ
	                      |	ГДЕ
	                      |		НЕ РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
	                      |					(ВЫБРАТЬ
	                      |						УслугиПоЗаказам.Артикул
	                      |					ИЗ
	                      |						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)) КАК ВложенныйЗапрос
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВложенныйЗапрос.Номер
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
	                      |	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество
	                      |ПОМЕСТИТЬ ВТ_ВозвратПокупателяюКоличество
	                      |ИЗ
	                      |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	                      |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = ВТ_Заказы.Заказ.Номер
	                      |ГДЕ
	                      |	НЕ ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул В
	                      |				(ВЫБРАТЬ
	                      |					УслугиПоЗаказам.Артикул
	                      |				ИЗ
	                      |					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	новаМестнаяДоставка.Номер
	                      |ПОМЕСТИТЬ новаМестнаяДоставка
	                      |ИЗ
	                      |	БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	                      |		ПО новаМестнаяДоставка.Номер = ВТ_Заказы.Заказ.Номер
	                      |ГДЕ
	                      |	НЕ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	РеализацияТоваровУслуг.Ссылка.Номер КАК РеализацияНомер,
	                      |	ВТ_ВозвратПокупателяюКоличество.Номер КАК ВозвратНомер,
	                      |	ЕСТЬNULL(ВТ_ВозвратПокупателяюКоличество.Количество, 0) КАК ВозвратКоличество,
	                      |	ЕСТЬNULL(ВТ_РеализацияКоличество.Количество, 0) КАК РеализацияКоличество,
	                      |	новаМестнаяДоставка.Номер КАК МестнаяДоставкаНомер
	                      |ПОМЕСТИТЬ ВТ_Итог
	                      |ИЗ
	                      |	ВТ_Заказы КАК ВТ_Заказы
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеализацияКоличество КАК ВТ_РеализацияКоличество
	                      |			ПО РеализацияТоваровУслуг.Номер = ВТ_РеализацияКоличество.Номер
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВозвратПокупателяюКоличество КАК ВТ_ВозвратПокупателяюКоличество
	                      |			ПО РеализацияТоваровУслуг.Номер = ВТ_ВозвратПокупателяюКоличество.Номер
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ новаМестнаяДоставка КАК новаМестнаяДоставка
	                      |			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	                      |		ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВЫБОР
	                      |		КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
	                      |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
	                      |					ИНАЧЕ ВЫБОР
	                      |							КОГДА ВТ_Итог.РеализацияКоличество = 0
	                      |									И ВТ_Итог.ВозвратКоличество > 0
	                      |								ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
	                      |							ИНАЧЕ ВЫБОР
	                      |									КОГДА ВТ_Итог.РеализацияКоличество > 0
	                      |											И ВТ_Итог.ВозвратКоличество > 0
	                      |										ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
	                      |									ИНАЧЕ НЕОПРЕДЕЛЕНО
	                      |								КОНЕЦ
	                      |						КОНЕЦ
	                      |				КОНЕЦ
	                      |		ИНАЧЕ ВЫБОР
	                      |				КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
	                      |					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
	                      |				ИНАЧЕ ВЫБОР
	                      |						КОГДА ВТ_Итог.РеализацияКоличество = 0
	                      |								И ВТ_Итог.ВозвратКоличество > 0
	                      |							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
	                      |						ИНАЧЕ ВЫБОР
	                      |								КОГДА ВТ_Итог.РеализацияКоличество > 0
	                      |										И ВТ_Итог.ВозвратКоличество > 0
	                      |									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
	                      |								ИНАЧЕ НЕОПРЕДЕЛЕНО
	                      |							КОНЕЦ
	                      |					КОНЕЦ
	                      |			КОНЕЦ
	                      |	КОНЕЦ КАК ТипЗаказа,
	                      |	ВТ_Итог.РеализацияНомер КАК НомерЗаказа
	                      |ПОМЕСТИТЬ ВТ_ТипыЗаказов
	                      |ИЗ
	                      |	ВТ_Итог КАК ВТ_Итог
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВЫБОР
	                      |		КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
	                      |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
	                      |					ИНАЧЕ ВЫБОР
	                      |							КОГДА ВТ_Итог.РеализацияКоличество = 0
	                      |									И ВТ_Итог.ВозвратКоличество > 0
	                      |								ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
	                      |							ИНАЧЕ ВЫБОР
	                      |									КОГДА ВТ_Итог.РеализацияКоличество > 0
	                      |											И ВТ_Итог.ВозвратКоличество > 0
	                      |										ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
	                      |									ИНАЧЕ НЕОПРЕДЕЛЕНО
	                      |								КОНЕЦ
	                      |						КОНЕЦ
	                      |				КОНЕЦ
	                      |		ИНАЧЕ ВЫБОР
	                      |				КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
	                      |					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
	                      |				ИНАЧЕ ВЫБОР
	                      |						КОГДА ВТ_Итог.РеализацияКоличество = 0
	                      |								И ВТ_Итог.ВозвратКоличество > 0
	                      |							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
	                      |						ИНАЧЕ ВЫБОР
	                      |								КОГДА ВТ_Итог.РеализацияКоличество > 0
	                      |										И ВТ_Итог.ВозвратКоличество > 0
	                      |									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
	                      |								ИНАЧЕ НЕОПРЕДЕЛЕНО
	                      |							КОНЕЦ
	                      |					КОНЕЦ
	                      |			КОНЕЦ
	                      |	КОНЕЦ,
	                      |	ВТ_Итог.РеализацияНомер
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_Товары.Номенклатура,
	                      |	ВТ_Товары.СуммаНовая,
	                      |	ВТ_Товары.Количество,
	                      |	ВТ_Товары.КоличествоВозвращено,
	                      |	ВТ_Товары.Недовложение,
	                      |	ВТ_Товары.Сумма,
	                      |	ВТ_Товары.Заказ,
	                      |	ВТ_Товары.Склад,
	                      |	ВТ_Товары.Организация,
	                      |	ВТ_ТипыЗаказов.ТипЗаказа,
	                      |	ВТ_Товары.ТерминалПриема,
	                      |	ВТ_Товары.ТерминалДоставки,
	                      |	ЕСТЬNULL(УчетОстатковПоКонтрагентам.УчитыватьОстатки, ЛОЖЬ) КАК УчитыватьОстатки
	                      |ИЗ
	                      |	ВТ_Товары КАК ВТ_Товары
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТипыЗаказов КАК ВТ_ТипыЗаказов
	                      |		ПО ВТ_Товары.Заказ.Номер = ВТ_ТипыЗаказов.НомерЗаказа
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
	                      |		ПО ВТ_Товары.Заказ.ВладелецТовара = УчетОстатковПоКонтрагентам.Контрагент");
    	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	ОстаткиТоваров = Запрос.Выполнить().Выгрузить();
	
	Если ОстаткиТоваров.Количество() > 0 Тогда
		Для Каждого Товар Из ОстаткиТоваров Цикл
			
			Если Товар.УчитыватьОстатки Тогда
						
				Если Товар.ТипЗаказа = Перечисления.ТипыЗаказов.Возврат Тогда
					Движение = Движения.ОстаткиЗаказов.ДобавитьПриход();
					Движение.Период       = ДатаЗакрытия; 
					Движение.Заказ        = Товар.Заказ;
					Движение.Номенклатура = Товар.Номенклатура;
					Движение.Склад        = Товар.Склад;
					Движение.Организация  = Товар.Организация;
					Движение.Количество   = Товар.Количество - Товар.КоличествоВозвращено - Товар.Недовложение;
					Движение.СуммаПрод    = Товар.СуммаНовая;
					Движение.ТипЗаказа    = Товар.ТипЗаказа;
					Движение.ТерминалПриема   = Товар.ТерминалПриема;
					Движение.ТерминалДоставки = Товар.ТерминалДоставки;
				ИначеЕсли Товар.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка ИЛИ  Товар.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
					Движение = Движения.ОстаткиЗаказов.ДобавитьРасход();
					Движение.Период       = ДатаЗакрытия; 
					Движение.Заказ        = Товар.Заказ;
					Движение.Номенклатура = Товар.Номенклатура;
					Движение.Склад        = Товар.Склад;
					Движение.Организация  = Товар.Организация;
					Движение.Количество   = Товар.Количество - Товар.КоличествоВозвращено - Товар.Недовложение;
					Движение.СуммаПрод    = Товар.СуммаНовая;
					Движение.ТипЗаказа    = Товар.ТипЗаказа;
					Движение.ТерминалПриема   = Товар.ТерминалПриема;
					Движение.ТерминалДоставки = Товар.ТерминалДоставки;
				КонецЕсли;
			
			КонецЕсли;
		
		КонецЦикла;
    КонецЕсли;
    	
	
КонецПроцедуры

Функция ОбновитьЗаказыВАдминке(Реж)
	Попытка
		ПодключениеКМагазину = Евген.СоздатьПодключениеКИнтернетМагазину(); 
	Исключение
		НормальныйХодВыполнения = Ложь;
		Возврат Ложь;
	КонецПопытки;
	Есть = Ложь;
	
	//#Если Клиент Тогда
	//	//ФормаИндикатора = ПолучитьОбщуюФорму("новаФормаИндикатора", , "ПрогрессФормированияРейсов");
	//	ФормаИндикатора.Заголовок = "Обновление данных в админке";
	//	ФормаИндикатора.МинимальноеЗначение = 0;
	//	ФормаИндикатора.МаксимальноеЗначение = Товары.Количество();
	//	ФормаИндикатора.КартинкаЗаголовка = БиблиотекаКартинок.новаАвтоматическоеПланирование;
	//	//ФормаИндикатора.ПодключитьОбработчикОжидания("АвтоЗакрытие", 1);
	//	//ФормаИндикатора.Открыть();
	//#КонецЕсли
	//#Если Клиент Тогда
	//
	//ФормаИндикацииХодаЗагрузки.НаименованиеОбработкиДанных = "Закрытие заказов";
	////ФормаИндикацииХодаЗагрузки.Открыть();
	//
	//ФормаИндикацииХодаЗагрузки.КомментарийОбработкиДанных = "Обновление заказов в админке";
	//
	//ФормаИндикацииХодаЗагрузки.МаксимальноеЗначение = Товары.Количество();
	//ФормаИндикацииХодаЗагрузки.Значение = 0;
	//#КонецЕсли
	
	СчТ = 0;
	Если Реж = "Проведение" Тогда
		//НачатьТранзакцию();
		Коммент = Символы.ПС;
		Для Каждого Тек Из Товары Цикл
			СчТ = СчТ + 1;
			ВАдминкуНеЛезть = Ложь;
			
			Най = Заказы.Найти(Тек.Доставка);
			
			Если Не ЗначениеЗаполнено(Тек.Доставка) Тогда
				Най = Заказы.Найти(Тек.Реализация);
				Если Най = Неопределено Тогда
					ВАдминкуНеЛезть = Истина;
				КонецЕсли;	
			Иначе
				//ВАдминкуНеЛезть = Истина;
			КонецеСли;	
			Если Най = Неопределено Тогда
				Продолжить;
			КонецЕСли;	
			ФлОтказСЗаездом = ЛОжь;
			ВАдминкуНеЛезть = Ложь;
			
			Если Най.ТипЗаказа <> Перечисления.ТипыЗаказов.Доставка И Най.ТипЗаказа <> Перечисления.ТипыЗаказов.Самовывоз Тогда
				Продолжить;
			КонецЕсли;	
				
			Если Най.Закрыть И Най.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
				ФлОтказСЗаездом = Истина;
			КонецеСли;	
			
			если ЗначениеЗаполнено(тек.Доставка) Тогда
				Попытка
					НомерЗаказа = Число(СокрЛП(Тек.Доставка.Номер));
				Исключение
					Продолжить;
				КонецПопытки;
			Иначеесли ЗначениеЗаполнено(тек.Реализация) Тогда
				НомерЗаказа = Число(СокрЛП(Тек.Реализация.Номер));
			КонецЕСли;	
			Попытка
				КодТовара = Число(Тек.Номенклатура.Код);
				////Серегин М.В. 20.08.2015 14:43:27 старый код
				//Кол = Тек.Количество - Тек.КоличествоВозвращено; 
				//Серегин М.В. 20.08.2015 14:43:32 новый код
				Кол = Тек.Количество - Тек.КоличествоВозвращено-Тек.Недовложение; 
			Исключение
				СчОш = 1;
				Продолжить; 		//Серегин М.В. 30.07.2015 16:12:07 много цифр, костыли
			Конецпопытки;
			
			//евген.ЗапросКИнтернетМагазину("
			//|UPDATE _orderItems
			//|SET missedcount = 0
			//|	WHERE
			//|		orderId = " + Формат(НомерЗаказа, "ЧГ=") + " and skuId = " + Формат(КодТовара, "ЧГ="), ПодключениеКМагазину);
			//
			//евген.ЗапросКИнтернетМагазину("
			//|UPDATE _orderItems
			//		|SET count = " + Формат(Тек.Количество, "ЧН=0; ЧГ=") + "
			//|	WHERE
			//|		orderId = " + Формат(НомерЗаказа, "ЧГ=") + " and skuId = " + Формат(КодТовара, "ЧГ="), ПодключениеКМагазину);
			
			
			
			Если Тек.КоличествоВозвращено+Тек.Недовложение = 0 Тогда
				Продолжить;
			КонецеСли;	
			
			//Строка_ = Заказы.Найти(Тек.Доставка);
			//Если Строка_ = БизнесПроцессы.новаМестнаяДоставка.ПустаяСсылка() Тогда
			//	Строка_ = Заказы.Найти(Тек.Реализация);
			//КонецеСли;	
			Если  Не (Най.Закрыть Или Най.Отклонить) = истина Тогда
				Продолжить;
			КонецеСли;	
			
			//Если Строка_.Перенесено Или Строка_.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки Тогда
			//	Продолжить;
			//КонецеСли;	
			
			Если ЗначениеЗаполнено(Тек.Комментарий) Тогда
				Коммент = Коммент + СокрЛП(Тек.Номенклатура.Наименование) + "=" + Тек.Комментарий + Символы.ПС;
			Иначе
				Коммент = Коммент + СокрЛП(Тек.Номенклатура.Наименование) + "=" + "не доставлен" + Символы.ПС;
			КонецеСли;
			
			
			Если Не ВАдминкуНеЛезть Тогда
				Если Не ФлОтказСЗаездом Тогда
					есть = Истина;
					//евген.ЗапросКИнтернетМагазину("
					//|UPDATE _orderItems
					//|SET count = " + Формат(Кол, "ЧН=0; ЧГ=") + "
					//|	WHERE
					//|		orderId = " + Формат(НомерЗаказа, "ЧГ=") + " and skuId = " + Формат(КодТовара, "ЧГ="), ПодключениеКМагазину);
					
					евген.ЗапросКИнтернетМагазину("EXEC import_setOrderItemsCount " + Формат(НомерЗаказа, "ЧГ=") + ", " + Формат(КодТовара, "ЧГ=") + ", " + Формат(Кол, "ЧН=0; ЧГ=") + ", " + Формат(Тек.Цена, "ЧРД=.; ЧН=0; ЧГ=") , ПодключениеКМагазину);
				Иначе
					есть = Истина;
					евген.ЗапросКИнтернетМагазину("					
					|EXEC import_setOrderItemsPrice @orderId = " + Формат(НомерЗаказа, "ЧГ=") + ",@skuId = " + Формат(КодТовара, "ЧГ=") + ", @price = 0", ПодключениеКМагазину);
					//
					//|UPDATE _orderItems
					//|SET priceUSD = 0
					//|	WHERE
					//|		orderId = " + Формат(НомерЗаказа, "ЧГ=") + " and skuId = " + Формат(КодТовара, "ЧГ="), ПодключениеКМагазину);
				КонецеСли;
			КонецеСли;
			
			//убираем не найдено
			//евген.ЗапросКИнтернетМагазину("
			//|UPDATE _orderItems
			//|SET missedcount = 0
			//|	WHERE
			//|		orderId = " + Формат(НомерЗаказа, "ЧГ=") + " and skuId = " + Формат(КодТовара, "ЧГ="), ПодключениеКМагазину);

			
			
			если ЗначениеЗаполнено(тек.Доставка) Тогда
  				Д = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Тек.Доставка.Номер);    //, Тек.Доставка.Дата
			Иначеесли ЗначениеЗаполнено(тек.Реализация) Тогда
				Д = Тек.Реализация.Ссылка;
			Иначе
				Продолжить;
			КонецЕСли;	
			ОбД = Д.ПолучитьОбъект();
			
			
			
			Если Тек.Цена <> 0 Тогда
				Най = ОбД.Товары.Найти(Тек.Номенклатура);
				Если Най <> Неопределено Тогда
					Если НАй.Количество - Тек.КоличествоВозвращено <= 0 Тогда
						ОбД.Товары.Удалить(Най);
					Иначе
						Най.Количество = НАй.Количество - Тек.КоличествоВозвращено;
						Най.Сумма = Най.Количество * Най.Цена;
						ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Най, ОбД);
					КонецеСли;	
					
					ОбД.Записать(РежимЗаписиДокумента.Запись);
					Если ОбД.Проведен Тогда
						ОбД.Записать(РежимЗаписиДокумента.Проведение);
					конецеСли;	
				КонецеСли;
			Иначе
				Най = ОбД.ПодарочныеПозиции.Найти(Тек.Номенклатура);
				Если Най <> Неопределено Тогда
					Если НАй.Количество - Тек.КоличествоВозвращено <= 0 Тогда
						ОбД.ПодарочныеПозиции.Удалить(Най);
					Иначе
						Най.Количество = НАй.Количество - Тек.КоличествоВозвращено;
						Най.Сумма = Най.Количество * Най.Цена;
						//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Най, ОбД);
					КонецеСли;	
					
					ОбД.Записать(РежимЗаписиДокумента.Запись);
					Если ОбД.Проведен Тогда
						ОбД.Записать(РежимЗаписиДокумента.Проведение);
					конецеСли;	
				КонецеСли;
			КонецеСли;
			
			
			
			если ЗначениеЗаполнено(тек.Доставка) Тогда
				Д = Документы.ПеремещениеТоваров.НайтиПоНомеру(Тек.Доставка.Номер);   //, Тек.Доставка.Дата
			Иначеесли ЗначениеЗаполнено(тек.Реализация) Тогда
				Д = Документы.ПеремещениеТоваров.НайтиПоНомеру(Тек.Реализация.Номер); // , Тек.Реализация.Дата
			Иначе
				ПродолжитЬ;
			КонецЕСли;	
			
			ОбД = Д.ПолучитьОбъект();
			Струк = Новый Структура;
			Струк.Вставить("Номенклатура", тек.Номенклатура);
			Струк.Вставить("Количество", тек.Количество);
			
			Най = ОбД.Товары.НайтиСтроки(Струк);
			Если Най.Количество() <> 0 Тогда
				Най_ = Най[0];
				Если Най_ <> Неопределено Тогда
					Если НАй_.Количество - Кол = 0 Тогда
						ОбД.Товары.Удалить(Най_);
					Иначе
						Най_.Количество = НАй_.Количество - Кол;
					КонецеСли;	
					
					ОбД.Записать(РежимЗаписиДокумента.Запись);
					Если ОбД.Проведен Тогда
						ОбД.Записать(РежимЗаписиДокумента.Проведение);
					конецеСли;	
				КонецеСли;
			Иначе
				
			КонецеСли;
	//	#Если Клиент Тогда
	//	ФормаИндикацииХодаЗагрузки.Значение = ФормаИндикацииХодаЗагрузки.Значение + 1;
	//	ФормаИндикацииХодаЗагрузки.КомментарийЗначения = "Доставка № " + СокрЛП(Тек.Реализация.Номер) + " от " + Формат(Тек.Реализация.Дата, "ДФ=дд.ММ.гггг") + " (" + Строка(СчТ) + " из " + Строка(Товары.Количество()) + ")";
	//#КонецЕсли
		КонецЦикла;
		//Если есть Тогда
		//	Коммент = СтрЗаменить(Коммент, "'", "-");
		//	
		//	Ткст = "
		//	|UPDATE _order
		//	|SET comment = isnull(comment, '') + char(13) + char(10) + '" + Коммент + "'
		//	| WHERE orderId = " + Формат(НомерЗаказа, "ЧГ=");
		//	евген.ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
		//КонецЕсли;
		//ЗафиксироватьТранзакцию();
		
		//#Если Клиент Тогда
		//	ФормаИндикатора.ОбновитьСостояние("Доставка № " + СокрЛП(ОбД.Номер) + " от " + Формат(ОбД.Дата, "ДФ=дд.ММ.гггг") + " (" + Строка(СчТ) + " из " + Строка(Товары.Количество()) + ")");
		//#КонецЕсли
		//

		//#Если Клиент Тогда
		//	//ШагПрогресса = ШагПрогресса + 1;
		//	ФормаИндикатора.ОбновитьЗначение(СчТ);
		//	
		//	ФормаИндикатора.ДатаПрерывания = ТекущаяДата();
		//	ОбработкаПрерыванияПользователя();
		//	ФормаИндикатора.ДатаПрерывания = Неопределено;
		//#КонецЕсли
	ИначеЕсли Реж = "ОтменаПроведения" Тогда
		Ком = "";
		Есть = Ложь;
		СчТ = 0;

		Если ТипДоставки = Перечисления.ТипыЗаказов.Фрахт Или ТипДоставки = Перечисления.ТипыЗаказов.Забор Тогда
			//ОтменитьТранзакцию();
			Возврат Истина;
		КонецеСли;	
		//НачатьТранзакцию();
	//#Если Клиент Тогда
	//	//ФормаИндикатора = ПолучитьОбщуюФорму("новаФормаИндикатора", , "ПрогрессФормированияРейсов");
	//	ФормаИндикатора.Заголовок = "Обновление данных в админке";
	//	ФормаИндикатора.МинимальноеЗначение = 0;
	//	ФормаИндикатора.МаксимальноеЗначение = Товары.Количество();
	//	ФормаИндикатора.КартинкаЗаголовка = БиблиотекаКартинок.новаАвтоматическоеПланирование;
	//	ФормаИндикатора.ПодключитьОбработчикОжидания("АвтоЗакрытие", 1);
	//	ФормаИндикатора.Открыть();
	//#КонецЕсли
		
	Для Каждого Тек Из Товары Цикл
		СчТ = СчТ + 1;
			Если Тек.Количество <= 0 тогда
				Продолжить;
			КонецеСли;	
				
			
			ВАдминкуНеЛезть = Ложь;
			
			Най = Заказы.Найти(Тек.Доставка);
			
			Если Не ЗначениеЗаполнено(Тек.Доставка) Тогда
				Най = Заказы.Найти(Тек.Реализация);
				Если Най = Неопределено Тогда
					ВАдминкуНеЛезть = Истина;
				КонецЕсли;	
			Иначе
				//ВАдминкуНеЛезть = Истина;
			КонецеСли;	
			Если Най = Неопределено Тогда
				Продолжить;
			КонецЕСли;	
			Если Най.ТипЗаказа <> Перечисления.ТипыЗаказов.Доставка И Най.ТипЗаказа <> Перечисления.ТипыЗаказов.Самовывоз Тогда
				Продолжить;
			КонецЕсли;	
			
			
			ФлОтказСЗаездом = ЛОжь;
			ВАдминкуНеЛезть = Ложь;
			Если Най.Закрыть И Най.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
				ФлОтказСЗаездом = Истина;
			КонецеСли;	
			
			если ЗначениеЗаполнено(тек.Доставка) Тогда
				Попытка
				НомерЗаказа = Число(СокрЛП(Тек.Доставка.Номер));
			исключение
				продолжить;
				конецпопытки;
			Иначеесли ЗначениеЗаполнено(тек.Реализация) Тогда
				НомерЗаказа = Число(СокрЛП(Тек.Реализация.Номер));
			КонецЕСли;	
			Попытка
				КодТовара = Число(Тек.Номенклатура.Код);
			Исключение
				Продолжить;
			КонецПопытки;
			
			Если Не ЗначениеЗаполнено(Тек.КоличествоВозвращено) Тогда
				Продолжить;
			КонецеСли;	
			//Строка_ = Заказы.Найти(Тек.Доставка);
			//Если Строка_ = Неопределено Тогда
			//	Строка_ = Заказы.Найти(Тек.Реализация);
			//КонецеСли;	
			Если  Не (Най.Закрыть Или Най.Отклонить) = истина Тогда
				Продолжить;
			КонецеСли;	
			//Если Строка_.Перенесено Или Строка_.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки Тогда
			//	Продолжить;
			//КонецеСли;	
			Если ЗначениеЗаполнено(Тек.Комментарий) Тогда
				Ком = Ком + СокрЛП(Тек.Номенклатура.Наименование) + "=" + Символы.ПС;
			Иначе
				Ком = Ком + СокрЛП(Тек.Номенклатура.Наименование) + "=" + Символы.ПС;
			КонецеСли;
			
			//ВАдминкуНеЛезть = Истина;
			Кол = Тек.Количество;
			Если Не ВАдминкуНеЛезть Тогда
				Если Не ФлОтказСЗаездом Тогда
					Есть = истина;
					//евген.ЗапросКИнтернетМагазину("
					//|UPDATE _orderItems
					//|SET count = " + Формат(Кол, "ЧН=0; ЧГ=") + "
					//|	WHERE
					//|		orderId = " + Формат(НомерЗаказа, "ЧГ=") + " and skuId = " + Формат(КодТовара, "ЧГ="), ПодключениеКМагазину);
				евген.ЗапросКИнтернетМагазину("EXEC import_setOrderItemsCount " + Формат(НомерЗаказа, "ЧГ=") + ", " + Формат(КодТовара, "ЧГ=") + ", " + Формат(Кол, "ЧН=0; ЧГ=") + ", " + Формат(Тек.Цена, "ЧРД=.; ЧН=0; ЧГ=") , ПодключениеКМагазину);
				Иначе
					Есть = истина;
					Цена = Тек.Цена;
					евген.ЗапросКИнтернетМагазину("
					|EXEC import_setOrderItemsPrice @orderId = " + Формат(НомерЗаказа, "ЧГ=") + ",@skuId = " + Формат(КодТовара, "ЧГ=") + ", @price = " + Формат(Цена, "ЧДЦ=0; ЧН=0; ЧГ="), ПодключениеКМагазину);
					
					//|UPDATE _orderItems
					//|SET PriceUSD = " + Формат(Цена, "ЧДЦ=0; ЧН=0; ЧГ=") + "
					//|	WHERE
					//|		orderId = " + Формат(НомерЗаказа, "ЧГ=") + " and skuId = " + Формат(КодТовара, "ЧГ="), ПодключениеКМагазину);
				КонецЕСли;
			КонецеСли;
			
			
			если ЗначениеЗаполнено(тек.Доставка) Тогда
				Д = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Тек.Доставка.Номер);    //, Тек.Доставка.Дата
			Иначеесли ЗначениеЗаполнено(тек.Реализация) Тогда
				Д = Тек.Реализация.Ссылка;
			Иначе
				Продолжить;
			КонецЕСли;	
			Если Не ЗначениеЗаполнено(Обд) Тогда
				Продолжить;
			КонецеСли;	
			ОбД = Д.ПолучитьОбъект();
			
			Если Тек.Цена <> 0 Тогда 
				Най = ОбД.Товары.Найти(Тек.Номенклатура);
				Если Най <> Неопределено Тогда
					Най.Количество = Тек.Количество;
					Най.Сумма = Най.Количество*Най.Цена;
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Най, ОбД);
				Иначе
					если Тек.Количество <= 0 Тогда
						Продолжить;
					КонецеСли;	
					Нов = ОбД.Товары.Добавить();
					Нов.Номенклатура = Тек.Номенклатура;
					Нов.ЕдиницаИзмерения = Нов.Номенклатура.ЕдиницаХраненияОстатков;
					Нов.Коэффициент = 1;
					Нов.Качество = Справочники.Качество.Новый;
					Нов.Количество = Тек.Количество;
					Если ЗначениеЗаполнено(Тек.Номенклатура) Тогда
						Нов.СтавкаНДС = Тек.Номенклатура.СтавкаНДС;
					КонецеСли;	
					Нов.Сумма = Тек.Сумма;
					Нов.Цена = Тек.Цена;
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Нов, ОбД);
				КонецеСли;
			Иначе
				Най = ОбД.ПодарочныеПозиции.Найти(Тек.Номенклатура);
				Если Най <> Неопределено Тогда
					Най.Количество = Тек.Количество;
					Най.Сумма = Най.Количество*Най.Цена;
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Най, ОбД);
				Иначе
					Нов = ОбД.ПодарочныеПозиции.Добавить();
					Нов.Номенклатура = Тек.Номенклатура;
					Нов.ЕдиницаИзмерения = Нов.Номенклатура.ЕдиницаХраненияОстатков;
					Нов.Коэффициент = 1;
					Нов.Качество = Справочники.Качество.Новый;
					Нов.Количество = Тек.Количество;
					Если ЗначениеЗаполнено(Тек.Номенклатура) Тогда
						Нов.СтавкаНДС = Тек.Номенклатура.СтавкаНДС;
					КонецеСли;	
					Нов.Сумма = Тек.Сумма;
					Нов.Сумма = Тек.Сумма;
					Нов.Цена = Тек.Цена;
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Нов, ОбД);
				КонецеСли;
			КонецеСли;
			
			ОбД.Записать(РежимЗаписиДокумента.Запись);
			Если ОбД.Проведен Тогда
				ОбД.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			конецеСли;	
			
			если ЗначениеЗаполнено(тек.Доставка) Тогда
				Д = Документы.ПеремещениеТоваров.НайтиПоНомеру(Тек.Доставка.Номер);  // , Тек.Доставка.Дата
			Иначеесли ЗначениеЗаполнено(тек.Реализация) Тогда
				Д = Документы.ПеремещениеТоваров.НайтиПоНомеру(Тек.Реализация.Номер);   // , Тек.Реализация.Дата
			Иначе
				Продолжить;
			КонецЕСли;	
			
			ОбД = Д.ПолучитьОбъект();
			
			Струк = Новый Структура;
			Струк.Вставить("Номенклатура", Тек.Номенклатура);
			Струк.Вставить("Количество", Тек.Количество);
			
			
			Най = ОбД.Товары.НайтиСтроки(Струк);
			
			Если Най.Количество() <> 0 Тогда
				Най_ = Най[0];
				Если Най_ <> Неопределено Тогда
					Най_.Количество = Тек.Количество;
				Иначе
					Нов = ОбД.Товары.Добавить();
					Нов.Номенклатура = Тек.Номенклатура;
					Нов.ЕдиницаИзмерения = Нов.Номенклатура.ЕдиницаХраненияОстатков;
					Нов.Коэффициент = 1;
					Нов.Качество = Справочники.Качество.Новый;
					Нов.Количество = Тек.Количество;
				КонецеСли;
			Иначе
				Нов = ОбД.Товары.Добавить();
				Нов.Номенклатура = Тек.Номенклатура;
				Нов.ЕдиницаИзмерения = Нов.Номенклатура.ЕдиницаХраненияОстатков;
				Нов.Коэффициент = 1;
				Нов.Качество = Справочники.Качество.Новый;
				Нов.Количество = Тек.Количество;
			КонецЕСли;
			
			ОбД.Записать(РежимЗаписиДокумента.Запись);
			Если ОбД.Проведен Тогда
				ОбД.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			конецеСли;	
		//#Если Клиент Тогда
		//	ФормаИндикатора.ОбновитьСостояние("Доставка № " + СокрЛП(ОбД.Номер) + " от " + Формат(ОбД.Дата, "ДФ=дд.ММ.гггг") + " (" + Строка(СчТ) + " из " + Строка(Товары.Количество()) + ")");
		//#КонецЕсли
		//

		//#Если Клиент Тогда
		//	//ШагПрогресса = ШагПрогресса + 1;
		//	ФормаИндикатора.ОбновитьЗначение(СчТ);
		//	
		//	ФормаИндикатора.ДатаПрерывания = ТекущаяДата();
		//	ОбработкаПрерыванияПользователя();
		//	ФормаИндикатора.ДатаПрерывания = Неопределено;
		//#КонецЕсли
	//	#Если Клиент Тогда
	//	ФормаИндикацииХодаЗагрузки.Значение = ФормаИндикацииХодаЗагрузки.Значение + 1;
	//	ФормаИндикацииХодаЗагрузки.КомментарийЗначения = "Доставка № " + СокрЛП(Тек.Реализация.Номер) + " от " + Формат(Тек.Реализация.Дата, "ДФ=дд.ММ.гггг") + " (" + Строка(СчТ) + " из " + Строка(Товары.Количество()) + ")";
	//#КонецЕсли
		
		КонецЦикла;
		
		Если есть Тогда
			Коммент = СтрЗаменить(Коммент, "'", "-");
			
			Ткст = "select o.comment
			|from _order o (nolock) where 
			|o.orderId = " + Формат(НомерЗаказа, "ЧГ=");
			
			RS = Евген.ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
			Сп = СоздатьТаблицу(RS, "comment");
			Если Сп.Количество() = 0 Тогда
				//ЗафиксироватьТранзакцию();
				Возврат Истина;;
			КонецеСли;	
			Коммент = Сп[0].comment;
			
			
			Для СчКом = 1 По СтрЧислоСтрок(Ком) Цикл
				ИскСтр = СтрПолучитьСтроку(Ком, СчКом);
				
				ЗамСтрока = "";
				Для Сч = 1 По СтрЧислоСтрок(Коммент) Цикл
					Строка = СтрПолучитьСтроку(Коммент, Сч);
					Если Найти(Строка, ИскСтр) тогда
						ЗамСтрока = Строка;
						Прервать;
					КонецеСли;	
				КонецЦикла;	
				
				Коммент = СтрЗаменить(Коммент, ЗамСтрока, "");
			КонецЦикла;	
			
			//Ткст = "
			//|UPDATE _order
			//|SET comment = '" + Коммент + "'
			//| WHERE orderId = " + Формат(НомерЗаказа, "ЧГ=");
			//Евген.ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
		КонецЕсли;
		//ЗафиксироватьТранзакцию();
	КонецеСли;
	
	Возврат Истина;
КонецФункции

Процедура ПроведениеРасшифровкиУслугСД() Экспорт
	Движения.РасчетУслугСД.Очистить();
	Движения.РасчетУслугСД.Записывать = Истина;
	
	
	Если ДатаЗакрытия < Дата("20150727000000") Тогда
		
		//Серегин М.В. 23.07.2015 18:49:07 старый код
		Для Каждого Тек Из Заказы Цикл
			Для Сч = 1 По 6 Цикл
				Если Тек.Закрыть Или Тек.Отклонить Тогда
					Если Тек["Показатель" + Строка(Сч)] = 0 Тогда
						Продолжить;
					КонецеСли;	
					Нов = Движения.РасчетУслугСД.Добавить();
					Нов.Доставка = Тек.Доставка;
					Нов.Партнер = Тек.ВладелецТовара;
					Нов.Период = ДатаЗакрытия;
					Най = АктивныеПоказателиУслугСД.Найти(Сч, "НомерПоказателя");				
					Нов.ПоказательУслуг = Най.ПоказательРасчетаУслугСД; 
					Если Сч = 1 Тогда
						если Тек.УслугиСДЧистые <> 0 Тогда
							Нов.Сумма = Тек.УслугиСДЧистые; 
						Иначе
							Нов.Сумма = Тек["Показатель" + Строка(Сч)]; 
						КонецеСли;	
					Иначе	
						Нов.Сумма = Тек["Показатель" + Строка(Сч)]; 
					КонецеСли;	
					Нов.Реализация = Тек.Реализация;
					Нов.Рейс = Тек.Рейс;
					Нов.ЮрЛицо = Тек.ЮрЛицо;
					Нов.ТерминалДоставки = Тек.ТерминалДоставки;
					Нов.ТерминалПриема = Тек.ТерминалПриема;
				КонецеСли;	
			КонецЦикла;
		КонецЦикла;	
	Иначе
		////Серегин М.В. 23.07.2015 18:49:19 новый
		Для Каждого Тек Из Заказы Цикл
			Для Сч = 1 По 2 Цикл
				//Если Тек.Закрыть Или Тек.Отклонить Тогда
				Если Тек.Закрыть Тогда
				
                    Если Тек["Показатель" + Строка(Сч)] = 0 Тогда
                        //+++++Серегин М.В. 21.01.2016 10:22:14 
                        Если "Показатель" + Строка(Сч) <> "Показатель1" Тогда
                            //-----Серегин М.В. 21.01.2016 10:22:19 
                            Продолжить;
                        КонецЕсли; //-----Серегин М.В. 21.01.2016 10:23:32 
                    КонецеСли;	
					Нов = Движения.РасчетУслугСД.Добавить();
					Нов.Доставка = Тек.Доставка;
					Нов.Партнер = Тек.ВладелецТовара;
					Нов.Период = ДатаЗакрытия;
					Най = АктивныеПоказателиУслугСД.Найти(Сч, "НомерПоказателя");				
					Нов.ПоказательУслуг = Най.ПоказательРасчетаУслугСД; 
					Нов.Сумма = Тек["Показатель" + Строка(Сч)]; 
					Нов.Реализация = Тек.Реализация;
					Нов.Рейс = Тек.Рейс;
					Нов.ЮрЛицо = Тек.ЮрЛицо;
					Нов.ТерминалДоставки = Тек.ТерминалДоставки;
					Нов.ТерминалПриема = Тек.ТерминалПриема;
					
				КонецеСли;	
			КонецЦикла;
			
			//Услуги из ТЧ Услуги
			//Если Тек.Закрыть Или Тек.Отклонить Тогда
			Если Тек.Закрыть Тогда
				
				ПараметрыОтбора = Новый Структура("Реализация", Тек.Реализация.Ссылка);
				СтрокиУслуги = Услуги.НайтиСтроки(ПараметрыОтбора);
				Для каждого СтрСУ Из СтрокиУслуги Цикл
					Если СтрСУ.Услуга.НомерПоказателяАдминки <> 6 Тогда
						Нов = Движения.РасчетУслугСД.Добавить();
						Нов.Доставка = Тек.Доставка;
						Нов.Партнер = Тек.ВладелецТовара;
						Нов.Период = ДатаЗакрытия;
						Нов.ПоказательУслуг = СтрСУ.Услуга; 
						Нов.Сумма = СтрСУ.СуммаДляИзменения; 
						Нов.Реализация = Тек.Реализация;
						Нов.Рейс = Тек.Рейс;
						Нов.ЮрЛицо = Тек.ЮрЛицо;
						Нов.ТерминалДоставки = Тек.ТерминалДоставки;
						Нов.ТерминалПриема = Тек.ТерминалПриема;						
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;	
			
		КонецЦикла;	
	КонецеСли;
    
КонецПроцедуры	

Процедура УстановитьИсторическиеДатыДокументов(ЗаказОбъект, Доставка, ИсторическиеДатыДоставок)
	
	#Область ПереустановкаИсторическихДатРТиУиБП
	// ++ Задача № 3185
	
	Если Не ТипЗНЧ(ЗаказОбъект.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда Возврат КонецЕсли;

	СтрокаДатыДоставки = ИсторическиеДатыДоставок.Найти(ЗаказОбъект.Ссылка, "Заказ");
	Если Не СтрокаДатыДоставки = Неопределено Тогда		
		
		ДатаДоставки = СтрокаДатыДоставки.ДатаДоставки; // Последняя историческая дата доставки для заказа
		
		//Обработка Заказа
		// Будем менять дату только если она не соответствует исторической ДатаДоставки	
		Если НачалоДня(ЗаказОбъект.Дата) <> НачалоДня(ДатаДоставки) Тогда						
			ЗаказОбъект.Дата = ДатаДоставки;
		КонецЕсли;
		
		//Обработка БП
		// Будем менять дату только если она не соответствует исторической ДатаДоставки	
		Если ЗначениеЗаполнено(Доставка) Тогда
			ДоставкаОбъект = Доставка.ПолучитьОбъект();
			Если НачалоДня(ДоставкаОбъект.Дата) <> НачалоДня(ДатаДоставки) Тогда		
				// Алгоритм взят из Документ.ИзменениеДатыДоставки
				ДоставкаОбъект.Дата = ДатаДоставки;
				
				ЧН = Час(ДоставкаОбъект.ВремяОтправленияС);
				ЧК = Час(ДоставкаОбъект.ВремяОтправленияПо);
				
				МН = Минута(ДоставкаОбъект.ВремяОтправленияС);
				МК = Минута(ДоставкаОбъект.ВремяОтправленияПо);
				
				ЧН_ = Час(ДоставкаОбъект.ВремяПрибытияС);
				ЧК_ = Час(ДоставкаОбъект.ВремяПрибытияПо);
				
				МН_ = Минута(ДоставкаОбъект.ВремяПрибытияС);
				МК_ = Минута(ДоставкаОбъект.ВремяПрибытияПо);
				
				ДоставкаОбъект.ВремяОтправленияС = Дата(Формат(Год(ДатаДоставки), "ЧГ=") + Формат(Месяц(ДатаДоставки), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаДоставки), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
				ДоставкаОбъект.ВремяОтправленияПо = Дата(Формат(Год(ДатаДоставки), "ЧГ=") + Формат(Месяц(ДатаДоставки), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаДоставки), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
				
				ДоставкаОбъект.ВремяПрибытияС = Дата(Формат(Год(ДатаДоставки), "ЧГ=") + Формат(Месяц(ДатаДоставки), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаДоставки), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МН_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");
				ДоставкаОбъект.ВремяПрибытияПо = Дата(Формат(Год(ДатаДоставки), "ЧГ=") + Формат(Месяц(ДатаДоставки), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаДоставки), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + Формат(МК_, "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=") + "00");							
				
				ДоставкаОбъект.Записать();
				
			КонецЕсли;	
		КонецЕсли;
		
	Конецесли;	
	// -- Задача № 3185
	#КонецОбласти
	
КонецПроцедуры

Процедура ОтменитьСтатусЗакрытия(ИсторическиеДатыДоставок)
	Для Каждого Тек Из Заказы Цикл
		Если Не Тек.Закрыть Тогда
			Продолжить;
		КонецЕсли;	
		
		Д = Тек.Реализация.ПолучитьОбъект();
        //Серегин М.В. 04.06.2015 15:54:55 
        Если ТипЗнч(Д) = Тип("ДокументОбъект.Фрахт") Тогда
            Д.СтатусИнтернетМагазинаСпр = Тек.СтатусЗаказаИнтернетМагазина;    
        КонецЕсли;
        //Серегин М.В. 04.06.2015 15:54:58 
		Д.СтатусИнтернетМагазина = Тек.СтатусЗаказа;
		//Попытка
        //Серегин М.В. 04.06.2015 16:00:28 на случай если документ удален
		
		УстановитьИсторическиеДатыДокументов(Д, Тек.Доставка, ИсторическиеДатыДоставок); // Задача № 3185
		
        Если Д.Проведен Тогда
            Д.Записать(РежимЗаписиДокумента.Проведение);
        ИначеЕсли Д.ПометкаУдаления Тогда
            Д.ПометкаУдаления = Ложь;
            Д.Записать(РежимЗаписиДокумента.Запись);
        Иначе
            Д.Записать(РежимЗаписиДокумента.Запись);
        КонецЕсли;
	//Исключение
	//	Сч = 1;
	//	КонецПопытки;
	КонецЦикла;	
КонецПроцедуры	

//Серегин М.В. 04.06.2015 16:42:57 
Процедура ОтменитьСтатусОтклонен(ИсторическиеДатыДоставок)
	Для Каждого Тек Из Заказы Цикл
		Если Не Тек.Отклонить Тогда
			Продолжить;
		КонецЕсли;	
		
		Д = Тек.Реализация.ПолучитьОбъект();
        //Серегин М.В. 04.06.2015 15:54:55 
        Если ТипЗнч(Д) = Тип("ДокументОбъект.Фрахт") Тогда
            Д.СтатусИнтернетМагазинаСпр = Тек.СтатусЗаказаИнтернетМагазина;    
        КонецЕсли;
        //Серегин М.В. 04.06.2015 15:54:58 
		Д.СтатусИнтернетМагазина = Тек.СтатусЗаказа;
		//Попытка
        //Серегин М.В. 04.06.2015 16:00:28 на случай если документ удален
		
		УстановитьИсторическиеДатыДокументов(Д, Тек.Доставка, ИсторическиеДатыДоставок); // Задача № 3185
		
        Если Д.Проведен Тогда
            Д.Записать(РежимЗаписиДокумента.Проведение);
        ИначеЕсли Д.ПометкаУдаления Тогда
            Д.ПометкаУдаления = Ложь;
            Д.Записать(РежимЗаписиДокумента.Запись);
        Иначе
            Д.Записать(РежимЗаписиДокумента.Запись);
        КонецЕсли;
	//Исключение
	//	Сч = 1;
	//	КонецПопытки;
	КонецЦикла;	
КонецПроцедуры	
//Серегин М.В. 04.06.2015 16:42:58 

Функция СоздатьТаблицу(RS, СписокКолонок) Экспорт
	Таб = Новый ТаблицаЗначений;
	Разделитель = Найти(СписокКолонок, ",");
	Пока Разделитель > 0 Цикл
		Таб.Колонки.Добавить(СокрЛП(Лев(СписокКолонок, Разделитель - 1)));
		СписокКолонок = Сред(СписокКолонок, Разделитель + 1);
		Разделитель = Найти(СписокКолонок, ",");
	КонецЦикла;
	Таб.Колонки.Добавить(СокрЛП(СписокКолонок));
	
	СписокКолонок = Таб.Колонки;
	Пока НЕ RS.EOF Цикл
		НоваяСтрока = Таб.Добавить();
		Для Кол = 1 По СписокКолонок.Количество() Цикл
			ИмяКолонки = СписокКолонок.Получить(Кол - 1).Имя;
			Суффикс = Прав(ИмяКолонки, 2);
			Если Суффикс = "_Ч" Тогда
				НоваяСтрока.Установить(Кол - 1, RS.Fields(Лев(ИмяКолонки, СтрДлина(ИмяКолонки) - 2)).Value);
			ИначеЕсли Суффикс = "_Д" Тогда
				НоваяСтрока.Установить(Кол - 1, RS.Fields(Лев(ИмяКолонки, СтрДлина(ИмяКолонки) - 2)).Value);
			Иначе
				НоваяСтрока.Установить(Кол - 1,  СокрЛП(RS.Fields(ИмяКолонки).Value));
			КонецЕсли;
		КонецЦикла;
		Rs.MoveNext()
	КонецЦикла;
	
	Возврат Таб;
КонецФункции

Процедура ОбработкаУдаленияПроведения(Отказ)
	//+Степанов Задача № 3443
	//ДокументПроверен = Ложь;
	//-Степанов
	//Отказ = ТранзакционнаяМодель;
	//Если Отказ Тогда
	//	Возврат;
	//КонецеСли;	
	//Если ЕстьКорректировкиПоЗаказам() Тогда
	//    Сообщить("По документу обнаружены корректировки, отмена проведения невозможна.");    
	//	Отказ = Истина;
	//    Возврат;
	//КонецеСли;	
	
	
	ДатаЗапрета = Константы.ЗакрытаяДата.Получить();
	
	Если ЗначениеЗаполнено(ДатаЗапрета) Тогда
		Если ДатаЗакрытия <= ДатаЗапрета Тогда
			Отказ = Истина;
			Возврат;
		КонецеСли;	
	КонецеСли;	
	
	//+Степанов Задача № 3837
	Если ДатаЗакрытия < '20200416000000' Тогда
		ОбработкаУдаленияПроведения_до_16042020(Отказ);
		Возврат;
	КонецЕсли;
	//-Степанов Задача № 3837
	
	//+Степанов Задача № 3443
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗакрытиеЗаказов.Ссылка КАК Ссылка,
	               |	ЕСТЬNULL(ДокументыЗакрытыеДляИзмененияСрезПоследних.ЗакрытДляРедактирования, ЛОЖЬ) КАК ЗакрытДляРедактирования,
	               |	ЕСТЬNULL(ПроверенныеДокументыСрезПоследних.ДокументПроверен, ЛОЖЬ) КАК ДокументПроверен
	               |ИЗ
	               |	Документ.ЗакрытиеЗаказов КАК ЗакрытиеЗаказов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроверенныеДокументы.СрезПоследних(, Документ = &Ссылка) КАК ПроверенныеДокументыСрезПоследних
	               |		ПО ЗакрытиеЗаказов.Ссылка = ПроверенныеДокументыСрезПоследних.Документ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыЗакрытыеДляИзменения.СрезПоследних(, Документ = &Ссылка) КАК ДокументыЗакрытыеДляИзмененияСрезПоследних
	               |		ПО ЗакрытиеЗаказов.Ссылка = ДокументыЗакрытыеДляИзмененияСрезПоследних.Документ
	               |ГДЕ
	               |	ЗакрытиеЗаказов.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекДата = ТекущаяДата();
		Если Выборка.ЗакрытДляРедактирования Тогда
			НаборЗаписей = РегистрыСведений.ДокументыЗакрытыеДляИзменения.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(Ссылка);
			НаборЗаписей.Прочитать();
			Запись = НаборЗаписей.Добавить();
			Запись.Период = ТекДата;
			Запись.Документ = Ссылка;
			Запись.ДокументРегистратор = Ссылка;
			Запись.ЗакрытДляРедактирования = Ложь;
			НаборЗаписей.Записать();
		КонецЕсли;
		Если Выборка.ДокументПроверен Тогда
			НаборЗаписей = РегистрыСведений.ПроверенныеДокументы.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(Ссылка);
			НаборЗаписей.Прочитать();
			Запись = НаборЗаписей.Добавить();
			Запись.Период = ТекДата;
			Запись.Документ = Ссылка;
			Запись.ДокументПроверен = Ложь;
			Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			НаборЗаписей.Записать();
		КонецЕсли;	
	КонецЕсли;	
	//-Степанов Задача № 3443
	
	//#Если Клиент Тогда
	//	ФормаИндикатора = ПолучитьОбщуюФорму("новаФормаИндикатора", , "ПрогрессФормированияРейсов");
	//	ФормаИндикатора.Заголовок = "Проведение закрытия";
	//	ФормаИндикатора.МинимальноеЗначение = 0;
	//	ФормаИндикатора.МаксимальноеЗначение = 1;
	//	ФормаИндикатора.КартинкаЗаголовка = БиблиотекаКартинок.новаАвтоматическоеПланирование;
	//	//ФормаИндикатора.ПодключитьОбработчикОжидания("АвтоЗакрытие", 1);
	//	ФормаИндикатора.Открыть();
	//#КонецЕсли
	#Если Клиент Тогда
	ФормаИндикацииХодаЗагрузки = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаИндикацииХодаЗагрузки.НаименованиеОбработкиДанных = "Закрытие заказов";
	ФормаИндикацииХодаЗагрузки.Открыть();
	
	ФормаИндикацииХодаЗагрузки.КомментарийОбработкиДанных = "Распроведение заказов";
	
	ФормаИндикацииХодаЗагрузки.Значение = 0;
	#КонецЕсли
	//БлокировкаДанных = Новый БлокировкаДанных;
	//
	//Если ТипДоставки = Перечисления.ТипыЗаказов.Доставка Тогда
	//	ЭлБлок = БлокировкаДанных.Добавить("Документ.РеализацияТоваровУслуг");
	//ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Фрахт Тогда
	//	ЭлБлок = БлокировкаДанных.Добавить("Документ.Фрахт");
	//ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Забор Тогда
	//	ЭлБлок = БлокировкаДанных.Добавить("Документ.ЗаборТовара");
	//ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз Тогда
	//	ЭлБлок = БлокировкаДанных.Добавить("Документ.РеализацияТоваровУслуг");
	//КонецеСли;
	//
	//ЭлБлок.ИсточникДанных = Заказы;
	//ЭлБлок.ИспользоватьИзИсточникаДанных("Ссылка", "Реализация");
	//
	//ЭлБлок = БлокировкаДанных.Добавить("Документ.ПеремещениеТоваров");
	//ЭлБлок.ИсточникДанных = Заказы;
	//ЭлБлок.ИспользоватьИзИсточникаДанных("Ссылка", "Перемещение");
	//
	//БлокировкаДанных.Заблокировать();
	
	//НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	// ОбновитьЗаказыВАдминке("ОтменаПроведения"); // Отключено по Задача № 3357
	
	// ++ Задача № 3185
	МассивЗаказов = Заказы.ВыгрузитьКолонку("Реализация");	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	ДатыДоставокСрезПоследних.Заказ КАК Заказ,
	|	ДатыДоставокСрезПоследних.ДатаДоставки КАК ДатаДоставки
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыДоставок.СрезПоследних КАК ДатыДоставокСрезПоследних
	|		ПО РеализацияТоваровУслуг.Ссылка = ДатыДоставокСрезПоследних.Заказ
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивЗаказов)";
	
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);	
	ИсторическиеДатыДоставок = Запрос.Выполнить().Выгрузить();
	// -- Задача № 3185

	
	ОтменитьСтатусЗакрытия(ИсторическиеДатыДоставок);
    ОтменитьСтатусОтклонен(ИсторическиеДатыДоставок);
	
	
    //Серегин М.В. 04.06.2015 14:48:12 добавил ИЛИ ТипДоставки = Перечисления.ТипыЗаказов.Фрахт 
    //+++++Серегин М.В. 16.09.2015 15:50:30 доавил ЗАБОР
	//Если ТипДоставки = Перечисления.ТипыЗаказов.Доставка Или ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз ИЛИ ТипДоставки = Перечисления.ТипыЗаказов.Фрахт ИЛИ ТипДоставки = Перечисления.ТипыЗаказов.Забор  Тогда
        Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
        Для Каждого Тек Из заказы Цикл
            Если Тек.Закрыть Или Тек.Отклонить Тогда
                ТекстЗапроса = "import_revertOrderProductCountFrom1C " + СокрЛП(Тек.Реализация.Номер) + ", " + Формат(Тек.СуммаДоставкиДоМКАД, "ЧРД=.; ЧН=0; ЧГ=") + ", " + Формат(Тек.СуммаДоставкиЗаМКАД, "ЧРД=.; ЧН=0; ЧГ=") + ", 2";
                Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
                
                //Серегин М.В. 16.07.2015 14:13:36 
                //Обновление таблицы
                orderID = СокрЛП(Тек.Реализация.Номер);
                serviceID = 6;
                who = ПараметрыСеанса.ТекущийПользователь;
                count = 0;
                price = Формат(Тек.Показатель2, "ЧРД=.; ЧН=0; ЧГ=");
                
                Если Тек.Показатель2>0 Тогда
                    ТекстЗапроса = "
                    |DECLARE @t TOrderService
                    |INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +
                    orderID +","+serviceID+",'"+who+"',"+ count+","+price+")
                    |EXEC import_updateOrdersServices @t
                    |";
                    Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
                КонецЕсли;
                
                Если ДатаЗакрытия >= Дата("20150727000000") Тогда
                    
                    //Серегин М.В. 23.07.2015 18:38:50 обновление в админке услуг
                    ПараметрыОтбора = Новый Структура("Реализация", Тек.Реализация);
                    СтрокиУслуги = Услуги.НайтиСтроки(ПараметрыОтбора);
                    Для каждого СтрСУ Из СтрокиУслуги Цикл
                        price = Формат(СтрСУ.СуммаДляИзменения, "ЧРД=.; ЧН=0; ЧГ=");
                        serviceID = СтрСУ.Услуга.НомерПоказателяАдминки;
                        Если serviceID <> 6 Тогда
                            ТекстЗапроса = "
                            |DECLARE @t TOrderService
                            |INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +","+serviceID+",'"+who+"',"+count+","+price+")
                            |EXEC import_updateOrdersServices @t
                            |";
                            Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
                        КонецЕсли;
                    КонецЦикла;
                    //Серегин М.В. 15.07.2015 12:52:03 
                КонецеСли;
            КонецеСли;	
        КонецЦикла;	
	//КонецеСли;
	
	//ЗафиксироватьТранзакцию();
	//#Если Клиент Тогда
	//	ФормаИндикатора.Закрыть();
	//#КонецЕсли
	
	//+++ Костя 13112015 // Удаление отказных позиций из 1с в админке
	УдалитьОтказныеПозицииИз1СВАдминке();
	//+++ Костя 13112015 
	ОбновитьСуммыКомиссийВАдминке(0, Соединение);
	#Если Клиент Тогда
	
	ФормаИндикацииХодаЗагрузки.Закрыть();
	#КонецЕсли

	// Михушкин --->> 
	СтатусыЗакрытияЗаказов(РежимЗаписиДокумента.ОтменаПроведения);
	// <<--- Михушкин
	
	// Презварительное закрытие 
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
	
	МассивФинальныхСтатусов = Новый Массив;
	
	//МассивЗарегистированных =  Новый Массив; //УДАЛИТЬ!!! ТОЛЬКО ТЕСТ!!!
	
	//+Степанов Задача № 3837
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗакрытиеЗаказовЗаказы.Реализация КАК Реализация
	               |ПОМЕСТИТЬ втРеализации
	               |ИЗ
	               |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	               |ГДЕ
	               |	ЗакрытиеЗаказовЗаказы.Закрыть
	               |	И ЗакрытиеЗаказовЗаказы.ПредварительноеЗакрытие
	               |	И ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗакрытиеЗаказовЗаказы.Реализация
	               |ИЗ
	               |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	               |ГДЕ
	               |	ЗакрытиеЗаказовЗаказы.Отклонить
	               |	И ЗакрытиеЗаказовЗаказы.ПредварительноеЗакрытие
	               |	И ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втРеализации.Реализация КАК Реализация,
	               |	ЕСТЬNULL(ПараметрыТарифаЗаказаСрезПоследних.УслугиСД, 0) КАК УслугиСД,
	               |	ЕСТЬNULL(ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые, 0) КАК УслугиСДЧистые
	               |ИЗ
	               |	втРеализации КАК втРеализации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	               |				,
	               |				Заказ В
	               |					(ВЫБРАТЬ
	               |						втРеализации.Реализация КАК Реализация
	               |					ИЗ
	               |						втРеализации КАК втРеализации)) КАК ПараметрыТарифаЗаказаСрезПоследних
	               |		ПО втРеализации.Реализация = ПараметрыТарифаЗаказаСрезПоследних.Заказ";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТаблицаСуммУслуг = Запрос.Выполнить().Выгрузить();
	//-Степанов Задача № 3837
	
	Для каждого Стр Из Заказы Цикл		
		Если Стр.ПредварительноеЗакрытие И (Стр.Закрыть ИЛИ Стр.Отклонить) Тогда
			
			//+Степанов Задача № 3837
			СтрокаТЗСуммУслуг = ТаблицаСуммУслуг.Найти(Стр.Реализация);
			Если СтрокаТЗСуммУслуг <> Неопределено Тогда
				УслугиСДИзРС = СтрокаТЗСуммУслуг.УслугиСД;
				УслугиСДЧистыеИзРС = СтрокаТЗСуммУслуг.УслугиСДЧистые;
			Иначе
				УслугиСДИзРС = 0;
				УслугиСДЧистыеИзРС = 0;
			КонецЕсли;	
			//-Степанов Задача № 3837

			
			// Задача 2586
			СтатусКЗаписи = 0;
			//Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда					
			//	СтатусКЗаписи = 301;
			//ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
			//	СтатусКЗаписи = 302;
			//ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена 
			//	И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
			//	СтатусКЗаписи = 303;
			//ИначеЕсли  Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена
			//	И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
			//	СтатусКЗаписи = 304;
			//Иначе 
			//	СтатусКЗаписи = 401;
			//КонецЕсли; 
			// Задача 2586
			
			// текст для передварительного закрытия
			orderID = СокрЛП(Стр.Реализация.Номер);
			Status = Строка(Стр.Реализация.СтатусИнтернетМагазина);
			who = ПараметрыСеанса.ТекущийПользователь;
			completeDate = Евген.ДатаВSQL(ТекущаяДата(), Ложь);
			//+Степанов Задача № 3837
			//serviceDC = Формат(Стр.Реализация.УслугиСД, "ЧРД=.; ЧН=0; ЧГ=");
			//serviceDCclean = Формат(Стр.Реализация.УслугиСДЧистые, "ЧРД=.; ЧН=0; ЧГ=");
			serviceDC = Формат(УслугиСДИзРС, "ЧРД=.; ЧН=0; ЧГ=");
			serviceDCclean = Формат(УслугиСДЧистыеИзРС, "ЧРД=.; ЧН=0; ЧГ=");
			//-Степанов Задача № 3837
			Комм = "Предварительное закрытие";
			comment = СтрЗаменить(Комм, "'", """");
			isRefusal = ?(Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена, 1, 0);
			ReasonRefusal = "" + Стр.ПричинаНевыполнения;
			//CeHbKA #3225
			reasonId = "" + СокрЛП(Стр.ПричинаОтказа.Код);
			//CeHbKA #3225			
			deliveryPrice = Формат(Стр.СуммаДоставкиДоМКАД + Стр.СуммаДоставкиЗаМКАД, "ЧРД=.; ЧН=0; ЧГ=0");
			payType  = Стр.ТипОплаты.Код;
			closeFlag = 1;		
			
			// Отключено в рамках Задача № 2586
			//СтрокаЗапросаПЗ = "
			//|DECLARE @t TSetOrderStatus
			//|INSERT INTO @t ([orderID],[statusId],[who],[completeDate],serviceDC,serviceDCclean,comment, isRefusal, ReasonRefusal, deliveryPrice, payType, closeFlag) VALUES (" +
			//orderID +", " +Status+", '" +who+"', '"+completeDate+"', "+serviceDC+"," +serviceDCclean+",'" +comment+"', "+isRefusal+ ", '" +ReasonRefusal+"', "+deliveryPrice+ ", " +payType+ ", "+closeFlag+")
			//|EXEC import_setOrderStatusFrom1C @t
			//|";
			//Евген.ЗапросКИнтернетМагазину(СтрокаЗапросаПЗ, Подкл);
			
			//// Задача № 2586 						
			//mas.ОтправитьФинальныйСтатусВАдминку(orderID, Стр.Реализация.СтатусИнтернетМагазина, comment,
			//who,
			//ТекущаяДата(),
			//serviceDC,
			//serviceDCclean,
			//IsRefusal,
			//ReasonRefusal,
			//deliveryPrice,
			//payType,
			//,
			//,
			//closeFlag,
			//ТерминалДоставки.Код);
			//// Задача № 2586
			
			// Задача № 3191 						
			МассивФинальныхСтатусов = mas.ДобавитьФинальныйСтатусКПакету(orderID, Стр.Реализация.СтатусИнтернетМагазина, comment,
			who,
			ТекущаяДата(),
			serviceDC,
			serviceDCclean,
			IsRefusal,
			ReasonRefusal,
			deliveryPrice,
			payType,
			,
			,
			closeFlag,
			ТерминалДоставки.Код,
			,
			МассивФинальныхСтатусов);
			// Задача № 3191

			//Задача № 3241 НЕОБХОДИМО УТОЧНЕНИЕ ПОСТАНОВЩИКА: ЕМ 16:55 19.07.2019 - Не определять и не передавать FinalStatusId
			
			////УДАЛИТЬ!!! ТОЛЬКО ТЕСТ!!!
			//Если НЕ МассивЗарегистированных.Найти(Стр.Реализация) = Неопределено Тогда
			//	Продолжить;
			//Иначе
			//	МассивЗарегистированных.Добавить(Стр.Реализация);
			//Конецесли;
			////УДАЛИТЬ!!! ТОЛЬКО ТЕСТ!!!

			// Задача № 2586, 1 этап переделки записи статусов
			РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(Стр.Реализация, СтатусКЗаписи, Стр.Реализация.СтатусИнтернетМагазина, Ссылка);
			// Задача № 2586, 1 этап переделки записи статусов
			
		КонецЕсли;
	КонецЦикла;
		
	// Задача № 3191
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		ФайлДляКонтроля = Неопределено;
		// для теста ФайлДляКонтроля = "D:\tmp\test_final_state_UnPosted" + СокрЛП(новый УникальныйИдентификатор()) + ".json";
	Иначе	
		ФайлДляКонтроля = Неопределено;
	КонецЕсли;

	Если МассивФинальныхСтатусов.Количество() > 0 Тогда
		РезультатОтправкиВАдминку = mas.ОтправитьМассивСтатусовЗаказов(МассивФинальныхСтатусов, "SetOrdersFinalStatus", ФайлДляКонтроля); 
		Если Не РезультатОтправкиВАдминку.Успешно Тогда
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;
	// Задача № 3191
	
	// Михушкин --->> 
	ЗаписатьДанныеРеализаций();
	// <<--- Михушкин 	
	
	//+Степанов Задача № 3945
	ЗаписатьСостоянияЗакрытияЗаказов(Ложь);	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения_до_16042020(Отказ)
	//+Степанов Задача № 3443
	//ДокументПроверен = Ложь;
	//-Степанов
	//Отказ = ТранзакционнаяМодель;
	//Если Отказ Тогда
	//	Возврат;
	//КонецеСли;	
	//Если ЕстьКорректировкиПоЗаказам() Тогда
	//    Сообщить("По документу обнаружены корректировки, отмена проведения невозможна.");    
	//	Отказ = Истина;
	//    Возврат;
	//КонецеСли;	
	
	
	ДатаЗапрета = Константы.ЗакрытаяДата.Получить();
	
	Если ЗначениеЗаполнено(ДатаЗапрета) Тогда
		Если ДатаЗакрытия <= ДатаЗапрета Тогда
			Отказ = Истина;
			Возврат;
		КонецеСли;	
	КонецеСли;	
	
	//+Степанов Задача № 3443
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗакрытиеЗаказов.Ссылка КАК Ссылка,
	               |	ЕСТЬNULL(ДокументыЗакрытыеДляИзмененияСрезПоследних.ЗакрытДляРедактирования, ЛОЖЬ) КАК ЗакрытДляРедактирования,
	               |	ЕСТЬNULL(ПроверенныеДокументыСрезПоследних.ДокументПроверен, ЛОЖЬ) КАК ДокументПроверен
	               |ИЗ
	               |	Документ.ЗакрытиеЗаказов КАК ЗакрытиеЗаказов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроверенныеДокументы.СрезПоследних(, Документ = &Ссылка) КАК ПроверенныеДокументыСрезПоследних
	               |		ПО ЗакрытиеЗаказов.Ссылка = ПроверенныеДокументыСрезПоследних.Документ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыЗакрытыеДляИзменения.СрезПоследних(, Документ = &Ссылка) КАК ДокументыЗакрытыеДляИзмененияСрезПоследних
	               |		ПО ЗакрытиеЗаказов.Ссылка = ДокументыЗакрытыеДляИзмененияСрезПоследних.Документ
	               |ГДЕ
	               |	ЗакрытиеЗаказов.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекДата = ТекущаяДата();
		Если Выборка.ЗакрытДляРедактирования Тогда
			НаборЗаписей = РегистрыСведений.ДокументыЗакрытыеДляИзменения.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(Ссылка);
			НаборЗаписей.Прочитать();
			Запись = НаборЗаписей.Добавить();
			Запись.Период = ТекДата;
			Запись.Документ = Ссылка;
			Запись.ДокументРегистратор = Ссылка;
			Запись.ЗакрытДляРедактирования = Ложь;
			НаборЗаписей.Записать();
		КонецЕсли;
		Если Выборка.ДокументПроверен Тогда
			НаборЗаписей = РегистрыСведений.ПроверенныеДокументы.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(Ссылка);
			НаборЗаписей.Прочитать();
			Запись = НаборЗаписей.Добавить();
			Запись.Период = ТекДата;
			Запись.Документ = Ссылка;
			Запись.ДокументПроверен = Ложь;
			Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			НаборЗаписей.Записать();
		КонецЕсли;	
	КонецЕсли;	
	//-Степанов Задача № 3443
	
	//#Если Клиент Тогда
	//	ФормаИндикатора = ПолучитьОбщуюФорму("новаФормаИндикатора", , "ПрогрессФормированияРейсов");
	//	ФормаИндикатора.Заголовок = "Проведение закрытия";
	//	ФормаИндикатора.МинимальноеЗначение = 0;
	//	ФормаИндикатора.МаксимальноеЗначение = 1;
	//	ФормаИндикатора.КартинкаЗаголовка = БиблиотекаКартинок.новаАвтоматическоеПланирование;
	//	//ФормаИндикатора.ПодключитьОбработчикОжидания("АвтоЗакрытие", 1);
	//	ФормаИндикатора.Открыть();
	//#КонецЕсли
	#Если Клиент Тогда
	ФормаИндикацииХодаЗагрузки = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаИндикацииХодаЗагрузки.НаименованиеОбработкиДанных = "Закрытие заказов";
	ФормаИндикацииХодаЗагрузки.Открыть();
	
	ФормаИндикацииХодаЗагрузки.КомментарийОбработкиДанных = "Распроведение заказов";
	
	ФормаИндикацииХодаЗагрузки.Значение = 0;
	#КонецЕсли
	//БлокировкаДанных = Новый БлокировкаДанных;
	//
	//Если ТипДоставки = Перечисления.ТипыЗаказов.Доставка Тогда
	//	ЭлБлок = БлокировкаДанных.Добавить("Документ.РеализацияТоваровУслуг");
	//ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Фрахт Тогда
	//	ЭлБлок = БлокировкаДанных.Добавить("Документ.Фрахт");
	//ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Забор Тогда
	//	ЭлБлок = БлокировкаДанных.Добавить("Документ.ЗаборТовара");
	//ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз Тогда
	//	ЭлБлок = БлокировкаДанных.Добавить("Документ.РеализацияТоваровУслуг");
	//КонецеСли;
	//
	//ЭлБлок.ИсточникДанных = Заказы;
	//ЭлБлок.ИспользоватьИзИсточникаДанных("Ссылка", "Реализация");
	//
	//ЭлБлок = БлокировкаДанных.Добавить("Документ.ПеремещениеТоваров");
	//ЭлБлок.ИсточникДанных = Заказы;
	//ЭлБлок.ИспользоватьИзИсточникаДанных("Ссылка", "Перемещение");
	//
	//БлокировкаДанных.Заблокировать();
	
	//НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	// ОбновитьЗаказыВАдминке("ОтменаПроведения"); // Отключено по Задача № 3357
	
	// ++ Задача № 3185
	МассивЗаказов = Заказы.ВыгрузитьКолонку("Реализация");	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	ДатыДоставокСрезПоследних.Заказ КАК Заказ,
	|	ДатыДоставокСрезПоследних.ДатаДоставки КАК ДатаДоставки
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыДоставок.СрезПоследних КАК ДатыДоставокСрезПоследних
	|		ПО РеализацияТоваровУслуг.Ссылка = ДатыДоставокСрезПоследних.Заказ
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивЗаказов)";
	
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);	
	ИсторическиеДатыДоставок = Запрос.Выполнить().Выгрузить();
	// -- Задача № 3185

	
	ОтменитьСтатусЗакрытия(ИсторическиеДатыДоставок);
    ОтменитьСтатусОтклонен(ИсторическиеДатыДоставок);
	
	
    //Серегин М.В. 04.06.2015 14:48:12 добавил ИЛИ ТипДоставки = Перечисления.ТипыЗаказов.Фрахт 
    //+++++Серегин М.В. 16.09.2015 15:50:30 доавил ЗАБОР
	//Если ТипДоставки = Перечисления.ТипыЗаказов.Доставка Или ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз ИЛИ ТипДоставки = Перечисления.ТипыЗаказов.Фрахт ИЛИ ТипДоставки = Перечисления.ТипыЗаказов.Забор  Тогда
        Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
        Для Каждого Тек Из заказы Цикл
            Если Тек.Закрыть Или Тек.Отклонить Тогда
                ТекстЗапроса = "import_revertOrderProductCountFrom1C " + СокрЛП(Тек.Реализация.Номер) + ", " + Формат(Тек.СуммаДоставкиДоМКАД, "ЧРД=.; ЧН=0; ЧГ=") + ", " + Формат(Тек.СуммаДоставкиЗаМКАД, "ЧРД=.; ЧН=0; ЧГ=") + ", 2";
                Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
                
                //Серегин М.В. 16.07.2015 14:13:36 
                //Обновление таблицы
                orderID = СокрЛП(Тек.Реализация.Номер);
                serviceID = 6;
                who = ПараметрыСеанса.ТекущийПользователь;
                count = 0;
                price = Формат(Тек.Показатель2, "ЧРД=.; ЧН=0; ЧГ=");
                
                Если Тек.Показатель2>0 Тогда
                    ТекстЗапроса = "
                    |DECLARE @t TOrderService
                    |INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +
                    orderID +","+serviceID+",'"+who+"',"+ count+","+price+")
                    |EXEC import_updateOrdersServices @t
                    |";
                    Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
                КонецЕсли;
                
                Если ДатаЗакрытия >= Дата("20150727000000") Тогда
                    
                    //Серегин М.В. 23.07.2015 18:38:50 обновление в админке услуг
                    ПараметрыОтбора = Новый Структура("Реализация", Тек.Реализация);
                    СтрокиУслуги = Услуги.НайтиСтроки(ПараметрыОтбора);
                    Для каждого СтрСУ Из СтрокиУслуги Цикл
                        price = Формат(СтрСУ.СуммаДляИзменения, "ЧРД=.; ЧН=0; ЧГ=");
                        serviceID = СтрСУ.Услуга.НомерПоказателяАдминки;
                        Если serviceID <> 6 Тогда
                            ТекстЗапроса = "
                            |DECLARE @t TOrderService
                            |INSERT INTO @t ([orderID],[serviceID],[who],[cnt],[price]) VALUES (" +orderID +","+serviceID+",'"+who+"',"+count+","+price+")
                            |EXEC import_updateOrdersServices @t
                            |";
                            Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
                        КонецЕсли;
                    КонецЦикла;
                    //Серегин М.В. 15.07.2015 12:52:03 
                КонецеСли;
            КонецеСли;	
        КонецЦикла;	
	//КонецеСли;
	
	//ЗафиксироватьТранзакцию();
	//#Если Клиент Тогда
	//	ФормаИндикатора.Закрыть();
	//#КонецЕсли
	
	//+++ Костя 13112015 // Удаление отказных позиций из 1с в админке
	УдалитьОтказныеПозицииИз1СВАдминке();
	//+++ Костя 13112015 
	ОбновитьСуммыКомиссийВАдминке(0, Соединение);
	#Если Клиент Тогда
	
	ФормаИндикацииХодаЗагрузки.Закрыть();
	#КонецЕсли

	// Михушкин --->> 
	СтатусыЗакрытияЗаказов(РежимЗаписиДокумента.ОтменаПроведения);
	// <<--- Михушкин
	
	// Презварительное закрытие 
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
	
	МассивФинальныхСтатусов = Новый Массив;
	
	//МассивЗарегистированных =  Новый Массив; //УДАЛИТЬ!!! ТОЛЬКО ТЕСТ!!!
		
	Для каждого Стр Из Заказы Цикл		
		Если Стр.ПредварительноеЗакрытие И (Стр.Закрыть ИЛИ Стр.Отклонить) Тогда
			
			
			// Задача 2586
			СтатусКЗаписи = 0;
			//Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда					
			//	СтатусКЗаписи = 301;
			//ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
			//	СтатусКЗаписи = 302;
			//ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена 
			//	И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
			//	СтатусКЗаписи = 303;
			//ИначеЕсли  Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена
			//	И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
			//	СтатусКЗаписи = 304;
			//Иначе 
			//	СтатусКЗаписи = 401;
			//КонецЕсли; 
			// Задача 2586
			
			// текст для передварительного закрытия
			orderID = СокрЛП(Стр.Реализация.Номер);
			Status = Строка(Стр.Реализация.СтатусИнтернетМагазина);
			who = ПараметрыСеанса.ТекущийПользователь;
			completeDate = Евген.ДатаВSQL(ТекущаяДата(), Ложь);
			serviceDC = Формат(Стр.Реализация.УслугиСД, "ЧРД=.; ЧН=0; ЧГ=");
			serviceDCclean = Формат(Стр.Реализация.УслугиСДЧистые, "ЧРД=.; ЧН=0; ЧГ=");
			Комм = "Предварительное закрытие";
			comment = СтрЗаменить(Комм, "'", """");
			isRefusal = ?(Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена, 1, 0);
			ReasonRefusal = "" + Стр.ПричинаНевыполнения;
			//CeHbKA #3225
			reasonId = "" + СокрЛП(Стр.ПричинаОтказа.Код);
			//CeHbKA #3225			
			deliveryPrice = Формат(Стр.СуммаДоставкиДоМКАД + Стр.СуммаДоставкиЗаМКАД, "ЧРД=.; ЧН=0; ЧГ=0");
			payType  = Стр.ТипОплаты.Код;
			closeFlag = 1;		
			
			// Отключено в рамках Задача № 2586
			//СтрокаЗапросаПЗ = "
			//|DECLARE @t TSetOrderStatus
			//|INSERT INTO @t ([orderID],[statusId],[who],[completeDate],serviceDC,serviceDCclean,comment, isRefusal, ReasonRefusal, deliveryPrice, payType, closeFlag) VALUES (" +
			//orderID +", " +Status+", '" +who+"', '"+completeDate+"', "+serviceDC+"," +serviceDCclean+",'" +comment+"', "+isRefusal+ ", '" +ReasonRefusal+"', "+deliveryPrice+ ", " +payType+ ", "+closeFlag+")
			//|EXEC import_setOrderStatusFrom1C @t
			//|";
			//Евген.ЗапросКИнтернетМагазину(СтрокаЗапросаПЗ, Подкл);
			
			//// Задача № 2586 						
			//mas.ОтправитьФинальныйСтатусВАдминку(orderID, Стр.Реализация.СтатусИнтернетМагазина, comment,
			//who,
			//ТекущаяДата(),
			//serviceDC,
			//serviceDCclean,
			//IsRefusal,
			//ReasonRefusal,
			//deliveryPrice,
			//payType,
			//,
			//,
			//closeFlag,
			//ТерминалДоставки.Код);
			//// Задача № 2586
			
			// Задача № 3191 						
			МассивФинальныхСтатусов = mas.ДобавитьФинальныйСтатусКПакету(orderID, Стр.Реализация.СтатусИнтернетМагазина, comment,
			who,
			ТекущаяДата(),
			serviceDC,
			serviceDCclean,
			IsRefusal,
			ReasonRefusal,
			deliveryPrice,
			payType,
			,
			,
			closeFlag,
			ТерминалДоставки.Код,
			,
			МассивФинальныхСтатусов);
			// Задача № 3191

			//Задача № 3241 НЕОБХОДИМО УТОЧНЕНИЕ ПОСТАНОВЩИКА: ЕМ 16:55 19.07.2019 - Не определять и не передавать FinalStatusId
			
			////УДАЛИТЬ!!! ТОЛЬКО ТЕСТ!!!
			//Если НЕ МассивЗарегистированных.Найти(Стр.Реализация) = Неопределено Тогда
			//	Продолжить;
			//Иначе
			//	МассивЗарегистированных.Добавить(Стр.Реализация);
			//Конецесли;
			////УДАЛИТЬ!!! ТОЛЬКО ТЕСТ!!!

			// Задача № 2586, 1 этап переделки записи статусов
			РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(Стр.Реализация, СтатусКЗаписи, Стр.Реализация.СтатусИнтернетМагазина, Ссылка);
			// Задача № 2586, 1 этап переделки записи статусов
			
		КонецЕсли;
	КонецЦикла;
		
	// Задача № 3191
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		ФайлДляКонтроля = Неопределено;
		// для теста ФайлДляКонтроля = "D:\tmp\test_final_state_UnPosted" + СокрЛП(новый УникальныйИдентификатор()) + ".json";
	Иначе	
		ФайлДляКонтроля = Неопределено;
	КонецЕсли;

	Если МассивФинальныхСтатусов.Количество() > 0 Тогда
		РезультатОтправкиВАдминку = mas.ОтправитьМассивСтатусовЗаказов(МассивФинальныхСтатусов, "SetOrdersFinalStatus", ФайлДляКонтроля); 
		Если Не РезультатОтправкиВАдминку.Успешно Тогда
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;
	// Задача № 3191
	
	// Михушкин --->> 
	ЗаписатьДанныеРеализаций();
	// <<--- Михушкин 	     /
	
	//+Степанов
	ЗаписатьСостоянияЗакрытияЗаказов(Ложь);
	//-Степанов
		
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//Асеев 09.02.2024 (Задача № 5227)>>>
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Или РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		зпРаботаСРасчетомЗарплатыСервер.ПередЗаписьюДокументаЗП(Отказ, РежимЗаписи, ЭтотОбъект);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	//Асеев 09.02.2024 (Задача № 5227)<<<	
	
	Если ДополнительныеСвойства.Свойство("ОбходПроверок")  Тогда
		Возврат;
	КонецЕсли;	
	
	//+Степанов Задача № 3443
	//Если Проведен И (ДокументПроверен <> Ссылка.ДокументПроверен) Тогда
	//	Возврат;	
	//КонецЕсли;
	//-Степанов
	
	//Асеев 11.03.2024 (Задача № 5241)>>>
	УжеЗаписан = Не ЭтоНовый();
	Если УжеЗаписан Тогда
		//Асеев 11.03.2024 (Задача № 5241)<<<
		//CeHbKA
		Отказ = baoВызовСервера.РейсЗакрыт(Ссылка);
		
		Если Отказ Тогда
			Сообщить("Рейс Закрыт");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//+++ БАО 25.07.2017 №1334  
	
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
		
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ПередЗаписью. Начало.", ДополнительныеСвойства);  
		
	КонецЕсли;	
	
	//--- БАО 25.07.2017 №1334  
	
	//Асеев 11.03.2024 (Задача № 5241)>>>
	Если УжеЗаписан Тогда
		Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			ОтменитьКорректировкиПоЗаказам();
		ИначеЕсли ЕстьКорректировкиПоЗаказам() Тогда
			//Асеев 11.03.2024 (Задача № 5241)<<<
			
			Сообщить("По документу обнаружены корректировки, запись документа невозможна.");    
			Отказ = Истина;
			
			//+++ БАО 20.07.2017 №1334  
			
			Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
				
				bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". По документу обнаружены корректировки, запись документа невозможна.", ДополнительныеСвойства);  
				
			КонецЕсли;	
			
			//--- БАО 20.07.2017 №1334  
			
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ДатаЗакрытия <= Дата("20150630235959") Тогда   
		Отказ = Истина;
		
		//+++ БАО 20.07.2017 №1334  
		
		Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
			bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ДатаЗакрытия <= Дата(20150630235959)", ДополнительныеСвойства);  
			
		КонецЕсли;	
		
		//--- БАО 20.07.2017 №1334  
		
		Возврат;
	КонецеСли;	
	
	ДатаЗапрета = Константы.ЗакрытаяДата.Получить();
	
	Если ЗначениеЗаполнено(ДатаЗапрета) Тогда
		Если ДатаЗакрытия <= ДатаЗапрета Тогда
			Отказ = Истина;
			
			//+++ БАО 20.07.2017 №1334  
			
			Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
				
				bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ДатаЗакрытия <= ДатаЗапрета", ДополнительныеСвойства);  
				
			КонецЕсли;	
			
			//--- БАО 20.07.2017 №1334  

			
			Возврат;
		КонецеСли;	
	КонецеСли;	
	
	Отказ = ТранзакционнаяМодель И БылПроведен;
	Если Отказ Тогда
		//+++ БАО 20.07.2017 №1334  
		
		Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
			bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ТранзакционнаяМодель И БылПроведен", ДополнительныеСвойства);  
			
		КонецЕсли;	
		
		//--- БАО 20.07.2017 №1334  
		Возврат;
	КонецеСли;	
	
	
	//+++ БАО 25.07.2017 №1334  
	
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
		
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ПередЗаписью. Проверка реквизита Закрыть", ДополнительныеСвойства);  
		
	КонецЕсли;	
	
	//--- БАО 25.07.2017 №1334  
		

	
	// Михушкин - 08.04.2016 - проверка на корректность статусов закрытых заказов --->> 	
	//Если НЕ ЭтотОбъект.ТипДоставки = Перечисления.ТипыЗаказов.Фрахт Тогда
		Для Каждого Стр Из Заказы Цикл
			Если  Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Фрахт Тогда
				Продолжить;
			КонецеСли;	
			Если Стр.Закрыть Тогда
				
				Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена
					ИЛИ Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично
					ИЛИ (Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом) Тогда
				Иначе
					//Геннадий #3247 от 21.09.2021 комментарий по задаче ->
					////ищем допуслугу
					//Струк = Новый Структура;
					//Струк.Вставить("Реализация", Стр.Реализация.Ссылка);
					//Струк.Вставить("Услуга", Справочники.ПоказателиРасчетаУслугСД.ДоставкаСТерминалаВыдачиНаТерминалПриема.Ссылка);
					//
					//Най = Услуги.НайтиСтроки(Струк);
					//Если Най.Количество() = 0 Тогда
					//	Сообщить("Для строки " + Стр.НомерСтроки + " нельзя установить статус ""Закрыт"" для текущего результата доставки ( " + Стр.РезультатДоставки + ", " + Стр.ПричинаНевыполнения + " )");
					//	
					//	//+++ БАО 20.07.2017 №1334  
					//	
					//	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
					//		
					//		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". Для строки " + Стр.НомерСтроки + " нельзя установить статус ""Закрыт"" для текущего результата доставки ( " + Стр.РезультатДоставки + ", " + Стр.ПричинаНевыполнения + " )", ДополнительныеСвойства);  
					//								
					//	КонецЕсли;	
					//	
					//	//--- БАО 20.07.2017 №1334  						
					//	
					//	Отказ = Истина;	
					//	Возврат;
					//КонецЕсли;	
					//Геннадий #3247 <-
				КонецЕсли;
				
			КонецЕсли;	
		КонецЦикла;	
	//КонецЕсли;		
	// <<--- Михушкин 
	
	//+++ БАО 25.07.2017 №1334  
	
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
		
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ПередЗаписью. Проверка реквизитов Отклонить и БылПереносСЗаездом", ДополнительныеСвойства);  
		
	КонецЕсли;	
	
	//--- БАО 25.07.2017 №1334  
	
	МасАдресатовОшибкиОтклоненногоЗакрытия = Новый Массив; //Задача № 3247
	//МасАдресатовОшибкиОтклоненногоЗакрытия.Добавить("evgeniy.marochkin@strizh-logistic.ru");
	МасАдресатовОшибкиОтклоненногоЗакрытия.Добавить("r.drobnitsa@strizh-logistic.ru");
	МасАдресатовОшибкиОтклоненногоЗакрытия.Добавить("tovaroved@strizh-logistic.ru");
	
	// Михушкин --->> 
	Если РежимЗаписи <> РежимЗаписиДокумента.ОтменаПроведения Тогда
		Для каждого Стр Из Заказы Цикл
			Если ТипЗнч(Стр.Реализация.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				
				//+++ БАО 25.09.2017 №
				НоваМестнаяДоставкаСсылка = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Стр.Реализация.Номер);
								
				//---Если Стр.Отклонить И Стр.БылПереносСЗаездом Тогда
				
				Если Стр.Отклонить И Стр.БылПереносСЗаездом И ЗначениеЗаполнено(НоваМестнаяДоставкаСсылка)Тогда
					
					//--- БАО 25.09.2017 №
					
					Если ВариантЗаполнения = 3 Тогда //Задача № 3247
						
						Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
						Иначе
							Стр.Отклонить = Ложь;
							
							Если МасАдресатовОшибкиОтклоненногоЗакрытия.Количество() > 0 Тогда
								
								ТесктПисьма = "Заказ " + Стр.Реализация + " невозможно отклонить, так как по нему был перенос с заездом.";						
								lem.ОтправитьСообщение(МасАдресатовОшибкиОтклоненногоЗакрытия, "Авт. закрытие заказов с перенос с заездом", ТесктПисьма);
								
							КонецЕсли;
							
							Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
								
								bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". Заказ " + Стр.Реализация + " невозможно отклонить, так как по нему был отказ с заездом.", ДополнительныеСвойства);  
								
							КонецЕсли;
						КонецЕсли;
					Иначе
						//++  Старый алгоритм работы
						
						#Если Клиент Тогда
							Сообщить("Заказ " + Стр.Реализация + " невозможно отклонить, так как по нему был отказ с заездом.");
						#КонецЕсли
						Отказ = Истина;	
						
						//+++ БАО 20.07.2017 №1334  
						
						Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
							
							bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". Заказ " + Стр.Реализация + " невозможно отклонить, так как по нему был отказ с заездом.", ДополнительныеСвойства);  
							
						КонецЕсли;	
						
						//--- БАО 20.07.2017 №1334  
						
						Возврат;
						
						//--  Старый алгоритм работы
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	// <<--- Михушкин 
	
	//+++ БАО 25.07.2017 №1334  
	
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
		
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ПередЗаписью. Проверка - Ненулевая сумма доставки при отказе", ДополнительныеСвойства);  
		
	КонецЕсли;	
	
	//--- БАО 25.07.2017 №1334 	
	
	// Михушкин - 14.06.2016 --->> 
	Если РежимЗаписи <> РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		ФлагСообщения = Ложь;
		ТекстСообщения = "Ненулевая сумма доставки при отказе с заездом для следующих заказов: " + Символы.ПС;
		
		Для каждого Стр Из Заказы Цикл
			Если ТипЗнч(Стр.Реализация.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда		
				
				Если Стр.Закрыть И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом 
					И (Стр.СуммаДоставкиДоМКАД <> 0 ИЛИ Стр.СуммаДоставкиЗаМКАД <> 0) Тогда
				   
					Отказ = Истина;	
					ФлагСообщения = Истина;
					ТекстСообщения = ТекстСообщения + "Строка: " + Стр.НомерСтроки + ", Заказ: " + Стр.Реализация + Символы.ПС; 
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;		
		
		Если ФлагСообщения Тогда
		
			#Если Клиент Тогда
			Сообщить(ТекстСообщения);
			#КонецЕсли
		
			//+++ БАО 20.07.2017 №1334  
			
			Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
				
				bao.ЗаписатьВФайлЛогаОтказа(ТекстСообщения, ДополнительныеСвойства);  
				
			КонецЕсли;	
			
			//--- БАО 20.07.2017 №1334  
			
		    Возврат;
		КонецЕсли;
		
	КонецЕсли;
	// <<--- Михушкин 
	
	
	
	//Зап = Новый Запрос;
	//Зап.Текст = "ВЫБРАТЬ
	//            |	ЗакрытиеЗаказовКорректировка.Ссылка
	//            |ИЗ
	//            |	Документ.ЗакрытиеЗаказовКорректировка КАК ЗакрытиеЗаказовКорректировка
	//            |ГДЕ
	//            |	ЗакрытиеЗаказовКорректировка.КорректируемыйДокумент = &КорректируемыйДокумент";
	//Зап.УстановитьПараметр("КорректируемыйДокумент", Ссылка);	
	//Отказ = Не Зап.Выполнить().Пустой();
	СуммаДокумента = Заказы.Итог("Сумма");
	Струк = Новый Структура;
	
	Струк.Вставить("Закрыть", Истина);
	Най = Заказы.НайтиСтроки(Струк);
	КоличествоЗакрытыхЗаказов = Най.Количество();
	
	Струк = Новый Структура;	
	Струк.Вставить("Отклонить", Истина);
	Най = Заказы.НайтиСтроки(Струк);
	КоличествоОтклоненныхЗаказов = Най.Количество();
	
	
	// проверка на возможность частички
	
	ЗаказСЧастичкой = "";
	
	//+++ БАО 25.07.2017 №1334  
	
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
		
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ПередЗаписью. Проверка - УчитыватьИтогоКОплате", ДополнительныеСвойства);  
		
	КонецЕсли;	
	
	//--- БАО 25.07.2017 №1334 	

	Для Каждого Тек Из Заказы Цикл
		Если Не Тек.Закрыть Тогда
			Продолжить;
		КонецеСли;	
		Если Тек.УчитыватьИтогоКОплате Тогда
			Струк = новый Структура;
			Струк.Вставить("Реализация", Тек.Реализация);
			НайТов = Товары.НайтиСтроки(Струк);
			Сум = 0;
			ИтСумН = 0;
			Для Сч = 0 По НайТов.Количество() - 1 Цикл
				Сум = Сум + НайТов[Сч].Сумма - НайТов[Сч].СуммаНовая;
				ИтСумН = ИтСумН + НайТов[Сч].СуммаНовая;
			КонецЦикла;
			Если Сум <> 0 И ИтСумН <> 0 И Тек.ЗапретЧастичногоВыкупа Тогда
				ЗаказСЧастичкой = СокрЛП(Тек.Номер);
				Прервать;
			КонецеСли;	
		КонецеСли;	
	КонецЦикла;	
	
	Если ЗначениеЗаполнено(ЗаказСЧастичкой) И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Отказ = Истина;
		#Если Клиент Тогда
			Сообщить("По заказу № " + ЗаказСЧастичкой + " установлен запрет частичного выкупа, но при этом обнаружен частичный выкуп!", СтатусСообщения.ОченьВажное);
		#КонецЕсли	
		
		//+++ БАО 20.07.2017 №1334  
		
		Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
			bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". По заказу № " + ЗаказСЧастичкой + " установлен запрет частичного выкупа, но при этом обнаружен частичный выкуп!", ДополнительныеСвойства);  
			
		КонецЕсли;	
		
		//--- БАО 20.07.2017 №1334 
		
	КонецеСли;	
	
	//Асеев 11.10.2021 (по письму Леруа отмена)>>>
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ОтказЗаказыНеБылиВРейсе = Ложь;
		СтрокиЗаказы = Заказы.НайтиСтроки(Новый Структура("Закрыть,ПричинаНевыполнения", Истина, Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом));
		Для Каждого СтрокаЗаказа Из СтрокиЗаказы Цикл
			Если РейсыПоЗаказам.Найти(СтрокаЗаказа.Реализация, "Заказ") = Неопределено Тогда
				ОтказЗаказыНеБылиВРейсе = Истина;
				Сообщить("Заказ " + СтрокаЗаказа.Реализация + " не был в рейсе, он не может быть закрыт с ""Отказом с заездом""!");
			КонецЕсли;
		КонецЦикла;
		Если ОтказЗаказыНеБылиВРейсе Тогда
			Отказ = Истина;
			
			Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
				
				bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ПередЗаписью. Проверка - ОтказЗаказыНеБылиВРейсе", ДополнительныеСвойства);  
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	//Асеев 11.10.2021 (по письму Леруа отмена)<<<
	
	//+++ БАО 25.07.2017 №1334  
	
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
		
		bao.ЗаписатьВФайлЛогаОтказа("Отказ: " + Отказ + ". ПередЗаписью. Конец.", ДополнительныеСвойства);  
		
	КонецЕсли;	
	
	//--- БАО 25.07.2017 №1334 
	
КонецПроцедуры

Процедура ПроверкиПоСтатусамЗакрытия(Отказ)
	// Проверки по статусам закрытия	
	//Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	РежимЗаписи = РежимЗаписиДокумента.Проведение;
	
		//ЗапросПроверкаСтатусов = Новый Запрос("ВЫБРАТЬ
		//                                      |	ЗакрытиеЗаказовЗаказы.Доставка,
		//                                      |	ЗакрытиеЗаказовЗаказы.ПредварительноеЗакрытие,
		//                                      |	СтатусыЗакрытияЗаказовСрезПоследних.СтатусЗакрытия,
		//                                      |	ВЫБОР
		//                                      |		КОГДА СтатусыЗакрытияЗаказовСрезПоследних.СтатусЗакрытия ЕСТЬ NULL 
		//                                      |			ТОГДА ЛОЖЬ
		//                                      |		ИНАЧЕ ИСТИНА
		//                                      |	КОНЕЦ КАК ЕстьЗапись
		//                                      |ПОМЕСТИТЬ ВТ
		//                                      |ИЗ
		//                                      |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
		//                                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗакрытияЗаказов.СрезПоследних(&Период, ) КАК СтатусыЗакрытияЗаказовСрезПоследних
		//                                      |		ПО ЗакрытиеЗаказовЗаказы.Реализация = СтатусыЗакрытияЗаказовСрезПоследних.Заказ
		//                                      |ГДЕ
		//                                      |	ЗакрытиеЗаказовЗаказы.Ссылка.Ссылка = &Ссылка
		//                                      |	И СтатусыЗакрытияЗаказовСрезПоследних.ДокументРегистратор <> &Ссылка
		//                                      |	И (ЗакрытиеЗаказовЗаказы.Закрыть
		//                                      |			ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить)
		//                                      |;
		//                                      |
		//                                      |////////////////////////////////////////////////////////////////////////////////
		//                                      |ВЫБРАТЬ
		//                                      |	ВТ.Доставка,
		//                                      |	ВТ.ПредварительноеЗакрытие,
		//                                      |	ВТ.СтатусЗакрытия,
		//                                      |	ВТ.ЕстьЗапись
		//                                      |ИЗ
		//                                      |	ВТ КАК ВТ
		//                                      |ГДЕ
		//                                      |	НЕ ВТ.СтатусЗакрытия ЕСТЬ NULL ");
		//ЗапросПроверкаСтатусов.УстановитьПараметр("Ссылка", Ссылка);
		//ЗапросПроверкаСтатусов.УстановитьПараметр("Период", Ссылка.ДатаЗакрытия);
		//РезПроверкаСтатусов = ЗапросПроверкаСтатусов.Выполнить().Выбрать();	
		
		ЗапросПроверкаСтатусов = Новый Запрос("ВЫБРАТЬ
		                                      |	ЗакрытиеЗаказовЗаказы.Доставка,
		                                      |	ЗакрытиеЗаказовЗаказы.ПредварительноеЗакрытие,
		                                      |	ЗакрытиеЗаказовЗаказы.Реализация
		                                      |ПОМЕСТИТЬ ВТ
		                                      |ИЗ
		                                      |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
		                                      |ГДЕ
		                                      |	ЗакрытиеЗаказовЗаказы.Ссылка.Ссылка = &Ссылка
		                                      |	И (ЗакрытиеЗаказовЗаказы.Закрыть
		                                      |			ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить)
		                                      |;
		                                      |
		                                      |////////////////////////////////////////////////////////////////////////////////
		                                      |ВЫБРАТЬ
		                                      |	МАКСИМУМ(СтатусыЗакрытияЗаказов.Период) КАК Период,
		                                      |	СтатусыЗакрытияЗаказов.Заказ
		                                      |ПОМЕСТИТЬ ВТ_Статусы
		                                      |ИЗ
		                                      |	ВТ КАК ВТ
		                                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗакрытияЗаказов КАК СтатусыЗакрытияЗаказов
		                                      |		ПО ВТ.Реализация = СтатусыЗакрытияЗаказов.Заказ
		                                      |ГДЕ
		                                      |	СтатусыЗакрытияЗаказов.ДокументРегистратор <> &Ссылка
		                                      |	И СтатусыЗакрытияЗаказов.Период < &Период
		                                      |
		                                      |СГРУППИРОВАТЬ ПО
		                                      |	СтатусыЗакрытияЗаказов.Заказ
		                                      |;
		                                      |
		                                      |////////////////////////////////////////////////////////////////////////////////
		                                      |ВЫБРАТЬ
		                                      |	СтатусыЗакрытияЗаказов.СтатусЗакрытия,
		                                      |	ВЫБОР
		                                      |		КОГДА СтатусыЗакрытияЗаказов.СтатусЗакрытия ЕСТЬ NULL
		                                      |			ТОГДА ЛОЖЬ
		                                      |		ИНАЧЕ ИСТИНА
		                                      |	КОНЕЦ КАК ЕстьЗапись,
		                                      |	ВТ.Доставка,
		                                      |	ВТ.ПредварительноеЗакрытие
		                                      |ПОМЕСТИТЬ ВТ_2
		                                      |ИЗ
		                                      |	ВТ КАК ВТ
		                                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Статусы КАК ВТ_Статусы
		                                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗакрытияЗаказов КАК СтатусыЗакрытияЗаказов
		                                      |			ПО ВТ_Статусы.Период = СтатусыЗакрытияЗаказов.Период
		                                      |				И ВТ_Статусы.Заказ = СтатусыЗакрытияЗаказов.Заказ
		                                      |		ПО ВТ.Реализация = ВТ_Статусы.Заказ
		                                      |;
		                                      |
		                                      |////////////////////////////////////////////////////////////////////////////////
		                                      |ВЫБРАТЬ
		                                      |	ВТ_2.Доставка,
		                                      |	ВТ_2.ПредварительноеЗакрытие,
		                                      |	ВТ_2.СтатусЗакрытия,
		                                      |	ВТ_2.ЕстьЗапись
		                                      |ИЗ
		                                      |	ВТ_2 КАК ВТ_2
		                                      |ГДЕ
		                                      |	НЕ ВТ_2.СтатусЗакрытия ЕСТЬ NULL");
		ЗапросПроверкаСтатусов.УстановитьПараметр("Ссылка", Ссылка);
		ЗапросПроверкаСтатусов.УстановитьПараметр("Период", Ссылка.ДатаЗакрытия);
		РезПроверкаСтатусов = ЗапросПроверкаСтатусов.Выполнить().Выбрать();	
		
		
		ТекстОшибки = "";	
		
		Пока РезПроверкаСтатусов.Следующий() Цикл
			Если РежимЗаписи = РежимЗаписиДокумента.Проведение И РезПроверкаСтатусов.ПредварительноеЗакрытие И РезПроверкаСтатусов.СтатусЗакрытия = Перечисления.СтатусыПредварительногоЗакрытияЗаказов.ЗаказЗакрытОкончательно Тогда			
				ТекстОшибки = ТекстОшибки +	 "Заказ " + РезПроверкаСтатусов.Доставка + " уже закрыт товароведом" + Символы.ПС;			
			ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Проведение И РезПроверкаСтатусов.ПредварительноеЗакрытие И РезПроверкаСтатусов.СтатусЗакрытия = Перечисления.СтатусыПредварительногоЗакрытияЗаказов.ЗаказОткрыт Тогда	 
				ТекстОшибки = ТекстОшибки +	 "Заказ " + РезПроверкаСтатусов.Доставка + " не закрыт предварительно (кассиром)" + Символы.ПС;					
			КонецЕсли;	
			
			Если РезПроверкаСтатусов.ПредварительноеЗакрытие И НЕ РезПроверкаСтатусов.ЕстьЗапись Тогда				
				ТекстОшибки = ТекстОшибки +	 "Заказ " + РезПроверкаСтатусов.Доставка + " не закрыт предварительно (кассиром)" + Символы.ПС	
			КонецЕсли;
		КонецЦикла; 
			
		Если ТекстОшибки <> "" Тогда
			#Если Клиент Тогда
				Сообщить(ТекстОшибки);	
				Отказ = Истина;
			#КонецЕсли
			
			//+++ БАО 20.07.2017 №1334  
			
			Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
				
				bao.ЗаписатьВФайлЛогаОтказа(ТекстОшибки, ДополнительныеСвойства);  
				
			КонецЕсли;	
			
			//--- БАО 20.07.2017 №1334 
		
		КонецЕсли;	
	//КонецЕсли;
	
	
	// проверка на ЗапретУстановкиСуммыПодъемаВодителюБольшеВыставленной --->>>
	//Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ЗакрытиеЗаказовЗаказы.ВладелецТовара
		                      |ПОМЕСТИТЬ ВТ_контрагенты
		                      |ИЗ
		                      |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
		                      |ГДЕ
		                      |	ЗакрытиеЗаказовЗаказы.Ссылка.Ссылка = &Ссылка
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ЗакрытиеЗаказовЗаказы.ВладелецТовара
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВТ_контрагенты.ВладелецТовара,
		                      |	ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.ЗапретУстановкиСуммыПодъемаВодителюБольшеВыставленной, ЛОЖЬ) КАК ЗапретУстановлен
		                      |ИЗ
		                      |	ВТ_контрагенты КАК ВТ_контрагенты
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(, ) КАК ПараметрыКонтрагентовСрезПоследних
		                      |		ПО ВТ_контрагенты.ВладелецТовара = ПараметрыКонтрагентовСрезПоследних.Контрагент");
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		ТЗЗапретыКонтрагентов = Запрос.Выполнить().Выгрузить();
				
		СообщениеТекст = "";
		Для каждого Стр Из Заказы Цикл
			Если Стр.Закрыть ИЛИ Стр.Отклонить Тогда
							
				НайУсл = Услуги.НайтиСтроки(Новый Структура("Реализация", Стр.Реализация));
				Для каждого УслСтр Из НайУсл Цикл				
					Если УслСтр.Услуга = Справочники.ПоказателиРасчетаУслугСД.Подъем Тогда		
						
						НайЗапрет = ТЗЗапретыКонтрагентов.НайтиСтроки(Новый Структура("ВладелецТовара", Стр.ВладелецТовара));
						Если НайЗапрет.Количество() И НайЗапрет[0].ЗапретУстановлен Тогда						
							Если УслСтр.СуммаДляИзменения < Стр.ПодъемВодитель Тогда					
								СообщениеТекст = СообщениеТекст + "Сумма подъема водителя не должна превышать сумму подъема полученную от партнера для контрагента " + Стр.ВладелецТовара +" (Заказ: "+ Стр.Реализация +")" + Символы.ПС;					
							КонецЕсли;                                                                                                                                     
						КонецЕсли;
						
					КонецЕсли;						
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
		
			
		Если СообщениеТекст <> "" Тогда	
			//#Если Клиент Тогда
				Сообщить(СообщениеТекст);
			//#КонецЕсли
			Отказ = Истина;
			
			//+++ БАО 20.07.2017 №1334  
			
			Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
				
				bao.ЗаписатьВФайлЛогаОтказа(СообщениеТекст, ДополнительныеСвойства);  
				
			КонецЕсли;	
			
			//--- БАО 20.07.2017 №1334 

			
		КонецЕсли;
		
	//КонецЕсли;	
	// проверка на ЗапретУстановкиСуммыПодъемаВодителюБольшеВыставленной ---<<<
	
	
	
	
	//Проверки на обратное движение товара --->>>
	//Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		СписокДляПроверки = Новый СписокЗначений;
		Для каждого Стр Из Заказы Цикл
			Если Стр.Закрыть Тогда
							
				СписокДляПроверки.Добавить(Стр.Реализация);
		 									
	        КонецЕсли;
		КонецЦикла;
		
		ТекстСообщения = "";
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ЗакрытиеЗаказовОпцииЗаказов.Заказ
		                      |ПОМЕСТИТЬ ВТ
		                      |ИЗ
		                      |	Документ.ЗакрытиеЗаказов.ОпцииЗаказов КАК ЗакрытиеЗаказовОпцииЗаказов
		                      |ГДЕ
		                      |	ЗакрытиеЗаказовОпцииЗаказов.ЗапретЗакрытияНетДанныхПеремещения = ИСТИНА
		                      |	И ЗакрытиеЗаказовОпцииЗаказов.Заказ В(&СписокЗаказов)
		                      |	И ЗакрытиеЗаказовОпцииЗаказов.Ссылка.Ссылка = &Ссылка
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ЗакрытиеЗаказовОпцииЗаказов.Заказ
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                      |	СтатусыСкладскогоУчета.Заказ
		                      |ПОМЕСТИТЬ ВТ_Статусы
		                      |ИЗ
		                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
		                      |ГДЕ
		                      |	СтатусыСкладскогоУчета.Заказ В(&СписокЗаказов)
		                      |	И СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ЗаказВернулсяСРегионаНаТерминалПриемки)
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВТ.Заказ,
		                      |	ВЫБОР
		                      |		КОГДА НЕ ВТ_Статусы.Заказ ЕСТЬ NULL 
		                      |			ТОГДА ИСТИНА
		                      |		ИНАЧЕ ЛОЖЬ
		                      |	КОНЕЦ КАК МожноЗакрывать
		                      |ИЗ
		                      |	ВТ КАК ВТ
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Статусы КАК ВТ_Статусы
		                      |		ПО ВТ.Заказ = ВТ_Статусы.Заказ");
		Запрос.УстановитьПараметр("СписокЗаказов", СписокДляПроверки);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		РезПроверка = Запрос.Выполнить().Выбрать();
		
		
		Пока РезПроверка.Следующий() Цикл		
			Если НЕ РезПроверка.МожноЗакрывать Тогда		
				//ТекстСообщения = ТекстСообщения + "По заказу " + РезПроверка.Заказ + " были обратные движения товаров, закрытие для данного заказа запрещено." + символы.ПС;				
				ТекстСообщения = ТекстСообщения + "По заказу " + РезПроверка.Заказ + " были обратные движения товаров, закрытие для данного заказа нежелательно." + символы.ПС;				
			КонецЕсли;					
		КонецЦикла;	
		
		
		Если ТекстСообщения <> "" Тогда	
			//#Если Клиент Тогда
				Сообщить(ТекстСообщения);
			//#КонецЕсли
			//Отказ = Истина;	
		КонецЕсли;
		
	//КонецЕсли;	
	//Проверки на обратное движение товара ---<<<
КонецПроцедуры

Процедура ПроведениеДоходовКомпании()
	Движения.ДоходыКомпании.Очистить();
	Движения.ДоходыКомпании.Записывать = Истина;
	
	Для Каждого Тек Из Заказы Цикл
		СуммаПоказателейСД = Тек.Показатель1 + Тек.Показатель2 + Тек.Показатель3 + Тек.Показатель4 + Тек.Показатель5 + Тек.Показатель6;
		Если Тек.Закрыть И СуммаПоказателейСД > 0 Тогда
			Нов = Движения.ДоходыКомпании.Добавить();
			Нов.Период = Тек.Реализация.Дата;
			Нов.Реализация = Тек.Реализация;
			Нов.ТипЗаказа = Тек.ТипЗаказа;
			Нов.ИнтернетМагазин = Тек.ВладелецТовара;
			Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Тогда
				Нов.СтатьяДоходов = Справочники.СтатьиДоходов.Доставка;
			ИначеЕсли Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Забор Тогда
				Нов.СтатьяДоходов = Справочники.СтатьиДоходов.Забор;
			ИначеЕсли Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Фрахт Тогда
				Нов.СтатьяДоходов = Справочники.СтатьиДоходов.Фрахт;
			ИначеЕсли Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
				Нов.СтатьяДоходов = Справочники.СтатьиДоходов.Самовывоз;
			КонецеСли;
			Нов.Сумма = СуммаПоказателейСД;
		КонецЕсли;	
		Если Тек.Закрыть И Тек.КассовоеОбслуживание > 0 Тогда
			Нов = Движения.ДоходыКомпании.Добавить();
			Нов.Период = Тек.Реализация.Дата;
			Нов.Реализация = Тек.Реализация;
			Нов.ИнтернетМагазин = Тек.ВладелецТовара;
			Нов.ТипЗаказа = Тек.ТипЗаказа;
			Нов.СтатьяДоходов = Справочники.СтатьиДоходов.КассовоеОбслуживание;
			Нов.Сумма = Тек.КассовоеОбслуживание;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	

Процедура ОбработатьУслугиПоНеВыполненнымЗаказам() Экспорт //Задача № 3533
	
	Для Каждого СтрокаЗаказ Из Заказы Цикл
		
		Если СтрокаЗаказ.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена 
			И (НЕ СтрокаЗаказ.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом) Тогда
			
			СтрокаЗаказ.УслугиСДЧистые = 0;
			Строказаказ.Показатель1 = 0;
			
		КонецЕсли;	
			
	КонецЦикла;	
	
КонецПроцедуры	

Функция ОбновитьДанные() Экспорт
	
	//+Степанов Задача № 3945
	Если ДатаЗакрытия <= '20210131235959' Тогда
		Возврат ОбновитьДанные_Старая()
	КонецЕсли;	
	
	//Асеев 24.03.2023 (Задача № 5021)>>>
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", КонецДня(ДатаЗакрытия));
	Запрос.УстановитьПараметр("ТерминалДоставки", ТерминалДоставки);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	зпАктивнаяСхемаРасчетаЗПСрезПоследних.СхемаРасчетаЗП КАК СхемаРасчетаЗП
	|ПОМЕСТИТЬ ВТ_АктивнаяСхемаРасчетаЗП
	|ИЗ
	|	РегистрСведений.зпАктивнаяСхемаРасчетаЗП.СрезПоследних(&Период, Регион = &ТерминалДоставки) КАК зпАктивнаяСхемаРасчетаЗПСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_АктивнаяСхемаРасчетаЗП.СхемаРасчетаЗП КАК СхемаРасчетаЗП,
	|	зпАктивныйТарифРасчетаЗПСрезПоследних.ТарифРасчетаЗП КАК ТарифРасчетаЗП
	|ИЗ
	|	РегистрСведений.зпАктивныйТарифРасчетаЗП.СрезПоследних(
	|			&Период,
	|			СхемаРасчетаЗП В
	|				(ВЫБРАТЬ
	|					ВТ_АктивнаяСхемаРасчетаЗП.СхемаРасчетаЗП КАК СхемаРасчетаЗП
	|				ИЗ
	|					ВТ_АктивнаяСхемаРасчетаЗП КАК ВТ_АктивнаяСхемаРасчетаЗП)) КАК зпАктивныйТарифРасчетаЗПСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_АктивнаяСхемаРасчетаЗП КАК ВТ_АктивнаяСхемаРасчетаЗП
	|		ПО (ИСТИНА)";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СхемаРасчетаЗП = Выборка.СхемаРасчетаЗП;
		ТарифРасчетаЗП = Выборка.ТарифРасчетаЗП;
	КонецЕсли;
	//Асеев 24.03.2023 (Задача № 5021)<<<

	Заказы.Очистить(); //В рамках Задача № 3247
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", СхемаРасчетаЗП);
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифРасчетаЗП);
	
	ТекстДополнительныхУсловий = "";
	
	Если ВариантЗаполнения = 0 Тогда
		Запрос.УстановитьПараметр("ТипЗаказа", Перечисления.ТипыЗаказов.Доставка);
		Если ТипДоставки <> Перечисления.ТипыЗаказов.Забор И ТипДоставки <> Перечисления.ТипыЗаказов.Фрахт Тогда
			Если ЗначениеЗаполнено(НачалоПериода) Тогда
				ТекстДополнительныхУсловий = " И РеализацияТоваровУслуг.Дата >= &ДатаНач";
				Запрос.УстановитьПараметр("ДатаНач", НачалоПериода);
			КонецЕсли;
			Если ЗначениеЗаполнено(КонецПериода) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И РеализацияТоваровУслуг.Дата <= &ДатаКон";
				Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
			КонецЕсли;
			Если ЗначениеЗаполнено(Контрагент) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И РеализацияТоваровУслуг.ВладелецТовара = &Контрагент";
				Запрос.УстановитьПараметр("Контрагент", Контрагент);
			КонецЕсли;
			Если ЗначениеЗаполнено(ТранспортнаяКомпания) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И РеализацияТоваровУслуг.ТранспортнаяКомпания = &ТК";
				Запрос.УстановитьПараметр("ТК", ТранспортнаяКомпания);
			КонецЕсли;
			Запрос.УстановитьПараметр("ТипЗаказа", Перечисления.ТипыЗаказов.Доставка);
		ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Забор Тогда
			Если ЗначениеЗаполнено(НачалоПериода) Тогда
				ТекстДополнительныхУсловий = " И ЗаборТовара.Дата >= &ДатаНач";
				Запрос.УстановитьПараметр("ДатаНач", НачалоПериода);
			КонецЕсли;
			Если ЗначениеЗаполнено(КонецПериода) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И ЗаборТовара.Дата <= &ДатаКон";
				Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
			КонецЕсли;
			Если ЗначениеЗаполнено(Контрагент) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И ЗаборТовара.Контрагент = &Контрагент";
				Запрос.УстановитьПараметр("Контрагент", Контрагент);
			КонецЕсли;		
			Если ЗначениеЗаполнено(ТранспортнаяКомпания) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И РеализацияТоваровУслуг.ТранспортнаяКомпания = &ТК";
				Запрос.УстановитьПараметр("ТК", ТранспортнаяКомпания);
			КонецЕсли;
			Запрос.УстановитьПараметр("ТипЗаказа", Перечисления.ТипыЗаказов.Забор);
		ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Фрахт Тогда
			Если ЗначениеЗаполнено(НачалоПериода) Тогда
				ТекстДополнительныхУсловий = " И Фрахт.Дата >= &ДатаНач";
				Запрос.УстановитьПараметр("ДатаНач", НачалоПериода);
			КонецЕсли;
			Если ЗначениеЗаполнено(КонецПериода) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И Фрахт.Дата <= &ДатаКон";
				Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
			КонецЕсли;
			Если ЗначениеЗаполнено(Контрагент) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И Фрахт.Контрагент = &Контрагент";
				Запрос.УстановитьПараметр("Контрагент", Контрагент);
			КонецЕсли;	
			Если ЗначениеЗаполнено(ТранспортнаяКомпания) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И РеализацияТоваровУслуг.ТранспортнаяКомпания = &ТК";
				Запрос.УстановитьПараметр("ТК", ТранспортнаяКомпания);
			КонецЕсли;		
			Запрос.УстановитьПараметр("ТипЗаказа", Перечисления.ТипыЗаказов.Фрахт);
		КонецеСли;
	ИначеЕСли ВариантЗаполнения = 1 Тогда
		////////////////////////////////////////////новый вариант заполнения
		Запрос.УстановитьПараметр("Рейс", Рейс.Ссылка);
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Рейс.ДатаРейса));
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(Рейс.ДатаРейса));
		Запрос.УстановитьПараметр("НаДатуСтатусы", Дата);
	ИначеЕСли ВариантЗаполнения = 2 Тогда
		////////////////////////////////////////////новый вариант заполнения
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачалоПериода));
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
	ИначеЕсли ВариантЗаполнения = 3	Тогда
		Запрос.УстановитьПараметр("ДокументЗакрытие", Ссылка); // Конкретизация запроса по отклоненным Задача 3247, 04.09.2019

	КонецеСли;
	
	Запрос.УстановитьПараметр("ДатаЗакрытия", ДатаЗакрытия);
	Запрос.УстановитьПараметр("НаДату", КонецДня(КонецПериода));
	
	ТерминалыДоставки = Новый Массив;
	
		
	Если ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
		ТерминалыДоставки.Добавить(ТерминалДоставки);
		ТерминалыДоставки.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
	Иначе
		ТерминалыДоставки.Добавить(ТерминалДоставки);
	КонецеСли;	
	
	СхемаМатрицыТарификации = ТарификацияУслугСервер.ОпределитьАктуальнуюСхемуТарификации();
	
	Запрос.УстановитьПараметр("ТерминалыДоставки", ТерминалыДоставки);
	
	Если Дата >= Дата("20131028000000") Тогда
		Если ВариантЗаполнения = 0 Тогда
			Запрос.Текст = СтрЗаменить(
			ПолучитьБазовыйТекстЗапроса2014_РС_Закрытий(),
			"$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ",
			ТекстДополнительныхУсловий
			);
		ИначеЕсли ВариантЗаполнения = 1 Тогда	
			Запрос.Текст = СтрЗаменить(
			ПолучитьБазовыйТекстЗапросаПоРейсу_РС_Закрытий(),
			"$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ",
			ТекстДополнительныхУсловий
			);
		ИначеЕсли ВариантЗаполнения = 2 Тогда	
			Запрос.Текст = СтрЗаменить(
			ПолучитьБазовыйТекстЗапросаПоСамовывозам_РС_Закрытий(),
			"$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ",
			ТекстДополнительныхУсловий
			);
		ИначеЕсли ВариантЗаполнения = 3 Тогда  //Задача № 3247
			Запрос.Текст = СтрЗаменить(
			ПолучитьТекстЗапросаПоОтклоненным_РС_Закрытий(),
			"$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ",
			ТекстДополнительныхУсловий
			);
		КонецеСли;	
	Иначе
		Запрос.Текст = СтрЗаменить(
		ПолучитьБазовыйТекстЗапроса(),
		"$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ",
		ТекстДополнительныхУсловий
		);
	КонецЕсли;
	Список = Запрос.Выполнить().Выгрузить();
	
	МасН = Список.ВыгрузитьКолонку("Номер");
	
	зап2 = Новый Запрос;
	//+Степанов Задача № 3761 В запрос добалено поле КодМаркировки
	//Зап2.Текст = "ВЫБРАТЬ
	//             |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	//             |	РеализацияТоваровУслугТовары.Количество КАК Количество,
	//             |	РеализацияТоваровУслугТовары.Цена КАК Цена,
	//             |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма,
	//             |	РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
	//             |	РеализацияТоваровУслугТовары.Ссылка.Ссылка КАК Реализация,
	//             |	РеализацияТоваровУслугТовары.Вес * РеализацияТоваровУслугТовары.Количество КАК Масса,
	//             |	РеализацияТоваровУслугТовары.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
	//             |ПОМЕСТИТЬ ВТТовары
	//             |ИЗ
	//             |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	//             |ГДЕ
	//             |	РеализацияТоваровУслугТовары.Ссылка.Номер В(&МасНом)
	//             |
	//             |СГРУППИРОВАТЬ ПО
	//             |	РеализацияТоваровУслугТовары.Номенклатура,
	//             |	РеализацияТоваровУслугТовары.Цена,
	//             |	РеализацияТоваровУслугТовары.Ссылка.Номер,
	//             |	РеализацияТоваровУслугТовары.Ссылка.Ссылка,
	//             |	РеализацияТоваровУслугТовары.Вес * РеализацияТоваровУслугТовары.Количество,
	//             |	РеализацияТоваровУслугТовары.Количество,
	//             |	РеализацияТоваровУслугТовары.ШтрихкодНоменклатуры
	//             |
	//             |ОБЪЕДИНИТЬ ВСЕ
	//             |
	//             |ВЫБРАТЬ
	//             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	//             |	-ВозвратТоваровОтПокупателяТовары.Количество,
	//             |	ВозвратТоваровОтПокупателяТовары.Цена,
	//             |	СУММА(-ВозвратТоваровОтПокупателяТовары.Сумма),
	//             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
	//             |	РеализацияТоваровУслуг.Ссылка,
	//             |	0,
	//             |	ВозвратТоваровОтПокупателяТовары.ШтрихкодНоменклатуры
	//             |ИЗ
	//             |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	//             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//             |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
	//             |ГДЕ
	//             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер В(&МасНом)
	//             |
	//             |СГРУППИРОВАТЬ ПО
	//             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	//             |	ВозвратТоваровОтПокупателяТовары.Цена,
	//             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
	//             |	-ВозвратТоваровОтПокупателяТовары.Количество,
	//             |	РеализацияТоваровУслуг.Ссылка,
	//             |	ВозвратТоваровОтПокупателяТовары.ШтрихкодНоменклатуры
	//             |
	//             |ОБЪЕДИНИТЬ ВСЕ
	//             |
	//             |ВЫБРАТЬ
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Количество,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Цена,
	//             |	СУММА(РеализацияТоваровУслугПодарочныеПозиции.Сумма),
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Ссылка,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Количество * РеализацияТоваровУслугПодарочныеПозиции.Вес,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.ШтрихкодНоменклатуры
	//             |ИЗ
	//             |	Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
	//             |ГДЕ
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер В(&МасНом)
	//             |
	//             |СГРУППИРОВАТЬ ПО
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Цена,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Ссылка,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Количество * РеализацияТоваровУслугПодарочныеПозиции.Вес,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Количество,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.ШтрихкодНоменклатуры
	//             |;
	//             |
	//             |////////////////////////////////////////////////////////////////////////////////
	//             |ВЫБРАТЬ
	//             |	ВТТовары.Номенклатура КАК Номенклатура,
	//             |	ВТТовары.Количество КАК Количество,
	//             |	ВТТовары.Цена КАК Цена,
	//             |	ВТТовары.Сумма КАК Сумма,
	//             |	новаМестнаяДоставка.Ссылка КАК Доставка,
	//             |	ВТТовары.Реализация.Ссылка КАК Реализация,
	//             |	ВТТовары.Масса КАК Масса,
	//             |	ВТТовары.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
	//             |ИЗ
	//             |	ВТТовары КАК ВТТовары
	//             |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	//             |		ПО ВТТовары.Номер = новаМестнаяДоставка.Номер
	//             |;
	//             |
	//             |////////////////////////////////////////////////////////////////////////////////
	//             |УНИЧТОЖИТЬ ВТТовары";
	Зап2.Текст = "ВЫБРАТЬ
	             |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	             |	РеализацияТоваровУслугТовары.Количество КАК Количество,
	             |	РеализацияТоваровУслугТовары.Цена КАК Цена,
	             |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма,
	             |	РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
	             |	РеализацияТоваровУслугТовары.Ссылка.Ссылка КАК Реализация,
	             |	РеализацияТоваровУслугТовары.Вес * РеализацияТоваровУслугТовары.Количество КАК Масса,
	             |	РеализацияТоваровУслугТовары.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры,
	             |	РеализацияТоваровУслугТовары.КодМаркировки КАК КодМаркировки
	             |ПОМЕСТИТЬ ВТТовары
	             |ИЗ
	             |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	             |ГДЕ
	             |	РеализацияТоваровУслугТовары.Ссылка.Номер В(&МасНом)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	РеализацияТоваровУслугТовары.Номенклатура,
	             |	РеализацияТоваровУслугТовары.Цена,
	             |	РеализацияТоваровУслугТовары.Ссылка.Номер,
	             |	РеализацияТоваровУслугТовары.Ссылка.Ссылка,
	             |	РеализацияТоваровУслугТовары.Вес * РеализацияТоваровУслугТовары.Количество,
	             |	РеализацияТоваровУслугТовары.Количество,
	             |	РеализацияТоваровУслугТовары.ШтрихкодНоменклатуры,
	             |	РеализацияТоваровУслугТовары.КодМаркировки
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	             |	-ВозвратТоваровОтПокупателяТовары.Количество,
	             |	ВозвратТоваровОтПокупателяТовары.Цена,
	             |	СУММА(-ВозвратТоваровОтПокупателяТовары.Сумма),
	             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
	             |	РеализацияТоваровУслуг.Ссылка,
	             |	0,
	             |	ВозвратТоваровОтПокупателяТовары.ШтрихкодНоменклатуры,
	             |	NULL
	             |ИЗ
	             |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	             |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
	             |ГДЕ
	             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер В(&МасНом)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	             |	ВозвратТоваровОтПокупателяТовары.Цена,
	             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
	             |	-ВозвратТоваровОтПокупателяТовары.Количество,
	             |	РеализацияТоваровУслуг.Ссылка,
	             |	ВозвратТоваровОтПокупателяТовары.ШтрихкодНоменклатуры
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Количество,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Цена,
	             |	СУММА(РеализацияТоваровУслугПодарочныеПозиции.Сумма),
	             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Ссылка,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Количество * РеализацияТоваровУслугПодарочныеПозиции.Вес,
	             |	РеализацияТоваровУслугПодарочныеПозиции.ШтрихкодНоменклатуры,
	             |	РеализацияТоваровУслугПодарочныеПозиции.КодМаркировки
	             |ИЗ
	             |	Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
	             |ГДЕ
	             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер В(&МасНом)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Цена,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Ссылка,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Количество * РеализацияТоваровУслугПодарочныеПозиции.Вес,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Количество,
	             |	РеализацияТоваровУслугПодарочныеПозиции.ШтрихкодНоменклатуры,
	             |	РеализацияТоваровУслугПодарочныеПозиции.КодМаркировки
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВТТовары.Номенклатура КАК Номенклатура,
	             |	ВТТовары.Количество КАК Количество,
	             |	ВТТовары.Цена КАК Цена,
	             |	ВТТовары.Сумма КАК Сумма,
	             |	новаМестнаяДоставка.Ссылка КАК Доставка,
	             |	ВТТовары.Реализация.Ссылка КАК Реализация,
	             |	ВТТовары.Масса КАК Масса,
	             |	ВТТовары.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры,
	             |	ВТТовары.КодМаркировки КАК КодМаркировки
	             |ИЗ
	             |	ВТТовары КАК ВТТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	             |		ПО ВТТовары.Номер = новаМестнаяДоставка.Номер
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ ВТТовары";
	//-Степанов Задача № 3761 
				 
	Зап2.УстановитьПараметр("МасНом", МасН);			 
	
    Т = Зап2.Выполнить().Выгрузить();
	
	Товары.Очистить(); //В рамках Задача № 3153 
	
	Для Каждого Тек Из Т Цикл			
		Нов = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, тек);
		ПодсчетНовойСуммы(Нов);	
	КонецЦикла;	
	
	//+Степанов
	//ТаблициШтрихкодовНоменклатуры = Т.Скопировать(,"Реализация, Номенклатура, ШтрихкодНоменклатуры");
	//-Степанов
    
    //Серегин М.В. 23.07.2015 12:03:41 заполнение ТЧ Услуги
    Услуги.Очистить();
    Для каждого Стр Из Список Цикл
        
        ТекстЗапроса ="
        | DECLARE @t Torder   
        | INSERT INTO @t ([orderID]) VALUES ("+СокрЛП(Стр.Номер)+")
        | EXEC p1c_getOrdersServices @t
        |";
        Результат = smv.СформироватьТаблицуЗначенийИзДанныхSQL(ТекстЗапроса);
        
        Если Результат.Количество()>0 Тогда 
            
            Для каждого СтрРезультат Из Результат Цикл
				Если СтрРезультат.count = 0 Тогда
					Продолжить;
				КонецеСли;	
					
                Услуга = Справочники.ПоказателиРасчетаУслугСД.НайтиПоРеквизиту("НомерПоказателяАдминки",СтрРезультат.serviceId);
                Если ЗначениеЗаполнено(Услуга) Тогда
                    СтрокаУслуги = Услуги.Добавить();
                    СтрокаУслуги.Реализация = Стр.Реализация;
                    СтрокаУслуги.Услуга = Услуга;
                    СтрокаУслуги.СуммаПервичная = СтрРезультат.price;
                    СтрокаУслуги.СуммаДляИзменения = СтрРезультат.price;
                КонецЕсли;
                
            КонецЦикла;
            
        КонецЕсли;
				
	КонецЦикла;
    //Серегин М.В. 23.07.2015 12:03:44 
    
	Для Каждого Тек Из Список Цикл
		Нов = Заказы.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Тек);
		
		// костыль Veeroute (задачи доставки)
		Если Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Или Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Или Нов.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
			Нов.Доставлен = Истина;
		КонецеСли;		
		
		// Михушкин --->> 
		Если Нов.ТерминалДоставки = Справочники.РегиональныеТерминалы.СПбСтриж Тогда
			Нов.Доставлен = Истина;
		КонецЕсли;
		// <<--- Михушкин 
		
		//lem 11.08.2017 подъемы
		Если Нов.МетодОплатыПодъема <> Перечисления.МетодыОплатыПодъёмаЗаказа.ОплачиваетПартнер Тогда
			Нов.Показатель2 = 0;
			Нов.ПодъемВодитель = 0;
		ИначеЕсли Нов.МетодОплатыПодъема = Перечисления.МетодыОплатыПодъёмаЗаказа.ОплачиваетПартнер И ЗначениеЗаполнено(Нов.ВидПодъемаНаЭтаж) И Нов.ВидПодъемаНаЭтаж <> Перечисления.ВидыПодъемовВодителя.БезПодъема Тогда
			ДанныеПодъема = Новый Структура;
			Если Нов.ВидПодъемаНаЭтаж = Перечисления.ВидыПодъемовВодителя.РучнойПодъем Тогда
				ДанныеПодъема.Вставить("МетодПодъема", Перечисления.ТипПодъемаНаЭтаж.ПодъемЗаказаБезЛифта);
			ИначеЕсли Нов.ВидПодъемаНаЭтаж = Перечисления.ВидыПодъемовВодителя.Лифт Тогда
				ДанныеПодъема.Вставить("МетодПодъема", Перечисления.ТипПодъемаНаЭтаж.ПодъемЗаказаНаЛифте);
			КонецЕсли;	
			ДанныеПодъема.Вставить("КоличествоХодок", Нов.КоличествоХодокПриПодъемеЗаказа);
			ДанныеПодъема.Вставить("Этаж", Нов.Этаж); 
			ДанныеПодъема.Вставить("ВесЗаказа", Нов.ВесЗаказаДляПодъемаМП);
			ДанныеПодъема.Вставить("НомерЗаказа", СокрЛП(Нов.Номер));
			
			ДанныеТарифа = ТарифыНаПодъемЗаказаНаЭтажСервер.ПолучитьРасчетныеДанныеПодъемаЗаказаНаЭтаж(ДанныеПодъема, Перечисления.ВариантыТарифаНаПодъемЗаказов.ТарифДляИМ);
			
			// МАС - 29.08.2017  --->> 
			Если ДанныеТарифа.Успешно Тогда
			// <<--- МАС
				Нов.Показатель2 = ДанныеТарифа.СтоимостьПодъема;
				Нов.ПодъемныйБрейк = ДанныеТарифа.Брейк;						
			// МАС - 29.08.2017 --->> 
			КонецЕсли;
			// <<--- МАС
		ИначеЕсли Нов.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка 
			И Нов.МетодОплатыПодъема = Перечисления.МетодыОплатыПодъёмаЗаказа.ОплачиваетПартнер 
			И (Не ЗначениеЗаполнено(Нов.ВидПодъемаНаЭтаж) Или Нов.ВидПодъемаНаЭтаж = Перечисления.ВидыПодъемовВодителя.БезПодъема) 
			И (Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Или Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично) Тогда
			//считаем подъем на первый этаж, если его не было
			Нов.Этаж = 1;
			Нов.КоличествоХодокПриПодъемеЗаказа = 1;
			Нов.ВидПодъемаНаЭтаж = Перечисления.ВидыПодъемовВодителя.РучнойПодъем;
			
			
			ДанныеПодъема = Новый Структура;
			ДанныеПодъема.Вставить("МетодПодъема", Перечисления.ТипПодъемаНаЭтаж.ПодъемЗаказаБезЛифта);
			ДанныеПодъема.Вставить("КоличествоХодок", Нов.КоличествоХодокПриПодъемеЗаказа);
			ДанныеПодъема.Вставить("Этаж", Нов.Этаж); 
			
			ДанныеПодъема.Вставить("ВесЗаказа", Нов.ТарифицируемыйВес);
			ДанныеПодъема.Вставить("НомерЗаказа", СокрЛП(Нов.Номер));
			
			ДанныеТарифа = ТарифыНаПодъемЗаказаНаЭтажСервер.ПолучитьРасчетныеДанныеПодъемаЗаказаНаЭтаж(ДанныеПодъема, Перечисления.ВариантыТарифаНаПодъемЗаказов.ТарифДляИМ);
			
			Если ДанныеТарифа.Успешно Тогда
				Нов.Показатель2 = ДанныеТарифа.СтоимостьПодъема;
				Нов.ПодъемныйБрейк = ДанныеТарифа.Брейк;						
			КонецЕсли;
			
			ДанныеТарифаВодитель = ТарифыНаПодъемЗаказаНаЭтажСервер.ПолучитьРасчетныеДанныеПодъемаЗаказаНаЭтаж(ДанныеПодъема, Перечисления.ВариантыТарифаНаПодъемЗаказов.ТарифДляЭкипажа);
			
			Если ДанныеТарифаВодитель.Успешно Тогда
				Нов.ПодъемВодитель = ДанныеТарифаВодитель.СтоимостьПодъема;
				//Нов.ПодъемныйБрейк = ДанныеТарифаВодитель.Брейк;						
			КонецЕсли;
			
		КонецеСли;	
		
		//ПриИзмененииСтоимостиПодъемаБезПересчетаПодъемаВодителя(Нов);
		ПриИзмененииСтоимостиПодъема(Нов, Ложь);
		//lem 11.08.2017
		
		//Асеев 31.03.2022 (Задача № 4771)>>>
		Если ЗначениеЗаполнено(Нов.ТарифПримерки) И Нов.КоличествоSKUПримерки Тогда
			ДанныеПримерки = Новый Структура("Дата,ТарифПримерки,КоличествоSKUПримерки,Водитель,Экспедитор", ДатаЗакрытия, Нов.ТарифПримерки, Нов.КоличествоSKUПримерки, Нов.Водитель, Нов.Экспедитор);
			Если ЗначениеЗаполнено(Нов.Экспедитор) Тогда
				ДанныеПримерки.Вставить("СоставЭкипажа", Перечисления.зпСоставЭкипажа.ВодительСЭкспедитором);
			Иначе
				ДанныеПримерки.Вставить("СоставЭкипажа", Перечисления.зпСоставЭкипажа.ВодительБезЭкспедитора);
			КонецЕсли;
			
			РасчетныеДанныеПримерки = ТарификацияУслугСервер.ПолучитьРасчетныеДанныеПримерки(ДанныеПримерки);
			
			ЗаполнитьЗначенияСвойств(Нов, РасчетныеДанныеПримерки);
		КонецЕсли;
		//Асеев 31.03.2022 (Задача № 4771)<<<
		
		Нов.ПредТипОплаты = Тек.ТипОплатыЗаказа;
		Нов.ПредУслугиСД = Тек.УслугиСД;
		Нов.Показатель1 = Тек.УслугиСД;
		
		
		// ДанныеЗаказаСамовывоза переработали, костыль закомменчиваю. Марочкин 08.05.2015
		
        //Серегин М.В. 30.04.2015 11:41:52 разбираться с запросами долго, так что вставил костыль сюда
		//Если ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз  Тогда
		//    НайденныеДокументы = Документы.ДанныеЗаказаСамовывоза.НайтиПоРеквизиту("Реализация", Тек.Реализация); 
		//    Если НЕ НайденныеДокументы.Пустая()  Тогда
		//        Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена;
		//    Иначе 
		//        Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена;
		//    КонецЕсли; 
		//КонецЕсли;
        //Серегин М.В. 30.04.2015 11:44:08 
        
		Нов.ПредРезультатДоставки = Нов.РезультатДоставки;
		Нов.ПредПричинаНевыполнения = Нов.ПричинаНевыполнения;
		Нов.ПредСуммаДоставкиДоМКАД = Нов.СуммаДоставкиДоМКАД;
		
		Если Нов.ВариантРасчетаКО.Пустая() Тогда
			Нов.ВариантРасчетаКО = Константы.ВариантРасчетаКОПоУмолчанию.Получить();
		КонецеСли;	
		
		//Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
		
		Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Тогда
			// подтягиваем данные из истории состава заказа (временно)
			ЗапИ = Новый Запрос;
			//+Степанов Задача № 3761 Получаем из заказа код маркировки
			//ЗапИ.Текст = "ВЫБРАТЬ
			//             |	ИсторияСоставаЗаказов.Номенклатура,
			//             |	ИсторияСоставаЗаказов.Цена,
			//             |	ИсторияСоставаЗаказов.Количество,
			//             |	ИсторияСоставаЗаказов.Масса
			//             |ИЗ
			//             |	РегистрСведений.ИсторияСоставаЗаказов КАК ИсторияСоставаЗаказов
			//             |ГДЕ
			//             |	ИсторияСоставаЗаказов.Заказ = &Заказ
			//             |	И ИсторияСоставаЗаказов.ДокументРегистратор = &Заказ
			//             |
			//             |УПОРЯДОЧИТЬ ПО
			//             |	ИсторияСоставаЗаказов.ТипТабличнойЧасти,
			//             |	ИсторияСоставаЗаказов.НомерСтрокиДокумента";
			//
			ЗапИ.Текст = "ВЫБРАТЬ
			             |	ИсторияСоставаЗаказов.Номенклатура КАК Номенклатура,
			             |	ИсторияСоставаЗаказов.Цена КАК Цена,
			             |	ИсторияСоставаЗаказов.Количество КАК Количество,
			             |	ИсторияСоставаЗаказов.Масса КАК Масса,
			             |	ИсторияСоставаЗаказов.КодМаркировки КАК КодМаркировки,
						 |	ИсторияСоставаЗаказов.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
			             |ИЗ
			             |	РегистрСведений.ИсторияСоставаЗаказов КАК ИсторияСоставаЗаказов
			             |ГДЕ
			             |	ИсторияСоставаЗаказов.Заказ = &Заказ
			             |	И ИсторияСоставаЗаказов.ДокументРегистратор = &Заказ
			             |
			             |УПОРЯДОЧИТЬ ПО
			             |	ИсторияСоставаЗаказов.ТипТабличнойЧасти,
			             |	ИсторияСоставаЗаказов.НомерСтрокиДокумента";
			//-Степанов Задача № 3761
			ЗапИ.УстановитьПараметр("Заказ", Тек.Реализация.Ссылка);			 
			РезИ = ЗапИ.Выполнить();
			если Не РезИ.Пустой() Тогда
				Струк = Новый Структура;
				Струк.Вставить("Реализация", Нов.Реализация);
				НайСтроки = Товары.НайтиСтроки(Струк);
				Для СчИ = 0 По НайСтроки.Количество() - 1 Цикл
					Товары.Удалить(НайСтроки[СчИ]);
				КонецЦикла;	
			КонецеСли;	
			
			ТабИ = РезИ.Выгрузить();
			Для Каждого ТекИ Из ТабИ Цикл
				НовТ = Товары.Добавить();
				НовТ.Доставка = Нов.Доставка;
				НовТ.Реализация = Нов.Реализация;
				НовТ.Масса = ТекИ.Масса;
				НовТ.Номенклатура = ТекИ.Номенклатура;
				НовТ.Количество = ТекИ.Количество;
				НовТ.Цена = ТекИ.Цена;
				НовТ.Сумма = Окр(НовТ.Цена*НовТ.Количество, 2);
				НовТ.СуммаНовая = НовТ.Сумма;
				//+Степанов Задача № 3761
				НовТ.ШтрихкодНоменклатуры = ТекИ.ШтрихкодНоменклатуры;
				НовТ.КодМаркировки = текИ.КодМаркировки;
				//-Степанов Задача № 3761
			КонецЦикла;
			
			если Не РезИ.Пустой() Тогда
				Зап_ = Новый Запрос;
				Если Не Нов.Доставка.Пустая() Тогда
					Зап_.Текст = "ВЫБРАТЬ
					             |	РеализацияТоваровУслуг.Ссылка КАК Реализация,
					             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
					             |	-ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
					             |	ВозвратТоваровОтПокупателяТовары.Цена,
					             |	-ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
					             |	-ВозвратТоваровОтПокупателяТовары.Сумма КАК СуммаНовая,
					             |	новаМестнаяДоставка.Ссылка КАК Доставка
					             |ИЗ
					             |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
					             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
					             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
					             |			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
					             |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
					             |ГДЕ
					             |	РеализацияТоваровУслуг.Ссылка = &Док";
				Иначе
					Зап_.Текст = "ВЫБРАТЬ
					|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
					|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
					|	-ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
					|	ВозвратТоваровОтПокупателяТовары.Цена,
					|	-ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
					|	-ВозвратТоваровОтПокупателяТовары.Сумма КАК СуммаНовая
					|ИЗ
					|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
					|		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
					|ГДЕ
					|	РеализацияТоваровУслуг.Ссылка = &Док";
				КонецеСли;
				Зап_.УстановитьПараметр("Док", Тек.Реализация.Ссылка); 			
				
				Рез = Зап_.Выполнить().Выгрузить();
				Для Каждого ТекС Из Рез Цикл
					Струк = Новый Структура;
					Струк.Вставить("Реализация", ТекС.Реализация);
					Струк.Вставить("Сумма", ТекС.Сумма);
					Струк.Вставить("Количество", ТекС.Количество);
					Струк.Вставить("Номенклатура", ТекС.Номенклатура);
					
					Нов_ = Товары.Добавить();
					ЗаполнитьЗначенияСвойств(Нов_, ТекС);
				КонецЦикла;
			КонецеСли;
		КонецеСли;
				
		
		
		
		
		Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
			
			// подтягиваем данные из истории состава заказа (временно)
			ЗапИ = Новый Запрос;
			//+Степанов Задача № 3761
			//ЗапИ.Текст = "ВЫБРАТЬ
			//             |	ИсторияСоставаЗаказов.Номенклатура КАК Номенклатура,
			//             |	ИсторияСоставаЗаказов.Цена КАК Цена,
			//             |	ИсторияСоставаЗаказов.Количество КАК Количество,
			//             |	ИсторияСоставаЗаказов.Масса КАК Масса
			//             |ИЗ
			//             |	РегистрСведений.ИсторияСоставаЗаказов КАК ИсторияСоставаЗаказов
			//             |ГДЕ
			//             |	ИсторияСоставаЗаказов.Заказ = &Заказ
			//             |	И ИсторияСоставаЗаказов.ДокументРегистратор = &Заказ
			//             |
			//             |УПОРЯДОЧИТЬ ПО
			//             |	ИсторияСоставаЗаказов.ТипТабличнойЧасти,
			//             |	ИсторияСоставаЗаказов.НомерСтрокиДокумента";
			ЗапИ.Текст = "ВЫБРАТЬ
			             |	ИсторияСоставаЗаказов.Номенклатура КАК Номенклатура,
			             |	ИсторияСоставаЗаказов.Цена КАК Цена,
			             |	ИсторияСоставаЗаказов.Количество КАК Количество,
			             |	ИсторияСоставаЗаказов.Масса КАК Масса,
			             |	ИсторияСоставаЗаказов.КодМаркировки КАК КодМаркировки,
						 |	ИсторияСоставаЗаказов.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
			             |ИЗ
			             |	РегистрСведений.ИсторияСоставаЗаказов КАК ИсторияСоставаЗаказов
			             |ГДЕ
			             |	ИсторияСоставаЗаказов.Заказ = &Заказ
			             |	И ИсторияСоставаЗаказов.ДокументРегистратор = &Заказ
			             |
			             |УПОРЯДОЧИТЬ ПО
			             |	ИсторияСоставаЗаказов.ТипТабличнойЧасти,
			             |	ИсторияСоставаЗаказов.НомерСтрокиДокумента";
			//-Степанов Задача № 3761
			ЗапИ.УстановитьПараметр("Заказ", Тек.Реализация.Ссылка);			 
			РезИ = ЗапИ.Выполнить();
			если Не РезИ.Пустой() Тогда
				Струк = Новый Структура;
				Струк.Вставить("Реализация", Нов.Реализация);
				НайСтроки = Товары.НайтиСтроки(Струк);
				Для СчИ = 0 По НайСтроки.Количество() - 1 Цикл
					Товары.Удалить(НайСтроки[СчИ]);
				КонецЦикла;	
			КонецеСли;	
			
			ТабИ = РезИ.Выгрузить();
			Для Каждого ТекИ Из ТабИ Цикл
				НовТ = Товары.Добавить();
				НовТ.Доставка = Нов.Доставка;
				НовТ.Реализация = Нов.Реализация;
				НовТ.Масса = ТекИ.Масса;
				НовТ.Номенклатура = ТекИ.Номенклатура;
				НовТ.Количество = ТекИ.Количество;
				НовТ.Цена = ТекИ.Цена;
				НовТ.Сумма = Окр(НовТ.Цена*НовТ.Количество, 2);
				НовТ.СуммаНовая = НовТ.Сумма;
				//+Степанов Задача № 3761
				НовТ.ШтрихкодНоменклатуры = ТекИ.ШтрихкодНоменклатуры;
				НовТ.КодМаркировки = ТекИ.КодМаркировки;
				//-Степанов Задача № 3761
			КонецЦикла;
			
			Если Не РезИ.Пустой() Тогда
				Зап_ = Новый Запрос;
				//Асеев 04.09.2020 (Задача № 3761)>>>
				//Зап_.Текст = "ВЫБРАТЬ
				//             |	ДанныеЗаказаСамовывозаДоставленныеТовары.Номенклатура,
				//             |	ДанныеЗаказаСамовывозаДоставленныеТовары.Цена,
				//             |	ДанныеЗаказаСамовывозаДоставленныеТовары.Сумма,
				//             |	ДанныеЗаказаСамовывозаДоставленныеТовары.Количество - ДанныеЗаказаСамовывозаДоставленныеТовары.КоличествоДоставлено КАК КоличествоНеДоставлено,
				//             |	РеализацияТоваровУслуг.Ссылка КАК Реализация
				//             |ПОМЕСТИТЬ ВТ
				//             |ИЗ
				//             |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
				//             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаСамовывоза.ДоставленныеТовары КАК ДанныеЗаказаСамовывозаДоставленныеТовары
				//             |		ПО РеализацияТоваровУслуг.Ссылка = ДанныеЗаказаСамовывозаДоставленныеТовары.Ссылка.Реализация
				//             |ГДЕ
				//             |	ДанныеЗаказаСамовывозаДоставленныеТовары.Ссылка.Ссылка = &Ссылка
				//             |;
				//             |
				//             |////////////////////////////////////////////////////////////////////////////////
				//             |ВЫБРАТЬ
				//             |	ВТ.Номенклатура,
				//             |	ВТ.Цена,
				//             |	ВТ.Сумма КАК Сумма,
				//             |	ВТ.КоличествоНеДоставлено КАК КоличествоНеДоставлено,
				//             |	ВТ.Реализация
				//             |ИЗ
				//             |	ВТ КАК ВТ
				//             |ГДЕ
				//             |	ВТ.КоличествоНеДоставлено <> 0";
				//Зап_.УстановитьПараметр("Ссылка", ?(ЗначениеЗаполнено(Тек.ДанныеСамовывоза), Тек.ДанныеСамовывоза.Ссылка, Тек.Реализация.Ссылка)); 
				Зап_.Текст =
				"ВЫБРАТЬ
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Номенклатура КАК Номенклатура,
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.КодМаркировки КАК КодМаркировки,
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Цена КАК Цена,
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Сумма КАК Сумма,
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Количество - ДанныеЗаказаСамовывозаДоставленныеТовары.КоличествоДоставлено КАК КоличествоНеДоставлено,
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Ссылка.Реализация КАК Реализация
				|ИЗ
				|	Документ.ДанныеЗаказаСамовывоза.ДоставленныеТовары КАК ДанныеЗаказаСамовывозаДоставленныеТовары
				|ГДЕ
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Ссылка = &Ссылка
				|	И ДанныеЗаказаСамовывозаДоставленныеТовары.Количество - ДанныеЗаказаСамовывозаДоставленныеТовары.КоличествоДоставлено <> 0";
				Зап_.УстановитьПараметр("Ссылка", ?(ЗначениеЗаполнено(Тек.ДанныеСамовывоза), Тек.ДанныеСамовывоза, Тек.Реализация));
				//Асеев 04.09.2020 (Задача № 3761)<<<
				Рез = Зап_.Выполнить().Выгрузить();
				
				Для Каждого ТекC Из Рез Цикл
					
					Най_ = Товары.НайтиСтроки(Новый Структура("Реализация", ТекC.Реализация));
					Если Най_.Количество() Тогда						
						Для каждого Стр_ Из Най_ Цикл				
							//Асеев 04.09.2020 (Задача № 3761)>>>
							//Если ТекC.Номенклатура = Стр_.Номенклатура Тогда
							Если ТекC.Номенклатура = Стр_.Номенклатура И ТекC.КодМаркировки = Стр_.КодМаркировки Тогда
								//Асеев 04.09.2020 (Задача № 3761)<<<
								Стр_.КоличествоВозвращено = ТекC.КоличествоНеДоставлено;
							    ПодсчетНовойСуммы(Стр_);						
							КонецЕсли;					
						КонецЦикла;								
					Иначе					
						Нов_ = Товары.Добавить();
						ЗаполнитьЗначенияСвойств(Нов_, ТекC);	
					КонецЕсли;	
					
				КонецЦикла;	
	
			КонецеСли;



			Если Не РезИ.Пустой() Тогда
				Зап_ = Новый Запрос;
				Если Не Нов.Доставка.Пустая() Тогда
					Зап_.Текст = "ВЫБРАТЬ
					             |	РеализацияТоваровУслуг.Ссылка КАК Реализация,
					             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
					             |	-ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
					             |	ВозвратТоваровОтПокупателяТовары.Цена,
					             |	-ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
					             |	-ВозвратТоваровОтПокупателяТовары.Сумма КАК СуммаНовая,
					             |	новаМестнаяДоставка.Ссылка КАК Доставка
					             |ИЗ
					             |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
					             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
					             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
					             |			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
					             |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
					             |ГДЕ
					             |	РеализацияТоваровУслуг.Ссылка = &Док";
				Иначе
					Зап_.Текст = "ВЫБРАТЬ
					|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
					|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
					|	-ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
					|	ВозвратТоваровОтПокупателяТовары.Цена,
					|	-ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
					|	-ВозвратТоваровОтПокупателяТовары.Сумма КАК СуммаНовая
					|ИЗ
					|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
					|		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
					|ГДЕ
					|	РеализацияТоваровУслуг.Ссылка = &Док";
				КонецеСли;
				Зап_.УстановитьПараметр("Док", Тек.Реализация.Ссылка); 			
				
				Рез = Зап_.Выполнить().Выгрузить();
				Для Каждого ТекС Из Рез Цикл
					Струк = Новый Структура;
					Струк.Вставить("Реализация", ТекС.Реализация);
					Струк.Вставить("Сумма", ТекС.Сумма);
					Струк.Вставить("Количество", ТекС.Количество);
					Струк.Вставить("Номенклатура", ТекС.Номенклатура);
					
					Нов_ = Товары.Добавить();
					ЗаполнитьЗначенияСвойств(Нов_, ТекС);
				КонецЦикла;
			КонецеСли;
			
		КонецеСли;
		
		//Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
		//		
		//ИначеЕсли;
		
		
		
		НайСтроки = Неопределено;
		Если Не Нов.Доставка.Пустая() Тогда
			Струк = Новый Структура;
			Струк.Вставить("Доставка", Нов.Доставка);
			НайСтроки = Товары.НайтиСтроки(Струк);
		ИначеЕсли Не Нов.Реализация.Пустая() Тогда
			Струк = Новый Структура;
			Струк.Вставить("Реализация", Нов.Реализация);
			НайСтроки = Товары.НайтиСтроки(Струк);
		КонецеСли;	
		
		НашлиМинус = Ложь;
		Если НайСтроки <> Неопределено Тогда
			Для Сч = 0 По НайСтроки.Количество() - 1 Цикл
				Если НайСтроки[Сч].Количество < 0 Тогда
					НашлиМинус = Истина;
					Прервать;
				КонецеСли;	
			КонецЦикла;	
		КонецеСли;	
		Нов.ПризнакВозврата = НашлиМинус;
		
		//CeHbKA
		Если ТипЗнч(Нов.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Нов.ЮрЛицо = Нов.Реализация.ВладелецТовара.ОсновнойДоговорКонтрагента.Организация;
		ИначеЕсли ТипЗнч(Нов.Реализация) = Тип("ДокументСсылка.ЗаборТовара") Тогда
			Нов.ЮрЛицо = Нов.Реализация.Контрагент.ОсновнойДоговорКонтрагента.Организация;
		ИначеЕсли ТипЗнч(Нов.Реализация) = Тип("ДокументСсылка.Фрахт") Тогда	
			Нов.ЮрЛицо = Нов.Реализация.Контрагент.ОсновнойДоговорКонтрагента.Организация;
		КонецЕсли; 
		
		Если Нов.ЮрЛицо.Пустая() Тогда
			Сообщить("В строке "+Нов.НомерСтроки+" не заполнено юр.лицо");
		КонецЕсли; 
		//CeHbKA
		
		//CeHbKA #3781 24.11.2020 
		РазныеТерминалы = Нов.ТерминалПриема <> Нов.ТерминалДоставки;
		ЧастичныйЗаказ = Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично;
		//Геннадий  #3781 02.02.2021 ++
		//теперь не учитываем различие терминалов, расчет возвратной компоненты для всех частично выполненных заказов!!!
		//Нов.ТребуетсяРасчетВозвратногоТарифа = РазныеТерминалы И ЧастичныйЗаказ;
		Нов.ТребуетсяРасчетВозвратногоТарифа = ЧастичныйЗаказ;
		//Геннадий  #3781 02.02.2021 --
		
		//CeHbKA #3781 24.11.2020 
				
		РассчитатьКОНовое(Нов);
	КонецЦикла;	 
	
	Для Каждого Тек Из Заказы Цикл
		//+++ Костя 111115 ПричинаОтклоненияВСистеме
		Если ТипЗнч(Тек.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа
				|ИЗ
				|	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
				|ГДЕ
				|	ДополнительныеПараметрыЗаказа.Заказ = &Заказ");
				Запрос.УстановитьПараметр("Заказ", Тек.Реализация);
				ПричинаВыборка = Запрос.Выполнить().Выбрать();
				Если ПричинаВыборка.Следующий() Тогда
					Тек.ПричинаОтклоненияЗаказа = ?(ПричинаВыборка.ПричинаОтклоненияЗаказа=Справочники.ПричиныОтклоненияЗаказаВСистеме.ПустаяСсылка(), Справочники.ПричиныОтклоненияЗаказаВСистеме.ОтклоненПоПисьмуМагазина, ПричинаВыборка.ПричинаОтклоненияЗаказа);
				Иначе // По умолчанию ->
					Тек.ПричинаОтклоненияЗаказа = Справочники.ПричиныОтклоненияЗаказаВСистеме.ОтклоненПоПисьмуМагазина;
				КонецЕсли;
			Иначе
				Тек.ПричинаОтклоненияЗаказа = Справочники.ПричиныОтклоненияЗаказаВСистеме.ПустаяСсылка();
			КонецЕсли;
		Иначе // Если фрахт или забор
			Если Тек.Отклонить Тогда//РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
				Тек.ПричинаОтклоненияЗаказа = Справочники.ПричиныОтклоненияЗаказаВСистеме.ОтклоненПоПисьмуМагазина;
			Иначе
				Тек.ПричинаОтклоненияЗаказа = Справочники.ПричиныОтклоненияЗаказаВСистеме.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
		//+++ Костя 111115 ПричинаОтклоненияВСистеме
		
		Тек.ЗапретЧастичногоВыкупа = Ложь;
		Если Тек.УчитыватьИтогоКОплате И Тек.Реализация.ЗапретЧастичногоВыкупа И Тек.КОплатеКлиентом <> 0 Тогда
			//Струк = новый Структура;
			//Струк.Вставить("Реализация", Тек.Реализация);
			//НайТов = Товары.НайтиСтроки(Струк);
			//Сум = 0;
			//Для Сч = 0 По НайТов.Количество() - 1 Цикл
			//	Сум = Сум + НайТов[Сч].Сумма;
			//КонецЦикла;
			//
			//Если Тек.СуммаДоставкиДоМКАД + Тек.СуммаДоставкиЗаМКАД + Сум <> Тек.КОплатеКлиентом
			//	И (Тек.ТипОплаты = Справочники.ТипыОплат.Наличные Или Тек.ТипОплаты = Справочники.ТипыОплат.Терминал)  Тогда   // дополнено 10.05.2016
				Тек.ЗапретЧастичногоВыкупа = Истина;
			//КонецеСли;	
		КонецеСли;
		
		//добавление назначенных в 1с услуг
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	НазначенныеДопУслугиПоЗаказамСрезПоследних.Заказ,
		            |	НазначенныеДопУслугиПоЗаказамСрезПоследних.Тариф,
		            |	НазначенныеДопУслугиПоЗаказамСрезПоследних.Ставка,
		            |	НазначенныеДопУслугиПоЗаказамСрезПоследних.ДопУслуга КАК Услуга
		            |ИЗ
		            |	РегистрСведений.НазначенныеДопУслугиПоЗаказам.СрезПоследних(&ДатаЗапроса, ) КАК НазначенныеДопУслугиПоЗаказамСрезПоследних
		            |ГДЕ
		            |	НазначенныеДопУслугиПоЗаказамСрезПоследних.Ставка <> 0
		            |	И НазначенныеДопУслугиПоЗаказамСрезПоследних.Заказ = &Заказ";
		Зап.УстановитьПараметр("Заказ", Тек.Реализация);			
		Зап.УстановитьПараметр("ДатаЗапроса", КонецДня(Дата));			
		
		РезДопУ = Зап.Выполнить().Выбрать();
		
		Пока РезДопУ.Следующий() Цикл
			Нов = Услуги.Добавить();
			Нов.НазначенаВ1С = Истина;
			Нов.Реализация = РезДопУ.Заказ;
			Нов.Тариф = РезДопУ.Тариф;
			Нов.Ставка = РезДопУ.Ставка;
			Нов.Услуга = РезДопУ.Услуга;
			Нов.СуммаДляИзменения = РасчетСуммыДопУслуги(РезДопУ.Тариф, РезДопУ.Ставка, Тек);
			Нов.СуммаПервичная = Нов.СуммаДляИзменения;
			Тек.Показатель1 = Тек.Показатель1 + Нов.СуммаПервичная;
		КонецЦикла;	
		
		
		
		Если Тек.ДокументОтчет.Пустая() Тогда
			Продолжить;
		КонецеСли;
		
		
		// Михушкин - Изменить заполнения документа ЗакрытиеЗаказов - 04.08.2016 --->> 
		Если ЗначениеЗаполнено(Тек.ДокументОтчет.ОтчетВодителя) Тогда		
			Если ЗначениеЗаполнено(Тек.ДокументОтчет.ОтчетВодителя.Водитель) Тогда
				Тек.Водитель = Тек.ДокументОтчет.ОтчетВодителя.Водитель;
			КонецЕсли;			
			Если ЗначениеЗаполнено(Тек.ДокументОтчет.ОтчетВодителя.Экспедитор) Тогда
				Тек.Экспедитор = Тек.ДокументОтчет.ОтчетВодителя.Экспедитор;
			КонецЕсли;					
		КонецЕсли;
		// <<--- Михушкин 
		
		
		Струк = новый Структура;
		Струк.Вставить("Реализация", Тек.Реализация);
		НайТов = Товары.НайтиСтроки(Струк);
		ФлагЧастички = Ложь;
		Для Сч = 0 По НайТов.Количество() - 1 Цикл
			Струк2 = Новый Структура;
			Струк2.Вставить("Доставка", Тек.Реализация);
			Струк2.Вставить("Номенклатура", НайТов[Сч].Номенклатура);
			//Асеев 01.09.2020 (Задача № 3761)>>>
			Струк2.Вставить("КодМаркировки", НайТов[Сч].КодМаркировки);
			//Асеев 01.09.2020 (Задача № 3761)<<<
            
            //Серегин М.В. 04.09.2015 13:06:05 
            НайЗак  = Тек.ДокументОтчет.Доставки.НайтиСтроки(Новый Структура("Доставка", Тек.Реализация));
            Если НайЗак.Количество()>0 Тогда 
                
                НайНом = Тек.ДокументОтчет.Товары.НайтиСтроки(Струк2);
                Если НайНом.Количество() = 1 Тогда
                    НайТов[Сч].КоличествоВозвращено = НайТов[Сч].Количество - НайНом[0].Количество;
                    НайТов[Сч].СуммаНовая = Окр(НайНом[0].Количество * НайТов[Сч].Цена, 2);
					Если НайТов[Сч].КоличествоВозвращено <> 0 Тогда
						ФлагЧастички = Истина;
					КонецеСли;	
                ИначеЕсли НайНом.Количество() = 0 Тогда	
                    НайТов[Сч].КоличествоВозвращено = НайТов[Сч].Количество;
                    НайТов[Сч].СуммаНовая = 0;
					Если НайТов[Сч].КоличествоВозвращено <> 0 Тогда
						ФлагЧастички = Истина;
					КонецеСли;	
                КонецЕсли;	
                
            КонецЕсли;
            //Серегин М.В. 04.09.2015 13:07:58 
		КонецЦикла;
		//Если ФлагЧастички Тогда
		//	Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично;
		//КонецеСли;	
		
		
	КонецЦикла;	
	
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	АктивныеДоговорыСубагентовСрезПоследних.Договор
	            |ИЗ
	            |	РегистрСведений.АктивныеДоговорыСубагентов.СрезПоследних(&ДатаЗапроса, ) КАК АктивныеДоговорыСубагентовСрезПоследних
	            |ГДЕ
	            |	АктивныеДоговорыСубагентовСрезПоследних.ДоговорАктивен = ИСТИНА";
				
				
	Если Не ЗначениеЗаполнено(ДатаЗакрытия) Тогда
		ДЗ = Дата;
	Иначе
		ДЗ = ДатаЗакрытия;
	КонецЕсли;	
	
	Зап.УстановитьПараметр("ДатаЗапроса", КонецДня(ДЗ));			
	Рез = Зап.Выполнить().Выгрузить();
	
	ДоговорыСубагентов.Очистить();
	
	Для Каждого Тек Из Рез Цикл
		Нов = ДоговорыСубагентов.Добавить();
		Нов.Договор = Тек.Договор;
	КонецЦикла;	
	
	ИнициализироватьЧистыеУслугиСД();
    ИнициализироватьПодъем(Ложь);
	
	
	// Михушкин - 18.05.2016 -  --->> 
	ЗаполнитьТЧРейсыПоЗаказам();
	
	ТипРТУ = Тип("ДокументСсылка.РеализацияТоваровУслуг");
	Для Каждого Тек Из Заказы Цикл
		Если ТипЗнч(Тек.Реализация) = ТипРТУ Тогда
			Тек.БылПереносСЗаездом = БылПереносСЗаездом(Тек.Реализация);	
		КонецЕсли;
	КонецЦикла;
	// <<--- Михушкин 
	
	
	
	// Михушкин - 08.06.2016 --->> 
	ЗаполнитьТЧРасстояния();
	// <<--- Михушкин 
	
	ЗаполнитьРасстоянияОтМагистральногоКольца();	
	
	// Михушкин --->> 	
	МассивСтрок = Новый Массив;	
	Для каждого Стр Из Заказы Цикл			
		МассивСтрок.Добавить(Стр);			
	КонецЦикла;	
	ОбновитьОпцииЗаказов(МассивСтрок, Истина);
	// <<--- Михушкин 
	
	ЗаполнитьОценочнаяСтоимостьВТовары();	
	
	
	// МАС - 22.06.2017 - №1164 --->> 
	ТЗЗаказы = Заказы.Выгрузить(, "Доставка");	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	новаОтчетВодителяЗадания.Задание КАК Задание,
	                      |	новаОтчетВодителяЗадания.ЭтоДоговор КАК ЭтоДоговор,
	                      |	новаОтчетВодителяЗадания.ТипВозвратногоЗаказа КАК ТипВозвратногоЗаказа,
	                      |	новаОтчетВодителяЗадания.ВидПроблемы КАК ВидПроблемы
	                      |ИЗ
	                      |	Документ.новаОтчетВодителя.Задания КАК новаОтчетВодителяЗадания
	                      |ГДЕ
	                      |	новаОтчетВодителяЗадания.Ссылка.Проведен
	                      |	И новаОтчетВодителяЗадания.Задание В(&Задания)");
	Запрос.УстановитьПараметр("Задания", ТЗЗаказы);
	РезТЗ = Запрос.Выполнить().Выгрузить();
	
	Для каждого Ст Из РезТЗ Цикл	
		Най = Заказы.НайтиСтроки(Новый Структура("Доставка", Ст.Задание));		
		Для каждого Строка Из Най Цикл	
			Строка.ВидПроблемыПриЗакрытииЗаказа = Ст.ВидПроблемы; 	
		    Строка.ЭтоДоговор 					= Ст.ЭтоДоговор;
			Строка.ТипВозвратногоЗаказа         = Ст.ТипВозвратногоЗаказа;			
		КонецЦикла;	
	КонецЦикла;	
	// <<--- МАС 
	
	
    ////+++++Серегин М.В. 07.12.2015 16:32:15 для ловли бага с 0
    //СтруктураОтбор = Новый Структура;
    //СтруктураОтбор.Вставить("КомментарийСД","0");
    //НайденыеСтроки = Заказы.НайтиСтроки(СтруктураОтбор);
    //Если НайденыеСтроки.Количество()>0 Тогда
    //    МассивПолучателей = Новый Массив;
    //    МассивПолучателей.Добавить("michail.seregin@strizh-logistic.ru");
    //    lem.ОтправитьСообщение(МассивПолучателей,"При заполнении "+Ссылка+" возник 0.","Параметры: Дата"+Дата+" Контрагент "+Контрагент+" ДатаЗакрытия "+ДатаЗакрытия+" ТипДоставки"+ТипДоставки);
    //КонецЕсли;
    ////-----Серегин М.В. 07.12.2015 16:32:17 
	
	//+Степанов Задача № 3761
	//Для Каждого СтрокаТовара Из Товары Цикл
	//	
	//	СтрокаШК = ТаблициШтрихкодовНоменклатуры.НайтиСтроки(Новый Структура("Реализация, Номенклатура", СтрокаТовара.Реализация, СтрокаТовара.Номенклатура));
	//	Если СтрокаШК.Количество() > 0 Тогда
	//		СтрокаТовара.ШтрихкодНоменклатуры = СтрокаШК[0].ШтрихкодНоменклатуры;
	//	КонецЕсли;
	//	
	//КонецЦикла;	
	//-Степанов Задача № 3761
	
	ЗаполнитьКомпонентыРасчета();
	
	//отключено в рамках задачи #3781
	//ОбработатьУслугиПоНеВыполненнымЗаказам(); // Задача № 3533
	
КонецФункции

//+Степанов Задача № 3945
Функция ОбновитьДанные_Старая() Экспорт
	
	Заказы.Очистить(); //В рамках Задача № 3247
	
	Запрос = Новый Запрос;
	
	ТекстДополнительныхУсловий = "";
	
	Если ВариантЗаполнения = 0 Тогда
		Запрос.УстановитьПараметр("ТипЗаказа", Перечисления.ТипыЗаказов.Доставка);
		Если ТипДоставки <> Перечисления.ТипыЗаказов.Забор И ТипДоставки <> Перечисления.ТипыЗаказов.Фрахт Тогда
			Если ЗначениеЗаполнено(НачалоПериода) Тогда
				ТекстДополнительныхУсловий = " И РеализацияТоваровУслуг.Дата >= &ДатаНач";
				Запрос.УстановитьПараметр("ДатаНач", НачалоПериода);
			КонецЕсли;
			Если ЗначениеЗаполнено(КонецПериода) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И РеализацияТоваровУслуг.Дата <= &ДатаКон";
				Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
			КонецЕсли;
			Если ЗначениеЗаполнено(Контрагент) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И РеализацияТоваровУслуг.ВладелецТовара = &Контрагент";
				Запрос.УстановитьПараметр("Контрагент", Контрагент);
			КонецЕсли;
			Если ЗначениеЗаполнено(ТранспортнаяКомпания) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И РеализацияТоваровУслуг.ТранспортнаяКомпания = &ТК";
				Запрос.УстановитьПараметр("ТК", ТранспортнаяКомпания);
			КонецЕсли;
			Запрос.УстановитьПараметр("ТипЗаказа", Перечисления.ТипыЗаказов.Доставка);
		ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Забор Тогда
			Если ЗначениеЗаполнено(НачалоПериода) Тогда
				ТекстДополнительныхУсловий = " И ЗаборТовара.Дата >= &ДатаНач";
				Запрос.УстановитьПараметр("ДатаНач", НачалоПериода);
			КонецЕсли;
			Если ЗначениеЗаполнено(КонецПериода) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И ЗаборТовара.Дата <= &ДатаКон";
				Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
			КонецЕсли;
			Если ЗначениеЗаполнено(Контрагент) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И ЗаборТовара.Контрагент = &Контрагент";
				Запрос.УстановитьПараметр("Контрагент", Контрагент);
			КонецЕсли;		
			Если ЗначениеЗаполнено(ТранспортнаяКомпания) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И РеализацияТоваровУслуг.ТранспортнаяКомпания = &ТК";
				Запрос.УстановитьПараметр("ТК", ТранспортнаяКомпания);
			КонецЕсли;
			Запрос.УстановитьПараметр("ТипЗаказа", Перечисления.ТипыЗаказов.Забор);
		ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Фрахт Тогда
			Если ЗначениеЗаполнено(НачалоПериода) Тогда
				ТекстДополнительныхУсловий = " И Фрахт.Дата >= &ДатаНач";
				Запрос.УстановитьПараметр("ДатаНач", НачалоПериода);
			КонецЕсли;
			Если ЗначениеЗаполнено(КонецПериода) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И Фрахт.Дата <= &ДатаКон";
				Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
			КонецЕсли;
			Если ЗначениеЗаполнено(Контрагент) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И Фрахт.Контрагент = &Контрагент";
				Запрос.УстановитьПараметр("Контрагент", Контрагент);
			КонецЕсли;	
			Если ЗначениеЗаполнено(ТранспортнаяКомпания) Тогда
				ТекстДополнительныхУсловий = ТекстДополнительныхУсловий + " И РеализацияТоваровУслуг.ТранспортнаяКомпания = &ТК";
				Запрос.УстановитьПараметр("ТК", ТранспортнаяКомпания);
			КонецЕсли;		
			Запрос.УстановитьПараметр("ТипЗаказа", Перечисления.ТипыЗаказов.Фрахт);
		КонецеСли;
	ИначеЕСли ВариантЗаполнения = 1 Тогда
		////////////////////////////////////////////новый вариант заполнения
		Запрос.УстановитьПараметр("Рейс", Рейс.Ссылка);
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Рейс.ДатаРейса));
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(Рейс.ДатаРейса));
		Запрос.УстановитьПараметр("НаДатуСтатусы", Дата);
	ИначеЕСли ВариантЗаполнения = 2 Тогда
		////////////////////////////////////////////новый вариант заполнения
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачалоПериода));
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
	ИначеЕсли ВариантЗаполнения = 3	Тогда
		Запрос.УстановитьПараметр("ДокументЗакрытие", Ссылка); // Конкретизация запроса по отклоненным Задача 3247, 04.09.2019
	КонецеСли;
	
	Запрос.УстановитьПараметр("ДатаЗакрытия", ДатаЗакрытия);
	Запрос.УстановитьПараметр("НаДату", КонецДня(КонецПериода));
	
	ТерминалыДоставки = Новый Массив;
	
		
	Если ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
		ТерминалыДоставки.Добавить(ТерминалДоставки);
		ТерминалыДоставки.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
	Иначе
		ТерминалыДоставки.Добавить(ТерминалДоставки);
	КонецеСли;	
	
	СхемаМатрицыТарификации = ТарификацияУслугСервер.ОпределитьАктуальнуюСхемуТарификации();
	
	Запрос.УстановитьПараметр("ТерминалыДоставки", ТерминалыДоставки);
	
	Если Дата >= Дата("20131028000000") Тогда
		Если ВариантЗаполнения = 0 Тогда
			Запрос.Текст = СтрЗаменить(
			ПолучитьБазовыйТекстЗапроса2014(),
			"$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ",
			ТекстДополнительныхУсловий
			);
		ИначеЕсли ВариантЗаполнения = 1 Тогда	
			Запрос.Текст = СтрЗаменить(
			ПолучитьБазовыйТекстЗапросаПоРейсу(),
			"$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ",
			ТекстДополнительныхУсловий
			);
		ИначеЕсли ВариантЗаполнения = 2 Тогда	
			Запрос.Текст = СтрЗаменить(
			ПолучитьБазовыйТекстЗапросаПоСамовывозам(),
			"$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ",
			ТекстДополнительныхУсловий
			);
		ИначеЕсли ВариантЗаполнения = 3 Тогда  //Задача № 3247
			Запрос.Текст = СтрЗаменить(
			ПолучитьТекстЗапросаПоОтклоненным(),
			"$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ",
			ТекстДополнительныхУсловий
			);
		КонецеСли;	
	Иначе
		Запрос.Текст = СтрЗаменить(
		ПолучитьБазовыйТекстЗапроса(),
		"$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ",
		ТекстДополнительныхУсловий
		);
	КонецЕсли;
	Список = Запрос.Выполнить().Выгрузить();
	
	МасН = Список.ВыгрузитьКолонку("Номер");
	
	зап2 = Новый Запрос;
	//+Степанов Задача № 3761 В запрос добалено поле КодМаркировки
	//Зап2.Текст = "ВЫБРАТЬ
	//             |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	//             |	РеализацияТоваровУслугТовары.Количество КАК Количество,
	//             |	РеализацияТоваровУслугТовары.Цена КАК Цена,
	//             |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма,
	//             |	РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
	//             |	РеализацияТоваровУслугТовары.Ссылка.Ссылка КАК Реализация,
	//             |	РеализацияТоваровУслугТовары.Вес * РеализацияТоваровУслугТовары.Количество КАК Масса,
	//             |	РеализацияТоваровУслугТовары.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
	//             |ПОМЕСТИТЬ ВТТовары
	//             |ИЗ
	//             |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	//             |ГДЕ
	//             |	РеализацияТоваровУслугТовары.Ссылка.Номер В(&МасНом)
	//             |
	//             |СГРУППИРОВАТЬ ПО
	//             |	РеализацияТоваровУслугТовары.Номенклатура,
	//             |	РеализацияТоваровУслугТовары.Цена,
	//             |	РеализацияТоваровУслугТовары.Ссылка.Номер,
	//             |	РеализацияТоваровУслугТовары.Ссылка.Ссылка,
	//             |	РеализацияТоваровУслугТовары.Вес * РеализацияТоваровУслугТовары.Количество,
	//             |	РеализацияТоваровУслугТовары.Количество,
	//             |	РеализацияТоваровУслугТовары.ШтрихкодНоменклатуры
	//             |
	//             |ОБЪЕДИНИТЬ ВСЕ
	//             |
	//             |ВЫБРАТЬ
	//             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	//             |	-ВозвратТоваровОтПокупателяТовары.Количество,
	//             |	ВозвратТоваровОтПокупателяТовары.Цена,
	//             |	СУММА(-ВозвратТоваровОтПокупателяТовары.Сумма),
	//             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
	//             |	РеализацияТоваровУслуг.Ссылка,
	//             |	0,
	//             |	ВозвратТоваровОтПокупателяТовары.ШтрихкодНоменклатуры
	//             |ИЗ
	//             |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	//             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//             |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
	//             |ГДЕ
	//             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер В(&МасНом)
	//             |
	//             |СГРУППИРОВАТЬ ПО
	//             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	//             |	ВозвратТоваровОтПокупателяТовары.Цена,
	//             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
	//             |	-ВозвратТоваровОтПокупателяТовары.Количество,
	//             |	РеализацияТоваровУслуг.Ссылка,
	//             |	ВозвратТоваровОтПокупателяТовары.ШтрихкодНоменклатуры
	//             |
	//             |ОБЪЕДИНИТЬ ВСЕ
	//             |
	//             |ВЫБРАТЬ
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Количество,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Цена,
	//             |	СУММА(РеализацияТоваровУслугПодарочныеПозиции.Сумма),
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Ссылка,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Количество * РеализацияТоваровУслугПодарочныеПозиции.Вес,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.ШтрихкодНоменклатуры
	//             |ИЗ
	//             |	Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
	//             |ГДЕ
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер В(&МасНом)
	//             |
	//             |СГРУППИРОВАТЬ ПО
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Цена,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Ссылка,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Количество * РеализацияТоваровУслугПодарочныеПозиции.Вес,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.Количество,
	//             |	РеализацияТоваровУслугПодарочныеПозиции.ШтрихкодНоменклатуры
	//             |;
	//             |
	//             |////////////////////////////////////////////////////////////////////////////////
	//             |ВЫБРАТЬ
	//             |	ВТТовары.Номенклатура КАК Номенклатура,
	//             |	ВТТовары.Количество КАК Количество,
	//             |	ВТТовары.Цена КАК Цена,
	//             |	ВТТовары.Сумма КАК Сумма,
	//             |	новаМестнаяДоставка.Ссылка КАК Доставка,
	//             |	ВТТовары.Реализация.Ссылка КАК Реализация,
	//             |	ВТТовары.Масса КАК Масса,
	//             |	ВТТовары.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
	//             |ИЗ
	//             |	ВТТовары КАК ВТТовары
	//             |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	//             |		ПО ВТТовары.Номер = новаМестнаяДоставка.Номер
	//             |;
	//             |
	//             |////////////////////////////////////////////////////////////////////////////////
	//             |УНИЧТОЖИТЬ ВТТовары";
	Зап2.Текст = "ВЫБРАТЬ
	             |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	             |	РеализацияТоваровУслугТовары.Количество КАК Количество,
	             |	РеализацияТоваровУслугТовары.Цена КАК Цена,
	             |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма,
	             |	РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
	             |	РеализацияТоваровУслугТовары.Ссылка.Ссылка КАК Реализация,
	             |	РеализацияТоваровУслугТовары.Вес * РеализацияТоваровУслугТовары.Количество КАК Масса,
	             |	РеализацияТоваровУслугТовары.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры,
	             |	РеализацияТоваровУслугТовары.КодМаркировки КАК КодМаркировки
	             |ПОМЕСТИТЬ ВТТовары
	             |ИЗ
	             |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	             |ГДЕ
	             |	РеализацияТоваровУслугТовары.Ссылка.Номер В(&МасНом)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	РеализацияТоваровУслугТовары.Номенклатура,
	             |	РеализацияТоваровУслугТовары.Цена,
	             |	РеализацияТоваровУслугТовары.Ссылка.Номер,
	             |	РеализацияТоваровУслугТовары.Ссылка.Ссылка,
	             |	РеализацияТоваровУслугТовары.Вес * РеализацияТоваровУслугТовары.Количество,
	             |	РеализацияТоваровУслугТовары.Количество,
	             |	РеализацияТоваровУслугТовары.ШтрихкодНоменклатуры,
	             |	РеализацияТоваровУслугТовары.КодМаркировки
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	             |	-ВозвратТоваровОтПокупателяТовары.Количество,
	             |	ВозвратТоваровОтПокупателяТовары.Цена,
	             |	СУММА(-ВозвратТоваровОтПокупателяТовары.Сумма),
	             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
	             |	РеализацияТоваровУслуг.Ссылка,
	             |	0,
	             |	ВозвратТоваровОтПокупателяТовары.ШтрихкодНоменклатуры,
	             |	NULL
	             |ИЗ
	             |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	             |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
	             |ГДЕ
	             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер В(&МасНом)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	             |	ВозвратТоваровОтПокупателяТовары.Цена,
	             |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
	             |	-ВозвратТоваровОтПокупателяТовары.Количество,
	             |	РеализацияТоваровУслуг.Ссылка,
	             |	ВозвратТоваровОтПокупателяТовары.ШтрихкодНоменклатуры
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Количество,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Цена,
	             |	СУММА(РеализацияТоваровУслугПодарочныеПозиции.Сумма),
	             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Ссылка,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Количество * РеализацияТоваровУслугПодарочныеПозиции.Вес,
	             |	РеализацияТоваровУслугПодарочныеПозиции.ШтрихкодНоменклатуры,
	             |	РеализацияТоваровУслугПодарочныеПозиции.КодМаркировки
	             |ИЗ
	             |	Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
	             |ГДЕ
	             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер В(&МасНом)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Цена,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Ссылка,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Количество * РеализацияТоваровУслугПодарочныеПозиции.Вес,
	             |	РеализацияТоваровУслугПодарочныеПозиции.Количество,
	             |	РеализацияТоваровУслугПодарочныеПозиции.ШтрихкодНоменклатуры,
	             |	РеализацияТоваровУслугПодарочныеПозиции.КодМаркировки
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВТТовары.Номенклатура КАК Номенклатура,
	             |	ВТТовары.Количество КАК Количество,
	             |	ВТТовары.Цена КАК Цена,
	             |	ВТТовары.Сумма КАК Сумма,
	             |	новаМестнаяДоставка.Ссылка КАК Доставка,
	             |	ВТТовары.Реализация.Ссылка КАК Реализация,
	             |	ВТТовары.Масса КАК Масса,
	             |	ВТТовары.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры,
	             |	ВТТовары.КодМаркировки КАК КодМаркировки
	             |ИЗ
	             |	ВТТовары КАК ВТТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	             |		ПО ВТТовары.Номер = новаМестнаяДоставка.Номер
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ ВТТовары";
	//-Степанов Задача № 3761 
				 
	Зап2.УстановитьПараметр("МасНом", МасН);			 
	
    Т = Зап2.Выполнить().Выгрузить();
	
	Товары.Очистить(); //В рамках Задача № 3153 
	
	Для Каждого Тек Из Т Цикл			
		Нов = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, тек);
		ПодсчетНовойСуммы(Нов);	
	КонецЦикла;	
	
	//+Степанов
	//ТаблициШтрихкодовНоменклатуры = Т.Скопировать(,"Реализация, Номенклатура, ШтрихкодНоменклатуры");
	//-Степанов
    
    //Серегин М.В. 23.07.2015 12:03:41 заполнение ТЧ Услуги
    Услуги.Очистить();
    Для каждого Стр Из Список Цикл
        
        ТекстЗапроса ="
        | DECLARE @t Torder   
        | INSERT INTO @t ([orderID]) VALUES ("+СокрЛП(Стр.Номер)+")
        | EXEC p1c_getOrdersServices @t
        |";
        Результат = smv.СформироватьТаблицуЗначенийИзДанныхSQL(ТекстЗапроса);
        
        Если Результат.Количество()>0 Тогда 
            
            Для каждого СтрРезультат Из Результат Цикл
				Если СтрРезультат.count = 0 Тогда
					Продолжить;
				КонецеСли;	
					                
                Услуга = Справочники.ПоказателиРасчетаУслугСД.НайтиПоРеквизиту("НомерПоказателяАдминки",СтрРезультат.serviceId);
                Если ЗначениеЗаполнено(Услуга) Тогда
                    СтрокаУслуги = Услуги.Добавить();
                    СтрокаУслуги.Реализация = Стр.Реализация;
                    СтрокаУслуги.Услуга = Услуга;
                    СтрокаУслуги.СуммаПервичная = СтрРезультат.price;
                    СтрокаУслуги.СуммаДляИзменения = СтрРезультат.price;
                КонецЕсли;
                
            КонецЦикла;
            
        КонецЕсли;
		
		
    КонецЦикла;
    //Серегин М.В. 23.07.2015 12:03:44 
    
	Для Каждого Тек Из Список Цикл
		Нов = Заказы.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Тек);
		
		// костыль Veeroute (задачи доставки)
		Если Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Или Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Или Нов.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
			Нов.Доставлен = Истина;
		КонецеСли;		
		
		// Михушкин --->> 
		Если Нов.ТерминалДоставки = Справочники.РегиональныеТерминалы.СПбСтриж Тогда
			Нов.Доставлен = Истина;
		КонецЕсли;
		// <<--- Михушкин 
		
		//lem 11.08.2017 подъемы
		Если Нов.МетодОплатыПодъема <> Перечисления.МетодыОплатыПодъёмаЗаказа.ОплачиваетПартнер Тогда
			Нов.Показатель2 = 0;
			Нов.ПодъемВодитель = 0;
		ИначеЕсли Нов.МетодОплатыПодъема = Перечисления.МетодыОплатыПодъёмаЗаказа.ОплачиваетПартнер И ЗначениеЗаполнено(Нов.ВидПодъемаНаЭтаж) И Нов.ВидПодъемаНаЭтаж <> Перечисления.ВидыПодъемовВодителя.БезПодъема Тогда
			ДанныеПодъема = Новый Структура;
			Если Нов.ВидПодъемаНаЭтаж = Перечисления.ВидыПодъемовВодителя.РучнойПодъем Тогда
				ДанныеПодъема.Вставить("МетодПодъема", Перечисления.ТипПодъемаНаЭтаж.ПодъемЗаказаБезЛифта);
			ИначеЕсли Нов.ВидПодъемаНаЭтаж = Перечисления.ВидыПодъемовВодителя.Лифт Тогда
				ДанныеПодъема.Вставить("МетодПодъема", Перечисления.ТипПодъемаНаЭтаж.ПодъемЗаказаНаЛифте);
			КонецЕсли;	
			ДанныеПодъема.Вставить("КоличествоХодок", Нов.КоличествоХодокПриПодъемеЗаказа);
			ДанныеПодъема.Вставить("Этаж", Нов.Этаж);
			ДанныеПодъема.Вставить("НомерЗаказа", СокрЛП(Нов.Номер));
			ДанныеПодъема.Вставить("ВесЗаказа", Нов.ВесЗаказаДляПодъемаМП);
			
			ДанныеТарифа = ТарифыНаПодъемЗаказаНаЭтажСервер.ПолучитьРасчетныеДанныеПодъемаЗаказаНаЭтаж(ДанныеПодъема);
			
			// МАС - 29.08.2017  --->> 
			//Если ДанныеТарифа.Успешно Тогда
			//// <<--- МАС
			//	Нов.Показатель2 = ДанныеТарифа.СтоимостьПодъема;
			//	Нов.ПодъемныйБрейк = ДанныеТарифа.Брейк;						
			//// МАС - 29.08.2017 --->> 
			//КонецЕсли;
			// <<--- МАС			
		КонецеСли;	
		
		ПриИзмененииСтоимостиПодъема(Нов);
		//lem 11.08.2017
		
		Нов.ПредТипОплаты = Тек.ТипОплатыЗаказа;
		Нов.ПредУслугиСД = Тек.УслугиСД;
		Нов.Показатель1 = Тек.УслугиСД;
		
		
		// ДанныеЗаказаСамовывоза переработали, костыль закомменчиваю. Марочкин 08.05.2015
		
        //Серегин М.В. 30.04.2015 11:41:52 разбираться с запросами долго, так что вставил костыль сюда
		//Если ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз  Тогда
		//    НайденныеДокументы = Документы.ДанныеЗаказаСамовывоза.НайтиПоРеквизиту("Реализация", Тек.Реализация); 
		//    Если НЕ НайденныеДокументы.Пустая()  Тогда
		//        Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена;
		//    Иначе 
		//        Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена;
		//    КонецЕсли; 
		//КонецЕсли;
        //Серегин М.В. 30.04.2015 11:44:08 
        
		Нов.ПредРезультатДоставки = Нов.РезультатДоставки;
		Нов.ПредПричинаНевыполнения = Нов.ПричинаНевыполнения;
		Нов.ПредСуммаДоставкиДоМКАД = Нов.СуммаДоставкиДоМКАД;
		
		Если Нов.ВариантРасчетаКО.Пустая() Тогда
			Нов.ВариантРасчетаКО = Константы.ВариантРасчетаКОПоУмолчанию.Получить();
		КонецеСли;	
		
		//Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
		
		Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Тогда
			// подтягиваем данные из истории состава заказа (временно)
			ЗапИ = Новый Запрос;
			//+Степанов Задача № 3761 Получаем из заказа код маркировки
			//ЗапИ.Текст = "ВЫБРАТЬ
			//             |	ИсторияСоставаЗаказов.Номенклатура,
			//             |	ИсторияСоставаЗаказов.Цена,
			//             |	ИсторияСоставаЗаказов.Количество,
			//             |	ИсторияСоставаЗаказов.Масса
			//             |ИЗ
			//             |	РегистрСведений.ИсторияСоставаЗаказов КАК ИсторияСоставаЗаказов
			//             |ГДЕ
			//             |	ИсторияСоставаЗаказов.Заказ = &Заказ
			//             |	И ИсторияСоставаЗаказов.ДокументРегистратор = &Заказ
			//             |
			//             |УПОРЯДОЧИТЬ ПО
			//             |	ИсторияСоставаЗаказов.ТипТабличнойЧасти,
			//             |	ИсторияСоставаЗаказов.НомерСтрокиДокумента";
			//
			ЗапИ.Текст = "ВЫБРАТЬ
			             |	ИсторияСоставаЗаказов.Номенклатура КАК Номенклатура,
			             |	ИсторияСоставаЗаказов.Цена КАК Цена,
			             |	ИсторияСоставаЗаказов.Количество КАК Количество,
			             |	ИсторияСоставаЗаказов.Масса КАК Масса,
			             |	ИсторияСоставаЗаказов.КодМаркировки КАК КодМаркировки,
						 |	ИсторияСоставаЗаказов.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
			             |ИЗ
			             |	РегистрСведений.ИсторияСоставаЗаказов КАК ИсторияСоставаЗаказов
			             |ГДЕ
			             |	ИсторияСоставаЗаказов.Заказ = &Заказ
			             |	И ИсторияСоставаЗаказов.ДокументРегистратор = &Заказ
			             |
			             |УПОРЯДОЧИТЬ ПО
			             |	ИсторияСоставаЗаказов.ТипТабличнойЧасти,
			             |	ИсторияСоставаЗаказов.НомерСтрокиДокумента";
			//-Степанов Задача № 3761
			ЗапИ.УстановитьПараметр("Заказ", Тек.Реализация.Ссылка);			 
			РезИ = ЗапИ.Выполнить();
			если Не РезИ.Пустой() Тогда
				Струк = Новый Структура;
				Струк.Вставить("Реализация", Нов.Реализация);
				НайСтроки = Товары.НайтиСтроки(Струк);
				Для СчИ = 0 По НайСтроки.Количество() - 1 Цикл
					Товары.Удалить(НайСтроки[СчИ]);
				КонецЦикла;	
			КонецеСли;	
			
			ТабИ = РезИ.Выгрузить();
			Для Каждого ТекИ Из ТабИ Цикл
				НовТ = Товары.Добавить();
				НовТ.Доставка = Нов.Доставка;
				НовТ.Реализация = Нов.Реализация;
				НовТ.Масса = ТекИ.Масса;
				НовТ.Номенклатура = ТекИ.Номенклатура;
				НовТ.Количество = ТекИ.Количество;
				НовТ.Цена = ТекИ.Цена;
				НовТ.Сумма = Окр(НовТ.Цена*НовТ.Количество, 2);
				НовТ.СуммаНовая = НовТ.Сумма;
				//+Степанов Задача № 3761
				НовТ.ШтрихкодНоменклатуры = ТекИ.ШтрихкодНоменклатуры;
				НовТ.КодМаркировки = текИ.КодМаркировки;
				//-Степанов Задача № 3761
			КонецЦикла;
			
			если Не РезИ.Пустой() Тогда
				Зап_ = Новый Запрос;
				Если Не Нов.Доставка.Пустая() Тогда
					Зап_.Текст = "ВЫБРАТЬ
					             |	РеализацияТоваровУслуг.Ссылка КАК Реализация,
					             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
					             |	-ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
					             |	ВозвратТоваровОтПокупателяТовары.Цена,
					             |	-ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
					             |	-ВозвратТоваровОтПокупателяТовары.Сумма КАК СуммаНовая,
					             |	новаМестнаяДоставка.Ссылка КАК Доставка
					             |ИЗ
					             |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
					             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
					             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
					             |			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
					             |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
					             |ГДЕ
					             |	РеализацияТоваровУслуг.Ссылка = &Док";
				Иначе
					Зап_.Текст = "ВЫБРАТЬ
					|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
					|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
					|	-ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
					|	ВозвратТоваровОтПокупателяТовары.Цена,
					|	-ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
					|	-ВозвратТоваровОтПокупателяТовары.Сумма КАК СуммаНовая
					|ИЗ
					|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
					|		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
					|ГДЕ
					|	РеализацияТоваровУслуг.Ссылка = &Док";
				КонецеСли;
				Зап_.УстановитьПараметр("Док", Тек.Реализация.Ссылка); 			
				
				Рез = Зап_.Выполнить().Выгрузить();
				Для Каждого ТекС Из Рез Цикл
					Струк = Новый Структура;
					Струк.Вставить("Реализация", ТекС.Реализация);
					Струк.Вставить("Сумма", ТекС.Сумма);
					Струк.Вставить("Количество", ТекС.Количество);
					Струк.Вставить("Номенклатура", ТекС.Номенклатура);
					
					Нов_ = Товары.Добавить();
					ЗаполнитьЗначенияСвойств(Нов_, ТекС);
				КонецЦикла;
			КонецеСли;
		КонецеСли;
				
		
		
		
		
		Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
			
			// подтягиваем данные из истории состава заказа (временно)
			ЗапИ = Новый Запрос;
			//+Степанов Задача № 3761
			//ЗапИ.Текст = "ВЫБРАТЬ
			//             |	ИсторияСоставаЗаказов.Номенклатура КАК Номенклатура,
			//             |	ИсторияСоставаЗаказов.Цена КАК Цена,
			//             |	ИсторияСоставаЗаказов.Количество КАК Количество,
			//             |	ИсторияСоставаЗаказов.Масса КАК Масса
			//             |ИЗ
			//             |	РегистрСведений.ИсторияСоставаЗаказов КАК ИсторияСоставаЗаказов
			//             |ГДЕ
			//             |	ИсторияСоставаЗаказов.Заказ = &Заказ
			//             |	И ИсторияСоставаЗаказов.ДокументРегистратор = &Заказ
			//             |
			//             |УПОРЯДОЧИТЬ ПО
			//             |	ИсторияСоставаЗаказов.ТипТабличнойЧасти,
			//             |	ИсторияСоставаЗаказов.НомерСтрокиДокумента";
			ЗапИ.Текст = "ВЫБРАТЬ
			             |	ИсторияСоставаЗаказов.Номенклатура КАК Номенклатура,
			             |	ИсторияСоставаЗаказов.Цена КАК Цена,
			             |	ИсторияСоставаЗаказов.Количество КАК Количество,
			             |	ИсторияСоставаЗаказов.Масса КАК Масса,
			             |	ИсторияСоставаЗаказов.КодМаркировки КАК КодМаркировки,
						 |	ИсторияСоставаЗаказов.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
			             |ИЗ
			             |	РегистрСведений.ИсторияСоставаЗаказов КАК ИсторияСоставаЗаказов
			             |ГДЕ
			             |	ИсторияСоставаЗаказов.Заказ = &Заказ
			             |	И ИсторияСоставаЗаказов.ДокументРегистратор = &Заказ
			             |
			             |УПОРЯДОЧИТЬ ПО
			             |	ИсторияСоставаЗаказов.ТипТабличнойЧасти,
			             |	ИсторияСоставаЗаказов.НомерСтрокиДокумента";
			//-Степанов Задача № 3761
			ЗапИ.УстановитьПараметр("Заказ", Тек.Реализация.Ссылка);			 
			РезИ = ЗапИ.Выполнить();
			если Не РезИ.Пустой() Тогда
				Струк = Новый Структура;
				Струк.Вставить("Реализация", Нов.Реализация);
				НайСтроки = Товары.НайтиСтроки(Струк);
				Для СчИ = 0 По НайСтроки.Количество() - 1 Цикл
					Товары.Удалить(НайСтроки[СчИ]);
				КонецЦикла;	
			КонецеСли;	
			
			ТабИ = РезИ.Выгрузить();
			Для Каждого ТекИ Из ТабИ Цикл
				НовТ = Товары.Добавить();
				НовТ.Доставка = Нов.Доставка;
				НовТ.Реализация = Нов.Реализация;
				НовТ.Масса = ТекИ.Масса;
				НовТ.Номенклатура = ТекИ.Номенклатура;
				НовТ.Количество = ТекИ.Количество;
				НовТ.Цена = ТекИ.Цена;
				НовТ.Сумма = Окр(НовТ.Цена*НовТ.Количество, 2);
				НовТ.СуммаНовая = НовТ.Сумма;
				//+Степанов Задача № 3761
				НовТ.ШтрихкодНоменклатуры = ТекИ.ШтрихкодНоменклатуры;
				НовТ.КодМаркировки = ТекИ.КодМаркировки;
				//-Степанов Задача № 3761
			КонецЦикла;
			
			Если Не РезИ.Пустой() Тогда
				Зап_ = Новый Запрос;
				//Асеев 04.09.2020 (Задача № 3761)>>>
				//Зап_.Текст = "ВЫБРАТЬ
				//             |	ДанныеЗаказаСамовывозаДоставленныеТовары.Номенклатура,
				//             |	ДанныеЗаказаСамовывозаДоставленныеТовары.Цена,
				//             |	ДанныеЗаказаСамовывозаДоставленныеТовары.Сумма,
				//             |	ДанныеЗаказаСамовывозаДоставленныеТовары.Количество - ДанныеЗаказаСамовывозаДоставленныеТовары.КоличествоДоставлено КАК КоличествоНеДоставлено,
				//             |	РеализацияТоваровУслуг.Ссылка КАК Реализация
				//             |ПОМЕСТИТЬ ВТ
				//             |ИЗ
				//             |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
				//             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаСамовывоза.ДоставленныеТовары КАК ДанныеЗаказаСамовывозаДоставленныеТовары
				//             |		ПО РеализацияТоваровУслуг.Ссылка = ДанныеЗаказаСамовывозаДоставленныеТовары.Ссылка.Реализация
				//             |ГДЕ
				//             |	ДанныеЗаказаСамовывозаДоставленныеТовары.Ссылка.Ссылка = &Ссылка
				//             |;
				//             |
				//             |////////////////////////////////////////////////////////////////////////////////
				//             |ВЫБРАТЬ
				//             |	ВТ.Номенклатура,
				//             |	ВТ.Цена,
				//             |	ВТ.Сумма КАК Сумма,
				//             |	ВТ.КоличествоНеДоставлено КАК КоличествоНеДоставлено,
				//             |	ВТ.Реализация
				//             |ИЗ
				//             |	ВТ КАК ВТ
				//             |ГДЕ
				//             |	ВТ.КоличествоНеДоставлено <> 0";
				//Зап_.УстановитьПараметр("Ссылка", ?(ЗначениеЗаполнено(Тек.ДанныеСамовывоза), Тек.ДанныеСамовывоза.Ссылка, Тек.Реализация.Ссылка)); 
				Зап_.Текст =
				"ВЫБРАТЬ
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Номенклатура КАК Номенклатура,
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.КодМаркировки КАК КодМаркировки,
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Цена КАК Цена,
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Сумма КАК Сумма,
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Количество - ДанныеЗаказаСамовывозаДоставленныеТовары.КоличествоДоставлено КАК КоличествоНеДоставлено,
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Ссылка.Реализация КАК Реализация
				|ИЗ
				|	Документ.ДанныеЗаказаСамовывоза.ДоставленныеТовары КАК ДанныеЗаказаСамовывозаДоставленныеТовары
				|ГДЕ
				|	ДанныеЗаказаСамовывозаДоставленныеТовары.Ссылка = &Ссылка
				|	И ДанныеЗаказаСамовывозаДоставленныеТовары.Количество - ДанныеЗаказаСамовывозаДоставленныеТовары.КоличествоДоставлено <> 0";
				Зап_.УстановитьПараметр("Ссылка", ?(ЗначениеЗаполнено(Тек.ДанныеСамовывоза), Тек.ДанныеСамовывоза, Тек.Реализация));
				//Асеев 04.09.2020 (Задача № 3761)<<<
				Рез = Зап_.Выполнить().Выгрузить();
				
				Для Каждого ТекC Из Рез Цикл
					
					Най_ = Товары.НайтиСтроки(Новый Структура("Реализация", ТекC.Реализация));
					Если Най_.Количество() Тогда						
						Для каждого Стр_ Из Най_ Цикл
							//Асеев 04.09.2020 (Задача № 3761)>>>
							//Если ТекC.Номенклатура = Стр_.Номенклатура Тогда
							Если ТекC.Номенклатура = Стр_.Номенклатура И ТекC.КодМаркировки = Стр_.КодМаркировки Тогда
								//Асеев 04.09.2020 (Задача № 3761)<<<
								Стр_.КоличествоВозвращено = ТекC.КоличествоНеДоставлено;
							    ПодсчетНовойСуммы(Стр_);						
							КонецЕсли;					
						КонецЦикла;								
					Иначе					
						Нов_ = Товары.Добавить();
						ЗаполнитьЗначенияСвойств(Нов_, ТекC);	
					КонецЕсли;	
					
				КонецЦикла;	
	
			КонецеСли;



			Если Не РезИ.Пустой() Тогда
				Зап_ = Новый Запрос;
				Если Не Нов.Доставка.Пустая() Тогда
					Зап_.Текст = "ВЫБРАТЬ
					             |	РеализацияТоваровУслуг.Ссылка КАК Реализация,
					             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
					             |	-ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
					             |	ВозвратТоваровОтПокупателяТовары.Цена,
					             |	-ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
					             |	-ВозвратТоваровОтПокупателяТовары.Сумма КАК СуммаНовая,
					             |	новаМестнаяДоставка.Ссылка КАК Доставка
					             |ИЗ
					             |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
					             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
					             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
					             |			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
					             |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
					             |ГДЕ
					             |	РеализацияТоваровУслуг.Ссылка = &Док";
				Иначе
					Зап_.Текст = "ВЫБРАТЬ
					|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
					|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
					|	-ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
					|	ВозвратТоваровОтПокупателяТовары.Цена,
					|	-ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
					|	-ВозвратТоваровОтПокупателяТовары.Сумма КАК СуммаНовая
					|ИЗ
					|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
					|		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
					|ГДЕ
					|	РеализацияТоваровУслуг.Ссылка = &Док";
				КонецеСли;
				Зап_.УстановитьПараметр("Док", Тек.Реализация.Ссылка); 			
				
				Рез = Зап_.Выполнить().Выгрузить();
				Для Каждого ТекС Из Рез Цикл
					Струк = Новый Структура;
					Струк.Вставить("Реализация", ТекС.Реализация);
					Струк.Вставить("Сумма", ТекС.Сумма);
					Струк.Вставить("Количество", ТекС.Количество);
					Струк.Вставить("Номенклатура", ТекС.Номенклатура);
					
					Нов_ = Товары.Добавить();
					ЗаполнитьЗначенияСвойств(Нов_, ТекС);
				КонецЦикла;
			КонецеСли;
			
		КонецеСли;
		
		//Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
		//		
		//ИначеЕсли;
		
		
		
		НайСтроки = Неопределено;
		Если Не Нов.Доставка.Пустая() Тогда
			Струк = Новый Структура;
			Струк.Вставить("Доставка", Нов.Доставка);
			НайСтроки = Товары.НайтиСтроки(Струк);
		ИначеЕсли Не Нов.Реализация.Пустая() Тогда
			Струк = Новый Структура;
			Струк.Вставить("Реализация", Нов.Реализация);
			НайСтроки = Товары.НайтиСтроки(Струк);
		КонецеСли;	
		
		НашлиМинус = Ложь;
		Если НайСтроки <> Неопределено Тогда
			Для Сч = 0 По НайСтроки.Количество() - 1 Цикл
				Если НайСтроки[Сч].Количество < 0 Тогда
					НашлиМинус = Истина;
					Прервать;
				КонецеСли;	
			КонецЦикла;	
		КонецеСли;	
		Нов.ПризнакВозврата = НашлиМинус;
		
		//CeHbKA
		Если ТипЗнч(Нов.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Нов.ЮрЛицо = Нов.Реализация.ВладелецТовара.ОсновнойДоговорКонтрагента.Организация;
		ИначеЕсли ТипЗнч(Нов.Реализация) = Тип("ДокументСсылка.ЗаборТовара") Тогда
			Нов.ЮрЛицо = Нов.Реализация.Контрагент.ОсновнойДоговорКонтрагента.Организация;
		ИначеЕсли ТипЗнч(Нов.Реализация) = Тип("ДокументСсылка.Фрахт") Тогда	
			Нов.ЮрЛицо = Нов.Реализация.Контрагент.ОсновнойДоговорКонтрагента.Организация;
		КонецЕсли; 
		
		Если Нов.ЮрЛицо.Пустая() Тогда
			Сообщить("В строке "+Нов.НомерСтроки+" не заполнено юр.лицо");
		КонецЕсли; 
		//CeHbKA
		
		//CeHbKA #3781 24.11.2020 
		РазныеТерминалы = Нов.ТерминалПриема <> Нов.ТерминалДоставки;
		ЧастичныйЗаказ = Нов.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично;
		
		Нов.ТребуетсяРасчетВозвратногоТарифа = РазныеТерминалы И ЧастичныйЗаказ;
		//CeHbKA #3781 24.11.2020 
		
		РассчитатьКОНовое(Нов);
	КонецЦикла;	 
	
	Для Каждого Тек Из Заказы Цикл
		//+++ Костя 111115 ПричинаОтклоненияВСистеме
		Если ТипЗнч(Тек.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа
				|ИЗ
				|	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
				|ГДЕ
				|	ДополнительныеПараметрыЗаказа.Заказ = &Заказ");
				Запрос.УстановитьПараметр("Заказ", Тек.Реализация);
				ПричинаВыборка = Запрос.Выполнить().Выбрать();
				Если ПричинаВыборка.Следующий() Тогда
					Тек.ПричинаОтклоненияЗаказа = ?(ПричинаВыборка.ПричинаОтклоненияЗаказа=Справочники.ПричиныОтклоненияЗаказаВСистеме.ПустаяСсылка(), Справочники.ПричиныОтклоненияЗаказаВСистеме.ОтклоненПоПисьмуМагазина, ПричинаВыборка.ПричинаОтклоненияЗаказа);
				Иначе // По умолчанию ->
					Тек.ПричинаОтклоненияЗаказа = Справочники.ПричиныОтклоненияЗаказаВСистеме.ОтклоненПоПисьмуМагазина;
				КонецЕсли;
			Иначе
				Тек.ПричинаОтклоненияЗаказа = Справочники.ПричиныОтклоненияЗаказаВСистеме.ПустаяСсылка();
			КонецЕсли;
		Иначе // Если фрахт или забор
			Если Тек.Отклонить Тогда//РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
				Тек.ПричинаОтклоненияЗаказа = Справочники.ПричиныОтклоненияЗаказаВСистеме.ОтклоненПоПисьмуМагазина;
			Иначе
				Тек.ПричинаОтклоненияЗаказа = Справочники.ПричиныОтклоненияЗаказаВСистеме.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
		//+++ Костя 111115 ПричинаОтклоненияВСистеме
		
		Тек.ЗапретЧастичногоВыкупа = Ложь;
		Если Тек.УчитыватьИтогоКОплате И Тек.Реализация.ЗапретЧастичногоВыкупа И Тек.КОплатеКлиентом <> 0 Тогда
			//Струк = новый Структура;
			//Струк.Вставить("Реализация", Тек.Реализация);
			//НайТов = Товары.НайтиСтроки(Струк);
			//Сум = 0;
			//Для Сч = 0 По НайТов.Количество() - 1 Цикл
			//	Сум = Сум + НайТов[Сч].Сумма;
			//КонецЦикла;
			//
			//Если Тек.СуммаДоставкиДоМКАД + Тек.СуммаДоставкиЗаМКАД + Сум <> Тек.КОплатеКлиентом
			//	И (Тек.ТипОплаты = Справочники.ТипыОплат.Наличные Или Тек.ТипОплаты = Справочники.ТипыОплат.Терминал)  Тогда   // дополнено 10.05.2016
				Тек.ЗапретЧастичногоВыкупа = Истина;
			//КонецеСли;	
		КонецеСли;
		
		//добавление назначенных в 1с услуг
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	НазначенныеДопУслугиПоЗаказамСрезПоследних.Заказ,
		            |	НазначенныеДопУслугиПоЗаказамСрезПоследних.Тариф,
		            |	НазначенныеДопУслугиПоЗаказамСрезПоследних.Ставка,
		            |	НазначенныеДопУслугиПоЗаказамСрезПоследних.ДопУслуга КАК Услуга
		            |ИЗ
		            |	РегистрСведений.НазначенныеДопУслугиПоЗаказам.СрезПоследних(&ДатаЗапроса, ) КАК НазначенныеДопУслугиПоЗаказамСрезПоследних
		            |ГДЕ
		            |	НазначенныеДопУслугиПоЗаказамСрезПоследних.Ставка <> 0
		            |	И НазначенныеДопУслугиПоЗаказамСрезПоследних.Заказ = &Заказ";
		Зап.УстановитьПараметр("Заказ", Тек.Реализация);			
		Зап.УстановитьПараметр("ДатаЗапроса", КонецДня(Дата));			
		
		РезДопУ = Зап.Выполнить().Выбрать();
		
		Пока РезДопУ.Следующий() Цикл
			Нов = Услуги.Добавить();
			Нов.НазначенаВ1С = Истина;
			Нов.Реализация = РезДопУ.Заказ;
			Нов.Тариф = РезДопУ.Тариф;
			Нов.Ставка = РезДопУ.Ставка;
			Нов.Услуга = РезДопУ.Услуга;
			Нов.СуммаДляИзменения = РасчетСуммыДопУслуги(РезДопУ.Тариф, РезДопУ.Ставка, Тек);
			Нов.СуммаПервичная = Нов.СуммаДляИзменения;
			Тек.Показатель1 = Тек.Показатель1 + Нов.СуммаПервичная;
		КонецЦикла;	
		
		
		
		Если Тек.ДокументОтчет.Пустая() Тогда
			Продолжить;
		КонецеСли;
		
		
		// Михушкин - Изменить заполнения документа ЗакрытиеЗаказов - 04.08.2016 --->> 
		Если ЗначениеЗаполнено(Тек.ДокументОтчет.ОтчетВодителя) Тогда		
			Если ЗначениеЗаполнено(Тек.ДокументОтчет.ОтчетВодителя.Водитель) Тогда
				Тек.Водитель = Тек.ДокументОтчет.ОтчетВодителя.Водитель;
			КонецЕсли;			
			Если ЗначениеЗаполнено(Тек.ДокументОтчет.ОтчетВодителя.Экспедитор) Тогда
				Тек.Экспедитор = Тек.ДокументОтчет.ОтчетВодителя.Экспедитор;
			КонецЕсли;					
		КонецЕсли;
		// <<--- Михушкин 
		
		
		Струк = новый Структура;
		Струк.Вставить("Реализация", Тек.Реализация);
		НайТов = Товары.НайтиСтроки(Струк);
		ФлагЧастички = Ложь;
		Для Сч = 0 По НайТов.Количество() - 1 Цикл
			Струк2 = Новый Структура;
			Струк2.Вставить("Доставка", Тек.Реализация);
			Струк2.Вставить("Номенклатура", НайТов[Сч].Номенклатура);
			//Асеев 01.09.2020 (Задача № 3761)>>>
			Струк2.Вставить("КодМаркировки", НайТов[Сч].КодМаркировки);
			//Асеев 01.09.2020 (Задача № 3761)<<<
            
            //Серегин М.В. 04.09.2015 13:06:05 
            НайЗак  = Тек.ДокументОтчет.Доставки.НайтиСтроки(Новый Структура("Доставка", Тек.Реализация));
            Если НайЗак.Количество()>0 Тогда 
                
                НайНом = Тек.ДокументОтчет.Товары.НайтиСтроки(Струк2);
                Если НайНом.Количество() = 1 Тогда
                    НайТов[Сч].КоличествоВозвращено = НайТов[Сч].Количество - НайНом[0].Количество;
                    НайТов[Сч].СуммаНовая = Окр(НайНом[0].Количество * НайТов[Сч].Цена, 2);
					Если НайТов[Сч].КоличествоВозвращено <> 0 Тогда
						ФлагЧастички = Истина;
					КонецеСли;	
                ИначеЕсли НайНом.Количество() = 0 Тогда	
                    НайТов[Сч].КоличествоВозвращено = НайТов[Сч].Количество;
                    НайТов[Сч].СуммаНовая = 0;
					Если НайТов[Сч].КоличествоВозвращено <> 0 Тогда
						ФлагЧастички = Истина;
					КонецеСли;	
                КонецЕсли;	
                
            КонецЕсли;
            //Серегин М.В. 04.09.2015 13:07:58 
		КонецЦикла;
		//Если ФлагЧастички Тогда
		//	Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично;
		//КонецеСли;	
		
		
	КонецЦикла;	
	
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	АктивныеДоговорыСубагентовСрезПоследних.Договор
	            |ИЗ
	            |	РегистрСведений.АктивныеДоговорыСубагентов.СрезПоследних(&ДатаЗапроса, ) КАК АктивныеДоговорыСубагентовСрезПоследних
	            |ГДЕ
	            |	АктивныеДоговорыСубагентовСрезПоследних.ДоговорАктивен = ИСТИНА";
				
				
	Если Не ЗначениеЗаполнено(ДатаЗакрытия) Тогда
		ДЗ = Дата;
	Иначе
		ДЗ = ДатаЗакрытия;
	КонецЕсли;	
	
	Зап.УстановитьПараметр("ДатаЗапроса", КонецДня(ДЗ));			
	Рез = Зап.Выполнить().Выгрузить();
	
	ДоговорыСубагентов.Очистить();
	
	Для Каждого Тек Из Рез Цикл
		Нов = ДоговорыСубагентов.Добавить();
		Нов.Договор = Тек.Договор;
	КонецЦикла;	
	
	ИнициализироватьЧистыеУслугиСД();
    ИнициализироватьПодъем();
	
	
	// Михушкин - 18.05.2016 -  --->> 
	ЗаполнитьТЧРейсыПоЗаказам();
	
	
	Для Каждого Тек Из Заказы Цикл
		Если ТипЗнч(Тек.Реализация.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Тек.БылПереносСЗаездом = БылПереносСЗаездом(Тек.Реализация.Ссылка);	
		КонецЕсли;
	КонецЦикла;
	// <<--- Михушкин 
	
	
	
	// Михушкин - 08.06.2016 --->> 
	ЗаполнитьТЧРасстояния();
	// <<--- Михушкин 
	
	ЗаполнитьРасстоянияОтМагистральногоКольца();	
	
	// Михушкин --->> 	
	МассивСтрок = Новый Массив;	
	Для каждого Стр Из Заказы Цикл			
		МассивСтрок.Добавить(Стр);			
	КонецЦикла;	
	ОбновитьОпцииЗаказов(МассивСтрок, Истина);
	// <<--- Михушкин 
	
	ЗаполнитьОценочнаяСтоимостьВТовары();	
	
	
	// МАС - 22.06.2017 - №1164 --->> 
	ТЗЗаказы = Заказы.Выгрузить(, "Доставка");	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	новаОтчетВодителяЗадания.Задание КАК Задание,
	                      |	новаОтчетВодителяЗадания.ЭтоДоговор КАК ЭтоДоговор,
	                      |	новаОтчетВодителяЗадания.ТипВозвратногоЗаказа КАК ТипВозвратногоЗаказа,
	                      |	новаОтчетВодителяЗадания.ВидПроблемы КАК ВидПроблемы
	                      |ИЗ
	                      |	Документ.новаОтчетВодителя.Задания КАК новаОтчетВодителяЗадания
	                      |ГДЕ
	                      |	новаОтчетВодителяЗадания.Ссылка.Проведен
	                      |	И новаОтчетВодителяЗадания.Задание В(&Задания)");
	Запрос.УстановитьПараметр("Задания", ТЗЗаказы);
	РезТЗ = Запрос.Выполнить().Выгрузить();
	
	Для каждого Ст Из РезТЗ Цикл	
		Най = Заказы.НайтиСтроки(Новый Структура("Доставка", Ст.Задание));		
		Для каждого Строка Из Най Цикл	
			Строка.ВидПроблемыПриЗакрытииЗаказа = Ст.ВидПроблемы; 	
		    Строка.ЭтоДоговор 					= Ст.ЭтоДоговор;
			Строка.ТипВозвратногоЗаказа         = Ст.ТипВозвратногоЗаказа;			
		КонецЦикла;	
	КонецЦикла;	
	// <<--- МАС 
	
	
    ////+++++Серегин М.В. 07.12.2015 16:32:15 для ловли бага с 0
    //СтруктураОтбор = Новый Структура;
    //СтруктураОтбор.Вставить("КомментарийСД","0");
    //НайденыеСтроки = Заказы.НайтиСтроки(СтруктураОтбор);
    //Если НайденыеСтроки.Количество()>0 Тогда
    //    МассивПолучателей = Новый Массив;
    //    МассивПолучателей.Добавить("michail.seregin@strizh-logistic.ru");
    //    lem.ОтправитьСообщение(МассивПолучателей,"При заполнении "+Ссылка+" возник 0.","Параметры: Дата"+Дата+" Контрагент "+Контрагент+" ДатаЗакрытия "+ДатаЗакрытия+" ТипДоставки"+ТипДоставки);
    //КонецЕсли;
    ////-----Серегин М.В. 07.12.2015 16:32:17 
	
	//+Степанов Задача № 3761
	//Для Каждого СтрокаТовара Из Товары Цикл
	//	
	//	СтрокаШК = ТаблициШтрихкодовНоменклатуры.НайтиСтроки(Новый Структура("Реализация, Номенклатура", СтрокаТовара.Реализация, СтрокаТовара.Номенклатура));
	//	Если СтрокаШК.Количество() > 0 Тогда
	//		СтрокаТовара.ШтрихкодНоменклатуры = СтрокаШК[0].ШтрихкодНоменклатуры;
	//	КонецЕсли;
	//	
	//КонецЦикла;	
	//-Степанов Задача № 3761
	
	ЗаполнитьКомпонентыРасчета();
	
	//отключено в рамках задачи #3781
	//ОбработатьУслугиПоНеВыполненнымЗаказам(); // Задача № 3533
	
КонецФункции

Процедура ЗаполнитьОценочнаяСтоимостьВТовары()
	 Для каждого Стр из Товары Цикл
		Если ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда
			СтрокаНайд = Стр.Реализация.Товары.Найти(Стр.Номенклатура);
			Если СтрокаНайд <> Неопределено Тогда
				Стр.ОценочнаяСтоимость = СтрокаНайд.ОценочнаяСтоимость;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


Функция РасчетСуммыДопУслуги(Тариф, Ставка, СтрокаСЗаказом) 
	Если Тариф.ТипРасчета = Перечисления.СпособыРасчетаДопУслуг.ФиксированнаяСумма Тогда
		Возврат Ставка;
	ИначеЕсли Тариф.ТипРасчета = Перечисления.СпособыРасчетаДопУслуг.ПроцентОтБазы Тогда
		Сумма = Окр(СтрокаСЗаказом.УслугиСДЧистые*Ставка/100);
		Возврат Сумма;
	ИначеЕсли Тариф.ТипРасчета = Перечисления.СпособыРасчетаДопУслуг.ПроцентОтТарифа Тогда	
		Подкл  = Евген.СоздатьПодключениеКИнтернетМагазину();
		
		RS = Евген.ЗапросКИнтернетМагазину("SELECT dbo.fs_calcServiceDCbyOrderID(" + СокрЛП(СтрокаСЗаказом.Номер) + ") As service", Подкл);
		РезАдминка = СоздатьТаблицу(RS, "service_Ч");
		Сумма = Окр(РезАдминка[0].service_Ч*Ставка/100);
		Возврат Сумма;
	КонецеСли;	
КонецФункции	

Процедура ОтразитьДвиженияПоСубагентам() Экспорт
    ////+++++Серегин М.В. 17.12.2015 15:28:57 старый
    //Зап = Новый Запрос;
    //Зап.Текст =
    //"ВЫБРАТЬ
    //|	ЗакрытиеЗаказовДоговорыСубагентов.Договор
    //|ПОМЕСТИТЬ ВТДоговорыСубагентов
    //|ИЗ
    //|	Документ.ЗакрытиеЗаказов.ДоговорыСубагентов КАК ЗакрытиеЗаказовДоговорыСубагентов
    //|ГДЕ
    //|	ЗакрытиеЗаказовДоговорыСубагентов.Ссылка.Ссылка = &Док
    //|;
    //|
    //|////////////////////////////////////////////////////////////////////////////////
    //|ВЫБРАТЬ
    //|	ЗакрытиеЗаказовЗаказы.Ссылка,
    //|	ЗакрытиеЗаказовЗаказы.НомерСтроки,
    //|	ЗакрытиеЗаказовЗаказы.Закрыть,
    //|	ЗакрытиеЗаказовЗаказы.Доставка,
    //|	ЗакрытиеЗаказовЗаказы.Реализация,
    //|	ЗакрытиеЗаказовЗаказы.Поступление,
    //|	ЗакрытиеЗаказовЗаказы.Перемещение,
    //|	ЗакрытиеЗаказовЗаказы.ВнешнийНомер,
    //|	ЗакрытиеЗаказовЗаказы.Сумма,
    //|	ЗакрытиеЗаказовЗаказы.Доставлен,
    //|	ЗакрытиеЗаказовЗаказы.ДоставкаИзмененаНаСамовывоз,
    //|	ЗакрытиеЗаказовЗаказы.КомментарийСД,
    //|	ЗакрытиеЗаказовЗаказы.Показатель1,
    //|	ЗакрытиеЗаказовЗаказы.СтатусЗаказа,
    //|	ЗакрытиеЗаказовЗаказы.РезультатДоставки,
    //|	ЗакрытиеЗаказовЗаказы.ПричинаНевыполнения,
    //|	ЗакрытиеЗаказовЗаказы.Списание,
    //|	ЗакрытиеЗаказовЗаказы.Оприходование,
    //|	ЗакрытиеЗаказовЗаказы.Контрагент,
    //|	ЗакрытиеЗаказовЗаказы.Возврат,
    //|	ЗакрытиеЗаказовЗаказы.ВладелецТовара,
    //|	ЗакрытиеЗаказовЗаказы.ТоварыЗаполнены,
    //|	ЗакрытиеЗаказовЗаказы.Номер,
    //|	ЗакрытиеЗаказовЗаказы.ТипОплаты,
    //|	ЗакрытиеЗаказовЗаказы.ПредТипОплаты,
    //|	ЗакрытиеЗаказовЗаказы.Отклонить,
    //|	ЗакрытиеЗаказовЗаказы.ПредУслугиСД,
    //|	ЗакрытиеЗаказовЗаказы.ПредРезультатДоставки,
    //|	ЗакрытиеЗаказовЗаказы.ПредПричинаНевыполнения,
    //|	ЗакрытиеЗаказовЗаказы.СуммаДоставкиДоМКАД,
    //|	ЗакрытиеЗаказовЗаказы.СуммаДоставкиЗаМКАД,
    //|	ЗакрытиеЗаказовЗаказы.КассовоеОбслуживание,
    //|	ЗакрытиеЗаказовЗаказы.БанковскаяКомиссия,
    //|	ЗакрытиеЗаказовЗаказы.СтатусЗаказаИнтернетМагазина,
    //|	ЗакрытиеЗаказовЗаказы.КатегорияДоставки,
    //|	ЗакрытиеЗаказовЗаказы.Транспорт,
    //|	ЗакрытиеЗаказовЗаказы.КассовоеОбслуживаниеНовое,
    //|	ЗакрытиеЗаказовЗаказы.ВариантРасчетаКО,
    //|	ЗакрытиеЗаказовЗаказы.Водитель,
    //|	ЗакрытиеЗаказовЗаказы.Экспедитор,
    //|	ЗакрытиеЗаказовЗаказы.ПризнакВозврата,
    //|	ЗакрытиеЗаказовЗаказы.ПредСуммаДоставкиДоМКАД,
    //|	ЗакрытиеЗаказовЗаказы.АгентскоеВознаграждение,
    //|	ЗакрытиеЗаказовЗаказы.Показатель2,
    //|	ЗакрытиеЗаказовЗаказы.Рейс,
    //|	ЗакрытиеЗаказовЗаказы.Показатель3,
    //|	ЗакрытиеЗаказовЗаказы.Показатель4,
    //|	ЗакрытиеЗаказовЗаказы.Показатель5,
    //|	ЗакрытиеЗаказовЗаказы.Показатель6,
    //|	ЗакрытиеЗаказовЗаказы.Корректировка,
    //|	ЗакрытиеЗаказовЗаказы.ПричинаОтказа,
    //|	ЗакрытиеЗаказовЗаказы.ВесЗаказа,
    //|	ЗакрытиеЗаказовЗаказы.ДокументОтчет,
    //|	ЗакрытиеЗаказовЗаказы.ФрахтЧасов,
    //|	ЗакрытиеЗаказовЗаказы.ДанныеМПВодителя,
    //|	ЗакрытиеЗаказовЗаказы.VIPДоставка,
    //|	ЗакрытиеЗаказовЗаказы.ПредоплатаПоКредиту,
    //|	ЗакрытиеЗаказовЗаказы.ВидVIP,
    //|	ЗакрытиеЗаказовЗаказы.ТарифнаяСетка,
    //|	ЗакрытиеЗаказовЗаказы.ЮрЛицо,
    //|	ЗакрытиеЗаказовЗаказы.РасчетныйБрейк,
    //|	ЗакрытиеЗаказовЗаказы.ТарифнаяСеткаПартнера,
    //|	ЗакрытиеЗаказовЗаказы.ЗонаТарификации,
    //|	ЗакрытиеЗаказовЗаказы.РасчетныйБрейк КАК РасчетныйБрейк1,
    //|	ЗакрытиеЗаказовЗаказы.СтраховойСбор
    //|ПОМЕСТИТЬ ВТОтборПоТипамОплаты
    //|ИЗ
    //|	ВТДоговорыСубагентов КАК ВТДоговорыСубагентов
    //|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СубагентскиеДоговоры.ТипыОплат КАК СубагентскиеДоговорыТипыОплат
    //|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
    //|			ПО (ЗакрытиеЗаказовЗаказы.ТипОплаты.Ссылка = СубагентскиеДоговорыТипыОплат.ТипОплаты.Ссылка)
    //|		ПО ВТДоговорыСубагентов.Договор.Ссылка = СубагентскиеДоговорыТипыОплат.Ссылка.Ссылка
    //|ГДЕ
    //|	СубагентскиеДоговорыТипыОплат.Учитывать = ИСТИНА
    //|	И ЗакрытиеЗаказовЗаказы.Ссылка.Ссылка = &Док
    //|	И (ЗакрытиеЗаказовЗаказы.Закрыть = ИСТИНА
    //|			ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить = ИСТИНА)
    //|;
    //|
    //|////////////////////////////////////////////////////////////////////////////////
    //|ВЫБРАТЬ
    //|	ВТОтборПоТипамОплаты.Ссылка,
    //|	ВТОтборПоТипамОплаты.НомерСтроки,
    //|	ВТОтборПоТипамОплаты.Закрыть,
    //|	ВТОтборПоТипамОплаты.Доставка,
    //|	ВТОтборПоТипамОплаты.Реализация,
    //|	ВТОтборПоТипамОплаты.Поступление,
    //|	ВТОтборПоТипамОплаты.Перемещение,
    //|	ВТОтборПоТипамОплаты.ВнешнийНомер,
    //|	ВТОтборПоТипамОплаты.Сумма,
    //|	ВТОтборПоТипамОплаты.Доставлен,
    //|	ВТОтборПоТипамОплаты.ДоставкаИзмененаНаСамовывоз,
    //|	ВТОтборПоТипамОплаты.КомментарийСД,
    //|	ВТОтборПоТипамОплаты.Показатель1,
    //|	ВТОтборПоТипамОплаты.СтатусЗаказа,
    //|	ВТОтборПоТипамОплаты.РезультатДоставки,
    //|	ВТОтборПоТипамОплаты.ПричинаНевыполнения,
    //|	ВТОтборПоТипамОплаты.Списание,
    //|	ВТОтборПоТипамОплаты.Оприходование,
    //|	ВТОтборПоТипамОплаты.Контрагент,
    //|	ВТОтборПоТипамОплаты.Возврат,
    //|	ВТОтборПоТипамОплаты.ВладелецТовара,
    //|	ВТОтборПоТипамОплаты.ТоварыЗаполнены,
    //|	ВТОтборПоТипамОплаты.Номер,
    //|	ВТОтборПоТипамОплаты.ТипОплаты,
    //|	ВТОтборПоТипамОплаты.ПредТипОплаты,
    //|	ВТОтборПоТипамОплаты.Отклонить,
    //|	ВТОтборПоТипамОплаты.ПредУслугиСД,
    //|	ВТОтборПоТипамОплаты.ПредРезультатДоставки,
    //|	ВТОтборПоТипамОплаты.ПредПричинаНевыполнения,
    //|	ВТОтборПоТипамОплаты.СуммаДоставкиДоМКАД,
    //|	ВТОтборПоТипамОплаты.СуммаДоставкиЗаМКАД,
    //|	ВТОтборПоТипамОплаты.КассовоеОбслуживание,
    //|	ВТОтборПоТипамОплаты.БанковскаяКомиссия,
    //|	ВТОтборПоТипамОплаты.СтатусЗаказаИнтернетМагазина,
    //|	ВТОтборПоТипамОплаты.КатегорияДоставки,
    //|	ВТОтборПоТипамОплаты.Транспорт,
    //|	ВТОтборПоТипамОплаты.КассовоеОбслуживаниеНовое,
    //|	ВТОтборПоТипамОплаты.ВариантРасчетаКО,
    //|	ВТОтборПоТипамОплаты.Водитель,
    //|	ВТОтборПоТипамОплаты.Экспедитор,
    //|	ВТОтборПоТипамОплаты.ПризнакВозврата,
    //|	ВТОтборПоТипамОплаты.ПредСуммаДоставкиДоМКАД,
    //|	ВТОтборПоТипамОплаты.АгентскоеВознаграждение,
    //|	ВТОтборПоТипамОплаты.Показатель2,
    //|	ВТОтборПоТипамОплаты.Рейс,
    //|	ВТОтборПоТипамОплаты.Показатель3,
    //|	ВТОтборПоТипамОплаты.Показатель4,
    //|	ВТОтборПоТипамОплаты.Показатель5,
    //|	ВТОтборПоТипамОплаты.Показатель6,
    //|	ВТОтборПоТипамОплаты.Корректировка,
    //|	ВТОтборПоТипамОплаты.ПричинаОтказа,
    //|	ВТОтборПоТипамОплаты.ВесЗаказа,
    //|	ВТОтборПоТипамОплаты.ДокументОтчет,
    //|	ВТОтборПоТипамОплаты.ФрахтЧасов,
    //|	ВТОтборПоТипамОплаты.ДанныеМПВодителя,
    //|	ВТОтборПоТипамОплаты.VIPДоставка,
    //|	ВТОтборПоТипамОплаты.ПредоплатаПоКредиту,
    //|	ВТОтборПоТипамОплаты.ВидVIP,
    //|	ВТОтборПоТипамОплаты.ТарифнаяСетка,
    //|	ВТДоговорыСубагентов.Договор.ОрганизацияСубагент КАК ОрганизацияСубагент,
    //|	ВТДоговорыСубагентов.Договор.ОрганизацияАгент КАК ОрганизацияАгент,
    //|	ВТДоговорыСубагентов.Договор,
    //|	ВЫБОР
    //|		КОГДА СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану
    //|			ТОГДА ЕСТЬNULL(ТарификацияФинансовыхУслугСрезПоследних.ПроцентБанковскойКомиссии, 0)
    //|		ИНАЧЕ СубагентскиеДоговорыКонтрагенты.ПроцентБанковскогоОбслуживания
    //|	КОНЕЦ КАК ПроцентБанковскогоОбслуживания,
    //|	ВЫБОР
    //|		КОГДА СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану
    //|			ТОГДА ЕСТЬNULL(ТарификацияФинансовыхУслугСрезПоследних.ПроцентКассовогоОбслуживания, 0)
    //|		ИНАЧЕ СубагентскиеДоговорыКонтрагенты.ПроцентКассовогоОбслуживания
    //|	КОНЕЦ КАК ПроцентКассовогоОбслуживания,
    //|	ВЫБОР
    //|		КОГДА СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану
    //|			ТОГДА ЕСТЬNULL(ТарификацияФинансовыхУслугСрезПоследних.ПроцентАгентскогоВознаграждения, 0)
    //|		ИНАЧЕ СубагентскиеДоговорыКонтрагенты.ПроцентАгентскогоВознаграждения
    //|	КОНЕЦ КАК ПроцентАгентскогоВознаграждения,
    //|	СубагентскиеДоговорыКонтрагенты.КорректировкаСтоимостиУслугРуб КАК КорректировкаСтоимостиУслугРуб,
    //|	ВТОтборПоТипамОплаты.ЮрЛицо,
    //|	ВТОтборПоТипамОплаты.ТарифнаяСеткаПартнера,
    //|	ВТОтборПоТипамОплаты.ЗонаТарификации,
    //|	ВТОтборПоТипамОплаты.РасчетныйБрейк,
    //|	СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану,
    //|	СубагентскиеДоговорыКонтрагенты.ТарифныйПлан,
    //|	ВТОтборПоТипамОплаты.СтраховойСбор
    //|ИЗ
    //|	ВТДоговорыСубагентов КАК ВТДоговорыСубагентов
    //|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СубагентскиеДоговоры.Контрагенты КАК СубагентскиеДоговорыКонтрагенты
    //|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборПоТипамОплаты КАК ВТОтборПоТипамОплаты
    //|			ПО (ВТОтборПоТипамОплаты.ВладелецТовара.Ссылка = СубагентскиеДоговорыКонтрагенты.Контрагент.Ссылка)
    //|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарификацияФинансовыхУслуг.СрезПоследних КАК ТарификацияФинансовыхУслугСрезПоследних
    //|			ПО СубагентскиеДоговорыКонтрагенты.ТарифныйПлан = ТарификацияФинансовыхУслугСрезПоследних.Тариф
    //|		ПО ВТДоговорыСубагентов.Договор.Ссылка = СубагентскиеДоговорыКонтрагенты.Ссылка.Ссылка
    //|ГДЕ
    //|	СубагентскиеДоговорыКонтрагенты.Учитывать = ИСТИНА";
	//+++++Серегин М.В. 17.12.2015 15:29:36 новый
    Зап = Новый Запрос;
    Зап.Текст = ТекстЗапросаОтразитьДвиженияПоСубагентам();
    //-----Серегин М.В. 17.12.2015 15:29:40 
    
	Зап.УстановитьПараметр("Док", Ссылка);
	
	Рез = Зап.Выполнить().Выгрузить();
	
	МасНомеров = Рез.ВыгрузитьКолонку("Номер");
	
	Для Каждого Тек Из МасНомеров Цикл
		Тек = СокрЛП(Тек);
	КонецЦикла;	
	
	// Костя 300915
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("РасчетПоТарифномуПлану", Истина);
	НайденныеСтроки = Рез.НайтиСтроки(ПараметрыОтбора);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		Для Каждого Стр Из НайденныеСтроки Цикл
			Если Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
				ЗапросБрейки = Новый Запрос(
				"ВЫБРАТЬ
				|	ТарификацияРасчетаУслугСДСрезПоследних.СтоимостьУслугиСД
				|ИЗ
				|	РегистрСведений.ТарификацияРасчетаУслугСД.СрезПоследних КАК ТарификацияРасчетаУслугСДСрезПоследних
				|ГДЕ
				|	ТарификацияРасчетаУслугСДСрезПоследних.Тариф = &Тариф
				|	И ТарификацияРасчетаУслугСДСрезПоследних.ТипЗаказа = &ТипЗаказа");
			Иначе
				ЗапросБрейки = Новый Запрос(
				"ВЫБРАТЬ
				|	ТарифныеПланыДоступныеБрейки.РасчетныйБрейк,
				|	ТарифныеПланыДоступныеБрейки.Ссылка КАК ТарифСсылка
				|ПОМЕСТИТЬ ВремБрейк
				|ИЗ
				|	Справочник.ТарифныеПланы.ДоступныеБрейки КАК ТарифныеПланыДоступныеБрейки
				|ГДЕ
				|	ТарифныеПланыДоступныеБрейки.РасчетныйБрейк.ВесОт <= &ВесЗаказа
				|	И ТарифныеПланыДоступныеБрейки.РасчетныйБрейк.ВесДо > &ВесЗаказа
				|	И ТарифныеПланыДоступныеБрейки.Ссылка = &Тариф;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТарификацияРасчетаУслугСДСрезПоследних.РасчетныйБрейк,
				|	ТарификацияРасчетаУслугСДСрезПоследних.СтоимостьУслугиСД КАК СтоимостьУслугиСД
				|ИЗ
				|	ВремБрейк КАК ВремБрейк
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТарификацияРасчетаУслугСД.СрезПоследних КАК ТарификацияРасчетаУслугСДСрезПоследних
				|		ПО (ТарификацияРасчетаУслугСДСрезПоследних.РасчетныйБрейк = ВремБрейк.РасчетныйБрейк)
				|			И ВремБрейк.ТарифСсылка = ТарификацияРасчетаУслугСДСрезПоследних.Тариф
				|ГДЕ
				|	ТарификацияРасчетаУслугСДСрезПоследних.ЗонаДоставки = &ЗонаДоставки
				|	И ТарификацияРасчетаУслугСДСрезПоследних.ТипЗаказа = &ТипЗаказа");
			КонецЕсли;
			//Если Стр.ВесЗаказа = 0 Тогда
			//    //ПараметрыОтбораТов = Новый Структура;
			//    //ПараметрыОтбораТов.Вставить("Реализация", Стр.Реализация.Ссылка);
			//    //НайденныеСтрокиТов = Товары.НайтиСтроки(ПараметрыОтбораТов);
			//    //Для Каждого СтрВес Из НайденныеСтрокиТов Цикл
			//    //	Стр.ВесЗаказа = Стр.ВесЗаказа + СтрВес.Масса;
			//    //КонецЦикла;
			//	Вес = Стр.ВесПоТоварам;
			//Иначе
			//	Вес = Стр.ВесЗаказа;
			//КонецЕсли;
			
			//Если Стр.ВесЗаказа = 0 Тогда		
			//	Если Стр.Реализация.ОбщийВес = 0 Тогда
			//	    Вес = Стр.ВесПоТоварам;
			//	Иначе	
			//		Вес = Стр.Реализация.ОбщийВес;			
			//	КонецЕсли;			
			//Иначе											
			//	Вес = Стр.ВесЗаказа;										
			//КонецЕсли;
			
			
			Если ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				
				Если Стр.ВесЗаказа = 0 Тогда		
					Если Стр.Реализация.ОбщийВес = 0 Тогда
					    Вес = Стр.ВесПоТоварам;
					Иначе	
						Вес = Стр.Реализация.ОбщийВес;			
					КонецЕсли;			
				Иначе											
					Вес = Стр.ВесЗаказа;										
				КонецЕсли;		
			Иначе
				Если Стр.ВесЗаказа = 0 Тогда
					Вес = Стр.ВесПоТоварам;
				Иначе						
					Вес = Стр.ВесЗаказа;				
				КонецЕсли;
				
			КонецЕсли;
			
			
			ЗапросБрейки.УстановитьПараметр("ВесЗаказа"   , Вес);
			//ЗапросБрейки.УстановитьПараметр("ТипТарифа"   , Стр.ТарифныйПлан.ТипТарифа);
			ЗапросБрейки.УстановитьПараметр("Тариф"       , Стр.ТарифныйПлан);
			ЗапросБрейки.УстановитьПараметр("ЗонаДоставки", Стр.ЗонаТарификации);
			ЗапросБрейки.УстановитьПараметр("ТипЗаказа"   , Стр.ТипЗаказа);
			СтоимостьУслугиСД = ЗапросБрейки.Выполнить().Выбрать();               // 000030777   - 003,ру тестовый в тестовой ТЕСТО
			Если СтоимостьУслугиСД.Следующий() Тогда
				Стр.Показатель1    = СтоимостьУслугиСД.СтоимостьУслугиСД;
				Если Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
					Стр.РасчетныйБрейк = Справочники.РасчетныеБрейки.ПустаяСсылка();
				Иначе	
					Стр.РасчетныйБрейк = СтоимостьУслугиСД.РасчетныйБрейк;
				КонецЕсли;
			Иначе
				Стр.Показатель1 = 0;
				Если Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
					Стр.РасчетныйБрейк = Справочники.РасчетныеБрейки.ПустаяСсылка();
				Иначе	
					Стр.РасчетныйБрейк = СтоимостьУслугиСД.РасчетныйБрейк;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	// Костя 300915
	
	Движения.УчетСубагентов.Очистить();
	Движения.УчетСубагентов.Записывать = Истина;
	
	//Если ТипДоставки <> Перечисления.ТипыЗаказов.Доставка И ТипДоставки <> Перечисления.ТипыЗаказов.Самовывоз Тогда 
	//	Возврат;
	//КонецеСли;	
	
	// в запросе только доставки или самовывозы
	
	//ЗапАдминка = Новый Запрос;
	//ЗапАдминка.Текст = "ВЫБРАТЬ
	//                   |	dbo_mv_orders.baseSumForServices КАК База,
	//                   |	dbo_mv_orders.orderIDStr Как Номер
	//                   |ИЗ
	//                   |	ВнешнийИсточникДанных.ИнтернетМагазин.Таблица.dbo_mv_orders КАК dbo_mv_orders
	//                   |ГДЕ
	//                   |	dbo_mv_orders.orderIDStr В(&МасНомеров)";
	//			 
	//ЗапАдминка.УстановитьПараметр("МасНомеров", МасНомеров);	
	//РезАдминка = ЗапАдминка.Выполнить().Выгрузить();
		
	Подключение = Евген.СоздатьПодключениеКИнтернетМагазину();
		
	
	РезАдминка = Неопределено;
	
	Если МасНомеров.Количество() > 0 Тогда
		НомераМ = "";
		Для Каждого СтрМ из МасНомеров Цикл
			НомераМ = НомераМ + "," + СокрЛП(СтрМ);
		КонецЦикла;
		Попытка	
			RS = Евген.ЗапросКИнтернетМагазину("
			|SELECT 
			|	O.baseSumForServices AS База,
			|	O.orderIDStr AS Номер
			|FROM
			|mv_orders O 
			|WHERE
			|O.orderID IN("+Сред(НомераМ,2)+")", Подключение);
			
			РезАдминка = СоздатьТаблицу(RS, "База_Ч, Номер");
		Исключение	
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
    Для каждого Тек Из Рез Цикл
        //+++++Серегин М.В. 15.01.2016 12:40:29 
        Если ЗначениеЗаполнено(Тек.ОграничениеДатыДействияНачало) И ЗначениеЗаполнено(Тек.ОграничениеДатыДействияОкончание) Тогда
            Если НЕ (Тек.Реализация.Дата >= НачалоДня(Тек.ОграничениеДатыДействияНачало) И Тек.Реализация.Дата <= КонецДня(Тек.ОграничениеДатыДействияОкончание)) Тогда
                Продолжить;    
            КонецЕсли;
        КонецЕсли;
        //-----Серегин М.В. 15.01.2016 12:40:32 
            
		Нов = Движения.УчетСубагентов.Добавить();
		
		Если РезАдминка = Неопределено Тогда
			НайАдм = Неопределено;
		Иначе
			НайАдм = РезАдминка.Найти(СокрЛП(Тек.Номер));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Тек.ТипЗаказа) Тогда
			Продолжить;
		КонецеСли;	
		Если Не (Тек.Закрыть Или Тек.Отклонить) = Истина Тогда
			Продолжить;
		КонецеСли;	
		
		
		Нов.ПричинаОтказа = Тек.ПричинаОтказа;
		Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
			Нов.Период = ДатаЗакрытия;
		Иначе	
			Нов.Период = Тек.Реализация.Дата;
		КонецЕсли;
		
		// СтраховойСбор //+++ Костя 291015
		Нов.СтраховойСбор = Тек.СтраховойСбор;
		
		//Банковское
		Если НайАдм <> Неопределено Тогда
			Нов.БанковскаяКомиссия = Окр(НайАдм.База_Ч*Тек.ПроцентБанковскогоОбслуживания/100, 2);
		Иначе
			Нов.БанковскаяКомиссия = 0;
		КонецеСли;
		
		Нов.Возврат = Тек.Возврат;
		Нов.Доставка = Тек.Доставка;
		Нов.ИнтернетМагазин = Тек.ВладелецТовара;
		//кассовое
		Если НайАдм <> Неопределено Тогда
			Нов.КассовоеОбслуживание = Окр(НайАдм.База_Ч*Тек.ПроцентКассовогоОбслуживания/100, 2);
		Иначе
			Нов.КассовоеОбслуживание = 0;
		КонецеСли;
		
		// агентское
		Если НайАдм <> Неопределено Тогда
			Нов.АгентскоеВознаграждение = Окр(НайАдм.База_Ч*Тек.ПроцентАгентскогоВознаграждения/100, 2);
		Иначе
			Нов.АгентскоеВознаграждение = 0;
		КонецеСли;			
		//Нов.АгентскоеВознаграждение = Тек.АгентскоеВознаграждение;
		Нов.ПризнакВозврата = Тек.ПризнакВозврата;
		
		Нов.Оприходование = Тек.Оприходование;
		Нов.Перемещение = Тек.Перемещение;
		Нов.Поступление = Тек.Поступление;
		Нов.ПричинаНевыполнения = Тек.ПричинаНевыполнения;
		Нов.Реализация = Тек.Реализация;
		Нов.Списание = Тек.Списание;
		Нов.СтатусЗаказа = Тек.РезультатДоставки;
		Нов.ЮрЛицо = Тек.ЮрЛицо;
		Нов.ЗонаТарификации = Тек.ЗонаТарификации;
		
		
		Нов.ПредоплатаПоКредиту = Тек.ПредоплатаПоКредиту;
		Если Тек.Закрыть Тогда
			Нов.СтатусИнтернетМагазина = Справочники.СтатусЗаказаИнтернетМагазина.ЗаказЗакрыт;
		ИначеЕсли Тек.Отклонить Тогда
			Нов.СтатусИнтернетМагазина = Справочники.СтатусЗаказаИнтернетМагазина.ЗаказОтклонен;
		КонецЕсли;
		
		Если Тек.Закрыть И Тек.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
			//Нов.СуммаДоставкиДоМКАД = 0;
			//Нов.СуммаДоставкиЗаМКАД = 0;
			Нов.СуммаДоставкиДоМКАД = Тек.СуммаДоставкиДоМКАД;
			Нов.СуммаДоставкиЗаМКАД = Тек.СуммаДоставкиЗаМКАД;
			
			ОбновитьОтказСЗаездомПоЗаказуВАдминке(СокрЛП(Тек.Реализация.Номер));
		Иначе	
			Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз  Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Фрахт Тогда
				Нов.СуммаДоставкиДоМКАД = Тек.СуммаДоставкиДоМКАД;
				Нов.СуммаДоставкиЗаМКАД = Тек.СуммаДоставкиЗаМКАД;
			КонецеСли;
		КонецеСли;	
		
		ТоварыДоставки = Новый Массив;
		Если ЗначениеЗаполнено(тек.Доставка) Тогда
			Струк = Новый Структура;
			Струк.Вставить("Доставка", Тек.Доставка);
			ТоварыДоставки = Товары.НайтиСтроки(Струк);
		ИначеЕсли ЗначениеЗаполнено(Тек.Реализация) Тогда
			Струк = Новый Структура;
			Струк.Вставить("Реализация", Тек.Реализация);
			ТоварыДоставки = Товары.НайтиСтроки(Струк);
		КонецеСли;	
		
		
		
		СумТ = 0;
		СумП =  - Тек.ПредоплатаПоКредиту;
		Мас = 0;
		//КолТ = ;
		Если Тек.ТипЗаказа <> Перечисления.ТипыЗаказов.Фрахт Тогда
			Для Сч = 0 По ТоварыДоставки.Количество() - 1 Цикл
				СумТ = СумТ + ТоварыДоставки[Сч].Сумма;
				СумП = СумП + ТоварыДоставки[Сч].СуммаНовая;
				Мас = Мас + ТоварыДоставки[Сч].Масса;
				//лТ = КолТ + ТоварыДоставки[Сч].Количество;
			КонецЦикла;	
		Иначе
			СумТ = Тек.Реализация.Товары.Итог("Сумма");
			СумП = Тек.Реализация.Товары.Итог("Сумма");
			//Мас = Мас + ТоварыДоставки[Сч].Масса;
		КонецеСли;
		
		
		Если ТипЗнч(Тек.Реализация) = Тип("ДокументСсылка.Фрахт") И Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Тогда
			СумТ = Тек.Реализация.Товары.Итог("Сумма");
			СумП = Тек.Реализация.Товары.Итог("Сумма");
		КонецЕсли;	
		
		
		Нов.СуммаОценочная = СумТ;
		Нов.СуммаПолученная = СумП;
		Если ЗначениеЗаполнено(Тек.Возврат) Тогда
			Нов.СуммаВозврата = Тек.Возврат.Товары.Итог("Сумма");
		КонецеСли;	
		
		Если Тек.ДоставкаИзмененаНаСамовывоз ТОгда
			Нов.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз;
		Иначе	
			Нов.ТипЗаказа = Тек.ТипЗаказа;
		КонецеСли;	
		
		Нов.ТипОплаты = Тек.ТипОплаты;
		Если НайАдм <> Неопределено Тогда
			Нов.УслугиСД = Тек.Показатель1 + Тек.Показатель3 + Тек.Показатель4 + Тек.Показатель5 + Тек.Показатель6 + ?(Тек.РасчетПоТарифномуПлану,0,Тек.КорректировкаСтоимостиУслугРуб);
			//Нов.УслугиСД = Тек.Показатель1 + Тек.Показатель2 + Тек.Показатель3 + Тек.Показатель4 + Тек.Показатель5 + Тек.Показатель6 + ?(Тек.РасчетПоТарифномуПлану,0,Тек.КорректировкаСтоимостиУслугРуб);
		Иначе
			Нов.УслугиСД = Тек.Показатель1 + Тек.Показатель3 + Тек.Показатель4 + Тек.Показатель5 + Тек.Показатель6;
			//Нов.УслугиСД = Тек.Показатель1 + Тек.Показатель2 + Тек.Показатель3 + Тек.Показатель4 + Тек.Показатель5 + Тек.Показатель6;
		КонецеСли;
		
		Нов.КатегорияДоставки = Тек.КатегорияДоставки;
		Нов.Масса = Мас;
		
		//// агентское
		//Нов.АгентскоеВознаграждение = Тек.АгентскоеВознаграждение;
		//Нов.ПризнакВозврата = Тек.ПризнакВозврата;
		
		Если Нов.ТипОплаты <> Справочники.ТипыОплат.Наличные Тогда 
			Если СумП < 0 Тогда СумП = 0; КонецЕсли; //светильники
		КонецеСли;	
		Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
			Нов.СуммаЧастичногоВозврата = СумТ-СумП - Тек.ПредоплатаПоКредиту;   // -Тек.СуммаДоставкиДоМКАД-Тек.СуммаДоставкиЗаМКАД
		КонецеСли;
		Если Нов.ТипОплаты = Справочники.ТипыОплат.Наличные Или Нов.ТипОплаты = Справочники.ТипыОплат.Терминал Или Нов.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда
			Если Тек.ПричинаНевыполнения <> Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
				Если Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Фрахт  Или Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
					Если Тек.ПричинаНевыполнения <> Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
						//Нов.ОплаченоКлиентовНал = СумП + Тек.СуммаДоставкиДоМКАД+Тек.СуммаДоставкиЗаМКАД;  //  + Тек.СуммаДоставкиДоМКАД+Тек.СуммаДоставкиЗаМКАД
						
						// Михушкин - 20.06.2016 - исправление пустых значений --->> 
						//Нов.ОплаченоКлиентовНал = Тек.КОплатеКлиентом;			
						Если Тек.УчитыватьИтогоКОплате И Тек.ЗапретЧастичногоВыкупа Тогда
							Нов.ОплаченоКлиентовНал = Тек.КОплатеКлиентом;  //  + Тек.СуммаДоставкиДоМКАД+Тек.СуммаДоставкиЗаМКАД
						Иначе
							Нов.ОплаченоКлиентовНал = СумП + Тек.СуммаДоставкиДоМКАД+Тек.СуммаДоставкиЗаМКАД;  //  + Тек.СуммаДоставкиДоМКАД+Тек.СуммаДоставкиЗаМКАД							
						КонецеСли;
						// <<--- Михушкин			
					Иначе
						Нов.ОплаченоКлиентовНал = СумП;
					КонецеСли;	
				Иначе
					Нов.ОплаченоКлиентовНал = СумП;
				КонецеСли;
			КонецеСли;	
		КонецеСли;
		
		 
		
		Если Нов.ТипОплаты = Справочники.ТипыОплат.Наличные И Тек.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
			//Нов.ОплаченоКлиентовНал = СумП + Тек.СуммаДоставкиДоМКАД+Тек.СуммаДоставкиЗаМКАД;
			Нов.ОплаченоКлиентовНал = Тек.КОплатеКлиентом;
		КонецеСли;	
		
		Нов.РассчитаноПоТарифномуПлану = Тек.РасчетПоТарифномуПлану;
		Нов.ТарифныйПлан = Тек.ТарифныйПлан;		
		
		Нов.ТарифнаяСетка = Тек.ТарифнаяСетка;
		Нов.РасчетныйБрейк = Тек.РасчетныйБрейк;
		Нов.ТарифнаяСеткаПартнера = Тек.ТарифнаяСеткаПартнера;
		
		Нов.Договор = Тек.Договор;
		Нов.ОрганизацияАгент = Тек.ОрганизацияАгент;
		Нов.ОрганизацияСубагент = Тек.ОрганизацияСубагент;
	КонецЦикла;	
	
КонецПроцедуры	

Функция ТекстЗапросаОтразитьДвиженияПоСубагентам()
    #Область Устарело
    //Текст = "ВЫБРАТЬ
    //        |   ЗакрытиеЗаказовДоговорыСубагентов.Договор
    //        |ПОМЕСТИТЬ ВТДоговорыСубагентов
    //        |ИЗ
    //        |   Документ.ЗакрытиеЗаказов.ДоговорыСубагентов КАК ЗакрытиеЗаказовДоговорыСубагентов
    //        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СубагентскиеДоговоры.Контрагенты КАК СубагентскиеДоговорыКонтрагенты
    //        |       ПО ЗакрытиеЗаказовДоговорыСубагентов.Договор = СубагентскиеДоговорыКонтрагенты.Ссылка
    //        |           И ЗакрытиеЗаказовДоговорыСубагентов.Ссылка.Контрагент = СубагентскиеДоговорыКонтрагенты.Контрагент
    //        |ГДЕ
    //        |   ЗакрытиеЗаказовДоговорыСубагентов.Ссылка.Ссылка = &Док
    //        |;
    //        |
    //        |////////////////////////////////////////////////////////////////////////////////
    //        |ВЫБРАТЬ
    //        |   ЗакрытиеЗаказовЗаказы.Ссылка,
    //        |   ЗакрытиеЗаказовЗаказы.НомерСтроки,
    //        |   ЗакрытиеЗаказовЗаказы.Закрыть,
    //        |   ЗакрытиеЗаказовЗаказы.Доставка,
    //        |   ЗакрытиеЗаказовЗаказы.Реализация,
    //        |   ЗакрытиеЗаказовЗаказы.Поступление,
    //        |   ЗакрытиеЗаказовЗаказы.Перемещение,
    //        |   ЗакрытиеЗаказовЗаказы.ВнешнийНомер,
    //        |   ЗакрытиеЗаказовЗаказы.Сумма,
    //        |   ЗакрытиеЗаказовЗаказы.Доставлен,
    //        |   ЗакрытиеЗаказовЗаказы.ДоставкаИзмененаНаСамовывоз,
    //        |   ЗакрытиеЗаказовЗаказы.КомментарийСД,
    //        |   ЗакрытиеЗаказовЗаказы.Показатель1,
    //        |   ЗакрытиеЗаказовЗаказы.СтатусЗаказа,
    //        |   ЗакрытиеЗаказовЗаказы.РезультатДоставки,
    //        |   ЗакрытиеЗаказовЗаказы.ПричинаНевыполнения,
    //        |   ЗакрытиеЗаказовЗаказы.Списание,
    //        |   ЗакрытиеЗаказовЗаказы.Оприходование,
    //        |   ЗакрытиеЗаказовЗаказы.Контрагент,
    //        |   ЗакрытиеЗаказовЗаказы.Возврат,
    //        |   ЗакрытиеЗаказовЗаказы.ВладелецТовара,
    //        |   ЗакрытиеЗаказовЗаказы.ТоварыЗаполнены,
    //        |   ЗакрытиеЗаказовЗаказы.Номер,
    //        |   ЗакрытиеЗаказовЗаказы.ТипОплаты,
    //        |   ЗакрытиеЗаказовЗаказы.ПредТипОплаты,
    //        |   ЗакрытиеЗаказовЗаказы.Отклонить,
    //        |   ЗакрытиеЗаказовЗаказы.ПредУслугиСД,
    //        |   ЗакрытиеЗаказовЗаказы.ПредРезультатДоставки,
    //        |   ЗакрытиеЗаказовЗаказы.ПредПричинаНевыполнения,
    //        |   ЗакрытиеЗаказовЗаказы.СуммаДоставкиДоМКАД,
    //        |   ЗакрытиеЗаказовЗаказы.СуммаДоставкиЗаМКАД,
    //        |   ЗакрытиеЗаказовЗаказы.КассовоеОбслуживание,
    //        |   ЗакрытиеЗаказовЗаказы.БанковскаяКомиссия,
    //        |   ЗакрытиеЗаказовЗаказы.СтатусЗаказаИнтернетМагазина,
    //        |   ЗакрытиеЗаказовЗаказы.КатегорияДоставки,
    //        |   ЗакрытиеЗаказовЗаказы.Транспорт,
    //        |   ЗакрытиеЗаказовЗаказы.КассовоеОбслуживаниеНовое,
    //        |   ЗакрытиеЗаказовЗаказы.ВариантРасчетаКО,
    //        |   ЗакрытиеЗаказовЗаказы.Водитель,
    //        |   ЗакрытиеЗаказовЗаказы.Экспедитор,
    //        |   ЗакрытиеЗаказовЗаказы.ПризнакВозврата,
    //        |   ЗакрытиеЗаказовЗаказы.ПредСуммаДоставкиДоМКАД,
    //        |   ЗакрытиеЗаказовЗаказы.АгентскоеВознаграждение,
    //        |   ЗакрытиеЗаказовЗаказы.Показатель2,
    //        |   ЗакрытиеЗаказовЗаказы.Рейс,
    //        |   ЗакрытиеЗаказовЗаказы.Показатель3,
    //        |   ЗакрытиеЗаказовЗаказы.Показатель4,
    //        |   ЗакрытиеЗаказовЗаказы.Показатель5,
    //        |   ЗакрытиеЗаказовЗаказы.Показатель6,
    //        |   ЗакрытиеЗаказовЗаказы.Корректировка,
    //        |   ЗакрытиеЗаказовЗаказы.ПричинаОтказа,
    //        |   ЗакрытиеЗаказовЗаказы.ВесЗаказа,
    //        |   ЗакрытиеЗаказовЗаказы.ДокументОтчет,
    //        |   ЗакрытиеЗаказовЗаказы.ФрахтЧасов,
    //        |   ЗакрытиеЗаказовЗаказы.ДанныеМПВодителя,
    //        |   ЗакрытиеЗаказовЗаказы.VIPДоставка,
    //        |   ЗакрытиеЗаказовЗаказы.ПредоплатаПоКредиту,
    //        |   ЗакрытиеЗаказовЗаказы.ВидVIP,
    //        |   ЗакрытиеЗаказовЗаказы.ТарифнаяСетка,
    //        |   ЗакрытиеЗаказовЗаказы.ЮрЛицо,
    //        |   ЗакрытиеЗаказовЗаказы.РасчетныйБрейк,
    //        |   ЗакрытиеЗаказовЗаказы.ТарифнаяСеткаПартнера,
    //        |   ЗакрытиеЗаказовЗаказы.ЗонаТарификации,
    //        |   ЗакрытиеЗаказовЗаказы.РасчетныйБрейк КАК РасчетныйБрейк1,
    //        |   ЗакрытиеЗаказовЗаказы.СтраховойСбор,
    //        |   ВТДоговорыСубагентов.Договор.Ссылка КАК Договор
    //        |ПОМЕСТИТЬ ВТОтборПоТипамОплаты
    //        |ИЗ
    //        |   ВТДоговорыСубагентов КАК ВТДоговорыСубагентов
    //        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СубагентскиеДоговоры.ТипыОплат КАК СубагентскиеДоговорыТипыОплат
    //        |           ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
    //        |           ПО (ЗакрытиеЗаказовЗаказы.ТипОплаты.Ссылка = СубагентскиеДоговорыТипыОплат.ТипОплаты.Ссылка)
    //        |       ПО ВТДоговорыСубагентов.Договор.Ссылка = СубагентскиеДоговорыТипыОплат.Ссылка.Ссылка
    //        |ГДЕ
    //        |   СубагентскиеДоговорыТипыОплат.Учитывать = ИСТИНА
    //        |   И ЗакрытиеЗаказовЗаказы.Ссылка.Ссылка = &Док
    //        |   И (ЗакрытиеЗаказовЗаказы.Закрыть = ИСТИНА
    //        |           ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить = ИСТИНА)
    //        |;
    //        |
    //        |////////////////////////////////////////////////////////////////////////////////
    //        |ВЫБРАТЬ
    //        |   ВТОтборПоТипамОплаты.Ссылка,
    //        |   ВТОтборПоТипамОплаты.НомерСтроки,
    //        |   ВТОтборПоТипамОплаты.Закрыть,
    //        |   ВТОтборПоТипамОплаты.Доставка,
    //        |   ВТОтборПоТипамОплаты.Реализация,
    //        |   ВТОтборПоТипамОплаты.Поступление,
    //        |   ВТОтборПоТипамОплаты.Перемещение,
    //        |   ВТОтборПоТипамОплаты.ВнешнийНомер,
    //        |   ВТОтборПоТипамОплаты.Сумма,
    //        |   ВТОтборПоТипамОплаты.Доставлен,
    //        |   ВТОтборПоТипамОплаты.ДоставкаИзмененаНаСамовывоз,
    //        |   ВТОтборПоТипамОплаты.КомментарийСД,
    //        |   ВТОтборПоТипамОплаты.Показатель1,
    //        |   ВТОтборПоТипамОплаты.СтатусЗаказа,
    //        |   ВТОтборПоТипамОплаты.РезультатДоставки,
    //        |   ВТОтборПоТипамОплаты.ПричинаНевыполнения,
    //        |   ВТОтборПоТипамОплаты.Списание,
    //        |   ВТОтборПоТипамОплаты.Оприходование,
    //        |   ВТОтборПоТипамОплаты.Контрагент,
    //        |   ВТОтборПоТипамОплаты.Возврат,
    //        |   ВТОтборПоТипамОплаты.ВладелецТовара,
    //        |   ВТОтборПоТипамОплаты.ТоварыЗаполнены,
    //        |   ВТОтборПоТипамОплаты.Номер,
    //        |   ВТОтборПоТипамОплаты.ТипОплаты,
    //        |   ВТОтборПоТипамОплаты.ПредТипОплаты,
    //        |   ВТОтборПоТипамОплаты.Отклонить,
    //        |   ВТОтборПоТипамОплаты.ПредУслугиСД,
    //        |   ВТОтборПоТипамОплаты.ПредРезультатДоставки,
    //        |   ВТОтборПоТипамОплаты.ПредПричинаНевыполнения,
    //        |   ВТОтборПоТипамОплаты.СуммаДоставкиДоМКАД,
    //        |   ВТОтборПоТипамОплаты.СуммаДоставкиЗаМКАД,
    //        |   ВТОтборПоТипамОплаты.КассовоеОбслуживание,
    //        |   ВТОтборПоТипамОплаты.БанковскаяКомиссия,
    //        |   ВТОтборПоТипамОплаты.СтатусЗаказаИнтернетМагазина,
    //        |   ВТОтборПоТипамОплаты.КатегорияДоставки,
    //        |   ВТОтборПоТипамОплаты.Транспорт,
    //        |   ВТОтборПоТипамОплаты.КассовоеОбслуживаниеНовое,
    //        |   ВТОтборПоТипамОплаты.ВариантРасчетаКО,
    //        |   ВТОтборПоТипамОплаты.Водитель,
    //        |   ВТОтборПоТипамОплаты.Экспедитор,
    //        |   ВТОтборПоТипамОплаты.ПризнакВозврата,
    //        |   ВТОтборПоТипамОплаты.ПредСуммаДоставкиДоМКАД,
    //        |   ВТОтборПоТипамОплаты.АгентскоеВознаграждение,
    //        |   ВТОтборПоТипамОплаты.Показатель2,
    //        |   ВТОтборПоТипамОплаты.Рейс,
    //        |   ВТОтборПоТипамОплаты.Показатель3,
    //        |   ВТОтборПоТипамОплаты.Показатель4,
    //        |   ВТОтборПоТипамОплаты.Показатель5,
    //        |   ВТОтборПоТипамОплаты.Показатель6,
    //        |   ВТОтборПоТипамОплаты.Корректировка,
    //        |   ВТОтборПоТипамОплаты.ПричинаОтказа,
    //        |   ВТОтборПоТипамОплаты.ВесЗаказа,
    //        |   ВТОтборПоТипамОплаты.ДокументОтчет,
    //        |   ВТОтборПоТипамОплаты.ФрахтЧасов,
    //        |   ВТОтборПоТипамОплаты.ДанныеМПВодителя,
    //        |   ВТОтборПоТипамОплаты.VIPДоставка,
    //        |   ВТОтборПоТипамОплаты.ПредоплатаПоКредиту,
    //        |   ВТОтборПоТипамОплаты.ВидVIP,
    //        |   ВТОтборПоТипамОплаты.ТарифнаяСетка,
    //        |   ВТДоговорыСубагентов.Договор.ОрганизацияСубагент КАК ОрганизацияСубагент,
    //        |   ВТДоговорыСубагентов.Договор.ОрганизацияАгент КАК ОрганизацияАгент,
    //        |   ВТДоговорыСубагентов.Договор,
    //        |   ВЫБОР
    //        |       КОГДА СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану
    //        |           ТОГДА ЕСТЬNULL(ТарификацияФинансовыхУслугСрезПоследних.ПроцентБанковскойКомиссии, 0)
    //        |       ИНАЧЕ СубагентскиеДоговорыКонтрагенты.ПроцентБанковскогоОбслуживания
    //        |   КОНЕЦ КАК ПроцентБанковскогоОбслуживания,
    //        |   ВЫБОР
    //        |       КОГДА СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану
    //        |           ТОГДА ЕСТЬNULL(ТарификацияФинансовыхУслугСрезПоследних.ПроцентКассовогоОбслуживания, 0)
    //        |       ИНАЧЕ СубагентскиеДоговорыКонтрагенты.ПроцентКассовогоОбслуживания
    //        |   КОНЕЦ КАК ПроцентКассовогоОбслуживания,
    //        |   ВЫБОР
    //        |       КОГДА СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану
    //        |           ТОГДА ЕСТЬNULL(ТарификацияФинансовыхУслугСрезПоследних.ПроцентАгентскогоВознаграждения, 0)
    //        |       ИНАЧЕ СубагентскиеДоговорыКонтрагенты.ПроцентАгентскогоВознаграждения
    //        |   КОНЕЦ КАК ПроцентАгентскогоВознаграждения,
    //        |   СубагентскиеДоговорыКонтрагенты.КорректировкаСтоимостиУслугРуб КАК КорректировкаСтоимостиУслугРуб,
    //        |   ВТОтборПоТипамОплаты.ЮрЛицо,
    //        |   ВТОтборПоТипамОплаты.ТарифнаяСеткаПартнера,
    //        |   ВТОтборПоТипамОплаты.ЗонаТарификации,
    //        |   ВТОтборПоТипамОплаты.РасчетныйБрейк,
    //        |   СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану,
    //        |   СубагентскиеДоговорыКонтрагенты.ТарифныйПлан,
    //        |   ВТОтборПоТипамОплаты.СтраховойСбор,
    //        |   СубагентскиеДоговорыКонтрагенты.ОграничениеДатыДействияНачало,
    //        |   СубагентскиеДоговорыКонтрагенты.ОграничениеДатыДействияОкончание
    //        |ИЗ
    //        |   ВТДоговорыСубагентов КАК ВТДоговорыСубагентов
    //        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СубагентскиеДоговоры.Контрагенты КАК СубагентскиеДоговорыКонтрагенты
    //        |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарификацияФинансовыхУслуг.СрезПоследних КАК ТарификацияФинансовыхУслугСрезПоследних
    //        |           ПО СубагентскиеДоговорыКонтрагенты.ТарифныйПлан = ТарификацияФинансовыхУслугСрезПоследних.Тариф
    //        |           ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборПоТипамОплаты КАК ВТОтборПоТипамОплаты
    //        |           ПО (ВТОтборПоТипамОплаты.ВладелецТовара.Ссылка = СубагентскиеДоговорыКонтрагенты.Контрагент.Ссылка)
    //        |               И (ВТОтборПоТипамОплаты.Договор.Ссылка = СубагентскиеДоговорыКонтрагенты.Ссылка.Ссылка)
    //        |       ПО ВТДоговорыСубагентов.Договор.Ссылка = СубагентскиеДоговорыКонтрагенты.Ссылка.Ссылка
    //        |ГДЕ
    //        |   СубагентскиеДоговорыКонтрагенты.Учитывать = ИСТИНА";
    //Возврат Текст;
    #КонецОбласти 
    
    //+++++Серегин М.В. 15.01.2016 14:59:57 
	Текст = "ВЫБРАТЬ
	        |	ЗакрытиеЗаказовДоговорыСубагентов.Договор
	        |ПОМЕСТИТЬ ВТДоговорыСубагентов
	        |ИЗ
	        |	Документ.ЗакрытиеЗаказов.ДоговорыСубагентов КАК ЗакрытиеЗаказовДоговорыСубагентов
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СубагентскиеДоговоры.Контрагенты КАК СубагентскиеДоговорыКонтрагенты
	        |		ПО ЗакрытиеЗаказовДоговорыСубагентов.Договор = СубагентскиеДоговорыКонтрагенты.Ссылка
	        |			И ЗакрытиеЗаказовДоговорыСубагентов.Ссылка.Контрагент = СубагентскиеДоговорыКонтрагенты.Контрагент
	        |ГДЕ
	        |	ЗакрытиеЗаказовДоговорыСубагентов.Ссылка.Ссылка = &Док
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗакрытиеЗаказовЗаказы.Ссылка,
	        |	ЗакрытиеЗаказовЗаказы.НомерСтроки,
	        |	ЗакрытиеЗаказовЗаказы.Закрыть,
	        |	ЗакрытиеЗаказовЗаказы.Доставка,
	        |	ЗакрытиеЗаказовЗаказы.Реализация,
	        |	ЗакрытиеЗаказовЗаказы.Поступление,
	        |	ЗакрытиеЗаказовЗаказы.Перемещение,
	        |	ЗакрытиеЗаказовЗаказы.ВнешнийНомер,
	        |	ЗакрытиеЗаказовЗаказы.Сумма,
	        |	ЗакрытиеЗаказовЗаказы.Доставлен,
	        |	ЗакрытиеЗаказовЗаказы.ДоставкаИзмененаНаСамовывоз,
	        |	ЗакрытиеЗаказовЗаказы.КомментарийСД,
	        |	ЗакрытиеЗаказовЗаказы.Показатель1,
	        |	ЗакрытиеЗаказовЗаказы.СтатусЗаказа,
	        |	ЗакрытиеЗаказовЗаказы.РезультатДоставки,
	        |	ЗакрытиеЗаказовЗаказы.ПричинаНевыполнения,
	        |	ЗакрытиеЗаказовЗаказы.Списание,
	        |	ЗакрытиеЗаказовЗаказы.Оприходование,
	        |	ЗакрытиеЗаказовЗаказы.Контрагент,
	        |	ЗакрытиеЗаказовЗаказы.Возврат,
	        |	ЗакрытиеЗаказовЗаказы.ВладелецТовара,
	        |	ЗакрытиеЗаказовЗаказы.ТоварыЗаполнены,
	        |	ЗакрытиеЗаказовЗаказы.Номер,
	        |	ЗакрытиеЗаказовЗаказы.ТипОплаты,
	        |	ЗакрытиеЗаказовЗаказы.ПредТипОплаты,
	        |	ЗакрытиеЗаказовЗаказы.Отклонить,
	        |	ЗакрытиеЗаказовЗаказы.ПредУслугиСД,
	        |	ЗакрытиеЗаказовЗаказы.ПредРезультатДоставки,
	        |	ЗакрытиеЗаказовЗаказы.ПредПричинаНевыполнения,
	        |	ЗакрытиеЗаказовЗаказы.СуммаДоставкиДоМКАД,
	        |	ЗакрытиеЗаказовЗаказы.СуммаДоставкиЗаМКАД,
	        |	ЗакрытиеЗаказовЗаказы.КассовоеОбслуживание,
	        |	ЗакрытиеЗаказовЗаказы.БанковскаяКомиссия,
	        |	ЗакрытиеЗаказовЗаказы.СтатусЗаказаИнтернетМагазина,
	        |	ЗакрытиеЗаказовЗаказы.КатегорияДоставки,
	        |	ЗакрытиеЗаказовЗаказы.Транспорт,
	        |	ЗакрытиеЗаказовЗаказы.КассовоеОбслуживаниеНовое,
	        |	ЗакрытиеЗаказовЗаказы.ВариантРасчетаКО,
	        |	ЗакрытиеЗаказовЗаказы.Водитель,
	        |	ЗакрытиеЗаказовЗаказы.Экспедитор,
	        |	ЗакрытиеЗаказовЗаказы.ПризнакВозврата,
	        |	ЗакрытиеЗаказовЗаказы.ПредСуммаДоставкиДоМКАД,
	        |	ЗакрытиеЗаказовЗаказы.АгентскоеВознаграждение,
	        |	ЗакрытиеЗаказовЗаказы.Показатель2,
	        |	ЗакрытиеЗаказовЗаказы.Рейс,
	        |	ЗакрытиеЗаказовЗаказы.Показатель3,
	        |	ЗакрытиеЗаказовЗаказы.Показатель4,
	        |	ЗакрытиеЗаказовЗаказы.Показатель5,
	        |	ЗакрытиеЗаказовЗаказы.Показатель6,
	        |	ЗакрытиеЗаказовЗаказы.ПричинаОтказа,
	        |	ЗакрытиеЗаказовЗаказы.ВесЗаказа,
	        |	ЗакрытиеЗаказовЗаказы.ДокументОтчет,
	        |	ЗакрытиеЗаказовЗаказы.ФрахтЧасов,
	        |	ЗакрытиеЗаказовЗаказы.ДанныеМПВодителя,
	        |	ЗакрытиеЗаказовЗаказы.VIPДоставка,
	        |	ЗакрытиеЗаказовЗаказы.ПредоплатаПоКредиту,
	        |	ЗакрытиеЗаказовЗаказы.ВидVIP,
	        |	ЗакрытиеЗаказовЗаказы.ТарифнаяСетка,
	        |	ЗакрытиеЗаказовЗаказы.ЮрЛицо,
	        |	ЗакрытиеЗаказовЗаказы.РасчетныйБрейк,
	        |	ЗакрытиеЗаказовЗаказы.ТарифнаяСеткаПартнера,
	        |	ЗакрытиеЗаказовЗаказы.ЗонаТарификации,
	        |	ЗакрытиеЗаказовЗаказы.РасчетныйБрейк КАК РасчетныйБрейк1,
	        |	ЗакрытиеЗаказовЗаказы.СтраховойСбор,
	        |	ВТДоговорыСубагентов.Договор.Ссылка КАК Договор,
	        |	ЗакрытиеЗаказовЗаказы.КОплатеКлиентом,
	        |	ЗакрытиеЗаказовЗаказы.УчитыватьИтогоКОплате,
	        |	ЗакрытиеЗаказовЗаказы.ЗапретЧастичногоВыкупа,
	        |	ЗакрытиеЗаказовЗаказы.ТипЗаказа
	        |ПОМЕСТИТЬ ВТОтборПоТипамОплаты
	        |ИЗ
	        |	ВТДоговорыСубагентов КАК ВТДоговорыСубагентов
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СубагентскиеДоговоры.ТипыОплат КАК СубагентскиеДоговорыТипыОплат
	        |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	        |			ПО (ЗакрытиеЗаказовЗаказы.ТипОплаты.Ссылка = СубагентскиеДоговорыТипыОплат.ТипОплаты.Ссылка)
	        |		ПО ВТДоговорыСубагентов.Договор.Ссылка = СубагентскиеДоговорыТипыОплат.Ссылка.Ссылка
	        |ГДЕ
	        |	СубагентскиеДоговорыТипыОплат.Учитывать = ИСТИНА
	        |	И ЗакрытиеЗаказовЗаказы.Ссылка.Ссылка = &Док
	        |	И (ЗакрытиеЗаказовЗаказы.Закрыть = ИСТИНА
	        |			ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить = ИСТИНА)
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗакрытиеЗаказовТовары.Реализация,
	        |	СУММА(ЗакрытиеЗаказовТовары.Масса) КАК ВесПоТоварам
	        |ПОМЕСТИТЬ ВТВесаПоТоварам
	        |ИЗ
	        |	Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
	        |ГДЕ
	        |	ЗакрытиеЗаказовТовары.Ссылка.Ссылка = &Док
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЗакрытиеЗаказовТовары.Реализация
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТОтборПоТипамОплаты.Ссылка,
	        |	ВТОтборПоТипамОплаты.НомерСтроки,
	        |	ВТОтборПоТипамОплаты.Закрыть,
	        |	ВТОтборПоТипамОплаты.Доставка,
	        |	ВТОтборПоТипамОплаты.Реализация,
	        |	ВТОтборПоТипамОплаты.Поступление,
	        |	ВТОтборПоТипамОплаты.Перемещение,
	        |	ВТОтборПоТипамОплаты.ВнешнийНомер,
	        |	ВТОтборПоТипамОплаты.Сумма,
	        |	ВТОтборПоТипамОплаты.Доставлен,
	        |	ВТОтборПоТипамОплаты.ДоставкаИзмененаНаСамовывоз,
	        |	ВТОтборПоТипамОплаты.КомментарийСД,
	        |	ВТОтборПоТипамОплаты.Показатель1,
	        |	ВТОтборПоТипамОплаты.СтатусЗаказа,
	        |	ВТОтборПоТипамОплаты.РезультатДоставки,
	        |	ВТОтборПоТипамОплаты.ПричинаНевыполнения,
	        |	ВТОтборПоТипамОплаты.Списание,
	        |	ВТОтборПоТипамОплаты.Оприходование,
	        |	ВТОтборПоТипамОплаты.Контрагент,
	        |	ВТОтборПоТипамОплаты.Возврат,
	        |	ВТОтборПоТипамОплаты.ВладелецТовара,
	        |	ВТОтборПоТипамОплаты.ТоварыЗаполнены,
	        |	ВТОтборПоТипамОплаты.Номер,
	        |	ВТОтборПоТипамОплаты.ТипОплаты,
	        |	ВТОтборПоТипамОплаты.ПредТипОплаты,
	        |	ВТОтборПоТипамОплаты.Отклонить,
	        |	ВТОтборПоТипамОплаты.ПредУслугиСД,
	        |	ВТОтборПоТипамОплаты.ПредРезультатДоставки,
	        |	ВТОтборПоТипамОплаты.ПредПричинаНевыполнения,
	        |	ВТОтборПоТипамОплаты.СуммаДоставкиДоМКАД,
	        |	ВТОтборПоТипамОплаты.СуммаДоставкиЗаМКАД,
	        |	ВТОтборПоТипамОплаты.КассовоеОбслуживание,
	        |	ВТОтборПоТипамОплаты.БанковскаяКомиссия,
	        |	ВТОтборПоТипамОплаты.СтатусЗаказаИнтернетМагазина,
	        |	ВТОтборПоТипамОплаты.КатегорияДоставки,
	        |	ВТОтборПоТипамОплаты.Транспорт,
	        |	ВТОтборПоТипамОплаты.КассовоеОбслуживаниеНовое,
	        |	ВТОтборПоТипамОплаты.ВариантРасчетаКО,
	        |	ВТОтборПоТипамОплаты.Водитель,
	        |	ВТОтборПоТипамОплаты.Экспедитор,
	        |	ВТОтборПоТипамОплаты.ПризнакВозврата,
	        |	ВТОтборПоТипамОплаты.ПредСуммаДоставкиДоМКАД,
	        |	ВТОтборПоТипамОплаты.АгентскоеВознаграждение,
	        |	ВТОтборПоТипамОплаты.Показатель2,
	        |	ВТОтборПоТипамОплаты.Рейс,
	        |	ВТОтборПоТипамОплаты.Показатель3,
	        |	ВТОтборПоТипамОплаты.Показатель4,
	        |	ВТОтборПоТипамОплаты.Показатель5,
	        |	ВТОтборПоТипамОплаты.Показатель6,
	        |	ВТОтборПоТипамОплаты.ПричинаОтказа,
	        |	ВТОтборПоТипамОплаты.ВесЗаказа,
	        |	ВТОтборПоТипамОплаты.ДокументОтчет,
	        |	ВТОтборПоТипамОплаты.ФрахтЧасов,
	        |	ВТОтборПоТипамОплаты.ДанныеМПВодителя,
	        |	ВТОтборПоТипамОплаты.VIPДоставка,
	        |	ВТОтборПоТипамОплаты.ПредоплатаПоКредиту,
	        |	ВТОтборПоТипамОплаты.ВидVIP,
	        |	ВТОтборПоТипамОплаты.ТарифнаяСетка,
	        |	ВТДоговорыСубагентов.Договор.ОрганизацияСубагент КАК ОрганизацияСубагент,
	        |	ВТДоговорыСубагентов.Договор.ОрганизацияАгент КАК ОрганизацияАгент,
	        |	ВТДоговорыСубагентов.Договор,
	        |	ВЫБОР
	        |		КОГДА СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану
	        |			ТОГДА ЕСТЬNULL(ТарификацияФинансовыхУслугСрезПоследних.ПроцентБанковскойКомиссии, 0)
	        |		ИНАЧЕ СубагентскиеДоговорыКонтрагенты.ПроцентБанковскогоОбслуживания
	        |	КОНЕЦ КАК ПроцентБанковскогоОбслуживания,
	        |	ВЫБОР
	        |		КОГДА СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану
	        |			ТОГДА ЕСТЬNULL(ТарификацияФинансовыхУслугСрезПоследних.ПроцентКассовогоОбслуживания, 0)
	        |		ИНАЧЕ СубагентскиеДоговорыКонтрагенты.ПроцентКассовогоОбслуживания
	        |	КОНЕЦ КАК ПроцентКассовогоОбслуживания,
	        |	ВЫБОР
	        |		КОГДА СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану
	        |			ТОГДА ЕСТЬNULL(ТарификацияФинансовыхУслугСрезПоследних.ПроцентАгентскогоВознаграждения, 0)
	        |		ИНАЧЕ СубагентскиеДоговорыКонтрагенты.ПроцентАгентскогоВознаграждения
	        |	КОНЕЦ КАК ПроцентАгентскогоВознаграждения,
	        |	СубагентскиеДоговорыКонтрагенты.КорректировкаСтоимостиУслугРуб КАК КорректировкаСтоимостиУслугРуб,
	        |	ВТОтборПоТипамОплаты.ЮрЛицо,
	        |	ВТОтборПоТипамОплаты.ТарифнаяСеткаПартнера,
	        |	ВТОтборПоТипамОплаты.ЗонаТарификации,
	        |	ВТОтборПоТипамОплаты.РасчетныйБрейк,
	        |	СубагентскиеДоговорыКонтрагенты.РасчетПоТарифномуПлану,
	        |	СубагентскиеДоговорыКонтрагенты.ТарифныйПлан,
	        |	ВТОтборПоТипамОплаты.СтраховойСбор,
	        |	ВТВесаПоТоварам.ВесПоТоварам,
	        |	СубагентскиеДоговорыКонтрагенты.ОграничениеДатыДействияНачало,
	        |	СубагентскиеДоговорыКонтрагенты.ОграничениеДатыДействияОкончание,
	        |	ВТОтборПоТипамОплаты.КОплатеКлиентом,
	        |	ВТОтборПоТипамОплаты.УчитыватьИтогоКОплате,
	        |	ВТОтборПоТипамОплаты.ЗапретЧастичногоВыкупа,
	        |	ВТОтборПоТипамОплаты.ТипЗаказа
	        |ИЗ
	        |	ВТДоговорыСубагентов КАК ВТДоговорыСубагентов
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СубагентскиеДоговоры.Контрагенты КАК СубагентскиеДоговорыКонтрагенты
	        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарификацияФинансовыхУслуг.СрезПоследних КАК ТарификацияФинансовыхУслугСрезПоследних
	        |			ПО СубагентскиеДоговорыКонтрагенты.ТарифныйПлан = ТарификацияФинансовыхУслугСрезПоследних.Тариф
	        |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборПоТипамОплаты КАК ВТОтборПоТипамОплаты
	        |				ПОЛНОЕ СОЕДИНЕНИЕ ВТВесаПоТоварам КАК ВТВесаПоТоварам
	        |				ПО ВТОтборПоТипамОплаты.Реализация = ВТВесаПоТоварам.Реализация
	        |			ПО (ВТОтборПоТипамОплаты.ВладелецТовара.Ссылка = СубагентскиеДоговорыКонтрагенты.Контрагент.Ссылка)
	        |				И (ВТОтборПоТипамОплаты.Договор.Ссылка = СубагентскиеДоговорыКонтрагенты.Ссылка.Ссылка)
	        |		ПО ВТДоговорыСубагентов.Договор.Ссылка = СубагентскиеДоговорыКонтрагенты.Ссылка.Ссылка
	        |ГДЕ
	        |	СубагентскиеДоговорыКонтрагенты.Учитывать = ИСТИНА
	        |	И ВТОтборПоТипамОплаты.ТипЗаказа В (ЗНАЧЕНИЕ(перечисление.ТипыЗаказов.Самовывоз), ЗНАЧЕНИЕ(перечисление.ТипыЗаказов.Доставка))";
    Возврат Текст;
КонецФункции // ()

Функция ПолучитьБазовыйТекстЗапроса() Экспорт
//	Если ТипДоставки.Пустая() Тогда
//	Возврат
//	"ВЫБРАТЬ
//	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
//	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
//	|	РеализацияТоваровУслуг.Номер КАК Номер,
//	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
//	|	РеализацияТоваровУслуг.Контрагент,
//	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
//	|	РеализацияТоваровУслуг.УслугиСД КАК УслугиСД,
//	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
//	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
//	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
//	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
//	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
//	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
//	|	ЛОЖЬ КАК Закрыть,
//	|	СписаниеТоваров.Ссылка КАК Списание,
//	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
//	|	новаМестнаяДоставка.Ссылка КАК Доставка,
//	|	СостоянияЗаказовСрезПоследних.РезультатДоставки,
//	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения,
//	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
//	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз,
//	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
//	|	ТипыОплат.Ссылка КАК ТипОплаты,
//	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
//	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
//	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
//	|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
//	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
//	|	КатегорииДоставки.Ссылка КАК КатегорияДоставки,
//	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО
//	|ИЗ
//	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
//	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
//	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
//	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
//	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
//	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
//	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&НаДату, ) КАК СостоянияЗаказовСрезПоследних
//	|			ПО новаМестнаяДоставка.Ссылка = СостоянияЗаказовСрезПоследних.Доставка.Ссылка
//	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
//	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
//	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки КАК КатегорииДоставки
//	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки.Категория
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
//	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
//	|ГДЕ
//	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
//	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ" +
//	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	РеализацияТоваровУслуг.Дата";
//ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз Тогда
//	Возврат
//	"ВЫБРАТЬ
//	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
//	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
//	|	РеализацияТоваровУслуг.Номер КАК Номер,
//	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
//	|	РеализацияТоваровУслуг.Контрагент,
//	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
//	|	РеализацияТоваровУслуг.УслугиСД КАК УслугиСД,
//	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
//	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
//	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
//	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
//	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
//	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
//	|	ЛОЖЬ КАК Закрыть,
//	|	СписаниеТоваров.Ссылка КАК Списание,
//	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
//	|	новаМестнаяДоставка.Ссылка КАК Доставка,
//	|	СостоянияЗаказовСрезПоследних.РезультатДоставки,
//	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения,
//	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
//	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз,
//	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
//	|	ТипыОплат.Ссылка КАК ТипОплаты,
//	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
//	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
//	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
//	|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
//	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
//	|	КатегорииДоставки.Ссылка КАК КатегорияДоставки,
//	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО
//	|ИЗ
//	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
//	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
//	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
//	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
//	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
//	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
//	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&наДату, ) КАК СостоянияЗаказовСрезПоследних
//	|			ПО новаМестнаяДоставка.Ссылка = СостоянияЗаказовСрезПоследних.Доставка.Ссылка
//	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
//	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
//	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки КАК КатегорииДоставки
//	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки.Категория
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&наДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
//	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
//	|ГДЕ
//	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
//	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
//	|	И новаМестнаяДоставка.Ссылка ЕСТЬ NULL " +
//	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	РеализацияТоваровУслуг.Дата";
//ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Доставка Тогда
//	Возврат
//	"ВЫБРАТЬ
//	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
//	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
//	|	РеализацияТоваровУслуг.Номер КАК Номер,
//	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
//	|	РеализацияТоваровУслуг.Контрагент,
//	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
//	|	РеализацияТоваровУслуг.УслугиСД КАК УслугиСД,
//	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
//	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
//	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
//	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
//	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
//	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
//	|	ЛОЖЬ КАК Закрыть,
//	|	СписаниеТоваров.Ссылка КАК Списание,
//	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
//	|	новаМестнаяДоставка.Ссылка КАК Доставка,
//	|	СостоянияЗаказовСрезПоследних.РезультатДоставки,
//	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения,
//	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
//	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз,
//	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
//	|	ТипыОплат.Ссылка КАК ТипОплаты,
//	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
//	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
//	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
//	|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
//	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
//	|	КатегорииДоставки.Ссылка КАК КатегорияДоставки,
//	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО
//	|ИЗ
//	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
//	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
//	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
//	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
//	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
//	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
//	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&НаДату, ) КАК СостоянияЗаказовСрезПоследних
//	|			ПО новаМестнаяДоставка.Ссылка = СостоянияЗаказовСрезПоследних.Доставка.Ссылка
//	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
//	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
//	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки КАК КатегорииДоставки
//	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки.Категория
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
//	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
//	|ГДЕ
//	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
//	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
//	|	И НЕ новаМестнаяДоставка.Ссылка ЕСТЬ NULL " +
//	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	РеализацияТоваровУслуг.Дата";
//ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Забор Тогда
//	Возврат
//	"ВЫБРАТЬ
//	|	ЗаборТовара.Ссылка КАК Реализация,
//	|	ЗаборТовара.Номер КАК Номер,
//	|	ЗаборТовара.НомерВнешнегоЗаказа КАК ВнешнийНомер,
//	|	ЗаборТовара.Контрагент,
//	|	ЗаборТовара.Контрагент КАК ВладелецТовара,
//	|	ЗаборТовара.СуммаДокумента КАК Сумма,
//	|	ЗаборТовара.УслугиСД КАК УслугиСД,
//	|	ЗаборТовара.КомментарийСД КАК КомментарийСД,
//	|	ЛОЖЬ КАК Закрыть,
//	|	ЗаборТовара.СтатусИнтернетМагазинаСпр КАК СтатусИнтернетМагазина,
//	|	ЗаборТовара.Транспорт.Ссылка КАК Транспорт,
//	|	ИСТИНА КАК Доставлен,
//	|	ЗаборТовара.СтоимостьДоставки КАК СуммаДоставкиДоМкад,
//	|	ЗаборТовара.КатегорияДоставки,
//	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО
//	|ИЗ
//	|	Документ.ЗаборТовара КАК ЗаборТовара
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
//	|		ПО ЗаборТовара.Контрагент.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
//	|ГДЕ
//	|	НЕ ЗаборТовара.СтатусИнтернетМагазина В (0, 3, 4)
//	|	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ" +
//	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	ЗаборТовара.Дата";
//ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Фрахт Тогда
//	Возврат
//	"ВЫБРАТЬ
//	|	Фрахт.Ссылка КАК Реализация,
//	|	Фрахт.Номер КАК Номер,
//	|	Фрахт.НомерВнешнегоЗаказа КАК ВнешнийНомер,
//	|	Фрахт.Контрагент,
//	|	Фрахт.Контрагент КАК ВладелецТовара,
//	|	Фрахт.СуммаДокумента КАК Сумма,
//	|	Фрахт.УслугиСД КАК УслугиСД,
//	|	Фрахт.КомментарийСД КАК КомментарийСД,
//	|	ЛОЖЬ КАК Закрыть,
//	|	Фрахт.СтатусИнтернетМагазинаСпр КАК СтатусИнтернетМагазина,
//	|	Фрахт.Транспорт.Ссылка КАК Транспорт,
//	|	ИСТИНА КАК Доставлен,
//	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО
//	|ИЗ
//	|	Документ.Фрахт КАК Фрахт
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&наДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
//	|		ПО Фрахт.Контрагент.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
//	|ГДЕ
//	|	НЕ Фрахт.СтатусИнтернетМагазина В (0, 3, 4)
//	|	И Фрахт.ПометкаУдаления = ЛОЖЬ" +
//	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	Фрахт.Дата";
//	
//	КонецеСли;
КонецФункции

//+Степанов Задача № 3945 Чтение данных из РС СостоянияЗакрытияЗаказов 
Функция ПолучитьБазовыйТекстЗапроса2014_РС_Закрытий() Экспорт
	
	Если ДатаЗакрытия < '20200416000000' Тогда
		Возврат ПолучитьБазовыйТекстЗапроса2014_Старая()
	КонецЕсли;	
	
	Если ТипДоставки.Пустая() Тогда
	// НИКОГДА НЕ РАБОТАЕТ, ВООБЩЕ	
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Доставка КАК Доставка,
	|	МАКСИМУМ(новаЗаданияРейсов.Рейс.Дата) КАК ДатаРейса
	|ПОМЕСТИТЬ ПоследниеРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|ГДЕ
	|	новаЗаданияРейсов.Рейс.РейсОтменен = ЛОЖЬ
	|	И новаЗаданияРейсов.Рейс.ДатаНачала >= &ДатаНач
	|	И новаЗаданияРейсов.Рейс.ДатаНачала <= &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	новаЗаданияРейсов.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Рейс.Ссылка КАК Рейс,
	|	ПоследниеРейсы.Доставка.Ссылка КАК Доставка,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Транспорт,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка КАК Водитель,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка КАК Экспедитор
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРейсы КАК ПоследниеРейсы
	|		ПО новаЗаданияРейсов.Рейс.Дата = ПоследниеРейсы.ДатаРейса
	|			И новаЗаданияРейсов.Доставка.Ссылка = ПоследниеРейсы.Доставка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ВТРейсы.Транспорт КАК Транспорт,
	|	ВТРейсы.Водитель КАК Водитель,
	|	ВТРейсы.Экспедитор КАК Экспедитор,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	ВТРейсы.Рейс.Ссылка КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза.Ссылка КАК ДанныеСамовывоза,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.ДанныеМПВодителя.БрейкРасчетаПодъема.Ссылка КАК ПодъемныйБрейк,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	//Асеев 14.12.2020 (Задача № 4041)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК,
	//Асеев 14.12.2020 (Задача № 4041)<<<
	//Асеев 20.05.2021 (Задача № 4569)>>>
	|	ДополнительныеПараметрыЗаказа.ТарификацияПоОбъемномуВесу КАК ТарификацияПоОбъемномуВесу,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйОбъемныйВес КАК ТарифицируемыйОбъемныйВес,
	//Асеев 20.05.2021 (Задача № 4569)<<<
	//Асеев 31.03.2022 (Задача № 4771)>>>
	|	ПараметрыКонтрагентовСрезПоследних.ТарифПримерки КАК ТарифПримерки,
	|	ВТДанныеМП.ДанныеМПВодителя.КоличествоSKUПримерки КАК КоличествоSKUПримерки
	//Асеев 31.03.2022 (Задача № 4771)<<<
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//Асеев 31.03.2022 (Задача № 4771)>>>
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ), Контрагент = &Контрагент) КАК ПараметрыКонтрагентовСрезПоследних
	|		ПО (ИСТИНА)
	//Асеев 31.03.2022 (Задача № 4771)<<<	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&НаДату, ) КАК СостоянияЗаказовСрезПоследних
	|			ПО новаМестнаяДоставка.Ссылка = СостоянияЗаказовСрезПоследних.Доставка.Ссылка
	|				И (СостоянияЗаказовСрезПоследних.Доставка <> ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка))
	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРейсы КАК ВТРейсы
	|		ПО РеализацияТоваровУслуг.Номер = ВТРейсы.Доставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&НаДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|				НЕ Заказ.ПометкаУдаления
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|					Заказ.ТерминалДоставки В (&ТерминалыДоставки)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|		ПО (ПараметрыТарифаЗаказаСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗакрытияЗаказов.СрезПоследних(, ) КАК СостоянияЗакрытияЗаказовСрезПоследних
	|		ПО (СостоянияЗакрытияЗаказовСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|	РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|	РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|	И НЕ новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И ЕСТЬNULL(СостоянияЗакрытияЗаказовСрезПоследних.ЗаказЗакрыт, ЛОЖЬ) = ЛОЖЬ" + 	
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата";
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз Тогда
	// По Задача № 2999 добавлен пустой РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ДокументРеализацияТоваровУслуг
	|		ПО ДокументРеализацияТоваровУслуг.Дата >= &ДатаНач
	|		И ДокументРеализацияТоваровУслуг.Дата <= &ДатаКон
	|		И ДанныеЗаказаСамовывоза.Реализация =  ДокументРеализацияТоваровУслуг.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслугУслуги.Ссылка КАК Док,
	|	СУММА(РеализацияТоваровУслугУслуги.Сумма) КАК СтоимостьДоставкиДоМКАД
	|ПОМЕСТИТЬ ВТСуммыДоставок
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗакрытияЗаказов.СрезПоследних(, ) КАК СостоянияЗакрытияЗаказовСрезПоследних
	|		ПО РеализацияТоваровУслугУслуги.Ссылка = СостоянияЗакрытияЗаказовСрезПоследних.Заказ
	|ГДЕ
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|	РеализацияТоваровУслугУслуги.Ссылка.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|	РеализацияТоваровУслугУслуги.Ссылка.Дата >= &ДатаНач
	|	И РеализацияТоваровУслугУслуги.Ссылка.Дата <= &ДатаКон
	|	И ЕСТЬNULL(СостоянияЗакрытияЗаказовСрезПоследних.ЗаказЗакрыт, ЛОЖЬ) = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугУслуги.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	|	ВТСуммыДоставок.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ЗНАЧЕНИЕ(Документ.Рейс.ПустаяСсылка) КАК РейсДокумент,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация КАК ЮрЛицо,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза КАК ДанныеСамовывоза,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Самовывоз) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	//Асеев 20.05.2021 (Задача № 4569)>>>
	|	ДополнительныеПараметрыЗаказа.ТарификацияПоОбъемномуВесу КАК ТарификацияПоОбъемномуВесу,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйОбъемныйВес КАК ТарифицируемыйОбъемныйВес
	//Асеев 20.05.2021 (Задача № 4569)<<<
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&наДату, ТипЗаказа = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыДоставок КАК ВТСуммыДоставок
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТСуммыДоставок.Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&наДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&наДату, ) КАК СостоянияЗаказовСрезПоследних
	|		ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&наДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|				Заказ.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|					Заказ.ТерминалДоставки В (&ТерминалыДоставки)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|		ПО (ПараметрыТарифаЗаказаСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗакрытияЗаказов.СрезПоследних(, ) КАК СостоянияЗакрытияЗаказовСрезПоследних
	|		ПО (СостоянияЗакрытияЗаказовСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|	РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|	РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|	И новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И ЕСТЬNULL(СостоянияЗакрытияЗаказовСрезПоследних.ЗаказЗакрыт, ЛОЖЬ) = ЛОЖЬ" + 
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата 
	|";
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Доставка Тогда
	// По Задача № 2999 добавлен РейсДокумент
	Возврат
	"ВЫБРАТЬ
	|	ПриходДСПоОтчетуВодителяДоставки.Доставка КАК Заказ,
	|	МАКСИМУМ(ПриходДСПоОтчетуВодителяДоставки.Ссылка.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ_ПриходДС
	|ИЗ
	|	Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|ГДЕ
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка.Дата МЕЖДУ &ДатаНач И ДОБАВИТЬКДАТЕ(&ДатаКон, ЧАС, 7)
	|	И ПриходДСПоОтчетуВодителяДоставки.Ссылка.Проведен = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходДСПоОтчетуВодителяДоставки.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПриходДС.Заказ КАК Заказ,
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка КАК Ссылка,
	|	ПриходДСПоОтчетуВодителяДоставки.ТипОплаты КАК ТипОплаты
	|ПОМЕСТИТЬ ВТ_ПриходДС_Итог
	|ИЗ
	|	ВТ_ПриходДС КАК ВТ_ПриходДС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|		ПО ВТ_ПриходДС.Заказ = ПриходДСПоОтчетуВодителяДоставки.Доставка
	|			И ВТ_ПриходДС.Дата = ПриходДСПоОтчетуВодителяДоставки.Ссылка.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	//CeHbKA 05.04.2021
	|ГДЕ
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|	ДанныеЗаказаВодителя.Реализация.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|	ДанныеЗаказаВодителя.Реализация.ТерминалДоставки В(&ТерминалыДоставки)
	|	И ДанныеЗаказаВодителя.Реализация.Дата >= &ДатаНач И ДанныеЗаказаВодителя.Реализация.Дата <= &ДатаКон 
	|	И ДанныеЗаказаВодителя.Реализация.ВладелецТовара = &Контрагент 
	//CeHbKA 05.04.2021
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Доставка КАК Доставка,
	|	МАКСИМУМ(новаЗаданияРейсов.Рейс.Дата) КАК ДатаРейса
	|ПОМЕСТИТЬ ПоследниеРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|ГДЕ
	|	новаЗаданияРейсов.Рейс.РейсОтменен = ЛОЖЬ
	|	И новаЗаданияРейсов.Рейс.ДатаНачала >= &ДатаНач
	|	И новаЗаданияРейсов.Рейс.ДатаНачала <= &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	новаЗаданияРейсов.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	новаЗаданияРейсов.Рейс КАК Рейс,
	|	ПоследниеРейсы.Доставка КАК Доставка,
	|	новаЗаданияРейсов.Рейс.Транспорт КАК Транспорт,
	|	новаЗаданияРейсов.Рейс.Водитель КАК Водитель,
	|	новаЗаданияРейсов.Рейс.Экспедитор КАК Экспедитор,
	|	новаЗаданияРейсов.Рейс.Водитель.ФизЛицо КАК ВодительФизЛицо,
	|	новаЗаданияРейсов.Рейс.Экспедитор.ФизЛицо КАК ЭкспедиторФизЛицо,
	|	РейсДокументы.Ссылка КАК РейсДокумент
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРейсы КАК ПоследниеРейсы
	|		ПО новаЗаданияРейсов.Рейс.Дата = ПоследниеРейсы.ДатаРейса
	|			И новаЗаданияРейсов.Доставка = ПоследниеРейсы.Доставка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК РейсДокументы
	|		ПО новаЗаданияРейсов.Рейс = РейсДокументы.РейсМестнойДоставки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.ФизЛицо КАК ФизЛицо,
	|	МАКСИМУМ(ВложенныйЗапрос.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ПериодыПриемаФизЛиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизации.ФизЛицо КАК ФизЛицо,
	|		РаботникиОрганизации.Период КАК Период
	|	ИЗ
	|		ВТРейсы КАК ВТРейсы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|			ПО (РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ))
	|				И (ВТРейсы.ВодительФизЛицо = РаботникиОрганизации.ФизЛицо)
	|				И (РаботникиОрганизации.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаботникиОрганизации.ФизЛицо,
	|		РаботникиОрганизации.Период
	|	ИЗ
	|		ВТРейсы КАК ВТРейсы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|			ПО (РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ))
	|				И ВТРейсы.ЭкспедиторФизЛицо = РаботникиОрганизации.ФизЛицо
	|				И (РаботникиОрганизации.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию))) КАК ВложенныйЗапрос
	|
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.ФизЛицо	
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРейсы.Доставка КАК Доставка,
	|	ВЫБОР
	|		КОГДА ВТРейсы.Экспедитор = ЗНАЧЕНИЕ(Справочник.новаЭкспедиторы.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.зпСоставЭкипажа.ВодительБезЭкспедитора)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.зпСоставЭкипажа.ВодительСЭкспедитором)
	|	КОНЕЦ КАК СоставЭкипажа,
	|   РаботникиОрганизации_Водитель.ОсновноеНачисление КАК ОсновноеНачислениеВодитель,
	|   РаботникиОрганизации_Экспедитор.ОсновноеНачисление КАК ОсновноеНачислениеЭкспедитор
	|ПОМЕСТИТЬ ВТ_ОсновныеНачисления
	|ИЗ
	|	ВТРейсы КАК ВТРейсы
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыПриемаФизЛиц КАК ВТ_ПериодыПриемаФизЛиц_Водитель
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации_Водитель
	|		ПО ВТ_ПериодыПриемаФизЛиц_Водитель.Период = РаботникиОрганизации_Водитель.Период
	|			И ВТ_ПериодыПриемаФизЛиц_Водитель.ФизЛицо = РаботникиОрганизации_Водитель.ФизЛицо
	|			И РаботникиОрганизации_Водитель.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию)
	|	ПО ВТРейсы.ВодительФизЛицо = ВТ_ПериодыПриемаФизЛиц_Водитель.ФизЛицо
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыПриемаФизЛиц КАК ВТ_ПериодыПриемаФизЛиц_Экспедитор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации_Экспедитор
	|		ПО ВТ_ПериодыПриемаФизЛиц_Экспедитор.Период = РаботникиОрганизации_Экспедитор.Период
	|			И ВТ_ПериодыПриемаФизЛиц_Экспедитор.ФизЛицо = РаботникиОрганизации_Экспедитор.ФизЛицо
	|			И РаботникиОрганизации_Экспедитор.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию)
	|	ПО ВТРейсы.ЭкспедиторФизЛицо = ВТ_ПериодыПриемаФизЛиц_Экспедитор.ФизЛицо
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОсновныеНачисления.Доставка КАК Доставка,
	|	ВТ_ОсновныеНачисления.ОсновноеНачислениеВодитель КАК ОсновноеНачислениеВодитель,
	|	ВТ_ОсновныеНачисления.ОсновноеНачислениеЭкспедитор КАК ОсновноеНачислениеЭкспедитор,
	|	МАКСИМУМ(зпСтавкиОплатыПоНачислениям_Водитель.ПроцентОплатыПодъема) КАК ПроцентОплатыПодъемаЗаказаВодитель,
	|	МАКСИМУМ(зпСтавкиОплатыПоНачислениям_Экспедитор.ПроцентОплатыПодъема) КАК ПроцентОплатыПодъемаЗаказаЭкспедитор
	|ПОМЕСТИТЬ ВТ_СтавкиОплаты
	|ИЗ
	|	ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям_Водитель
	|	ПО зпСтавкиОплатыПоНачислениям_Водитель.СхемаРасчетаЗП = &СхемаРасчетаЗП
	|		И зпСтавкиОплатыПоНачислениям_Водитель.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|		И ВТ_ОсновныеНачисления.ОсновноеНачислениеВодитель = зпСтавкиОплатыПоНачислениям_Водитель.ОсновноеНачисление
	|		И зпСтавкиОплатыПоНачислениям_Водитель.Начисление = ЗНАЧЕНИЕ(Справочник.зпНачисления.ОплатаПодъемаНаЭтажПриДоставкеЗаказа)
	|		И ВТ_ОсновныеНачисления.СоставЭкипажа = зпСтавкиОплатыПоНачислениям_Водитель.СоставЭкипажа
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям_Экспедитор
	|	ПО зпСтавкиОплатыПоНачислениям_Экспедитор.СхемаРасчетаЗП = &СхемаРасчетаЗП
	|		И зпСтавкиОплатыПоНачислениям_Экспедитор.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|		И ВТ_ОсновныеНачисления.ОсновноеНачислениеЭкспедитор = зпСтавкиОплатыПоНачислениям_Экспедитор.ОсновноеНачисление
	|		И зпСтавкиОплатыПоНачислениям_Экспедитор.Начисление = ЗНАЧЕНИЕ(Справочник.зпНачисления.ОплатаПодъемаНаЭтажПриДоставкеЗаказа)
	|		И ВТ_ОсновныеНачисления.СоставЭкипажа = зпСтавкиОплатыПоНачислениям_Экспедитор.СоставЭкипажа
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОсновныеНачисления.Доставка,
	|	ВТ_ОсновныеНачисления.ОсновноеНачислениеВодитель,
	|	ВТ_ОсновныеНачисления.ОсновноеНачислениеЭкспедитор
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара,
	|	ЕСТЬNULL(ВТ_ПриходДС_Итог.ТипОплаты, ТипыОплат.Ссылка) КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	//Асеев 13.11.2020 (Задача № 4341)>>>
	//|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КОНЕЦ КАК СуммаДоставкиДоМКАД,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки, ЛОЖЬ) ТОГДА ВТДанныеМП.ДанныеМПВодителя.СтоимостьДоставки ИНАЧЕ новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КОНЕЦ КАК СуммаДоставкиДоМКАД,
	//Асеев 13.11.2020 (Задача № 4341)<<<
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ВТРейсы.Транспорт КАК Транспорт,
	|	ВТРейсы.Водитель КАК Водитель,
	|	ВТРейсы.Экспедитор КАК Экспедитор,
	|	ВТРейсы.РейсДокумент КАК РейсДокумент,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	ВТРейсы.Рейс КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВЫБОР
	|		КОГДА Накладная003Заказы.Вес ЕСТЬ NULL
	|				ИЛИ Накладная003Заказы.Вес = 0
	|			ТОГДА РеализацияТоваровУслуг.ОбщийВес
	|		ИНАЧЕ Накладная003Заказы.Вес
	|	КОНЕЦ КАК ВесЗаказа,
	|	ВТ_ПриходДС_Итог.Ссылка КАК ДокументОтчет,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация КАК ЮрЛицо,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ВТДанныеМП.ДанныеМПВодителя.ВидПодъема КАК ВидПодъемаНаЭтаж,
	|	ВТДанныеМП.ДанныеМПВодителя.Этаж КАК Этаж,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	|	ВТДанныеМП.ДанныеМПВодителя.БрейкРасчетаПодъема КАК БрейкРасчетаПодъема,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	//Асеев 14.12.2020 (Задача № 4041)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК,
	//Асеев 14.12.2020 (Задача № 4041)<<<
	//Асеев 13.11.2020 (Задача № 4341)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки КАК РасчетнаяСтоимостьДоставки,
	//Асеев 13.11.2020 (Задача № 4341)<<<
	//Асеев 20.05.2021 (Задача № 4569)>>>
	|	ДополнительныеПараметрыЗаказа.ТарификацияПоОбъемномуВесу КАК ТарификацияПоОбъемномуВесу,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйОбъемныйВес КАК ТарифицируемыйОбъемныйВес,
	//Асеев 20.05.2021 (Задача № 4569)<<<
	//Асеев 31.03.2022 (Задача № 4771)>>>
	|	ПараметрыКонтрагентовСрезПоследних.ТарифПримерки КАК ТарифПримерки,
	|	ВТДанныеМП.ДанныеМПВодителя.КоличествоSKUПримерки КАК КоличествоSKUПримерки,
	//Асеев 31.03.2022 (Задача № 4771)<<<
	//Асеев 24.03.2023 (Задача № 5021)>>>
	|	ВТ_СтавкиОплаты.ОсновноеНачислениеВодитель КАК ОсновноеНачислениеВодитель,
	|	ВТ_СтавкиОплаты.ОсновноеНачислениеЭкспедитор КАК ОсновноеНачислениеЭкспедитор,
	|	ВТ_СтавкиОплаты.ПроцентОплатыПодъемаЗаказаВодитель КАК ПроцентОплатыПодъемаЗаказаВодитель,
	|	ВТ_СтавкиОплаты.ПроцентОплатыПодъемаЗаказаЭкспедитор КАК ПроцентОплатыПодъемаЗаказаЭкспедитор
	//Асеев 24.03.2023 (Задача № 5021)<<<
	|ИЗ
	|	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|			КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|			Заказ.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)>>>
	|				Заказ.ТерминалДоставки В (&ТерминалыДоставки)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//Асеев 31.03.2022 (Задача № 4771)>>>
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ), Контрагент = &Контрагент) КАК ПараметрыКонтрагентовСрезПоследних
	|			ПО (ИСТИНА)
	//Асеев 31.03.2022 (Задача № 4771)<<<	
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|			ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|			ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|			ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|			ПО РеализацияТоваровУслуг.ВладелецТовара = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРейсы КАК ВТРейсы
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиОплаты КАК ВТ_СтавкиОплаты
	|				ПО ВТРейсы.Доставка = ВТ_СтавкиОплаты.Доставка
	|			ПО РеализацияТоваровУслуг.Номер = ВТРейсы.Доставка.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Накладная003.Заказы КАК Накладная003Заказы
	|			ПО РеализацияТоваровУслуг.Ссылка = Накладная003Заказы.Заказ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|			ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|			ПО РеализацияТоваровУслуг.ВладелецТовара = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент
	|				И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|				И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&НаДату, ) КАК СостоянияЗаказовСрезПоследних
	|			ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ
	|				И (СостоянияЗаказовСрезПоследних.Доставка <> ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|			ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&НаДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|			ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриходДС_Итог КАК ВТ_ПриходДС_Итог
	|			ПО (ВТ_ПриходДС_Итог.Заказ = РеализацияТоваровУслуг.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗакрытияЗаказов.СрезПоследних(, ) КАК СостоянияЗакрытияЗаказовСрезПоследних
	|			ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗакрытияЗаказовСрезПоследних.Заказ
	|		ПО ПараметрыТарифаЗаказаСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка
	|ГДЕ
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|	РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|	РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|	И НЕ новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И ЕСТЬNULL(СостоянияЗакрытияЗаказовСрезПоследних.ЗаказЗакрыт, ЛОЖЬ) = ЛОЖЬ" +
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата";
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Забор Тогда
	// По Задача № 2999 добавлен РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Забор КАК Забор
	|ПОМЕСТИТЬ ВТ_МПВодителя
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	|		ПО НЕ ЗаборТовара.СтатусИнтернетМагазина В (0, 3, 4)
	|			И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	|			И ЗаборТовара.ТерминалПриемки В(&ТерминалыДоставки) $ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ
	|			И ДанныеЗаказаВодителя.Забор = ЗаборТовара.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Забор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаборТовара.Ссылка КАК Реализация,
	|	ЗаборТовара.Номер КАК Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	ЗаборТовара.Контрагент КАК Контрагент,
	|	ЗаборТовара.Контрагент КАК ВладелецТовара,
	|	ЗаборТовара.СуммаДокумента КАК Сумма,
	|	ЗаборТовара.УслугиСД КАК УслугиСД,
	|	ЗаборТовара.КомментарийСД КАК КомментарийСД,
	|	ЛОЖЬ КАК Закрыть,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр КАК СтатусИнтернетМагазина,
	|	ЗаборТовара.Транспорт КАК Транспорт,
	|	ИСТИНА КАК Доставлен,
	|	ЗаборТовара.СтоимостьДоставки КАК СуммаДоставкиДоМкад,
	|	ЗаборТовара.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ЗаборТовара.Водитель КАК Водитель,
	|	ЗаборТовара.Экспедитор КАК Экспедитор,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация КАК ЮрЛицо,
	|	новаОтчетВодителяЗаборы.РезультатДоставки КАК РезультатДоставки,
	|	новаОтчетВодителяЗаборы.ПричинаНевыполнения КАК ПричинаНевыполнения,
	|	новаОтчетВодителяЗаборы.ПричинаОтказа КАК ПричинаОтказа,
	|	ЗаборТовара.ТерминалПриемки КАК ТерминалПриема,
	|	ЗаборТовара.ТерминалПриемки КАК ТерминалДоставки,
	|	ВТ_МПВодителя.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	ВТ_МПВодителя.ДанныеМПВодителя.ОбъемныйБрейк КАК ОбъемныйБрейк,
	|	ВТ_МПВодителя.ДанныеМПВодителя.КоличествоПалет КАК КоличествоПалет,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов КАК ОбъемВозвратныхЗаказовВЗаборе,
	|	ЗаборТовара.ОбъемЗабора КАК ВыгруженныйОбъем,
	|	ЗаборТовара.ЗонаТарификации КАК ЗонаТарификации,
	|	ЗаборТовара.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЗаборТовара.ОбъемЗаказов КАК ОбъемЗаказовВЗаборе,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.забор) КАК ТипЗаказа,
	|	ЗаборТовара.ТипОплаты КАК ТипОплатыЗаказа,
	|	РейсДокумент.Ссылка КАК РейсДокумент,
	//Асеев 14.12.2020 (Задача № 4041)>>>
	|	ВТ_МПВодителя.ДанныеМПВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	//Асеев 14.12.2020 (Задача № 4041)<<<
	|ИЗ
	|	Документ.ЗаборТовара КАК ЗаборТовара
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО ЗаборТовара.Контрагент = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО ЗаборТовара.Контрагент = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Забор))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя.Заборы КАК новаОтчетВодителяЗаборы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК РейсДокумент
	|			ПО новаОтчетВодителяЗаборы.Ссылка.Рейс = РейсДокумент.РейсМестнойДоставки
	|		ПО (новаОтчетВодителяЗаборы.Забор = ЗаборТовара.Ссылка)
	|			И (новаОтчетВодителяЗаборы.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МПВодителя КАК ВТ_МПВодителя
	|		ПО ЗаборТовара.Ссылка = ВТ_МПВодителя.Забор
	|ГДЕ
	|	НЕ ЗаборТовара.СтатусИнтернетМагазина В (0, 3, 4)
	|	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	|	И ЗаборТовара.ТерминалПриемки В(&ТерминалыДоставки)"
	 + "
	|	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|СГРУППИРОВАТЬ ПО
	|	ЗаборТовара.Ссылка,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация,
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа,
	|	ЗаборТовара.Контрагент,
	|	ЗаборТовара.СуммаДокумента,
	|	ЗаборТовара.УслугиСД,
	|	ЗаборТовара.КомментарийСД,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	|	ЗаборТовара.Транспорт,
	|	ЗаборТовара.СтоимостьДоставки,
	|	ЗаборТовара.КатегорияДоставки,
	|	ЗаборТовара.Водитель,
	|	ЗаборТовара.Экспедитор,
	|	ЗаборТовара.Контрагент,
	|   новаОтчетВодителяЗаборы.РезультатДоставки,
	|   новаОтчетВодителяЗаборы.ПричинаНевыполнения,
	|   новаОтчетВодителяЗаборы.ПричинаОтказа,
	|   ВТ_МПВодителя.ДанныеМПВодителя,
	|	ВТ_МПВодителя.ДанныеМПВодителя.ОбъемныйБрейк,
	|	ВТ_МПВодителя.ДанныеМПВодителя.КоличествоПалет,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов,
	//Асеев 11.01.2021 (Задача № 4041)>>>
	|	ВТ_МПВодителя.ДанныеМПВодителя.СтатусУстановленБезКИК,
	//Асеев 11.01.2021 (Задача № 4041)<<<
	|	ЗаборТовара.ОбъемЗабора,
	|	ЗаборТовара.ЗонаТарификации,
	|	ЗаборТовара.ТарифнаяСетка,
	|	ЗаборТовара.ОбъемЗаказов,
	|ЗНАЧЕНИЕ(Перечисление.Типызаказов.забор),
	|ЗаборТовара.ТипОплаты,
	|РейсДокумент.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	ЗаборТовара.Дата";
	
	
	//Возврат
	//"ВЫБРАТЬ
	//|	ЗаборТовара.Ссылка КАК Реализация,
	//|	ЗаборТовара.Номер КАК Номер,
	//|	ЗаборТовара.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	//|	ЗаборТовара.Контрагент,
	//|	ЗаборТовара.Контрагент КАК ВладелецТовара,
	//|	ЗаборТовара.СуммаДокумента КАК Сумма,
	//|	ЗаборТовара.УслугиСД КАК УслугиСД,
	//|	ЗаборТовара.КомментарийСД КАК КомментарийСД,
	//|	ЛОЖЬ КАК Закрыть,
	//|	ЗаборТовара.СтатусИнтернетМагазинаСпр КАК СтатусИнтернетМагазина,
	//|	ЗаборТовара.Транспорт.Ссылка КАК Транспорт,
	//|	ИСТИНА КАК Доставлен,
	//|	ЗаборТовара.СтоимостьДоставки КАК СуммаДоставкиДоМкад,
	//|	ЗаборТовара.КатегорияДоставки,
	//|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	//|	ЗаборТовара.Водитель,
	//|	ЗаборТовара.Экспедитор,
	//|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	//|	новаОтчетВодителяЗаборы.РезультатДоставки,
	//|	новаОтчетВодителяЗаборы.ПричинаНевыполнения,
	//|	новаОтчетВодителяЗаборы.ПричинаОтказа,
	//|	ЗаборТовара.ТерминалПриемки КАК ТерминалПриема,
	//|	ЗаборТовара.ТерминалПриемки КАК ТерминалДоставки
	//|ИЗ
	//|	Документ.ЗаборТовара КАК ЗаборТовара
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	//|		ПО ЗаборТовара.Контрагент.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	//|		ПО ЗаборТовара.Контрагент.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	//|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Забор))
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя.Заборы КАК новаОтчетВодителяЗаборы
	//|		ПО (новаОтчетВодителяЗаборы.Забор = ЗаборТовара.Ссылка)
	//|			И (новаОтчетВодителяЗаборы.Ссылка.Проведен)
	//|ГДЕ
	//|	НЕ ЗаборТовара.СтатусИнтернетМагазина В (0, 3, 4)
	//|	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	//|	И ЗаборТовара.ТерминалПриемки В(&ТерминалыДоставки)"
	// + "
	//|	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	//|СГРУППИРОВАТЬ ПО
	//|	ЗаборТовара.Ссылка,
	//|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета,
	//|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка,
	//|	ЗаборТовара.Номер,
	//|	ЗаборТовара.НомерВнешнегоЗаказа,
	//|	ЗаборТовара.Контрагент,
	//|	ЗаборТовара.СуммаДокумента,
	//|	ЗаборТовара.УслугиСД,
	//|	ЗаборТовара.КомментарийСД,
	//|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	//|	ЗаборТовара.Транспорт.Ссылка,
	//|	ЗаборТовара.СтоимостьДоставки,
	//|	ЗаборТовара.КатегорияДоставки,
	//|	ЗаборТовара.Водитель,
	//|	ЗаборТовара.Экспедитор,
	//|	ЗаборТовара.Контрагент,
	//|   новаОтчетВодителяЗаборы.РезультатДоставки,
	//|   новаОтчетВодителяЗаборы.ПричинаНевыполнения,
	//|   новаОтчетВодителяЗаборы.ПричинаОтказа
	//|УПОРЯДОЧИТЬ ПО
	//|	ЗаборТовара.Дата";
	
	
	
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Фрахт Тогда
	// По Задача № 2999 добавлен пустой РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Фрахт.Ссылка КАК Реализация,
	|	Фрахт.Номер КАК Номер,
	|	Фрахт.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	Фрахт.Контрагент КАК Контрагент,
	|	Фрахт.Контрагент КАК ВладелецТовара,
	|	Фрахт.СуммаДокумента КАК Сумма,
	|	Фрахт.УслугиСД КАК УслугиСД,
	|	Фрахт.КомментарийСД КАК КомментарийСД,
	|	ЛОЖЬ КАК Закрыть,
	|	Фрахт.СтатусИнтернетМагазинаСпр КАК СтатусЗаказаИнтернетМагазина,
	|	Фрахт.Транспорт КАК Транспорт,
	|	ИСТИНА КАК Доставлен,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация КАК ЮрЛицо,
	|	Фрахт.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	Фрахт.Терминал КАК ТерминалДоставки,
	|	Фрахт.Терминал КАК ТерминалПриема,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Фрахт) КАК ТипЗаказа,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	Значение(Документ.Рейс.ПустаяСсылка) Как РейсДокумент
	|ИЗ
	|	Документ.Фрахт КАК Фрахт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&наДату, ТипЗаказа = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО Фрахт.Контрагент = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО Фрахт.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&наДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО Фрахт.Контрагент = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент
	|			И Фрахт.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Фрахт))
	|ГДЕ
	|	НЕ Фрахт.СтатусИнтернетМагазина В (0, 3, 4)
	|	И Фрахт.ПометкаУдаления = ЛОЖЬ
	|	И Фрахт.Терминал В(&ТерминалыДоставки)" +
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Фрахт.Дата";
	
	КонецеСли;
КонецФункции

//+Степанов Задача № 3837 добавлено чтение реквизитов из РС параметров тарифов
Функция ПолучитьБазовыйТекстЗапроса2014() Экспорт
	
	Если ДатаЗакрытия < '20200416000000' Тогда
		Возврат ПолучитьБазовыйТекстЗапроса2014_Старая()
	КонецЕсли;	
	
	Если ТипДоставки.Пустая() Тогда
	// НИКОГДА НЕ РАБОТАЕТ, ВООБЩЕ	
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Доставка КАК Доставка,
	|	МАКСИМУМ(новаЗаданияРейсов.Рейс.Дата) КАК ДатаРейса
	|ПОМЕСТИТЬ ПоследниеРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|ГДЕ
	|	новаЗаданияРейсов.Рейс.РейсОтменен = ЛОЖЬ
	|	И новаЗаданияРейсов.Рейс.ДатаНачала >= &ДатаНач
	|	И новаЗаданияРейсов.Рейс.ДатаНачала <= &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	новаЗаданияРейсов.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Рейс.Ссылка КАК Рейс,
	|	ПоследниеРейсы.Доставка.Ссылка КАК Доставка,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Транспорт,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка КАК Водитель,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка КАК Экспедитор
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРейсы КАК ПоследниеРейсы
	|		ПО новаЗаданияРейсов.Рейс.Дата = ПоследниеРейсы.ДатаРейса
	|			И новаЗаданияРейсов.Доставка.Ссылка = ПоследниеРейсы.Доставка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ВТРейсы.Транспорт КАК Транспорт,
	|	ВТРейсы.Водитель КАК Водитель,
	|	ВТРейсы.Экспедитор КАК Экспедитор,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	ВТРейсы.Рейс.Ссылка КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза.Ссылка КАК ДанныеСамовывоза,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.ДанныеМПВодителя.БрейкРасчетаПодъема.Ссылка КАК ПодъемныйБрейк,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	//Асеев 14.12.2020 (Задача № 4041)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	//Асеев 14.12.2020 (Задача № 4041)<<<
	|ИЗ
	|	Справочник.ВесовыеБрейкиРасчетаСтоимостиПодъемов КАК ВесовыеБрейкиРасчетаСтоимостиПодъемов,
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&НаДату, ) КАК СостоянияЗаказовСрезПоследних
	|			ПО новаМестнаяДоставка.Ссылка = СостоянияЗаказовСрезПоследних.Доставка.Ссылка
	|				И (СостоянияЗаказовСрезПоследних.Доставка <> ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка))
	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРейсы КАК ВТРейсы
	|		ПО РеализацияТоваровУслуг.Номер = ВТРейсы.Доставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&НаДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	|				НЕ Заказ.СтатусИнтернетМагазина В (0, 3, 4)
	|					И НЕ Заказ.ПометкаУдаления
	|					И Заказ.ТерминалДоставки В (&ТерминалыДоставки)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|		ПО (ПараметрыТарифаЗаказаСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|	И НЕ новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)" + 	
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата";
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз Тогда
	// По Задача № 2999 добавлен пустой РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслугУслуги.Ссылка.Ссылка КАК Док,
	|	СУММА(РеализацияТоваровУслугУслуги.Сумма) КАК СтоимостьДоставкиДоМКАД
	|ПОМЕСТИТЬ ВТСуммыДоставок
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|ГДЕ
	|	НЕ РеализацияТоваровУслугУслуги.Ссылка.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслугУслуги.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И РеализацияТоваровУслугУслуги.Ссылка.Дата >= &ДатаНач
	|	И РеализацияТоваровУслугУслуги.Ссылка.Дата <= &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугУслуги.Ссылка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Рейс.Ссылка КАК Рейс,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Транспорт,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка КАК Водитель,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка КАК Экспедитор,
	|	новаЗаданияРейсов.Доставка.Ссылка КАК Доставка
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|
	|СГРУППИРОВАТЬ ПО
	|	новаЗаданияРейсов.Рейс.Ссылка,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка,
	|	новаЗаданияРейсов.Доставка.Ссылка,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	|	ВТСуммыДоставок.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ВТРейсы.Транспорт КАК Транспорт,
	|	ВТРейсы.Водитель КАК Водитель,
	|	ВТРейсы.Экспедитор КАК Экспедитор,
	|	ЗНАЧЕНИЕ(Документ.Рейс.ПустаяСсылка) КАК РейсДокумент,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза.Ссылка КАК ДанныеСамовывоза,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Самовывоз) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&наДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРейсы КАК ВТРейсы
	|		ПО РеализацияТоваровУслуг.Номер = ВТРейсы.Доставка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыДоставок КАК ВТСуммыДоставок
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТСуммыДоставок.Док.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&наДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&наДату, ) КАК СостоянияЗаказовСрезПоследних
	|		ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&наДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	|				НЕ Заказ.СтатусИнтернетМагазина В (0, 3, 4)
	|					И Заказ.ПометкаУдаления = ЛОЖЬ
	|					И Заказ.ТерминалДоставки В (&ТерминалыДоставки)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|		ПО (ПараметрыТарифаЗаказаСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|	И новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)" + 
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСуммыДоставок
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРейсы;";
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Доставка Тогда
	// По Задача № 2999 добавлен РейсДокумент
	Возврат
	"ВЫБРАТЬ
	|	ПриходДСПоОтчетуВодителяДоставки.Доставка КАК Заказ,
	|	МАКСИМУМ(ПриходДСПоОтчетуВодителяДоставки.Ссылка.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ_ПриходДС
	|ИЗ
	|	Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|ГДЕ
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка.Дата МЕЖДУ &ДатаНач И ДОБАВИТЬКДАТЕ(&ДатаКон, ЧАС, 7)
	|	И ПриходДСПоОтчетуВодителяДоставки.Ссылка.Проведен = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходДСПоОтчетуВодителяДоставки.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПриходДС.Заказ КАК Заказ,
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка КАК Ссылка,
	|	ПриходДСПоОтчетуВодителяДоставки.ТипОплаты КАК ТипОплаты
	|ПОМЕСТИТЬ ВТ_ПриходДС_Итог
	|ИЗ
	|	ВТ_ПриходДС КАК ВТ_ПриходДС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|		ПО ВТ_ПриходДС.Заказ = ПриходДСПоОтчетуВодителяДоставки.Доставка
	|			И ВТ_ПриходДС.Дата = ПриходДСПоОтчетуВодителяДоставки.Ссылка.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Доставка КАК Доставка,
	|	МАКСИМУМ(новаЗаданияРейсов.Рейс.Дата) КАК ДатаРейса
	|ПОМЕСТИТЬ ПоследниеРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|ГДЕ
	|	новаЗаданияРейсов.Рейс.РейсОтменен = ЛОЖЬ
	|	И новаЗаданияРейсов.Рейс.ДатаНачала >= &ДатаНач
	|	И новаЗаданияРейсов.Рейс.ДатаНачала <= &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	новаЗаданияРейсов.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Рейс.Ссылка КАК Рейс,
	|	ПоследниеРейсы.Доставка.Ссылка КАК Доставка,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Транспорт,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка КАК Водитель,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка КАК Экспедитор,
	|	РейсДокументы.Ссылка КАК РейсДокумент
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРейсы КАК ПоследниеРейсы
	|		ПО новаЗаданияРейсов.Рейс.Дата = ПоследниеРейсы.ДатаРейса
	|			И новаЗаданияРейсов.Доставка.Ссылка = ПоследниеРейсы.Доставка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК РейсДокументы
	|		ПО новаЗаданияРейсов.Рейс = РейсДокументы.РейсМестнойДоставки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоследниеРейсы.Доставка.Ссылка,
	|	новаЗаданияРейсов.Рейс.Ссылка,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка,
	|	РейсДокументы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ЕСТЬNULL(ВТ_ПриходДС_Итог.ТипОплаты, ТипыОплат.Ссылка) КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	//Асеев 13.11.2020 (Задача № 4341)>>>
	//|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КОНЕЦ КАК СуммаДоставкиДоМКАД,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки, ЛОЖЬ) ТОГДА ВТДанныеМП.ДанныеМПВодителя.СтоимостьДоставки ИНАЧЕ новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КОНЕЦ КАК СуммаДоставкиДоМКАД,
	//Асеев 13.11.2020 (Задача № 4341)<<<
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ВТРейсы.Транспорт КАК Транспорт,
	|	ВТРейсы.Водитель КАК Водитель,
	|	ВТРейсы.Экспедитор КАК Экспедитор,
	|	ВТРейсы.РейсДокумент КАК РейсДокумент,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	ВТРейсы.Рейс.Ссылка КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВЫБОР
	|		КОГДА Накладная003Заказы.Вес ЕСТЬ NULL
	|				ИЛИ Накладная003Заказы.Вес = 0
	|			ТОГДА РеализацияТоваровУслуг.ОбщийВес
	|		ИНАЧЕ Накладная003Заказы.Вес
	|	КОНЕЦ КАК ВесЗаказа,
	|	ВТ_ПриходДС_Итог.Ссылка КАК ДокументОтчет,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ВТДанныеМП.ДанныеМПВодителя.ВидПодъема КАК ВидПодъемаНаЭтаж,
	|	ВТДанныеМП.ДанныеМПВодителя.Этаж КАК Этаж,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	|	ВТДанныеМП.ДанныеМПВодителя.БрейкРасчетаПодъема.Ссылка КАК БрейкРасчетаПодъема,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	//Асеев 14.12.2020 (Задача № 4041)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК,
	//Асеев 14.12.2020 (Задача № 4041)<<<
	//Асеев 13.11.2020 (Задача № 4341)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки КАК РасчетнаяСтоимостьДоставки
	//Асеев 13.11.2020 (Задача № 4341)<<<
	|ИЗ
	|	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|			КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	|			НЕ Заказ.СтатусИнтернетМагазина В (0, 3, 4)
	|				И Заказ.ПометкаУдаления = ЛОЖЬ
	|				И Заказ.ТерминалДоставки В (&ТерминалыДоставки)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|			ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|			ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|			ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|			ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРейсы КАК ВТРейсы
	|			ПО РеализацияТоваровУслуг.Номер = ВТРейсы.Доставка.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Накладная003.Заказы КАК Накладная003Заказы
	|			ПО РеализацияТоваровУслуг.Ссылка = Накладная003Заказы.Заказ.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|			ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|			ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|				И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|				И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&НаДату, ) КАК СостоянияЗаказовСрезПоследних
	|			ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ.Ссылка
	|				И (СостоянияЗаказовСрезПоследних.Доставка <> ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|			ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&НаДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|			ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриходДС_Итог КАК ВТ_ПриходДС_Итог
	|			ПО (ВТ_ПриходДС_Итог.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ПО ПараметрыТарифаЗаказаСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|		ПО (РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория)
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|	И НЕ новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)" +
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата";
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Забор Тогда
	// По Задача № 2999 добавлен РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Забор КАК Забор
	|ПОМЕСТИТЬ ВТ_МПВодителя
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Забор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаборТовара.Ссылка КАК Реализация,
	|	ЗаборТовара.Номер КАК Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	ЗаборТовара.Контрагент КАК Контрагент,
	|	ЗаборТовара.Контрагент КАК ВладелецТовара,
	|	ЗаборТовара.СуммаДокумента КАК Сумма,
	|	ЗаборТовара.УслугиСД КАК УслугиСД,
	|	ЗаборТовара.КомментарийСД КАК КомментарийСД,
	|	ЛОЖЬ КАК Закрыть,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр КАК СтатусИнтернетМагазина,
	|	ЗаборТовара.Транспорт.Ссылка КАК Транспорт,
	|	ИСТИНА КАК Доставлен,
	|	ЗаборТовара.СтоимостьДоставки КАК СуммаДоставкиДоМкад,
	|	ЗаборТовара.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ЗаборТовара.Водитель КАК Водитель,
	|	ЗаборТовара.Экспедитор КАК Экспедитор,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	новаОтчетВодителяЗаборы.РезультатДоставки КАК РезультатДоставки,
	|	новаОтчетВодителяЗаборы.ПричинаНевыполнения КАК ПричинаНевыполнения,
	|	новаОтчетВодителяЗаборы.ПричинаОтказа КАК ПричинаОтказа,
	|	ЗаборТовара.ТерминалПриемки КАК ТерминалПриема,
	|	ЗаборТовара.ТерминалПриемки КАК ТерминалДоставки,
	|	ВТ_МПВодителя.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	ВТ_МПВодителя.ДанныеМПВодителя.ОбъемныйБрейк КАК ОбъемныйБрейк,
	|	ВТ_МПВодителя.ДанныеМПВодителя.КоличествоПалет КАК КоличествоПалет,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов КАК ОбъемВозвратныхЗаказовВЗаборе,
	|	ЗаборТовара.ОбъемЗабора КАК ВыгруженныйОбъем,
	|	ЗаборТовара.ЗонаТарификации КАК ЗонаТарификации,
	|	ЗаборТовара.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЗаборТовара.ОбъемЗаказов КАК ОбъемЗаказовВЗаборе,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.забор) КАК ТипЗаказа,
	|	ЗаборТовара.ТипОплаты КАК ТипОплатыЗаказа,
	|	РейсДокумент.Ссылка КАК РейсДокумент,
	//Асеев 14.12.2020 (Задача № 4041)>>>
	|	ВТ_МПВодителя.ДанныеМПВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	//Асеев 14.12.2020 (Задача № 4041)<<<
	|ИЗ
	|	Документ.ЗаборТовара КАК ЗаборТовара
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО ЗаборТовара.Контрагент.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО ЗаборТовара.Контрагент.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Забор))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя.Заборы КАК новаОтчетВодителяЗаборы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК РейсДокумент
	|			ПО новаОтчетВодителяЗаборы.Ссылка.Рейс = РейсДокумент.РейсМестнойДоставки
	|		ПО (новаОтчетВодителяЗаборы.Забор = ЗаборТовара.Ссылка)
	|			И (новаОтчетВодителяЗаборы.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МПВодителя КАК ВТ_МПВодителя
	|		ПО ЗаборТовара.Ссылка = ВТ_МПВодителя.Забор
	|ГДЕ
	|	НЕ ЗаборТовара.СтатусИнтернетМагазина В (0, 3, 4)
	|	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	|	И ЗаборТовара.ТерминалПриемки В(&ТерминалыДоставки)"
	 + "
	|	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|СГРУППИРОВАТЬ ПО
	|	ЗаборТовара.Ссылка,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка,
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа,
	|	ЗаборТовара.Контрагент,
	|	ЗаборТовара.СуммаДокумента,
	|	ЗаборТовара.УслугиСД,
	|	ЗаборТовара.КомментарийСД,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	|	ЗаборТовара.Транспорт.Ссылка,
	|	ЗаборТовара.СтоимостьДоставки,
	|	ЗаборТовара.КатегорияДоставки,
	|	ЗаборТовара.Водитель,
	|	ЗаборТовара.Экспедитор,
	|	ЗаборТовара.Контрагент,
	|   новаОтчетВодителяЗаборы.РезультатДоставки,
	|   новаОтчетВодителяЗаборы.ПричинаНевыполнения,
	|   новаОтчетВодителяЗаборы.ПричинаОтказа,
	|   ВТ_МПВодителя.ДанныеМПВодителя,
	|	ВТ_МПВодителя.ДанныеМПВодителя.ОбъемныйБрейк,
	|	ВТ_МПВодителя.ДанныеМПВодителя.КоличествоПалет,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов,
	|	ЗаборТовара.ОбъемЗабора,
	|	ЗаборТовара.ЗонаТарификации,
	|	ЗаборТовара.ТарифнаяСетка,
	|	ЗаборТовара.ОбъемЗаказов,
	//Асеев 11.01.2021 (Задача № 4041)>>>
	|	ВТ_МПВодителя.ДанныеМПВодителя.СтатусУстановленБезКИК,
	//Асеев 11.01.2021 (Задача № 4041)<<<
	|ЗНАЧЕНИЕ(Перечисление.Типызаказов.забор),
	|ЗаборТовара.ТипОплаты,
	|РейсДокумент.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	ЗаборТовара.Дата";
	
	
	//Возврат
	//"ВЫБРАТЬ
	//|	ЗаборТовара.Ссылка КАК Реализация,
	//|	ЗаборТовара.Номер КАК Номер,
	//|	ЗаборТовара.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	//|	ЗаборТовара.Контрагент,
	//|	ЗаборТовара.Контрагент КАК ВладелецТовара,
	//|	ЗаборТовара.СуммаДокумента КАК Сумма,
	//|	ЗаборТовара.УслугиСД КАК УслугиСД,
	//|	ЗаборТовара.КомментарийСД КАК КомментарийСД,
	//|	ЛОЖЬ КАК Закрыть,
	//|	ЗаборТовара.СтатусИнтернетМагазинаСпр КАК СтатусИнтернетМагазина,
	//|	ЗаборТовара.Транспорт.Ссылка КАК Транспорт,
	//|	ИСТИНА КАК Доставлен,
	//|	ЗаборТовара.СтоимостьДоставки КАК СуммаДоставкиДоМкад,
	//|	ЗаборТовара.КатегорияДоставки,
	//|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	//|	ЗаборТовара.Водитель,
	//|	ЗаборТовара.Экспедитор,
	//|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	//|	новаОтчетВодителяЗаборы.РезультатДоставки,
	//|	новаОтчетВодителяЗаборы.ПричинаНевыполнения,
	//|	новаОтчетВодителяЗаборы.ПричинаОтказа,
	//|	ЗаборТовара.ТерминалПриемки КАК ТерминалПриема,
	//|	ЗаборТовара.ТерминалПриемки КАК ТерминалДоставки
	//|ИЗ
	//|	Документ.ЗаборТовара КАК ЗаборТовара
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	//|		ПО ЗаборТовара.Контрагент.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	//|		ПО ЗаборТовара.Контрагент.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	//|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Забор))
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя.Заборы КАК новаОтчетВодителяЗаборы
	//|		ПО (новаОтчетВодителяЗаборы.Забор = ЗаборТовара.Ссылка)
	//|			И (новаОтчетВодителяЗаборы.Ссылка.Проведен)
	//|ГДЕ
	//|	НЕ ЗаборТовара.СтатусИнтернетМагазина В (0, 3, 4)
	//|	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	//|	И ЗаборТовара.ТерминалПриемки В(&ТерминалыДоставки)"
	// + "
	//|	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	//|СГРУППИРОВАТЬ ПО
	//|	ЗаборТовара.Ссылка,
	//|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета,
	//|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка,
	//|	ЗаборТовара.Номер,
	//|	ЗаборТовара.НомерВнешнегоЗаказа,
	//|	ЗаборТовара.Контрагент,
	//|	ЗаборТовара.СуммаДокумента,
	//|	ЗаборТовара.УслугиСД,
	//|	ЗаборТовара.КомментарийСД,
	//|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	//|	ЗаборТовара.Транспорт.Ссылка,
	//|	ЗаборТовара.СтоимостьДоставки,
	//|	ЗаборТовара.КатегорияДоставки,
	//|	ЗаборТовара.Водитель,
	//|	ЗаборТовара.Экспедитор,
	//|	ЗаборТовара.Контрагент,
	//|   новаОтчетВодителяЗаборы.РезультатДоставки,
	//|   новаОтчетВодителяЗаборы.ПричинаНевыполнения,
	//|   новаОтчетВодителяЗаборы.ПричинаОтказа
	//|УПОРЯДОЧИТЬ ПО
	//|	ЗаборТовара.Дата";
	
	
	
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Фрахт Тогда
	// По Задача № 2999 добавлен пустой РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Фрахт.Ссылка КАК Реализация,
	|	Фрахт.Номер КАК Номер,
	|	Фрахт.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	Фрахт.Контрагент КАК Контрагент,
	|	Фрахт.Контрагент КАК ВладелецТовара,
	|	Фрахт.СуммаДокумента КАК Сумма,
	|	Фрахт.УслугиСД КАК УслугиСД,
	|	Фрахт.КомментарийСД КАК КомментарийСД,
	|	ЛОЖЬ КАК Закрыть,
	|	Фрахт.СтатусИнтернетМагазинаСпр КАК СтатусЗаказаИнтернетМагазина,
	|	Фрахт.Транспорт.Ссылка КАК Транспорт,
	|	ИСТИНА КАК Доставлен,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация КАК ЮрЛицо,
	|	Фрахт.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	Фрахт.Терминал КАК ТерминалДоставки,
	|	Фрахт.Терминал КАК ТерминалПриема,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Фрахт) КАК ТипЗаказа,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	Значение(Документ.Рейс.ПустаяСсылка) Как РейсДокумент
	|ИЗ
	|	Документ.Фрахт КАК Фрахт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&наДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО Фрахт.Контрагент.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО Фрахт.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&наДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО Фрахт.Контрагент.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И Фрахт.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Фрахт))
	|ГДЕ
	|	НЕ Фрахт.СтатусИнтернетМагазина В (0, 3, 4)
	|	И Фрахт.ПометкаУдаления = ЛОЖЬ
	|	И Фрахт.Терминал В(&ТерминалыДоставки)" +
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Фрахт.Дата";
	
	КонецеСли;
КонецФункции

Функция ПолучитьБазовыйТекстЗапроса2014_Старая() Экспорт
	Если ТипДоставки.Пустая() Тогда
	// НИКОГДА НЕ РАБОТАЕТ, ВООБЩЕ	
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Доставка КАК Доставка,
	|	МАКСИМУМ(новаЗаданияРейсов.Рейс.Дата) КАК ДатаРейса
	|ПОМЕСТИТЬ ПоследниеРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|ГДЕ
	|	новаЗаданияРейсов.Рейс.РейсОтменен = ЛОЖЬ
	|	И новаЗаданияРейсов.Рейс.ДатаНачала >= &ДатаНач
	|	И новаЗаданияРейсов.Рейс.ДатаНачала <= &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	новаЗаданияРейсов.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Рейс.Ссылка КАК Рейс,
	|	ПоследниеРейсы.Доставка.Ссылка КАК Доставка,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Транспорт,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка КАК Водитель,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка КАК Экспедитор
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРейсы КАК ПоследниеРейсы
	|		ПО новаЗаданияРейсов.Рейс.Дата = ПоследниеРейсы.ДатаРейса
	|			И новаЗаданияРейсов.Доставка.Ссылка = ПоследниеРейсы.Доставка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	РеализацияТоваровУслуг.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	КатегорииДоставки2014.Ссылка КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ВТРейсы.Транспорт КАК Транспорт,
	|	ВТРейсы.Водитель КАК Водитель,
	|	ВТРейсы.Экспедитор КАК Экспедитор,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	ВТРейсы.Рейс.Ссылка КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	РеализацияТоваровУслуг.РасчетныйБрейк КАК РасчетныйБрейк,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
	|	РеализацияТоваровУслуг.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза.Ссылка КАК ДанныеСамовывоза,
	|	РеализацияТоваровУслуг.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.ДанныеМПВодителя.БрейкРасчетаПодъема.Ссылка КАК ПодъемныйБрейк,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	|	ВТДанныеМП.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&НаДату, ) КАК СостоянияЗаказовСрезПоследних
	|			ПО новаМестнаяДоставка.Ссылка = СостоянияЗаказовСрезПоследних.Доставка.Ссылка
	|				И (СостоянияЗаказовСрезПоследних.Доставка <> ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка))
	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРейсы КАК ВТРейсы
	|		ПО РеализацияТоваровУслуг.Номер = ВТРейсы.Доставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&НаДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин,
	|	Справочник.ВесовыеБрейкиРасчетаСтоимостиПодъемов КАК ВесовыеБрейкиРасчетаСтоимостиПодъемов
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|	И НЕ новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)" + 	
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата";
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Самовывоз Тогда
	// По Задача № 2999 добавлен пустой РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслугУслуги.Ссылка.Ссылка КАК Док,
	|	СУММА(РеализацияТоваровУслугУслуги.Сумма) КАК СтоимостьДоставкиДоМКАД
	|ПОМЕСТИТЬ ВТСуммыДоставок
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|ГДЕ
	|	НЕ РеализацияТоваровУслугУслуги.Ссылка.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслугУслуги.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И РеализацияТоваровУслугУслуги.Ссылка.Дата >= &ДатаНач
	|	И РеализацияТоваровУслугУслуги.Ссылка.Дата <= &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугУслуги.Ссылка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Рейс.Ссылка КАК Рейс,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Транспорт,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка КАК Водитель,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка КАК Экспедитор,
	|	новаЗаданияРейсов.Доставка.Ссылка КАК Доставка
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|
	|СГРУППИРОВАТЬ ПО
	|	новаЗаданияРейсов.Рейс.Ссылка,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка,
	|	новаЗаданияРейсов.Доставка.Ссылка,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	РеализацияТоваровУслуг.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	|	ВТСуммыДоставок.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	КатегорииДоставки2014.Ссылка КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ВТРейсы.Транспорт КАК Транспорт,
	|	ВТРейсы.Водитель КАК Водитель,
	|	ВТРейсы.Экспедитор КАК Экспедитор,
	|	Значение(Документ.Рейс.ПустаяСсылка) Как РейсДокумент,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	РеализацияТоваровУслуг.РасчетныйБрейк КАК РасчетныйБрейк,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
	|	РеализацияТоваровУслуг.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза.Ссылка КАК ДанныеСамовывоза,
	|	РеализацияТоваровУслуг.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Самовывоз) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&наДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРейсы КАК ВТРейсы
	|		ПО РеализацияТоваровУслуг.Номер = ВТРейсы.Доставка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыДоставок КАК ВТСуммыДоставок
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТСуммыДоставок.Док.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&наДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&наДату, ) КАК СостоянияЗаказовСрезПоследних
	|		ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&наДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|	И новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)" + 
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСуммыДоставок
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРейсы;";
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Доставка Тогда
	// По Задача № 2999 добавлен РейсДокумент
	Возврат
	"ВЫБРАТЬ
	|	ПриходДСПоОтчетуВодителяДоставки.Доставка КАК Заказ,
	|	МАКСИМУМ(ПриходДСПоОтчетуВодителяДоставки.Ссылка.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ_ПриходДС
	|ИЗ
	|	Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|ГДЕ
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка.Дата МЕЖДУ &ДатаНач И ДОБАВИТЬКДАТЕ(&ДатаКон, ЧАС, 7)
	|	И ПриходДСПоОтчетуВодителяДоставки.Ссылка.Проведен = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходДСПоОтчетуВодителяДоставки.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПриходДС.Заказ КАК Заказ,
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка КАК Ссылка,
	|	ПриходДСПоОтчетуВодителяДоставки.ТипОплаты КАК ТипОплаты
	|ПОМЕСТИТЬ ВТ_ПриходДС_Итог
	|ИЗ
	|	ВТ_ПриходДС КАК ВТ_ПриходДС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|		ПО ВТ_ПриходДС.Заказ = ПриходДСПоОтчетуВодителяДоставки.Доставка
	|			И ВТ_ПриходДС.Дата = ПриходДСПоОтчетуВодителяДоставки.Ссылка.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Доставка КАК Доставка,
	|	МАКСИМУМ(новаЗаданияРейсов.Рейс.Дата) КАК ДатаРейса
	|ПОМЕСТИТЬ ПоследниеРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|ГДЕ
	|	новаЗаданияРейсов.Рейс.РейсОтменен = ЛОЖЬ
	|	И новаЗаданияРейсов.Рейс.ДатаНачала >= &ДатаНач
	|	И новаЗаданияРейсов.Рейс.ДатаНачала <= &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	новаЗаданияРейсов.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Рейс.Ссылка КАК Рейс,
	|	ПоследниеРейсы.Доставка.Ссылка КАК Доставка,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Транспорт,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка КАК Водитель,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка КАК Экспедитор,
	|	РейсДокументы.Ссылка КАК РейсДокумент
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРейсы КАК ПоследниеРейсы
	|		ПО новаЗаданияРейсов.Рейс.Дата = ПоследниеРейсы.ДатаРейса
	|			И новаЗаданияРейсов.Доставка.Ссылка = ПоследниеРейсы.Доставка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК РейсДокументы
	|		ПО новаЗаданияРейсов.Рейс = РейсДокументы.РейсМестнойДоставки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоследниеРейсы.Доставка.Ссылка,
	|	новаЗаданияРейсов.Рейс.Ссылка,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка,
	|	РейсДокументы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	РеализацияТоваровУслуг.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ЕСТЬNULL(ВТ_ПриходДС_Итог.ТипОплаты, ТипыОплат.Ссылка) КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	КатегорииДоставки2014.Ссылка КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ВТРейсы.Транспорт КАК Транспорт,
	|	ВТРейсы.Водитель КАК Водитель,
	|	ВТРейсы.Экспедитор КАК Экспедитор,
	|	ВТРейсы.РейсДокумент КАК РейсДокумент,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	ВТРейсы.Рейс.Ссылка КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВЫБОР
	|		КОГДА Накладная003Заказы.Вес ЕСТЬ NULL
	|				ИЛИ Накладная003Заказы.Вес = 0
	|			ТОГДА РеализацияТоваровУслуг.ОбщийВес
	|		ИНАЧЕ Накладная003Заказы.Вес
	|	КОНЕЦ КАК ВесЗаказа,
	|	ВТ_ПриходДС_Итог.Ссылка КАК ДокументОтчет,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	РеализацияТоваровУслуг.РасчетныйБрейк КАК РасчетныйБрейк,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
	|	РеализацияТоваровУслуг.ЗонаТарификации КАК ЗонаТарификации,
	|	РеализацияТоваровУслуг.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ВТДанныеМП.ДанныеМПВодителя.ВидПодъема КАК ВидПодъемаНаЭтаж,
	|	ВТДанныеМП.ДанныеМПВодителя.Этаж КАК Этаж,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	|	ВТДанныеМП.ДанныеМПВодителя.БрейкРасчетаПодъема.Ссылка КАК БрейкРасчетаПодъема,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	ВТДанныеМП.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРейсы КАК ВТРейсы
	|		ПО РеализацияТоваровУслуг.Номер = ВТРейсы.Доставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Накладная003.Заказы КАК Накладная003Заказы
	|		ПО РеализацияТоваровУслуг.Ссылка = Накладная003Заказы.Заказ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&НаДату, ) КАК СостоянияЗаказовСрезПоследних
	|		ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ.Ссылка
	|			И (СостоянияЗаказовСрезПоследних.Доставка <> ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&НаДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриходДС_Итог КАК ВТ_ПриходДС_Итог
	|		ПО (ВТ_ПриходДС_Итог.Заказ = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|	И НЕ новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)" +
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата";
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Забор Тогда
	// По Задача № 2999 добавлен РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Забор КАК Забор,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ПОМЕСТИТЬ ВТ_МПВодителя
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Забор,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаборТовара.Ссылка КАК Реализация,
	|	ЗаборТовара.Номер КАК Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	ЗаборТовара.Контрагент КАК Контрагент,
	|	ЗаборТовара.Контрагент КАК ВладелецТовара,
	|	ЗаборТовара.СуммаДокумента КАК Сумма,
	|	ЗаборТовара.УслугиСД КАК УслугиСД,
	|	ЗаборТовара.КомментарийСД КАК КомментарийСД,
	|	ЛОЖЬ КАК Закрыть,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр КАК СтатусИнтернетМагазина,
	|	ЗаборТовара.Транспорт.Ссылка КАК Транспорт,
	|	ИСТИНА КАК Доставлен,
	|	ЗаборТовара.СтоимостьДоставки КАК СуммаДоставкиДоМкад,
	|	ЗаборТовара.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ЗаборТовара.Водитель КАК Водитель,
	|	ЗаборТовара.Экспедитор КАК Экспедитор,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	новаОтчетВодителяЗаборы.РезультатДоставки КАК РезультатДоставки,
	|	новаОтчетВодителяЗаборы.ПричинаНевыполнения КАК ПричинаНевыполнения,
	|	новаОтчетВодителяЗаборы.ПричинаОтказа КАК ПричинаОтказа,
	|	ЗаборТовара.ТерминалПриемки КАК ТерминалПриема,
	|	ЗаборТовара.ТерминалПриемки КАК ТерминалДоставки,
	|	ВТ_МПВодителя.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	ВТ_МПВодителя.ДанныеМПВодителя.ОбъемныйБрейк КАК ОбъемныйБрейк,
	|	ВТ_МПВодителя.ДанныеМПВодителя.КоличествоПалет КАК КоличествоПалет,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов КАК ОбъемВозвратныхЗаказовВЗаборе,
	|	ЗаборТовара.ОбъемЗабора КАК ВыгруженныйОбъем,
	|	ЗаборТовара.ЗонаТарификации КАК ЗонаТарификации,
	|	ЗаборТовара.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЗаборТовара.ОбъемЗаказов КАК ОбъемЗаказовВЗаборе,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.забор) КАК ТипЗаказа,
	|	ЗаборТовара.ТипОплаты КАК ТипОплатыЗаказа,
	|	РейсДокумент.Ссылка КАК РейсДокумент,
	|	ВТ_МПВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ИЗ
	|	Документ.ЗаборТовара КАК ЗаборТовара
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО ЗаборТовара.Контрагент.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО ЗаборТовара.Контрагент.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Забор))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя.Заборы КАК новаОтчетВодителяЗаборы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК РейсДокумент
	|			ПО новаОтчетВодителяЗаборы.Ссылка.Рейс = РейсДокумент.РейсМестнойДоставки
	|		ПО (новаОтчетВодителяЗаборы.Забор = ЗаборТовара.Ссылка)
	|			И (новаОтчетВодителяЗаборы.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МПВодителя КАК ВТ_МПВодителя
	|		ПО ЗаборТовара.Ссылка = ВТ_МПВодителя.Забор
	|ГДЕ
	|	НЕ ЗаборТовара.СтатусИнтернетМагазина В (0, 3, 4)
	|	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	|	И ЗаборТовара.ТерминалПриемки В(&ТерминалыДоставки)"
	 + "
	|	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|СГРУППИРОВАТЬ ПО
	|	ЗаборТовара.Ссылка,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка,
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа,
	|	ЗаборТовара.Контрагент,
	|	ЗаборТовара.СуммаДокумента,
	|	ЗаборТовара.УслугиСД,
	|	ЗаборТовара.КомментарийСД,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	|	ЗаборТовара.Транспорт.Ссылка,
	|	ЗаборТовара.СтоимостьДоставки,
	|	ЗаборТовара.КатегорияДоставки,
	|	ЗаборТовара.Водитель,
	|	ЗаборТовара.Экспедитор,
	|	ЗаборТовара.Контрагент,
	|   новаОтчетВодителяЗаборы.РезультатДоставки,
	|   новаОтчетВодителяЗаборы.ПричинаНевыполнения,
	|   новаОтчетВодителяЗаборы.ПричинаОтказа,
	|   ВТ_МПВодителя.ДанныеМПВодителя,
	|	ВТ_МПВодителя.ДанныеМПВодителя.ОбъемныйБрейк,
	|	ВТ_МПВодителя.ДанныеМПВодителя.КоличествоПалет,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов,
	|	ЗаборТовара.ОбъемЗабора,
	|	ЗаборТовара.ЗонаТарификации,
	|	ЗаборТовара.ТарифнаяСетка,
	|	ЗаборТовара.ОбъемЗаказов,
	|	ВТ_МПВодителя.СтатусУстановленБезКИК,
	|ЗНАЧЕНИЕ(Перечисление.Типызаказов.забор),
	|ЗаборТовара.ТипОплаты,
	|РейсДокумент.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	ЗаборТовара.Дата";
	
	
	//Возврат
	//"ВЫБРАТЬ
	//|	ЗаборТовара.Ссылка КАК Реализация,
	//|	ЗаборТовара.Номер КАК Номер,
	//|	ЗаборТовара.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	//|	ЗаборТовара.Контрагент,
	//|	ЗаборТовара.Контрагент КАК ВладелецТовара,
	//|	ЗаборТовара.СуммаДокумента КАК Сумма,
	//|	ЗаборТовара.УслугиСД КАК УслугиСД,
	//|	ЗаборТовара.КомментарийСД КАК КомментарийСД,
	//|	ЛОЖЬ КАК Закрыть,
	//|	ЗаборТовара.СтатусИнтернетМагазинаСпр КАК СтатусИнтернетМагазина,
	//|	ЗаборТовара.Транспорт.Ссылка КАК Транспорт,
	//|	ИСТИНА КАК Доставлен,
	//|	ЗаборТовара.СтоимостьДоставки КАК СуммаДоставкиДоМкад,
	//|	ЗаборТовара.КатегорияДоставки,
	//|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	//|	ЗаборТовара.Водитель,
	//|	ЗаборТовара.Экспедитор,
	//|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	//|	новаОтчетВодителяЗаборы.РезультатДоставки,
	//|	новаОтчетВодителяЗаборы.ПричинаНевыполнения,
	//|	новаОтчетВодителяЗаборы.ПричинаОтказа,
	//|	ЗаборТовара.ТерминалПриемки КАК ТерминалПриема,
	//|	ЗаборТовара.ТерминалПриемки КАК ТерминалДоставки
	//|ИЗ
	//|	Документ.ЗаборТовара КАК ЗаборТовара
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&НаДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	//|		ПО ЗаборТовара.Контрагент.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&НаДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	//|		ПО ЗаборТовара.Контрагент.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	//|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Забор))
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя.Заборы КАК новаОтчетВодителяЗаборы
	//|		ПО (новаОтчетВодителяЗаборы.Забор = ЗаборТовара.Ссылка)
	//|			И (новаОтчетВодителяЗаборы.Ссылка.Проведен)
	//|ГДЕ
	//|	НЕ ЗаборТовара.СтатусИнтернетМагазина В (0, 3, 4)
	//|	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	//|	И ЗаборТовара.ТерминалПриемки В(&ТерминалыДоставки)"
	// + "
	//|	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	//|СГРУППИРОВАТЬ ПО
	//|	ЗаборТовара.Ссылка,
	//|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета,
	//|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка,
	//|	ЗаборТовара.Номер,
	//|	ЗаборТовара.НомерВнешнегоЗаказа,
	//|	ЗаборТовара.Контрагент,
	//|	ЗаборТовара.СуммаДокумента,
	//|	ЗаборТовара.УслугиСД,
	//|	ЗаборТовара.КомментарийСД,
	//|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	//|	ЗаборТовара.Транспорт.Ссылка,
	//|	ЗаборТовара.СтоимостьДоставки,
	//|	ЗаборТовара.КатегорияДоставки,
	//|	ЗаборТовара.Водитель,
	//|	ЗаборТовара.Экспедитор,
	//|	ЗаборТовара.Контрагент,
	//|   новаОтчетВодителяЗаборы.РезультатДоставки,
	//|   новаОтчетВодителяЗаборы.ПричинаНевыполнения,
	//|   новаОтчетВодителяЗаборы.ПричинаОтказа
	//|УПОРЯДОЧИТЬ ПО
	//|	ЗаборТовара.Дата";
	
	
	
ИначеЕсли ТипДоставки = Перечисления.ТипыЗаказов.Фрахт Тогда
	// По Задача № 2999 добавлен пустой РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Фрахт.Ссылка КАК Реализация,
	|	Фрахт.Номер КАК Номер,
	|	Фрахт.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	Фрахт.Контрагент КАК Контрагент,
	|	Фрахт.Контрагент КАК ВладелецТовара,
	|	Фрахт.СуммаДокумента КАК Сумма,
	|	Фрахт.УслугиСД КАК УслугиСД,
	|	Фрахт.КомментарийСД КАК КомментарийСД,
	|	ЛОЖЬ КАК Закрыть,
	|	Фрахт.СтатусИнтернетМагазинаСпр КАК СтатусЗаказаИнтернетМагазина,
	|	Фрахт.Транспорт.Ссылка КАК Транспорт,
	|	ИСТИНА КАК Доставлен,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация КАК ЮрЛицо,
	|	Фрахт.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	Фрахт.Терминал КАК ТерминалДоставки,
	|	Фрахт.Терминал КАК ТерминалПриема,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Фрахт) КАК ТипЗаказа,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	Значение(Документ.Рейс.ПустаяСсылка) Как РейсДокумент
	|ИЗ
	|	Документ.Фрахт КАК Фрахт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&наДату, ТипЗаказа.Ссылка = &ТипЗаказа) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО Фрахт.Контрагент.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО Фрахт.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&наДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО Фрахт.Контрагент.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И Фрахт.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Фрахт))
	|ГДЕ
	|	НЕ Фрахт.СтатусИнтернетМагазина В (0, 3, 4)
	|	И Фрахт.ПометкаУдаления = ЛОЖЬ
	|	И Фрахт.Терминал В(&ТерминалыДоставки)" +
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Фрахт.Дата";
	
	КонецеСли;
КонецФункции

Функция БылПереносСЗаездом(ДокРеализация)

	
	ПараметрыОтбора = новый Структура();
	ПараметрыОтбора.Вставить("Заказ", ДокРеализация);
	ПараметрыОтбора.Вставить("ПричинаНеВыполненияДоставки", Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом);

	Най = РейсыПоЗаказам.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого Стр из Най Цикл	
		Стр.БылПереносСЗаездом = Истина;			
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Най) Тогда	
		Возврат Истина;		
	Иначе	
		Возврат Ложь;	
	КонецЕсли;
	 	

КонецФункции // ()

//+Степанов Задача № 3945 Чтение данных из РС СостоянияЗакрытияЗаказов 
Функция ПолучитьТекстЗапросаПоОтклоненным_РС_Закрытий() Экспорт
	//Задача № 3247
	
	//+Степанов Задача № 3837
	Если ДатаЗакрытия < '20200416000000' Тогда
		Возврат ПолучитьТекстЗапросаПоОтклоненным_старая()
	КонецЕсли;	
	//-Степанов Задача № 3837
	
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Реализации
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаЗакрытия, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ)
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|	МАКСИМУМ(СтатусыЗаказов.Период) КАК Период,
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|	СтатусыЗаказов.Заказ КАК Заказ,
	|	СтатусыЗаказов.Статус КАК Статус
	|ПОМЕСТИТЬ ВТ_Статусы
	|ИЗ
	|	РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|ГДЕ
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|	(СтатусыЗаказов.Статус = 235 ИЛИ СтатусыЗаказов.Статус = 231 ИЛИ СтатусыЗаказов.Статус = 237)
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|	И СтатусыЗаказов.Заказ В
	|			(ВЫБРАТЬ
	|				ВТ_Реализации.Ссылка
	|			ИЗ
	|				ВТ_Реализации)
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|СГРУППИРОВАТЬ ПО
	|	СтатусыЗаказов.Заказ,
	|	СтатусыЗаказов.Статус
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РейсЗаказы.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_ЗаказыВРейсах
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|ГДЕ
	|	РейсЗаказы.Ссылка.Проведен
	|	И РейсЗаказы.Ссылка.ДатаРейса = &ДатаЗакрытия
	|	И НЕ РейсЗаказы.УдаленИзРейса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Реализации.Ссылка КАК Ссылка,
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	//|	ВТ_Статусы.Статус КАК Статус,
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|	ВТ_ЗаказыВРейсах.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_СписокРеализацийПервичный
	|ИЗ
	|	ВТ_Реализации КАК ВТ_Реализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Статусы КАК ВТ_Статусы
	|		ПО ВТ_Реализации.Ссылка = ВТ_Статусы.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыВРейсах КАК ВТ_ЗаказыВРейсах
	|		ПО ВТ_Реализации.Ссылка = ВТ_ЗаказыВРейсах.Заказ
	|ГДЕ
	|	НЕ ВТ_Статусы.Статус ЕСТЬ NULL
	|	И ВТ_ЗаказыВРейсах.Заказ ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокРеализацийПервичный.Ссылка КАК Ссылка,
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	//|	ВТ_СписокРеализацийПервичный.Статус КАК Статус,
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|	ВТ_СписокРеализацийПервичный.Заказ КАК Заказ,
	|	ЗакрытыеЗаказы.Регистратор КАК ЗакрытиеЗаказов
	|ПОМЕСТИТЬ ВТ_СписокРализацийСЗакрытиями
	|ИЗ
	|	ВТ_СписокРеализацийПервичный КАК ВТ_СписокРеализацийПервичный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	|		ПО ВТ_СписокРеализацийПервичный.Ссылка = ЗакрытыеЗаказы.Реализация
	|			И (ЗакрытыеЗаказы.Регистратор ССЫЛКА Документ.ЗакрытиеЗаказов)
	|			И (ЗакрытыеЗаказы.Регистратор <> &ДокументЗакрытие)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокРализацийСЗакрытиями.Ссылка КАК Ссылка,
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	//|	ВТ_СписокРализацийСЗакрытиями.Статус КАК Статус,
	|	МАКСИМУМ(ВТ_Статусы.Период) КАК ПериодСтатуса,
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|	ВТ_СписокРализацийСЗакрытиями.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_СписокРеализаций
	|ИЗ
	|	ВТ_СписокРализацийСЗакрытиями КАК ВТ_СписокРализацийСЗакрытиями
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Статусы КАК ВТ_Статусы
	|		ПО ВТ_СписокРализацийСЗакрытиями.Ссылка = ВТ_Статусы.Заказ
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|ГДЕ
	|	ВТ_СписокРализацийСЗакрытиями.ЗакрытиеЗаказов ЕСТЬ NULL
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СписокРализацийСЗакрытиями.Ссылка,
	|	ВТ_СписокРализацийСЗакрытиями.Заказ
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|ГДЕ
	|	ДанныеЗаказаСамовывоза.Реализация В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|ГДЕ
	|	ДанныеЗаказаВодителя.Реализация В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка,
	|	ВозвратТоваровОтПокупателя.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Возвраты
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Перемещения
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеТоваров.Ссылка КАК Ссылка,
	|	СписаниеТоваров.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Списания
	|ИЗ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров
	|ГДЕ
	|	СписаниеТоваров.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОприходованиеТоваров.Ссылка КАК Ссылка,
	|	ОприходованиеТоваров.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Оприходования
	|ИЗ
	|	Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|ГДЕ
	|	ОприходованиеТоваров.Ссылка.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслуг.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Поступления
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеПараметрыЗаказа.Заказ КАК Заказ,
	|	ДополнительныеПараметрыЗаказа.Доставка КАК Доставка,
	|	ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие КАК ПредварительноеЗакрытие,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъемаЗаказа,
	//Асеев 20.05.2021 (Задача № 4569)>>>
	|	ДополнительныеПараметрыЗаказа.ТарификацияПоОбъемномуВесу КАК ТарификацияПоОбъемномуВесу,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйОбъемныйВес КАК ТарифицируемыйОбъемныйВес
	//Асеев 20.05.2021 (Задача № 4569)<<<
	|ПОМЕСТИТЬ ВТ_ДопПараметрыЗаказа
	|ИЗ
	|	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|ГДЕ
	|	ДополнительныеПараметрыЗаказа.Заказ В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Доставка КАК Доставка,
	|	МАКСИМУМ(новаЗаданияРейсов.Рейс.Дата) КАК ДатаРейса
	|ПОМЕСТИТЬ ПоследниеРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|ГДЕ
	|	новаЗаданияРейсов.Рейс.РейсОтменен = ЛОЖЬ
	|	И новаЗаданияРейсов.Доставка В
	|			(ВЫБРАТЬ
	|				ВТ_ДопПараметрыЗаказа.Доставка
	|			ИЗ
	|				ВТ_ДопПараметрыЗаказа)
	|
	|СГРУППИРОВАТЬ ПО
	|	новаЗаданияРейсов.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	новаЗаданияРейсов.Рейс КАК Рейс,
	|	ПоследниеРейсы.Доставка КАК Доставка,
	|	новаЗаданияРейсов.Рейс.Транспорт КАК Транспорт,
	|	новаЗаданияРейсов.Рейс.Водитель КАК Водитель,
	|	новаЗаданияРейсов.Рейс.Экспедитор КАК Экспедитор
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРейсы КАК ПоследниеРейсы
	|		ПО новаЗаданияРейсов.Рейс.Дата = ПоследниеРейсы.ДатаРейса
	|			И новаЗаданияРейсов.Доставка = ПоследниеРейсы.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Реализация
	|ПОМЕСТИТЬ ВТ_ЗагрузкиСТСД
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды.Заказ В
	|			(ВЫБРАТЬ
	|				ВТ_Списокреализаций.Ссылка
	|			ИЗ
	|				ВТ_Списокреализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	0 КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВТ_Возвраты.Ссылка КАК Возврат,
	|	ВТ_Перемещения.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.ДоставкаЗавершена, ЛОЖЬ) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	ИСТИНА КАК Отклонить,
	|	ВТ_Списания.Ссылка КАК Списание,
	|	ВТ_Оприходования.Ссылка КАК Оприходование,
	|	ВТ_ДопПараметрыЗаказа.Доставка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ВТ_Поступления.Ссылка КАК Поступление,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.ДоставкаИзмененаНаСамовывоз, ЛОЖЬ) КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипыОплат,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СуммаБанковскойКомиссии, 0) КАК БанковскаяКомиссия,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СуммаКассовогоОбслуживания, 0) КАК КассовоеОбслуживание,
	//Асеев 13.11.2020 (Задача № 4341)>>>
	//|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СтоимостьДоставкиДоМКАД, 0) КАК СуммаДоставкиДоМКАД,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки, ЛОЖЬ) ТОГДА ВТДанныеМП.ДанныеМПВодителя.СтоимостьДоставки ИНАЧЕ ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СтоимостьДоставкиДоМКАД, 0) КОНЕЦ КАК СуммаДоставкиДоМКАД,
	//Асеев 13.11.2020 (Задача № 4341)<<<
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СтоимостьДоставкиЗаМКАД, 0) КАК СуммаДоставкиЗаМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ВТРейсы.Транспорт КАК Транспорт,
	|	ВТРейсы.Водитель КАК Водитель,
	|	ВТРейсы.Экспедитор КАК Экспедитор,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	ВТРейсы.Рейс КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация КАК ЮрЛицо,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза КАК ДанныеСамовывоза,
	|	0 КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ВТ_ДопПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ВЫБОР
	|		КОГДА ВТ_ДопПараметрыЗаказа.Доставка = ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.Типызаказов.Самовывоз)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка)
	|	КОНЕЦ КАК ТипЗаказа,
	|	ВТ_ДопПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ВТ_ДопПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.ДанныеМПВодителя.БрейкРасчетаПодъема КАК ПодъемныйБрейк,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	//Асеев 14.12.2020 (Задача № 4041)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК,
	//Асеев 14.12.2020 (Задача № 4041)<<<
	//Асеев 13.11.2020 (Задача № 4341)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки КАК РасчетнаяСтоимостьДоставки,
	//Асеев 13.11.2020 (Задача № 4341)<<<
	//Асеев 20.05.2021 (Задача № 4569)>>>
	|	ВТ_ДопПараметрыЗаказа.ТарификацияПоОбъемномуВесу КАК ТарификацияПоОбъемномуВесу,
	|	ВТ_ДопПараметрыЗаказа.ТарифицируемыйОбъемныйВес КАК ТарифицируемыйОбъемныйВес
	//Асеев 20.05.2021 (Задача № 4569)<<<
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|	,ВТ_СписокРеализаций.ПериодСтатуса КАК ПериодСтатуса
	|	,ВТ_Статусы.Статус КАК Статус
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Возвраты КАК ВТ_Возвраты
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Возвраты.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Перемещения КАК ВТ_Перемещения
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Перемещения.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопПараметрыЗаказа КАК ВТ_ДопПараметрыЗаказа
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних КАК СостоянияЗаказовСрезПоследних
	|			ПО ВТ_ДопПараметрыЗаказа.Доставка = СостоянияЗаказовСрезПоследних.Доставка
	|				И ВТ_ДопПараметрыЗаказа.Заказ = СостоянияЗаказовСрезПоследних.Заказ
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_ДопПараметрыЗаказа.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Списания КАК ВТ_Списания
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Списания.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Оприходования КАК ВТ_Оприходования
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Оприходования.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Поступления КАК ВТ_Поступления
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Поступления.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ), ) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРейсы КАК ВТРейсы
	|		ПО РеализацияТоваровУслуг.Номер = ВТРейсы.Доставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ), ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки = ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ), ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗагрузкиСТСД КАК ВТ_ЗагрузкиСТСД
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_ЗагрузкиСТСД.Реализация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	|				Заказ В
	|					(ВЫБРАТЬ
	|						ВТ_СписокРеализаций.Ссылка
	|					ИЗ
	|						ВТ_СписокРеализаций)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|		ПО (ПараметрыТарифаЗаказаСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗакрытияЗаказов.СрезПоследних(, ) КАК СостоянияЗакрытияЗаказовСрезПоследних
	|		ПО (СостоянияЗакрытияЗаказовСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СписокРеализаций КАК ВТ_СписокРеализаций
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Статусы КАК ВТ_Статусы
	|			ПО ВТ_СписокРеализаций.Ссылка = ВТ_Статусы.Заказ
	|				И ВТ_СписокРеализаций.ПериодСтатуса = ВТ_Статусы.Период
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_СписокРеализаций.Ссылка
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|	И ВТ_Статусы.Статус = 235
	//CeHbKA 27.05.2021 #3247 Дополнение от 26.01.2021
	|	И ЕСТЬNULL(СостоянияЗакрытияЗаказовСрезПоследних.ЗаказЗакрыт, ЛОЖЬ) = ЛОЖЬ";
	
КонецФункции

Функция ПолучитьТекстЗапросаПоОтклоненным() Экспорт
	//Задача № 3247
	
	//+Степанов Задача № 3837
	Если ДатаЗакрытия < '20200416000000' Тогда
		Возврат ПолучитьТекстЗапросаПоОтклоненным_старая()
	КонецЕсли;	
	//-Степанов Задача № 3837
	
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Реализации
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаЗакрытия, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ)
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатусыЗаказов.Заказ КАК Заказ,
	|	СтатусыЗаказов.Статус КАК Статус
	|ПОМЕСТИТЬ ВТ_Статусы
	|ИЗ
	|	РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|ГДЕ
	|	СтатусыЗаказов.Статус = 235
	|	И СтатусыЗаказов.Заказ В
	|			(ВЫБРАТЬ
	|				ВТ_Реализации.Ссылка
	|			ИЗ
	|				ВТ_Реализации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РейсЗаказы.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_ЗаказыВРейсах
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|ГДЕ
	|	РейсЗаказы.Ссылка.Проведен
	|	И РейсЗаказы.Ссылка.ДатаРейса = &ДатаЗакрытия
	|	И НЕ РейсЗаказы.УдаленИзРейса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Реализации.Ссылка КАК Ссылка,
	|	ВТ_Статусы.Статус КАК Статус,
	|	ВТ_ЗаказыВРейсах.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_СписокРеализацийПервичный
	|ИЗ
	|	ВТ_Реализации КАК ВТ_Реализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Статусы КАК ВТ_Статусы
	|		ПО ВТ_Реализации.Ссылка = ВТ_Статусы.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыВРейсах КАК ВТ_ЗаказыВРейсах
	|		ПО ВТ_Реализации.Ссылка = ВТ_ЗаказыВРейсах.Заказ
	|ГДЕ
	|	НЕ ВТ_Статусы.Статус ЕСТЬ NULL
	|	И ВТ_ЗаказыВРейсах.Заказ ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокРеализацийПервичный.Ссылка КАК Ссылка,
	|	ВТ_СписокРеализацийПервичный.Статус КАК Статус,
	|	ВТ_СписокРеализацийПервичный.Заказ КАК Заказ,
	|	ЗакрытыеЗаказы.Регистратор КАК ЗакрытиеЗаказов
	|ПОМЕСТИТЬ ВТ_СписокРализацийСЗакрытиями
	|ИЗ
	|	ВТ_СписокРеализацийПервичный КАК ВТ_СписокРеализацийПервичный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	|		ПО ВТ_СписокРеализацийПервичный.Ссылка = ЗакрытыеЗаказы.Реализация
	|			И (ЗакрытыеЗаказы.Регистратор ССЫЛКА Документ.ЗакрытиеЗаказов)
	|			И (ЗакрытыеЗаказы.Регистратор <> &ДокументЗакрытие)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокРализацийСЗакрытиями.Ссылка КАК Ссылка,
	|	ВТ_СписокРализацийСЗакрытиями.Статус КАК Статус,
	|	ВТ_СписокРализацийСЗакрытиями.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_СписокРеализаций
	|ИЗ
	|	ВТ_СписокРализацийСЗакрытиями КАК ВТ_СписокРализацийСЗакрытиями
	|ГДЕ
	|	ВТ_СписокРализацийСЗакрытиями.ЗакрытиеЗаказов ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|ГДЕ
	|	ДанныеЗаказаСамовывоза.Реализация В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|ГДЕ
	|	ДанныеЗаказаВодителя.Реализация В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка,
	|	ВозвратТоваровОтПокупателя.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Возвраты
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Перемещения
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеТоваров.Ссылка КАК Ссылка,
	|	СписаниеТоваров.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Списания
	|ИЗ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров
	|ГДЕ
	|	СписаниеТоваров.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОприходованиеТоваров.Ссылка КАК Ссылка,
	|	ОприходованиеТоваров.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Оприходования
	|ИЗ
	|	Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|ГДЕ
	|	ОприходованиеТоваров.Ссылка.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслуг.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Поступления
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеПараметрыЗаказа.Заказ КАК Заказ,
	|	ДополнительныеПараметрыЗаказа.Доставка КАК Доставка,
	|	ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие КАК ПредварительноеЗакрытие,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъемаЗаказа
	|ПОМЕСТИТЬ ВТ_ДопПараметрыЗаказа
	|ИЗ
	|	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|ГДЕ
	|	ДополнительныеПараметрыЗаказа.Заказ В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Доставка КАК Доставка,
	|	МАКСИМУМ(новаЗаданияРейсов.Рейс.Дата) КАК ДатаРейса
	|ПОМЕСТИТЬ ПоследниеРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|ГДЕ
	|	новаЗаданияРейсов.Рейс.РейсОтменен = ЛОЖЬ
	|	И новаЗаданияРейсов.Доставка В
	|			(ВЫБРАТЬ
	|				ВТ_ДопПараметрыЗаказа.Доставка
	|			ИЗ
	|				ВТ_ДопПараметрыЗаказа)
	|
	|СГРУППИРОВАТЬ ПО
	|	новаЗаданияРейсов.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	новаЗаданияРейсов.Рейс.Ссылка КАК Рейс,
	|	ПоследниеРейсы.Доставка.Ссылка КАК Доставка,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Транспорт,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка КАК Водитель,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка КАК Экспедитор
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРейсы КАК ПоследниеРейсы
	|		ПО новаЗаданияРейсов.Рейс.Дата = ПоследниеРейсы.ДатаРейса
	|			И новаЗаданияРейсов.Доставка.Ссылка = ПоследниеРейсы.Доставка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Реализация
	|ПОМЕСТИТЬ ВТ_ЗагрузкиСТСД
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды.Заказ В
	|			(ВЫБРАТЬ
	|				ВТ_Списокреализаций.Ссылка
	|			ИЗ
	|				ВТ_Списокреализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	0 КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВТ_Возвраты.Ссылка КАК Возврат,
	|	ВТ_Перемещения.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.ДоставкаЗавершена, ЛОЖЬ) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	ИСТИНА КАК Отклонить,
	|	ВТ_Списания.Ссылка КАК Списание,
	|	ВТ_Оприходования.Ссылка КАК Оприходование,
	|	ВТ_ДопПараметрыЗаказа.Доставка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ВТ_Поступления.Ссылка КАК Поступление,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.ДоставкаИзмененаНаСамовывоз, ЛОЖЬ) КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипыОплат,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СуммаБанковскойКомиссии, 0) КАК БанковскаяКомиссия,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СуммаКассовогоОбслуживания, 0) КАК КассовоеОбслуживание,
	//Асеев 13.11.2020 (Задача № 4341)>>>
	//|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СтоимостьДоставкиДоМКАД, 0) КАК СуммаДоставкиДоМКАД,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки, ЛОЖЬ) ТОГДА ВТДанныеМП.ДанныеМПВодителя.СтоимостьДоставки ИНАЧЕ ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СтоимостьДоставкиДоМКАД, 0) КОНЕЦ КАК СуммаДоставкиДоМКАД,
	//Асеев 13.11.2020 (Задача № 4341)<<<
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СтоимостьДоставкиЗаМКАД, 0) КАК СуммаДоставкиЗаМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ВТРейсы.Транспорт КАК Транспорт,
	|	ВТРейсы.Водитель КАК Водитель,
	|	ВТРейсы.Экспедитор КАК Экспедитор,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	ВТРейсы.Рейс.Ссылка КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза КАК ДанныеСамовывоза,
	|	0 КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ВТ_ДопПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ВЫБОР
	|		КОГДА ВТ_ДопПараметрыЗаказа.Доставка = ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.Типызаказов.Самовывоз)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка)
	|	КОНЕЦ КАК ТипЗаказа,
	|	ВТ_ДопПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ВТ_ДопПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.ДанныеМПВодителя.БрейкРасчетаПодъема.Ссылка КАК ПодъемныйБрейк,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	//Асеев 14.12.2020 (Задача № 4041)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК,
	//Асеев 14.12.2020 (Задача № 4041)<<<
	//Асеев 13.11.2020 (Задача № 4341)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки КАК РасчетнаяСтоимостьДоставки
	//Асеев 13.11.2020 (Задача № 4341)<<<
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Возвраты КАК ВТ_Возвраты
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Возвраты.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Перемещения КАК ВТ_Перемещения
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Перемещения.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопПараметрыЗаказа КАК ВТ_ДопПараметрыЗаказа
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних КАК СостоянияЗаказовСрезПоследних
	|			ПО ВТ_ДопПараметрыЗаказа.Доставка = СостоянияЗаказовСрезПоследних.Доставка
	|				И ВТ_ДопПараметрыЗаказа.Заказ = СостоянияЗаказовСрезПоследних.Заказ
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_ДопПараметрыЗаказа.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Списания КАК ВТ_Списания
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Списания.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Оприходования КАК ВТ_Оприходования
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Оприходования.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Поступления КАК ВТ_Поступления
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Поступления.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ), ) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРейсы КАК ВТРейсы
	|		ПО РеализацияТоваровУслуг.Номер = ВТРейсы.Доставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ), ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ), ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗагрузкиСТСД КАК ВТ_ЗагрузкиСТСД
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_ЗагрузкиСТСД.Реализация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	|				Заказ В
	|					(ВЫБРАТЬ
	|						ВТ_СписокРеализаций.Ссылка
	|					ИЗ
	|						ВТ_СписокРеализаций)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|		ПО (ПараметрыТарифаЗаказаСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)";
	
КонецФункции

Функция ПолучитьТекстЗапросаПоОтклоненным_старая() Экспорт
	//Задача № 3247
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Реализации
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаЗакрытия, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ)
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатусыЗаказов.Заказ КАК Заказ,
	|	СтатусыЗаказов.Статус КАК Статус
	|ПОМЕСТИТЬ ВТ_Статусы
	|ИЗ
	|	РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|ГДЕ
	|	СтатусыЗаказов.Статус = 235
	|	И СтатусыЗаказов.Заказ В
	|			(ВЫБРАТЬ
	|				ВТ_Реализации.Ссылка
	|			ИЗ
	|				ВТ_Реализации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РейсЗаказы.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_ЗаказыВРейсах
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|ГДЕ
	|	РейсЗаказы.Ссылка.Проведен
	|	И РейсЗаказы.Ссылка.ДатаРейса = &ДатаЗакрытия
	|	И НЕ РейсЗаказы.УдаленИзРейса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Реализации.Ссылка КАК Ссылка,
	|	ВТ_Статусы.Статус КАК Статус,
	|	ВТ_ЗаказыВРейсах.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_СписокРеализацийПервичный
	|ИЗ
	|	ВТ_Реализации КАК ВТ_Реализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Статусы КАК ВТ_Статусы
	|		ПО ВТ_Реализации.Ссылка = ВТ_Статусы.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыВРейсах КАК ВТ_ЗаказыВРейсах
	|		ПО ВТ_Реализации.Ссылка = ВТ_ЗаказыВРейсах.Заказ
	|ГДЕ
	|	НЕ ВТ_Статусы.Статус ЕСТЬ NULL
	|	И ВТ_ЗаказыВРейсах.Заказ ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокРеализацийПервичный.Ссылка КАК Ссылка,
	|	ВТ_СписокРеализацийПервичный.Статус КАК Статус,
	|	ВТ_СписокРеализацийПервичный.Заказ КАК Заказ,
	|	ЗакрытыеЗаказы.Регистратор КАК ЗакрытиеЗаказов
	|ПОМЕСТИТЬ ВТ_СписокРализацийСЗакрытиями
	|ИЗ
	|	ВТ_СписокРеализацийПервичный КАК ВТ_СписокРеализацийПервичный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	|		ПО ВТ_СписокРеализацийПервичный.Ссылка = ЗакрытыеЗаказы.Реализация
	|			И (ЗакрытыеЗаказы.Регистратор ССЫЛКА Документ.ЗакрытиеЗаказов)
	|			И (ЗакрытыеЗаказы.Регистратор <> &ДокументЗакрытие)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокРализацийСЗакрытиями.Ссылка КАК Ссылка,
	|	ВТ_СписокРализацийСЗакрытиями.Статус КАК Статус,
	|	ВТ_СписокРализацийСЗакрытиями.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_СписокРеализаций
	|ИЗ
	|	ВТ_СписокРализацийСЗакрытиями КАК ВТ_СписокРализацийСЗакрытиями
	|ГДЕ
	|	ВТ_СписокРализацийСЗакрытиями.ЗакрытиеЗаказов ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|ГДЕ
	|	ДанныеЗаказаСамовывоза.Реализация В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|ГДЕ
	|	ДанныеЗаказаВодителя.Реализация В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка,
	|	ВозвратТоваровОтПокупателя.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Возвраты
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Перемещения
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеТоваров.Ссылка КАК Ссылка,
	|	СписаниеТоваров.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Списания
	|ИЗ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров
	|ГДЕ
	|	СписаниеТоваров.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОприходованиеТоваров.Ссылка КАК Ссылка,
	|	ОприходованиеТоваров.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Оприходования
	|ИЗ
	|	Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|ГДЕ
	|	ОприходованиеТоваров.Ссылка.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслуг.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Поступления
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка.Номер В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка.Номер
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеПараметрыЗаказа.Заказ КАК Заказ,
	|	ДополнительныеПараметрыЗаказа.Доставка КАК Доставка,
	|	ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие КАК ПредварительноеЗакрытие,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъемаЗаказа
	|ПОМЕСТИТЬ ВТ_ДопПараметрыЗаказа
	|ИЗ
	|	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|ГДЕ
	|	ДополнительныеПараметрыЗаказа.Заказ В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	новаЗаданияРейсов.Доставка КАК Доставка,
	|	МАКСИМУМ(новаЗаданияРейсов.Рейс.Дата) КАК ДатаРейса
	|ПОМЕСТИТЬ ПоследниеРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|ГДЕ
	|	новаЗаданияРейсов.Рейс.РейсОтменен = ЛОЖЬ
	|	И новаЗаданияРейсов.Доставка В
	|			(ВЫБРАТЬ
	|				ВТ_ДопПараметрыЗаказа.Доставка
	|			ИЗ
	|				ВТ_ДопПараметрыЗаказа)
	|
	|СГРУППИРОВАТЬ ПО
	|	новаЗаданияРейсов.Доставка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	новаЗаданияРейсов.Рейс.Ссылка КАК Рейс,
	|	ПоследниеРейсы.Доставка.Ссылка КАК Доставка,
	|	новаЗаданияРейсов.Рейс.Транспорт.Ссылка КАК Транспорт,
	|	новаЗаданияРейсов.Рейс.Водитель.Ссылка КАК Водитель,
	|	новаЗаданияРейсов.Рейс.Экспедитор.Ссылка КАК Экспедитор
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРейсы КАК ПоследниеРейсы
	|		ПО новаЗаданияРейсов.Рейс.Дата = ПоследниеРейсы.ДатаРейса
	|			И новаЗаданияРейсов.Доставка.Ссылка = ПоследниеРейсы.Доставка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Реализация
	|ПОМЕСТИТЬ ВТ_ЗагрузкиСТСД
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды.Заказ В
	|			(ВЫБРАТЬ
	|				ВТ_Списокреализаций.Ссылка
	|			ИЗ
	|				ВТ_Списокреализаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	0 КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВТ_Возвраты.Ссылка КАК Возврат,
	|	ВТ_Перемещения.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.ДоставкаЗавершена, ЛОЖЬ) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	ИСТИНА КАК Отклонить,
	|	ВТ_Списания.Ссылка КАК Списание,
	|	ВТ_Оприходования.Ссылка КАК Оприходование,
	|	ВТ_ДопПараметрыЗаказа.Доставка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ВТ_Поступления.Ссылка КАК Поступление,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.ДоставкаИзмененаНаСамовывоз, ЛОЖЬ) КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипыОплат,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СуммаБанковскойКомиссии, 0) КАК БанковскаяКомиссия,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СуммаКассовогоОбслуживания, 0) КАК КассовоеОбслуживание,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СтоимостьДоставкиДоМКАД, 0) КАК СуммаДоставкиДоМКАД,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.Доставка.СтоимостьДоставкиЗаМКАД, 0) КАК СуммаДоставкиЗаМКАД,
	|	КатегорииДоставки2014.Ссылка КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	ВТРейсы.Транспорт КАК Транспорт,
	|	ВТРейсы.Водитель КАК Водитель,
	|	ВТРейсы.Экспедитор КАК Экспедитор,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	ВТРейсы.Рейс.Ссылка КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	РеализацияТоваровУслуг.РасчетныйБрейк КАК РасчетныйБрейк,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
	|	РеализацияТоваровУслуг.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза КАК ДанныеСамовывоза,
	|	0 КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ВТ_ДопПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ВТ_ДопПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ВЫБОР
	|		КОГДА ВТ_ДопПараметрыЗаказа.Доставка = ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.Типызаказов.Самовывоз)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка)
	|	КОНЕЦ КАК ТипЗаказа,
	|	ВТ_ДопПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ВТ_ДопПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.ДанныеМПВодителя.БрейкРасчетаПодъема.Ссылка КАК ПодъемныйБрейк,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	|	ВТДанныеМП.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Возвраты КАК ВТ_Возвраты
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Возвраты.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Перемещения КАК ВТ_Перемещения
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Перемещения.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопПараметрыЗаказа КАК ВТ_ДопПараметрыЗаказа
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних КАК СостоянияЗаказовСрезПоследних
	|			ПО ВТ_ДопПараметрыЗаказа.Доставка = СостоянияЗаказовСрезПоследних.Доставка
	|				И ВТ_ДопПараметрыЗаказа.Заказ = СостоянияЗаказовСрезПоследних.Заказ
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_ДопПараметрыЗаказа.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Списания КАК ВТ_Списания
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Списания.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Оприходования КАК ВТ_Оприходования
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Оприходования.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Поступления КАК ВТ_Поступления
	|		ПО РеализацияТоваровУслуг.Номер = ВТ_Поступления.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ), ) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРейсы КАК ВТРейсы
	|		ПО РеализацияТоваровУслуг.Номер = ВТРейсы.Доставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ), ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ), ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗагрузкиСТСД КАК ВТ_ЗагрузкиСТСД
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_ЗагрузкиСТСД.Реализация
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_СписокРеализаций.Ссылка
	|			ИЗ
	|				ВТ_СписокРеализаций)";
	
КонецФункции

//+Степанов Задача № 3945 Чтение данных из РС СостоянияЗакрытияЗаказов 
Функция ПолучитьБазовыйТекстЗапросаПоСамовывозам_РС_Закрытий() Экспорт
	
	//+Степанов Задача № 3837
	Если ДатаЗакрытия < '20200416000000' Тогда
		Возврат ПолучитьБазовыйТекстЗапросаПоСамовывозам_старая()
	КонецЕсли;	
	//-Степанов Задача № 3837
	
	// По Задача № 2999 добавлен пустой РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|ГДЕ
	|	ДанныеЗаказаСамовывоза.Дата > &ДатаНач
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслугУслуги.Ссылка КАК Док,
	|	СУММА(РеализацияТоваровУслугУслуги.Сумма) КАК СтоимостьДоставкиДоМКАД
	|ПОМЕСТИТЬ ВТСуммыДоставок
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗакрытияЗаказов.СрезПоследних КАК СостоянияЗакрытияЗаказовСрезПоследних
	|		ПО РеализацияТоваровУслугУслуги.Ссылка = СостоянияЗакрытияЗаказовСрезПоследних.Заказ
	|ГДЕ
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|	РеализацияТоваровУслугУслуги.Ссылка.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|	РеализацияТоваровУслугУслуги.Ссылка.Дата >= &ДатаНач
	|	И РеализацияТоваровУслугУслуги.Ссылка.Дата <= &ДатаКон
	|	И ЕСТЬNULL(СостоянияЗакрытияЗаказовСрезПоследних.ЗаказЗакрыт, ЛОЖЬ) = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугУслуги.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	ВТСуммыДоставок.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация КАК ЮрЛицо,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза КАК ДанныеСамовывоза,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Самовывоз) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	ЗНАЧЕНИЕ(Документ.Рейс.ПустаяСсылка) КАК РейсДокумент,
	//Асеев 20.05.2021 (Задача № 4569)>>>
	|	ДополнительныеПараметрыЗаказа.ТарификацияПоОбъемномуВесу КАК ТарификацияПоОбъемномуВесу,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйОбъемныйВес КАК ТарифицируемыйОбъемныйВес
	//Асеев 20.05.2021 (Задача № 4569)<<<
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&наДату, ) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыДоставок КАК ВТСуммыДоставок
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТСуммыДоставок.Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&наДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&наДату, ) КАК СостоянияЗаказовСрезПоследних
	|		ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&наДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|				Заказ.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|					Заказ.ТерминалДоставки В (&ТерминалыДоставки)
	|					И (Заказ.Дата МЕЖДУ &ДатаНач И &ДатаКон)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|		ПО (ПараметрыТарифаЗаказаСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗакрытияЗаказов.СрезПоследних(, ) КАК СостоянияЗакрытияЗаказовСрезПоследних
	|		ПО (СостоянияЗакрытияЗаказовСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|	РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|	И новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И ЕСТЬNULL(СостоянияЗакрытияЗаказовСрезПоследних.ЗаказЗакрыт, ЛОЖЬ) = ЛОЖЬ" + 
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата";
КонецФункции

//+Степанов Задача № 3837 добавлено чтение реквизитов из РС параметров тарифов
Функция ПолучитьБазовыйТекстЗапросаПоСамовывозам() Экспорт
	
	//+Степанов Задача № 3837
	Если ДатаЗакрытия < '20200416000000' Тогда
		Возврат ПолучитьБазовыйТекстЗапросаПоСамовывозам_старая()
	КонецЕсли;	
	//-Степанов Задача № 3837
	
	// По Задача № 2999 добавлен пустой РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|ГДЕ
	|	ДанныеЗаказаСамовывоза.Дата > &ДатаНач
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслугУслуги.Ссылка.Ссылка КАК Док,
	|	СУММА(РеализацияТоваровУслугУслуги.Сумма) КАК СтоимостьДоставкиДоМКАД
	|ПОМЕСТИТЬ ВТСуммыДоставок
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|ГДЕ
	|	НЕ РеализацияТоваровУслугУслуги.Ссылка.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслугУслуги.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И РеализацияТоваровУслугУслуги.Ссылка.Дата >= &ДатаНач
	|	И РеализацияТоваровУслугУслуги.Ссылка.Дата <= &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугУслуги.Ссылка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	ВТСуммыДоставок.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза.Ссылка КАК ДанныеСамовывоза,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Самовывоз) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	ЗНАЧЕНИЕ(Документ.Рейс.ПустаяСсылка) КАК РейсДокумент
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&наДату, ) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыДоставок КАК ВТСуммыДоставок
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТСуммыДоставок.Док.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&наДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&наДату, ) КАК СостоянияЗаказовСрезПоследних
	|		ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&наДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|				КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	|				НЕ Заказ.СтатусИнтернетМагазина В (0, 3, 4)
	|					И Заказ.ПометкаУдаления = ЛОЖЬ
	|					И Заказ.ТерминалДоставки В (&ТерминалыДоставки)
	|					И (Заказ.Дата МЕЖДУ &ДатаНач И &ДатаКон)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|		ПО (ПараметрыТарифаЗаказаСрезПоследних.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|	И новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|	И РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон" + 
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСуммыДоставок
	|
	|;";
КонецФункции

Функция ПолучитьБазовыйТекстЗапросаПоСамовывозам_старая() Экспорт
	// По Задача № 2999 добавлен пустой РейсДокумент
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаСамовывоза.Ссылка) КАК ДанныеСамовывоза,
	|	ДанныеЗаказаСамовывоза.Реализация КАК Реализация
	|ПОМЕСТИТЬ ВТДанныеСамовывоза
	|ИЗ
	|	Документ.ДанныеЗаказаСамовывоза КАК ДанныеЗаказаСамовывоза
	|ГДЕ
	|	ДанныеЗаказаСамовывоза.Дата > &ДатаНач
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаСамовывоза.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслугУслуги.Ссылка.Ссылка КАК Док,
	|	СУММА(РеализацияТоваровУслугУслуги.Сумма) КАК СтоимостьДоставкиДоМКАД
	|ПОМЕСТИТЬ ВТСуммыДоставок
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|ГДЕ
	|	НЕ РеализацияТоваровУслугУслуги.Ссылка.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслугУслуги.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И РеализацияТоваровУслугУслуги.Ссылка.Дата >= &ДатаНач
	|	И РеализацияТоваровУслугУслуги.Ссылка.Дата <= &ДатаКон
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугУслуги.Ссылка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	РеализацияТоваровУслуг.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	ВТСуммыДоставок.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
	|	КатегорииДоставки2014.Ссылка КАК КатегорияДоставки,
	|	РасчетКассовогоОбслуживанияСрезПоследних.ВариантРасчета КАК ВариантРасчетаКО,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Организация.Ссылка КАК ЮрЛицо,
	|	РеализацияТоваровУслуг.РасчетныйБрейк КАК РасчетныйБрейк,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
	|	РеализацияТоваровУслуг.ЗонаТарификации КАК ЗонаТарификации,
	|	ВТДанныеСамовывоза.ДанныеСамовывоза.Ссылка КАК ДанныеСамовывоза,
	|	РеализацияТоваровУслуг.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Самовывоз) КАК ТипЗаказа,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	Значение(Документ.Рейс.ПустаяСсылка) Как РейсДокумент
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|		ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|		ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетКассовогоОбслуживания.СрезПоследних(&наДату, ) КАК РасчетКассовогоОбслуживанияСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = РасчетКассовогоОбслуживанияСрезПоследних.Контрагент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСуммыДоставок КАК ВТСуммыДоставок
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТСуммыДоставок.Док.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(&наДату, ) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара.Ссылка = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент.Ссылка
	|			И РеализацияТоваровУслуг.ТипОплаты = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты.Код
	|			И (ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипДоставки.Ссылка = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСамовывоза КАК ВТДанныеСамовывоза
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеСамовывоза.Реализация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&наДату, ) КАК СостоянияЗаказовСрезПоследних
	|		ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&наДату, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|		ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|	И новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|	И РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон" + 
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслуг.Дата 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСуммыДоставок
	|
	|;";
КонецФункции

//+Степанов Задача № 3945 Чтение данных из РС СостоянияЗакрытияЗаказов 
Функция ПолучитьБазовыйТекстЗапросаПоРейсу_РС_Закрытий() Экспорт
	// 04.04.2019 Дробница
	// В текст результирующего запроса (с объединением)
	//  добавлено условие НЕ РейсЗаказы.УдаленИзРейса
	//+Степанов Задача № 3837
	Если ДатаЗакрытия < '20200416000000' Тогда
		Возврат ПолучитьБазовыйТекстЗапросаПоРейсу_старая()
	КонецЕсли;	
	//-Степанов Задача № 3837
	
	Возврат
	"ВЫБРАТЬ
	|	РейсДок.Ссылка КАК Рейс,
	|	новаОтчетВодителя.Ссылка КАК ОтчетВодителя,
	|	ПриходДСПоОтчетуВодителяДоставки.Доставка КАК Заказ,
	|	ПриходДСПоОтчетуВодителяДоставки.ТипОплаты КАК ТипОплаты,
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка КАК ПриходДС
	|ПОМЕСТИТЬ ВТ_ПриходДС
	|ИЗ
	|	Документ.Рейс КАК РейсДок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|			ПО новаОтчетВодителя.Ссылка = ПриходДСПоОтчетуВодителяДоставки.Ссылка.ОтчетВодителя
	|		ПО РейсДок.РейсМестнойДоставки = новаОтчетВодителя.Рейс
	|			И (РейсДок.Ссылка = &рейс)
	|ГДЕ
	|	РейсДок.Ссылка = &Рейс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Забор КАК Забор
	|ПОМЕСТИТЬ ВТ_1_Забор
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ПО (РейсЗаказы.Заказ = ДанныеЗаказаВодителя.Забор)
	|			И (РейсЗаказы.Ссылка = &Рейс)
	|			И (РейсЗаказы.УдаленИзРейса = ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Забор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	|	РейсЗаказы.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_1
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ПО (РейсЗаказы.Заказ = ДанныеЗаказаВодителя.Реализация)
	|			И (РейсЗаказы.Ссылка = &Рейс)
	|			И (РейсЗаказы.УдаленИзРейса = ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация,
	|	РейсЗаказы.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_1.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	ВТ_1.Реализация КАК Реализация,
	|	ВТ_1.НомерСтроки КАК НомерСтроки,
	|	ВТ_1.ДанныеМПВодителя.ТипОплатыЧек КАК ТипОплатыЧек,
	|	ВТ_1.ДанныеМПВодителя.ВидПодъема КАК ВидПодъема,
	|	ВТ_1.ДанныеМПВодителя.Этаж КАК Этаж,
	|	ВТ_1.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокНаЭтаж,
	|	ВТ_1.ДанныеМПВодителя.РассчитаннаяСтоимостьПодъема КАК РассчитаннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ВнесеннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесРасчетаПодъема,
	|	ВТ_1.ДанныеМПВодителя.БрейкРасчетаПодъема КАК БрейкРасчетаПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъемаВыгруженный КАК ВесРасчетаПодъемаВыгруженный,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК,
	|	ДанныеЗаказаВодителя.КоличествоSKUПримерки КАК КоличествоSKUПримерки
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	ВТ_1 КАК ВТ_1
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ПО ВТ_1.ДанныеМПВодителя = ДанныеЗаказаВодителя.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_1.ДанныеМПВодителя,
	|	ВТ_1.Реализация,
	|	ВТ_1.НомерСтроки,
	|	ВТ_1.ДанныеМПВодителя.ТипОплатыЧек,
	|	ВТ_1.ДанныеМПВодителя.ВидПодъема,
	|	ВТ_1.ДанныеМПВодителя.Этаж,
	|	ВТ_1.ДанныеМПВодителя.КоличествоХодокНаЭтаж,
	|	ВТ_1.ДанныеМПВодителя.РассчитаннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъема,
	|	ВТ_1.ДанныеМПВодителя.БрейкРасчетаПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъемаВыгруженный,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК,
	|	ДанныеЗаказаВодителя.КоличествоSKUПримерки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_1_Забор.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	ВТ_1_Забор.ДанныеМПВодителя.Забор КАК Забор,
	|	ВТ_1_Забор.ДанныеМПВодителя.КоличествоПалет КАК КоличествоПалет,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ПОМЕСТИТЬ ВТ_МПВодителя
	|ИЗ
	|	ВТ_1_Забор КАК ВТ_1_Забор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ПО ВТ_1_Забор.ДанныеМПВодителя = ДанныеЗаказаВодителя.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_1_Забор.ДанныеМПВодителя.Забор,
	|	ВТ_1_Забор.ДанныеМПВодителя.КоличествоПалет,
	|	ВТ_1_Забор.ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.ВладелецТовара КАК Контрагент
	|ПОМЕСТИТЬ ВТ_Контрагенты
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|	ПО РейсЗаказы.Ссылка = &Рейс
	|		И НЕ РейсЗаказы.УдаленИзРейса
	|		И РейсЗаказы.Заказ = РеализацияТоваровУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыКонтрагентовСрезПоследних.Контрагент КАК Контрагент,
	|	ПараметрыКонтрагентовСрезПоследних.ТарифПримерки КАК ТарифПримерки
	|ПОМЕСТИТЬ ВТ_ПараметрыКонтрагентов
	|ИЗ
	|	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(
	|			КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	|			Контрагент В
	|				(ВЫБРАТЬ
	|					ВТ_Контрагенты.Контрагент КАК Контрагент
	|				ИЗ
	|					ВТ_Контрагенты КАК ВТ_Контрагенты)) КАК ПараметрыКонтрагентовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор,
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель.ФизЛицо КАК ВодительФизЛицо,
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор.ФизЛицо КАК ЭкспедиторФизЛицо
	|ПОМЕСТИТЬ ВТ_Экипаж
	|ИЗ
	|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ПривязкаМашинКРейсамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ФизЛицо КАК ФизЛицо,
	|	МАКСИМУМ(ВложенныйЗапрос.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ПериодыПриемаФизЛиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизации.ФизЛицо КАК ФизЛицо,
	|		РаботникиОрганизации.Период КАК Период
	|	ИЗ
	|		ВТ_Экипаж КАК ВТ_Экипаж
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|			ПО (РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ))
	|				И (ВТ_Экипаж.ВодительФизЛицо = РаботникиОрганизации.ФизЛицо)
	|				И (РаботникиОрганизации.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РаботникиОрганизации.ФизЛицо,
	|		РаботникиОрганизации.Период
	|	ИЗ
	|		ВТ_Экипаж КАК ВТ_Экипаж
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|			ПО (РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ))
	|				И ВТ_Экипаж.ЭкспедиторФизЛицо = РаботникиОрганизации.ФизЛицо
	|				И (РаботникиОрганизации.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию))) КАК ВложенныйЗапрос
	|
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.ФизЛицо	
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТ_Экипаж.Экспедитор = ЗНАЧЕНИЕ(Справочник.новаЭкспедиторы.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.зпСоставЭкипажа.ВодительБезЭкспедитора)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.зпСоставЭкипажа.ВодительСЭкспедитором)
	|	КОНЕЦ КАК СоставЭкипажа,
	|   РаботникиОрганизации_Водитель.ОсновноеНачисление КАК ОсновноеНачислениеВодитель,
	|   РаботникиОрганизации_Экспедитор.ОсновноеНачисление КАК ОсновноеНачислениеЭкспедитор
	|ПОМЕСТИТЬ ВТ_ОсновныеНачисления
	|ИЗ
	|	ВТ_Экипаж КАК ВТ_Экипаж
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыПриемаФизЛиц КАК ВТ_ПериодыПриемаФизЛиц_Водитель
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации_Водитель
	|		ПО ВТ_ПериодыПриемаФизЛиц_Водитель.Период = РаботникиОрганизации_Водитель.Период
	|			И ВТ_ПериодыПриемаФизЛиц_Водитель.ФизЛицо = РаботникиОрганизации_Водитель.ФизЛицо
	|			И РаботникиОрганизации_Водитель.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию)
	|	ПО ВТ_Экипаж.ВодительФизЛицо = ВТ_ПериодыПриемаФизЛиц_Водитель.ФизЛицо
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыПриемаФизЛиц КАК ВТ_ПериодыПриемаФизЛиц_Экспедитор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации_Экспедитор
	|		ПО ВТ_ПериодыПриемаФизЛиц_Экспедитор.Период = РаботникиОрганизации_Экспедитор.Период
	|			И ВТ_ПериодыПриемаФизЛиц_Экспедитор.ФизЛицо = РаботникиОрганизации_Экспедитор.ФизЛицо
	|			И РаботникиОрганизации_Экспедитор.Состояние = ЗНАЧЕНИЕ(Перечисление.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию)
	|	ПО ВТ_Экипаж.ЭкспедиторФизЛицо = ВТ_ПериодыПриемаФизЛиц_Экспедитор.ФизЛицо
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОсновныеНачисления.ОсновноеНачислениеВодитель КАК ОсновноеНачислениеВодитель,
	|	ВТ_ОсновныеНачисления.ОсновноеНачислениеЭкспедитор КАК ОсновноеНачислениеЭкспедитор,
	|	МАКСИМУМ(зпСтавкиОплатыПоНачислениям_Водитель.ПроцентОплатыПодъема) КАК ПроцентОплатыПодъемаЗаказаВодитель,
	|	МАКСИМУМ(зпСтавкиОплатыПоНачислениям_Экспедитор.ПроцентОплатыПодъема) КАК ПроцентОплатыПодъемаЗаказаЭкспедитор
	|ПОМЕСТИТЬ ВТ_СтавкиОплаты
	|ИЗ
	|	ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям_Водитель
	|	ПО зпСтавкиОплатыПоНачислениям_Водитель.СхемаРасчетаЗП = &СхемаРасчетаЗП
	|		И зпСтавкиОплатыПоНачислениям_Водитель.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|		И ВТ_ОсновныеНачисления.ОсновноеНачислениеВодитель = зпСтавкиОплатыПоНачислениям_Водитель.ОсновноеНачисление
	|		И зпСтавкиОплатыПоНачислениям_Водитель.Начисление = ЗНАЧЕНИЕ(Справочник.зпНачисления.ОплатаПодъемаНаЭтажПриДоставкеЗаказа)
	|		И ВТ_ОсновныеНачисления.СоставЭкипажа = зпСтавкиОплатыПоНачислениям_Водитель.СоставЭкипажа
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям_Экспедитор
	|	ПО зпСтавкиОплатыПоНачислениям_Экспедитор.СхемаРасчетаЗП = &СхемаРасчетаЗП
	|		И зпСтавкиОплатыПоНачислениям_Экспедитор.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|		И ВТ_ОсновныеНачисления.ОсновноеНачислениеЭкспедитор = зпСтавкиОплатыПоНачислениям_Экспедитор.ОсновноеНачисление
	|		И зпСтавкиОплатыПоНачислениям_Экспедитор.Начисление = ЗНАЧЕНИЕ(Справочник.зпНачисления.ОплатаПодъемаНаЭтажПриДоставкеЗаказа)
	|		И ВТ_ОсновныеНачисления.СоставЭкипажа = зпСтавкиОплатыПоНачислениям_Экспедитор.СоставЭкипажа
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОсновныеНачисления.ОсновноеНачислениеВодитель,
	|	ВТ_ОсновныеНачисления.ОсновноеНачислениеЭкспедитор
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара,
	|	ЕСТЬNULL(ВТ_ПриходДС.ТипОплаты, ТипыОплат.Ссылка) КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	//Асеев 13.11.2020 (Задача № 4341)>>>
	//|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КОНЕЦ КАК СуммаДоставкиДоМКАД,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки, ЛОЖЬ) ТОГДА ВТДанныеМП.ДанныеМПВодителя.СтоимостьДоставки ИНАЧЕ новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КОНЕЦ КАК СуммаДоставкиДоМКАД,
	//Асеев 13.11.2020 (Задача № 4341)<<<
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	ВТ_Экипаж.Транспорт КАК Транспорт,
	|	ВТ_Экипаж.Водитель КАК Водитель,
	|	ВТ_Экипаж.Экспедитор КАК Экспедитор,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	РейсЗаказы.Ссылка.РейсМестнойДоставки КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВЫБОР
	|		КОГДА Накладная003Заказы.Вес ЕСТЬ NULL
	|				ИЛИ Накладная003Заказы.Вес = 0
	|			ТОГДА РеализацияТоваровУслуг.ОбщийВес
	|		ИНАЧЕ Накладная003Заказы.Вес
	|	КОНЕЦ КАК ВесЗаказа,
	|	ВТ_ПриходДС.ПриходДС КАК ДокументОтчет,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ВТДанныеМП.ВидПодъема КАК ВидПодъемаНаЭтаж,
	|	ВТДанныеМП.Этаж КАК Этаж,
	|	NULL КАК ОбъёмЗабора,
	|	NULL КАК ОбъемЗаказовВЗаборе,
	|	NULL КАК ОбъемныйБрейк,
	|	NULL КАК КоличествоПалет,
	|	NULL КАК ОбъемВозвратныхЗаказовВЗаборе,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка) КАК ТипЗаказа,
	|	РейсЗаказы.НомерСтроки КАК НомерСтроки,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.БрейкРасчетаПодъема КАК ПодъемныйБрейк,
	|	ВТДанныеМП.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	РейсЗаказы.Ссылка КАК РейсДокумент,
	|	ВТДанныеМП.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК,
	//Асеев 13.11.2020 (Задача № 4341)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки КАК РасчетнаяСтоимостьДоставки,
	//Асеев 13.11.2020 (Задача № 4341)<<<
	//Асеев 20.05.2021 (Задача № 4569)>>>
	|	ДополнительныеПараметрыЗаказа.ТарификацияПоОбъемномуВесу КАК ТарификацияПоОбъемномуВесу,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйОбъемныйВес КАК ТарифицируемыйОбъемныйВес,
	//Асеев 20.05.2021 (Задача № 4569)<<<
	//Асеев 31.03.2022 (Задача № 4771)>>>
	|	ВТ_ПараметрыКонтрагентов.ТарифПримерки КАК ТарифПримерки,
	|	ВТДанныеМП.КоличествоSKUПримерки КАК КоличествоSKUПримерки,
	//Асеев 31.03.2022 (Задача № 4771)<<<
	//Асеев 24.03.2023 (Задача № 5021)>>>
	|	ВТ_СтавкиОплаты.ОсновноеНачислениеВодитель КАК ОсновноеНачислениеВодитель,
	|	ВТ_СтавкиОплаты.ОсновноеНачислениеЭкспедитор КАК ОсновноеНачислениеЭкспедитор,
	|	ВТ_СтавкиОплаты.ПроцентОплатыПодъемаЗаказаВодитель КАК ПроцентОплатыПодъемаЗаказаВодитель,
	|	ВТ_СтавкиОплаты.ПроцентОплатыПодъемаЗаказаЭкспедитор КАК ПроцентОплатыПодъемаЗаказаЭкспедитор
	//Асеев 24.03.2023 (Задача № 5021)<<<
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//Асеев 31.03.2022 (Задача № 4771)>>>
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыКонтрагентов КАК ВТ_ПараметрыКонтрагентов
	|			ПО РеализацияТоваровУслуг.ВладелецТовара = ВТ_ПараметрыКонтрагентов.Контрагент
	//Асеев 31.03.2022 (Задача № 4771)<<<
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|			ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|			ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|			ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Накладная003.Заказы КАК Накладная003Заказы
	|			ПО РеализацияТоваровУслуг.Ссылка = Накладная003Заказы.Заказ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|			ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&НаДатуСтатусы, ) КАК СостоянияЗаказовСрезПоследних
	|			ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ
	|				И (СостоянияЗаказовСрезПоследних.Доставка <> ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|			ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&НаДатуСтатусы, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|			ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриходДС КАК ВТ_ПриходДС
	|			ПО РеализацияТоваровУслуг.Ссылка = ВТ_ПриходДС.Заказ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|					КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|					Заказ.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|						Заказ.ТерминалДоставки В (&ТерминалыДоставки)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|			ПО РеализацияТоваровУслуг.Ссылка = ПараметрыТарифаЗаказаСрезПоследних.Заказ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗакрытияЗаказов.СрезПоследних(, ) КАК СостоянияЗакрытияЗаказовСрезПоследних
	|			ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗакрытияЗаказовСрезПоследних.Заказ
	|		ПО РейсЗаказы.Ссылка = &Рейс
	|			И РейсЗаказы.Заказ = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Экипаж КАК ВТ_Экипаж
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиОплаты КАК ВТ_СтавкиОплаты
	|		ПО (ИСТИНА)
	|ГДЕ
	//Асеев 19.04.2021 (Задача № 3945)>>>
	//|	РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	//Асеев 19.04.2021 (Задача № 3945)<<<
	|	РейсЗаказы.Ссылка = &Рейс
	|	И НЕ РейсЗаказы.УдаленИзРейса
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|	И НЕ новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И ЕСТЬNULL(СостоянияЗакрытияЗаказовСрезПоследних.ЗаказЗакрыт, ЛОЖЬ) = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаборТовара.Ссылка,
	|	ЗаборТовара.СтатусИнтернетМагазина,
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа,
	|	NULL,
	|	ЗаборТовара.СуммаДокумента,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД),
	|	ЗаборТовара.КомментарийСД,
	|	ЗаборТовара.КомментарийСД,
	|	NULL,
	|	NULL,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СостоянияЗаказовРасширенныйСрезПоследних.РезультатДоставки,
	|	СостоянияЗаказовРасширенныйСрезПоследних.ПричинаНеВыполнения,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.Контрагент,
	|	NULL,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.СтоимостьДоставки,
	|	NULL,
	|	ЗаборТовара.КатегорияДоставки,
	|	ВТ_Экипаж.Транспорт,
	|	ВТ_Экипаж.Водитель,
	|	ВТ_Экипаж.Экспедитор,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ВТ_МПВодителя.ДанныеМПВодителя,
	|	NULL,
	|	ЗаборТовара.ТарифнаяСетка.ТипТарифа,
	|	NULL,
	|	ЗаборТовара.ТарифнаяСетка,
	|	ЗаборТовара.ЗонаТарификации,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.ТерминалПриемки,
	|	ЗаборТовара.ТерминалПриемки,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.ОбъемЗабора,
	|	ЗаборТовара.ОбъемЗаказов,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.ОбъемныйБрейк, новаОтчетВодителяЗаборы.ОбъемныйБрейкПоДаннымЭкипажа),
	|	ВТ_МПВодителя.КоличествоПалет,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Забор),
	|	РейсЗаказы.НомерСтроки,
	|	0,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	"""",
	|	РейсЗаказы.Ссылка,
	|	ВТ_МПВодителя.СтатусУстановленБезКИК,
	//Асеев 13.11.2020 (Задача № 4341)>>>
	|	NULL,
	//Асеев 13.11.2020 (Задача № 4341)<<<
	//Асеев 20.05.2021 (Задача № 4569)>>>
	|	NULL,
	|	NULL,
	//Асеев 20.05.2021 (Задача № 4569)<<<
	//Асеев 31.03.2022 (Задача № 4771)>>>
	|	NULL,
	|	NULL,
	//Асеев 31.03.2022 (Задача № 4771)<<<
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя.Заборы КАК новаОтчетВодителяЗаборы
	|			ПО (новаОтчетВодителяЗаборы.Забор = ЗаборТовара.Ссылка)
	|				И (новаОтчетВодителяЗаборы.Ссылка.Проведен)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МПВодителя КАК ВТ_МПВодителя
	|			ПО ЗаборТовара.Ссылка = ВТ_МПВодителя.Забор
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказовРасширенный.СрезПоследних(&НаДатуСтатусы, ) КАК СостоянияЗаказовРасширенныйСрезПоследних
	|			ПО ЗаборТовара.Ссылка = СостоянияЗаказовРасширенныйСрезПоследних.Заказ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РассчитанныеАдминкойУслугиСД.СрезПоследних(&НаДатуСтатусы, ) КАК РассчитанныеАдминкойУслугиСДСрезПоследних
	|			ПО ЗаборТовара.Ссылка = РассчитанныеАдминкойУслугиСДСрезПоследних.Заказ
	|		ПО РейсЗаказы.Ссылка = &Рейс
	|			И РейсЗаказы.Заказ = ЗаборТовара.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Экипаж КАК ВТ_Экипаж
	|		ПО (ИСТИНА)
	|ГДЕ
	|	РейсЗаказы.Ссылка = &Рейс
	|	И НЕ РейсЗаказы.УдаленИзРейса
	|	И НЕ ЗаборТовара.СтатусИнтернетМагазина В (0, 3, 4)
	|	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	|	И ЗаборТовара.ТерминалПриемки В(&ТерминалыДоставки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаборТовара.Ссылка,
	|	ЗаборТовара.СтатусИнтернетМагазина,
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа,
	|	ЗаборТовара.СуммаДокумента,
	|	ЗаборТовара.КомментарийСД,
	|	СостоянияЗаказовРасширенныйСрезПоследних.РезультатДоставки,
	|	СостоянияЗаказовРасширенныйСрезПоследних.ПричинаНеВыполнения,
	|	ЗаборТовара.Контрагент,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	|	ЗаборТовара.СтоимостьДоставки,
	|	ЗаборТовара.КатегорияДоставки,
	|	ВТ_МПВодителя.ДанныеМПВодителя,
	|	ЗаборТовара.ТарифнаяСетка.ТипТарифа,
	|	ЗаборТовара.ТарифнаяСетка,
	|	ЗаборТовара.ЗонаТарификации,
	|	ЗаборТовара.ТерминалПриемки,
	|	ЗаборТовара.ОбъемЗабора,
	|	ЗаборТовара.ОбъемЗаказов,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов,
	|	РейсЗаказы.НомерСтроки,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД),
	|	ВТ_Экипаж.Транспорт,
	|	ВТ_Экипаж.Водитель,
	|	ВТ_Экипаж.Экспедитор,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.ОбъемныйБрейк, новаОтчетВодителяЗаборы.ОбъемныйБрейкПоДаннымЭкипажа),
	|	ВТ_МПВодителя.КоличествоПалет,
	|	РейсЗаказы.Ссылка,
	|	ВТ_МПВодителя.СтатусУстановленБезКИК,
	|	ЗаборТовара.КомментарийСД,
	|	ЗаборТовара.ТерминалПриемки,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" +
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|";
КонецФункции

//+Степанов Задача № 3837 добавлено чтение реквизитов из РС параметров тарифов
Функция ПолучитьБазовыйТекстЗапросаПоРейсу() Экспорт
	// 04.04.2019 Дробница
	// В текст результирующего запроса (с объединением)
	//  добавлено условие НЕ РейсЗаказы.УдаленИзРейса
	//+Степанов Задача № 3837
	Если ДатаЗакрытия < '20200416000000' Тогда
		Возврат ПолучитьБазовыйТекстЗапросаПоРейсу_старая()
	КонецЕсли;	
	//-Степанов Задача № 3837
	
	Возврат
	"ВЫБРАТЬ
	|	РейсДок.Ссылка КАК Рейс,
	|	новаОтчетВодителя.Ссылка КАК ОтчетВодителя,
	|	ПриходДСПоОтчетуВодителяДоставки.Доставка.Ссылка КАК Заказ,
	|	ПриходДСПоОтчетуВодителяДоставки.ТипОплаты КАК ТипОплаты,
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка КАК ПриходДС
	|ПОМЕСТИТЬ ВТ_ПриходДС
	|ИЗ
	|	Документ.Рейс КАК РейсДок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|			ПО новаОтчетВодителя.Ссылка = ПриходДСПоОтчетуВодителяДоставки.Ссылка.ОтчетВодителя
	|		ПО РейсДок.РейсМестнойДоставки = новаОтчетВодителя.Рейс
	|			И (РейсДок.Ссылка = &рейс)
	|ГДЕ
	|	РейсДок.Ссылка = &Рейс
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Рейс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Забор КАК Забор
	|ПОМЕСТИТЬ ВТ_1_Забор
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ПО (ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.ЗаборТовара).Ссылка = ДанныеЗаказаВодителя.Забор.Ссылка)
	|			И (РейсЗаказы.Ссылка.Ссылка = &Рейс)
	|			И (РейсЗаказы.УдаленИзРейса = ЛОЖЬ)
	|ГДЕ
	|	РейсЗаказы.Ссылка.Ссылка = &Рейс
	|	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Забор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Забор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	|	РейсЗаказы.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_1
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ПО (ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка = ДанныеЗаказаВодителя.Реализация.Ссылка)
	|			И (РейсЗаказы.Ссылка.Ссылка = &Рейс)
	|			И (РейсЗаказы.УдаленИзРейса = ЛОЖЬ)
	|ГДЕ
	|	РейсЗаказы.Ссылка.Ссылка = &Рейс
	|	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация,
	|	РейсЗаказы.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_1.ДанныеМПВодителя.Ссылка КАК ДанныеМПВодителя,
	|	ВТ_1.Реализация КАК Реализация,
	|	ВТ_1.НомерСтроки КАК НомерСтроки,
	|	ВТ_1.ДанныеМПВодителя.ТипОплатыЧек.Ссылка КАК ТипОплатыЧек,
	|	ВТ_1.ДанныеМПВодителя.ВидПодъема.Ссылка КАК ВидПодъема,
	|	ВТ_1.ДанныеМПВодителя.Этаж КАК Этаж,
	|	ВТ_1.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокНаЭтаж,
	|	ВТ_1.ДанныеМПВодителя.РассчитаннаяСтоимостьПодъема КАК РассчитаннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ВнесеннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесРасчетаПодъема,
	|	ВТ_1.ДанныеМПВодителя.БрейкРасчетаПодъема.Ссылка КАК БрейкРасчетаПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъемаВыгруженный КАК ВесРасчетаПодъемаВыгруженный,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	ВТ_1 КАК ВТ_1
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ПО ВТ_1.ДанныеМПВодителя = ДанныеЗаказаВодителя.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_1.ДанныеМПВодителя.Ссылка,
	|	ВТ_1.Реализация,
	|	ВТ_1.НомерСтроки,
	|	ВТ_1.ДанныеМПВодителя.ТипОплатыЧек.Ссылка,
	|	ВТ_1.ДанныеМПВодителя.ВидПодъема.Ссылка,
	|	ВТ_1.ДанныеМПВодителя.Этаж,
	|	ВТ_1.ДанныеМПВодителя.КоличествоХодокНаЭтаж,
	|	ВТ_1.ДанныеМПВодителя.РассчитаннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъема,
	|	ВТ_1.ДанныеМПВодителя.БрейкРасчетаПодъема.Ссылка,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъемаВыгруженный,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_1_Забор.ДанныеМПВодителя.Ссылка КАК ДанныеМПВодителя,
	|	ВТ_1_Забор.ДанныеМПВодителя.Забор КАК Забор,
	|	ВТ_1_Забор.ДанныеМПВодителя.КоличествоПалет КАК КоличествоПалет,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ПОМЕСТИТЬ ВТ_МПВодителя
	|ИЗ
	|	ВТ_1_Забор КАК ВТ_1_Забор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ПО ВТ_1_Забор.ДанныеМПВодителя = ДанныеЗаказаВодителя.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_1_Забор.ДанныеМПВодителя.Забор,
	|	ВТ_1_Забор.ДанныеМПВодителя.КоличествоПалет,
	|	ВТ_1_Забор.ДанныеМПВодителя.Ссылка,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Забор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ЕСТЬNULL(ВТ_ПриходДС.ТипОплаты, ТипыОплат.Ссылка) КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	//Асеев 13.11.2020 (Задача № 4341)>>>
	//|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КОНЕЦ КАК СуммаДоставкиДоМКАД,
	|	ВЫБОР КОГДА ЕСТЬNULL(ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки, ЛОЖЬ) ТОГДА ВТДанныеМП.ДанныеМПВодителя.СтоимостьДоставки ИНАЧЕ новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КОНЕЦ КАК СуммаДоставкиДоМКАД,
	//Асеев 13.11.2020 (Задача № 4341)<<<
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	ПараметрыТарифаЗаказаСрезПоследних.КатегорияДоставки КАК КатегорияДоставки,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	РейсЗаказы.Ссылка.РейсМестнойДоставки.Ссылка КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВЫБОР
	|		КОГДА Накладная003Заказы.Вес ЕСТЬ NULL
	|				ИЛИ Накладная003Заказы.Вес = 0
	|			ТОГДА РеализацияТоваровУслуг.ОбщийВес
	|		ИНАЧЕ Накладная003Заказы.Вес
	|	КОНЕЦ КАК ВесЗаказа,
	|	ВТ_ПриходДС.ПриходДС.Ссылка КАК ДокументОтчет,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	ПараметрыТарифаЗаказаСрезПоследних.РасчетныйБрейк КАК РасчетныйБрейк,
	|	ПараметрыТарифаЗаказаСрезПоследних.ТарифнаяСетка КАК ТарифнаяСеткаПартнера,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ВТДанныеМП.ВидПодъема КАК ВидПодъемаНаЭтаж,
	|	ВТДанныеМП.Этаж КАК Этаж,
	|	NULL КАК ОбъёмЗабора,
	|	NULL КАК ОбъемЗаказовВЗаборе,
	|	NULL КАК ОбъемныйБрейк,
	|	NULL КАК КоличествоПалет,
	|	NULL КАК ОбъемВозвратныхЗаказовВЗаборе,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка) КАК ТипЗаказа,
	|	РейсЗаказы.НомерСтроки КАК НомерСтроки,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.БрейкРасчетаПодъема.Ссылка КАК ПодъемныйБрейк,
	|	ВТДанныеМП.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	РейсЗаказы.Ссылка КАК РейсДокумент,
	|	ВТДанныеМП.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК,
	//Асеев 13.11.2020 (Задача № 4341)>>>
	|	ВТДанныеМП.ДанныеМПВодителя.РасчетнаяСтоимостьДоставки КАК РасчетнаяСтоимостьДоставки
	//Асеев 13.11.2020 (Задача № 4341)<<<
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|			ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|			ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|			ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|			ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Накладная003.Заказы КАК Накладная003Заказы
	|			ПО РеализацияТоваровУслуг.Ссылка = Накладная003Заказы.Заказ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|			ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&НаДатуСтатусы, ) КАК СостоянияЗаказовСрезПоследних
	|			ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ
	|				И (СостоянияЗаказовСрезПоследних.Доставка <> ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|			ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&НаДатуСтатусы, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|			ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриходДС КАК ВТ_ПриходДС
	|			ПО РеализацияТоваровУслуг.Ссылка = ВТ_ПриходДС.Заказ.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|					КОНЕЦПЕРИОДА(&ДатаЗакрытия, ДЕНЬ),
	|					НЕ Заказ.СтатусИнтернетМагазина В (0, 3, 4)
	|						И Заказ.ПометкаУдаления = ЛОЖЬ
	|						И Заказ.ТерминалДоставки В (&ТерминалыДоставки)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|			ПО РеализацияТоваровУслуг.Ссылка = ПараметрыТарифаЗаказаСрезПоследних.Заказ
	|		ПО ((ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг)) = РеализацияТоваровУслуг.Ссылка)
	|			И (РейсЗаказы.Ссылка = &Рейс)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	|		ПО РейсЗаказы.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс
	|			И (РейсЗаказы.Ссылка = &Рейс)
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|	И НЕ новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|	И РейсЗаказы.Ссылка.Ссылка = &Рейс
	|	И НЕ РейсЗаказы.УдаленИзРейса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаборТовара.Ссылка,
	|	ЗаборТовара.СтатусИнтернетМагазина,
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа,
	|	NULL,
	|	ЗаборТовара.СуммаДокумента,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД),
	|	ЗаборТовара.КомментарийСД,
	|	ЗаборТовара.КомментарийСД,
	|	NULL,
	|	NULL,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СостоянияЗаказовРасширенныйСрезПоследних.РезультатДоставки,
	|	СостоянияЗаказовРасширенныйСрезПоследних.ПричинаНеВыполнения,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.Контрагент,
	|	NULL,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.СтоимостьДоставки,
	|	NULL,
	|	ЗаборТовара.КатегорияДоставки,
	|	ПривязкаМашинКРейсамСрезПоследних2.Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних2.Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних2.Экспедитор,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ВТ_МПВодителя.ДанныеМПВодителя,
	|	NULL,
	|	ЗаборТовара.ТарифнаяСетка.ТипТарифа,
	|	NULL,
	|	ЗаборТовара.ТарифнаяСетка,
	|	ЗаборТовара.ЗонаТарификации,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.ТерминалПриемки,
	|	ЗаборТовара.ТерминалПриемки,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.ОбъемЗабора,
	|	ЗаборТовара.ОбъемЗаказов,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.ОбъемныйБрейк, новаОтчетВодителяЗаборы.ОбъемныйБрейкПоДаннымЭкипажа),
	|	ВТ_МПВодителя.КоличествоПалет,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Забор),
	|	РейсЗаказы.НомерСтроки,
	|	0,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	"""",
	|	РейсЗаказы.Ссылка,
	|	ВТ_МПВодителя.СтатусУстановленБезКИК,
	//Асеев 13.11.2020 (Задача № 4341)>>>
	|	NULL
	//Асеев 13.11.2020 (Задача № 4341)<<<
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя.Заборы КАК новаОтчетВодителяЗаборы
	|			ПО (новаОтчетВодителяЗаборы.Забор = ЗаборТовара.Ссылка)
	|				И (новаОтчетВодителяЗаборы.Ссылка.Проведен)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МПВодителя КАК ВТ_МПВодителя
	|			ПО ЗаборТовара.Ссылка = ВТ_МПВодителя.Забор
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказовРасширенный.СрезПоследних(&НаДатуСтатусы, ) КАК СостоянияЗаказовРасширенныйСрезПоследних
	|			ПО (ЗаборТовара.Ссылка = ВЫРАЗИТЬ(СостоянияЗаказовРасширенныйСрезПоследних.Заказ КАК Документ.ЗаборТовара).Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РассчитанныеАдминкойУслугиСД.СрезПоследних(&НаДатуСтатусы, ) КАК РассчитанныеАдминкойУслугиСДСрезПоследних
	|			ПО (ЗаборТовара.Ссылка = ВЫРАЗИТЬ(РассчитанныеАдминкойУслугиСДСрезПоследних.Заказ КАК Документ.ЗаборТовара).Ссылка)
	|		ПО ((ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.ЗаборТовара)) = ЗаборТовара.Ссылка)
	|			И (РейсЗаказы.Ссылка = &Рейс)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(&НаДатуСтатусы, ) КАК ПривязкаМашинКРейсамСрезПоследних2
	|		ПО РейсЗаказы.Ссылка = ПривязкаМашинКРейсамСрезПоследних2.Рейс
	|			И (РейсЗаказы.Ссылка.Ссылка = &Рейс)
	|ГДЕ
	|	НЕ ЗаборТовара.СтатусИнтернетМагазина В (0, 3, 4)
	|	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	|	И ЗаборТовара.ТерминалПриемки В(&ТерминалыДоставки)
	|	И РейсЗаказы.Ссылка.Ссылка = &Рейс
	|	И НЕ РейсЗаказы.УдаленИзРейса
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаборТовара.Ссылка,
	|	ЗаборТовара.СтатусИнтернетМагазина,
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа,
	|	ЗаборТовара.СуммаДокумента,
	|	ЗаборТовара.КомментарийСД,
	|	СостоянияЗаказовРасширенныйСрезПоследних.РезультатДоставки,
	|	СостоянияЗаказовРасширенныйСрезПоследних.ПричинаНеВыполнения,
	|	ЗаборТовара.Контрагент,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	|	ЗаборТовара.СтоимостьДоставки,
	|	ЗаборТовара.КатегорияДоставки,
	|	ВТ_МПВодителя.ДанныеМПВодителя,
	|	ЗаборТовара.ТарифнаяСетка.ТипТарифа,
	|	ЗаборТовара.ТарифнаяСетка,
	|	ЗаборТовара.ЗонаТарификации,
	|	ЗаборТовара.ТерминалПриемки,
	|	ЗаборТовара.ОбъемЗабора,
	|	ЗаборТовара.ОбъемЗаказов,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов,
	|	РейсЗаказы.НомерСтроки,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД),
	|	ПривязкаМашинКРейсамСрезПоследних2.Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних2.Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних2.Экспедитор,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.ОбъемныйБрейк, новаОтчетВодителяЗаборы.ОбъемныйБрейкПоДаннымЭкипажа),
	|	ВТ_МПВодителя.КоличествоПалет,
	|	РейсЗаказы.Ссылка,
	|	ЗаборТовара.КомментарийСД,
	|	ЗаборТовара.ТерминалПриемки,
	|	ВТ_МПВодителя.СтатусУстановленБезКИК,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" +
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|";
КонецФункции

Функция ПолучитьБазовыйТекстЗапросаПоРейсу_старая() Экспорт
	// 04.04.2019 Дробница
	// В текст результирующего запроса (с объединением)
	//  добавлено условие НЕ РейсЗаказы.УдаленИзРейса
	Возврат
	"ВЫБРАТЬ
	|	РейсДок.Ссылка КАК Рейс,
	|	новаОтчетВодителя.Ссылка КАК ОтчетВодителя,
	|	ПриходДСПоОтчетуВодителяДоставки.Доставка.Ссылка КАК Заказ,
	|	ПриходДСПоОтчетуВодителяДоставки.ТипОплаты КАК ТипОплаты,
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка КАК ПриходДС
	|ПОМЕСТИТЬ ВТ_ПриходДС
	|ИЗ
	|	Документ.Рейс КАК РейсДок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|			ПО новаОтчетВодителя.Ссылка = ПриходДСПоОтчетуВодителяДоставки.Ссылка.ОтчетВодителя
	|		ПО РейсДок.РейсМестнойДоставки = новаОтчетВодителя.Рейс
	|			И (РейсДок.Ссылка = &рейс)
	|ГДЕ
	|	РейсДок.Ссылка = &Рейс
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Рейс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Забор КАК Забор,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ПОМЕСТИТЬ ВТ_1_Забор
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ПО (ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.ЗаборТовара).Ссылка = ДанныеЗаказаВодителя.Забор.Ссылка)
	|			И (РейсЗаказы.Ссылка.Ссылка = &Рейс)
	|			И (РейсЗаказы.УдаленИзРейса = ЛОЖЬ)
	|ГДЕ
	|	РейсЗаказы.Ссылка.Ссылка = &Рейс
	|	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Забор,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Забор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ДанныеЗаказаВодителя.Ссылка) КАК ДанныеМПВодителя,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	|	РейсЗаказы.НомерСтроки КАК НомерСтроки,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ПОМЕСТИТЬ ВТ_1
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ПО (ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка = ДанныеЗаказаВодителя.Реализация.Ссылка)
	|			И (РейсЗаказы.Ссылка.Ссылка = &Рейс)
	|			И (РейсЗаказы.УдаленИзРейса = ЛОЖЬ)
	|ГДЕ
	|	РейсЗаказы.Ссылка.Ссылка = &Рейс
	|	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителя.Реализация,
	|	РейсЗаказы.НомерСтроки,
	|	ДанныеЗаказаВодителя.СтатусУстановленБезКИК
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_1.ДанныеМПВодителя.Ссылка КАК ДанныеМПВодителя,
	|	ВТ_1.Реализация КАК Реализация,
	|	ВТ_1.НомерСтроки КАК НомерСтроки,
	|	ВТ_1.ДанныеМПВодителя.ТипОплатыЧек.Ссылка КАК ТипОплатыЧек,
	|	ВТ_1.ДанныеМПВодителя.ВидПодъема.Ссылка КАК ВидПодъема,
	|	ВТ_1.ДанныеМПВодителя.Этаж КАК Этаж,
	|	ВТ_1.ДанныеМПВодителя.КоличествоХодокНаЭтаж КАК КоличествоХодокНаЭтаж,
	|	ВТ_1.ДанныеМПВодителя.РассчитаннаяСтоимостьПодъема КАК РассчитаннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема КАК ВнесеннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъема КАК ВесРасчетаПодъема,
	|	ВТ_1.ДанныеМПВодителя.БрейкРасчетаПодъема.Ссылка КАК БрейкРасчетаПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъемаВыгруженный КАК ВесРасчетаПодъемаВыгруженный,
	|	ВТ_1.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ПОМЕСТИТЬ ВТДанныеМП
	|ИЗ
	|	ВТ_1 КАК ВТ_1
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_1.ДанныеМПВодителя.Ссылка,
	|	ВТ_1.Реализация,
	|	ВТ_1.НомерСтроки,
	|	ВТ_1.ДанныеМПВодителя.ТипОплатыЧек.Ссылка,
	|	ВТ_1.ДанныеМПВодителя.ВидПодъема.Ссылка,
	|	ВТ_1.ДанныеМПВодителя.Этаж,
	|	ВТ_1.ДанныеМПВодителя.КоличествоХодокНаЭтаж,
	|	ВТ_1.ДанныеМПВодителя.РассчитаннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВнесеннаяСтоимостьПодъема,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъема,
	|	ВТ_1.ДанныеМПВодителя.БрейкРасчетаПодъема.Ссылка,
	|	ВТ_1.ДанныеМПВодителя.ВесРасчетаПодъемаВыгруженный,
	|	ВТ_1.СтатусУстановленБезКИК
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_1_Забор.ДанныеМПВодителя.Ссылка КАК ДанныеМПВодителя,
	|	ВТ_1_Забор.ДанныеМПВодителя.Забор КАК Забор,
	|	ВТ_1_Забор.ДанныеМПВодителя.КоличествоПалет КАК КоличествоПалет,
	|	ВТ_1_Забор.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ПОМЕСТИТЬ ВТ_МПВодителя
	|ИЗ
	|	ВТ_1_Забор КАК ВТ_1_Забор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_1_Забор.ДанныеМПВодителя.Забор,
	|	ВТ_1_Забор.ДанныеМПВодителя.КоличествоПалет,
	|	ВТ_1_Забор.ДанныеМПВодителя.Ссылка,
	|	ВТ_1_Забор.СтатусУстановленБезКИК
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Забор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина КАК СтатусЗаказа,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма,
	|	РеализацияТоваровУслуг.УслугиСД КАК УслугиСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК КомментарийСД,
	|	РеализацияТоваровУслуг.КомментарийСД КАК ИсходныйКомментарийСД,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ПеремещениеТоваров.Ссылка КАК Перемещение,
	|	ЕСТЬNULL(новаМестнаяДоставка.ДоставкаЗавершена
	|			ИЛИ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз, ИСТИНА) КАК Доставлен,
	|	ЛОЖЬ КАК Закрыть,
	|	СписаниеТоваров.Ссылка КАК Списание,
	|	ОприходованиеТоваров.Ссылка КАК Оприходование,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	СостоянияЗаказовСрезПоследних.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовСрезПоследних.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПоступлениеТоваровУслуг.Ссылка КАК Поступление,
	|	новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз КАК ДоставкаИзмененаНаСамовывоз,
	|	РеализацияТоваровУслуг.ВладелецТовара.Ссылка КАК ВладелецТовара,
	|	ЕСТЬNULL(ВТ_ПриходДС.ТипОплаты, ТипыОплат.Ссылка) КАК ТипОплаты,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СтатусЗаказаИнтернетМагазина,
	|	новаМестнаяДоставка.СуммаБанковскойКомиссии КАК БанковскаяКомиссия,
	|	новаМестнаяДоставка.СуммаКассовогоОбслуживания КАК КассовоеОбслуживание,
	|	новаМестнаяДоставка.СтоимостьДоставкиДоМКАД КАК СуммаДоставкиДоМКАД,
	|	новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД КАК СуммаДоставкиЗаМКАД,
	|	КатегорииДоставки2014.Ссылка КАК КатегорияДоставки,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор,
	|	РеализацияТоваровУслуг.АгентскоеВознаграждение КАК АгентскоеВознаграждение,
	|	РейсЗаказы.Ссылка.РейсМестнойДоставки.Ссылка КАК Рейс,
	|	СостоянияЗаказовСрезПоследних.ПричинаОтказа КАК ПричинаОтказа,
	|	ВЫБОР
	|		КОГДА Накладная003Заказы.Вес ЕСТЬ NULL
	|				ИЛИ Накладная003Заказы.Вес = 0
	|			ТОГДА РеализацияТоваровУслуг.ОбщийВес
	|		ИНАЧЕ Накладная003Заказы.Вес
	|	КОНЕЦ КАК ВесЗаказа,
	|	ВТ_ПриходДС.ПриходДС.Ссылка КАК ДокументОтчет,
	|	ВТДанныеМП.ДанныеМПВодителя КАК ДанныеМПВодителя,
	|	РеализацияТоваровУслуг.ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
	|	РеализацияТоваровУслуг.ТарифнаяСетка КАК ТарифнаяСетка,
	|	РеализацияТоваровУслуг.РасчетныйБрейк КАК РасчетныйБрейк,
	|	РеализацияТоваровУслуг.ТарифнаяСеткаПартнера КАК ТарифнаяСеткаПартнера,
	|	РеализацияТоваровУслуг.ЗонаТарификации КАК ЗонаТарификации,
	|	РеализацияТоваровУслуг.УслугиСДЧистые КАК УслугиСДЧистые,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ОценочнаяСтоимость, 0) КАК ОценочнаяСтоимость,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0) КАК КОплатеКлиентом,
	|	ДополнительныеПараметрыЗаказа.ПричинаОтклоненияЗаказа КАК ПричинаОтклоненияЗаказа,
	|	РеализацияТоваровУслуг.СтраховойСбор КАК СтраховойСбор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьИтогоКОплате,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.Правила КАК ПравилаОпределенияКатегорииЗаказаДляЗП,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
	|	ВТДанныеМП.ВидПодъема КАК ВидПодъемаНаЭтаж,
	|	ВТДанныеМП.Этаж КАК Этаж,
	|	NULL КАК ОбъёмЗабора,
	|	NULL КАК ОбъемЗаказовВЗаборе,
	|	NULL КАК ОбъемныйБрейк,
	|	NULL КАК КоличествоПалет,
	|	NULL КАК ОбъемВозвратныхЗаказовВЗаборе,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Доставка) КАК ТипЗаказа,
	|	РейсЗаказы.НомерСтроки КАК НомерСтроки,
	|	ДополнительныеПараметрыЗаказа.ТарифицируемыйВес КАК ТарифицируемыйВес,
	|	ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа КАК МетодОплатыПодъема,
	|	ВТДанныеМП.КоличествоХодокНаЭтаж КАК КоличествоХодокПриПодъемеЗаказа,
	|	ВТДанныеМП.ВнесеннаяСтоимостьПодъема КАК СтоимостьПодъемаПоДаннымМП,
	|	ВТДанныеМП.БрейкРасчетаПодъема.Ссылка КАК ПодъемныйБрейк,
	|	ВТДанныеМП.ВнесеннаяСтоимостьПодъема КАК Показатель2,
	|	ВТДанныеМП.ВнесеннаяСтоимостьПодъема КАК ПодъемВодитель,
	|	ВТДанныеМП.ВесРасчетаПодъема КАК ВесЗаказаДляПодъемаМП,
	|	ТипыОплат.Ссылка КАК ТипОплатыЗаказа,
	|	РейсЗаказы.Ссылка КАК РейсДокумент,
	|	ВТДанныеМП.СтатусУстановленБезКИК КАК СтатусУстановленБезКИК
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = СписаниеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = ОприходованиеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|			ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|			ПО РеализацияТоваровУслуг.Номер = ПеремещениеТоваров.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|			ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|			ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	|			ПО РеализацияТоваровУслуг.КатегорияДоставки = КатегорииДоставки2014.Категория
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Накладная003.Заказы КАК Накладная003Заказы
	|			ПО РеализацияТоваровУслуг.Ссылка = Накладная003Заказы.Заказ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеМП КАК ВТДанныеМП
	|			ПО РеализацияТоваровУслуг.Ссылка = ВТДанныеМП.Реализация
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&НаДатуСтатусы, ) КАК СостоянияЗаказовСрезПоследних
	|			ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ
	|				И (СостоянияЗаказовСрезПоследних.Доставка <> ЗНАЧЕНИЕ(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|			ПО (ДополнительныеПараметрыЗаказа.Заказ = РеализацияТоваровУслуг.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗП.СрезПоследних(&НаДатуСтатусы, ) КАК ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних
	|			ПО РеализацияТоваровУслуг.ВладелецТовара = ПрименениеПравилДляРасчетаКатегорийЗаказовДляЗПСрезПоследних.ИнтернетМагазин
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриходДС КАК ВТ_ПриходДС
	|			ПО РеализацияТоваровУслуг.Ссылка = ВТ_ПриходДС.Заказ.Ссылка
	|		ПО ((ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг)) = РеализацияТоваровУслуг.Ссылка)
	|			И (РейсЗаказы.Ссылка = &Рейс)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	|		ПО РейсЗаказы.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс
	|			И (РейсЗаказы.Ссылка = &Рейс)
	|ГДЕ
	|	НЕ РеализацияТоваровУслуг.СтатусИнтернетМагазина В (0, 3, 4)
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|	И НЕ новаМестнаяДоставка.Ссылка ЕСТЬ NULL
	|	И РеализацияТоваровУслуг.ТерминалДоставки В(&ТерминалыДоставки)
	|	И РейсЗаказы.Ссылка.Ссылка = &Рейс
	|	И НЕ РейсЗаказы.УдаленИзРейса
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаборТовара.Ссылка,
	|	ЗаборТовара.СтатусИнтернетМагазина,
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа,
	|	NULL,
	|	ЗаборТовара.СуммаДокумента,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД),
	|	ЗаборТовара.КомментарийСД,
	|	ЗаборТовара.КомментарийСД,
	|	NULL,
	|	NULL,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СостоянияЗаказовРасширенныйСрезПоследних.РезультатДоставки,
	|	СостоянияЗаказовРасширенныйСрезПоследних.ПричинаНеВыполнения,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.Контрагент,
	|	NULL,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.СтоимостьДоставки,
	|	NULL,
	|	ЗаборТовара.КатегорияДоставки,
	|	ПривязкаМашинКРейсамСрезПоследних2.Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних2.Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних2.Экспедитор,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ВТ_МПВодителя.ДанныеМПВодителя,
	|	NULL,
	|	ЗаборТовара.ТарифнаяСетка.ТипТарифа,
	|	NULL,
	|	ЗаборТовара.ТарифнаяСетка,
	|	ЗаборТовара.ЗонаТарификации,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.ТерминалПриемки,
	|	ЗаборТовара.ТерминалПриемки,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ЗаборТовара.ОбъемЗабора,
	|	ЗаборТовара.ОбъемЗаказов,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.ОбъемныйБрейк, новаОтчетВодителяЗаборы.ОбъемныйБрейкПоДаннымЭкипажа),
	|	ВТ_МПВодителя.КоличествоПалет,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов,
	|	ЗНАЧЕНИЕ(Перечисление.Типызаказов.Забор),
	|	РейсЗаказы.НомерСтроки,
	|	0,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	"""",
	|	РейсЗаказы.Ссылка,
	|	ВТ_МПВодителя.СтатусУстановленБезКИК
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя.Заборы КАК новаОтчетВодителяЗаборы
	|			ПО (новаОтчетВодителяЗаборы.Забор = ЗаборТовара.Ссылка)
	|				И (новаОтчетВодителяЗаборы.Ссылка.Проведен)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МПВодителя КАК ВТ_МПВодителя
	|			ПО ЗаборТовара.Ссылка = ВТ_МПВодителя.Забор
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказовРасширенный.СрезПоследних(&НаДатуСтатусы, ) КАК СостоянияЗаказовРасширенныйСрезПоследних
	|			ПО (ЗаборТовара.Ссылка = ВЫРАЗИТЬ(СостоянияЗаказовРасширенныйСрезПоследних.Заказ КАК Документ.ЗаборТовара).Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РассчитанныеАдминкойУслугиСД.СрезПоследних(&НаДатуСтатусы, ) КАК РассчитанныеАдминкойУслугиСДСрезПоследних
	|			ПО (ЗаборТовара.Ссылка = ВЫРАЗИТЬ(РассчитанныеАдминкойУслугиСДСрезПоследних.Заказ КАК Документ.ЗаборТовара).Ссылка)
	|		ПО ((ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.ЗаборТовара)) = ЗаборТовара.Ссылка)
	|			И (РейсЗаказы.Ссылка = &Рейс)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(&НаДатуСтатусы, ) КАК ПривязкаМашинКРейсамСрезПоследних2
	|		ПО РейсЗаказы.Ссылка = ПривязкаМашинКРейсамСрезПоследних2.Рейс
	|			И (РейсЗаказы.Ссылка.Ссылка = &Рейс)
	|ГДЕ
	|	НЕ ЗаборТовара.СтатусИнтернетМагазина В (0, 3, 4)
	|	И ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	|	И ЗаборТовара.ТерминалПриемки В(&ТерминалыДоставки)
	|	И РейсЗаказы.Ссылка.Ссылка = &Рейс
	|	И НЕ РейсЗаказы.УдаленИзРейса
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаборТовара.Ссылка,
	|	ЗаборТовара.СтатусИнтернетМагазина,
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа,
	|	ЗаборТовара.СуммаДокумента,
	|	ЗаборТовара.КомментарийСД,
	|	СостоянияЗаказовРасширенныйСрезПоследних.РезультатДоставки,
	|	СостоянияЗаказовРасширенныйСрезПоследних.ПричинаНеВыполнения,
	|	ЗаборТовара.Контрагент,
	|	ЗаборТовара.СтатусИнтернетМагазинаСпр,
	|	ЗаборТовара.СтоимостьДоставки,
	|	ЗаборТовара.КатегорияДоставки,
	|	ВТ_МПВодителя.ДанныеМПВодителя,
	|	ЗаборТовара.ТарифнаяСетка.ТипТарифа,
	|	ЗаборТовара.ТарифнаяСетка,
	|	ЗаборТовара.ЗонаТарификации,
	|	ЗаборТовара.ТерминалПриемки,
	|	ЗаборТовара.ОбъемЗабора,
	|	ЗаборТовара.ОбъемЗаказов,
	|	ЗаборТовара.ОбъемВозвратныхЗаказов,
	|	РейсЗаказы.НомерСтроки,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД),
	|	ПривязкаМашинКРейсамСрезПоследних2.Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних2.Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних2.Экспедитор,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.ОбъемныйБрейк, новаОтчетВодителяЗаборы.ОбъемныйБрейкПоДаннымЭкипажа),
	|	ВТ_МПВодителя.КоличествоПалет,
	|	РейсЗаказы.Ссылка,
	|	ЗаборТовара.КомментарийСД,
	|	ЗаборТовара.ТерминалПриемки,
	|	ВТ_МПВодителя.СтатусУстановленБезКИК,
	|	ЕСТЬNULL(РассчитанныеАдминкойУслугиСДСрезПоследних.УслугиСД, ЗаборТовара.УслугиСД)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" +
	"	$ДОПОЛНИТЕЛЬНЫЕУСЛОВИЯ " + "
	|";
КонецФункции

Функция РассчитатьКОНовое(Стр) Экспорт
	//Если Не ЗначениеЗаполнено(Стр.ВариантРасчетаКО) Тогда
	//	Вар = Константы.ВариантРасчетаКОПоУмолчанию.Получить();
	//Иначе
	//	Вар = Стр.ВариантРасчетаКО;
	//КонецеСли;
	//
	//СумКО = 0;
	//
	//Если Вар.ТипРасчетаКО = Перечисления.ТипыРасчетаКассовогоОбслуживания.НеСчитать Тогда
	//	Стр.КассовоеОбслуживаниеНовое = 0;
	//	Возврат Ложь;		
	//ИначеЕсли Вар.ТипРасчетаКО = Перечисления.ТипыРасчетаКассовогоОбслуживания.СуммаТоваров Тогда
	//	Струк = Новый Структура;
	//	Струк.Вставить("Доставка", Стр.Доставка);
	//	НайТов = Товары.НайтиСтроки(Струк);
	//	Если НайТов.Количество() = 0 Тогда
	//		Струк = Новый Структура;
	//		Струк.Вставить("Реализация", Стр.Реализация);
	//		НайТов = Товары.НайтиСтроки(Струк);
	//	КонецеСли;
	//	
	//	Для Сч = 0 По НайТов.Количество() - 1 Цикл
	//		СумКО = СумКО + НайТов[Сч].Сумма;
	//	КонецЦикла;	
	//ИначеЕсли Вар.ТипРасчетаКО = Перечисления.ТипыРасчетаКассовогоОбслуживания.СуммаПолученная Тогда
	//	Струк = Новый Структура;
	//	Струк.Вставить("Доставка", Стр.Доставка);
	//	НайТов = Товары.НайтиСтроки(Струк);
	//	Если НайТов.Количество() = 0 Тогда
	//		Струк = Новый Структура;
	//		Струк.Вставить("Реализация", Стр.Реализация);
	//		НайТов = Товары.НайтиСтроки(Струк);
	//	КонецеСли;
	//	Для Сч = 0 По НайТов.Количество() - 1 Цикл
	//		СумКО = СумКО + НайТов[Сч].СуммаНовая;
	//	КонецЦикла;	
	//КонецеСли;	
	//
	//Если Вар.ВключатьДоставку Тогда
	//	СумКО = СумКО + Стр.СуммаДоставкиДоМКАД + Стр.СуммаДоставкиЗаМКАД;
	//КонецеСли;	
	Стр.КассовоеОбслуживаниеНовое = 0;
	//СумКО*Вар.Процент/100;
	Возврат Истина;
КонецФункции

Процедура ЗаполнитьАктивныеПоказателиУслугСД() Экспорт
	АктивныеПоказателиУслугСД.Очистить();
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	АктивностьПоказателейРасчетаСДСрезПоследних.ПоказательРасчетаСД КАК ПоказательРасчетаУслугСД,
	            |	АктивностьПоказателейРасчетаСДСрезПоследних.ПоказательРасчетаСД.НомерПоказателя КАК НомерПоказателя
	            |ИЗ
	            |	РегистрСведений.АктивностьПоказателейРасчетаСД.СрезПоследних(&Дата, ) КАК АктивностьПоказателейРасчетаСДСрезПоследних
	            |ГДЕ
	            |	АктивностьПоказателейРасчетаСДСрезПоследних.АктивностьПоказателя = ИСТИНА
	            |
	            |УПОРЯДОЧИТЬ ПО
	            |	НомерПоказателя";
	Зап.УстановитьПараметр("Дата", КонецДня(Дата));	
	Рез = Зап.Выполнить().Выгрузить();
	Для Каждого Тек Из Рез Цикл
		Нов = АктивныеПоказателиУслугСД.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Тек);
	КонецЦикла;	
КонецПроцедуры	

Процедура ПодсчетНовойСуммы(Тек) Экспорт
	КолНов = Тек.Количество-Тек.КоличествоВозвращено-Тек.Недовложение;
	Тек.СуммаНовая = КолНов*Тек.Цена;
КонецПроцедуры	

Процедура ПриЗаписи(Отказ)
	// Вставить содержимое обработчика.
	//ТранзакционнаяМодель = ТранзакционнаяМодельПр;
КонецПроцедуры

Функция ПриИзмененииСуммСД(СтрокаЗаказа) Экспорт 
	Струк = Новый Структура;
	Струк.Вставить("Реализация", СтрокаЗаказа.Реализация.Ссылка);
	
	
	НайУсл = Услуги.НайтиСтроки(Струк);
	Сум = 0;
	БылПодъем = Ложь;
	Для Каждого Тек Из НайУсл Цикл
		Если Тек.Услуга.Ссылка = Справочники.ПоказателиРасчетаУслугСД.Подъем.Ссылка Тогда
			БылПодъем = Истина;
		Иначе
			Если Тек.НазначенаВ1С Тогда
				Тек.СуммаДляИзменения = РасчетСуммыДопУслуги(Тек.Тариф, Тек.Ставка, СтрокаЗаказа);
				Тек.СуммаПервичная = Тек.СуммаДляИзменения;
			КонецеСли;	
			
			Сум = Сум + Тек.СуммаДляИзменения;
		КонецеСли;	
		
	КонецЦикла;
	
	Най = Заказы.Найти(СтрокаЗаказа.Реализация);
	
	
	если Най <> Неопределено Тогда		
		
		Сум = Сум + Най.УслугиСДЧистые; 
	КонецеСли;
	
	Если Не БылПодъем И Най.Показатель2 <> 0 Тогда
		Сум = Сум + Най.Показатель2; 
	КонецеСли;	
		
	Возврат Сум;
КонецФункции

Процедура ПриИзмененииСтоимостиПодъема(СтрокаЗаказов, ИзменятьПодъемВодителя = Истина)
	ЭлПодъем = Справочники.ПоказателиРасчетаУслугСД.Подъем;
	
	Струк = Новый Структура;
	Струк.Вставить("Услуга", ЭлПодъем.Ссылка);
	Струк.Вставить("Реализация", СтрокаЗаказов.Реализация.Ссылка);
	Най = Услуги.НайтиСтроки(Струк);
	
	Если Най.Количество() = 0 Тогда
		Стр = Услуги.Добавить();
		Стр.Реализация = СтрокаЗаказов.Реализация.Ссылка;
		Стр.Услуга = ЭлПодъем.Ссылка;
	Иначе
		Стр = Най[0];
	КонецеСли;	
	
	Стр.СуммаДляИзменения = СтрокаЗаказов.Показатель2;
	
	Если СтрокаЗаказов.Показатель2 <> 0 
		И СтрокаЗаказов.ПодъемВодитель=0 И ИзменятьПодъемВодителя Тогда	
		СтрокаЗаказов.ПодъемВодитель = СтрокаЗаказов.Показатель2; 
	КонецеСли;
КонецПроцедуры	

//Процедура ПриИзмененииСтоимостиПодъемаБезПересчетаПодъемаВодителя(СтрокаЗаказов)
//	ЭлПодъем = Справочники.ПоказателиРасчетаУслугСД.Подъем;
//	
//	Струк = Новый Структура;
//	Струк.Вставить("Услуга", ЭлПодъем.Ссылка);
//	Струк.Вставить("Реализация", СтрокаЗаказов.Реализация.Ссылка);
//	Най = Услуги.НайтиСтроки(Струк);
//	
//	Если Най.Количество() = 0 Тогда
//		Стр = Услуги.Добавить();
//		Стр.Реализация = СтрокаЗаказов.Реализация.Ссылка;
//		Стр.Услуга = ЭлПодъем.Ссылка;
//	Иначе
//		Стр = Най[0];
//	КонецеСли;	
//	
//	Стр.СуммаДляИзменения = СтрокаЗаказов.Показатель2;
//	
//КонецПроцедуры	


Процедура ИнициализироватьЧистыеУслугиСД() Экспорт
	для Каждого Тек Из Заказы Цикл
		Если Тек.УслугиСДЧистые = 0 Тогда
			Струк = Новый Структура;
			Струк.Вставить("Реализация", Тек.Реализация.Ссылка);
			НайУсл = Услуги.НайтиСтроки(Струк);
			Сум = 0;
			Для Каждого ТекУ Из НайУсл Цикл
				Если ТекУ.Услуга <> Справочники.ПоказателиРасчетаУслугСД.Подъем Тогда					
					Сум = Сум + ТекУ.СуммаДляИзменения;
				КонецеСли;	
			КонецЦикла;
			
			Тек.УслугиСДЧистые = Тек.Показатель1 - Сум;
		КонецеСли;	
	КонецЦикла;	
КонецПроцедуры	

Процедура ИнициализироватьПодъем(ИнициализироватьПодъемВодителя = Истина)
    
    //В ТЧ Услуги найдем строки с "Подъёмом"
    Отбор = Новый Структура;
    Отбор.Вставить("Услуга", Справочники.ПоказателиРасчетаУслугСД.Подъем);
    МассивСтрок = Услуги.НайтиСтроки(Отбор);
    
    //Заполним подъем в ТЧ Заказы
    Для каждого Стр Из МассивСтрок Цикл
        
        Струк = Новый Структура;
        Струк.Вставить("Реализация", Стр.Реализация);
        Най = Заказы.НайтиСтроки(Струк);
        
        Если Най.Количество() = 0 Тогда
            //значит где-то косяк
        Иначе
            Най[0].Показатель2 = Стр.СуммаДляИзменения;
			Если ИнициализироватьПодъемВодителя Тогда
            	Най[0].ПодъемВодитель = Най[0].Показатель2;
			КонецеСли;	
        КонецЕсли;
    КонецЦикла;

КонецПроцедуры

Процедура ПровестиДоходыКомпании()
	
	Движения.СведенияОДоходахКомпании.Очистить();
	Движения.СведенияОДоходахКомпании.Записывать = Истина;
	
	Зап = Новый Запрос;
	
	Зап.Текст = "ВЫБРАТЬ
	            |	ЗакрытиеЗаказовЗаказы.ВладелецТовара КАК Партнер,
	            |	ЗакрытиеЗаказовЗаказы.КатегорияДоставки,
	            |	СУММА(ЗакрытиеЗаказовЗаказы.Показатель1 + ЗакрытиеЗаказовЗаказы.Показатель2) КАК УслугиСД,
	            |	СУММА(ЗакрытиеЗаказовЗаказы.КассовоеОбслуживание) КАК КассовоеОбслуживание,
	            |	СУММА(ЗакрытиеЗаказовЗаказы.БанковскаяКомиссия) КАК БанковскаяКомиссия,
	            |	СУММА(ЗакрытиеЗаказовЗаказы.АгентскоеВознаграждение) КАК АгентскоеВознаграждение,
	            |	ЗакрытиеЗаказовЗаказы.ТипЗаказа КАК ТипЗаказа
	            |ИЗ
	            |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	            |ГДЕ
	            |	ЗакрытиеЗаказовЗаказы.Ссылка.Ссылка = &Док
	            |	И ЗакрытиеЗаказовЗаказы.Закрыть = ИСТИНА
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	ЗакрытиеЗаказовЗаказы.ВладелецТовара,
	            |	ЗакрытиеЗаказовЗаказы.КатегорияДоставки,
	            |	ЗакрытиеЗаказовЗаказы.ТипЗаказа";
	
	Зап.УстановитьПараметр("Док", Ссылка);
	Выб = Зап.Выполнить().Выбрать();
	
	
	Если ЗначениеЗаполнено(ДатаЗакрытия) Тогда
		ДЗ = ДатаЗакрытия;
	Иначе
		ДЗ = Дата;
	КонецеСли;	
	
	
	Пока Выб.Следующий() Цикл
		Если Выб.АгентскоеВознаграждение <> 0 Тогда
			Нов = Движения.СведенияОДоходахКомпании.Добавить();
			Нов.Партнер = Выб.Партнер;
			
			Нов.Период = ДЗ;
			Нов.СтатьяДоходов = Справочники.СтатьиДоходовКомпании.АгентскоеВознаграждение;
			Нов.КатегорияДоставки = Выб.КатегорияДоставки;
			Нов.Сумма = Выб.АгентскоеВознаграждение;
			Нов.ТипЗаказа = Выб.ТипЗаказа;
		КонецеСли;
		
		Если Выб.КассовоеОбслуживание <> 0 Тогда
			Нов = Движения.СведенияОДоходахКомпании.Добавить();
			Нов.Партнер = Выб.Партнер;
			
			Нов.Период = ДЗ;
			Нов.СтатьяДоходов = Справочники.СтатьиДоходовКомпании.КассовоеОбслуживание;
			Нов.КатегорияДоставки = Выб.КатегорияДоставки;
			Нов.Сумма = Выб.КассовоеОбслуживание;
			Нов.ТипЗаказа = Выб.ТипЗаказа;
		КонецеСли;
		
		Если Выб.УслугиСД <> 0 Тогда
			Нов = Движения.СведенияОДоходахКомпании.Добавить();
			Нов.Партнер = Выб.Партнер;
			
			Нов.Период = ДЗ;
			Нов.СтатьяДоходов = Справочники.СтатьиДоходовКомпании.УслугиСД;
			Нов.КатегорияДоставки = Выб.КатегорияДоставки;
			Нов.Сумма = Выб.УслугиСД;
			Нов.ТипЗаказа = Выб.ТипЗаказа;
		КонецеСли;
		
		Если Выб.БанковскаяКомиссия <> 0 Тогда
			Нов = Движения.СведенияОДоходахКомпании.Добавить();
			Нов.Партнер = Выб.Партнер;
			
			Нов.Период = ДЗ;
			Нов.СтатьяДоходов = Справочники.СтатьиДоходовКомпании.БанковскаяКомиссия;
			Нов.КатегорияДоставки = Выб.КатегорияДоставки;
			Нов.Сумма = Выб.БанковскаяКомиссия;
			Нов.ТипЗаказа = Выб.ТипЗаказа;
		КонецеСли;
		
	КонецЦикла;
	
	
	
	
КонецПроцедуры	

#Область SMV

Функция ПолучитьДанныеОбновлениеСтатусовВАдминке()

    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЗакрытиеЗаказовЗаказы.Реализация КАК Реализация,
        |	ВЫБОР
        |		КОГДА ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена)
        |			ТОГДА 301
        |		КОГДА ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично)
        |			ТОГДА 302
		// ++Задача № 3475
		|		КОГДА ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
        |				И ЗакрытиеЗаказовЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
        |			ТОГДА 305
        |		КОГДА ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
        |				И ЗакрытиеЗаказовЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда)
        |			ТОГДА 305
		// --Задача № 3475
		//|		КОГДА ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
		//|				И ЗакрытиеЗаказовЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
		//|			ТОГДА 303
		//|		КОГДА ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
		//|				И ЗакрытиеЗаказовЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда)
		//|			ТОГДА 304
        |		ИНАЧЕ 401
        |	КОНЕЦ КАК Статус,
        |	ЗакрытиеЗаказовЗаказы.Ссылка КАК ДокументРегистратор,
        |	ЕСТЬNULL(ЗакрытыеЗаказы.Реализация, ИСТИНА) = ИСТИНА КАК ОтображатьВАдминке,
        |	ЕСТЬNULL(ЗакрытиеЗаказовЗаказы.ПредварительноеЗакрытие, 0) КАК ПредварительноеЗакрытие,
        |	ЗакрытиеЗаказовЗаказы.ТерминалДоставки КАК Терминал,
        |	ЗакрытиеЗаказовЗаказы.Реализация.Номер КАК Номер,
        |	ЗакрытиеЗаказовЗаказы.ПричинаОтказа КАК ПричинаОтказаПереноса //CeHbKA #3227 24.06.2019
        |ИЗ
        |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
        |		ПО (ВЫРАЗИТЬ(ЗакрытиеЗаказовЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка = ВЫРАЗИТЬ(ЗакрытыеЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка)
        |ГДЕ
        |	ЗакрытиеЗаказовЗаказы.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
        |	И (ЗакрытиеЗаказовЗаказы.Закрыть
        |			ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить)
        |	И ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ЗакрытиеЗаказовЗаказы.Реализация,
        |	ВЫБОР
        |		КОГДА ЗакрытиеЗаказовЗаказы.Закрыть
        |			ТОГДА ВЫБОР
        |					КОГДА ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена)
        |						ТОГДА 301
        |					КОГДА ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично)
        |						ТОГДА 302
        |					КОГДА ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
        |							И ЗакрытиеЗаказовЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
		// --Задача № 3475
		|						ТОГДА 305
		//|						ТОГДА 303
        |				КОНЕЦ
        |		КОГДА ЗакрытиеЗаказовЗаказы.Отклонить
		// --Задача № 3475
		|			ТОГДА 305
        //|			ТОГДА 304
        |		ИНАЧЕ 401
        |	КОНЕЦ,
        |	ЗакрытиеЗаказовЗаказы.Ссылка,
        |	ЕСТЬNULL(ЗакрытыеЗаказы.Реализация, ИСТИНА) = ИСТИНА,
        |	ЕСТЬNULL(ЗакрытиеЗаказовЗаказы.ПредварительноеЗакрытие, 0),
        |	ЗакрытиеЗаказовЗаказы.ТерминалДоставки,
        |	ЗакрытиеЗаказовЗаказы.Реализация.Номер,
        |	ЗакрытиеЗаказовЗаказы.ПричинаОтказа //CeHbKA #3227 24.06.2019
        |ИЗ
        |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
        |		ПО (ВЫРАЗИТЬ(ЗакрытиеЗаказовЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка = ВЫРАЗИТЬ(ЗакрытыеЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка)
        |ГДЕ
        |	ЗакрытиеЗаказовЗаказы.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
        |	И (ЗакрытиеЗаказовЗаказы.Закрыть
        |			ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить)
        |	И ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    
    //РезультатЗапроса = Запрос.Выполнить();
    //
    //ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

Функция НайтиДанныеПоТарифам(Струк)
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |   ТарифыРасчетаЗПСрезПоследних.Период,
        |   ТарифыРасчетаЗПСрезПоследних.ВидТарифаРасчетаЗП,
        |   ТарифыРасчетаЗПСрезПоследних.ТипЭкипажа,
        |   ТарифыРасчетаЗПСрезПоследних.УчастникЭкипажа,
        |   ТарифыРасчетаЗПСрезПоследних.КатегорияДоставки,
        |   ТарифыРасчетаЗПСрезПоследних.ТипЗаказа,
        |   ТарифыРасчетаЗПСрезПоследних.ТипТранспорта,
        |   ТарифыРасчетаЗПСрезПоследних.ОбъёмЗабора КАК ОбъёмЗабора,
        |   ТарифыРасчетаЗПСрезПоследних.СтоимостьДоМКАД,
        |   ТарифыРасчетаЗПСрезПоследних.СтоимостьЗаМКАД,
        |   ТарифыРасчетаЗПСрезПоследних.СтоимостьЧас,
        |   ТарифыРасчетаЗПСрезПоследних.МинимальнаяСтоимость,
        |   ТарифыРасчетаЗПСрезПоследних.СтавкаФрахт
        |ИЗ
        |   РегистрСведений.ТарифыРасчетаЗП.СрезПоследних(&Период, ) КАК ТарифыРасчетаЗПСрезПоследних
        |ГДЕ
        |   ТарифыРасчетаЗПСрезПоследних.ВидТарифаРасчетаЗП = &ВидТарифаРасчетаЗП
        |   И ТарифыРасчетаЗПСрезПоследних.ТипЭкипажа = &ТипЭкипажа
        |   И ТарифыРасчетаЗПСрезПоследних.УчастникЭкипажа = &УчастникЭкипажа
        |   И ТарифыРасчетаЗПСрезПоследних.ТипЗаказа = &ТипЗаказа
        |   И ТарифыРасчетаЗПСрезПоследних.ТипТранспорта = &ТипТранспорта
		//|   И ТарифыРасчетаЗПСрезПоследних.ОбъёмЗабора <= &ОбъёмЗабора
		|   И &УСЛОВИЕ_ОБЪЕМ
        |
        |УПОРЯДОЧИТЬ ПО
        |   ОбъёмЗабора УБЫВ
        |АВТОУПОРЯДОЧИВАНИЕ";
		
	// Михушкин - костыль для заборов --->> 
	Если Струк.ТипЗаказа = Перечисления.ТипыЗаказов.Забор И Струк.ОбъёмЗабора = 0 Тогда		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УСЛОВИЕ_ОБЪЕМ", "ТарифыРасчетаЗПСрезПоследних.ОбъёмЗабора <= &ОбъёмЗабора");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УСЛОВИЕ_ОБЪЕМ", "ТарифыРасчетаЗПСрезПоследних.ОбъёмЗабора < &ОбъёмЗабора");	
	КонецЕсли;
	// <<--- Михушкин 
		
    Запрос.УстановитьПараметр("ВидТарифаРасчетаЗП", Струк.ВидТарифаРасчетаЗП);
    Запрос.УстановитьПараметр("ОбъёмЗабора", Струк.ОбъёмЗабора);
    Запрос.УстановитьПараметр("Период", КонецДня(ДатаЗакрытия));
    Запрос.УстановитьПараметр("ТипЗаказа", Струк.ТипЗаказа);
    Запрос.УстановитьПараметр("ТипТранспорта", Струк.ТипТранспорта);
    Запрос.УстановитьПараметр("ТипЭкипажа", Струк.ТипЭкипажа);
    Запрос.УстановитьПараметр("УчастникЭкипажа", Струк.УчастникЭкипажа);
    
    Возврат Запрос.Выполнить().Выгрузить();

	

КонецФункции // НайтиДанныеПоТарифам()

Функция НайтиДанныеПоТарифамНаемники(Струк)
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.Период,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.ВидТарифаРасчетаЗП,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.ТипЭкипажа,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.УчастникЭкипажа,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.КатегорияДоставки,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.ТипЗаказа,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.ТипТранспорта,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.ОбъёмЗабора КАК ОбъёмЗабора,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.СтоимостьДоМКАД,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.СтоимостьЗаМКАД,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.СтоимостьЧас,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.МинимальнаяСтоимость,
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.СтавкаФрахт
        |ИЗ
        |   РегистрСведений.ТарифыРасчетаЗПНаемники.СрезПоследних(&Период, ) КАК ТарифыРасчетаЗПНаемникиСрезПоследних
        |ГДЕ
        |   ТарифыРасчетаЗПНаемникиСрезПоследних.ВидТарифаРасчетаЗП = &ВидТарифаРасчетаЗП
        |   И ТарифыРасчетаЗПНаемникиСрезПоследних.ТипЭкипажа = &ТипЭкипажа
        |   И ТарифыРасчетаЗПНаемникиСрезПоследних.УчастникЭкипажа = &УчастникЭкипажа
        |   И ТарифыРасчетаЗПНаемникиСрезПоследних.ТипЗаказа = &ТипЗаказа
        |   И ТарифыРасчетаЗПНаемникиСрезПоследних.ТипТранспорта = &ТипТранспорта
		//|   И ТарифыРасчетаЗПНаемникиСрезПоследних.ОбъёмЗабора <= &ОбъёмЗабора
		|   И &УСЛОВИЕ_ОБЪЕМ
        |
        |УПОРЯДОЧИТЬ ПО
        |   ОбъёмЗабора УБЫВ
        |АВТОУПОРЯДОЧИВАНИЕ";
		
		
	// Михушкин - костыль для заборов --->> 
	Если Струк.ТипЗаказа = Перечисления.ТипыЗаказов.Забор И Струк.ОбъёмЗабора = 0 Тогда		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УСЛОВИЕ_ОБЪЕМ", "ТарифыРасчетаЗПНаемникиСрезПоследних.ОбъёмЗабора <= &ОбъёмЗабора");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УСЛОВИЕ_ОБЪЕМ", "ТарифыРасчетаЗПНаемникиСрезПоследних.ОбъёмЗабора < &ОбъёмЗабора");	
	КонецЕсли;
	// <<--- Михушкин
	
    Запрос.УстановитьПараметр("ВидТарифаРасчетаЗП", Струк.ВидТарифаРасчетаЗП);
    Запрос.УстановитьПараметр("ОбъёмЗабора", Струк.ОбъёмЗабора);
    Запрос.УстановитьПараметр("Период", КонецДня(ДатаЗакрытия));
    Запрос.УстановитьПараметр("ТипЗаказа", Струк.ТипЗаказа);
    Запрос.УстановитьПараметр("ТипТранспорта", Струк.ТипТранспорта);
    Запрос.УстановитьПараметр("ТипЭкипажа", Струк.ТипЭкипажа);
    Запрос.УстановитьПараметр("УчастникЭкипажа", Струк.УчастникЭкипажа);
    
    Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // НайтиДанныеПоТарифам()

Функция ПроверитьНаДублиЗаказов()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ЗакрытиеЗаказовЗаказы.Ссылка,
    |   ЗакрытиеЗаказовЗаказы.Номер,
    |   СУММА(ВЫБОР
    |           КОГДА ЗакрытиеЗаказовЗаказы.Закрыть
    |                   ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить
    |               ТОГДА 1
    |           ИНАЧЕ 0
    |       КОНЕЦ) КАК Количество
    |ПОМЕСТИТЬ ВТ
    |ИЗ
    |   Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
    |ГДЕ
    |   ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
    |
    |СГРУППИРОВАТЬ ПО
    |   ЗакрытиеЗаказовЗаказы.Ссылка,
    |   ЗакрытиеЗаказовЗаказы.Номер
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   ВТ.Ссылка,
    |   ВТ.Номер,
    |   ВТ.Количество
    |ИЗ
    |   ВТ КАК ВТ
    |ГДЕ
    |   ВТ.Количество > 1
    |АВТОУПОРЯДОЧИВАНИЕ";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда
		Сообщить("Дубль заказа " + ВыборкаДетальныеЗаписи.Номер, СтатусСообщения.ОченьВажное);
        Возврат Истина;
    Иначе
        Возврат Ложь;
    КонецЕсли;
КонецФункции // ПроверитьНаДублиЗаказов()

#КонецОбласти 

#Область PKV

Процедура ЗаписатьПричинуОтклоненияЗаказаВСистеме(РеализацияДок, ПричинаОтклонения) Экспорт
	
	Если ЗначениеЗаполнено(РеализацияДок) Тогда
		Если ТипЗнч(РеализацияДок) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			
			Набор = РегистрыСведений.ДополнительныеПараметрыЗаказа.СоздатьНаборЗаписей();
			Набор.Отбор.Заказ.Установить(РеализацияДок);
			Набор.Прочитать();
			Если Набор.Количество() > 0 Тогда
				Запись = Набор[0];
				Запись.ПричинаОтклоненияЗаказа = ПричинаОтклонения;
			Иначе
				НоваяЗапись = Набор.Добавить();
				НоваяЗапись.Период = Дата;
				НоваяЗапись.Заказ = РеализацияДок;
				НоваяЗапись.ПричинаОтклоненияЗаказа = ПричинаОтклонения;
			КонецЕсли;
			Набор.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьОтказныеПозицииИз1СВАдминку();
	
	// Задача № 3153
	//Запрос = Новый Запрос(
	//"ВЫБРАТЬ
	//|	ЗакрытиеЗаказовТовары.Реализация.Номер КАК НомерЗаказа,
	//|	ЗакрытиеЗаказовТовары.КоличествоВозвращено + ЗакрытиеЗаказовТовары.Недовложение КАК Количество,
	//|	ЗакрытиеЗаказовТовары.Цена КАК Цена,
	//|	ЗакрытиеЗаказовТовары.Номенклатура.Код КАК КодТовара,
	//|	ЗакрытиеЗаказовТовары.ШтрихкодНоменклатуры.Код КАК ШтрихкодНоменклатуры
	//|ИЗ
	//|	Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
	//|ГДЕ
	//|	ЗакрытиеЗаказовТовары.Ссылка = &Ссылка
	//|	И (ЗакрытиеЗаказовТовары.КоличествоВозвращено > 0
	//|			ИЛИ ЗакрытиеЗаказовТовары.Недовложение > 0)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	НомерЗаказа");
	
	//// ++Конкретизация запроса по Задача № 3153 от 16.08.2019
	//Запрос = Новый Запрос(
	//"ВЫБРАТЬ
	//|	ЗакрытиеЗаказовТовары.Реализация.Номер КАК НомерЗаказа,
	//|	ЗакрытиеЗаказовТовары.КоличествоВозвращено + ЗакрытиеЗаказовТовары.Недовложение КАК Количество,
	//|	ЗакрытиеЗаказовТовары.Цена КАК Цена,
	//|	ЗакрытиеЗаказовТовары.Номенклатура.Код КАК КодТовара,
	//|	ЗакрытиеЗаказовТовары.ШтрихкодНоменклатуры.Код КАК ШтрихкодНоменклатуры,
	//|	ЗакрытиеЗаказовЗаказы.Реализация КАК Реализация,
	//|	ЗакрытиеЗаказовЗаказы.Закрыть КАК Закрыть
	//|ИЗ
	//|	Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	//|		ПО ЗакрытиеЗаказовТовары.Реализация = ЗакрытиеЗаказовЗаказы.Реализация
	//|			И ЗакрытиеЗаказовТовары.Ссылка = ЗакрытиеЗаказовЗаказы.Ссылка
	//|ГДЕ
	//|	ЗакрытиеЗаказовТовары.Ссылка = &Ссылка
	//|	И (ЗакрытиеЗаказовТовары.КоличествоВозвращено > 0
	//|			ИЛИ ЗакрытиеЗаказовТовары.Недовложение > 0)
	//|	И ЗакрытиеЗаказовЗаказы.Закрыть
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	НомерЗаказа");
	//// --Конкретизация запроса по Задача № 3153 от 16.08.2019
	
	//Асеев 11.12.2020 (Задача № 3761)>>> вернуть условие на Закрыть = Истина, добавить Отклонить = Истина
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЗакрытиеЗаказовТовары.Реализация ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.РеализацияТоваровУслуг).Номер
	|		КОГДА ЗакрытиеЗаказовТовары.Реализация ССЫЛКА Документ.ЗаборТовара
	|			ТОГДА ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.ЗаборТовара).Номер
	|		КОГДА ЗакрытиеЗаказовТовары.Реализация ССЫЛКА Документ.Фрахт
	|			ТОГДА ВЫРАЗИТЬ(ЗакрытиеЗаказовТовары.Реализация КАК Документ.Фрахт).Номер
	|		ИНАЧЕ ЗакрытиеЗаказовТовары.Реализация.Номер
	|	КОНЕЦ КАК НомерЗаказа,
	|	ЗакрытиеЗаказовТовары.КоличествоВозвращено + ЗакрытиеЗаказовТовары.Недовложение КАК Количество,
	|	ЗакрытиеЗаказовТовары.Цена КАК Цена,
	|	ЗакрытиеЗаказовТовары.Номенклатура.Код КАК КодТовара,
	|	ЗакрытиеЗаказовТовары.ШтрихкодНоменклатуры.Код КАК ШтрихкодНоменклатуры,
	|	ЗакрытиеЗаказовТовары.КодМаркировки КАК КодМаркировки
	|ИЗ
	|	Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	|		ПО (ЗакрытиеЗаказовТовары.Ссылка = &Ссылка)
	|			И (ЗакрытиеЗаказовТовары.КоличествоВозвращено > 0
	|				ИЛИ ЗакрытиеЗаказовТовары.Недовложение > 0)
	|			И (ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка)
	|			И (ЗакрытиеЗаказовЗаказы.Закрыть
	|				ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить)
	|			И ЗакрытиеЗаказовТовары.Реализация = ЗакрытиеЗаказовЗаказы.Реализация
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерЗаказа";
	////+Степанов Задача № 3761
	//Запрос = Новый Запрос(
	//"ВЫБРАТЬ
	//|	ЗакрытиеЗаказовТовары.Реализация.Номер КАК НомерЗаказа,
	//|	ЗакрытиеЗаказовТовары.КоличествоВозвращено + ЗакрытиеЗаказовТовары.Недовложение КАК Количество,
	//|	ЗакрытиеЗаказовТовары.Цена КАК Цена,
	//|	ЗакрытиеЗаказовТовары.Номенклатура.Код КАК КодТовара,
	//|	ЗакрытиеЗаказовТовары.ШтрихкодНоменклатуры.Код КАК ШтрихкодНоменклатуры,
	//|	ЗакрытиеЗаказовЗаказы.Реализация КАК Реализация,
	//|	ЗакрытиеЗаказовЗаказы.Закрыть КАК Закрыть,
	//|	ЗакрытиеЗаказовТовары.КодМаркировки КАК КодМаркировки
	//|ИЗ
	//|	Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	//|		ПО ЗакрытиеЗаказовТовары.Реализация = ЗакрытиеЗаказовЗаказы.Реализация
	//|			И ЗакрытиеЗаказовТовары.Ссылка = ЗакрытиеЗаказовЗаказы.Ссылка
	//|ГДЕ
	//|	ЗакрытиеЗаказовТовары.Ссылка = &Ссылка
	//|	И (ЗакрытиеЗаказовТовары.КоличествоВозвращено > 0
	//|			ИЛИ ЗакрытиеЗаказовТовары.Недовложение > 0)
	////|	И ЗакрытиеЗаказовЗаказы.Закрыть
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	НомерЗаказа");
	////-Степанов
	//Асеев 11.12.2020 (Задача № 3761)<<<
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить().Выгрузить();

	ДатаСобытия = ТекущаяДата();
	
	МассивПараметров = Новый Массив;
	
	СчКОтправке = 0;
	//СтПакетов = 0;  // для отладки с сохранением файлов json
	Для Каждого СтрТовар Из Результат Цикл
		
		СчКОтправке = СчКОтправке + 1;
		
		//+Степанов Задача № 3761
		//ПараметрыОтказнойПозиции = ТарификацияУслугСервер.ПараметрыОтказнойПозиции(
		//Число(СтрТовар.НомерЗаказа),
		//Число(СтрТовар.КодТовара),
		//СтрТовар.Количество,
		//СтрТовар.Цена,
		//ДатаСобытия,
		//СтрТовар.ШтрихкодНоменклатуры);
		ПараметрыОтказнойПозиции = ТарификацияУслугСервер.ПараметрыОтказнойПозиции(
		Число(СтрТовар.НомерЗаказа),
		Число(СтрТовар.КодТовара),
		СтрТовар.Количество,
		СтрТовар.Цена,
		ДатаСобытия,
		СтрТовар.ШтрихкодНоменклатуры,
		СтрТовар.КодМаркировки);
	    //-Степанов Задача № 3761
		
		МассивПараметров = ТарификацияУслугСервер.ДобавитьПараметрыОтказныхПозиций(ПараметрыОтказнойПозиции, МассивПараметров);
		
		Если СчКОтправке >= 800 Тогда
			//СтПакетов = СтПакетов + 1;   // для отладки с сохранением файлов json
			ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetRefusedOrderItemsResult, новый Структура("orders", МассивПараметров));
			МассивПараметров = Новый Массив;
			СчКОтправке = 0;	
		КонецЕслИ;	
		
	КонецЦикла;
		
	Если СчКОтправке > 0 Тогда
		//СтПакетов = СтПакетов + 1;  // для отладки с сохранением файлов json
		ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetRefusedOrderItemsResult, новый Структура("orders", МассивПараметров));
	КонецЕслИ;			
	// Задача № 3153
	//////
	// Отключено в рамках Задача № 3153
	////УдалитьОтказныеПозицииИз1СВАдминке();
	////
	////Запрос = Новый Запрос(
	////"ВЫБРАТЬ
	////|	ЗакрытиеЗаказовТовары.Реализация.Номер КАК НомерЗаказа,
	////|	ЗакрытиеЗаказовТовары.КоличествоВозвращено + ЗакрытиеЗаказовТовары.Недовложение КАК Количество,
	////|	ЗакрытиеЗаказовТовары.Цена КАК Цена,
	////|	ЗакрытиеЗаказовТовары.Номенклатура.Код КАК КодТовара,
	////|	ЗакрытиеЗаказовТовары.ШтрихкодНоменклатуры.Код КАК ШтрихкодНоменклатуры
	////|ИЗ
	////|	Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
	////|ГДЕ
	////|	ЗакрытиеЗаказовТовары.Ссылка = &Ссылка
	////|	И (ЗакрытиеЗаказовТовары.КоличествоВозвращено > 0
	////|			ИЛИ ЗакрытиеЗаказовТовары.Недовложение > 0)
	////|
	////|УПОРЯДОЧИТЬ ПО
	////|	НомерЗаказа");
	////
	////Запрос.УстановитьПараметр("Ссылка", Ссылка);
	////
	////Результат = Запрос.Выполнить().Выгрузить();
	////
	////НовыеValues = "";
	////
	//////+++ БАО 15.09.2017 №1268
	////
	////
	////	//Для Каждого СтрТовар Из Результат Цикл
	////	//	
	////	//	НовыеValues = НовыеValues +
	////	//	",(GETDATE()," 
	////	//	+ Строка(СтрТовар.Количество)  + "," 
	////	//	+ СокрЛП(СтрТовар.НомерЗаказа) + "," 
	////	//	+ Формат(СтрТовар.Цена,"ЧРД=.; ЧН=; ЧГ=")  + "," 
	////	//	+ СокрЛП(СтрТовар.КодТовара)   + ")";
	////	//	
	////	//КонецЦикла;
	////	//Длина = СтрДлина(НовыеValues); 
	////	//НовыеValues = Сред(НовыеValues,2,Длина);
	////	//
	////	//ТекстЗапроса = "
	////	//|DECLARE @refusedOrderItems TRefusedOrderItems
	////	//|INSERT INTO @refusedOrderItems (complDate,count,orderId,price,skuId) VALUES " + НовыеValues +"
	////	//|EXEC import_setRefusedOrderItems @refusedOrderItems";
	////	//
	////	//Если Результат.Количество() > 0 Тогда		
	////	//	Попытка
	////	//		Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();	
	////	//		Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
	////	//	Исключение
	////	//		Сообщить(ОписаниеОшибки());				
	////	//	КонецПопытки;
	////	//КонецЕсли;
	////
	////Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
	////
	////Сч = 0;
	////
	////Для Каждого СтрТовар Из Результат Цикл
	////	
	////	Если Сч > 800 Тогда
	////		
	////		ТекстЗапроса = "
	////		|DECLARE @refusedOrderItems TRefusedOrderItems
	////		|INSERT INTO @refusedOrderItems (complDate,count,orderId,price,skuId) VALUES " + НовыеValues +"
	////		|EXEC import_setRefusedOrderItems @refusedOrderItems";
	////		
	////		Если Результат.Количество() > 0 Тогда		
	////			Попытка
	////				Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
	////			Исключение
	////				Сообщить(ОписаниеОшибки());				
	////			КонецПопытки;
	////		КонецЕсли;
	////		
	////		НовыеValues = "";
	////		
	////		Сч = 0;
	////		
	////	КонецЕсли;	
	////	
	////	НовыеValues = НовыеValues +
	////	",(GETDATE()," 
	////	+ СтрЗаменить(Строка(СтрТовар.Количество), Символы.НПП, "")  + "," 
	////	+ СокрЛП(СтрТовар.НомерЗаказа) + "," 
	////	+ Формат(СтрТовар.Цена,"ЧРД=.; ЧН=; ЧГ=")  + "," 
	////	+ СокрЛП(СтрТовар.КодТовара)   + ")";
	////	
	////	Сч = Сч + 1;
	////	
	////КонецЦикла;
	////
	////// МАС - 18.09.2017 - избавляемся от запятой --->> 	
	////Длина = СтрДлина(НовыеValues); 
	////НовыеValues = Сред(НовыеValues,2,Длина);
	////// <<--- МАС
	////
	////
	////Если Сч > 0 Тогда
	////	
	////	ТекстЗапроса = "
	////	|DECLARE @refusedOrderItems TRefusedOrderItems
	////	|INSERT INTO @refusedOrderItems (complDate,count,orderId,price,skuId) VALUES " + НовыеValues +"
	////	|EXEC import_setRefusedOrderItems @refusedOrderItems";
	////	
	////	Если Результат.Количество() > 0 Тогда		
	////		Попытка
	////			Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
	////		Исключение
	////			Сообщить(ОписаниеОшибки());				
	////		КонецПопытки;
	////	КонецЕсли;
	////	
	////КонецЕсли;	
	////
	////Попытка	
	////	
	////	Если Соединение <> Неопределено Тогда
	////		
	////		Евген.ОтключитьсяОтADO(Соединение);
	////		
	////	КонецЕсли;
	////	
	////Исключение
	////КонецПопытки;
	////
	//////--- БАО 15.09.2017 №1268
	
КонецПроцедуры

Процедура УдалитьОтказныеПозицииИз1СВАдминке()
	
	//Запрос = Новый Запрос(
	//"ВЫБРАТЬ
	//|	ЗакрытиеЗаказовТовары.Реализация.Номер КАК НомерЗаказа,
	//|	ЗакрытиеЗаказовТовары.КоличествоВозвращено + ЗакрытиеЗаказовТовары.Недовложение КАК Количество,
	//|	ЗакрытиеЗаказовТовары.Цена КАК Цена,
	//|	ЗакрытиеЗаказовТовары.Номенклатура.Код КАК КодТовара
	//|ИЗ
	//|	Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
	//|ГДЕ
	//|	ЗакрытиеЗаказовТовары.Ссылка = &Ссылка
	//|	И (ЗакрытиеЗаказовТовары.КоличествоВозвращено > 0
	//|			ИЛИ ЗакрытиеЗаказовТовары.Недовложение > 0)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	НомерЗаказа");
	
	// ++Конкретизация запроса по Задача № 3153 от 16.08.2019
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗакрытиеЗаказовТовары.Реализация.Номер КАК НомерЗаказа,
	|	ЗакрытиеЗаказовТовары.КоличествоВозвращено + ЗакрытиеЗаказовТовары.Недовложение КАК Количество,
	|	ЗакрытиеЗаказовТовары.Цена КАК Цена,
	|	ЗакрытиеЗаказовТовары.Номенклатура.Код КАК КодТовара,
	|	ЗакрытиеЗаказовТовары.ШтрихкодНоменклатуры.Код КАК ШтрихкодНоменклатуры,
	|	ЗакрытиеЗаказовЗаказы.Реализация КАК Реализация,
	|	ЗакрытиеЗаказовЗаказы.Закрыть КАК Закрыть
	|ИЗ
	|	Документ.ЗакрытиеЗаказов.Товары КАК ЗакрытиеЗаказовТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	|		ПО ЗакрытиеЗаказовТовары.Реализация = ЗакрытиеЗаказовЗаказы.Реализация
	|			И ЗакрытиеЗаказовТовары.Ссылка = ЗакрытиеЗаказовЗаказы.Ссылка
	|ГДЕ
	|	ЗакрытиеЗаказовТовары.Ссылка = &Ссылка
	|	И (ЗакрытиеЗаказовТовары.КоличествоВозвращено > 0
	|			ИЛИ ЗакрытиеЗаказовТовары.Недовложение > 0)
	|	И ЗакрытиеЗаказовЗаказы.Закрыть
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерЗаказа");
	// --Конкретизация запроса по Задача № 3153 от 16.08.2019

	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	НовыеValues = "";
	
	Для Каждого СтрТовар Из Результат Цикл
		
		НовыеValues = НовыеValues + ",(" + СокрЛП(СтрТовар.НомерЗаказа) + ")";
		
	КонецЦикла;
	Длина = СтрДлина(НовыеValues); 
	НовыеValues = Сред(НовыеValues,2,Длина);
	
	ТекстЗапроса = "
	|DECLARE @orders TOrder
	|INSERT INTO @orders (orderID)  VALUES " + НовыеValues +"
	|EXEC import_deleteRefusedOrderItems @orders";
	
	Если Результат.Количество() > 0 Тогда		
		Попытка
			Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();	
			Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
		Исключение
			Сообщить(ОписаниеОшибки());				
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#Область MAS

// Заполнение РС РейсыПоЗаказам для статистики выполнения заказов
Процедура РейсыПоЗаказам() Экспорт

	ТЗ = РейсыПоЗаказам.Выгрузить();
	ТЗ.Колонки.Добавить("Период");
	
	//Асеев 07.12.2023 (Задача № 5185)>>>
	ТЗ.Колонки.Добавить("ВодительРесурс");
	ТЗ.Колонки.Добавить("ЭкспедиторРесурс");
	ТЗ.Колонки.Добавить("ТранспортРесурс");
	//Асеев 07.12.2023 (Задача № 5185)<<<
	
	МасУдалить = Новый массив;
	
	Для каждого Стр Из ТЗ Цикл	
		Най = Заказы.НайтиСтроки(Новый Структура("Реализация", Стр.Заказ));
		Если Най.Количество() И НЕ Най[0].Закрыть И НЕ Най[0].Отклонить Тогда
			МасУдалить.Добавить(Стр);
		КонецЕсли;
		//Стр.Период = Стр.ОтчетВодителя.Дата;				
		Стр.Период = ДатаЗакрытия;
		
		//Асеев 07.12.2023 (Задача № 5185)>>>
		Стр.ВодительРесурс = Стр.Водитель;
		Стр.ЭкспедиторРесурс = Стр.Экспедитор;
		Стр.ТранспортРесурс = Стр.Транспорт;
		//Асеев 07.12.2023 (Задача № 5185)<<<
	КонецЦикла;	
	
	Для каждого СтрУдалить Из МасУдалить Цикл		
		ТЗ.Удалить(СтрУдалить);			
	КонецЦикла;
	
	//Асеев 05.12.2023 (Задача № 5179)>>>
	ТЗ.Колонки.Добавить("Регион");
	ТЗ.ЗаполнитьЗначения(ТерминалДоставки, "Регион");
	//Асеев 05.12.2023 (Задача № 5179)<<<

	Движения.РейсыПоЗаказам.Записывать = Истина;	
	Движения.РейсыПоЗаказам.Загрузить(ТЗ);
	
	
	//// Сормируем список Заказов из документа
	//СписокЗаказов = Новый СписокЗначений;
	//Для Каждого Тек Из Заказы Цикл
	//	Если Тек.Закрыть Или Тек.Отклонить Тогда   		
	//		Если ТипЗнч(Тек.Реализация.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда				
	//			СписокЗаказов.Добавить(Тек.Реализация.Ссылка);  								
	//		КонецеСли;	
	//	КонецеСли;	
	//КонецЦикла;
	//	
	//
	//// Получаем запросом все записи с регистратором Отчет Водителя из РС СостоянияЗаказов	
	//Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	//                      |	СостоянияЗаказов.Заказ КАК Заказ,
	//                      |	СостоянияЗаказов.Регистратор,
	//                      |	СостоянияЗаказов.РезультатДоставки,
	//                      |	СостоянияЗаказов.ПричинаНеВыполнения,
	//                      |	СостоянияЗаказов.ПричинаОтказа,
	//                      |	ВЫРАЗИТЬ(СостоянияЗаказов.Регистратор КАК Документ.новаОтчетВодителя).Транспорт КАК Транспорт,
	//                      |	СостоянияЗаказов.ПричинаОтказа.СторонаПретензии КАК СторонаПретензии,
	//                      |	ВЫРАЗИТЬ(СостоянияЗаказов.Регистратор КАК Документ.новаОтчетВодителя).Водитель КАК Водитель,
	//                      |	ВЫРАЗИТЬ(СостоянияЗаказов.Регистратор КАК Документ.новаОтчетВодителя).Дата КАК Дата,
	//                      |	ВЫРАЗИТЬ(СостоянияЗаказов.Регистратор КАК Документ.новаОтчетВодителя).Экспедитор КАК Экспедитор
	//                      |ИЗ
	//                      |	РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	//                      |ГДЕ
	//                      |	СостоянияЗаказов.Регистратор ССЫЛКА Документ.новаОтчетВодителя
	//                      |	И СостоянияЗаказов.Заказ В(&СписокЗаказов)");
	//Запрос.УстановитьПараметр("СписокЗаказов", СписокЗаказов);					  
	//РезГруппировкаЗаказ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
	//Запрос = Новый Запрос();
	//Запрос.Текст = mas.ВернутьТекстЗапросаПоездкиПоЗакрытию();
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//РезГруппировкаЗаказ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	// Делаем движения по результату запроса
	//Пока РезГруппировкаЗаказ.Следующий() Цикл // группировка
		
	//Рез = Запрос.Выполнить().Выбрать();	
	
	//Пока Рез.Следующий() Цикл
	//	
	//	Движение = Движения.РейсыПоЗаказам.Добавить();
	//	Движение.Регистратор = Ссылка;
	//	//Движение.Период = Дата;
	//	Движение.Период = Рез.Дата;
	//	Движение.Заказ = Рез.Заказ;
	//	Движение.ОтчетВодителя = Рез.Регистратор;
	//	Движение.РезультатДоставки = Рез.РезультатДоставки;
	//	Движение.ПричинаНеВыполненияДоставки = Рез.ПричинаНеВыполнения;
	//	Движение.ПричинаОтказаПереноса = Рез.ПричинаОтказа;
	//	Движение.Водитель = Рез.Водитель;
	//	Движение.Экспедитор = Рез.Экспедитор;
	//	Движение.Транспорт = Рез.Транспорт;
	//	Движение.СторонаПретензии = Рез.СторонаПретензии;  			
	//
	//КонецЦикла;		
	
	//КонецЦикла;
		
КонецПроцедуры


//Процедура БылПереносСЗаездом(ДокРеализация)

//	
//	ПараметрыОтбора = новый Структура();
//	ПараметрыОтбора.Вставить("Заказ", ДокРеализация);
//	ПараметрыОтбора.Вставить("ПричинаНеВыполненияДоставки", Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом);

//	Най = РейсыПоЗаказам.НайтиСтроки(ПараметрыОтбора);
//	
//	Для Каждого Стр из Най Цикл	
//		Стр.БылПереносСЗаездом = Истина;			
//	КонецЦикла;
//	 	

//КонецПроцедуры


Процедура ЗаполнитьТЧРейсыПоЗаказам() Экспорт
	
	//Асеев 05.12.2023 (Задача № 5179)>>>
	//Асеев 05.12.2023 (Задача № 5179)<<<
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокЗаказов", Заказы.ВыгрузитьКолонку("Реализация"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.Транспорт КАК Транспорт,
	|	МАКСИМУМ(ДополнительныеПараметрыТранспорта.Период) КАК МаксПериод
	|ПОМЕСТИТЬ ВТ_ПериодыТранспорта
	|ИЗ
	|	РегистрСведений.ДополнительныеПараметрыТранспорта КАК ДополнительныеПараметрыТранспорта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВложенныйЗапрос.Период КАК Период,
	|			ВложенныйЗапрос.Транспорт КАК Транспорт
	|		ИЗ
	|			(ВЫБРАТЬ
	|				СостоянияЗаказов.Период КАК Период,
	|				новаОтчетВодителя.Транспорт КАК Транспорт
	|			ИЗ
	|				РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|					ПО (СостоянияЗаказов.Заказ В (&СписокЗаказов))
	|						И СостоянияЗаказов.Регистратор = новаОтчетВодителя.Ссылка
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				СостоянияЗаказовРасширенный.Период,
	|				новаОтчетВодителя.Транспорт
	|			ИЗ
	|				РегистрСведений.СостоянияЗаказовРасширенный КАК СостоянияЗаказовРасширенный
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|					ПО (СостоянияЗаказовРасширенный.Заказ В (&СписокЗаказов))
	|						И СостоянияЗаказовРасширенный.Регистратор = новаОтчетВодителя.Ссылка) КАК ВложенныйЗапрос) КАК ВложенныйЗапрос
	|		ПО ДополнительныеПараметрыТранспорта.Период <= ВложенныйЗапрос.Период
	|			И ДополнительныеПараметрыТранспорта.Транспорт = ВложенныйЗапрос.Транспорт
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Транспорт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияЗаказов.Заказ КАК Заказ,
	|	СостоянияЗаказов.Регистратор КАК ОтчетВодителя,
	|	СостоянияЗаказов.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказов.ПричинаНеВыполнения КАК ПричинаНеВыполненияДоставки,
	|	СостоянияЗаказов.ПричинаОтказа КАК ПричинаОтказаПереноса,
	|	ВЫРАЗИТЬ(СостоянияЗаказов.Регистратор КАК Документ.новаОтчетВодителя).Транспорт КАК Транспорт,
	|	СостоянияЗаказов.ПричинаОтказа.СторонаПретензии КАК СторонаПретензии,
	|	ВЫРАЗИТЬ(СостоянияЗаказов.Регистратор КАК Документ.новаОтчетВодителя).Водитель КАК Водитель,
	|	ВЫРАЗИТЬ(СостоянияЗаказов.Регистратор КАК Документ.новаОтчетВодителя).Экспедитор КАК Экспедитор,
	|	СостоянияЗаказов.Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка) КАК ТипЗаказа,
	|	СостоянияЗаказов.Рейс КАК Рейс,
	|	ДополнительныеПараметрыТранспорта.ФорматАвтотранспорта КАК ФорматАвтотранспорта,
	|	ВЫБОР
	|		КОГДА СостоянияЗаказов.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.Доставлен)
	|		КОГДА СостоянияЗаказов.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.ДоставленЧастично)
	|		КОГДА СостоянияЗаказов.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|				И СостоянияЗаказов.ПричинаНеВыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.ОтказСЗаездомОперативный)
	|		КОГДА СостоянияЗаказов.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|				И СостоянияЗаказов.ПричинаНеВыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.НеДоставлен)
	|		КОГДА СостоянияЗаказов.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|				И СостоянияЗаказов.ПричинаНеВыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносДоставки)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.Перенос)
	|		КОГДА СостоянияЗаказов.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|				И СостоянияЗаказов.ПричинаНеВыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносСЗаездом)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.ПереносСЗаездом)
	|	КОНЕЦ КАК СтатусДоставки,
	|	ДополнительныеПараметрыТранспорта.ЭтоШтатныйТранспорт КАК ЭтоШтатныйТранспорт
	|ИЗ
	|	РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыТранспорта КАК ВТ_ПериодыТранспорта
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыТранспорта КАК ДополнительныеПараметрыТранспорта
	|			ПО ВТ_ПериодыТранспорта.МаксПериод = ДополнительныеПараметрыТранспорта.Период
	|				И ВТ_ПериодыТранспорта.Транспорт = ДополнительныеПараметрыТранспорта.Транспорт
	|		ПО СостоянияЗаказов.Период = ВТ_ПериодыТранспорта.Период
	|			И (ВЫРАЗИТЬ(СостоянияЗаказов.Регистратор КАК Документ.новаОтчетВодителя).Транспорт = ВТ_ПериодыТранспорта.Транспорт)
	|ГДЕ
	|	СостоянияЗаказов.Заказ В(&СписокЗаказов)
	|	И СостоянияЗаказов.Регистратор ССЫЛКА Документ.новаОтчетВодителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияЗаказовРасширенный.Заказ КАК Заказ,
	|	СостоянияЗаказовРасширенный.Регистратор КАК ОтчетВодителя,
	|	СостоянияЗаказовРасширенный.РезультатДоставки КАК РезультатДоставки,
	|	СостоянияЗаказовРасширенный.ПричинаНеВыполнения КАК ПричинаНеВыполненияДоставки,
	|	СостоянияЗаказовРасширенный.ПричинаОтказа КАК ПричинаОтказа,
	|	ВЫРАЗИТЬ(СостоянияЗаказовРасширенный.Регистратор КАК Документ.новаОтчетВодителя).Транспорт КАК Транспорт,
	|	СостоянияЗаказовРасширенный.ПричинаОтказа.СторонаПретензии КАК СторонаПретензии,
	|	ВЫРАЗИТЬ(СостоянияЗаказовРасширенный.Регистратор КАК Документ.новаОтчетВодителя).Водитель КАК Водитель,
	|	ВЫРАЗИТЬ(СостоянияЗаказовРасширенный.Регистратор КАК Документ.новаОтчетВодителя).Экспедитор КАК Экспедитор,
	|	СостоянияЗаказовРасширенный.Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Забор) КАК ТипЗаказа,
	|	СостоянияЗаказовРасширенный.ПричинаНеВыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносСЗаездом) КАК БылПереносСЗаездом,
	|	СостоянияЗаказовРасширенный.Рейс КАК Рейс,
	|	ДополнительныеПараметрыТранспорта.ФорматАвтотранспорта КАК ФорматАвтотранспорта,
	|	ВЫБОР
	|		КОГДА СостоянияЗаказовРасширенный.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.Доставлен)
	|		КОГДА СостоянияЗаказовРасширенный.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.ДоставленЧастично)
	|		КОГДА СостоянияЗаказовРасширенный.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|				И СостоянияЗаказовРасширенный.ПричинаНеВыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.ОтказСЗаездомОперативный)
	|		КОГДА СостоянияЗаказовРасширенный.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|				И СостоянияЗаказовРасширенный.ПричинаНеВыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.НеДоставлен)
	|		КОГДА СостоянияЗаказовРасширенный.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|				И СостоянияЗаказовРасширенный.ПричинаНеВыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносДоставки)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.Перенос)
	|		КОГДА СостоянияЗаказовРасширенный.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|				И СостоянияЗаказовРасширенный.ПричинаНеВыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносСЗаездом)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.ПереносСЗаездом)
	|	КОНЕЦ КАК СтатусДоставки,
	|	ДополнительныеПараметрыТранспорта.ЭтоШтатныйТранспорт КАК ЭтоШтатныйТранспорт
	|ИЗ
	|	РегистрСведений.СостоянияЗаказовРасширенный КАК СостоянияЗаказовРасширенный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыТранспорта КАК ВТ_ПериодыТранспорта
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыТранспорта КАК ДополнительныеПараметрыТранспорта
	|			ПО ВТ_ПериодыТранспорта.МаксПериод = ДополнительныеПараметрыТранспорта.Период
	|				И ВТ_ПериодыТранспорта.Транспорт = ДополнительныеПараметрыТранспорта.Транспорт
	|		ПО СостоянияЗаказовРасширенный.Период = ВТ_ПериодыТранспорта.Период
	|			И (ВЫРАЗИТЬ(СостоянияЗаказовРасширенный.Регистратор КАК Документ.новаОтчетВодителя).Транспорт = ВТ_ПериодыТранспорта.Транспорт)
	|ГДЕ
	|	СостоянияЗаказовРасширенный.Заказ В(&СписокЗаказов)
	|	И СостоянияЗаказовРасширенный.Регистратор ССЫЛКА Документ.новаОтчетВодителя
	|	И СостоянияЗаказовРасширенный.Заказ ССЫЛКА Документ.ЗаборТовара";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	РезТЧ = РезультатПакета[1].Выгрузить();
	
	// грузим в ТЧ
	ПолучитьСтавкиПереноса(РезТЧ); // Муратов 02052017

	РейсыПоЗаказам.Загрузить(РезТЧ);
	
	Выборка = РезультатПакета[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(РейсыПоЗаказам.Добавить(), Выборка);
	КонецЦикла;

КонецПроцедуры

Процедура ПолучитьСтавкиПереноса(ТабЧасть)
	НачалоЗапроса = "DECLARE @t Torder   ";
	Стр = НачалоЗапроса;
	
	Для каждого СтрТ Из ТабЧасть Цикл
		Если СтрТ.ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
			Стр = Стр + "                                                                                                                                                                                                                      
			|INSERT INTO @t ([orderid]) VALUES (" + СокрЛП(СтрТ.Заказ.Номер) + ")";	
		КонецЕсли;
	КонецЦикла;
	 
	Если Стр <> НачалоЗапроса Тогда
		ТабЧасть.Колонки.Добавить("СтавкаПереносаСЗаездом");
		ТабЧасть.Колонки.Добавить("ИдПоездкиВАдминке");
		ТекстЗапроса = Стр + "
			|EXEC dbo.sp_calcTariffTrip @t
			|";
		R = Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Евген.СоздатьПодключениеКИнтернетМагазину());
		Если R = Неопределено Тогда
			//Сообщить("Не найденно ставок переноса"); // Или ошибка запроса
			Возврат;
		КонецЕсли;
		Таб = Евген.СоздатьТаблицу(R, "orderid_Ч, tripid_Ч, serviceDC_Ч");
		Для каждого Стр из Таб Цикл
			НомерМ = may.ПодготовитьСтрокуПодДлинуНомераДокумента(СтрЗаменить(Стр.orderid_Ч, Символы.НПП, ""));
			Для каждого СтрТ Из ТабЧасть Цикл
				Если СтрТ.Заказ.Номер = НомерМ И СтрТ.ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
					Попытка						
						СтрТ.СтавкаПереносаСЗаездом = Число(СтрЗаменить(Стр.serviceDC_Ч, Символы.НПП, ""));		
					Исключение
					    ОпОш = ОписаниеОшибки();
						СтрТ.СтавкаПереносаСЗаездом = -1;
						#Если клиент Тогда
							Сообщить("" + ОпОш);		
						#КонецЕсли
					КонецПопытки;
					СтрТ.ИдПоездкиВАдминке = Число(СтрЗаменить(Стр.tripid_Ч, Символы.НПП, ""));
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли; 
КонецПроцедуры


Процедура ЗаполнитьТЧРасстояния()

	Расстояния.Очистить();
	
	СписокДоставок = Новый СписокЗначений;
	СписокЗаборов = Новый СписокЗначений;
	
	Для каждого Стр Из Заказы Цикл
		
		Если ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			
			СписокДоставок.Добавить(Стр.Реализация);
			
			Расстояние = Неопределено;
			ТочкаОтправления = Стр.Доставка.ТочкаОтправления.Адрес;
			ТочкаПрибытия    = Стр.Доставка.ТочкаПрибытия.Адрес;
			
			Если ЗначениеЗаполнено(ТочкаОтправления) И ЗначениеЗаполнено(ТочкаПрибытия) Тогда		
				Расстояние = mas.ВычислитьГеоРасстояние(Формат(ТочкаОтправления.Широта, "ЧЦ=9; ЧДЦ=6"), Формат(ТочкаОтправления.Долгота, "ЧЦ=9; ЧДЦ=6"), Формат(ТочкаПрибытия.Широта, "ЧЦ=9; ЧДЦ=6"), Формат(ТочкаПрибытия.Долгота, "ЧЦ=9; ЧДЦ=6"));			
			КонецЕсли;
			
			Если Расстояние <> Неопределено Тогда			
				НовСтр = Расстояния.Добавить();
				НовСтр.Заказ = Стр.Реализация;
				НовСтр.РезультатРасчета = Окр(Расстояние, 3);
				НовСтр.Расстояние = НовСтр.РезультатРасчета;
				
				НовСтр.ТипЗамераРасстояния = Перечисления.ТипыЗамераРасстояний.ПоПрямойОтБазы;
			Иначе
				//#Если Клиент Тогда
				//	Сообщить("");
				//#КонецЕсли	
			КонецЕсли;	
			
		ИначеЕсли ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.ЗаборТовара") Тогда
			
			СписокЗаборов.Добавить(Стр.Реализация);
			
			Расстояние = Неопределено;
			
			ТочкаОтправления = Стр.Реализация.ТерминалДоставки.Склад.ТочкаДоставки.Адрес;
			ТочкаПрибытия    = Стр.Реализация.ТочкаДоставки.Адрес;
			
			Если ЗначениеЗаполнено(ТочкаОтправления) И ЗначениеЗаполнено(ТочкаПрибытия) Тогда		
				Расстояние = mas.ВычислитьГеоРасстояние(Формат(ТочкаОтправления.Широта, "ЧЦ=9; ЧДЦ=6"), Формат(ТочкаОтправления.Долгота, "ЧЦ=9; ЧДЦ=6"), Формат(ТочкаПрибытия.Широта, "ЧЦ=9; ЧДЦ=6"), Формат(ТочкаПрибытия.Долгота, "ЧЦ=9; ЧДЦ=6"));			
			КонецЕсли;
			
			Если Расстояние <> Неопределено Тогда			
				НовСтр = Расстояния.Добавить();
				НовСтр.Заказ = Стр.Реализация;
				НовСтр.РезультатРасчета = Окр(Расстояние, 3);
				НовСтр.Расстояние = НовСтр.РезультатРасчета;

				НовСтр.ТипЗамераРасстояния = Перечисления.ТипыЗамераРасстояний.ПоПрямойОтБазы;
			Иначе
				//#Если Клиент Тогда
				//	Сообщить("");
				//#КонецЕсли	
			КонецЕсли;
			
		КонецЕсли;						
	КонецЦикла;	

	
	
	// Заполним расстояния по дорогам
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.РасстояниеОтБазыПоДорогам, 0) КАК Расстояние,
	                      |	ДополнительныеПараметрыЗаказа.Заказ
	                      |ИЗ
	                      |	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	                      |ГДЕ
	                      |	ДополнительныеПараметрыЗаказа.Заказ В(&СписокДоставок)");
	
	Запрос.УстановитьПараметр("СписокДоставок", СписокДоставок);					  
	Рез = Запрос.Выполнить().Выбрать();
	
	Пока Рез.Следующий() Цикл		
		Если ЗначениеЗаполнено(Рез.Расстояние) Тогда		
			НовСтр = Расстояния.Добавить();
			НовСтр.Заказ = Рез.Заказ;
			НовСтр.РезультатРасчета = Рез.Расстояние;
			НовСтр.Расстояние = НовСтр.РезультатРасчета;
			
			НовСтр.ТипЗамераРасстояния = Перечисления.ТипыЗамераРасстояний.ПоДорогамОтБазы;					
		КонецЕсли;					
	КонецЦикла;
	
	
	ЗапросЗаборы = Новый Запрос("ВЫБРАТЬ
	                      |	ЕСТЬNULL(ДополнительныеПараметрыЗабора.РасстояниеОтБазыПоДорогам, 0) КАК Расстояние,
	                      |	ДополнительныеПараметрыЗабора.Забор
	                      |ИЗ
	                      |	РегистрСведений.ДополнительныеПараметрыЗабора КАК ДополнительныеПараметрыЗабора
	                      |ГДЕ
	                      |	ДополнительныеПараметрыЗабора.Забор В(&СписокЗаборов)");
	
	ЗапросЗаборы.УстановитьПараметр("СписокЗаборов", СписокЗаборов);

	РезЗаборы = ЗапросЗаборы.Выполнить().Выбрать();
	
	Пока РезЗаборы.Следующий() Цикл		
		Если ЗначениеЗаполнено(РезЗаборы.Расстояние) Тогда		
			НовСтр = Расстояния.Добавить();
			НовСтр.Заказ = РезЗаборы.Забор;
			НовСтр.РезультатРасчета = РезЗаборы.Расстояние;
			НовСтр.Расстояние = НовСтр.РезультатРасчета;

			
			НовСтр.ТипЗамераРасстояния = Перечисления.ТипыЗамераРасстояний.ПоДорогамОтБазы;					
		КонецЕсли;					
	КонецЦикла;
	
	
КонецПроцедуры


Процедура РасчетРасстояний()

	Движения.РасчетРасстояний.Записывать = Истина;
	Движения.РасчетРасстояний.Очистить();
	
	ТЗРасстояния = Расстояния.Выгрузить();
	ТЗРасстояния.Свернуть("Заказ,ТипЗамераРасстояния,Расстояние,ПовышающийКоэффициент");
	
	Для каждого Стр Из ТЗРасстояния Цикл	
		
		НайСтр = Заказы.НайтиСтроки(Новый Структура("Реализация", стр.Заказ));
		
		//++Переварюха В.В. Задача № 3559 01.11.2019
		//Если НайСтр.Количество() И НайСтр[0].Закрыть Тогда
		Если НайСтр.Количество() Тогда
		//--Переварюха В.В. Задача № 3559 01.11.2019
			
			Движение = Движения.РасчетРасстояний.Добавить();
			Движение.Период = Дата;
			Движение.Регистратор = ЭтотОбъект.Ссылка;
			Движение.Заказ = Стр.Заказ;
			Движение.ТипЗамераРасстояния = Стр.ТипЗамераРасстояния;
			Движение.Расстояние = Стр.Расстояние;				
			
			// Якурнов 18.07.2018 14:50:16
			Движение.ПовышающийКоэффициент = Стр.ПовышающийКоэффициент;				
						
			Если ТипЗнч(стр.Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда	
				Если НайСтр.Количество() Тогда	
					Движение.ТочкаОтправления = НайСтр[0].Доставка.ТочкаОтправления;
					Движение.ТочкаПрибытия 	  = НайСтр[0].Доставка.ТочкаПрибытия;			
				КонецЕсли;			
			КонецЕсли;		
			
		КонецЕсли;
	КонецЦикла;	

КонецПроцедуры


Процедура СтатусыЗакрытияЗаказов(Режим)
		
	// Подготовим таблицу	
	ТабДоставки = Новый ТаблицаЗначений;
	ТабДоставки.Колонки.Добавить("Заказ");
	ТабДоставки.Колонки.Добавить("Регистратор");
		
	Если ЭтоНовый() Тогда
		СсылкаРегистратор = ПолучитьСсылкуНового();
	Иначе
		СсылкаРегистратор = Ссылка;
	КонецЕсли;
	
	Для каждого Стр Из Заказы Цикл
		Если Стр.ПредварительноеЗакрытие И (Стр.Закрыть ИЛИ Стр.Отклонить) Тогда	
			Нстр = ТабДоставки.Добавить();
			Нстр.Заказ = Стр.Реализация;
			Нстр.Регистратор = СсылкаРегистратор;		
		КонецЕсли;
	КонецЦикла;	
	
	
	// костыль
	МассивДляУдаления = Новый Массив;
	Если Режим = РежимЗаписиДокумента.ОтменаПроведения Тогда		
		МассивЗаказов  = ТабДоставки.ВыгрузитьКолонку("Заказ");
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ВЫБОР
		                      |		КОГДА СтатусыЗакрытияЗаказов.Период ЕСТЬ NULL 
		                      |			ТОГДА ЛОЖЬ
		                      |		ИНАЧЕ ИСТИНА
		                      |	КОНЕЦ КАК БылоЗакрытие,
		                      |	СтатусыЗакрытияЗаказов.Заказ
		                      |ИЗ
		                      |	РегистрСведений.СтатусыЗакрытияЗаказов КАК СтатусыЗакрытияЗаказов
		                      |ГДЕ
		                      |	СтатусыЗакрытияЗаказов.СтатусЗакрытия = ЗНАЧЕНИЕ(Перечисление.СтатусыПредварительногоЗакрытияЗаказов.ЗаказЗакрытПредварительно)
		                      |	И СтатусыЗакрытияЗаказов.Заказ В(&МассивЗаказов)");
		Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
		Рез = Запрос.Выполнить().Выгрузить();	
		Для каждого Тек Из ТабДоставки Цикл		
			Най = Рез.НайтиСтроки(Новый Структура("Заказ", Тек.Заказ));
			Если НЕ Най.Количество() Тогда		
				МассивДляУдаления.Добавить(Тек);						
			КонецЕсли;					
		КонецЦикла;	
		
		Для каждого Стр Из МассивДляУдаления Цикл			
			ТабДоставки.Удалить(Стр);
		КонецЦикла;	
	КонецЕсли;
	
	
	//сформируем движение
	mas.СтатусыЗакрытияЗаказов(ТабДоставки, Режим);

КонецПроцедуры


Процедура ОперативнаяЭкономикаЗаказов() Экспорт
	
	СтавкаЭквайринга = 0;
	ЗапросСтавкаЭквайринга = Новый Запрос("ВЫБРАТЬ
	                                      |	ЕСТЬNULL(СтавкиЭквайрингаСрезПоследних.Ставка, 0) КАК Ставка
	                                      |ИЗ
	                                      |	РегистрСведений.СтавкиЭквайринга.СрезПоследних(&Период, ) КАК СтавкиЭквайрингаСрезПоследних
	                                      |
	                                      |УПОРЯДОЧИТЬ ПО
	                                      |	СтавкиЭквайрингаСрезПоследних.Период");
	ЗапросСтавкаЭквайринга.УстановитьПараметр("Период", КонецДня(ДатаЗакрытия));						  
	РезСтавка = ЗапросСтавкаЭквайринга.Выполнить().Выбрать();									  
	
	Если РезСтавка.Следующий() Тогда	
		СтавкаЭквайринга = РезСтавка.Ставка;		
	КонецЕсли;
	
		
	Движения.ОперативнаяЭкономикаЗаказов.Записывать = Истина;	
	
	Зап = Новый Запрос;
	
	Зап.Текст = "ВЫБРАТЬ
	            |	ЗакрытиеЗаказовЗаказы.ВладелецТовара КАК ВладелецТовара,
	            |	ЗакрытиеЗаказовЗаказы.КатегорияДоставки,
	            |	СУММА(ЗакрытиеЗаказовЗаказы.Показатель1 + ЗакрытиеЗаказовЗаказы.Показатель2) КАК УслугиСД,
	            |	СУММА(ЗакрытиеЗаказовЗаказы.КассовоеОбслуживание) КАК КассовоеОбслуживание,
	            |	СУММА(ЗакрытиеЗаказовЗаказы.БанковскаяКомиссия) КАК БанковскаяКомиссия,
	            |	СУММА(ЗакрытиеЗаказовЗаказы.АгентскоеВознаграждение) КАК АгентскоеВознаграждение,
	            |	ЗакрытиеЗаказовЗаказы.Ссылка.ТипДоставки КАК ТипЗаказа2,
	            |	ЗакрытиеЗаказовЗаказы.Реализация,
	            |	ЗакрытиеЗаказовЗаказы.Рейс,
	            |	ЗакрытиеЗаказовЗаказы.Транспорт,
	            |	ЗакрытиеЗаказовЗаказы.Водитель,
	            |	ЗакрытиеЗаказовЗаказы.Экспедитор,
	            |	ЗакрытиеЗаказовЗаказы.ПодъемВодитель,
	            |	ЗакрытиеЗаказовЗаказы.УслугиСДЧистые,
	            |	ЗакрытиеЗаказовЗаказы.КОплатеКлиентом,
	            |	ЗакрытиеЗаказовЗаказы.ТипОплаты,
	            |	СУММА(ЗакрытиеЗаказовЗаказы.Показатель2) КАК Подъем,
	            |	ЗакрытиеЗаказовЗаказы.ПринятаяСумма КАК ОплаченоКлиентовНал,
	            |	ЗакрытиеЗаказовЗаказы.ТипЗаказа КАК ТипЗаказа
	            |ИЗ
	            |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	            |ГДЕ
	            |	ЗакрытиеЗаказовЗаказы.Ссылка.Ссылка = &Док
	            |	И ЗакрытиеЗаказовЗаказы.Закрыть = ИСТИНА
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	ЗакрытиеЗаказовЗаказы.ВладелецТовара,
	            |	ЗакрытиеЗаказовЗаказы.КатегорияДоставки,
	            |	ЗакрытиеЗаказовЗаказы.Ссылка.ТипДоставки,
	            |	ЗакрытиеЗаказовЗаказы.Реализация,
	            |	ЗакрытиеЗаказовЗаказы.Рейс,
	            |	ЗакрытиеЗаказовЗаказы.Транспорт,
	            |	ЗакрытиеЗаказовЗаказы.Водитель,
	            |	ЗакрытиеЗаказовЗаказы.Экспедитор,
	            |	ЗакрытиеЗаказовЗаказы.ПодъемВодитель,
	            |	ЗакрытиеЗаказовЗаказы.УслугиСДЧистые,
	            |	ЗакрытиеЗаказовЗаказы.КОплатеКлиентом,
	            |	ЗакрытиеЗаказовЗаказы.ТипОплаты,
	            |	ЗакрытиеЗаказовЗаказы.ТипЗаказа,
	            |	ЗакрытиеЗаказовЗаказы.ПринятаяСумма";
	
	Зап.УстановитьПараметр("Док", Ссылка);
	Выб = Зап.Выполнить().Выбрать();
	
	
	Пока Выб.Следующий() Цикл
		
		
		Если Выб.АгентскоеВознаграждение <> 0 Тогда			
			Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
			Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
		    Движение.Период = ДатаЗакрытия;	
			Если ЗначениеЗаполнено(Выб.ВладелецТовара) Тогда 
				Если Не Выб.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
					Движение.Партнер = Выб.ВладелецТовара.Родитель.ОсновнойМагазин;
				Иначе
					Движение.Партнер = Выб.ВладелецТовара;
				КонецеСли;
			КонецЕсли;		
			Движение.ИнтернетМагазин = Выб.ВладелецТовара;
			Движение.ТипЗаказа = Выб.ТипЗаказа;
			Движение.Заказ = Выб.Реализация;
			Движение.Рейс = Выб.Рейс;
			Движение.Водитель = Выб.Водитель;
			Движение.Транспорт = Выб.Транспорт;
			Движение.Экспедитор = Выб.Экспедитор;
			//Движение.Показатель = СтавкаЭквайринга;
			Движение.ДоходРасход = перечисления.ДоходРасход.Доход;	
			Движение.Статья = Справочники.СтатьиДоходовКомпании.АгентскоеВознаграждение;
		    Движение.Сумма = Выб.АгентскоеВознаграждение;				
		КонецеСли;
		
		Если Выб.КассовоеОбслуживание <> 0 Тогда
			Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
			Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
		    Движение.Период = ДатаЗакрытия;	
			Если ЗначениеЗаполнено(Выб.ВладелецТовара) Тогда 
				Если Не Выб.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
					Движение.Партнер = Выб.ВладелецТовара.Родитель.ОсновнойМагазин;
				Иначе
					Движение.Партнер = Выб.ВладелецТовара;
				КонецеСли;
			КонецЕсли;		
			Движение.ИнтернетМагазин = Выб.ВладелецТовара;
			Движение.ТипЗаказа = Выб.ТипЗаказа;
			Движение.Заказ = Выб.Реализация;
			Движение.Рейс = Выб.Рейс;
			Движение.Водитель = Выб.Водитель;
			Движение.Транспорт = Выб.Транспорт;
			Движение.Экспедитор = Выб.Экспедитор;
			//Движение.Показатель = СтавкаЭквайринга;
			Движение.ДоходРасход = перечисления.ДоходРасход.Доход;	
			Движение.Статья = Справочники.СтатьиДоходовКомпании.КассовоеОбслуживание;
		    Движение.Сумма = Выб.КассовоеОбслуживание;
		КонецеСли;
		
		Если Выб.УслугиСД <> 0 Тогда	
			Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
			Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
		    Движение.Период = ДатаЗакрытия;	
			Если ЗначениеЗаполнено(Выб.ВладелецТовара) Тогда 
				Если Не Выб.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
					Движение.Партнер = Выб.ВладелецТовара.Родитель.ОсновнойМагазин;
				Иначе
					Движение.Партнер = Выб.ВладелецТовара;
				КонецеСли;
			КонецЕсли;		
			Движение.ИнтернетМагазин = Выб.ВладелецТовара;
			Движение.ТипЗаказа = Выб.ТипЗаказа;
			Движение.Заказ = Выб.Реализация;
			Движение.Рейс = Выб.Рейс;
			Движение.Водитель = Выб.Водитель;
			Движение.Транспорт = Выб.Транспорт;
			Движение.Экспедитор = Выб.Экспедитор;
			//Движение.Показатель = СтавкаЭквайринга;
			Движение.ДоходРасход = перечисления.ДоходРасход.Доход;	
			Движение.Статья = Справочники.СтатьиДоходовКомпании.УслугиСД;
		    Движение.Сумма = Выб.УслугиСДЧистые;
		КонецеСли;
		
		Если Выб.БанковскаяКомиссия <> 0 Тогда
			Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
			Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
		    Движение.Период = ДатаЗакрытия;	
			Если ЗначениеЗаполнено(Выб.ВладелецТовара) Тогда 
				Если Не Выб.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
					Движение.Партнер = Выб.ВладелецТовара.Родитель.ОсновнойМагазин;
				Иначе
					Движение.Партнер = Выб.ВладелецТовара;
				КонецеСли;
			КонецЕсли;		
			Движение.ИнтернетМагазин = Выб.ВладелецТовара;
			Движение.ТипЗаказа = Выб.ТипЗаказа;
			Движение.Заказ = Выб.Реализация;
			Движение.Рейс = Выб.Рейс;
			Движение.Водитель = Выб.Водитель;
			Движение.Транспорт = Выб.Транспорт;
			Движение.Экспедитор = Выб.Экспедитор;
			//Движение.Показатель = СтавкаЭквайринга;
			Движение.ДоходРасход = перечисления.ДоходРасход.Доход;	
			Движение.Статья = Справочники.СтатьиДоходовКомпании.БанковскаяКомиссия;
		    Движение.Сумма = Выб.БанковскаяКомиссия;
		КонецеСли;
		
		
		//// ПодъемВодитель(расход)
		//Если Выб.ПодъемВодитель <> 0 Тогда
		//	Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
		//	Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
		//    Движение.Период = ДатаЗакрытия;	
		//	Если ЗначениеЗаполнено(Выб.ВладелецТовара) Тогда 
		//		Если Не Выб.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
		//			Движение.Партнер = Выб.ВладелецТовара.Родитель.ОсновнойМагазин;
		//		Иначе
		//			Движение.Партнер = Выб.ВладелецТовара;
		//		КонецеСли;
		//	КонецЕсли;		
		//	Движение.ИнтернетМагазин = Выб.ВладелецТовара;
		//	Движение.ТипЗаказа = Выб.ТипЗаказа;
		//	Движение.Заказ = Выб.Реализация;
		//	Движение.Рейс = Выб.Рейс;
		//	Движение.Водитель = Выб.Водитель;
		//	Движение.Транспорт = Выб.Транспорт;
		//	Движение.Экспедитор = Выб.Экспедитор;
		//	//Движение.Показатель = СтавкаЭквайринга;
		//	Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
		//	Движение.Статья = Справочники.СтатьиЗатратКомпании.СтоимостьПодъемаОплачиваемая;
		//    Движение.Сумма = Выб.ПодъемВодитель;
		//КонецеСли;
		
		
		
		
		// Подъем (Доход)
		Если Выб.Подъем <> 0 Тогда
			Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
			Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
		    Движение.Период = ДатаЗакрытия;	
			Если ЗначениеЗаполнено(Выб.ВладелецТовара) Тогда 
				Если Не Выб.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
					Движение.Партнер = Выб.ВладелецТовара.Родитель.ОсновнойМагазин;
				Иначе
					Движение.Партнер = Выб.ВладелецТовара;
				КонецеСли;
			КонецЕсли;		
			Движение.ИнтернетМагазин = Выб.ВладелецТовара;
			Движение.ТипЗаказа = Выб.ТипЗаказа;
			Движение.Заказ = Выб.Реализация;
			Движение.Рейс = Выб.Рейс;
			Движение.Водитель = Выб.Водитель;
			Движение.Транспорт = Выб.Транспорт;
			Движение.Экспедитор = Выб.Экспедитор;
			//Движение.Показатель = СтавкаЭквайринга;
			Движение.ДоходРасход = перечисления.ДоходРасход.Доход;	
			Движение.Статья = Справочники.СтатьиДоходовКомпании.СтоимостьПодъема;
		    Движение.Сумма = Выб.Подъем;
		КонецеСли;
		
		
		
		// Эквайринг (расход)
		Если Выб.ТипОплаты = Справочники.ТипыОплат.Терминал Тогда
			Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
			Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
		    Движение.Период = ДатаЗакрытия;	
			Если ЗначениеЗаполнено(Выб.ВладелецТовара) Тогда 
				Если Не Выб.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
					Движение.Партнер = Выб.ВладелецТовара.Родитель.ОсновнойМагазин;
				Иначе
					Движение.Партнер = Выб.ВладелецТовара;
				КонецеСли;
			КонецЕсли;		
			Движение.ИнтернетМагазин = Выб.ВладелецТовара;
			Движение.ТипЗаказа = Выб.ТипЗаказа;
			Движение.Заказ = Выб.Реализация;
			Движение.Рейс = Выб.Рейс;
			Движение.Водитель = Выб.Водитель;
			Движение.Транспорт = Выб.Транспорт;
			Движение.Экспедитор = Выб.Экспедитор;
			Движение.Показатель = СтавкаЭквайринга;
			Движение.ДоходРасход = перечисления.ДоходРасход.Расход;	
			Движение.Статья = Справочники.СтатьиЗатратКомпании.Эквайринг;
		    Движение.Сумма = Окр(Выб.ОплаченоКлиентовНал * СтавкаЭквайринга / 100, 2);
		КонецеСли;
		
	КонецЦикла;
	


	//по услугам		
	Для Каждого Стр Из Заказы Цикл
						
		//Услуги из ТЧ Услуги
		//Если Стр.Закрыть Или Стр.Отклонить Тогда
		Если Стр.Закрыть Тогда
			
			ПараметрыОтбора = Новый Структура("Реализация", Стр.Реализация.Ссылка);
			СтрокиУслуги = Услуги.НайтиСтроки(ПараметрыОтбора);
			Для каждого СтрСУ Из СтрокиУслуги Цикл
				Если СтрСУ.Услуга.НомерПоказателяАдминки <> 6 Тогда
					
					СтатьяДохода = Справочники.СтатьиДоходовКомпании.НайтиПоРеквизиту("ПоказательРасчетаСД", СтрСУ.Услуга);
					
					Если ЗначениеЗаполнено(СтатьяДохода) Тогда
						
						Движение = Движения.ОперативнаяЭкономикаЗаказов.Добавить();
						Движение.Регистратор = ?(ЗначениеЗаполнено(Ссылка), Ссылка, ПолучитьСсылкуНового());
					    Движение.Период = ДатаЗакрытия;	
						Если ЗначениеЗаполнено(Стр.ВладелецТовара) Тогда 
							Если Не Стр.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
								Движение.Партнер = Стр.ВладелецТовара.Родитель.ОсновнойМагазин;
							Иначе
								Движение.Партнер = Стр.ВладелецТовара;
							КонецеСли;
						КонецЕсли;		
						Движение.ИнтернетМагазин = Стр.ВладелецТовара;
						Движение.ТипЗаказа = Стр.ТипЗаказа;
						Движение.Заказ = Стр.Реализация;
						Движение.Рейс = Стр.Рейс;
						Движение.Водитель = Стр.Водитель;
						Движение.Транспорт = Стр.Транспорт;
						Движение.Экспедитор = Стр.Экспедитор;
						Движение.Показатель = СтавкаЭквайринга;										
						Движение.ДоходРасход = перечисления.ДоходРасход.Доход;
						Движение.Статья = СтатьяДохода;
					    Движение.Сумма = СтрСУ.СуммаДляИзменения; 
							
					КонецЕсли;
									
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	
КонецПроцедуры


Процедура ОбновитьОпцииЗаказов(МассивСтрок, Перезаполнение = Ложь) Экспорт
				
	Если Перезаполнение Тогда	
		ОпцииЗаказов.Очистить();		
	Иначе	
		Для каждого МасСтр Из МассивСтрок Цикл		
			НайОпции = ОпцииЗаказов.НайтиСтроки(Новый Структура("Заказ", МасСтр.Реализация));
			Для каждого НайСтр Из НайОпции Цикл		
				ОпцииЗаказов.Удалить(НайСтр);
			КонецЦикла;		
		КонецЦикла;	
	КонецЕсли;		
		
			
	Для каждого Стр Из МассивСтрок Цикл
		
		ЗаказВозвратный = Ложь;
		ЗапросВозврат = Новый Запрос("ВЫБРАТЬ
		                             |	ВозвратТоваровОтПокупателя.Ссылка
		                             |ИЗ
		                             |	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
		                             |ГДЕ
		                             |	ВозвратТоваровОтПокупателя.Номер = &Номер");
		ЗапросВозврат.УстановитьПараметр("Номер",Стр.Номер);	
		Если НЕ ЗапросВозврат.Выполнить().Пустой() Тогда		
			ЗаказВозвратный = Истина;	
		КонецЕсли;
		
		Если ((Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена И ЗаказВозвратный) 
			ИЛИ (Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично)
			ИЛИ (Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена И НЕ ЗаказВозвратный))
			И Стр.ТерминалДоставки <> Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
			
			СтатусСкладскогоУчета = Неопределено;
			
			Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
			                      |	СтатусыСкладскогоУчета.Период КАК Период,
			                      |	СтатусыСкладскогоУчета.Заказ,
			                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета
			                      |ИЗ
			                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
			                      |ГДЕ
			                      |	СтатусыСкладскогоУчета.Заказ = &Заказ
			                      |
			                      |УПОРЯДОЧИТЬ ПО
			                      |	Период УБЫВ");
			Запрос.УстановитьПараметр("Заказ", Стр.Реализация);	
			Рез = Запрос.Выполнить().Выбрать();
			
			Если Рез.Следующий() Тогда					
				Если Рез.СтатусСкладскогоУчета <> справочники.СтатусыСкладскогоУчета.ЗаказВернулсяСРегионаНаТерминалПриемки Тогда
																	
					НСтр = ОпцииЗаказов.Добавить();		
					НСтр.Заказ = Стр.Реализация;
					НСтр.ЗапретЗакрытияНетДанныхПеремещения = Истина;				
																	
				КонецЕсли;	
			Иначе
				НСтр = ОпцииЗаказов.Добавить();		
				НСтр.Заказ = Стр.Реализация;
				НСтр.ЗапретЗакрытияНетДанныхПеремещения = Истина;	
			КонецЕсли;
			
		КонецЕсли;

	КонецЦикла;
	
	
КонецПроцедуры


Процедура ЗакрытьЗадачиПользователю()

	Для каждого Стр Из Заказы Цикл
		Если (Стр.Закрыть ИЛИ Стр.Отклонить) Тогда			
			НайЗадача = Задачи.ЗадачиПользователя.НайтиПоРеквизиту("Объект", Стр.Реализация);
			
			Если ЗначениеЗаполнено(НайЗадача) Тогда
				
			ЗадачаОбъект = НайЗадача.ПолучитьОбъект();
			Попытка
				ЗадачаОбъект.ВыполнитьЗадачу();
			Исключение
				#Если Клиент Тогда
					Сообщить(ОписаниеОшибки());
				#КонецЕсли	
			КонецПопытки;
			
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	

КонецПроцедуры


Процедура ЗаписатьДанныеРеализаций()
	
	Для каждого Стр Из Заказы Цикл		
		Если (Стр.Закрыть ИЛИ Стр.Отклонить) И ТипЗнч(Стр.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда		
						
			mas.ЗаписьВРСРеализацияТоваровУслугИсторияРеквизитов(Стр.Реализация.Ссылка, Перечисления.СобытияЗаписиЗаказа.ЗакрытиеЗаказа);		
		КонецЕсли;	
	КонецЦикла;	

КонецПроцедуры


Процедура ОбновитьПринятуюСумму() Экспорт 

	
	
	ПринятаяСумма = 0;
	
	Для Каждого Тек Из Заказы Цикл
				
		Если Тек.Закрыть Тогда
				     
			НайТовары = Товары.НайтиСтроки(Новый Структура("Реализация", Тек.Реализация));
			Частичка = Ложь;
			Сум = 0;
					
			Если Тек.ТипОплаты = Справочники.ТипыОплат.Наличные Тогда
						
				Для каждого СтрТ Из НайТовары Цикл		
					Сум = Сум + (СтрТ.Количество - СтрТ.КоличествоВозвращено) * СтрТ.Цена; 	
				    Если СтрТ.КоличествоВозвращено > 0 Тогда
						Частичка = Истина;	 	
					КонецЕсли;
				КонецЦикла;
				
				// МАС - 03.07.2017 - это работало до Июля 2017 --->>
				//Если Частичка Тогда		
				//	ПринятаяСумма = ПринятаяСумма + Сум + Тек.СуммаДоставкиДоМКАД + Тек.СуммаДоставкиЗаМКАД;			
				//Иначе
				//	ПринятаяСумма = ПринятаяСумма + ?(ЗначениеЗаполнено(Тек.КОплатеКлиентом), Тек.КОплатеКлиентом, Сум + Тек.СуммаДоставкиДоМКАД + Тек.СуммаДоставкиЗаМКАД);
				//КонецЕсли;
				ПринятаяСумма = ПринятаяСумма + Сум + Тек.СуммаДоставкиДоМКАД + Тек.СуммаДоставкиЗаМКАД;
				// <<--- МАС
								
			КонецеСли;
						
		КонецеСли;	
			
	КонецЦикла;	
	
	
КонецПроцедуры


Процедура ОбновитьСуммыПоСтрокам() Экспорт
	
		
	Для Каждого Тек Из Заказы Цикл
					     
		НайТовары = Товары.НайтиСтроки(Новый Структура("Реализация", Тек.Реализация));
		Частичка = Ложь;
		Сум = 0;
										
		Для каждого СтрТ Из НайТовары Цикл		
			Сум = Сум + (СтрТ.Количество - СтрТ.КоличествоВозвращено) * СтрТ.Цена; 	
		    Если СтрТ.КоличествоВозвращено > 0 Тогда
				Частичка = Истина;	 	
			КонецЕсли;
		КонецЦикла;
		
		// МАС - 03.07.2017 - это работало до Июля 2017 --->>
		//Если Частичка Тогда		
		//	Тек.ПринятаяСумма = Сум + Тек.СуммаДоставкиДоМКАД + Тек.СуммаДоставкиЗаМКАД;	
		//Иначе
		//	Тек.ПринятаяСумма = ?(ЗначениеЗаполнено(Тек.КОплатеКлиентом), Тек.КОплатеКлиентом, Сум + Тек.СуммаДоставкиДоМКАД + Тек.СуммаДоставкиЗаМКАД);
		//КонецЕсли;
		Тек.ПринятаяСумма = Сум + Тек.СуммаДоставкиДоМКАД + Тек.СуммаДоставкиЗаМКАД;
		// <<--- МАС
												
	КонецЦикла;
		
			
КонецПроцедуры


#КонецОбласти

#Область УчетКомпонентТарификации

Процедура ЗарегистрироватьКомпонентыРасчета() Экспорт  // Задача № 3113
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗакрытиеЗаказовРасчетныеСуммыТарификации.Заказ КАК Заказ,
		|	ЗакрытиеЗаказовРасчетныеСуммыТарификации.ДатаДоставки КАК ДатаДоставки,
		|	ЗакрытиеЗаказовРасчетныеСуммыТарификации.КомпонентаТарификации КАК КомпонентаТарификации,
		|	ЗакрытиеЗаказовРасчетныеСуммыТарификации.Показатель КАК Показатель,
		|	ЗакрытиеЗаказовРасчетныеСуммыТарификации.Ставка КАК Ставка,
		|	ЗакрытиеЗаказовРасчетныеСуммыТарификации.УчетнаяСумма КАК Сумма,
		|	ЗакрытиеЗаказовРасчетныеСуммыТарификации.ИдентификаторЗаписиТарифаВАдминке КАК ИдентификаторЗаписиТарифаВАдминке,
		|	ВЫБОР
		|		КОГДА ЗакрытиеЗаказовЗаказы.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
		|			ТОГДА 1
		|		КОГДА ЗакрытиеЗаказовЗаказы.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
		|			ТОГДА 3
		|	КОНЕЦ КАК ТипЗаказа,
		|	ЗакрытиеЗаказовЗаказы.Ссылка КАК Регистратор,
		|	ЗакрытиеЗаказовЗаказы.Закрыть КАК Закрыть,
		//CeHbKA #3941 22.04.2020
		|	ЗакрытиеЗаказовЗаказы.Отклонить КАК Отклонить
		//CeHbKA #3941 22.04.2020
		|ПОМЕСТИТЬ ВТ_Итог
		|ИЗ
		|	Документ.ЗакрытиеЗаказов.РасчетныеСуммыТарификации КАК ЗакрытиеЗаказовРасчетныеСуммыТарификации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
		|		ПО ЗакрытиеЗаказовРасчетныеСуммыТарификации.Заказ = ЗакрытиеЗаказовЗаказы.Реализация
		|			И (ЗакрытиеЗаказовЗаказы.Ссылка = ЗакрытиеЗаказовРасчетныеСуммыТарификации.Ссылка)
		|ГДЕ
		|	ЗакрытиеЗаказовРасчетныеСуммыТарификации.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Итог.Заказ КАК Заказ,
		|	ВТ_Итог.ДатаДоставки КАК ДатаДоставки,
		|	ВТ_Итог.КомпонентаТарификации КАК КомпонентаТарификации,
		|	ВТ_Итог.Показатель КАК Показатель,
		|	ВТ_Итог.Ставка КАК Ставка,
		|	ВТ_Итог.Сумма КАК Сумма,
		|	ВТ_Итог.ИдентификаторЗаписиТарифаВАдминке КАК ИдентификаторЗаписиТарифаВАдминке,
		|	ВТ_Итог.ТипЗаказа КАК ТипЗаказа,
		|	ВТ_Итог.Регистратор КАК Регистратор,
		|	ВТ_Итог.Закрыть КАК Закрыть
		|ИЗ
		|	ВТ_Итог КАК ВТ_Итог
		|ГДЕ
		|	ВТ_Итог.Закрыть
		//CeHbKA #3941 22.04.2020
		|	ИЛИ ВТ_Итог.Отклонить";
		//CeHbKA #3941 22.04.2020
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();
	
	СписокСвойств = "";
	Для каждого КолонкаТЗ Из ТаблицаДвижений.Колонки Цикл
        СписокСвойств = СписокСвойств + КолонкаТЗ.Имя + ",";
    КонецЦикла;
	
	МассивПараметров = новый Массив;	
	Для Каждого СтрДвижения Из ТаблицаДвижений  Цикл
		
		ДанныеРегистрации = Новый Структура(СписокСвойств);
		ЗаполнитьЗначенияСвойств(ДанныеРегистрации, СтрДвижения);
		
		Если Не ТарификацияУслугСервер.ЗаписьПоКомпонентеСуществует(ДанныеРегистрации) Тогда
			
			ТарификацияУслугСервер.ЗарегистрироватьКомпонентыТарификации(ДанныеРегистрации);			
			
			// ВРЕМЕННО ОТКЛЮЧЕНО
			ПараметрыКомпоненты = ТарификацияУслугСервер.ПараметрыКомпоненты(
			СтрДвижения.КомпонентаТарификации,
			СтрДвижения.Ставка,
			СтрДвижения.Показатель,
			СтрДвижения.Сумма,
			СтрДвижения.ИдентификаторЗаписиТарифаВАдминке,
			СтрДвижения.ДатаДоставки,
			СтрДвижения.ТипЗаказа);
			
			ТарификацияУслугСервер.ДобавитьДанныеПоЗаказу(СтрДвижения.Заказ,  ПараметрыКомпоненты, МассивПараметров);
			
		КонецЕсли;
	
	КонецЦикла;
	
	Если МассивПараметров.Количество()> 0 Тогда
		
		// ВРЕМЕННО ОТКЛЮЧЕНО
		ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetOrdersTariffComponentsResult, МассивПараметров);
		
	КонецЕсли;
	
КонецПроцедуры	

Функция ТарифыСДПоРасчетномуБрейку(МассивБрейков) // Задача № 3113
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТарифыСД.РасчетныйБрейк КАК РасчетныйБрейк,
		|	ТарифыСД.ЗонаДоставки КАК ЗонаДоставки,
		|	ТарифыСД.ВидТарифа КАК ВидТарифа,
		|	ТарифыСД.ИдентификаторЗаписиВАдминке КАК ИдентификаторЗаписиВАдминке,
		|	ТарифыСД.СтоимостьДоставки КАК СтоимостьДоставки,
		|	ТарифыСД.СтоимостьКилометраОтГраницОбласти КАК СтоимостьКилометраОтГраницОбласти
		//CeHbKA #3781
		|	,ТарифыСД.СтоимостьВозвратаПоДоставке КАК СтоимостьВозвратаПоДоставке
		|	,ТарифыСД.СтоимостьВозвратаПоДоставкеВПроцентахОтСтоимостиДоставки КАК СтоимостьВозвратаПоДоставкеВПроцентахОтСтоимостиДоставки
		//CeHbKA #3781
		//CeHbKA #3781 19.02.2021	
		|	,ТарифыСД.СтоимостьВозвратаПоДоставкеЗаезд КАК СтоимостьВозвратаПоДоставкеЗаезд 		
		|	,ТарифыСД.СтоимостьВозвратаПоДоставкеЗаездВПроцентахОтСтоимостиДоставки КАК СтоимостьВозвратаПоДоставкеЗаездВПроцентахОтСтоимостиДоставки 		
		|	,ТарифыСД.СтоимостьВозвратаПоДоставкеЧастичныйВыкуп КАК СтоимостьВозвратаПоДоставкеЧастичныйВыкуп 
		|	,ТарифыСД.СтоимостьВозвратаПоДоставкеЧастичныйВыкупВПроцентахОтСтоимостиДоставки КАК СтоимостьВозвратаПоДоставкеЧастичныйВыкупВПроцентахОтСтоимостиДоставки
		//CeHbKA #3781 19.02.2021	
		|ИЗ
		|	РегистрСведений.ТарифыСД КАК ТарифыСД
		|ГДЕ
		|	ТарифыСД.РасчетныйБрейк В(&РасчетныйБрейк)
		|	И ТарифыСД.ВидТарифа = ЗНАЧЕНИЕ(Перечисление.ВидыТарифовРасчетУслугСД.Доставка)";
	
	Запрос.УстановитьПараметр("РасчетныйБрейк", МассивБрейков);	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции	

Функция КомпонентыТарификацииПоЗаказу(МассивЗаказов) // Задача № 3113
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомпонентыТарификацииЗаказовСрезПоследних.Заказ КАК Реализация,
		|	КомпонентыТарификацииЗаказовСрезПоследних.ДатаДоставки КАК ДатаДоставки,
		|	КомпонентыТарификацииЗаказовСрезПоследних.КомпонентаТарификации КАК КомпонентаТарификации,
		|	КомпонентыТарификацииЗаказовСрезПоследних.Показатель КАК Показатель,
		|	КомпонентыТарификацииЗаказовСрезПоследних.Ставка КАК Ставка,
		|	КомпонентыТарификацииЗаказовСрезПоследних.Сумма КАК Сумма,
		|	КомпонентыТарификацииЗаказовСрезПоследних.ИдентификаторЗаписиТарифаВАдминке КАК ИдентификаторЗаписиТарифаВАдминке
		|ИЗ
		|	РегистрСведений.КомпонентыТарификацииЗаказов.СрезПоследних(&ДатаСреза, ) КАК КомпонентыТарификацииЗаказовСрезПоследних
		|ГДЕ
		|	КомпонентыТарификацииЗаказовСрезПоследних.Заказ В(&Заказ)";
	
	Запрос.УстановитьПараметр("Заказ", МассивЗаказов);
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗаполнитьКомпонентыРасчета() Экспорт  // Задача № 3113
	
	МассивБрейков = Новый Массив;
	МассивЗаказов = Новый Массив;
	Для Каждого СтрЗаказ Из Заказы Цикл
		Если ТипЗНЧ(СтрЗаказ.Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			МассивЗаказов.Добавить(СтрЗаказ.Реализация);
			МассивБрейков.Добавить(СтрЗаказ.РасчетныйБрейк);
		КонецЕсли;	
	КонецЦикла;	
	
	ТарифыСД = ТарифыСДПоРасчетномуБрейку(МассивБрейков);
	КомпонентыТарификацииЗаказов = КомпонентыТарификацииПоЗаказу(МассивЗаказов);

	РасчетныеСуммыТарификации.Очистить();	
	Для Каждого СтрокаЗаказ Из Заказы Цикл
		
		БылРасчет = Ложь;
		УчетнаяСуммаСтрокиЗаказов = 0;		
		РасчетныйБрейк = СтрокаЗаказ.РасчетныйБрейк;
					
		ОтборСтрок = Новый Структура("Реализация, КомпонентаТарификации", СтрокаЗаказ.Реализация, Справочники.КомпонентыТарификации.ТарифДоставки);
		СтрокиКомпонент = КомпонентыТарификацииЗаказов.НайтиСтроки(ОтборСтрок);
		
		Для Каждого СтрокаКомпонент Из СтрокиКомпонент Цикл 
			СтрокаРасчетныеСуммы = РасчетныеСуммыТарификации.Добавить();
			СтрокаРасчетныеСуммы.Заказ = СтрокаЗаказ.Реализация;
			ЗаполнитьЗначенияСвойств(СтрокаРасчетныеСуммы, СтрокаКомпонент);
			СтрокаРасчетныеСуммы.ДатаДоставки = СтрокаКомпонент.ДатаДоставки;
			СтрокаРасчетныеСуммы.РасчетнаяСумма = 0;
			СтрокаРасчетныеСуммы.УчетнаяСумма = СтрокаКомпонент.Сумма;
			
			//Если СтрокаРасчетныеСуммы.ДатаДоставки = ДатаЗакрытия Тогда
			//	УчетнаяСуммаСтрокиЗаказов = УчетнаяСуммаСтрокиЗаказов + СтрокаРасчетныеСуммы.УчетнаяСумма;
			//	БылРасчет = Истина;
			//КонецЕсли;
			//CeHbKA #3781 01.04.2020			
			СтрокаРасчетныеСуммы.УчитываетсяПриТарификации = Ложь;
						
			Если СтрокаРасчетныеСуммы.КомпонентаТарификации = Справочники.КомпонентыТарификации.ТарифДоставки Тогда
				Если СтрокаРасчетныеСуммы.ДатаДоставки = ДатаЗакрытия
					И СтрокаЗаказ.Закрыть Тогда
					СтрокаРасчетныеСуммы.УчитываетсяПриТарификации = Истина;
					БылРасчет = Истина;
				КонецЕсли;	
			КонецЕсли; 
			//CeHbKA #3781 01.04.2020
			
		КонецЦикла;	
		
		ОтборСтрок = Новый Структура("Заказ, ТипЗамераРасстояния",СтрокаЗаказ.Реализация, Перечисления.ТипыЗамераРасстояний.ПоПрямойОтБлизжайшегоСъездаСМагистрали);
		СтрокиТарифДоставкиКилометраж = Расстояния.НайтиСтроки(ОтборСтрок);
		
		//Геннадий #3113 07.09.2021 ->
		//в условие добавлена проверка флага Закрыть
		Если СтрокиТарифДоставкиКилометраж.Количество() > 0 И СтрокаЗаказ.Закрыть Тогда
		//Геннадий #3113 07.09.2021 <-
			
			ОтборСтрок = Новый Структура("РасчетныйБрейк, ЗонаДоставки",РасчетныйБрейк, СтрокаЗаказ.ЗонаТарификации);
			СтрокиТарифов = ТарифыСД.НайтиСтроки(ОтборСтрок);
			
			Если  СтрокиТарифов.Количество() > 0 Тогда
				
				//Если СтрокиТарифов[0].СтоимостьКилометраОтГраницОбласти > 0 Тогда  // По проблеме тарифов без указания стоимости.
					
					СтрокаРасчетныеСуммы = РасчетныеСуммыТарификации.Добавить();
					СтрокаРасчетныеСуммы.Заказ = СтрокаЗаказ.Реализация;
					СтрокаРасчетныеСуммы.КомпонентаТарификации = Справочники.КомпонентыТарификации.ТарифДоставкиКилометражОтГраницОбласти;
					СтрокаРасчетныеСуммы.Показатель = СтрокиТарифДоставкиКилометраж[0].Расстояние;
					СтрокаРасчетныеСуммы.Ставка = СтрокиТарифов[0].СтоимостьКилометраОтГраницОбласти;
					СтрокаРасчетныеСуммы.УчитываетсяПриТарификации = Истина;
					СтрокаРасчетныеСуммы.РасчетнаяСумма = Окр(СтрокаРасчетныеСуммы.Показатель * СтрокаРасчетныеСуммы.Ставка,  0);
					СтрокаРасчетныеСуммы.УчетнаяСумма = СтрокаРасчетныеСуммы.РасчетнаяСумма;
					СтрокаРасчетныеСуммы.ДатаДоставки = ЭтотОбъект.ДатаЗакрытия;
					СтрокаРасчетныеСуммы.ИдентификаторЗаписиТарифаВАдминке = СтрокиТарифов[0].ИдентификаторЗаписиВАдминке;
					
					//УчетнаяСуммаСтрокиЗаказов = УчетнаяСуммаСтрокиЗаказов + СтрокаРасчетныеСуммы.УчетнаяСумма;
					БылРасчет = Истина;
					
				//КонецЕсли;
				
			КонецЕсли;	
			
		КонецЕсли;	
		
		//CeHbKA #3781 
		//дополнение 4 24.11.2020
		Если СтрокаЗаказ.Отклонить 
			ИЛИ (СтрокаЗаказ.Закрыть И СтрокаЗаказ.ТребуетсяРасчетВозвратногоТарифа)
			//16.03.2021
			ИЛИ (СтрокаЗаказ.Закрыть И СтрокаЗаказ.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом) Тогда
			//16.03.2021
		//дополнение 4 24.11.2020
			
			//доставка
			Если СтрокаЗаказ.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Тогда
				ОтборСтрок = Новый Структура("РасчетныйБрейк, ЗонаДоставки, ВидТарифа", РасчетныйБрейк, СтрокаЗаказ.ЗонаТарификации, Перечисления.ВидыТарифовРасчетУслугСД.Доставка);
				СтрокиТарифов = ТарифыСД.НайтиСтроки(ОтборСтрок);
				
				Для каждого СтрокаТарифа Из СтрокиТарифов Цикл					
					СтавкаПроцентом = Ложь;
					ДобавитьКомпонентуВозврата = Ложь;
					Если РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифа = Перечисления.СпособыРасчетаВозвратногоТарифа.ФиксированнойСуммой Тогда
						Ставка = СтрокаТарифа.СтоимостьВозвратаПоДоставке;
						Показатель = 1;
						ДобавитьКомпонентуВозврата = Истина;
					ИначеЕсли РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифа = Перечисления.СпособыРасчетаВозвратногоТарифа.ПроцентомОтТарифаДоставки Тогда
						СтавкаПроцентом = Истина;	
						Ставка = СтрокаТарифа.СтоимостьВозвратаПоДоставкеВПроцентахОтСтоимостиДоставки;
						Показатель = СтрокаТарифа.СтоимостьДоставки;	
						ДобавитьКомпонентуВозврата = Истина;
					Иначе
						Ставка = 0;
						Показатель = 0;
					КонецЕсли; 
					
					//CeHbKA #3781 19.02.2021
					//5.1
					Если СтрокаЗаказ.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом
						ИЛИ СтрокаЗаказ.БылПереносСЗаездом Тогда
						
						Если РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифаЗаезд = Перечисления.СпособыРасчетаВозвратногоТарифа.ФиксированнойСуммой Тогда
							Ставка = СтрокаТарифа.СтоимостьВозвратаПоДоставкеЗаезд;
						ИначеЕсли РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифаЗаезд = Перечисления.СпособыРасчетаВозвратногоТарифа.ПроцентомОтТарифаДоставки Тогда 	
							Ставка = СтрокаТарифа.СтоимостьВозвратаПоДоставкеЗаездВПроцентахОтСтоимостиДоставки;
						КонецЕсли; 
						
					КонецЕсли; 
					
					//5.2
					Если СтрокаЗаказ.ТребуетсяРасчетВозвратногоТарифа Тогда
						Если РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифаЧастичныйВыкуп = Перечисления.СпособыРасчетаВозвратногоТарифа.ФиксированнойСуммой Тогда
							Ставка = СтрокаТарифа.СтоимостьВозвратаПоДоставкеЧастичныйВыкуп;
						ИначеЕсли РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифаЧастичныйВыкуп = Перечисления.СпособыРасчетаВозвратногоТарифа.ПроцентомОтТарифаДоставки Тогда 	
							Ставка = СтрокаТарифа.СтоимостьВозвратаПоДоставкеЧастичныйВыкупВПроцентахОтСтоимостиДоставки;
						КонецЕсли; 
					КонецЕсли; 
					//CeHbKA #3781 19.02.2021	
				
					Если ДобавитьКомпонентуВозврата Тогда
						СтрокаРасчетныеСуммы = РасчетныеСуммыТарификации.Добавить();
						СтрокаРасчетныеСуммы.Заказ = СтрокаЗаказ.Реализация;
						СтрокаРасчетныеСуммы.КомпонентаТарификации = Справочники.КомпонентыТарификации.ТарифВозврата;						
						СтрокаРасчетныеСуммы.Ставка = Ставка;
						СтрокаРасчетныеСуммы.Показатель = Показатель;
						СтрокаРасчетныеСуммы.РасчетнаяСумма = Окр(Показатель * Ставка,  0);
						СтрокаРасчетныеСуммы.РасчетнаяСумма = ?(СтавкаПроцентом, СтрокаРасчетныеСуммы.РасчетнаяСумма / 100, СтрокаРасчетныеСуммы.РасчетнаяСумма);											
						СтрокаРасчетныеСуммы.УчетнаяСумма = СтрокаРасчетныеСуммы.РасчетнаяСумма;
						СтрокаРасчетныеСуммы.ДатаДоставки = ДатаЗакрытия;
						СтрокаРасчетныеСуммы.ИдентификаторЗаписиТарифаВАдминке = СтрокаТарифа.ИдентификаторЗаписиВАдминке;
						
						//CeHbKA #3781 
						//дополнение 4 24.11.2020
						//Если СтрокаЗаказ.Отклонить Тогда
							СтрокаРасчетныеСуммы.УчитываетсяПриТарификации = Истина;
						//КонецЕсли; 
						//дополнение 4 24.11.2020
						
						//УчетнаяСуммаСтрокиЗаказов = УчетнаяСуммаСтрокиЗаказов + СтрокаРасчетныеСуммы.УчетнаяСумма;
						БылРасчет = Истина;											
					КонецЕсли;
					
				КонецЦикла;
								
			КонецЕсли; 
			
			//самовывоз
			Если СтрокаЗаказ.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз Тогда
			КонецЕсли; 
				
		КонецЕсли; 
		//CeHbKA #3781
		
		//CeHbKA #3781 25.08.2020
		//Логика по БылРасчет = Истина изменена, т.к. при заполнении из запроса данные поля подтягивались, а должны пересчитываться принудительно из тарификации
		//при установленных флагах Закрыть или Отклонить
		Если БылРасчет ИЛИ СтрокаЗаказ.Отклонить Тогда
			//СтрокаЗаказ.УслугиСДЧистые = УчетнаяСуммаСтрокиЗаказов;
	        ПересчитатьУслугиСДЧистыеПоЗаказу(СтрокаЗаказ);
			СтрокаЗаказ.Показатель1 = ПриИзмененииСуммСД(СтрокаЗаказ);
		КонецЕсли;
		//CeHbKA #3781 25.08.2020
				
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ПерезаполнитьКомпонентыРасчета(СтрокаТЧЗаказы, ЧтоИзменилось = "ЗонаТарификации") Экспорт // Задача № 3113
	
	//+Степанов Задача № 3837
	Если ДатаЗакрытия < '20200416000000' Тогда
		ПерезаполнитьКомпонентыРасчета_до_16042020(СтрокаТЧЗаказы, ЧтоИзменилось = "ЗонаТарификации");
		Возврат;
	КонецЕсли;	
	//-Степанов Задача № 3837
	
	// Изменение условий задачи // Если СтрокаТЧЗаказы.Закрыть И ТипЗнч(СтрокаТЧЗаказы.Реализация)=Тип("ДокументСсылка.РеализацияТоваровУслуг")  Тогда
	Если ТипЗнч(СтрокаТЧЗаказы.Реализация)=Тип("ДокументСсылка.РеализацияТоваровУслуг")  Тогда
		
		//+Степанов Задача № 3837
		ЗонаТарификацииИзРС = Справочники.ГруппыРайонов.ПустаяСсылка();
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации
		               |ИЗ
		               |	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(, Заказ = &Заказ) КАК ПараметрыТарифаЗаказаСрезПоследних";
		Запрос.УстановитьПараметр("Заказ", СтрокаТЧЗаказы.Реализация);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда 
			ЗонаТарификацииИзРС = Выборка.ЗонаТарификации;	
		КонецЕсли;	
		//+Степанов Задача № 3837
		
		РасчетныйБрейк = СтрокаТЧЗаказы.РасчетныйБрейк;
		
		ТарифыСД = ТарифыСДПоРасчетномуБрейку(РасчетныйБрейк);
		СтрокаТарифыСД = ТарифыСД.НайтиСтроки(Новый Структура("ЗонаДоставки", СтрокаТЧЗаказы.ЗонаТарификации));
		СтрокаТарифыСД = ?(СтрокаТарифыСД.Количество() = 0, Неопределено, СтрокаТарифыСД[0]);
		
		//CeHbKA #3781
		//+Степанов Задача № 3837
		СтрокаТарифыСДВозврат = ТарифыСД.НайтиСтроки(Новый Структура("РасчетныйБрейк, ЗонаДоставки, ВидТарифа", РасчетныйБрейк, ЗонаТарификацииИзРС, Перечисления.ВидыТарифовРасчетУслугСД.Доставка));
		//-Степанов Задача № 3837
		СтрокаТарифыСДВозврат = ?(СтрокаТарифыСДВозврат.Количество() = 0, Неопределено, СтрокаТарифыСДВозврат[0]);
		//CeHbKA #3781
				
		Если СтрокаТарифыСД = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("По заказу " + СокрЛП(СтрокаТЧЗаказы.Реализация) + " нет тарифа");
		    Возврат;
		Конецесли;
				
		ОтборСтрок = Новый Структура("Заказ, КомпонентаТарификации, ДатаДоставки",СтрокаТЧЗаказы.Реализация, Справочники.КомпонентыТарификации.ТарифДоставки, ДатаЗакрытия);
		СтрокаПоТарифуДоставки = РасчетныеСуммыТарификации.НайтиСтроки(ОтборСтрок);
		СтрокаПоТарифуДоставки = ?(СтрокаПоТарифуДоставки.Количество()=0, РасчетныеСуммыТарификации.Добавить(), СтрокаПоТарифуДоставки[0]);
		
		//CeHbKA #3781
		ОтборСтрок = Новый Структура("Заказ, КомпонентаТарификации, ДатаДоставки",СтрокаТЧЗаказы.Реализация, Справочники.КомпонентыТарификации.ТарифВозврата, ДатаЗакрытия);
		СтрокаПоТарифуВозврата = РасчетныеСуммыТарификации.НайтиСтроки(ОтборСтрок);
		СтрокаПоТарифуВозврата = ?(СтрокаПоТарифуВозврата.Количество()=0, РасчетныеСуммыТарификации.Добавить(), СтрокаПоТарифуВозврата[0]);
		//CeHbKA #3781	
		
		ОтборСтрок = Новый Структура("Заказ, ТипЗамераРасстояния",СтрокаТЧЗаказы.Реализация, Перечисления.ТипыЗамераРасстояний.ПоПрямойОтБлизжайшегоСъездаСМагистрали);
		СтрокаРасстояния = Расстояния.НайтиСтроки(ОтборСтрок);
		СтрокаРасстояния = ?(СтрокаРасстояния.Количество()=0, Неопределено, СтрокаРасстояния[0]);

		Если ЧтоИзменилось = "ЗонаТарификации" ИЛИ ЧтоИзменилось = "Расстояние" ИЛИ ЧтоИзменилось = "Закрыть" Тогда
			
			УчетнаяСуммаСтрокиЗаказов = 0;			
			//Если Не ЧтоИзменилось = "Расстояние" тогда
			//CeHbKA 20.08.2021
			//выносим "Закрыть" в отдельную ветку
			Если ЧтоИзменилось <> "Расстояние" И ЧтоИзменилось <> "Закрыть" тогда 
			//CeHbKA 20.08.2021
								
				СтрокаПоТарифуДоставки.Заказ = СтрокаТЧЗаказы.Реализация;
				СтрокаПоТарифуДоставки.КомпонентаТарификации = Справочники.КомпонентыТарификации.ТарифДоставки;
				СтрокаПоТарифуДоставки.Показатель = 1;
				СтрокаПоТарифуДоставки.Ставка  = СтрокаТарифыСД.СтоимостьДоставки;
				
				СтрокаПоТарифуДоставки.РасчетнаяСумма = СтрокаПоТарифуДоставки.Показатель * СтрокаПоТарифуДоставки.Ставка;
				СтрокаПоТарифуДоставки.УчитываетсяПриТарификации = Истина;
				СтрокаПоТарифуДоставки.УчетнаяСумма = СтрокаПоТарифуДоставки.РасчетнаяСумма;
				СтрокаПоТарифуДоставки.ИдентификаторЗаписиТарифаВАдминке = СтрокаТарифыСД.ИдентификаторЗаписиВАдминке;
				СтрокаПоТарифуДоставки.ДатаДоставки = ДатаЗакрытия;
				
				УчетнаяСуммаСтрокиЗаказов = УчетнаяСуммаСтрокиЗаказов + СтрокаПоТарифуДоставки.УчетнаяСумма;
								
			Иначе
				
				УчетнаяСуммаСтрокиЗаказов = СтрокаПоТарифуДоставки.УчетнаяСумма; // Бред, но по другому как? проверить в первую очередь
				
			КонецЕсли;
			
			//CeHbKA 20.08.2021
			//выносим "Закрыть" в отдельную ветку
			Если ЧтоИзменилось = "Закрыть" Тогда
				
				Если НЕ ЗначениеЗаполнено(СтрокаПоТарифуДоставки.Заказ)
					ИЛИ НЕ ЗначениеЗаполнено(СтрокаПоТарифуДоставки.КомпонентаТарификации)
					ИЛИ НЕ ЗначениеЗаполнено(СтрокаПоТарифуДоставки.Показатель) 
					ИЛИ НЕ ЗначениеЗаполнено(СтрокаПоТарифуДоставки.Ставка) Тогда
				
					СтрокаПоТарифуДоставки.Заказ = СтрокаТЧЗаказы.Реализация;
					СтрокаПоТарифуДоставки.КомпонентаТарификации = Справочники.КомпонентыТарификации.ТарифДоставки;
					СтрокаПоТарифуДоставки.Показатель = 1;
					СтрокаПоТарифуДоставки.Ставка  = СтрокаТарифыСД.СтоимостьДоставки;
					
					СтрокаПоТарифуДоставки.РасчетнаяСумма = СтрокаПоТарифуДоставки.Показатель * СтрокаПоТарифуДоставки.Ставка;
					СтрокаПоТарифуДоставки.УчитываетсяПриТарификации = Истина;
					СтрокаПоТарифуДоставки.УчетнаяСумма = СтрокаПоТарифуДоставки.РасчетнаяСумма;
					СтрокаПоТарифуДоставки.ИдентификаторЗаписиТарифаВАдминке = СтрокаТарифыСД.ИдентификаторЗаписиВАдминке;
					СтрокаПоТарифуДоставки.ДатаДоставки = ДатаЗакрытия;
					
					УчетнаяСуммаСтрокиЗаказов = УчетнаяСуммаСтрокиЗаказов + СтрокаПоТарифуДоставки.УчетнаяСумма;
									
				КонецЕсли; 
				
				СтрокаПоТарифуДоставки.УчитываетсяПриТарификации = Истина;
				
			КонецЕсли; 
			//CeHbKA 20.08.2021			
			
			Если Не СтрокаРасстояния = Неопределено Тогда //и СтрокаТарифыСД.СтоимостьКилометраОтГраницОбласти > 0  Тогда  // По проблеме тарифов без указания стоимости.
				
				ОтборСтрок = Новый Структура("Заказ, КомпонентаТарификации",СтрокаТЧЗаказы.Реализация, Справочники.КомпонентыТарификации.ТарифДоставкиКилометражОтГраницОбласти);
				СтрокаПоТарифуОтГраниц = РасчетныеСуммыТарификации.НайтиСтроки(ОтборСтрок); 
				СтрокаПоТарифуОтГраниц = ?(СтрокаПоТарифуОтГраниц.Количество()=0, РасчетныеСуммыТарификации.Добавить(), СтрокаПоТарифуОтГраниц[0]);
				
				СтрокаПоТарифуОтГраниц.Заказ = СтрокаТЧЗаказы.Реализация;
				СтрокаПоТарифуОтГраниц.КомпонентаТарификации = Справочники.КомпонентыТарификации.ТарифДоставкиКилометражОтГраницОбласти;
				СтрокаПоТарифуОтГраниц.Показатель = СтрокаРасстояния.Расстояние;
				СтрокаПоТарифуОтГраниц.Ставка = СтрокаТарифыСД.СтоимостьКилометраОтГраницОбласти;
				СтрокаПоТарифуОтГраниц.УчитываетсяПриТарификации = Истина;
				СтрокаПоТарифуОтГраниц.РасчетнаяСумма = Окр(СтрокаПоТарифуОтГраниц.Показатель * СтрокаПоТарифуОтГраниц.Ставка,  0);
				СтрокаПоТарифуОтГраниц.УчетнаяСумма = СтрокаПоТарифуОтГраниц.РасчетнаяСумма;
				СтрокаПоТарифуОтГраниц.ДатаДоставки = ЭтотОбъект.ДатаЗакрытия;
				СтрокаПоТарифуОтГраниц.ИдентификаторЗаписиТарифаВАдминке = СтрокаТарифыСД.ИдентификаторЗаписиВАдминке;
				
				УчетнаяСуммаСтрокиЗаказов = УчетнаяСуммаСтрокиЗаказов + СтрокаПоТарифуОтГраниц.УчетнаяСумма;
				
			КонецЕсли;
			
			СтрокаТЧЗаказы.УслугиСДЧистые = УчетнаяСуммаСтрокиЗаказов;
			СтрокаТЧЗаказы.Показатель1 = ПриИзмененииСуммСД(СтрокаТЧЗаказы);
		КонецЕсли;
		
		//CeHbKA #3781	
		
		Если (ЧтоИзменилось = "ЗонаТарификации"
			ИЛИ ЧтоИзменилось = "РасчетныйБрейк"
			ИЛИ ЧтоИзменилось = "Отклонить"
			//CeHbKA #3781 25.11.2020 дополнение 4
			ИЛИ ЧтоИзменилось = "Закрыть")
				И (СтрокаТЧЗаказы.Отклонить ИЛИ СтрокаТЧЗаказы.ТребуетсяРасчетВозвратногоТарифа) Тогда
			//CeHbKA #3781 25.11.2020 дополнение 4
			
			Если (СтрокаТарифыСДВозврат <> Неопределено) 
				И (СтрокаТЧЗаказы.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка) Тогда					
								
				СтавкаПроцентом = Ложь;
				ДобавитьКомпонентуВозврата = Ложь;
				
				Если РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифа = Перечисления.СпособыРасчетаВозвратногоТарифа.ФиксированнойСуммой Тогда
					Ставка = СтрокаТарифыСДВозврат.СтоимостьВозвратаПоДоставке;
					Показатель = 1;
					ДобавитьКомпонентуВозврата = Истина;
				ИначеЕсли РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифа = Перечисления.СпособыРасчетаВозвратногоТарифа.ПроцентомОтТарифаДоставки Тогда
					СтавкаПроцентом = Истина;					
					Ставка = СтрокаТарифыСДВозврат.СтоимостьВозвратаПоДоставкеВПроцентахОтСтоимостиДоставки;
					Показатель = СтрокаТарифыСДВозврат.СтоимостьДоставки;	
					ДобавитьКомпонентуВозврата = Истина;
				Иначе
					Ставка = 0;
					Показатель = 0;
					
					Индекс = РасчетныеСуммыТарификации.Индекс(СтрокаПоТарифуВозврата);						
					РасчетныеСуммыТарификации.Удалить(Индекс);
				КонецЕсли; 
				
				//CeHbKA #3781 19.02.2021
				//5.1
				Если СтрокаТЧЗаказы.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом
					ИЛИ СтрокаТЧЗаказы.БылПереносСЗаездом Тогда
					
					Если РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифаЗаезд = Перечисления.СпособыРасчетаВозвратногоТарифа.ФиксированнойСуммой Тогда
						Ставка = СтрокаТарифыСДВозврат.СтоимостьВозвратаПоДоставкеЗаезд;
					ИначеЕсли РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифаЗаезд = Перечисления.СпособыРасчетаВозвратногоТарифа.ПроцентомОтТарифаДоставки Тогда 	
						Ставка = СтрокаТарифыСДВозврат.СтоимостьВозвратаПоДоставкеЗаездВПроцентахОтСтоимостиДоставки;
					КонецЕсли; 
					
				КонецЕсли; 
				
				//5.2
				Если СтрокаТЧЗаказы.ТребуетсяРасчетВозвратногоТарифа Тогда
					Если РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифаЗаезд = Перечисления.СпособыРасчетаВозвратногоТарифа.ФиксированнойСуммой Тогда
						Ставка = СтрокаТарифыСДВозврат.СтоимостьВозвратаПоДоставкеЧастичныйВыкуп;
					ИначеЕсли РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифаЗаезд = Перечисления.СпособыРасчетаВозвратногоТарифа.ПроцентомОтТарифаДоставки Тогда 	
						Ставка = СтрокаТарифыСДВозврат.СтоимостьВозвратаПоДоставкеЧастичныйВыкупВПроцентахОтСтоимостиДоставки;
					КонецЕсли; 
				КонецЕсли; 
				//CeHbKA #3781 19.02.2021						
				
				Если ДобавитьКомпонентуВозврата Тогда
					СтрокаПоТарифуВозврата.Заказ = СтрокаТЧЗаказы.Реализация;
					СтрокаПоТарифуВозврата.КомпонентаТарификации = Справочники.КомпонентыТарификации.ТарифВозврата;
					СтрокаПоТарифуВозврата.Ставка = Ставка;
					СтрокаПоТарифуВозврата.Показатель = Показатель;
					СтрокаПоТарифуВозврата.РасчетнаяСумма = Окр(Показатель * Ставка,  0);
					СтрокаПоТарифуВозврата.РасчетнаяСумма = ?(СтавкаПроцентом, СтрокаПоТарифуВозврата.РасчетнаяСумма / 100, СтрокаПоТарифуВозврата.РасчетнаяСумма);					
					СтрокаПоТарифуВозврата.УчитываетсяПриТарификации = Истина;
					СтрокаПоТарифуВозврата.УчетнаяСумма = СтрокаПоТарифуВозврата.РасчетнаяСумма;
					СтрокаПоТарифуВозврата.ДатаДоставки = ДатаЗакрытия;
					СтрокаПоТарифуВозврата.ИдентификаторЗаписиТарифаВАдминке = СтрокаТарифыСДВозврат.ИдентификаторЗаписиВАдминке;
					
					//УчетнаяСуммаСтрокиЗаказов = УчетнаяСуммаСтрокиЗаказов + СтрокаПоТарифуВозврата.УчетнаяСумма;
					
					СтрокаТЧЗаказы.УслугиСДЧистые = СтрокаТЧЗаказы.УслугиСДЧистые + СтрокаПоТарифуВозврата.УчетнаяСумма;
					СтрокаТЧЗаказы.Показатель1 = ПриИзмененииСуммСД(СтрокаТЧЗаказы);
					
				КонецЕсли; 				
				
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("По заказу " + СокрЛП(СтрокаТЧЗаказы.Реализация) + " нет тарифа по возврату");
				Возврат;
			Конецесли;
			//CeHbKA #3781	
			
		КонецЕсли; 
		
		//CeHbKA #3781 01.04.2020
		ПересчитатьУслугиСДЧистыеПоЗаказу(СтрокаТЧЗаказы);
		СтрокаТЧЗаказы.Показатель1 = ПриИзмененииСуммСД(СтрокаТЧЗаказы);
		//CeHbKA #3781 01.04.2020
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПерезаполнитьКомпонентыРасчета_до_16042020(СтрокаТЧЗаказы, ЧтоИзменилось = "ЗонаТарификации") Экспорт // Задача № 3113
		
	// Изменение условий задачи // Если СтрокаТЧЗаказы.Закрыть И ТипЗнч(СтрокаТЧЗаказы.Реализация)=Тип("ДокументСсылка.РеализацияТоваровУслуг")  Тогда
	Если ТипЗнч(СтрокаТЧЗаказы.Реализация)=Тип("ДокументСсылка.РеализацияТоваровУслуг")  Тогда
				
		РасчетныйБрейк = СтрокаТЧЗаказы.РасчетныйБрейк;
		
		ТарифыСД = ТарифыСДПоРасчетномуБрейку(РасчетныйБрейк);
		СтрокаТарифыСД = ТарифыСД.НайтиСтроки(Новый Структура("ЗонаДоставки", СтрокаТЧЗаказы.ЗонаТарификации));
		СтрокаТарифыСД = ?(СтрокаТарифыСД.Количество() = 0, Неопределено, СтрокаТарифыСД[0]);
		
		//CeHbKA #3781
		СтрокаТарифыСДВозврат = ТарифыСД.НайтиСтроки(Новый Структура("РасчетныйБрейк, ЗонаДоставки, ВидТарифа", РасчетныйБрейк, СтрокаТЧЗаказы.Реализация.ЗонаТарификации, Перечисления.ВидыТарифовРасчетУслугСД.Доставка));		
		СтрокаТарифыСДВозврат = ?(СтрокаТарифыСДВозврат.Количество() = 0, Неопределено, СтрокаТарифыСДВозврат[0]);
		//CeHbKA #3781
				
		Если СтрокаТарифыСД = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("По заказу " + СокрЛП(СтрокаТЧЗаказы.Реализация) + " нет тарифа");
		    Возврат;
		Конецесли;
				
		ОтборСтрок = Новый Структура("Заказ, КомпонентаТарификации, ДатаДоставки",СтрокаТЧЗаказы.Реализация, Справочники.КомпонентыТарификации.ТарифДоставки, ДатаЗакрытия);
		СтрокаПоТарифуДоставки = РасчетныеСуммыТарификации.НайтиСтроки(ОтборСтрок);
		СтрокаПоТарифуДоставки = ?(СтрокаПоТарифуДоставки.Количество()=0, РасчетныеСуммыТарификации.Добавить(), СтрокаПоТарифуДоставки[0]);
		
		//CeHbKA #3781
		ОтборСтрок = Новый Структура("Заказ, КомпонентаТарификации, ДатаДоставки",СтрокаТЧЗаказы.Реализация, Справочники.КомпонентыТарификации.ТарифВозврата, ДатаЗакрытия);
		СтрокаПоТарифуВозврата = РасчетныеСуммыТарификации.НайтиСтроки(ОтборСтрок);
		СтрокаПоТарифуВозврата = ?(СтрокаПоТарифуВозврата.Количество()=0, РасчетныеСуммыТарификации.Добавить(), СтрокаПоТарифуВозврата[0]);
		//CeHbKA #3781	
		
		ОтборСтрок = Новый Структура("Заказ, ТипЗамераРасстояния",СтрокаТЧЗаказы.Реализация, Перечисления.ТипыЗамераРасстояний.ПоПрямойОтБлизжайшегоСъездаСМагистрали);
		СтрокаРасстояния = Расстояния.НайтиСтроки(ОтборСтрок);
		СтрокаРасстояния = ?(СтрокаРасстояния.Количество()=0, Неопределено, СтрокаРасстояния[0]);

		Если ЧтоИзменилось = "ЗонаТарификации" ИЛИ ЧтоИзменилось = "Расстояние" ИЛИ ЧтоИзменилось = "Закрыть" Тогда
			
			УчетнаяСуммаСтрокиЗаказов = 0;			
			Если Не ЧтоИзменилось = "Расстояние" тогда
								
				СтрокаПоТарифуДоставки.Заказ = СтрокаТЧЗаказы.Реализация;
				СтрокаПоТарифуДоставки.КомпонентаТарификации = Справочники.КомпонентыТарификации.ТарифДоставки;
				СтрокаПоТарифуДоставки.Показатель = 1;
				СтрокаПоТарифуДоставки.Ставка  = СтрокаТарифыСД.СтоимостьДоставки;
				
				СтрокаПоТарифуДоставки.РасчетнаяСумма = СтрокаПоТарифуДоставки.Показатель * СтрокаПоТарифуДоставки.Ставка;
				СтрокаПоТарифуДоставки.УчитываетсяПриТарификации = Истина;
				СтрокаПоТарифуДоставки.УчетнаяСумма = СтрокаПоТарифуДоставки.РасчетнаяСумма;
				СтрокаПоТарифуДоставки.ИдентификаторЗаписиТарифаВАдминке = СтрокаТарифыСД.ИдентификаторЗаписиВАдминке;
				СтрокаПоТарифуДоставки.ДатаДоставки = ДатаЗакрытия;
				
				УчетнаяСуммаСтрокиЗаказов = УчетнаяСуммаСтрокиЗаказов + СтрокаПоТарифуДоставки.УчетнаяСумма;
								
			Иначе
				
				УчетнаяСуммаСтрокиЗаказов = СтрокаПоТарифуДоставки.УчетнаяСумма; // Бред, но по другому как? проверить в первую очередь
				
			КонецЕсли;
			
			Если Не СтрокаРасстояния = Неопределено Тогда //и СтрокаТарифыСД.СтоимостьКилометраОтГраницОбласти > 0  Тогда  // По проблеме тарифов без указания стоимости.
				
				ОтборСтрок = Новый Структура("Заказ, КомпонентаТарификации",СтрокаТЧЗаказы.Реализация, Справочники.КомпонентыТарификации.ТарифДоставкиКилометражОтГраницОбласти);
				СтрокаПоТарифуОтГраниц = РасчетныеСуммыТарификации.НайтиСтроки(ОтборСтрок); 
				СтрокаПоТарифуОтГраниц = ?(СтрокаПоТарифуОтГраниц.Количество()=0, РасчетныеСуммыТарификации.Добавить(), СтрокаПоТарифуОтГраниц[0]);
				
				СтрокаПоТарифуОтГраниц.Заказ = СтрокаТЧЗаказы.Реализация;
				СтрокаПоТарифуОтГраниц.КомпонентаТарификации = Справочники.КомпонентыТарификации.ТарифДоставкиКилометражОтГраницОбласти;
				СтрокаПоТарифуОтГраниц.Показатель = СтрокаРасстояния.Расстояние;
				СтрокаПоТарифуОтГраниц.Ставка = СтрокаТарифыСД.СтоимостьКилометраОтГраницОбласти;
				СтрокаПоТарифуОтГраниц.УчитываетсяПриТарификации = Истина;
				СтрокаПоТарифуОтГраниц.РасчетнаяСумма = Окр(СтрокаПоТарифуОтГраниц.Показатель * СтрокаПоТарифуОтГраниц.Ставка,  0);
				СтрокаПоТарифуОтГраниц.УчетнаяСумма = СтрокаПоТарифуОтГраниц.РасчетнаяСумма;
				СтрокаПоТарифуОтГраниц.ДатаДоставки = ЭтотОбъект.ДатаЗакрытия;
				СтрокаПоТарифуОтГраниц.ИдентификаторЗаписиТарифаВАдминке = СтрокаТарифыСД.ИдентификаторЗаписиВАдминке;
				
				УчетнаяСуммаСтрокиЗаказов = УчетнаяСуммаСтрокиЗаказов + СтрокаПоТарифуОтГраниц.УчетнаяСумма;
				
			КонецЕсли;
			
			СтрокаТЧЗаказы.УслугиСДЧистые = УчетнаяСуммаСтрокиЗаказов;
			СтрокаТЧЗаказы.Показатель1 = ПриИзмененииСуммСД(СтрокаТЧЗаказы);
		КонецЕсли;
		
		//CeHbKA #3781			
		Если (ЧтоИзменилось = "ЗонаТарификации"
			ИЛИ ЧтоИзменилось = "РасчетныйБрейк"
			ИЛИ ЧтоИзменилось = "Отклонить") И СтрокаТЧЗаказы.Отклонить Тогда
			
			Если (СтрокаТарифыСДВозврат <> Неопределено) 
				И (СтрокаТЧЗаказы.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка) Тогда					
								
				СтавкаПроцентом = Ложь;
				ДобавитьКомпонентуВозврата = Ложь;
				
				Если РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифа = Перечисления.СпособыРасчетаВозвратногоТарифа.ФиксированнойСуммой Тогда
					Ставка = СтрокаТарифыСДВозврат.СтоимостьВозвратаПоДоставке;
					Показатель = 1;
					ДобавитьКомпонентуВозврата = Истина;
				ИначеЕсли РасчетныйБрейк.Владелец.СпособРасчетаВозвратногоТарифа = Перечисления.СпособыРасчетаВозвратногоТарифа.ПроцентомОтТарифаДоставки Тогда
					СтавкаПроцентом = Истина;
					Ставка = СтрокаТарифыСДВозврат.СтоимостьВозвратаПоДоставкеВПроцентахОтСтоимостиДоставки;
					Показатель = СтрокаТарифыСДВозврат.СтоимостьДоставки;	
					ДобавитьКомпонентуВозврата = Истина;
				Иначе
					Ставка = 0;
					Показатель = 0;
					
					Индекс = РасчетныеСуммыТарификации.Индекс(СтрокаПоТарифуВозврата);						
					РасчетныеСуммыТарификации.Удалить(Индекс);
				КонецЕсли; 
				
				Если ДобавитьКомпонентуВозврата Тогда
					СтрокаПоТарифуВозврата.Заказ = СтрокаТЧЗаказы.Реализация;
					СтрокаПоТарифуВозврата.КомпонентаТарификации = Справочники.КомпонентыТарификации.ТарифВозврата;
					СтрокаПоТарифуВозврата.Ставка = Ставка;
					СтрокаПоТарифуВозврата.Показатель = Показатель;
					СтрокаПоТарифуВозврата.РасчетнаяСумма = Окр(Показатель * Ставка,  0);
					СтрокаПоТарифуВозврата.РасчетнаяСумма = ?(СтавкаПроцентом, СтрокаПоТарифуВозврата.РасчетнаяСумма / 100, СтрокаПоТарифуВозврата.РасчетнаяСумма);					
					СтрокаПоТарифуВозврата.УчитываетсяПриТарификации = Истина;
					СтрокаПоТарифуВозврата.УчетнаяСумма = СтрокаПоТарифуВозврата.РасчетнаяСумма;
					СтрокаПоТарифуВозврата.ДатаДоставки = ДатаЗакрытия;
					СтрокаПоТарифуВозврата.ИдентификаторЗаписиТарифаВАдминке = СтрокаТарифыСДВозврат.ИдентификаторЗаписиВАдминке;
					
					//УчетнаяСуммаСтрокиЗаказов = УчетнаяСуммаСтрокиЗаказов + СтрокаПоТарифуВозврата.УчетнаяСумма;
					
					СтрокаТЧЗаказы.УслугиСДЧистые = СтрокаТЧЗаказы.УслугиСДЧистые + СтрокаПоТарифуВозврата.УчетнаяСумма;
					СтрокаТЧЗаказы.Показатель1 = ПриИзмененииСуммСД(СтрокаТЧЗаказы);
					
				КонецЕсли; 				
				
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("По заказу " + СокрЛП(СтрокаТЧЗаказы.Реализация) + " нет тарифа по возврату");
				Возврат;
			Конецесли;
			//CeHbKA #3781	
			
		КонецЕсли; 
		
		//CeHbKA #3781 01.04.2020
		ПересчитатьУслугиСДЧистыеПоЗаказу(СтрокаТЧЗаказы);
		СтрокаТЧЗаказы.Показатель1 = ПриИзмененииСуммСД(СтрокаТЧЗаказы);
		//CeHbKA #3781 01.04.2020
		
	КонецЕсли;	
	
КонецПроцедуры


//CeHbKA #3781 01.04.2020
Процедура ПересчитатьУслугиСДЧистыеПоЗаказу(СтрокаЗаказ)

	СтрокаЗаказ.УслугиСДЧистые = 0;
	
	СтруктураОтбора = Новый Структура("Заказ", СтрокаЗаказ.Реализация); 
	РасчитанныеКомпонентыПоЗаказам = РасчетныеСуммыТарификации.НайтиСтроки(СтруктураОтбора);
	
	Для каждого СтрокаРасчитаннаяКомпонента Из РасчитанныеКомпонентыПоЗаказам Цикл
		Если СтрокаРасчитаннаяКомпонента.УчитываетсяПриТарификации Тогда
			СтрокаЗаказ.УслугиСДЧистые = СтрокаЗаказ.УслугиСДЧистые + СтрокаРасчитаннаяКомпонента.УчетнаяСумма;
		КонецЕсли; 	
	КонецЦикла; 	

КонецПроцедуры
//CeHbKA #3781 01.04.2020
 

#КонецОбласти

//CeHbKA #4383 10.11.2020
Процедура ВыполнитьДвиженияПоРС_зпИсходныеДанныеРасчетаЗППоЗаказамДополнительныеНачисления() Экспорт

	ДопДанные = Неопределено;
	
	//Движения.зпИсходныеДанныеРасчетаЗППоЗаказамДополнительныеНачисления.Записывать = Истина;
	Движения.зпИсходныеДанныеРасчетаЗППоЗаказамДополнительныеНачисления.Очистить();
	
	Для Каждого СтрокаТЧ Из Заказы Цикл
		
		//Асеев 24.03.2023 (Задача № 5021)>>>
		Если СтрокаТЧ.Закрыть И (СтрокаТЧ.ПодъемВодитель Или СтрокаТЧ.СтоимостьПримеркиВодитель Или СтрокаТЧ.СтоимостьПримеркиЭкспедитор) Тогда
			Если ДопДанные = Неопределено Тогда
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("Период", КонецДня(ДатаЗакрытия));
				Запрос.УстановитьПараметр("Водители", Заказы.ВыгрузитьКолонку("Водитель"));
				Запрос.УстановитьПараметр("Экспедиторы", Заказы.ВыгрузитьКолонку("Экспедитор"));
				Запрос.УстановитьПараметр("СхемаРасчетаЗП", СхемаРасчетаЗП);
				Запрос.УстановитьПараметр("ТарифРасчетаЗП", ТарифРасчетаЗП);
				Запрос.УстановитьПараметр("ОсновноеНачислениеВодитель", Заказы.ВыгрузитьКолонку("ОсновноеНачислениеВодитель"));
				Запрос.УстановитьПараметр("ОсновноеНачислениеЭкспедитор", Заказы.ВыгрузитьКолонку("ОсновноеНачислениеЭкспедитор"));
				Запрос.Текст =
				"ВЫБРАТЬ
				|	новаВодители.Ссылка КАК Сотрудник,
				|	новаВодители.ФизЛицо КАК ФизЛицо,
				|	ДополнительныеПараметрыФизЛицСрезПоследних.ОсновнаяРольСотрудника КАК Роль
				|ИЗ
				|	Справочник.новаВодители КАК новаВодители
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыФизЛиц.СрезПоследних(
				|				&Период,
				|				ФизЛицо В
				|					(ВЫБРАТЬ
				|						новаВодители.ФизЛицо КАК ФизЛицо
				|					ИЗ
				|						Справочник.новаВодители КАК новаВодители
				|					ГДЕ
				|						новаВодители.Ссылка В (&Водители))) КАК ДополнительныеПараметрыФизЛицСрезПоследних
				|		ПО новаВодители.ФизЛицо = ДополнительныеПараметрыФизЛицСрезПоследних.ФизЛицо
				|ГДЕ
				|	новаВодители.Ссылка В(&Водители)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	новаЭкспедиторы.Ссылка,
				|	новаЭкспедиторы.ФизЛицо,
				|	ЗНАЧЕНИЕ(Справочник.РолиСотрудников.Экспедитор)
				|ИЗ
				|	Справочник.новаЭкспедиторы КАК новаЭкспедиторы
				|ГДЕ
				|	новаЭкспедиторы.Ссылка В(&Экспедиторы)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ЗНАЧЕНИЕ(Справочник.новаВодители.ПустаяСсылка),
				|	NULL,
				|	NULL
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	зпСтавкиОплатыПоНачислениям.ОсновноеНачисление КАК ОсновноеНачисление,
				|	зпСтавкиОплатыПоНачислениям.СоставЭкипажа КАК СоставЭкипажа
				|ИЗ
				|	РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям
				|ГДЕ
				|	зпСтавкиОплатыПоНачислениям.СхемаРасчетаЗП = &СхемаРасчетаЗП
				|	И зпСтавкиОплатыПоНачислениям.ТарифРасчетаЗП = &ТарифРасчетаЗП
				|	И зпСтавкиОплатыПоНачислениям.ОсновноеНачисление В (&ОсновноеНачислениеВодитель, &ОсновноеНачислениеЭкспедитор)
				|	И зпСтавкиОплатыПоНачислениям.Начисление = ЗНАЧЕНИЕ(Справочник.зпНачисления.Примерка)";
				РезультатПакета = Запрос.ВыполнитьПакет();
				ДопДанные = РезультатПакета[0].Выгрузить();
				ДопДанныеПримерка = РезультатПакета[1].Выгрузить();
				СтруктураПримерка = Новый Структура("ОсновноеНачисление,СоставЭкипажа");
			КонецЕсли;
		Иначе
			Продолжить;
		КонецЕсли;
		//Асеев 24.03.2023 (Задача № 5021)<<<
		
		ЕстьЭкспедитор = Не СтрокаТЧ.Экспедитор.Пустая();
		ДопДанныеВодитель = ДопДанные.Найти(СтрокаТЧ.Водитель, "Сотрудник");
		Если ЕстьЭкспедитор Тогда
			ДопДанныеЭкспедитор = ДопДанные.Найти(СтрокаТЧ.Экспедитор, "Сотрудник");
			СоставЭкипажа = Перечисления.зпСоставЭкипажа.ВодительСЭкспедитором;
		Иначе
			СоставЭкипажа = Перечисления.зпСоставЭкипажа.ВодительБезЭкспедитора;
		КонецЕсли;
		
		Если СтрокаТЧ.ПодъемВодитель Тогда
			//добавим запись по водителю
			ЗаписьРегистра = Движения.зпИсходныеДанныеРасчетаЗППоЗаказамДополнительныеНачисления.Добавить();
			ЗаписьРегистра.Период = ДатаЗакрытия;
			ЗаписьРегистра.Регион = ТерминалДоставки;
			ЗаписьРегистра.СхемаРасчетаЗП = СхемаРасчетаЗП;
			ЗаписьРегистра.ТарифРасчетаЗП = ТарифРасчетаЗП;
			ЗаписьРегистра.Начисление = Справочники.зпНачисления.ОплатаПодъемаНаЭтажПриДоставкеЗаказа;
			ЗаписьРегистра.ДатаРасчета = ДатаЗакрытия;
			ЗаписьРегистра.ВидЗанятости = Перечисления.зпВидыЗанятости.ОсновнаяЗанятость;
			ЗаписьРегистра.Рейс = СтрокаТЧ.РейсДокумент;
			ЗаписьРегистра.ФизЛицо = ДопДанныеВодитель.ФизЛицо;
			ЗаписьРегистра.СоставЭкипажа = СоставЭкипажа;
			ЗаписьРегистра.ТипЗаказа = СтрокаТЧ.ТипЗаказа;
			ЗаписьРегистра.Заказ = СтрокаТЧ.Реализация;
			ЗаписьРегистра.Сумма = СтрокаТЧ.ПодъемВодитель * СтрокаТЧ.ПроцентОплатыПодъемаЗаказаВодитель / 100;
			ЗаписьРегистра.БрейкРасчетПодъема = СтрокаТЧ.ПодъемныйБрейк;
			ЗаписьРегистра.СпособПодъема = СтрокаТЧ.ВидПодъемаНаЭтаж;
			ЗаписьРегистра.Этаж = СтрокаТЧ.Этаж;
			ЗаписьРегистра.ВесЗаказа = СтрокаТЧ.ВесЗаказаДляПодъемаМП;
			ЗаписьРегистра.ПроцентОплатыПодъемаЗаказа = СтрокаТЧ.ПроцентОплатыПодъемаЗаказаВодитель;
			ЗаписьРегистра.ОсновноеНачисление = СтрокаТЧ.ОсновноеНачислениеВодитель;
			ЗаписьРегистра.Роль = ДопДанныеВодитель.Роль;
			Если ЕстьЭкспедитор Тогда
				//добавим запись по экспедитору
                ЗаписьРегистра = Движения.зпИсходныеДанныеРасчетаЗППоЗаказамДополнительныеНачисления.Добавить();
				ЗаписьРегистра.Период = ДатаЗакрытия;
				ЗаписьРегистра.Регион = ТерминалДоставки;
				ЗаписьРегистра.СхемаРасчетаЗП = СхемаРасчетаЗП;
				ЗаписьРегистра.ТарифРасчетаЗП = ТарифРасчетаЗП;
				ЗаписьРегистра.Начисление = Справочники.зпНачисления.ОплатаПодъемаНаЭтажПриДоставкеЗаказа;
				ЗаписьРегистра.ДатаРасчета = ДатаЗакрытия;
				ЗаписьРегистра.ВидЗанятости = Перечисления.зпВидыЗанятости.ОсновнаяЗанятость;
				ЗаписьРегистра.Рейс = СтрокаТЧ.РейсДокумент;
				ЗаписьРегистра.ФизЛицо = ДопДанныеЭкспедитор.ФизЛицо;
				ЗаписьРегистра.СоставЭкипажа = СоставЭкипажа;
				ЗаписьРегистра.ТипЗаказа = СтрокаТЧ.ТипЗаказа;
				ЗаписьРегистра.Заказ = СтрокаТЧ.Реализация;
				ЗаписьРегистра.Сумма = СтрокаТЧ.ПодъемВодитель * СтрокаТЧ.ПроцентОплатыПодъемаЗаказаЭкспедитор / 100;
				ЗаписьРегистра.БрейкРасчетПодъема = СтрокаТЧ.ПодъемныйБрейк;
				ЗаписьРегистра.СпособПодъема = СтрокаТЧ.ВидПодъемаНаЭтаж;
				ЗаписьРегистра.Этаж = СтрокаТЧ.Этаж;
				ЗаписьРегистра.ВесЗаказа = СтрокаТЧ.ВесЗаказаДляПодъемаМП;
				ЗаписьРегистра.ПроцентОплатыПодъемаЗаказа = СтрокаТЧ.ПроцентОплатыПодъемаЗаказаЭкспедитор;
				ЗаписьРегистра.ОсновноеНачисление = СтрокаТЧ.ОсновноеНачислениеЭкспедитор;
				ЗаписьРегистра.Роль = ДопДанныеЭкспедитор.Роль;
			КонецЕсли; 
		КонецЕсли; 
		Если СтрокаТЧ.СтоимостьПримеркиВодитель Тогда
			//добавим запись по водителю
			СтруктураПримерка.ОсновноеНачисление = СтрокаТЧ.ОсновноеНачислениеВодитель;
			СтруктураПримерка.СоставЭкипажа = СоставЭкипажа;
			Если ДопДанныеПримерка.НайтиСтроки(СтруктураПримерка).Количество() Тогда
				ЗаписьРегистра = Движения.зпИсходныеДанныеРасчетаЗППоЗаказамДополнительныеНачисления.Добавить();
				ЗаписьРегистра.Период = ДатаЗакрытия;
				ЗаписьРегистра.Регион = ТерминалДоставки;
				ЗаписьРегистра.СхемаРасчетаЗП = СхемаРасчетаЗП;
				ЗаписьРегистра.ТарифРасчетаЗП = ТарифРасчетаЗП;
				ЗаписьРегистра.Начисление = Справочники.зпНачисления.Примерка;
				ЗаписьРегистра.ДатаРасчета = ДатаЗакрытия;
				ЗаписьРегистра.ВидЗанятости = Перечисления.зпВидыЗанятости.ОсновнаяЗанятость;
				ЗаписьРегистра.Рейс = СтрокаТЧ.РейсДокумент;
				ЗаписьРегистра.ФизЛицо = ДопДанныеВодитель.ФизЛицо;
				ЗаписьРегистра.СоставЭкипажа = СоставЭкипажа;
				ЗаписьРегистра.ТипЗаказа = СтрокаТЧ.ТипЗаказа;
				ЗаписьРегистра.Заказ = СтрокаТЧ.Реализация;
				ЗаписьРегистра.Сумма = СтрокаТЧ.СтоимостьПримеркиВодитель;
				ЗаписьРегистра.ТарифПримерки = СтрокаТЧ.ТарифПримерки;
				ЗаписьРегистра.КоличествоSKUПримерки = СтрокаТЧ.КоличествоSKUПримерки;
				ЗаписьРегистра.ОсновноеНачисление = СтрокаТЧ.ОсновноеНачислениеВодитель;
				ЗаписьРегистра.Роль = ДопДанныеВодитель.Роль;
			КонецЕсли;
		КонецЕсли;
		Если СтрокаТЧ.СтоимостьПримеркиЭкспедитор И ЕстьЭкспедитор Тогда
			//добавим запись по экспедитору
			СтруктураПримерка.ОсновноеНачисление = СтрокаТЧ.ОсновноеНачислениеЭкспедитор;
			СтруктураПримерка.СоставЭкипажа = СоставЭкипажа;
			Если ДопДанныеПримерка.НайтиСтроки(СтруктураПримерка).Количество() Тогда
				ЗаписьРегистра = Движения.зпИсходныеДанныеРасчетаЗППоЗаказамДополнительныеНачисления.Добавить();
				ЗаписьРегистра.Период = ДатаЗакрытия;
				ЗаписьРегистра.Регион = ТерминалДоставки;
				ЗаписьРегистра.СхемаРасчетаЗП = СхемаРасчетаЗП;
				ЗаписьРегистра.ТарифРасчетаЗП = ТарифРасчетаЗП;
				ЗаписьРегистра.Начисление = Справочники.зпНачисления.Примерка;
				ЗаписьРегистра.ДатаРасчета = ДатаЗакрытия;
				ЗаписьРегистра.ВидЗанятости = Перечисления.зпВидыЗанятости.ОсновнаяЗанятость;
				ЗаписьРегистра.Рейс = СтрокаТЧ.РейсДокумент;
				ЗаписьРегистра.ФизЛицо = ДопДанныеЭкспедитор.ФизЛицо;
				ЗаписьРегистра.СоставЭкипажа = СоставЭкипажа;
				ЗаписьРегистра.ТипЗаказа = СтрокаТЧ.ТипЗаказа;
				ЗаписьРегистра.Заказ = СтрокаТЧ.Реализация;
				ЗаписьРегистра.Сумма = СтрокаТЧ.СтоимостьПримеркиЭкспедитор;
				ЗаписьРегистра.ТарифПримерки = СтрокаТЧ.ТарифПримерки;
				ЗаписьРегистра.КоличествоSKUПримерки = СтрокаТЧ.КоличествоSKUПримерки;
				ЗаписьРегистра.ОсновноеНачисление = СтрокаТЧ.ОсновноеНачислениеЭкспедитор;
				ЗаписьРегистра.Роль = ДопДанныеЭкспедитор.Роль;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
	Движения.зпИсходныеДанныеРасчетаЗППоЗаказамДополнительныеНачисления.Записать();
	
КонецПроцедуры
 //CeHbKA #4383 10.11.2020

Процедура ОбновитьСуммыКомиссийВАдминке(ТипОбновления, Соединение)
	
	Стр = "declare @ords [dbo].[TOrder]";
	
	Для Каждого Тек Из Заказы Цикл
		Если Тек.Закрыть Или Тек.Отклонить Тогда
			Стр = Стр + Символы.ПС + "insert into @ords(orderId) values (" + СокрЛП(Тек.Номер) + ")";
		КонецеСли;	
	КонецЦикла;	
	
	Стр = Стр + Символы.пс + "EXEC p1c_calcCommission @ords," + Строка(ТипОбновления);
	
	Евген.ЗапросКИнтернетМагазину(Стр, Соединение);
	
КонецПроцедуры	

Процедура ЗаполнитьТаблицуКорректировокПоЗаказно(ТабКорректировок) Экспорт
	ТабКорректировок = Новый ТаблицаЗначений;
	ТабКорректировок.Колонки.Добавить("Заказ");
	ТабКорректировок.Колонки.Добавить("ЧистыеУслугиСД");
	ТабКорректировок.Колонки.Добавить("УслугиСД");
	ТабКорректировок.Колонки.Добавить("Подъем");
	ТабКорректировок.Колонки.Добавить("КомментарийСД");
	ТабКорректировок.Колонки.Добавить("ПодъемВодитель");
	ТабКорректировок.Колонки.Добавить("VIPЗаказ");
	ТабКорректировок.Колонки.Добавить("ОбъемныйБрейк");
	ТабКорректировок.Колонки.Добавить("ТарифицируемыйВес");
	ТабКорректировок.Колонки.Добавить("КатегорияДоставки");
	ТабКорректировок.Колонки.Добавить("РасчетныйБрейк");
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат;
	КонецеСли;	
	
	Зап = Новый Запрос;
	Зап.Текст =
	"ВЫБРАТЬ
	|	КорректировкаУслугСД.Заказ КАК Заказ,
	|	КорректировкаУслугСД.ЧистыеУслугиСД КАК ЧистыеУслугиСД,
	|	КорректировкаУслугСД.УслугиСД КАК УслугиСД,
	|	КорректировкаУслугСД.Подъем КАК Подъем,
	|	КорректировкаУслугСД.КомментарийСД КАК КомментарийСД,
	|	КорректировкаУслугСД.ПодъемВодитель КАК ПодъемВодитель,
	|	КорректировкаУслугСД.VIPЗаказ КАК VIPЗаказ,
	|	КорректировкаУслугСД.ОбъемныйБрейк КАК ОбъемныйБрейк,
	|	КорректировкаУслугСД.ВесЗаказа КАК ТарифицируемыйВес,
	|	КорректировкаУслугСД.КатегорияДоставки КАК КатегорияДоставки,
	|	КорректировкаУслугСД.РасчетныйБрейк КАК РасчетныйБрейк
	|ИЗ
	|	Документ.КорректировкаУслугСД КАК КорректировкаУслугСД
	|ГДЕ
	|	КорректировкаУслугСД.ЗакрытиеЗаказов = &Закрытие
	|	И КорректировкаУслугСД.Проведен";
	Зап.УстановитьПараметр("Закрытие", Ссылка);
	
	Выб = Зап.Выполнить().Выбрать();
	Пока Выб.Следующий() Цикл
		Нов = ТабКорректировок.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Выб);
	КонецЦикла;	
КонецПроцедуры	

Процедура ЗаполнитьТаблицуРасстоянийЗаказно(ТабРасстояний) Экспорт
	Если ТабРасстояний.Колонки.Количество() = 0 Тогда
		ТабРасстояний.Колонки.Добавить("Заказ");
		ТабРасстояний.Колонки.Добавить("Расстояние");
		ТабРасстояний.Колонки.Добавить("ПовышающийКоэффициент");
		ТабРасстояний.Колонки.Добавить("РезультатРасчета");
	КонецЕсли;	
	
	ТабРасстояний.Очистить();
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат;
	КонецеСли;	
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	|	ЗакрытиеЗаказовРасстояния.Заказ КАК Заказ,
	|	ЗакрытиеЗаказовРасстояния.Расстояние КАК Расстояние
	|ИЗ
	|	Документ.ЗакрытиеЗаказов.Расстояния КАК ЗакрытиеЗаказовРасстояния
	|ГДЕ
	|	ЗакрытиеЗаказовРасстояния.Ссылка = &Закрытие
	|	И ЗакрытиеЗаказовРасстояния.ТипЗамераРасстояния = ЗНАЧЕНИЕ(Перечисление.ТипыЗамераРасстояний.ПоПрямойОтБлизжайшегоСъездаСМагистрали)";
	
	// Якурнов 18.07.2018 13:36:55
	КоэффициентТарификацииКилометража = ПолучитьПовышающийКоэффициентТарификацииКилометража();
	Зап.Текст = "ВЫБРАТЬ
	|	ЗакрытиеЗаказовРасстояния.Заказ КАК Заказ,
	|	ЗакрытиеЗаказовРасстояния.Расстояние КАК Расстояние,
	|	ЗакрытиеЗаказовРасстояния.РезультатРасчета КАК РезультатРасчета,
	|	ЗакрытиеЗаказовРасстояния.ПовышающийКоэффициент КАК ПовышающийКоэффициент
	|ИЗ
	|	Документ.ЗакрытиеЗаказов.Расстояния КАК ЗакрытиеЗаказовРасстояния
	|ГДЕ
	|	ЗакрытиеЗаказовРасстояния.Ссылка = &Закрытие
	|	И ЗакрытиеЗаказовРасстояния.ТипЗамераРасстояния = ЗНАЧЕНИЕ(Перечисление.ТипыЗамераРасстояний.ПоПрямойОтБлизжайшегоСъездаСМагистрали)";
	
	//Зап.Текст = "ВЫБРАТЬ
	//            |	ЗакрытиеЗаказовЗаказы.ЗонаТарификации.ПрименятьПовышающийКоэффициент КАК ПрименятьПовКоэфф,
	//            |	ЗакрытиеЗаказовЗаказы.Реализация КАК Заказ
	//            |ПОМЕСТИТЬ ТабКоэф
	//            |ИЗ
	//            |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	//            |ГДЕ
	//            |	ЗакрытиеЗаказовЗаказы.Ссылка = &Закрытие
	//            |;
	//            |
	//            |////////////////////////////////////////////////////////////////////////////////
	//            |ВЫБРАТЬ
	//            |	ЗакрытиеЗаказовРасстояния.Заказ КАК Заказ,
	//            |	ЗакрытиеЗаказовРасстояния.Расстояние КАК Расстояние,
	//            |	ЕСТЬNULL(ТабКоэф.ПрименятьПовКоэфф,ЛОЖЬ) КАК ПрименятьПовКоэфф
	//            |ИЗ
	//            |	Документ.ЗакрытиеЗаказов.Расстояния КАК ЗакрытиеЗаказовРасстояния
	//            |		ЛЕВОЕ СОЕДИНЕНИЕ ТабКоэф КАК ТабКоэф
	//            |		ПО ЗакрытиеЗаказовРасстояния.Заказ = ТабКоэф.Заказ
	//            |ГДЕ
	//            |	ЗакрытиеЗаказовРасстояния.Ссылка = &Закрытие
	//            |	И ЗакрытиеЗаказовРасстояния.ТипЗамераРасстояния = ЗНАЧЕНИЕ(Перечисление.ТипыЗамераРасстояний.ПоПрямойОтБлизжайшегоСъездаСМагистрали)";
	Зап.УстановитьПараметр("Закрытие", Ссылка);
	
	Выб = Зап.Выполнить().Выбрать();
	Пока Выб.Следующий() Цикл
		Нов = ТабРасстояний.Добавить();
		//Нов.Заказ = Выб.Заказ;
		//Нов.РезультатРасчета = Выб.Расстояние;
		//
		//Если Выб.Заказ.ЗонаТарификации.ПрименятьПовышающийКоэффициент Тогда
		//	Нов.ПовышающийКоэффициент = КоэффициентТарификацииКилометража;
		//	Нов.Расстояние = Нов.РезультатРасчета *(1 + КоэффициентТарификацииКилометража);
		//Иначе
		//	Нов.Расстояние = Нов.РезультатРасчета;
		//КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Нов, Выб);
	КонецЦикла;	
КонецПроцедуры

//+Степанов Задача № 3945
Процедура ЗаписатьСостоянияЗакрытияЗаказов(ЗаказЗакрыт)
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЗакрытиеЗаказовЗаказы.Реализация КАК Заказ
		               |ИЗ
		               |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
		               |ГДЕ
		               |	ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
		               |	И ЗакрытиеЗаказовЗаказы.ТипЗаказа В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка), ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз))
		               |	И ЗакрытиеЗаказовЗаказы.Закрыть
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ЗакрытиеЗаказовЗаказы.Реализация
		               |ИЗ
		               |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
		               |ГДЕ
		               |	ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
		               |	И ЗакрытиеЗаказовЗаказы.ТипЗаказа В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка), ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз))
		               |	И ЗакрытиеЗаказовЗаказы.Отклонить";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Пользователь = ПараметрыСеанса.ТекущийПользователь;
		НаборЗаписей = РегистрыСведений.СостоянияЗакрытияЗаказов.СоздатьНаборЗаписей();
		Пока Выборка.Следующий() Цикл
			Запись = НаборЗаписей.Добавить();
			Запись.Период = ТекущаяДата();
			Запись.Заказ = Выборка.Заказ;
			Запись.ЗаказЗакрыт = ЗаказЗакрыт;
			Запись.Документ = Ссылка;
			Запись.Пользователь = Пользователь;
		КонецЦикла;	
		НаборЗаписей.Записать(Ложь);
КонецПроцедуры	

//+Степанов Задача № 3945
Функция ЕстьЗаписиВРегистрахЗакрытий()
	
	ЕстьЗаписи = Ложь;
	ЗакрываемыеЗаказы = Заказы.ВыгрузитьКолонку("Реализация");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗакрытиеЗаказовЗаказы.Реализация КАК Заказ
	               |ПОМЕСТИТЬ втЗаказы
	               |ИЗ
	               |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	               |ГДЕ
	               |	ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
	               |	И ЗакрытиеЗаказовЗаказы.Закрыть
	               |	И ЗакрытиеЗаказовЗаказы.ТипЗаказа В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка), ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз))
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗакрытиеЗаказовЗаказы.Реализация
	               |ИЗ
	               |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	               |ГДЕ
	               |	ЗакрытиеЗаказовЗаказы.Ссылка = &Ссылка
	               |	И ЗакрытиеЗаказовЗаказы.Отклонить
	               |	И ЗакрытиеЗаказовЗаказы.ТипЗаказа В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка), ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗакрытыеЗаказы.Реализация КАК Реализация
	               |ИЗ
	               |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	               |ГДЕ
	               |	ЗакрытыеЗаказы.Реализация В
	               |			(ВЫБРАТЬ
	               |				втЗаказы.Заказ КАК Заказ
	               |			ИЗ
	               |				втЗаказы КАК втЗаказы)
	               |	И ЗакрытыеЗаказы.Регистратор <> &Ссылка";
	Запрос.УстановитьПараметр("ЗакрываемыеЗаказы",ЗакрываемыеЗаказы);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Сообщить("Документ " + Строка(Выборка.Реализация) + " уже закрыт!");
		ЕстьЗаписи = Истина;
	КонецЦикла;	
		
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	СостоянияЗакрытияЗаказовСрезПоследних.Заказ КАК Заказ
	//               |ИЗ
	//               |	РегистрСведений.СостоянияЗакрытияЗаказов.СрезПоследних(
	//               |			,
	//               |			Заказ В (&ЗакрываемыеЗаказы)
	//               |				И ЗаказЗакрыт
	//               |				И Документ <> &Ссылка) КАК СостоянияЗакрытияЗаказовСрезПоследних";
	//Запрос.УстановитьПараметр("ЗакрываемыеЗаказы",ЗакрываемыеЗаказы);
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Сообщить("Документ " + Строка(Выборка.Заказ) + " уже закрыт!");
	//	ЕстьЗаписи = Истина;
	//КонецЦикла;
	
	Возврат ЕстьЗаписи
	
КонецФункции	

// Якурнов 18.07.2018 13:45:07
Функция ПолучитьПовышающийКоэффициентТарификацииКилометража()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НастройкиУчетаОбщиеСрезПоследних.ПовышающийКоэффициентТарификацииКилометража КАК ПовышающийКоэффициентТарификацииКилометража
	               |ИЗ
	               |	РегистрСведений.НастройкиУчетаОбщие.СрезПоследних(&ДатаЗакрытия, ) КАК НастройкиУчетаОбщиеСрезПоследних";
	Запрос.УстановитьПараметр("ДатаЗакрытия",ДатаЗакрытия);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.ПовышающийКоэффициентТарификацииКилометража;
	КонецЦикла;
	
	Возврат 0;
		
КонецФункции

//Задача № 3617 Переварюха В.В. 23.11.2019	
Процедура ВызовFinalizationPendingChanges()
	
	МассивПараметров = Новый Массив;

	Для каждого СтрокаЗаказа Из Заказы Цикл
		
		Если СтрокаЗаказа.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка Тогда
			
			Если СтрокаЗаказа.Закрыть ИЛИ СтрокаЗаказа.Отклонить Тогда
			
				СтруктураЗапроса = Новый Структура;
				
				Попытка
					СтруктураЗапроса.Вставить("OrderId", Число(СтрокаЗаказа.Реализация.Номер));
				Исключение				
					Сообщить("Заказ" +СтрокаЗаказа.Реализация.Номер+" не был добавлен в Админку");
					Продолжить;					
				КонецПопытки;
			
				СтруктураЗапроса.Вставить("EventDate", ТекущаяДата());
				СтруктураЗапроса.Вставить("Trip", СокрЛП(Рейс.Номер));
				СтруктураЗапроса.Вставить("Who", ПользователиИнформационнойБазы.ТекущийПользователь().Имя); 
				
				МассивПараметров.Добавить(СтруктураЗапроса);
					
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивПараметров.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("changes",МассивПараметров);
			
	СтруктураВозврата 
	= ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.FinalizationPendingChangesResult, ПараметрыЗапроса);

	Если НЕ СтруктураВозврата.Успешно Тогда
				
		Мас = Новый Массив;
		Мас.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		Мас.Добавить("a.pryalkin@strizh-logistic.ru");
		Мас.Добавить("v.perevaruha@strizh-logistic.ru");
		
		lem.ОтправитьСообщение(Мас,
		"Ошибка выполнения метода 'FinalizationPendingChanges'", 
		"Ошибка выполнения метода 'FinalizationPendingChanges' при проведении документа " + Ссылка + " по заказу " + СтрокаЗаказа.Реализация.Номер);
		
	КонецЕсли;
	
КонецПроцедуры;
//Задача № 3617 Переварюха В.В. 23.11.2019	

//Процедура ОбновитьТипыОпл

БылПроведен = Проведен;