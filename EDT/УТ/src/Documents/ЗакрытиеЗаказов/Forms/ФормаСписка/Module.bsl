&НаСервере
Процедура ПоказатьКорректировку(Номер)
	Если Номер = Неопределено Тогда
		КорректировкаСД = Документы.КорректировкаУслугСД.ПустаяСсылка();
		Возврат;
	КонецеСли;	
	
	Зап = Новый Запрос;
	
	Зап.Текст = "ВЫБРАТЬ
	            |	КорректировкаУслугСД.Ссылка Как Док
	            |ИЗ
	            |	Документ.КорректировкаУслугСД КАК КорректировкаУслугСД
	            |ГДЕ
	            |	КорректировкаУслугСД.Проведен = ИСТИНА
	            |	И КорректировкаУслугСД.Заказ.Номер = &Номер";
	Зап.УстановитьПараметр("Номер", Номер);			
	
	Выб = Зап.Выполнить().Выбрать();
	
	
	Если Выб.Следующий() Тогда
		КорректировкаСД = Выб.Док;
	Иначе
		КорректировкаСД = Документы.КорректировкаУслугСД.ПустаяСсылка();
	КонецеСли;	
КонецПроцедуры	

&НаСервере
Процедура ПоказатьКорректировкуПоВнешнемуНомеру(Номер)
	Если Номер = Неопределено Тогда
		КорректировкаСД = Документы.КорректировкаУслугСД.ПустаяСсылка();
		Возврат;
	КонецеСли;	
	
	Зап = Новый Запрос;
	
	Зап.Текст = "ВЫБРАТЬ
	            |	КорректировкаУслугСД.Ссылка КАК Док
	            |ИЗ
	            |	Документ.КорректировкаУслугСД КАК КорректировкаУслугСД
	            |ГДЕ
	            |	КорректировкаУслугСД.Проведен = ИСТИНА
	            |	И КорректировкаУслугСД.Заказ.НомерВнешнегоЗаказа = &Номер";
	Зап.УстановитьПараметр("Номер", Номер);			
	
	Выб = Зап.Выполнить().Выбрать();
	
	
	Если Выб.Следующий() Тогда
		КорректировкаСД = Выб.Док;
	Иначе
		КорректировкаСД = Документы.КорректировкаУслугСД.ПустаяСсылка();
	КонецеСли;	
КонецПроцедуры	

&НаКлиенте
Процедура СоздатьКорректировку(Команда)
	//Если Не ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.Корректировка1) = 1 Тогда
	//	Нов = Документы.ЗакрытиеЗаказовКорректировка.СоздатьДокумент();
	//	ЗаполнитьЗначенияСвойств(Нов, Элементы.Список.ТекущиеДанные.Ссылка);
	//	Нов.КорректируемыйДокумент = Элементы.Список.ТекущиеДанные.Ссылка;
	//    Форма = Нов.ПолучитьФорму("ФормаДокументаСПоказателями");
	//	Форма.Открыть();		
	//Иначе
	//	Д = Новый Структура("Ключ", Элементы.Список.ТекущиеДанные.Корректировка1);
	//	Форма = ПолучитьФорму("Документ.ЗакрытиеЗаказовКорректировка.Форма.ФормаДокументаСПоказателями", Д, ЭтаФорма);
	//	Форма.Открыть();
	//КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнийНомерЗаказаПриИзменении(Элемент)

	Если ЗначениеЗаполнено(ВнешнийНомерЗаказа) Тогда
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	ЗакрытиеЗаказовЗаказы.Ссылка.Номер КАК Номер
		            |ИЗ
		            |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
		            |ГДЕ
		            |	ЗакрытиеЗаказовЗаказы.ВнешнийНомер = &ВнешнийНомер
		            |
		            |СГРУППИРОВАТЬ ПО
		            |	ЗакрытиеЗаказовЗаказы.Ссылка.Ссылка,
		            |	ЗакрытиеЗаказовЗаказы.Ссылка.Номер";
					
		Зап.УстановитьПараметр("ВнешнийНомер", ВнешнийНомерЗаказа);
		
		Рез = Зап.Выполнить().Выбрать();;
		Мас = Новый Массив;
		Если Рез.Количество() = 0 Тогда
			ОчиститьПоиск(Неопределено);
		Иначе
			Пока Рез.Следующий() Цикл
				Мас.Добавить(Рез.Номер);
			КонецЦикла;	
			//Список.Отбор.элементы[0].ПравоеЗначение = Мас;
			//Список.Отбор.элементы[0].Использование = Истина;
		ИП = "Номер";
		ПЗ = Мас;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);
		ПоказатьКорректировкуПоВнешнемуНомеру(ВнешнийНомерЗаказа);	
		КонецеСли;	
	Иначе
		ОчиститьПоиск(Неопределено);
	КонецеСли;
		
КонецПроцедуры

&НаСервере
Процедура ОчиститьПоиск(Команда)
	
	//Список.Отбор.элементы[0].Использование = Ложь;
	//Список.Отбор.элементы[1].Использование = Ложь;
	
		ИП = "Номер";
		ПЗ = Новый Массив;
		Исп = Ложь;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);
		ИП = "ТерминалДоставки";
		ПЗ = Новый Массив;
		Исп = Ложь;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);
		ИП = "НачалоПериода";
		ПЗ = ДатаПериода;
		Исп = Ложь;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,ВидСравненияКомпоновкиДанных.БольшеИлиРавно
								,
								,
								Исп,
								,
								);
		ИП = "КонецПериода";
		ПЗ = ДатаПериода;
		Исп = Ложь;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,ВидСравненияКомпоновкиДанных.МеньшеИлиРавно
								,
								,
								Исп,
								,
								);
	ВнешнийНомерЗаказа = "";
	НомерЗаказа = "";
	ТерминалДоставки = "";
	ДатаПериода = "";
	ПоказатьКорректировку(Неопределено);
	ПоказатьКорректировкуПоВнешнемуНомеру(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура НомерЗаказаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(НомерЗаказа) Тогда
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	ЗакрытиеЗаказовЗаказы.Ссылка.Номер КАК Номер
		            |ИЗ
		            |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
		            |ГДЕ
		            |	ЗакрытиеЗаказовЗаказы.Номер = &НомерЗаказа
		            |
		            |СГРУППИРОВАТЬ ПО
		            |	ЗакрытиеЗаказовЗаказы.Ссылка.Ссылка,
		            |	ЗакрытиеЗаказовЗаказы.Ссылка.Номер";
		Зап.УстановитьПараметр("НомерЗаказа", Формат(НомерЗаказа, "ЧГ="));
		
		Рез = Зап.Выполнить().Выбрать();;
		Мас = Новый Массив;
		Если Рез.Количество() = 0 Тогда
			ОчиститьПоиск(Неопределено);
		Иначе
			Пока Рез.Следующий() Цикл
				Мас.Добавить(Рез.Номер);
			КонецЦикла;	
			//Список.Отбор.элементы[0].ПравоеЗначение = Мас;
			//Список.Отбор.элементы[0].Использование = Истина;
			
		ИП = "Номер";
		ПЗ = Мас;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);
		
		ПоказатьКорректировку(НомерЗаказа);	
		КонецеСли;	
	Иначе
		ОчиститьПоиск(Неопределено);
	КонецеСли;

КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Терминал = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнойФилиал");
	
	Если (РольДоступна("РегиональныйТоваровед") Или РольДоступна("Кассир")) И ЗначениеЗаполнено(ПараметрыСеанса.ТерминалДоставки) Тогда	
		Терминал = ПараметрыСеанса.ТерминалДоставки;		
		//Если РольДоступна("Кассир") Тогда
		//	Элементы.ТерминалДоставки.Доступность = Ложь;
		//КонецеСли;	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Терминал) Тогда
		ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж;
	Иначе
		ТерминалДоставки = Терминал;
	КонецеСли;
	ТипЗакрытия = 0;
	УстановкаОтбораПоТерминалу();
	
КонецПроцедуры


&НаКлиенте
Процедура ТерминалДоставкиПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	УстановкаОтбораПоТерминалу();
КонецПроцедуры


&НаСервере
Процедура УстановкаОтбораПоТерминалу()
	Мас = Новый Массив;
	Если ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда	
		Мас.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
	КонецеСли;
	Мас.Добавить(ТерминалДоставки);
	Если ЗначениеЗаполнено(ТерминалДоставки) Тогда
		//Список.Отбор.элементы[1].ПравоеЗначение = Мас;
		//Список.Отбор.элементы[1].Использование = Истина;
		ИП = "ТерминалДоставки";
		ПЗ = Мас;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								)
		
	Иначе
		ОчиститьПоиск(Неопределено);
	КонецеСли;	
КонецПроцедуры	


&НаСервере
Процедура ОтменитьПроведениеСКорректировкамиНаСервере(Док)
	// Вставить содержимое обработчика.
	
	ЗапКорр = Новый Запрос;
	ЗапКорр.Текст = "ВЫБРАТЬ
	                |	КорректировкаУслугСД.Ссылка КАК Корр
	                |ИЗ
	                |	Документ.КорректировкаУслугСД КАК КорректировкаУслугСД
	                |ГДЕ
	                |	КорректировкаУслугСД.Проведен = ИСТИНА
	                |	И КорректировкаУслугСД.ЗакрытиеЗаказов = &ЗакрытиеЗаказов";
	ЗапКорр.УстановитьПараметр("ЗакрытиеЗаказов", Док);				
	Таб = ЗапКорр.Выполнить().Выгрузить();
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Для Каждого Тек Из Таб Цикл
		ДК = Тек.Корр.ПолучитьОбъект();
		ДК.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЦикла;	
	
	ДЗ = Док.ПолучитьОбъект();
	ДЗ.ДополнительныеСвойства.Вставить("ОбходПроверок", Истина);

	ДЗ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры


&НаКлиенте
Процедура ОтменитьПроведениеСКорректировками(Команда)
	Док = Элементы.Список.ТекущаяСтрока;
	Если ЗначениеЗаполнено(Док) Тогда
		ОтменитьПроведениеСКорректировкамиНаСервере(Док);
		Элементы.Список.Обновить();
	КонецеСли;	
КонецПроцедуры


&НаСервере
Процедура ПровестиСКорректировкамиНаСервере(Док)
	// Вставить содержимое обработчика.
	
	ЗапКорр = Новый Запрос;
	ЗапКорр.Текст = "ВЫБРАТЬ
	                |	КорректировкаУслугСД.Ссылка КАК Корр
	                |ИЗ
	                |	Документ.КорректировкаУслугСД КАК КорректировкаУслугСД
	                |ГДЕ
	                |	КорректировкаУслугСД.ПометкаУдаления = Ложь
	                |	И КорректировкаУслугСД.ЗакрытиеЗаказов = &ЗакрытиеЗаказов";
	ЗапКорр.УстановитьПараметр("ЗакрытиеЗаказов", Док);				
	Таб = ЗапКорр.Выполнить().Выгрузить();
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	ДЗ = Док.ПолучитьОбъект();
	ДЗ.ДополнительныеСвойства.Вставить("ОбходПроверок", Истина);
	ДЗ.Записать(РежимЗаписиДокумента.Проведение);
	
	
	Для Каждого Тек Из Таб Цикл
		ДК = Тек.Корр.ПолучитьОбъект();
		ДК.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;	
	
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры


&НаКлиенте
Процедура ПровестиСКорректировками(Команда)
	Док = Элементы.Список.ТекущаяСтрока;
	Если ЗначениеЗаполнено(Док) Тогда
		ПровестиСКорректировкамиНаСервере(Док);
		Элементы.Список.Обновить();
	КонецеСли;
КонецПроцедуры


&НаКлиенте
Процедура ДатаПериодаПриИзменении(Элемент)
	ДатаПериодаПриИзмененииНаСервере();
КонецПроцедуры


&НаСервере
Процедура ДатаПериодаПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
	УстановкаОтбораПоПериоду();
КонецПроцедуры

&НаСервере
Процедура УстановкаОтбораПоПериоду()
	Если ЗначениеЗаполнено(ДатаПериода) Тогда
		//Список.Отбор.элементы[1].ПравоеЗначение = Мас;
		//Список.Отбор.элементы[1].Использование = Истина;
		ИП = "НачалоПериода";
		ПЗ = ДатаПериода;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,ВидСравненияКомпоновкиДанных.БольшеИлиРавно
								,
								,
								Исп,
								,
								);
		ИП = "КонецПериода";
		ПЗ = ДатаПериода;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,ВидСравненияКомпоновкиДанных.МеньшеИлиРавно
								,
								,
								Исп,
								,
								);
	Иначе
		ОчиститьПоиск(Неопределено);
	КонецеСли;	
КонецПроцедуры	


&НаКлиенте
Процедура ТипЗакрытияПриИзменении(Элемент)
	ТипЗакрытияПриИзмененииНаСервере();
КонецПроцедуры


&НаСервере
Процедура ТипЗакрытияПриИзмененииНаСервере()
	Если ТипЗакрытия = 1 Тогда
		ИП = "АвтоматическоеЗакрытие";
		ПЗ = Истина;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);
	ИначеЕсли ТипЗакрытия = 2 Тогда
		ИП = "АвтоматическоеЗакрытие";
		ПЗ = Ложь;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);	
	ИначеЕсли ТипЗакрытия = 0 Тогда
		ИП = "АвтоматическоеЗакрытие";
		ПЗ = Ложь;
		Исп = Ложь;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);	
	КонецеСли;							
КонецПроцедуры


&НаСервере
Процедура УдалитьКорректировкиНаСервере(Док)
	ЗапКорр = Новый Запрос;
	ЗапКорр.Текст = "ВЫБРАТЬ
	                |	КорректировкаУслугСД.Ссылка КАК Корр
	                |ИЗ
	                |	Документ.КорректировкаУслугСД КАК КорректировкаУслугСД
	                |ГДЕ
	                |	КорректировкаУслугСД.ПометкаУдаления = Ложь
	                |	И КорректировкаУслугСД.ЗакрытиеЗаказов = &ЗакрытиеЗаказов";
	ЗапКорр.УстановитьПараметр("ЗакрытиеЗаказов", Док);				
	Таб = ЗапКорр.Выполнить().Выгрузить();
	
	Если Таб.Количество() = 0 Тогда
		Сообщить("Корректировки не обнаружены!");		
		Возврат;
	КонецеСли;	
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Для Каждого Тек Из Таб Цикл
		ДК = Тек.Корр.ПолучитьОбъект();
		ДК.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		ДК.ПометкаУдаления = Истина;
		ДК.Записать(РежимЗаписиДокумента.Запись);
		Сообщить("Удалена корректировка: " + ДК.Ссылка);
	КонецЦикла;	
	ЗафиксироватьТранзакцию();
КонецПроцедуры


&НаКлиенте
Процедура УдалитьКорректировки(Команда)
	Док = Элементы.Список.ТекущаяСтрока;
	От = Вопрос("Вы действительно хотите удалить корректировки по документу?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
	
	Если От <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецеСли;	
	
	Если ЗначениеЗаполнено(Док) Тогда
		УдалитьКорректировкиНаСервере(Док);
		Элементы.Список.Обновить();
	КонецеСли;	
КонецПроцедуры

//+Степанов Задача № 3443 Данные о проверке документа перенесены в РС.
&НаСервере
Процедура ИзменитьДокументПроверен(ВыбраннаяСтрока,СтатусПроверкиДокумента)
	Если ВыбраннаяСтрока.Проведен Тогда
		//+Степанов Задача № 3443 
		//Док = ВыбраннаяСтрока.ПолучитьОбъект();
		//Док.ДокументПроверен = НЕ Док.ДокументПроверен;
		//Док.Записать();
		//-Степанов
		
		//CeHbKA
		ПроверкаДокументовСервер.СделатьЗаписьПроверенныеДокументы(ВыбраннаяСтрока, Не СтатусПроверкиДокумента);
		baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(ВыбраннаяСтрока, Не СтатусПроверкиДокумента);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументПроверен(Команда)
	ИзменитьДокументПроверен(Элементы.Список.ТекущаяСтрока,Элементы.Список.ТекущиеДанные.ДокументПроверен);
	Элементы.Список.Обновить();
	ИзменитьСостояниеКнопки();
КонецПроцедуры
//-Степанов

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ИзменитьСостояниеКнопки();
КонецПроцедуры

//Асеев 09.02.2024 (Задача № 5227)>>>
&НаСервереБезКонтекста
Функция ПолучитьСостояниеКнопок(Знач ДоступностьКнопки, Знач ЗакрытиеЗаказов)
	
	СостояниеКнопок = Новый Структура;
	
	Если ДоступностьКнопки Тогда
		СостояниеКнопок.Вставить("Открыт", РольДоступна("ОтменаПроверкиПроверенныхЗакрытий") Или Не baoВызовСервера.РейсЗакрыт(ЗакрытиеЗаказов));
	КонецЕсли;
	
	СостояниеКнопок.Вставить("ОтключитьПроверки", РегистрыСведений.РежимыПроверокДокументовПриИзменении.ПолучитьРазрешенияДокумента(ЗакрытиеЗаказов, Перечисления.ОбластиПроверокИзмененияДанных.зп_РасчетЗП));
	
	Возврат СостояниеКнопок;
	
КонецФункции
//Асеев 09.02.2024 (Задача № 5227)<<<

&НаКлиенте
Процедура ИзменитьСостояниеКнопки()
	ВыбраннаяСтрока = Элементы.Список.ТекущиеДанные;
	Кнопка = Элементы.ФормаДокументПроверен;
	Кнопка2 = Элементы.СписокКонтекстноеМенюДокументПроверен;
	Если Элементы.Список.ВыделенныеСтроки.Количество() = 1 Тогда
		Кнопка.Доступность = ВыбраннаяСтрока.Проведен;
		Кнопка.Пометка = ВыбраннаяСтрока.ДокументПроверен;
		Кнопка2.Доступность = ВыбраннаяСтрока.Проведен;
		Кнопка2.Пометка = ВыбраннаяСтрока.ДокументПроверен;
		
		СостояниеКнопок = ПолучитьСостояниеКнопок(Кнопка.Доступность, Элементы.Список.ТекущаяСтрока);
		
		//CeHbKA
		Если Кнопка.Доступность Тогда
			////+Степанов Задача № 3443
			////Закрыт = baoВызовСервера.РейсЗакрыт(Элементы.Список.ТекущаяСтрока);
			//Закрыт = Не РольДоступна("ОтменаПроверкиПроверенныхЗакрытий") И baoВызовСервера.РейсЗакрыт(Элементы.Список.ТекущаяСтрока);
			////-Степанов
			//Кнопка.Доступность = НЕ Закрыт;
			//Кнопка2.Доступность = НЕ Закрыт;
			Открыт = СостояниеКнопок.Открыт;
			Кнопка.Доступность = Открыт;
			Кнопка2.Доступность = Открыт;
		КонецЕсли; 
		
		ОтключитьПроверки = СостояниеКнопок.ОтключитьПроверки;
		
		Элементы.СписокКонтекстноеМенюОтключитьПроверки.Пометка = ОтключитьПроверки;
		Элементы.СписокКонтекстноеМенюОтключитьПроверки.Доступность = Не ОтключитьПроверки;
		
	Иначе
		Кнопка.Доступность = Ложь;
		Кнопка2.Доступность = Ложь;
		
		//Асеев 09.02.2024 (Задача № 5227)>>>
		Элементы.СписокКонтекстноеМенюОтключитьПроверки.Пометка = Ложь;
		Элементы.СписокКонтекстноеМенюОтключитьПроверки.Доступность = Ложь;
		//Асеев 09.02.2024 (Задача № 5227)<<<
		
	КонецЕсли;
	
КонецПроцедуры

//Асеев 09.02.2024 (Задача № 5227)>>>
&НаКлиенте
Процедура ОтключитьПроверки(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ОтключитьПроверкиВопрос", ЭтотОбъект, Новый Структура("Документ", Элементы.Список.ТекущаяСтрока)), "Вы действительно хотите отключить проверки документа при проведении?
	|Это может привести к рассогласованности данных.", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтключитьПроверкиНаСервере(Знач Документ)
	
	Период = ТекущаяДата();
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	НаборЗаписей = РегистрыСведений.РежимыПроверокДокументовПриИзменении.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(Период);
	НаборЗаписей.Отбор.Документ.Установить(Документ);
	
	ЗаписьРегистра = НаборЗаписей.Добавить();
	ЗаписьРегистра.Период = Период;
	ЗаписьРегистра.Документ = Документ;
	ЗаписьРегистра.ОбластьПроверкиДанных = Перечисления.ОбластиПроверокИзмененияДанных.зп_РасчетЗП;
	ЗаписьРегистра.ОтключитьПроверку = Истина;
	ЗаписьРегистра.Пользователь = Пользователь;
	
	ЗаписьРегистра = НаборЗаписей.Добавить();
	ЗаписьРегистра.Период = Период;
	ЗаписьРегистра.Документ = Документ;
	ЗаписьРегистра.ОбластьПроверкиДанных = Перечисления.ОбластиПроверокИзмененияДанных.зп_ФиксацияЗП;
	ЗаписьРегистра.ОтключитьПроверку = Истина;
	ЗаписьРегистра.Пользователь = Пользователь;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПроверкиВопрос(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОтключитьПроверкиНаСервере(ДополнительныеПараметры.Документ);
		ИзменитьСостояниеКнопки();
	КонецЕсли;
	
КонецПроцедуры
//Асеев 09.02.2024 (Задача № 5227)<<<

