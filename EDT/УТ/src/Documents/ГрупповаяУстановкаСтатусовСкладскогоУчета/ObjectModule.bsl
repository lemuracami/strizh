
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
    
    // регистр СтатусыСкладскогоУчета
    Движения.СтатусыСкладскогоУчета.Записывать = Истина;
    Движения.СтатусыСкладскогоУчета.Очистить();
	
	МассивСтатусов = Неопределено;// Задача № 2813
	
    Для Каждого ТекСтрокаСтатусыЗаказов Из СтатусыЗаказов Цикл
        Движение = Движения.СтатусыСкладскогоУчета.Добавить();
        Движение.Период = Дата;
        Движение.Заказ = ТекСтрокаСтатусыЗаказов.Заказ;
        Движение.СтатусСкладскогоУчета = ТекСтрокаСтатусыЗаказов.СтатусСкладскогоУчета;
        Движение.ТипЗаказа = ТекСтрокаСтатусыЗаказов.ТипЗаказа;
        
        //+++++Серегин М.В. 28.01.2016 18:17:24 
        Если ТекСтрокаСтатусыЗаказов.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ВозвратОтправлен Тогда
            Статус = 312;
		// МАС - 13.04.2018 - № --->> 
		ИначеЕсли ТекСтрокаСтатусыЗаказов.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПодготовленКВозврату Тогда
            Статус = 314;
		// <<--- МАС 	
        ИначеЕсли ТекСтрокаСтатусыЗаказов.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ВозвратПринятМагазином Тогда
            Статус = 313;
        КонецЕсли;
        
        Если Статус <> Неопределено Тогда
            //СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(ТекСтрокаСтатусыЗаказов.Заказ.Номер), "ЧГ=") + ","+Статус+",'Возврат товаров поставщику'";
			
			Если РаботаСоСтатусамиЗаказовСервер.СохранитьСтатус(ТекСтрокаСтатусыЗаказов.Заказ, Статус, Ссылка,,ТерминалОбработки) Тогда
			// Задача № 3027 //Если lem.СохранитьСтатус(ТекСтрокаСтатусыЗаказов.Заказ, Статус, Ссылка) Тогда
                //Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
				
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалОбработки.Код));// Задача № 3027

				// Задача № 2813
				МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(ТекСтрокаСтатусыЗаказов.Заказ.Номер, Статус, "Возврат товаров поставщику",,,МассивСтатусов, ДопПараметрыСтатуса); 

			КонецеСли;
			
			//Геннадий #4053 19.06.2020 ->
			Если Статус = 313 Тогда
				
				РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(ТекСтрокаСтатусыЗаказов.Заказ, Статус, ТекСтрокаСтатусыЗаказов.Заказ.СтатусИнтернетМагазина, Ссылка);

				МассивФинальныхСтатусов = Неопределено;
				
				orderID 				= СокрЛП(ТекСтрокаСтатусыЗаказов.Заказ.Номер);
				statusID				= ТекСтрокаСтатусыЗаказов.Заказ.СтатусИнтернетМагазина;//3;
				comment 				= "";
				who 					= ПараметрыСеанса.ТекущийПользователь;
				ProcessingTerminal 		= ТерминалОбработки.Код;
				
				МассивФинальныхСтатусов = mas.ДобавитьФинальныйСтатусКПакету(
						orderID, 
						statusID, 
						comment,
						who,,,,,,,,,,,
						ProcessingTerminal,,
						МассивФинальныхСтатусов,,
						Статус);
				
				Если МассивФинальныхСтатусов.Количество() > 0 Тогда
					
					ФайлДляКонтроля = Неопределено;
					РезультатОтправкиВАдминку = mas.ОтправитьМассивСтатусовЗаказов(МассивФинальныхСтатусов, "SetOrdersFinalStatus", ФайлДляКонтроля); 
					Если Не РезультатОтправкиВАдминку.Успешно Тогда
						Отказ = Истина;
					КонецЕсли;
		
				КонецЕсли;
				
			Конецесли;
			//Геннадий #4053 19.06.2020 <-
			
        КонецЕсли;
        //-----Серегин М.В. 28.01.2016 18:17:27         
    КонецЦикла;
	
	СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);// Задача № 2813	
			
	//Заполнение истории статусов    
	//НаборЗаписей = РегистрыСведений.ИсторияСтатусовСкладскогоУчетаВозвратовПоставщику.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.Период.Установить(Дата);
	//НаборЗаписей.Отбор.ВозвратПоставщику.Установить(Основание);
	////НаборЗаписей.Отбор.Ответственный.Установить(Ответственный);
	////НаборЗаписей.Отбор.СтатусСкладскогоУчета.Установить(СтатусСкладскогоУчета);
	//
	//Запись = НаборЗаписей.Добавить();
	//Запись.Период = Дата;
	//Запись.ВозвратПоставщику = Основание;
	//Запись.Ответственный = Ответственный;
	//Запись.СтатусСкладскогоУчета = СтатусСкладскогоУчета;
	//Запись.ДатаИзменения = ТекущаяДата();
	//НаборЗаписей.Записать();
	ТекДата = ТекущаяДата();
	НаборЗаписей = РегистрыСведений.ИсторияСтатусовСкладскогоУчетаВозвратовПоставщику.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ТекДата);
	НаборЗаписей.Отбор.ВозвратПоставщику.Установить(Основание);
	ЗаписьРегистра = НаборЗаписей.Добавить();
	ЗаписьРегистра.Период = ТекДата;
	ЗаписьРегистра.ВозвратПоставщику = Основание;
	ЗаписьРегистра.СтатусСкладскогоУчета = СтатусСкладскогоУчета;
	ЗаписьРегистра.ДокументРегистратор = Ссылка;
	ЗаписьРегистра.ДатаИзменения = ТекДата;
	ЗаписьРегистра.Ответственный = Ответственный;
	НаборЗаписей.Записать();
	
	ВводОстатковПоЗаказам(); // РН ОстаткиЗаказов /
	
    Если ЗначениеЗаполнено(Основание) И ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") 
    	И СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ВозвратПринятМагазином Тогда
		ВводМестоположенияЗаказов();
	КонецеСли;
	
КонецПроцедуры


Процедура ВводМестоположенияЗаказов()
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ГрупповаяУстановкаСтатусовСкладскогоУчетаСтатусыЗаказов.Заказ.Ссылка КАК Заказ,
	            |	ГрупповаяУстановкаСтатусовСкладскогоУчетаСтатусыЗаказов.Заказ.ТерминалПриема КАК Терминал
	            |ИЗ
	            |	Документ.ГрупповаяУстановкаСтатусовСкладскогоУчета.СтатусыЗаказов КАК ГрупповаяУстановкаСтатусовСкладскогоУчетаСтатусыЗаказов
	            |ГДЕ
	            |	ГрупповаяУстановкаСтатусовСкладскогоУчетаСтатусыЗаказов.Ссылка.Ссылка = &Док";
	Зап.УстановитьПараметр("Док", Ссылка);			
	
	
	Рез = Зап.Выполнить().Выгрузить();
	
	
//+++ БАО 02.08.2017 №1550	

	//Список = Новый СписокЗначений;
	//Массив = Рез.ВыгрузитьКолонку("Заказ");
	//Список.ЗагрузитьЗначения(Массив);
	Список = Рез.Скопировать(, "Заказ, Терминал");
	
//--- БАО 02.08.2017 №1550

	
	lem.ЗафиксироватьМестонахождениеЗаказа(Список, Справочники.ВидыМестонахожденияЗаказа.УПартнера, Ссылка);
	
КонецПроцедуры	

Процедура ВводОстатковПоЗаказам();
	
	Движения.ОстаткиЗаказов.Записывать = Истина;
    Движения.ОстаткиЗаказов.Очистить();	
    
    #Область Устарело
    ////+++++Серегин М.В. 03.02.2016 11:51:22 старый код
    //Если ЗначениеЗаполнено(Основание) И ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") 
    //	И СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ВозвратОтправлен Тогда
    //	
    //	УчитыватьОстатки = Ложь;
    //	Запрос = Новый Запрос(
    //	"ВЫБРАТЬ
    //	|	УчетОстатковПоКонтрагентам.УчитыватьОстатки
    //	|ИЗ
    //	|	РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
    //	|ГДЕ
    //	|	УчетОстатковПоКонтрагентам.Контрагент = &Контрагент
    //	|	И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков");
    //	Запрос.УстановитьПараметр("Контрагент", Основание.Контрагент);	
    //	Запрос.УстановитьПараметр("ДатаНачалаУчетаОстатков", Дата);
    //	Результат = Запрос.Выполнить().Выбрать();
    //	Если Результат.Следующий() Тогда
    //		УчитыватьОстатки = Результат.УчитыватьОстатки;	
    //	КонецЕсли;
    //	
    //    Если УчитыватьОстатки Тогда
    //        // регистр *** ОстаткиЗаказов ***
    //        Если СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ВозвратОтправлен Тогда
    //            
    //            
    //            Запрос = Новый Запрос(
    //            "ВЫБРАТЬ
    //            |   ВозвратТоваровПоставщикуТовары.Номенклатура,
    //            |   ВозвратТоваровПоставщикуТовары.Количество,
    //            |   ВозвратТоваровПоставщикуТовары.Ссылка.Склад,
    //            |   ВозвратТоваровПоставщикуТовары.Ссылка.Организация,
    //            |   ВозвратТоваровПоставщикуТовары.Ссылка.СуммаДокумента,
    //            |   РеализацияТоваровУслуг.Ссылка КАК Заказ,
    //            |   ВозвратТоваровПоставщикуТовары.Сумма
    //            |ИЗ
    //            |   Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
    //            |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
    //            |       ПО ВозвратТоваровПоставщикуТовары.ДокументПоступления.Номер = РеализацияТоваровУслуг.Номер
    //            |ГДЕ
    //            |   ВозвратТоваровПоставщикуТовары.Ссылка = &Ссылка");
    //            Запрос.УстановитьПараметр("Ссылка", Основание);
    //            Товары = Запрос.Выполнить().Выгрузить();
    //            Если Товары.Количество() > 0 Тогда 
    //                
    //                Для Каждого Товар Из Товары Цикл
    //                    ТипДоставкиЗаказа = smv.ПолучитьТипЗаказаNew(Товар.Заказ);
    //                    Если ТипДоставкиЗаказа = Неопределено Тогда 
    //                        Продолжить;
    //                    Иначе
    //                        Движение = Движения.ОстаткиЗаказов.ДобавитьРасход();
    //                        Движение.Период       = Дата;
    //                        Движение.Заказ        = Товар.Заказ;
    //                        Движение.Номенклатура = Товар.Номенклатура;
    //                        Движение.Склад        = Товар.Склад;
    //                        Движение.Организация  = Товар.Организация;
    //                        Движение.Количество   = Товар.Количество;
    //                        Движение.СуммаПрод    = Товар.Сумма;//+++++Серегин М.В. 29.01.2016 15:44:21 старый Движение.СуммаПрод    = Товар.СуммаДокумента;
    //                    КонецЕсли;
    //                КонецЦикла;
    //                
    //            КонецЕсли;
    //            
    //        КонецЕсли;	
    //    КонецЕсли;
    //КонецЕсли;
    ////-----Серегин М.В. 03.02.2016 11:51:27 
    #КонецОбласти 
    
	
	//// МАС - 11.07.2018 - № --->>
	//НовыйМеханизмВозвратов = Ложь;
	//Если ЗначениеЗаполнено(Основание) И ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") И ЗначениеЗаполнено(Основание.Сделка) И Основание.Сделка.НовыйМеханизм Тогда	
	//	НовыйМеханизмВозвратов = Истина;		
	//КонецЕсли;	 
		 
	//Если ЗначениеЗаполнено(Основание) И ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") 
	//	И ((СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ВозвратОтправлен И НЕ НовыйМеханизмВозвратов) ИЛИ (СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ВозвратПринятМагазином И НовыйМеханизмВозвратов)) Тогда
	Если ЗначениеЗаполнено(Основание) И ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") И СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ВозвратПринятМагазином Тогда
	//// <<--- МАС 		
		
		
    	УчитыватьОстатки = Ложь;
    	Запрос = Новый Запрос(
    	"ВЫБРАТЬ
    	|	УчетОстатковПоКонтрагентам.УчитыватьОстатки
    	|ИЗ
    	|	РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
    	|ГДЕ
    	|	УчетОстатковПоКонтрагентам.Контрагент = &Контрагент
    	|	И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков");
    	Запрос.УстановитьПараметр("Контрагент", Основание.Контрагент);	
    	Запрос.УстановитьПараметр("ДатаНачалаУчетаОстатков", Дата);
    	Результат = Запрос.Выполнить().Выбрать();
    	Если Результат.Следующий() Тогда
    		УчитыватьОстатки = Результат.УчитыватьОстатки;	
    	КонецЕсли;
		
        Если УчитыватьОстатки Тогда
            // регистр *** ОстаткиЗаказов ***
			//Если СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ВозвратОтправлен Тогда  
			
			// МАС - 13.06.2018 - № --->> 
			ДатаПериод = Неопределено;
			Если ЗначениеЗаполнено(Основание) И ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда		
				ДатаПериод = Основание.Дата;	
			Иначе 
				ДатаПериод = дата;			
			КонецЕсли;
			// <<--- МАС 
			
			
                
                Запрос = Новый Запрос(
                "ВЫБРАТЬ
                |   ВозвратТоваровПоставщикуТовары.Номенклатура,
                |   ВозвратТоваровПоставщикуТовары.Количество,
                |   ВозвратТоваровПоставщикуТовары.Ссылка.Склад,
                |   ВозвратТоваровПоставщикуТовары.Ссылка.Организация,
                |   ВозвратТоваровПоставщикуТовары.Ссылка.СуммаДокумента,
                |   РеализацияТоваровУслуг.Ссылка КАК Заказ,
                |   ВозвратТоваровПоставщикуТовары.Сумма
                |ПОМЕСТИТЬ ВТ_Товары
                |ИЗ
                |   Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
                |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
                |       ПО ВозвратТоваровПоставщикуТовары.ДокументПоступления.Номер = РеализацияТоваровУслуг.Номер
                |ГДЕ
                |   ВозвратТоваровПоставщикуТовары.Ссылка = &Ссылка
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |   ВТ_Товары.Заказ
                |ПОМЕСТИТЬ ВТ_Заказы
                |ИЗ
                |   ВТ_Товары КАК ВТ_Товары
                |
                |СГРУППИРОВАТЬ ПО
                |   ВТ_Товары.Заказ
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |   СУММА(ВложенныйЗапрос.Количество) КАК Количество,
                |   ВложенныйЗапрос.Номер
                |ПОМЕСТИТЬ ВТ_РеализацияКоличество
                |ИЗ
                |   (ВЫБРАТЬ
                |       РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
                |       РеализацияТоваровУслугТовары.Количество КАК Количество
                |   ИЗ
                |       Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
                |           ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
                |           ПО РеализацияТоваровУслугТовары.Ссылка = ВТ_Заказы.Заказ
                |   ГДЕ
                |       НЕ РеализацияТоваровУслугТовары.Номенклатура.Артикул В
                |                   (ВЫБРАТЬ
                |                       УслугиПоЗаказам.Артикул
                |                   ИЗ
                |                       Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
                |   
                |   ОБЪЕДИНИТЬ ВСЕ
                |   
                |   ВЫБРАТЬ
                |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
                |       РеализацияТоваровУслугПодарочныеПозиции.Количество
                |   ИЗ
                |       Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
                |           ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
                |           ПО РеализацияТоваровУслугПодарочныеПозиции.Ссылка = ВТ_Заказы.Заказ
                |   ГДЕ
                |       НЕ РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
                |                   (ВЫБРАТЬ
                |                       УслугиПоЗаказам.Артикул
                |                   ИЗ
                |                       Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)) КАК ВложенныйЗапрос
                |
                |СГРУППИРОВАТЬ ПО
                |   ВложенныйЗапрос.Номер
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
                |   СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество
                |ПОМЕСТИТЬ ВТ_ВозвратПокупателяюКоличество
                |ИЗ
                |   Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
                |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
                |       ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = ВТ_Заказы.Заказ.Номер
                |ГДЕ
                |   НЕ ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул В
                |               (ВЫБРАТЬ
                |                   УслугиПоЗаказам.Артикул
                |               ИЗ
                |                   Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
                |
                |СГРУППИРОВАТЬ ПО
                |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |   новаМестнаяДоставка.Номер
                |ПОМЕСТИТЬ новаМестнаяДоставка
                |ИЗ
                |   БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
                |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
                |       ПО новаМестнаяДоставка.Номер = ВТ_Заказы.Заказ.Номер
                |ГДЕ
                |   НЕ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |   РеализацияТоваровУслуг.Ссылка.Номер КАК РеализацияНомер,
                |   ВТ_ВозвратПокупателяюКоличество.Номер КАК ВозвратНомер,
                |   ЕСТЬNULL(ВТ_ВозвратПокупателяюКоличество.Количество, 0) КАК ВозвратКоличество,
                |   ЕСТЬNULL(ВТ_РеализацияКоличество.Количество, 0) КАК РеализацияКоличество,
                |   новаМестнаяДоставка.Номер КАК МестнаяДоставкаНомер
                |ПОМЕСТИТЬ ВТ_Итог
                |ИЗ
                |   ВТ_Заказы КАК ВТ_Заказы
                |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
                |           ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеализацияКоличество КАК ВТ_РеализацияКоличество
                |           ПО РеализацияТоваровУслуг.Номер = ВТ_РеализацияКоличество.Номер
                |           ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВозвратПокупателяюКоличество КАК ВТ_ВозвратПокупателяюКоличество
                |           ПО РеализацияТоваровУслуг.Номер = ВТ_ВозвратПокупателяюКоличество.Номер
                |           ЛЕВОЕ СОЕДИНЕНИЕ новаМестнаяДоставка КАК новаМестнаяДоставка
                |           ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
                |       ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |   ВЫБОР
                |       КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
                |           ТОГДА ВЫБОР
                |                   КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
                |                       ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
                |                   ИНАЧЕ ВЫБОР
                |                           КОГДА ВТ_Итог.РеализацияКоличество = 0
                |                                   И ВТ_Итог.ВозвратКоличество > 0
                |                               ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
                |                           ИНАЧЕ ВЫБОР
                |                                   КОГДА ВТ_Итог.РеализацияКоличество > 0
                |                                           И ВТ_Итог.ВозвратКоличество > 0
                |                                       ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
                |                                   ИНАЧЕ НЕОПРЕДЕЛЕНО
                |                               КОНЕЦ
                |                       КОНЕЦ
                |               КОНЕЦ
                |       ИНАЧЕ ВЫБОР
                |               КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
                |                   ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
                |               ИНАЧЕ ВЫБОР
                |                       КОГДА ВТ_Итог.РеализацияКоличество = 0
                |                               И ВТ_Итог.ВозвратКоличество > 0
                |                           ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
                |                       ИНАЧЕ ВЫБОР
                |                               КОГДА ВТ_Итог.РеализацияКоличество > 0
                |                                       И ВТ_Итог.ВозвратКоличество > 0
                |                                   ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
                |                               ИНАЧЕ НЕОПРЕДЕЛЕНО
                |                           КОНЕЦ
                |                   КОНЕЦ
                |           КОНЕЦ
                |   КОНЕЦ КАК ТипЗаказа,
                |   ВТ_Итог.РеализацияНомер КАК НомерЗаказа
                |ПОМЕСТИТЬ ВТ_ТипыЗаказов
                |ИЗ
                |   ВТ_Итог КАК ВТ_Итог
                |
                |СГРУППИРОВАТЬ ПО
                |   ВЫБОР
                |       КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
                |           ТОГДА ВЫБОР
                |                   КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
                |                       ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
                |                   ИНАЧЕ ВЫБОР
                |                           КОГДА ВТ_Итог.РеализацияКоличество = 0
                |                                   И ВТ_Итог.ВозвратКоличество > 0
                |                               ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
                |                           ИНАЧЕ ВЫБОР
                |                                   КОГДА ВТ_Итог.РеализацияКоличество > 0
                |                                           И ВТ_Итог.ВозвратКоличество > 0
                |                                       ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
                |                                   ИНАЧЕ НЕОПРЕДЕЛЕНО
                |                               КОНЕЦ
                |                       КОНЕЦ
                |               КОНЕЦ
                |       ИНАЧЕ ВЫБОР
                |               КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
                |                   ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
                |               ИНАЧЕ ВЫБОР
                |                       КОГДА ВТ_Итог.РеализацияКоличество = 0
                |                               И ВТ_Итог.ВозвратКоличество > 0
                |                           ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
                |                       ИНАЧЕ ВЫБОР
                |                               КОГДА ВТ_Итог.РеализацияКоличество > 0
                |                                       И ВТ_Итог.ВозвратКоличество > 0
                |                                   ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
                |                               ИНАЧЕ НЕОПРЕДЕЛЕНО
                |                           КОНЕЦ
                |                   КОНЕЦ
                |           КОНЕЦ
                |   КОНЕЦ,
                |   ВТ_Итог.РеализацияНомер
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |   ВТ_Товары.Номенклатура,
                |   ВТ_Товары.Количество,
                |   ВТ_Товары.Склад,
                |   ВТ_Товары.Организация,
                |   ВТ_Товары.СуммаДокумента,
                |   ВТ_Товары.Заказ,
                |   ВТ_Товары.Сумма,
                |   ВТ_ТипыЗаказов.ТипЗаказа
                |ИЗ
                |   ВТ_Товары КАК ВТ_Товары
                |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТипыЗаказов КАК ВТ_ТипыЗаказов
                |       ПО ВТ_Товары.Заказ.Номер = ВТ_ТипыЗаказов.НомерЗаказа");
                Запрос.УстановитьПараметр("Ссылка", Основание);
                Товары = Запрос.Выполнить().Выгрузить();
                Если Товары.Количество() > 0 Тогда 
                    
                    Для Каждого Товар Из Товары Цикл
                            Движение = Движения.ОстаткиЗаказов.ДобавитьРасход();
                            Движение.Период       = ДатаПериод;
                            Движение.Заказ        = Товар.Заказ;
                            Движение.Номенклатура = Товар.Номенклатура;
                            Движение.Склад        = ?(ЗначениеЗаполнено(Товар.Склад), Товар.Склад, Справочники.Склады.НайтиПоКоду("000000001"));                     // Основной склад
                            Движение.Организация  = ?(ЗначениеЗаполнено(Товар.Организация), Товар.Организация, Справочники.Организации.НайтиПоКоду("000000001"));    // ООО «Логистическая компания «Стриж»
                            Движение.Количество   = Товар.Количество;
                            Движение.СуммаПрод    = Товар.Сумма;//+++++Серегин М.В. 29.01.2016 15:44:21 старый Движение.СуммаПрод    = Товар.СуммаДокумента;
                            Движение.ТипЗаказа    = Товар.ТипЗаказа;
                    КонецЦикла;
                    
                КонецЕсли;
                
			//КонецЕсли;	
        КонецЕсли;
    КонецЕсли;
    //-----Серегин М.В. 03.02.2016 11:51:33 
    

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
    //Удаление движений истории статусов
	//НаборЗаписей = РегистрыСведений.ИсторияСтатусовСкладскогоУчетаВозвратовПоставщику.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.Период.Установить(Дата);
	//НаборЗаписей.Отбор.ВозвратПоставщику.Установить(Основание);
	//НаборЗаписей.Записать();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВозвратПоставщику", Основание);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсторияСтатусовСкладскогоУчетаВозвратовПоставщику.Период КАК Период,
	|	ИсторияСтатусовСкладскогоУчетаВозвратовПоставщику.ВозвратПоставщику КАК ВозвратПоставщику
	|ИЗ
	|	РегистрСведений.ИсторияСтатусовСкладскогоУчетаВозвратовПоставщику КАК ИсторияСтатусовСкладскогоУчетаВозвратовПоставщику
	|ГДЕ
	|	ИсторияСтатусовСкладскогоУчетаВозвратовПоставщику.ВозвратПоставщику = &ВозвратПоставщику
	|	И ИсторияСтатусовСкладскогоУчетаВозвратовПоставщику.ДокументРегистратор = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ИсторияСтатусовСкладскогоУчетаВозвратовПоставщику.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.ВозвратПоставщику.Установить(Выборка.ВозвратПоставщику);
		НаборЗаписей.Записать();
	КонецЦикла;
КонецПроцедуры

