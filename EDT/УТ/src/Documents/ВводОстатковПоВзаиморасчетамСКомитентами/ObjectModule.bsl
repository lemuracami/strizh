
Процедура ОбработкаПроведения(Отказ, Режим)
	
	СуммаПоВводуОстатков = ЭтотОбъект.ВводОстатков.Итог("Сумма");
	СуммаПоВводуОстатковПоЗаказам = ЭтотОбъект.ВводОстатковПоЗаказам.Итог("Сумма");
	
	СуммаПоСписаниюОстатков = ЭтотОбъект.СписаниеОстатков.Итог("Сумма");
	СуммаПоСписаниюОстатковПоЗаказам = ЭтотОбъект.СписаниеОстатковПоЗаказам.Итог("Сумма");
	
	Если СуммаПоВводуОстатков <> СуммаПоВводуОстатковПоЗаказам 
		ИЛИ СуммаПоСписаниюОстатков <> СуммаПоСписаниюОстатковПоЗаказам Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Суммы по заказам и по статьям расчета не совпадают.
		|Возможны расхождения по учету!");
		
	КонецЕсли;
	
	// регистр ВзаиморасчетыСКомитентами Приход
	Движения.ВзаиморасчетыСКомитентамиПоЗаказам.Записывать = Истина;
	Движения.ВзаиморасчетыСКомитентамиПоЗаказам.БлокироватьДляИзменения = Истина;	
	Движения.ВзаиморасчетыСКомитентамиПоЗаказам.Очистить();
	
	Движения.ВзаиморасчетыСКомитентами.Записывать = Истина;
	Движения.ВзаиморасчетыСКомитентами.БлокироватьДляИзменения = Истина;	
	Движения.ВзаиморасчетыСКомитентами.Очистить();

	Если СписыватьОстатки Тогда
		
		Для Каждого ТекСтрокаСписаниеОстатков Из СписаниеОстатковПоЗаказам Цикл
			Движение = Движения.ВзаиморасчетыСКомитентамиПоЗаказам.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления[Строка(ТекСтрокаСписаниеОстатков.ВидДвижения)];
			Движение.Период = ДатаДвижений;
			Движение.Организация = ТекСтрокаСписаниеОстатков.Организация;
			Движение.Комитент = ТекСтрокаСписаниеОстатков.Комитент;
			Движение.ДатаВозникновенияЗадолженности = ТекСтрокаСписаниеОстатков.ДатаВозникновенияЗадолженности;
			Движение.ТипЗаказа = ТекСтрокаСписаниеОстатков.ТипЗаказа;
			Движение.Заказ = ТекСтрокаСписаниеОстатков.Заказ;
			Движение.Сумма = ТекСтрокаСписаниеОстатков.Сумма;
			Движение.Корректировка = ТекСтрокаСписаниеОстатков.Корректировка;
		КонецЦикла;
		
		Для Каждого ТекСтрокаСписаниеОстатков Из СписаниеОстатков Цикл
			Движение = Движения.ВзаиморасчетыСКомитентами.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления[Строка(ТекСтрокаСписаниеОстатков.ВидДвижения)];
			Движение.Период = ДатаДвижений;
			Движение.Организация = ТекСтрокаСписаниеОстатков.Организация;
			Движение.Комитент = ТекСтрокаСписаниеОстатков.Комитент;
			Движение.ДатаВозникновенияЗадолженности = ТекСтрокаСписаниеОстатков.ДатаВозникновенияЗадолженности;
			Движение.Сумма = ТекСтрокаСписаниеОстатков.Сумма;
			Движение.Корректировка = ТекСтрокаСписаниеОстатков.Корректировка;
			Движение.СтатьяРасчетовСКомитентами = ТекСтрокаСписаниеОстатков.СтатьяРасчетовСКомитентами;
		КонецЦикла;
		
	КонецЕсли; 

	Для каждого ТекСтрока Из ВводОстатковПоЗаказам Цикл
		Движение = Движения.ВзаиморасчетыСКомитентамиПоЗаказам.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления[Строка(ТекСтрока.ВидДвижения)];
		Движение.Период = ДатаДвижений;
		Движение.Организация = ТекСтрока.Организация;
		Движение.Комитент = ТекСтрока.Комитент;
		Движение.ДатаВозникновенияЗадолженности = ТекСтрока.ДатаВозникновенияЗадолженности;
		Движение.ТипЗаказа = ТекСтрока.ТипЗаказа;
		Движение.Заказ = ТекСтрока.Заказ;
		Движение.Сумма = ТекСтрока.Сумма;
		Движение.Корректировка = ТекСтрока.Корректировка;
	КонецЦикла; 
	
	Для каждого ТекСтрока Из ВводОстатков Цикл
		Движение = Движения.ВзаиморасчетыСКомитентами.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления[Строка(ТекСтрока.ВидДвижения)];
		Движение.Период = ДатаДвижений;
		Движение.Организация = ТекСтрока.Организация;
		Движение.Комитент = ТекСтрока.Комитент;
		Движение.ДатаВозникновенияЗадолженности = ТекСтрока.ДатаВозникновенияЗадолженности;
		Движение.Сумма = ТекСтрока.Сумма;
		Движение.Корректировка = ТекСтрока.Корректировка;
		Движение.СтатьяРасчетовСКомитентами = ТекСтрока.СтатьяРасчетовСКомитентами;
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;	
	
	Пользователь = ПараметрыСеанса.ТекущийПользователь.Ссылка;
	
	СуммаДокумента = МАКС(СписаниеОстатков.Итог("Сумма"), ВводОстатков.Итог("Сумма"));
	
КонецПроцедуры
