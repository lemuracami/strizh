

&НаКлиенте
Процедура Заполнить(Команда)
    Если НЕ ЗначениеЗаполнено(Объект.МесяцРасчета) Тогда
        Сообщить("Заполните месяц расчета!");
        Возврат;   
    КонецЕсли;
    
    Если Объект.Проведен Тогда
        От = Вопрос("Для заполнения необходимо отменить проведение документа. Отменить проведение?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
        Если От = КодВозвратаДиалога.Да Тогда
            Парам = Новый Структура;
            Парам.Вставить("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения);
            Записать(Парам);
        Иначе
            Возврат;
        КонецеСли;
    КонецЕсли;
    ЗаполнитьНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
    ЗаполнитьСтатьиНУ();
    ЗаполнитьВыполняемость();
    ЗаполнитьРасчетнаяБаза();
    ЗаполнитьНачисленияУдержания();
КонецПроцедуры

&Насервере
Процедура ЗаполнитьСтатьиНУ()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   НУЭкипажей.ФизЛицо КАК ФизЛицо,
        |   НУЭкипажей.СтатьяНУ,
        |   НУЭкипажей.Сумма,
        |   НУЭкипажей.Процент
        |ИЗ
        |   РегистрСведений.НУЭкипажей КАК НУЭкипажей
        |ГДЕ
        |   НУЭкипажей.Период = &Период
        |
        |УПОРЯДОЧИТЬ ПО
        |   ФизЛицо
        |АВТОУПОРЯДОЧИВАНИЕ";
    
    Запрос.УстановитьПараметр("Период", Объект.МесяцРасчета);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    Объект.СтатьиНУ.Очистить();
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        Строка = Объект.СтатьиНУ.Добавить();
        ЗаполнитьЗначенияСвойств(Строка,ВыборкаДетальныеЗаписи);
    КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыполняемость()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   РеализацияТоваровУслуг.Ссылка КАК Заказ,
        |   новаЗаданияРейсов.Рейс.Водитель КАК Водитель,
        |   новаЗаданияРейсов.Рейс.Экспедитор КАК Экспедитор
        |ПОМЕСТИТЬ ВТ_Заказы
        |ИЗ
        |   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
        |       ПО (новаЗаданияРейсов.Доставка.Номер = РеализацияТоваровУслуг.Номер)
        |ГДЕ
        |   новаЗаданияРейсов.Рейс.ДатаНачала МЕЖДУ &НачалоПериода И &КонецПериода
        |
        |СГРУППИРОВАТЬ ПО
        |   РеализацияТоваровУслуг.Ссылка,
        |   новаЗаданияРейсов.Рейс.Водитель,
        |   новаЗаданияРейсов.Рейс.Экспедитор
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаказыВсего.Заказ) КАК Всего,
        |   ВТ_ЗаказыВсего.Водитель КАК Сотрудник,
        |   МАКСИМУМ(ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Водитель)) КАК УчастникЭкипажа
        |ПОМЕСТИТЬ ВТ_ЗаказыВсего
        |ИЗ
        |   ВТ_Заказы КАК ВТ_ЗаказыВсего
        |ГДЕ
        |   ВТ_ЗаказыВсего.Водитель <> &ПустойВодитель
        |
        |СГРУППИРОВАТЬ ПО
        |   ВТ_ЗаказыВсего.Водитель
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаказыВсего.Заказ),
        |   ВТ_ЗаказыВсего.Экспедитор,
        |   МАКСИМУМ(ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Экспедитор))
        |ИЗ
        |   ВТ_Заказы КАК ВТ_ЗаказыВсего
        |ГДЕ
        |   ВТ_ЗаказыВсего.Экспедитор <> &ПустойЭкспедитор
        |
        |СГРУППИРОВАТЬ ПО
        |   ВТ_ЗаказыВсего.Экспедитор
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Заказы.Заказ) КАК Выполнено,
        |   ЗакрытыеЗаказы.Водитель КАК Сотрудник,
        |   МАКСИМУМ(ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Водитель)) КАК УчастникЭкипажа
        |ПОМЕСТИТЬ ВТ_Выполнено
        |ИЗ
        |   РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
        |       ПО (ВТ_Заказы.Заказ = (ВЫРАЗИТЬ(ЗакрытыеЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг)))
        |           И (ЗакрытыеЗаказы.СтатусЗаказа = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена)
        |               ИЛИ ЗакрытыеЗаказы.СтатусЗаказа = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично))
        |           И (ЗакрытыеЗаказы.Водитель <> &ПустойВодитель)
        |ГДЕ
        |   ЗакрытыеЗаказы.Период МЕЖДУ &НачалоПериода И &КонецПериода
        |
        |СГРУППИРОВАТЬ ПО
        |   ЗакрытыеЗаказы.Водитель
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Заказы.Заказ),
        |   ЗакрытыеЗаказы.Экспедитор,
        |   МАКСИМУМ(ЗНАЧЕНИЕ(Перечисление.УчастникЭкипажа.Экспедитор))
        |ИЗ
        |   РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
        |       ПО (ВТ_Заказы.Заказ = (ВЫРАЗИТЬ(ЗакрытыеЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг)))
        |           И (ЗакрытыеЗаказы.СтатусЗаказа = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена)
        |               ИЛИ ЗакрытыеЗаказы.СтатусЗаказа = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично))
        |           И (ЗакрытыеЗаказы.Экспедитор <> &ПустойЭкспедитор)
        |ГДЕ
        |   ЗакрытыеЗаказы.Период МЕЖДУ &НачалоПериода И &КонецПериода
        |
        |СГРУППИРОВАТЬ ПО
        |   ЗакрытыеЗаказы.Экспедитор
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВТ_ЗаказыВсего.Сотрудник,
        |   ВТ_ЗаказыВсего.УчастникЭкипажа,
        |   ВТ_ЗаказыВсего.Всего,
        |   NULL КАК Выполнено
        |ПОМЕСТИТЬ ВТ_Объединение
        |ИЗ
        |   ВТ_ЗаказыВсего КАК ВТ_ЗаказыВсего
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   ВТ_Выполнено.Сотрудник,
        |   ВТ_Выполнено.УчастникЭкипажа,
        |   NULL,
        |   ВТ_Выполнено.Выполнено
        |ИЗ
        |   ВТ_Выполнено КАК ВТ_Выполнено
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВТ_Объединение.Сотрудник,
        |   ВТ_Объединение.УчастникЭкипажа,
        |   СУММА(ВТ_Объединение.Всего) КАК Всего,
        |   СУММА(ВТ_Объединение.Выполнено) КАК Выполнено
        |ПОМЕСТИТЬ ВТ_Группировка
        |ИЗ
        |   ВТ_Объединение КАК ВТ_Объединение
        |
        |СГРУППИРОВАТЬ ПО
        |   ВТ_Объединение.Сотрудник,
        |   ВТ_Объединение.УчастникЭкипажа
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВТ_Группировка.Сотрудник КАК ФизЛицо,
        |   ВТ_Группировка.УчастникЭкипажа КАК УчастникЭкипажа,
        |   ВТ_Группировка.Всего КАК ВсегоЗаказов,
        |   ВТ_Группировка.Выполнено КАК ЗаказовВыполнено,
        |   ВТ_Группировка.Всего - ВТ_Группировка.Выполнено КАК ЗаказовНеВыполнено,
        |   ВТ_Группировка.Выполнено / ВТ_Группировка.Всего * 100 КАК ПроцентВыполнения
        |ИЗ
        |   ВТ_Группировка КАК ВТ_Группировка
        |
        |УПОРЯДОЧИТЬ ПО
        |   ФизЛицо,
        |   УчастникЭкипажа
        |АВТОУПОРЯДОЧИВАНИЕ";
    
    Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.МесяцРасчета));
    Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.МесяцРасчета));
    Запрос.УстановитьПараметр("ПустойВодитель", Справочники.новаВодители.ПустаяСсылка());
    Запрос.УстановитьПараметр("ПустойЭкспедитор", Справочники.новаЭкспедиторы.ПустаяСсылка());
    //ВТ = Объект.СтатьиНУ.Выгрузить();
    //Сотрудники = ВТ.ВыгрузитьКолонку("ФизЛицо");
    //Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    Объект.Выполняемость.Очистить();
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        Строка = Объект.Выполняемость.Добавить();
        ЗаполнитьЗначенияСвойств(Строка,ВыборкаДетальныеЗаписи);
    КонецЦикла;

КонецПроцедуры // ()

&Насервере
Процедура ЗаполнитьРасчетнаяБаза()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   СводПоЗарплатеОбороты.ФизЛицо КАК ФизЛицо,
        |   СводПоЗарплатеОбороты.СуммаОборот КАК СуммаКНачислению
        |ИЗ
        |   РегистрНакопления.СводПоЗарплате.Обороты(
        |           &НачалоПериода,
        |           &КонецПериода,
        |           Месяц,
        |           ФизЛицо В (&Сотрудники)
        |               И ТипНУ В (&ТипНУ)) КАК СводПоЗарплатеОбороты
        |
        |УПОРЯДОЧИТЬ ПО
        |   ФизЛицо
        |АВТОУПОРЯДОЧИВАНИЕ";
    
    Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.МесяцРасчета));
    Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.МесяцРасчета));
    ВТ = Объект.Выполняемость.Выгрузить();
    Сотрудники = ВТ.ВыгрузитьКолонку("ФизЛицо");
    Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
    Запрос.УстановитьПараметр("ТипНУ", Перечисления.ТипыНУЭкипажей.РасчетЗП);
    
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    Объект.РасчетнаяБаза.Очистить();
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        Строка = Объект.РасчетнаяБаза.Добавить();
        ЗаполнитьЗначенияСвойств(Строка,ВыборкаДетальныеЗаписи);
    КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачисленияУдержания()
    ВыполнениеБолее90Доставок = Справочники.НачисленияУдержанияЭкипажей.ВыполнениеБолее90Доставок;
    ПроцентБолее90Доставок = smv.ПолучитьДанныеСтавкиНУЭкипажей(ВыполнениеБолее90Доставок,КонецМесяца(Объект.МесяцРасчета)).Процент;
    ВыполнениеМенее80Доставок = Справочники.НачисленияУдержанияЭкипажей.ВыполнениеМенее80Доставок;
    ПроцентМенее80Доставок = smv.ПолучитьДанныеСтавкиНУЭкипажей(ВыполнениеМенее80Доставок,КонецМесяца(Объект.МесяцРасчета)).Процент;
    ВыполнениеБолее80ИМенее90Доставок = Справочники.НачисленияУдержанияЭкипажей.ВыполнениеБолее80ИМенее90Доставок;
    ПроцентБолее80ИМенее90Доставок = smv.ПолучитьДанныеСтавкиНУЭкипажей(ВыполнениеБолее80ИМенее90Доставок,КонецМесяца(Объект.МесяцРасчета)).Процент;
    
    Объект.НачисленияУдержания.Очистить();
    
    Для каждого Стр Из Объект.Выполняемость Цикл
        
        ФизЛицо = Стр.ФизЛицо;
        УчастникЭкипажа = Стр.УчастникЭкипажа;
        
        Если Стр.ПроцентВыполнения >= 90 Тогда
            ДобавитьСтрокуНачисленияУдержанияПоВыполняемости(ФизЛицо,ВыполнениеБолее90Доставок,УчастникЭкипажа,ПроцентБолее90Доставок);                   
        ИначеЕсли Стр.ПроцентВыполнения < 80 Тогда
            ДобавитьСтрокуНачисленияУдержанияПоВыполняемости(ФизЛицо,ВыполнениеМенее80Доставок,УчастникЭкипажа,ПроцентМенее80Доставок);                   
        Иначе    
            ДобавитьСтрокуНачисленияУдержанияПоВыполняемости(ФизЛицо,ВыполнениеБолее80ИМенее90Доставок,УчастникЭкипажа,ПроцентБолее80ИМенее90Доставок);                   
        КонецЕсли;
        
        ДобавитьСтрокуНачисленияСтатьиНУ(ФизЛицо,УчастникЭкипажа); 
        
    КонецЦикла;

КонецПроцедуры // ()

&НаСервере
Процедура ДобавитьСтрокуНачисленияУдержанияПоВыполняемости(ФизЛицо,СтатьяНУ,УчастникЭкипажа,Процент)
    РасчетнаяБазаСтроки = Объект.РасчетнаяБаза.НайтиСтроки(Новый Структура("ФизЛицо",ФизЛицо));
    Если НЕ ЗначениеЗаполнено(Процент) Тогда
        Процент = 0;    
    КонецЕсли;
    
    Если РасчетнаяБазаСтроки.Количество()>0 Тогда
        БазаДляРасчета = РасчетнаяБазаСтроки[0].СуммаКНачислению;   
        Строка = Объект.НачисленияУдержания.Добавить();
        Строка.ФизЛицо = ФизЛицо;
        Строка.УчастникЭкипажа = УчастникЭкипажа;
        Строка.СтатьяНУ = СтатьяНУ;
        Строка.ТипНУ = СтатьяНУ.ТипНУ;
        Строка.ТипРасчета = СтатьяНУ.ВариантРасчета;
        Строка.ПоказательРасчета = Процент;
        Строка.БазаДляРасчета = БазаДляРасчета;
        Строка.Результат = БазаДляРасчета*Процент/100;
    КонецЕсли;	

КонецПроцедуры // ()

&НаСервере
Процедура ДобавитьСтрокуНачисленияСтатьиНУ(ФизЛицо,УчастникЭкипажа)
    СтатьиНУСтроки = Объект.СтатьиНУ.НайтиСтроки(Новый Структура("ФизЛицо",ФизЛицо));
    
    Если СтатьиНУСтроки.Количество()>0 Тогда
        Для каждого Стр Из СтатьиНУСтроки Цикл
            Если Стр.СтатьяНУ.ВариантРасчета = Перечисления.ВариантыРасчетаНУЭкипажей.ПроцентОтНачислений Тогда
                
                РасчетнаяБазаСтроки = Объект.РасчетнаяБаза.НайтиСтроки(Новый Структура("ФизЛицо",ФизЛицо));
                
                Если РасчетнаяБазаСтроки.Количество()>0 Тогда
                    БазаДляРасчета = РасчетнаяБазаСтроки[0].СуммаКНачислению;   
                    Строка = Объект.НачисленияУдержания.Добавить();
                    Строка.ФизЛицо = ФизЛицо;
                    Строка.УчастникЭкипажа = УчастникЭкипажа;
                    Строка.СтатьяНУ = Стр.СтатьяНУ;
                    Строка.ТипНУ = Стр.СтатьяНУ.ТипНУ;
                    Строка.ТипРасчета = Стр.СтатьяНУ.ВариантРасчета;
                    Строка.ПоказательРасчета = Стр.Процент;
                    Строка.БазаДляРасчета = БазаДляРасчета;
                    Строка.Результат = БазаДляРасчета*Стр.Процент/100;
                КонецЕсли;	
                
            ИначеЕсли Стр.СтатьяНУ.ВариантРасчета = Перечисления.ВариантыРасчетаНУЭкипажей.Сумма Тогда
                Строка = Объект.НачисленияУдержания.Добавить();
                Строка.ФизЛицо = ФизЛицо;
                Строка.УчастникЭкипажа = УчастникЭкипажа;
                Строка.СтатьяНУ = Стр.СтатьяНУ;
                Строка.ТипНУ = Стр.СтатьяНУ.ТипНУ;
                Строка.ТипРасчета = Стр.СтатьяНУ.ВариантРасчета;
                Строка.ПоказательРасчета = 0;
                Строка.БазаДляРасчета = Стр.Сумма;
                Строка.Результат = Стр.Сумма;
            КонецЕсли;
            
        КонецЦикла;
        
    КонецЕсли;
    
КонецПроцедуры // ()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    Если ЗначениеЗаполнено(Объект.МесяцРасчета) Тогда
        Месяц = Формат(Объект.МесяцРасчета, "ДФ = ММММ_гггг");

        //формируем список на год, соответствующий заполненному реквизиту

        СформироватьСписокВыбораМесяца(Год(Объект.МесяцРасчета));
    Иначе
        Месяц = ""; 

        //формируем список на текущий год

        СформироватьСписокВыбораМесяца(Год(ТекущаяДата()));
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСписокВыбораМесяца(Год)
    
    Элементы.Месяц.СписокВыбора.Очистить();
    Элементы.Месяц.СписокВыбора.Добавить(Формат(Год-1, "ЧГ=0")); //для смены года
    Для к = 1 По 12  Цикл
        СформДата = Дата(Год, к, 1);
        Наим = Формат(СформДата, "ДФ = ММММ_гггг");
        Наим = СтрЗаменить(Наим, "_", " ");
        Элементы.Месяц.СписокВыбора.Добавить(Наим);    
    КонецЦикла;
    Элементы.Месяц.СписокВыбора.Добавить(Формат(Год+1, "ЧГ=0")); //для смены года
    

КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)


    Если Месяц <> "" Тогда

        //реквизит уже заполнен, нужно формировать список для года, соответствующего заполнению
        ВыбрГод = Число(Прав(Месяц, 4));
        СформироватьСписокВыбораМесяца(ВыбрГод);
    КонецЕсли;
    
    СтандартнаяОбработка = Ложь;
    ВыбранноеЗначение = Строка(ЭтаФорма.ВыбратьИзСписка(Элемент.СписокВыбора, Элемент));
    Если ВыбранноеЗначение <> "" Тогда
        Если СтрДлина(ВыбранноеЗначение)=4 Тогда

            //выбрано значение, которое соответствует смене года в списке
            Пока СтрДлина(ВыбранноеЗначение) = 4 Цикл

                //цикл продолжается до тех пор, пока мы не выберем месяц
                ВыбрГод = Число(ВыбранноеЗначение);
                СформироватьСписокВыбораМесяца(ВыбрГод);
                ВыбранноеЗначение = Строка(ЭтаФорма.ВыбратьИзСписка(Элемент.СписокВыбора, Элемент));                    
            КонецЦикла;
        КонецЕсли;
        Если ВыбранноеЗначение <> "" Тогда

             //выбрали месяц, а не пустое значение, запишем его

            //если выбрали пустое значение, то в реквизите месяц сохранится значение, которое было до выбора
            Месяц = ВыбранноеЗначение;

            НомМесяца = (Найти("янвфевмарапрмайиюниюлавгсеноктноядек",Нрег(Лев(ВыбранноеЗначение,3)))+2)/3; //получаем номер месяца
            ВыбрГод = Число(Прав(ВыбранноеЗначение, 4));
            Объект.МесяцРасчета = НачалоМесяца(Дата(ВыбрГод, НомМесяца, 1));


        КонецЕсли;
    КонецЕсли;
КонецПроцедуры
