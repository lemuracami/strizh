
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//ТолькоПросмотр = Истина;
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		Объект.ТерминалОбработки = ПараметрыСеанса.ТерминалДоставки; //Задача № 3045
	КонецеСли;	
КонецПроцедуры

Функция ЗаполнитьДокумент(УстановитьТерминалОбработки = Неопределено) Экспорт
	Если Объект.Реализация.Пустая() Тогда
		Возврат Ложь;
	КонецеСли;	
	
	
	Объект.ВозвратТоваровОтПокупателя = Документы.ВозвратТоваровОтПокупателя.НайтиПоНомеру(Объект.Реализация.Номер, Объект.Реализация.Дата);
	
	Для Каждого Тек Из Объект.Реализация.Товары Цикл
		Нов = Объект.ДоставленныеТовары.Добавить();
		Нов.Номенклатура = Тек.Номенклатура;
		Нов.КоличествоДоставлено = Тек.Количество;
		Нов.Количество = Тек.Количество;
		Нов.Цена = Тек.Цена;
		Нов.Сумма = Тек.Сумма;
		//Асеев 04.09.2020 (Задача № 4185)>>>
		Нов.КодМаркировки = Тек.КодМаркировки;
		//Асеев 04.09.2020 (Задача № 4185)<<<
	КонецЦикла;	
	
	Для Каждого Тек Из Объект.Реализация.ПодарочныеПозиции Цикл
		Нов = Объект.ДоставленныеТовары.Добавить();
		Нов.Номенклатура = Тек.Номенклатура;
		Нов.КоличествоДоставлено = Тек.Количество;
		Нов.Количество = Тек.Количество;
		Нов.Цена = Тек.Цена;
		Нов.Сумма = Тек.Сумма;
		//Асеев 04.09.2020 (Задача № 4185)>>>
		Нов.КодМаркировки = Тек.КодМаркировки;
		//Асеев 04.09.2020 (Задача № 4185)<<<
	КонецЦикла;	
	
	
	Если Не Объект.ВозвратТоваровОтПокупателя.Пустая() Тогда
		Для Каждого Тек Из Объект.ВозвратТоваровОтПокупателя.Товары Цикл
			Нов = Объект.ДоставленныеТовары.Добавить();
			Нов.Номенклатура = Тек.Номенклатура;
			Нов.КоличествоДоставлено = Тек.Количество;
			Нов.Количество = - Тек.Количество;
			Нов.Цена = Тек.Цена;
			Нов.Сумма = - Тек.Сумма;
			//Асеев 04.09.2020 (Задача № 4185)>>>
			Нов.КодМаркировки = Тек.КодМаркировки;
			//Асеев 04.09.2020 (Задача № 4185)<<<
		КонецЦикла;	
	КонецеСли;
	
	Если объект.ДоставленныеТовары.Количество() = 0 Тогда
		Возврат Ложь;
	КонецеСли;
	
	Объект.СтоимостьДоставки = Объект.Реализация.Услуги.Итог("Сумма");
	Объект.СтоимостьДоставкиПервоначально = Объект.Реализация.Услуги.Итог("Сумма");
	
	Объект.СуммаДокумента = Объект.ДоставленныеТовары.Итог("Сумма") + Объект.СтоимостьДоставки;
	
	Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.Выполнена;
	
	Если Не УстановитьТерминалОбработки = Неопределено Тогда // Задача № 3045
		Объект.ТерминалОбработки = УстановитьТерминалОбработки;
	КонецЕсли;

	//CeHbKA
	Объект.ЮрЛицо = Объект.Реализация.ВладелецТовара.ОсновнойДоговорКонтрагента.Организация;
	
	СтатусЗаказаПриИзмененииНаСервере();
	Возврат Истина;
КонецФункции


&НаКлиенте
Процедура ДоставленныеТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ДоставленныеТоварыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ДоставленныеТоварыКоличествоДоставленоПриИзменении(Элемент)
	ДоставленныеТоварыКоличествоДоставленоПриИзмененииНаСервере(Элементы.ДоставленныеТовары.ТекущиеДанные);
	СтатусЗаказаПриИзмененииНаСервере();;
КонецПроцедуры


&НаКлиенте
Процедура ДоставленныеТоварыКоличествоДоставленоПриИзмененииНаСервере(Тек)
	Тек.Сумма = Тек.Цена * Тек.КоличествоДоставлено;
	Объект.СуммаДокумента = Объект.ДоставленныеТовары.Итог("Сумма") + Объект.СтоимостьДоставки;
	
	Если Объект.ДоставленныеТовары.Итог("Количество") <> Объект.ДоставленныеТовары.Итог("КоличествоДоставлено") Тогда
		Если Объект.ДоставленныеТовары.Итог("КоличествоДоставлено") = 0 Тогда
			Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.НеВыполнена;
		Иначе
			Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично;
		КонецеСли;
	Иначе	
		Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.Выполнена;
	КонецеСли;	
КонецПроцедуры


&НаКлиенте
Процедура СтатусЗаказаПриИзменении(Элемент)
	Если Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда
		Объект.ПричинаНеВыполненияЗаказа = Справочники.ПричиныНеВыполненияДоставки.ПустаяСсылка();
		Объект.ПричинаОтказа = Справочники.ПричиныОтказаПереноса.ПустаяСсылка();
		Объект.ДатаПереноса = Дата("00010101");
		Элементы.ПричинаНеВыполненияЗаказа.Доступность = Ложь;
		Элементы.ПричинаОтказа.Доступность = Ложь;
		Элементы.ДатаПереноса.Доступность = Ложь;
		УстановитьКоличество(Ложь);
	Иначе
		Элементы.ПричинаНеВыполненияЗаказа.Доступность = Истина;
		Элементы.ПричинаОтказа.Доступность = Истина;		
		Элементы.ДатаПереноса.Доступность = Истина;
		Если Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
			УстановитьКоличество(Истина);
		КонецеСЛи;	
	КонецеСли;	
	СтатусЗаказаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СтатусЗаказаПриИзмененииНаСервере()
	Если Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда
		Объект.ПричинаНеВыполненияЗаказа = Справочники.ПричиныНеВыполненияДоставки.ПустаяСсылка();
		Объект.ПричинаОтказа = Справочники.ПричиныОтказаПереноса.ПустаяСсылка();
		Объект.ДатаПереноса = Дата("00010101");
		Элементы.ПричинаНеВыполненияЗаказа.Доступность = Ложь;
		Элементы.ПричинаОтказа.Доступность = Ложь;
		Элементы.ДатаПереноса.Доступность = Ложь;
		УстановитьКоличество(Ложь);
	Иначе
		Элементы.ПричинаНеВыполненияЗаказа.Доступность = Истина;
		Элементы.ПричинаОтказа.Доступность = Истина;		
		Элементы.ДатаПереноса.Доступность = Истина;
		Если Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
			УстановитьКоличество(Истина);
		КонецеСЛи;	
	КонецеСли;	
КонецПроцедуры


&НаСервере
Процедура УстановитьКоличество(Режим)
	Для Каждого Тек Из Объект.ДоставленныеТовары Цикл
		Если Режим Тогда
			Тек.КоличествоДоставлено = 0;
		Иначе
			Тек.КоличествоДоставлено = Тек.Количество;
		КонецеСли;
		Тек.Сумма = Тек.Цена * Тек.КоличествоДоставлено;
	КонецЦикла;	
	Объект.СуммаДокумента = Объект.ДоставленныеТовары.Итог("Сумма") + Объект.СтоимостьДоставки;	
КонецПроцедуры	

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если объект.ПричинаНеВыполненияЗаказа.Перенос Тогда
		Если Не ЗначениеЗаполнено(Объект.ДатаПереноса) Тогда
			Сообщить("Укажите дату переноса!");
			Отказ = Истина;
			Возврат;
		КонецеСли;	
	КонецеСли;
	
	Если Объект.СтатусЗаказа = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
		Если объект.ПричинаНеВыполненияЗаказа.Пустая() Тогда
			Сообщить("Укажите причину невыполнения заказа!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;	
		
		Если объект.ПричинаОтказа.Пустая() Тогда
			Сообщить("Укажите причину отказа/переноса заказа!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;		
	КонецеСли;	
КонецПроцедуры


&НаКлиенте
Процедура СтоимостьДоставкиПриИзменении(Элемент)
	СтоимостьДоставкиПриИзмененииНаСервере();
КонецПроцедуры


&НаСервере
Процедура СтоимостьДоставкиПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
	Объект.СуммаДокумента = Объект.ДоставленныеТовары.Итог("Сумма") + Объект.СтоимостьДоставки;
КонецПроцедуры


&НаКлиенте
Процедура ПричинаНеВыполненияЗаказаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если РольДоступна("ОператорСамовывоза") Тогда
		Для Каждого Стр Из Элемент.СписокВыбора Цикл
			Если Стр.Значение = Справочники.ПричиныНеВыполненияДоставки.НеДоставлен Тогда
				Элемент.СписокВыбора.Удалить(Стр);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОбновитьТаблицуЗаказыДляСамовывоза");
КонецПроцедуры


&НаКлиенте
Процедура ПричинаОтказаПриИзменении(Элемент)
	Если Объект.ПричинаОтказа.Пустая() Тогда
		Объект.ИнициаторСостояния = "";
	Иначе
		Объект.ИнициаторСостояния = Объект.ПричинаОтказа.ИнициаторСостояния;
	КонецеСли;	
КонецПроцедуры

