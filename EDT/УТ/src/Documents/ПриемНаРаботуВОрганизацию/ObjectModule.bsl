
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр РаботникиОрганизации
	Движения.РаботникиОрганизации.Записывать = Истина;
	Движения.РаботникиОрганизации.Очистить();
	Для Каждого ТекСтрокаСотрудники Из Сотрудники Цикл
		Движение = Движения.РаботникиОрганизации.Добавить();
		Движение.Период = ТекСтрокаСотрудники.ДатаПриема;
		Движение.Организация = Организация;
		Движение.Сотрудник = ТекСтрокаСотрудники.Сотрудник;
		Движение.Подразделение = ТекСтрокаСотрудники.Подразделение;
		Движение.Должность = ТекСтрокаСотрудники.Должность;
		Движение.Состояние = Перечисления.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию;
		Движение.ГрафикУчетаРабочегоВремени = ТекСтрокаСотрудники.ГрафикРаботы;
		Движение.УчаствуетВПроектнойДеятельности = ТекСтрокаСотрудники.УчаствуетВПроектнойДеятельности;
		//CeHbKA 13.05.2019 #3103
		Движение.ФизЛицо = ТекСтрокаСотрудники.ФизЛицо;
		Движение.Терминал = Терминал;
		//CeHbKA 13.05.2019 #3103
		//Асеев 20.03.2023 (Задача № 5015)>>>
		Движение.ОсновноеНачисление = ТекСтрокаСотрудники.ОсновноеНачисление;
		//Асеев 20.03.2023 (Задача № 5015)<<<
	КонецЦикла;
		
	//Переварюха В.В. Задача № 3649 08.11.2019
	Для каждого Сотрудник Из Сотрудники Цикл
		
		Если ЗначениеЗаполнено(Сотрудник.ОсновнаяРольСотрудника) Тогда
			
			НаборЗаписей = РегистрыСведений.ДополнительныеПараметрыФизЛиц.СоздатьНаборЗаписей();
			//Геннадий #4397 02.04.2021 ->
			НаборЗаписей.Отбор.Период.Установить(Сотрудник.ДатаПриема);//Дата);
			//Геннадий #4397 02.04.2021 <-
			НаборЗаписей.Отбор.ФизЛицо.Установить(Сотрудник.ФизЛицо);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				Запись = НаборЗаписей.Добавить();
				//Геннадий #4397 02.04.2021 ->
				Запись.Период = Сотрудник.ДатаПриема;//Дата);
				//Геннадий #4397 02.04.2021 <-
				Запись.ФизЛицо = Сотрудник.ФизЛицо;
				Запись.ОсновнаяРольСотрудника = Сотрудник.ОсновнаяРольСотрудника;
				Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
				Запись.ДокументРегистратор = Ссылка;
			Иначе
				Для каждого Запись Из НаборЗаписей Цикл
					Если Запись.ДокументРегистратор = Ссылка Тогда
						Запись.ОсновнаяРольСотрудника = Сотрудник.ОсновнаяРольСотрудника;
						Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			НаборЗаписей.Записать();
			
		КонецЕсли;
		
	КонецЦикла;	
	//Переварюха В.В. Задача № 3649 08.11.2019
		
КонецПроцедуры

//Миго-групп{
//Усманов В.И.
//22.12.2017 
//++++++++++++++++++++++++
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	Если ЭтотОбъект.Проведен И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Сообщить("Необходимо отменить проведение документа для изменения данных");
		Отказ = Истина;
		Возврат;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения или РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
		Возврат;
	КонецЕсли;
	
	Табл = Новый ТаблицаЗначений;
	Табл.Колонки.Добавить("Сотрудник");
	
	Для каждого Строка Из Сотрудники  Цикл 
		Стр=Табл.Добавить();
		Стр.Сотрудник = Строка.Сотрудник
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	РаботникиОрганизации.Регистратор КАК Регистратор,
	|	РаботникиОрганизации.Подразделение КАК Подразделение,
	|	РаботникиОрганизации.Должность КАК Должность,
	|	РаботникиОрганизации.ГрафикУчетаРабочегоВремени КАК ГрафикУчетаРабочегоВремени,
	|	РаботникиОрганизации.Состояние КАК Состояние,
	|	ДЕНЬГОДА(Работники.ДатаСобытия) КАК РегистраторДата,
	|	Работники.Организация КАК Организация,
	| Работники.ДатаСобытия КАК ДатаСобытия,
	|	Работники.Сотрудник КАК Сотрудник
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(РаботникиОрганизации.Период) КАК ДатаСобытия,
	|		РаботникиОрганизации.Организация КАК Организация,
	|		РаботникиОрганизации.Сотрудник КАК Сотрудник
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизации.СрезПоследних(&Период, ) КАК РаботникиОрганизации
	|	ГДЕ
	|		РаботникиОрганизации.Сотрудник В(&Сотрудник)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РаботникиОрганизации.Организация,
	|		РаботникиОрганизации.Сотрудник) КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|		ПО Работники.ДатаСобытия = РаботникиОрганизации.Период
	|			И Работники.Организация = РаботникиОрганизации.Организация
	|			И Работники.Сотрудник = РаботникиОрганизации.Сотрудник"
	;
	
	Запрос.УстановитьПараметр("Сотрудник",Табл.ВыгрузитьКолонку("Сотрудник"));
	Запрос.УстановитьПараметр("Период",);
	
	Принят = Перечисления.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию;
	Уволен = Перечисления.СостояниеРаботникаОрганизации.Уволен;
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Для каждого Строка Из Сотрудники Цикл
				Если НЕ Проведен Тогда
					Если Выборка.Сотрудник = Строка.Сотрудник Тогда
						Если Выборка.Организация = Организация Тогда
							Если НЕ Выборка.ДатаСобытия>Строка.ДатаПриема Тогда 
								Если Выборка.Состояние = Уволен Тогда	
								ИначеЕсли Выборка.Состояние = Принят Тогда
									Если ДеньГода(Строка.ДатаПриема) = выборка.РегистраторДата Тогда
										Если НЕ Проведен Тогда
											Сообщить("Сотрудник "+Строка.Сотрудник+" принят документом "+Выборка.Регистратор+". Проведение документа запрещено. Перевод сотрудника возможен на следующие сутки после даты приема на работу.");
											Отказ = Истина;
										КонецЕсли; 
									ИначеЕсли ДеньГода(Строка.ДатаПриема) >выборка.РегистраторДата Тогда
										Если Выборка.Должность = Строка.Должность Тогда
											Если Выборка.Подразделение = Строка.Подразделение Тогда
												Если Выборка.ГрафикУчетаРабочегоВремени = Строка.ГрафикРаботы Тогда
													Сообщить ("Сотрудник "+Строка.Сотрудник+ " уже принят в эту организацию с такими данными. Проведение документа запрещено.");
													Отказ = Истина;
												КонецЕсли; 
											КонецЕсли; 
										КонецЕсли;
									КонецЕсли;
								Иначе
									Если не проведен Тогда
										Сообщить ("Сотрудник "+Строка.Сотрудник+" принят в несколько организаций."); 
									КонецЕсли; 
								КонецЕсли;
							Иначе 
								Сообщить("Проведение документа ранее даты последнего действия по сотруднику выполнить не возможно. Распроведите все документы.");
								Отказ = Истина;
							КонецЕсли; 
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;		
		КонецЦикла; 
	КонецЕсли; 
	//Отказ = Ложь;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
		
	//Геннадий #4397 02.04.2021 ->
	//новые записи будут на начало дня, иначе при отмене проведения или перепроведении старого документа, в РС могут остаться неактуальные записи
	ОчиститьДвиженияПоРСДополнительныеПараметрыЗаказа();
	//Геннадий #4397 02.04.2021 <-
	
	////Переварюха В.В. Задача № 3649 08.11.2019
	//Для каждого Сотрудник Из Сотрудники Цикл
	//	
	//	НаборЗаписей = РегистрыСведений.ДополнительныеПараметрыФизЛиц.СоздатьНаборЗаписей();
	//	НаборЗаписей.Отбор.Период.Установить(Дата);
	//	НаборЗаписей.Отбор.ФизЛицо.Установить(Сотрудник.ФизЛицо);
	//	НаборЗаписей.Прочитать();
	//	
	//	Если НаборЗаписей.Количество() > 0 Тогда
	//	Для каждого Запись Из НаборЗаписей Цикл
	//		Если Запись.ДокументРегистратор = Ссылка Тогда
	//			НаборЗаписей.Удалить(НаборЗаписей[Запись.НомерСтроки]);
	//		КонецЕсли;
	//	КонецЦикла;
	//	КонецЕсли;
	//
	//	НаборЗаписей.Записать();
	//	
	//КонецЦикла;	
	////Переварюха В.В. Задача № 3649 08.11.2019

КонецПроцедуры
//------------------------
//Миго-групп}

//Геннадий #4397 02.04.2021 ->
Функция ОчиститьДвиженияПоРСДополнительныеПараметрыЗаказа() Экспорт
	
	ВыборкаДетальныеЗаписи = ПолучитьДанныеРСПоДокументу();
	Если ВыборкаДетальныеЗаписи <> Неопределено Тогда
		
		//очистим имеющиеся записи в РС, потом запишем заново
		ВыборкаДетальныеЗаписи.Сбросить();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.ДополнительныеПараметрыФизЛиц.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Период.Установить(ВыборкаДетальныеЗаписи.Период);
			НаборЗаписей.Отбор.ФизЛицо.Установить(ВыборкаДетальныеЗаписи.ФизЛицо);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() > 0 Тогда
				Для каждого Запись Из НаборЗаписей Цикл
					Если Запись.ДокументРегистратор = Ссылка Тогда
						НаборЗаписей.Удалить(НаборЗаписей[Запись.НомерСтроки]);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			НаборЗаписей.Записать();
			
		КонецЦикла;	
		
	КонецЕсли;
	
КонецФункции	

Функция ПолучитьДанныеРСПоДокументу()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеПараметрыФизЛиц.Период КАК Период,
		|	ДополнительныеПараметрыФизЛиц.ФизЛицо КАК ФизЛицо,
		|	ДополнительныеПараметрыФизЛиц.ОсновнаяРольСотрудника КАК ОсновнаяРольСотрудника,
		|	ДополнительныеПараметрыФизЛиц.ДокументРегистратор КАК ДокументРегистратор
		|ИЗ
		|	РегистрСведений.ДополнительныеПараметрыФизЛиц КАК ДополнительныеПараметрыФизЛиц
		|ГДЕ
		|	ДополнительныеПараметрыФизЛиц.ДокументРегистратор = &ДокументРегистратор";
	
	Запрос.УстановитьПараметр("ДокументРегистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи; 	
	Иначе
		Возврат Неопределено; 	
	КонецЕсли;
	
КонецФункции
//Геннадий #4397 02.04.2021 <-
