
//Асеев 26.05.2022 (по письму 7501874 - Изменение внутри метода GetFullOrderInfo)>>>
&НаСервере
Процедура ВыполнитьПривязкуНаСервере(ВыбТранспорт, ВыбВодитель, ВыбЭкспедитор, ВыбРейс, ПоменятьМестами, ТекущийТранспорт, ТекущийВодитель, ТекущийЭкспедитор, ТекРейс)
	
	УстановитьЭкипаж = ЗначениеЗаполнено(ВыбТранспорт) И ЗначениеЗаполнено(ТекРейс);
	
	//Асеев 20.03.2023 (Задача № 5015)>>>
	//Марочкин закомментировал 18.09.2023, так как нет уверенности, что по всем ФЛ внесены тарифы, при этом форму надо обновлять по другой задаче
	ОшибкаПроверкиОсновныхНачислений = Ложь;
	Если УстановитьЭкипаж И Не РегистрыСведений.РаботникиОрганизации.ПроверитьОсновныеНачисленияЭкипажа(ВыбВодитель, ВыбЭкспедитор) Тогда
		Сообщить("Привязка экипажа не выполнена для " + ТекРейс);
		Сообщить("Транспорт " + ВыбТранспорт);
		Сообщить("Водитель " + ВыбВодитель + ?(ВыбЭкспедитор = Справочники.новаЭкспедиторы.ПустаяСсылка(), ", без экспедитора", ", экспедитор " + ВыбЭкспедитор));
		ОшибкаПроверкиОсновныхНачислений = Истина;
	КонецЕсли;
	Если ПоменятьМестами И Не РегистрыСведений.РаботникиОрганизации.ПроверитьОсновныеНачисленияЭкипажа(ТекущийВодитель, ТекущийЭкспедитор) Тогда
		Сообщить("Привязка экипажа не выполнена для " + ВыбРейс);
		Сообщить("Транспорт " + ТекущийТранспорт);
		Сообщить("Водитель " + ТекущийВодитель + ?(ТекущийЭкспедитор = Справочники.новаЭкспедиторы.ПустаяСсылка(), ", без экспедитора", ", экспедитор " + ТекущийЭкспедитор));
		ОшибкаПроверкиОсновныхНачислений = Истина;
	КонецЕсли;
	Если ОшибкаПроверкиОсновныхНачислений Тогда
		Возврат;
	КонецЕсли;
	//Асеев 20.03.2023 (Задача № 5015)<<<
	
	Если УстановитьЭкипаж Тогда
		ПараметрыТранспорта = МаршрутизацияЗаказовСервер.ПрочитатьДополнительныеПараметрыТранспорта(ВыбТранспорт);
		УдаленноеЗакрытиеРейсов = ?(ПараметрыТранспорта = Неопределено, Ложь, ПараметрыТранспорта.УдаленноеЗакрытие);
	КонецЕсли;	
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Попытка
		
		Если УстановитьЭкипаж Тогда
		
			МаршрутизацияЗаказовСервер.ПривязатьДанныеПоРейсуКЗаборамНаСервере(ТекРейс, ВыбТранспорт, ВыбВодитель, ВыбЭкспедитор);
			МаршрутизацияЗаказовСервер.ПривязатьМашинунаСервере(ТекРейс, ВыбТранспорт, ВыбВодитель, ВыбЭкспедитор);
			
			РейсОбъект = ТекРейс.ПолучитьОбъект();
			РейсОбъект.УдаленноеЗакрытиеРейса = УдаленноеЗакрытиеРейсов;
			РейсОбъект.Записать(?(РейсОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			
		КонецЕсли;
		
		Если ПоменятьМестами Тогда
			
			МаршрутизацияЗаказовСервер.ПривязатьДанныеПоРейсуКЗаборамНаСервере(ВыбРейс, ТекущийТранспорт, ТекущийВодитель, ТекущийЭкспедитор);
			МаршрутизацияЗаказовСервер.ПривязатьМашинунаСервере(ВыбРейс, ТекущийТранспорт, ТекущийВодитель, ТекущийЭкспедитор);
			
			РейсОбъект = ВыбРейс.ПолучитьОбъект();
			РейсОбъект.Записать(?(РейсОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		Сообщить(ОписаниеОшибки());
		Сообщить("Привязка не выполнена!");
		ОтменитьТранзакцию();
	КонецПопытки;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры
//Асеев 26.05.2022 (по письму 7501874 - Изменение внутри метода GetFullOrderInfo)<<<


&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ПривязанныйТранспорт" Тогда
		СтандартнаяОбработка = Ложь;
		//+++ БАО 22.06.2017 №926
		
		//---Если Элементы.Список.ТекущаяСтрока.РейсЗакрыт Тогда
		//--	Возврат;
		//---КонецеСли;
		
		Если baoВызовСервера.РейсЗакрыт(Элементы.Список.ТекущаяСтрока) Тогда
			Возврат;
		КонецеСли;
		
	    //--- БАО 22.06.2017 №926
		
		Фрм = ПолучитьФорму("Документ.Рейс.Форма.ФормаВыбораТранспорта", Новый Структура("РежимВыбора, ДатаРейса, Транспорт", Истина, КонецДня(Элементы.Список.ТекущиеДанные.ДатаРейса), Элементы.Список.ТекущиеДанные.Транспорт), ЭтаФорма);
		Струк = Фрм.ОткрытьМодально();
        Если ЗначениеЗаполнено(Струк) Тогда
            
			ВыбТранспорт = Струк.Транспорт;
			ВыбВодитель = Струк.Водитель;
			ВыбЭкспедитор = Струк.Экспедитор;
            ВыбРейс = Струк.Рейс;
            ПоменятьМестами = Струк.ПоменятьМестами;
            ТекущийТранспорт = Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт;
            ТекущийВодитель = Элементы.Список.ТекущиеДанные.ПривязанныйВодитель;
            ТекущийЭкспедитор = Элементы.Список.ТекущиеДанные.ПривязанныйЭкспедитор;
			
			//Асеев 26.05.2022 (по письму 7501874 - Изменение внутри метода GetFullOrderInfo)>>>
			////+++ БАО 09.08.2017 №1606
			//Если ЗначениеЗаполнено(ВыбТранспорт) И ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.Ссылка) Тогда
			//	
			//	Струк = Новый Структура;
			//	Струк.Вставить("Транспорт", ВыбТранспорт);
			//	
			//	Попытка
			//	    ПараметрыТранспорта = МаршрутизацияЗаказовСервер.ПрочитатьДополнительныеПараметрыТранспорта(ВыбТранспорт);
			//		
			//		//УдаленноеЗакрытиеРейсов = РегистрыСведений.ДополнительныеПараметрыТранспорта.ПолучитьПоследнее(КонецДня(ТекущаяДата()), Струк).УдаленноеЗакрытиеРейсов;
			//		Если ПараметрыТранспорта = Неопределено Тогда
			//			УдаленноеЗакрытиеРейсов = Ложь;
			//		Иначе	
			//			УдаленноеЗакрытиеРейсов = ПараметрыТранспорта.УдаленноеЗакрытие;
			//		КонецеСли;	
			//		РейсОбъект = Элементы.Список.ТекущиеДанные.Ссылка.ПолучитьОбъект();
			//		РейсОбъект.УдаленноеЗакрытиеРейса = УдаленноеЗакрытиеРейсов;
			//		РейсОбъект.Записать();
			//		Элементы.Список.Обновить();
			//		
			//	Исключение
			//		
			//		 Сообщить("Ошибка установки реквизита Удаленное закрытие рейса. Действие отменено. Попробуйте еще раз.");
			//		 Возврат;
			//		
			//	КонецПопытки;	
			//	

			//	
			//КонецЕсли;
			//
			////--- БАО 09.08.2017 №1606
			//
			//Если ЗначениеЗаполнено(ВыбТранспорт) Тогда
			//	КолПопыток = 1;
			//	ПривязкаВыполнена = Ложь;
			//	Пока КолПопыток < 4 Цикл		
			//		Попытка
			//			МаршрутизацияЗаказовСервер.ПривязатьДанныеПоРейсуКЗаборамНаСервере(Элементы.Список.ТекущаяСтрока.Ссылка, ВыбТранспорт, ВыбВодитель, ВыбЭкспедитор);
			//			МаршрутизацияЗаказовСервер.ПривязатьМашинунаСервере(Элементы.Список.ТекущаяСтрока.Ссылка, ВыбТранспорт, ВыбВодитель, ВыбЭкспедитор);
			//			КолПопыток = 4;
			//			ПривязкаВыполнена = Истина;
			//			Продолжить;	
			//		Исключение
			//		    КолПопыток = КолПопыток + 1;
			//		КонецПопытки;
			//	КонецЦикла;	
			//	
			//	//Асеев 18.11.2020 (Задача № 4353)>>>
			//	Если ПривязкаВыполнена Тогда
			//		//Сообщить("Обновление привязки в Админке по " + Элементы.Список.ТекущиеДанные.Ссылка);
			//		//Элементы.Список.ТекущиеДанные.Ссылка.ПолучитьОбъект().ЗафиксироватьИсториюПрикрепленияЗаказаКРейсамНовый();//откат
			//	Иначе
			//	//Если НЕ ПривязкаВыполнена Тогда
			//	//Асеев 18.11.2020 (Задача № 4353)<<<
			//		Сообщить("Привязка не выполнена!");			
			//	КонецЕсли;			
			//	Элементы.Список.Обновить();
			//КонецеСли;
			//
			//Если ПоменятьМестами Тогда
			//    КолПопыток = 1;
			//	ПривязкаВыполнена = Ложь;
			//	Пока КолПопыток < 4 Цикл		
			//		Попытка
			//			МаршрутизацияЗаказовСервер.ПривязатьДанныеПоРейсуКЗаборамНаСервере(ВыбРейс,ТекущийТранспорт,ТекущийВодитель,ТекущийЭкспедитор);
			//			МаршрутизацияЗаказовСервер.ПривязатьМашинунаСервере(ВыбРейс,ТекущийТранспорт,ТекущийВодитель,ТекущийЭкспедитор);
			//			КолПопыток = 4;
			//			ПривязкаВыполнена = Истина;
			//			Продолжить;	
			//		Исключение
			//		    КолПопыток = КолПопыток + 1;
			//		КонецПопытки;
			//	КонецЦикла;
			//	
			//	//Асеев 18.11.2020 (Задача № 4353)>>>
			//	Если ПривязкаВыполнена Тогда
			//		//Сообщить("Обновление привязки в Админке по " + ВыбРейс);
			//		//ВыбРейс.ПолучитьОбъект().ЗафиксироватьИсториюПрикрепленияЗаказаКРейсамНовый();//откат
			//	Иначе
			//	//Если НЕ ПривязкаВыполнена Тогда
			//	//Асеев 18.11.2020 (Задача № 4353)<<<
			//		Сообщить("Привязка не выполнена!");			
			//	КонецЕсли;				
			//	Элементы.Список.Обновить();
			//КонецЕсли;
			ТекРейс = Элементы.Список.ТекущиеДанные.Ссылка;
			ВыполнитьПривязкуНаСервере(ВыбТранспорт, ВыбВодитель, ВыбЭкспедитор, ВыбРейс, ПоменятьМестами, ТекущийТранспорт, ТекущийВодитель, ТекущийЭкспедитор, ТекРейс);
			//Асеев 26.05.2022 (по письму 7501874 - Изменение внутри метода GetFullOrderInfo)<<<
			
        КонецеСли;
        
	КонецеСли;	
КонецПроцедуры



//&НаСервере
//Процедура ПривязатьДанныеПоРейсуКЗаборамНаСервере(Рейс, Машина, Водитель, Экспедитор)
//    
//    Запрос = Новый Запрос;
//    Запрос.Текст = 
//        "ВЫБРАТЬ
//        |   ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.ЗаборТовара).Ссылка КАК Забор
//        |ИЗ
//        |   Документ.Рейс.Заказы КАК РейсЗаказы
//        |ГДЕ
//        |   РейсЗаказы.Заказ.Ссылка ССЫЛКА Документ.ЗаборТовара
//        |   И РейсЗаказы.Ссылка = &Рейс";
//        
//    Запрос.УстановитьПараметр("Рейс",Рейс);
//    РезультатЗапроса = Запрос.Выполнить();
//    
//    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//    
//    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//        ЗаборОбъект = ВыборкаДетальныеЗаписи.Забор.ПолучитьОбъект();
//        ЗаборОбъект.Транспорт = Машина;
//        ЗаборОбъект.Водитель = Водитель;
//        ЗаборОбъект.Экспедитор = Экспедитор;
//        ЗаборОбъект.Записать(РежимЗаписиДокумента.Запись);
//    КонецЦикла;
//    

//КонецПроцедуры // ()


&НаКлиенте
Процедура ОткрытьСписокРейсовЗаСегодня(Команда)
    //ТабличныйДокумент = ПечатьСпискаРейсов();
    //ТабличныйДокумент.Показать();
    ОткрытьФорму("Документ.Рейс.Форма.ВыборПериода");
КонецПроцедуры

&НаСервере
Функция ПечатьСпискаРейсов()
    Макет = Документы.Рейс.ПолучитьМакет("СписокРейсов");
    ТабличныйДокумент = Новый ТабличныйДокумент;
    
    ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
    ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ДокументРейс.Ссылка,
        |   ДокументРейс.ПометкаУдаления,
        |   ДокументРейс.Номер,
        |   ДокументРейс.Дата,
        |   ДокументРейс.Проведен,
        |   ДокументРейс.Транспорт,
        |   ДокументРейс.Идентификатор,
        |   ДокументРейс.НомерПалетты КАК НомерПалетты,
        |   ДокументРейс.РежимЗагрузкиДанных,
        |   ДокументРейс.РейсМестнойДоставки,
        |   ДокументРейс.МоментВремени,
        |   ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК ПривязанныйТранспорт,
        |   ДокументРейс.ДатаРейса
        |ИЗ
        |   Документ.Рейс КАК ДокументРейс
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
        |       ПО (ПривязкаМашинКРейсамСрезПоследних.Рейс = ДокументРейс.Ссылка)
        |ГДЕ
        |   НЕ ДокументРейс.ПометкаУдаления
        |   И ДокументРейс.ДатаРейса МЕЖДУ &НачалоПериода И &КонецПериода
        |
        |УПОРЯДОЧИТЬ ПО
        |   НомерПалетты
        |АВТОУПОРЯДОЧИВАНИЕ";
    
    Запрос.УстановитьПараметр("КонецПериода", КонецДня(ТекущаяДата()));
    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ТекущаяДата()));
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    ТабличныйДокумент.Вывести(ОбластьШапка);
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
        ТабличныйДокумент.Вывести(ОбластьСтрока);
    КонецЦикла;
    ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
    ТабличныйДокумент.АвтоМасштаб = Истина;
    Возврат ТабличныйДокумент;
   
КонецФункции

&НаСервере
Функция ОтправляемСМС()
	Если ИнформированиеКлиентовОДоставкеСервер.ПолучитьРежимИнформированияПолучателейЗаказов() = Перечисления.ТипыИнформированияПолучателейЗаказов.СМС Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецеСли;	
КонецФункции	

//Асеев 29.07.2021 (Задача № 4627)>>>
&НаСервереБезКонтекста
Функция ПроверитьВозможностьПечатиМаршрутногоЛиста(Знач Рейс)
	
	ТекстОшибки = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Документ.Рейс КАК Т_Рейс
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам КАК ПривязкаМашинКРейсам
	|		ПО (ПривязкаМашинКРейсам.Рейс = &Рейс)
	|ГДЕ
	|	Т_Рейс.Ссылка = &Рейс
	|	И Т_Рейс.ВнешнийОператорМаршрутизации <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И ПривязкаМашинКРейсам.Рейс ЕСТЬ NULL";
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		ТекстОшибки = "Внешний рейс без указанного экипажа, печать МЛ запрещена!";
	КонецЕсли;
	
	Возврат ТекстОшибки;
	
КонецФункции
//Асеев 29.07.2021 (Задача № 4627)<<<

//Асеев 15.02.2023 (Задача № 4993)>>>
&НаСервереБезКонтекста
Функция НапечататьПрикрепленныеЗаборы(Знач Рейс)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаборТовара.Ссылка КАК Заказ
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияПрикрепленияЗаказаКРейсам КАК ИсторияПрикрепленияЗаказаКРейсам
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					МАКСИМУМ(КонтрольВремени.Период) КАК Период
	|				ИЗ
	|					РегистрСведений.КонтрольВремени КАК КонтрольВремени
	|				ГДЕ
	|					КонтрольВремени.Рейс = &Рейс
	|					И КонтрольВремени.Событие = ЗНАЧЕНИЕ(Справочник.СобытияКонтроляВремени.РаспечаткаБланковЗаказов)) КАК ВЗ_РаспечаткаБланков
	|				ПО (ВЗ_РаспечаткаБланков.Период < ИсторияПрикрепленияЗаказаКРейсам.Период)
	|					И (ИсторияПрикрепленияЗаказаКРейсам.Рейс = &Рейс)
	|			ПО ЗаборТовара.Ссылка = ИсторияПрикрепленияЗаказаКРейсам.Заказ
	|		ПО (РейсЗаказы.Ссылка = &Рейс)
	|			И РейсЗаказы.Заказ = ЗаборТовара.Ссылка
	|			И (НЕ РейсЗаказы.УдаленИзРейса)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	ОбработкаОбъект = Обработки.ПечатьБланковЗаказовНовый.Создать();
	ОбработкаОбъект.ПечатьПоРейсу(Рейс, ТабДок, Результат.Выгрузить().ВыгрузитьКолонку("Заказ"));
	
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
	
КонецФункции
//Асеев 15.02.2023 (Задача № 4993)<<<

&НаКлиенте
Процедура ПечатьМаршрутногоЛиста(Команда)
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	
	//Асеев 29.07.2021 (Задача № 4627)>>>
	ТекстОшибки = ПроверитьВозможностьПечатиМаршрутногоЛиста(ТекДанные.Ссылка);
	Если ТекстОшибки <> Неопределено Тогда
		ПоказатьПредупреждение(, ТекстОшибки);
		Возврат;
	КонецЕсли;
	//Асеев 29.07.2021 (Задача № 4627)<<<
	
	//Асеев 27.09.2022 (Задача № 4903)>>>
	Если ТребуетсяОбновитьТарифицируемыйВес(ТекДанные.Ссылка) Тогда
		ТекстОшибки = МаршрутизацияЗаказовСервер.ОбновитьТарифицируемыйВесРейса(ТекДанные.Ссылка);
		Если ТекстОшибки <> "" Тогда
			Сообщить("Не удалось обновить тарифицируемый вес" + Символы.ПС + ТекстОшибки);
		КонецЕсли;
	КонецЕсли;
	//Асеев 27.09.2022 (Задача № 4903)<<<
	
	may.РаспечаткаМаршрутногоЛиста(ТекДанные.Ссылка, Ложь);
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент = ПечатьМаршрутногоЛистаСервер(ТекДанные.Ссылка, ТабличныйДокумент);
	ТабличныйДокумент.Показать("Маршрутный лист");
	//ТабличныйДокумент = Новый ТабличныйДокумент;
	//ТабличныйДокумент = ПечатьМаршрутногоЛистаСервер(ТекДанные.Ссылка, ТабличныйДокумент, Истина);
	//ТабличныйДокумент.Показать();
	may.РаспечаткаМаршрутногоЛиста(ТекДанные.Ссылка, Истина);
	
	//Асеев 18.10.2022 (Задача № 4915)>>>
	Если ПечататьБланкиОтвязанныхЗаказовПриПечатиМЛ И ТребуетсяПечатьБланковОтвязанныхЗаказовРейса(ТекДанные.Ссылка) Тогда
		ТабДок = НапечататьБланкиОтвязанныхЗаказовРейса(ТекДанные.Ссылка);
		ТабДок.Показать("Отвязанные заказы");
	КонецЕсли;
	//Асеев 18.10.2022 (Задача № 4915)<<<
	
	//Асеев 15.02.2023 (Задача № 4993)>>>
	//Марочкин закомментировал 18.09.2023, так как не согласовывали выпуск на прод этого функционала, при этом форму надо обновлять по другой задаче
	ТабДок = НапечататьПрикрепленныеЗаборы(ТекДанные.Ссылка);
	Если ТабДок <> Неопределено Тогда
		ТабДок.Показать("Прикрепленные заборы");
	КонецЕсли;
	//Асеев 15.02.2023 (Задача № 4993)<<<

	//Поляков #3995 18.05.2020 ->
	//исходный код
	//Если Не ОбщегоНазначения.ЭтоТестоваяСреда() Тогда  //
	//	Если ОтправляемСМС() Тогда
	//		may.ОтправитьСМСПоРейсу(ТекДанные.Ссылка);
	//	КонецЕсли;	
	//	
	//	// Якурнов 09.10.2018 13:59:47 Проверяем на OZON и отправляем
	//	oz_РаботаССервисом.ОбработатьВыдачуКурьеру_OZONПоРейсу(ТекДанные.Ссылка);
	//	
	//КонецЕсли;
	//
	//// Якурнов 25.10.2018 15:30:23 
	//ПечатьДокументовСервер.ЗафиксироватьПечатьДокумента(ТекДанные.Ссылка);
	////Элементы.Список.Обновить();

	//// Задача № 3201
	//Документы.Рейс.ОтправитьСтатусыЗаказовРейса(ТекДанные.Ссылка);
	//// Задача № 3201
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(ТекДанные.Ссылка);
	
	ФоновыеЗадания.Выполнить("МаршрутизацияЗаказовСервер.АсинхронныйВызовПроцедурИзПечатьМаршрутногоЛиста", МассивПараметров, , );
	//Поляков #3995 18.05.2020 <-

КонецПроцедуры

//Асеев 27.09.2022 (Задача № 4903)>>>
&НаСервереБезКонтекста
Функция ТребуетсяОбновитьТарифицируемыйВес(Знач Рейс)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ИСТИНА КАК РейсСДоставками
	|	ИЗ
	|		Документ.Рейс.Заказы КАК РейсЗаказы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ПО (РейсЗаказы.Ссылка = &Рейс)
	|				И (НЕ РейсЗаказы.УдаленИзРейса)
	|				И РейсЗаказы.Заказ = РеализацияТоваровУслуг.Ссылка) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыЗакрытыеДляИзменения.СрезПоследних(, Документ = &Рейс) КАК ДокументыЗакрытыеДляИзмененияСрезПоследних
	|		ПО (ДокументыЗакрытыеДляИзмененияСрезПоследних.ЗакрытДляРедактирования)
	|ГДЕ
	|	ДокументыЗакрытыеДляИзмененияСрезПоследних.ЗакрытДляРедактирования ЕСТЬ NULL";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции
//Асеев 27.09.2022 (Задача № 4903)<<<
	
//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)>>>
Функция ПолучитьСтрокуБезЛишнихРазделителей(ИсходнаяСтрока)
	
	ПолученнаяСтрока = СокрЛП(ИсходнаяСтрока);
	
	ПолученнаяСтрока = СтрЗаменить(ПолученнаяСтрока, Символы.ПС, " ");
	ПолученнаяСтрока = СтрЗаменить(ПолученнаяСтрока, Символы.ВК, " ");
	ПолученнаяСтрока = СтрЗаменить(ПолученнаяСтрока, Символы.НПП, " ");
	ПолученнаяСтрока = СтрЗаменить(ПолученнаяСтрока, Символы.Таб, " ");
	//убрать лишние пробелы
	Для н = 1 По 2 Цикл
		ПолученнаяСтрока = СтрЗаменить(ПолученнаяСтрока, "  ", " ");
	КонецЦикла;
	
	Возврат ПолученнаяСтрока;
	
КонецФункции
//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)<<<

//Асеев 07.09.2022 (Задача № 4893)>>>
&НаСервере
Функция ПечатьМаршрутногоЛистаСерверДо2022(РейсСсылка, ТабличныйДокумент)
	
	Макет = Документы.Рейс.ПолучитьМакет("МаршрутныйЛист_Горизонтальный");
	//ТабличныйДокумент = Новый ТабличныйДокумент;	
	
	//ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
    ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрокаЗаголовок = Макет.ПолучитьОбласть("СтрокаЗаголовок");		
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаЗаказ");			
	ОбластьЗабор = Макет.ПолучитьОбласть("СтрокаЗабор");
	ОбластьТекст = Макет.ПолучитьОбласть("Текст2");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьАвтоНадЗаголовком = Макет.ПолучитьОбласть("АвтоНадЗаголовком");
	ОбластьКолонтитул = Макет.ПолучитьОбласть("Колонтитул");
	
	
	//ЯчейкаПоездки = ТабДок.Область("R7C9:R9C9");
	
	МассивОбластей = Новый Массив;
	
	// шапка
	ЗапросПоРейсу = Новый Запрос("ВЫБРАТЬ
	                             |	ПривязкаМашинКРейсамСрезПоследних.Период КАК Период,
	                             |	ПривязкаМашинКРейсамСрезПоследних.Рейс КАК Рейс,
	                             |	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	                             |	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
								 //Асеев 06.08.2021 (по письму Такси. Внешняя маршрутизация.)>>>
	                             |	ВЫБОР
	                             |		КОГДА ПривязкаМашинКРейсамСрезПоследних.Рейс.ВнешнийОператорМаршрутизации <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	                             |			ТОГДА ПривязкаМашинКРейсамСрезПоследних.Водитель.ИДВнешнегоОператораМаршрутизации
	                             |	КОНЕЦ КАК CourierId,
								 //Асеев 06.08.2021 (по письму Такси. Внешняя маршрутизация.)<<<
	                             |	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор,
	                             |	ПривязкаМашинКРейсамСрезПоследних.КтоПривязал КАК КтоПривязал,
	                             |	ПривязкаМашинКРейсамСрезПоследних.Транспорт.Код + ПривязкаМашинКРейсамСрезПоследних.Рейс.Номер КАК НомерРейсаКодАвто
	                             |ИЗ
	                             |	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	                             |ГДЕ
	                             |	ПривязкаМашинКРейсамСрезПоследних.Рейс = &Рейс");
	ЗапросПоРейсу.УстановитьПараметр("Рейс", РейсСсылка);	
	РезРейс = ЗапросПоРейсу.Выполнить().Выбрать();
	Если РезРейс.Следующий() Тогда		
		МаркаАвто = РезРейс.Транспорт.Марка;
		ГосНомер  = РезРейс.Транспорт.НомерГосударственнойРегистрации;
		ОбластьШапка.Параметры.ДанныеРейса = "Водитель: " + РезРейс.Водитель + Символы.ПС 
		+ ?(ЗначениеЗаполнено(РезРейс.Экспедитор), "Экспедитор: " + РезРейс.Экспедитор + Символы.ПС, "")
		//Асеев 06.08.2021 (по письму Такси. Внешняя маршрутизация.)>>>
		+ ?(ЗначениеЗаполнено(РезРейс.CourierId), "CourierId: " + РезРейс.CourierId, "");
		//Асеев 06.08.2021 (по письму Такси. Внешняя маршрутизация.)<<<
		//+ "Авто: " + МаркаАвто + ", " + ГосНомер;
		
	КонецЕсли;
	
	НомерМаршрута = РейсСсылка.НомерПалетты;
	
	//ОбластьШапка.Параметры.ТекущееВремя = ТекущаяДата();
	
	КолЗаказов = 0;
	КолЗаборов = 0;
	КолКредитныхДоговоров = 0;
	КолБезнальныхДокументов	= 0;
	
	//CeHbKA #4513 06.04.2021
	ПодписаниеСопроводительныхДокументов = 0;
	//CeHbKA #4513 06.04.2021
	
	//+++ БАО 25.05.2017 №900
	КолЛореальВ2В = 0;
	
	ЛореальВ2В = Справочники.Контрагенты.НайтиПоКоду("Shop_680");
	//--- БАО 25.05.2017 №900
		
	DirectCredit = Справочники.Контрагенты.НайтиПоКоду("Shop_234");
	DirectCredit_Папка = Справочники.Контрагенты.НайтиПоКоду("Shop_101");
	Poscredit = Справочники.Контрагенты.НайтиПоКоду("Shop_391");
	
	
	ЗапросЗаказы = Новый Запрос("ВЫБРАТЬ
	                            |	РейсЗаказы.Ссылка КАК Ссылка,
	                            |	РейсЗаказы.НомерСтроки КАК НомерСтроки,
	                            |	РейсЗаказы.НомерПоездки КАК НомерПоездки,
	                            |	РейсЗаказы.СтатусЗаказа КАК СтатусЗаказа,
	                            |	РейсЗаказы.ВидЗаказа КАК ВидЗаказа,
	                            |	РейсЗаказы.ПродолжительностьОперации КАК ПродолжительностьОперации,
	                            |	РейсЗаказы.Заказ КАК Заказ,
	                            |	РейсЗаказы.Объем КАК Объем,
	                            |	РейсЗаказы.Вес КАК Вес,
	                            |	РейсЗаказы.ЗаказДобавленВРучную КАК ЗаказДобавленВРучную,
	                            |	РейсЗаказы.УдаленИзРейса КАК УдаленИзРейса,
	                            |	РейсЗаказы.ЗагруженИзВероут КАК ЗагруженИзВероут,
	                            |	РейсЗаказы.Заказ.ТипОплаты КАК ТипОплаты,
	                            |	ВЫБОР
	                            |		КОГДА РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	                            |			ТОГДА ""Доставка""
	                            |		ИНАЧЕ ""Забор""
	                            |	КОНЕЦ КАК ТипЗаказа,
								//+++ БАО 25.05.2017 №900
								|	РейсЗаказы.Заказ.Контрагент КАК Контрагент,
								//--- БАО 25.05.2017 №900
	                            |	РейсЗаказы.Заказ.ВладелецТовара КАК ВладелецТовара,
	                            |	РейсЗаказы.Заказ.ВладелецТовара.Родитель КАК ВладелецТовараРодитель
	                            |ИЗ
	                            |	Документ.Рейс.Заказы КАК РейсЗаказы
	                            |ГДЕ
	                            |	РейсЗаказы.Ссылка = &Ссылка
	                            |	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ");
	ЗапросЗаказы.УстановитьПараметр("Ссылка", РейсСсылка);
	РезЗаказы = ЗапросЗаказы.Выполнить().Выбрать();
	
	Пока РезЗаказы.Следующий() Цикл	
		Если РезЗаказы.ТипЗаказа = "Доставка" Тогда				
			КолЗаказов = КолЗаказов + 1;
			
			//кредитные договоры
			Если РезЗаказы.ТипОплаты = 2 ИЛИ РезЗаказы.ВладелецТовара = DirectCredit ИЛИ РезЗаказы.ВладелецТовара = Poscredit ИЛИ РезЗаказы.ВладелецТовараРодитель = DirectCredit_Папка Тогда			
				КолКредитныхДоговоров = КолКредитныхДоговоров + 1;			
			КонецЕсли;
			
			//безнальные документы
			//+Степанов Не учитываем документы по DirectCredit и Poscredit 
			//Если РезЗаказы.ТипОплаты = 4 Тогда			
			Если РезЗаказы.ТипОплаты = 4 И Не (РезЗаказы.ВладелецТовара = DirectCredit ИЛИ РезЗаказы.ВладелецТовара = Poscredit ИЛИ РезЗаказы.ВладелецТовараРодитель = DirectCredit_Папка) Тогда 			
				КолБезнальныхДокументов = КолБезнальныхДокументов + 1;			
			КонецЕсли;
			
			//+++ БАО 25.05.2017 №900
			Если РезЗаказы.ВладелецТовара = ЛореальВ2В Тогда
				КолЛореальВ2В = КолЛореальВ2В + 1;	
			КонецЕсли;	
			//--- БАО 25.05.2017 №900

			
		ИначеЕсли РезЗаказы.ТипЗаказа = "Забор" Тогда			
			КолЗаборов = КолЗаборов + 1;
			
			//+++ БАО 25.05.2017 №900
			Если РезЗаказы.Контрагент = ЛореальВ2В Тогда
				КолЛореальВ2В = КолЛореальВ2В + 1;	
			КонецЕсли;	
			//--- БАО 25.05.2017 №900

		КонецЕсли;

		
	КонецЦикла;
	
	//Для каждого ЗакСтр Из РейсСсылка.Заказы Цикл	
	//	Если НЕ ЗакСтр.УдаленИзРейса Тогда			
	//		Если ТипЗнч(ЗакСтр.Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда				
	//			КолЗаказов = КолЗаказов + 1;
	//			
	//			//кредитные договоры
	//			Если ЗакСтр.Заказ.ТипОплаты = 2 ИЛИ ЗакСтр.Заказ.ВладелецТовара = DirectCredit ИЛИ ЗакСтр.Заказ.ВладелецТовара = Poscredit ИЛИ ЗакСтр.Заказ.ВладелецТовара.Родитель = DirectCredit_Папка Тогда			
	//				КолКредитныхДоговоров = КолКредитныхДоговоров + 1;			
	//			КонецЕсли;
	//			
	//			//безнальные документы
	//			Если ЗакСтр.Заказ.ТипОплаты = 4 Тогда			
	//				КолБезнальныхДокументов = КолБезнальныхДокументов + 1;			
	//			КонецЕсли;
	//			
	//		ИначеЕсли ТипЗнч(ЗакСтр.Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда			
	//			КолЗаборов = КолЗаборов + 1;		
	//		КонецЕсли;
	//					
	//	КонецЕсли;		
	//КонецЦикла;
	
	ОбластьШапка.Параметры.НомерМаршрута = НомерМаршрута;
	ОбластьШапка.Параметры.КолЗаказов = КолЗаказов;
	ОбластьШапка.Параметры.КолЗаборов = КолЗаборов;	
	ОбластьШапка.Параметры.Штрихкод = lem.глСформироватьБарКодEAN13(ОбщегоНазначения.СформироватьШтрихкодРейса(РейсСсылка));
	
	
	
	
	//ТабличныйДокумент.Вывести(ОбластьШапка);
	//МассивОбластей.Добавить(ОбластьШапка);
	//ТабличныйДокумент.Вывести(ОбластьСтрокаЗаголовок);
	//МассивОбластей.Добавить(ОбластьСтрокаЗаголовок);
	
	// строки заказов
	НПП = 1;
	Запрос = новый Запрос("ВЫБРАТЬ
	                      |	ДополнительныеПараметрыЗаказа.Заказ КАК Заказ,
	                      |	МАКСИМУМ(ЕСТЬNULL(ТарифыРасчетаСтоимостиДоставки.ТребуетсяОплатаСтоимостиДоставкиПриОтказеОтВыкупа, ЛОЖЬ)) КАК ОплатаДоставкиПриОтказе,
	                      |	МАКСИМУМ(НЕ ТарифыРасчетаСтоимостиДоставкиБрейкиПоСтоимостиВыкупа.Ссылка ЕСТЬ NULL) КАК РасчетДоставки
	                      |ПОМЕСТИТЬ ВТ_ТарифыДоставки
	                      |ИЗ
	                      |	Документ.Рейс.Заказы КАК РейсЗаказы
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТарифыРасчетаСтоимостиДоставки КАК ТарифыРасчетаСтоимостиДоставки
	                      |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТарифыРасчетаСтоимостиДоставки.БрейкиПоСтоимостиВыкупа КАК ТарифыРасчетаСтоимостиДоставкиБрейкиПоСтоимостиВыкупа
	                      |				ПО ТарифыРасчетаСтоимостиДоставки.Ссылка = ТарифыРасчетаСтоимостиДоставкиБрейкиПоСтоимостиВыкупа.Ссылка
	                      |					И (ТарифыРасчетаСтоимостиДоставкиБрейкиПоСтоимостиВыкупа.НомерСтроки = 1)
	                      |			ПО ДополнительныеПараметрыЗаказа.ТарифРасчетаСтоимостиДоставки = ТарифыРасчетаСтоимостиДоставки.КодАдминки
	                      |		ПО (РейсЗаказы.Ссылка = &Ссылка)
	                      |			И (РейсЗаказы.УдаленИзРейса = ЛОЖЬ)
	                      |			И РейсЗаказы.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ДополнительныеПараметрыЗаказа.Заказ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	РейсЗаказы.НомерПоездки КАК НомерПоездки,
	                      |	""З"" КАК ТипЗаказа,
	                      |	ЗаборТовара.Номер КАК Номер,
	                      |	ЗаборТовара.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
						  //+Широков Задача 4469
						  |	ЗаборТовара.Телефон КАК Телефон,
						  //| ВЫБОР 
						  //|     КОГДА РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг 
						  //|         ТОГДА ДПЗ.ПолучательЗаказа.Телефон 
						  //|     ИНАЧЕ РейсЗаказы.Заказ.Телефон 
						  //| КОНЕЦ КАК Телефон,
						  //-Широков Задача 4469
	                      |	ЗаборТовара.АдресДоставки КАК АдресДоставки,
	                      |	ЗаборТовара.ВремяДоставкиС КАК ИнтервалС,
	                      |	ЗаборТовара.ВремяДоставкиПо КАК ИнтервалПо,
	                      |	ЗаборТовара.ТипОплаты КАК ТипОплаты,
	                      |	ЗаборТовара.СуммаДокумента КАК СуммаДокумента,
	                      |	ЗаборТовара.ВесЗабора КАК Вес,
	                      |	ВЫБОР
	                      |		КОГДА ЗаборТовара.Контрагент.Родитель.ОсновнойМагазин ЕСТЬ NULL
	                      |				ИЛИ ЗаборТовара.Контрагент.Родитель.ОсновнойМагазин = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	                      |			ТОГДА ЗаборТовара.Контрагент
	                      |		ИНАЧЕ ЗаборТовара.Контрагент.Родитель.ОсновнойМагазин
	                      |	КОНЕЦ КАК Партнер,
	                      |	NULL КАК КоличествоМест,
						  //+Широков Задача 4469
						  |	ЗаборТовара.Грузополучатель КАК Грузополучатель,
						  //| ВЫБОР 
						  //|     КОГДА РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг 
						  //|         ТОГДА ДПЗ.ПолучательЗаказа 
						  //|     ИНАЧЕ РейсЗаказы.Заказ.Грузополучатель 
						  //| КОНЕЦ КАК Грузополучатель,
						  //-Широков Задача 4469
                          |	NULL КАК ИнтервалДоставкиСтрокой,
	                      |	ЗаборТовара.Ссылка КАК Заказ,
	                      |	РейсЗаказы.НомерСтроки КАК НомерСтроки,
	                      |	ЗаборТовара.ОбъемЗабора КАК ОбъемЗабора,
	                      |	"""" КАК ДополнениеКАдресуДоставки,
	                      |	"""" КАК КомментарийОтправителя
	                      |ПОМЕСТИТЬ ВТ
	                      |ИЗ
	                      |	Документ.Рейс.Заказы КАК РейсЗаказы
						  //+Широков Задача 4469
						  //| ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДПЗ
						  //| ПО ДПЗ.Заказ = РейсЗаказы.Заказ
						  //-Широков Задача 4469
	                      |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	                      |	ПО (РейсЗаказы.Ссылка = &Ссылка)
	                      |		И (НЕ РейсЗаказы.УдаленИзРейса)
	                      |		И РейсЗаказы.Заказ = ЗаборТовара.Ссылка
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	РейсЗаказы.НомерПоездки,
	                      |	""Д"",
	                      |	РеализацияТоваровУслуг.Номер,
	                      |	РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
						  //+Широков Задача 4469
						  |	РеализацияТоваровУслуг.Телефон КАК Телефон,
						  //|ВЫБОР 
						  //|     КОГДА РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг 
						  //|         ТОГДА ДПЗ.ПолучательЗаказа.Телефон 
						  //|     ИНАЧЕ РейсЗаказы.Заказ.Телефон 
						  //|КОНЕЦ КАК Телефон,
						  //-Широков Задача 4469
	                      |	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Наименование,
	                      |	новаМестнаяДоставка.ВремяПрибытияС,
	                      |	новаМестнаяДоставка.ВремяПрибытияПо,
	                      |	РеализацияТоваровУслуг.ТипОплаты,
	                      |	РеализацияТоваровУслуг.СуммаДокумента,
	                      |	ВЫБОР
	                      |		КОГДА НЕ Накладная003Заказы.Вес ЕСТЬ NULL
	                      |				И Накладная003Заказы.Вес > 0
	                      |			ТОГДА Накладная003Заказы.Вес
	                      |		ИНАЧЕ РеализацияТоваровУслуг.ОбщийВес
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА РеализацияТоваровУслуг.ВладелецТовара.Родитель.ОсновнойМагазин ЕСТЬ NULL
	                      |				ИЛИ РеализацияТоваровУслуг.ВладелецТовара.Родитель.ОсновнойМагазин = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	                      |			ТОГДА РеализацияТоваровУслуг.ВладелецТовара
	                      |		ИНАЧЕ РеализацияТоваровУслуг.ВладелецТовара.Родитель.ОсновнойМагазин
	                      |	КОНЕЦ,
	                      |	РеализацияТоваровУслуг.КоличествоМест,
						  //+Широков Задача 4469
						  |	РеализацияТоваровУслуг.Грузополучатель,
						  //|ВЫБОР 
						  //|     КОГДА РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг 
						  //|         ТОГДА ДПЗ.ПолучательЗаказа 
						  //|     ИНАЧЕ РейсЗаказы.Заказ.Грузополучатель 
						  //|КОНЕЦ КАК Грузополучатель,
						  //-Широков Задача 4469
						  
	                      |	новаМестнаяДоставка.ИнтервалДоставкиСтрокой,
	                      |	РеализацияТоваровУслуг.Ссылка,
	                      |	РейсЗаказы.НомерСтроки,
	                      |	NULL,
	                      |	РеализацияТоваровУслуг.ДополнениеКАдресуДоставки,
	                      |	РеализацияТоваровУслуг.Комментарий
	                      |ИЗ
	                      |	Документ.Рейс.Заказы КАК РейсЗаказы
						  | ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
						  |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
						  | 	ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
						  | ПО (РейсЗаказы.Ссылка = &Ссылка)
						  | 	И (НЕ РейсЗаказы.УдаленИзРейса)
						  | 	И РейсЗаказы.Заказ = РеализацияТоваровУслуг.Ссылка
						  |	ЛЕВОЕ СОЕДИНЕНИЕ Документ.Накладная003.Заказы КАК Накладная003Заказы
						  | ПО РейсЗаказы.Заказ = Накладная003Заказы.Заказ
						  | 		И (Накладная003Заказы.Ссылка.Проведен)
						  //+Широков Задача 4469
						  //| ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДПЗ
						  //| ПО ДПЗ.Заказ = РейсЗаказы.Заказ
						  //-Широков Задача 4469
	                      |;
						  |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ.НомерПоездки КАК НомерПоездки,
	                      |	ВТ.ТипЗаказа КАК ТипЗаказа,
	                      |	ВТ.Номер КАК Номер,
	                      |	ВТ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
						  //+Широков Задача 4469
						  //|	ВТ.Телефон КАК Телефон,
						  | ВЫБОР 
						  |     КОГДА ВТ.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг 
						  |         ТОГДА ДополнительныеПараметрыЗаказа.ПолучательЗаказа.Телефон 
						  |     ИНАЧЕ ВТ.Телефон 
						  | КОНЕЦ КАК Телефон,
						  //-Широков Задача 4469
	                      |	ВТ.АдресДоставки КАК АдресДоставки,
	                      |	ЧАС(ВТ.ИнтервалС) КАК ИнтервалС,
	                      |	ЧАС(ВТ.ИнтервалПо) КАК ИнтервалПо,
	                      |	ВТ.ТипОплаты КАК ТипОплатыЧисло,
	                      |	ВЫБОР
	                      |		КОГДА ПараметрыКонтрагентовСрезПоследних.ПриёмИтогоСКлиента
	                      |			ТОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0)
	                      |		ИНАЧЕ ВТ.СуммаДокумента
	                      |	КОНЕЦ КАК СуммаДокумента2,
	                      |	ВТ.Вес КАК Вес,
	                      |	ВТ.Партнер КАК Партнер,
						  |	ВТ.Партнер.Код КАК КодПартнера,
	                      |	ВТ.КоличествоМест КАК КоличествоМест,
						  //+Широков Задача 4469
						  //|	ВТ.Грузополучатель КАК Грузополучатель,
						  |ВЫБОР 
						  |     КОГДА ВТ.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг 
						  |         ТОГДА ДополнительныеПараметрыЗаказа.ПолучательЗаказа 
					      |     ИНАЧЕ ВТ.Грузополучатель 
						  |КОНЕЦ КАК Грузополучатель,
						  //-Широков Задача 4469
						  |	ВТ.ИнтервалДоставкиСтрокой КАК ИнтервалДоставкиСтрокой,
	                      |	ЕСТЬNULL(ВЫРАЗИТЬ(ВТ.Заказ КАК Документ.РеализацияТоваровУслуг).ЗапретЧастичногоВыкупа, ЛОЖЬ) КАК ЗапретЧастичногоВыкупа,
	                      |	ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.ЗапретСменыОплаты, ЛОЖЬ) КАК ЗапретСменыОплаты,
	                      |	ТипыОплат.Ссылка КАК ТипОплаты,
	                      |	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.СОжиданием, ЛОЖЬ) КАК СОжиданием,
	                      |	ЕСТЬNULL(ВложенныйЗапрос.НашВес, 0) КАК НашВес,
						  //Асеев 02.08.2022 (Задача № 4861)>>>
						  //|	ВТ.НомерСтроки КАК НомерСтроки,
						  |	ЕСТЬNULL(ФиксацияМаршрутизацииРейсаЗаказы.ПорядокМаршрутизации, 100000 + ВТ.НомерСтроки) КАК НомерСтроки,
						  //Асеев 02.08.2022 (Задача № 4861)<<<
						  //Асеев 04.05.2021 (Задача № 3837)>>>
						  //|	КатегорииДоставки2014.Родитель КАК КатегорияДоставки,
						  //Асеев 04.05.2021 (Задача № 3837)<<<
	                      |	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	                      |	ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП КАК КатегорияДляРасчетаЗП,
	                      |	ЕСТЬNULL(ВложенныйЗапрос1.ВесПотоварный, 0) КАК ВесПотоварный,
	                      |	ВЫРАЗИТЬ(ВТ.Заказ КАК Документ.РеализацияТоваровУслуг).ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
	                      |	ВТ.Заказ КАК Заказ,
	                      |	ВЫБОР
	                      |		КОГДА ВТ.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА ВЫРАЗИТЬ(ВТ.Заказ КАК Документ.РеализацияТоваровУслуг).УчитыватьИтогоКОплате
	                      |						ТОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0)
	                      |					ИНАЧЕ ВТ.СуммаДокумента
	                      |				КОНЕЦ
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК СуммаДокумента,
	                      |	ВЫБОР
	                      |		КОГДА ВТ.Заказ ССЫЛКА Документ.ЗаборТовара
	                      |			ТОГДА ВЫРАЗИТЬ(ВТ.Заказ КАК Документ.ЗаборТовара).Контрагент
	                      |		ИНАЧЕ ВЫРАЗИТЬ(ВТ.Заказ КАК Документ.РеализацияТоваровУслуг).ВладелецТовара
	                      |	КОНЕЦ КАК ВладелецТовара,
	                      |	ЕСТЬNULL(ВложенныйЗапрос2.Поездки, 0) + 1 КАК Поездки,
	                      |	ВложенныйЗапрос1.Сумма КАК СуммаПоТоварам,
	                      |	ВТ.ОбъемЗабора КАК ОбъемЗабора,
	                      |	ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП_Миго КАК КатегорияДляРасчетаЗП_Миго,
						  //CeHbKA 06.04.2021	
						  |	ДополнительныеПараметрыЗаказа.ПодписаниеИВозвратСопрДокументов КАК ПодписаниеИВозвратСопрДокументов,
						  //CeHbKA 06.04.2021	
	                      |	ЕСТЬNULL(ВТ_ТарифыДоставки.ОплатаДоставкиПриОтказе, ЛОЖЬ) КАК ОплатаДоставкиПриОтказе,
	                      |	ЕСТЬNULL(ВТ_ТарифыДоставки.РасчетДоставки, ЛОЖЬ) КАК РасчетДоставки,
	                      |	ВТ.ДополнениеКАдресуДоставки КАК ДополнениеКАдресуДоставки,
	                      |	ВТ.КомментарийОтправителя КАК КомментарийОтправителя,
						  |	НЕ ВЗ_Контроль.ЗаказКонтроль ЕСТЬ NULL КАК Контроль
	                      |ИЗ
	                      |	ВТ КАК ВТ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних КАК ПараметрыКонтрагентовСрезПоследних
	                      |		ПО ВТ.Партнер = ПараметрыКонтрагентовСрезПоследних.Контрагент
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	                      |		ПО ВТ.ТипОплаты = ТипыОплат.Код
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	                      |		ПО ВТ.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |			СУММА(ЕСТЬNULL(ФиксацияВесаСрезПоследних.Вес, 0)) КАК НашВес,
	                      |			ФиксацияВесаСрезПоследних.Заказ КАК Заказ
	                      |		ИЗ
	                      |			РегистрСведений.ФиксацияВеса.СрезПоследних(
	                      |					,
	                      |					Заказ В
	                      |						(ВЫБРАТЬ
	                      |							ВТ.Заказ
	                      |						ИЗ
	                      |							ВТ КАК ВТ)) КАК ФиксацияВесаСрезПоследних
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			ФиксацияВесаСрезПоследних.Заказ) КАК ВложенныйЗапрос
	                      |		ПО ВТ.Заказ = ВложенныйЗапрос.Заказ
						  //Асеев 04.05.2021 (Задача № 3837)>>>
						  //|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
						  //|		ПО ВТ.Заказ.КатегорияДоставки = КатегорииДоставки2014.Категория
						  //Асеев 04.05.2021 (Задача № 3837)<<<
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	                      |		ПО ВТ.Номер = ВозвратТоваровОтПокупателя.Номер
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |			СУММА(РеализацияТоваровУслугТовары.Вес * РеализацияТоваровУслугТовары.Количество) КАК ВесПотоварный,
	                      |			РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	                      |			СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма
	                      |		ИЗ
	                      |			Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	                      |		ГДЕ
	                      |			РеализацияТоваровУслугТовары.Ссылка В
	                      |					(ВЫБРАТЬ
	                      |						ВТ.Заказ
	                      |					ИЗ
	                      |						ВТ КАК ВТ)
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			РеализацияТоваровУслугТовары.Ссылка) КАК ВложенныйЗапрос1
	                      |		ПО ВТ.Заказ = ВложенныйЗапрос1.Ссылка
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |			КОЛИЧЕСТВО(СостоянияЗаказов.Период) КАК Поездки,
	                      |			СостоянияЗаказов.Заказ КАК Заказ
	                      |		ИЗ
	                      |			РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	                      |		ГДЕ
	                      |			СостоянияЗаказов.Регистратор ССЫЛКА Документ.новаОтчетВодителя
	                      |			И СостоянияЗаказов.Заказ В
	                      |					(ВЫБРАТЬ
	                      |						ВТ.Заказ
	                      |					ИЗ
	                      |						ВТ КАК ВТ)
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			СостоянияЗаказов.Заказ) КАК ВложенныйЗапрос2
	                      |		ПО ВТ.Заказ = ВложенныйЗапрос2.Заказ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТарифыДоставки КАК ВТ_ТарифыДоставки
	                      |		ПО ВТ.Заказ = ВТ_ТарифыДоставки.Заказ
						  //Асеев 10.01.2022 (по письму Маркировка Заказа с Виной ТК)>>>
						  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
						  |			СостоянияЗаказов.Заказ КАК ЗаказКонтроль
						  |		ИЗ
						  |			РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
						  |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ КАК ВТ
						  |				ПО СостоянияЗаказов.Заказ = ВТ.Заказ
						  |					И (СостоянияЗаказов.ПричинаОтказа.СторонаПретензии = ЗНАЧЕНИЕ(Перечисление.СторонаПретензий.Компания))) КАК ВЗ_Контроль
						  |		ПО ВТ.Заказ = ВЗ_Контроль.ЗаказКонтроль
						  //Асеев 10.01.2022 (по письму Маркировка Заказа с Виной ТК)<<<
						  //Асеев 02.08.2022 (Задача № 4861)>>>
						  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФиксацияМаршрутизацииРейса.Заказы КАК ФиксацияМаршрутизацииРейсаЗаказы
						  |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
						  |				ФиксацияМаршрутизацииРейса.Ссылка КАК Фиксация
						  |			ИЗ
						  |				Документ.ФиксацияМаршрутизацииРейса КАК ФиксацияМаршрутизацииРейса
						  |			ГДЕ
						  |				ФиксацияМаршрутизацииРейса.Рейс = &Ссылка
						  |				И НЕ ФиксацияМаршрутизацииРейса.ПометкаУдаления
						  |			
						  |			УПОРЯДОЧИТЬ ПО
						  |				ФиксацияМаршрутизацииРейса.Дата УБЫВ,
						  |				Фиксация УБЫВ) КАК ВЗ_ПоследняяФиксацияМаршрутизации
						  |			ПО ФиксацияМаршрутизацииРейсаЗаказы.Ссылка = ВЗ_ПоследняяФиксацияМаршрутизации.Фиксация
						  |		ПО ВТ.Заказ = ФиксацияМаршрутизацииРейсаЗаказы.Заказ
						  //Асеев 02.08.2022 (Задача № 4861)<<<
						  |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	НомерСтроки");
	Запрос.УстановитьПараметр("Ссылка", РейсСсылка);
	Рез = Запрос.Выполнить().Выбрать();
	
	ВсегоСтрок = Рез.Количество();   
	ВысотаОбластей = 5;
	
		
	СтраницВсего = 0; НомерСтраницы = 0;
	Если ВсегоСтрок <= 4 Тогда
		СтраницВсего = 1;
	Иначе
		//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)>>>
		//ВсегоСтрок = ВсегоСтрок - 7;
		//СтраницВсего = СтраницВсего + 1;
		//Пока ВсегоСтрок > 0 Цикл
		//	Если ВсегоСтрок >= 8 Тогда
		//		СтраницВсего = СтраницВсего + 1;
		//		ВсегоСтрок = ВсегоСтрок - 8;
		//		Если ВсегоСтрок = 0 Тогда
		//			СтраницВсего = СтраницВсего + 1;	
		//		КонецЕсли;
		//	Иначе
		//		Если ВсегоСтрок > 5 Тогда			
		//			СтраницВсего = СтраницВсего + 2;					
		//		Иначе				
		//			СтраницВсего = СтраницВсего + 1;					
		//		КонецЕсли;	
		//		ВсегоСтрок = 0;
		//	КонецЕсли;		    					
		//КонецЦикла;
		ВсегоСтрок = ВсегоСтрок - 6;
		СтраницВсего = СтраницВсего + 1;
		Пока ВсегоСтрок > 0 Цикл
			Если ВсегоСтрок >= 6 Тогда
				СтраницВсего = СтраницВсего + 1;
				ВсегоСтрок = ВсегоСтрок - 6;
				Если ВсегоСтрок = 0 Тогда
					СтраницВсего = СтраницВсего + 1;	
				КонецЕсли;
			Иначе
				Если ВсегоСтрок > 3 Тогда			
					СтраницВсего = СтраницВсего + 2;					
				Иначе				
					СтраницВсего = СтраницВсего + 1;					
				КонецЕсли;	
				ВсегоСтрок = 0;
			КонецЕсли;		    					
		КонецЦикла;
		//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)<<<
	КонецЕсли;

	
	НомерСтраницы = 1;	
	
	ТекВр = "" + Формат(ТекущаяДата(), "ДФ='dd-MM-yyyy HH:mm'");
	
	ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
	ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
	ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
	ТабличныйДокумент.Вывести(ОбластьКолонтитул);
	
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	МассивОбластей.Добавить(ОбластьШапка);
	ТабличныйДокумент.Вывести(ОбластьСтрокаЗаголовок);
	МассивОбластей.Добавить(ОбластьСтрокаЗаголовок);
	
	
	НуженТекст = Ложь;
	СуммаНаличные = 0;
	СуммаТерминал = 0;
	
	НомерСтраницы = 1;
	НомерСтроки = 1;
	
	
	
	Пока Рез.Следующий() Цикл
		
		Если Рез.ТипЗаказа = "Д" Тогда    // --- доставка
			
			КрасимПоездки = Ложь;
			КрасимЗапреты = Ложь;
			
			ОбластьСтрока.Параметры.НПП          	= НПП;
			ОбластьСтрока.Параметры.ТипЗаказа    	= Рез.ТипЗаказа;
			ОбластьСтрока.Параметры.НомерЗаказа  	= Рез.Номер;
			ОбластьСтрока.Параметры.ВнешнийНомер 	= Рез.НомерВнешнегоЗаказа;
			ОбластьСтрока.Параметры.КолМест      	= Рез.КоличествоМест;
			
			СуммаВозврат = 0;
			Если ЗначениеЗаполнено(Рез.Возврат) Тогда
				СуммаВозврат = Рез.Возврат.Товары.Итог("Сумма");
			КонецЕсли;
			
			// МАС - 15.11.2017 - оптимизация --->> 	
			СуммаТоваров = Рез.СуммаПоТоварам;
			//НайРеализ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(СокрЛП(Рез.Номер));
			//Если ЗначениеЗаполнено(НайРеализ) Тогда
			//	СуммаТоваров = НайРеализ.Товары.Итог("Сумма");	
			//КонецЕсли;
			// <<--- МАС
			
			// МАС - 03.08.2017 - №1456 --->> 
			//ИтоговаяСумма = СуммаТоваров - СуммаВозврат;
			ИтоговаяСумма = Рез.СуммаДокумента - СуммаВозврат;
			// <<--- МАС 
			
			
			
			//ОбластьСтрока.Параметры.Сумма        	= ?(Рез.СуммаДокумента <> 0, Рез.СуммаДокумента, СуммаВозврат);
			Если Рез.ТипОплаты = Справочники.ТипыОплат.ОплаченоВМагазине ИЛИ Рез.ТипОплаты = Справочники.ТипыОплат.БезРасчетов Тогда // Задача № 2901			
				ОбластьСтрока.Параметры.Сумма        	= 0;				
			Иначе			
				ОбластьСтрока.Параметры.Сумма        	= ?(СуммаВозврат <> 0, ИтоговаяСумма, Рез.СуммаДокумента);				
			КонецЕсли;
			
			ОбластьСтрока.Параметры.ФСумма          = "";
			ОбластьСтрока.Параметры.Контакты	 	= "" + Рез.Грузополучатель + ", " + Рез.Телефон;	
			
			//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)>>>
			//ОбластьСтрока.Параметры.Адрес		 	= Рез.АдресДоставки;
			Если ПустаяСтрока(Рез.ДополнениеКАдресуДоставки) Тогда
				ОбластьСтрока.Параметры.Адрес = Рез.АдресДоставки;
			Иначе
				Попытка
				ОбластьСтрока.Параметры.Адрес = Рез.АдресДоставки + " " + ПолучитьСтрокуБезЛишнихРазделителей(Рез.ДополнениеКАдресуДоставки);
			исключение
				      ОбластьСтрока.Параметры.Адрес = Рез.АдресДоставки;
				КонецПопытки;
			КонецЕсли;
			Если ПустаяСтрока(Рез.КомментарийОтправителя) Тогда
				ОбластьСтрока.Параметры.КомментарийОтправителя = "";
			Иначе
				ОбластьСтрока.Параметры.КомментарийОтправителя = ПолучитьСтрокуБезЛишнихРазделителей(Рез.КомментарийОтправителя);
			КонецЕсли;
			//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)<<<
			
			////+++ БАО 15.08.2017 №1678 
			//Если ЗначениеЗаполнено(Рез.ВладелецТовара) И рэИнтеграцияРэдЭкспресс.ЭтоРЭД(Рез.ВладелецТовара) Тогда
			//	ОбластьСтрока.Параметры.Стриж = "РЕД";
			//Иначе
			//	ОбластьСтрока.Параметры.Стриж = "Стриж";
			//КонецЕсли;	
			////--- БАО 15.08.2017 №1678 

			//ОбластьСтрока.Параметры.Вес          	= МАКС(Рез.Вес, Рез.НашВес);
			//ОбластьСтрока.Параметры.Вес          	= "" + МАКС(Рез.Вес, Рез.НашВес) + Символы.ПС + Рез.КатегорияДоставки;
			
			
			// МАС - 16.02.2018 - № --->> 
			//ОбластьСтрока.Параметры.Вес          	= "" + МАКС(Рез.Вес, Рез.НашВес, Рез.ВесПотоварный) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП), Рез.КатегорияДляРасчетаЗП.Родитель, Рез.КатегорияДоставки);
			ОбластьСтрока.Параметры.Вес1 = "";
			ОбластьСтрока.Параметры.Вес2 = "";
			//Если Рез.НашВес > 0 Тогда
			//	ОбластьСтрока.Параметры.Вес2          	= "" + МАКС(Рез.Вес, Рез.НашВес, Рез.ВесПотоварный) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП), Рез.КатегорияДляРасчетаЗП.Родитель, Рез.КатегорияДоставки);
			//Иначе	
			//	//ОбластьСтрока.Параметры.Вес1          	= "" + ?(Рез.ВесПотоварный > 0, Рез.ВесПотоварный, Рез.Вес) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП), Рез.КатегорияДляРасчетаЗП.Родитель, Рез.КатегорияДоставки);
			//	ОбластьСтрока.Параметры.Вес1          	= "" + МАКС(Рез.ВесПотоварный, Рез.Вес) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП), Рез.КатегорияДляРасчетаЗП.Родитель, Рез.КатегорияДоставки);
			//КонецЕсли;	
			// <<--- МАС 
			
			
			// МАС - 06.03.2018 - Теперь категория будет выводиться из МИГО --->>    исключили потоварный вес 29.03.2019 , Рез.ВесПотоварный  МАКС(Рез.ВесПотоварный, )
			Если Рез.НашВес > 0 Тогда
				ОбластьСтрока.Параметры.Вес2          	= "" + МАКС(Рез.Вес, Рез.НашВес) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП_Миго), Рез.КатегорияДляРасчетаЗП_Миго, Рез.КатегорияДляРасчетаЗП);
			Иначе	
				//ОбластьСтрока.Параметры.Вес1          	= "" + ?(Рез.ВесПотоварный > 0, Рез.ВесПотоварный, Рез.Вес) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП), Рез.КатегорияДляРасчетаЗП.Родитель, Рез.КатегорияДоставки);
				ОбластьСтрока.Параметры.Вес1          	= "" + Рез.Вес + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП_Миго), Рез.КатегорияДляРасчетаЗП_Миго, Рез.КатегорияДляРасчетаЗП);
			КонецЕсли;
			// <<--- МАС 
			
			
			
			
			
			
			ТелефонМагазина = Рез.Партнер.ТелефонИнтернетМагазина;
			Если Рез.Партнер.Код = "Shop_248 " ИЛИ Рез.Партнер.Код = "Shop_601 " ИЛИ Рез.Партнер.Код = "Shop_752 " Тогда
				ТелефонМагазина = "8-495-974-35-64";
			ИначеЕсли Рез.Партнер.Код = "Shop_438 " Тогда	
			    ТелефонМагазина = "8-499-643-33-64";
			КонецЕсли;
			
			ОбластьСтрока.Параметры.ПартнерТелефон  = "" + ?((Рез.Партнер.Код = "Shop_248 " ИЛИ Рез.Партнер.Код = "Shop_601 "), "YD", Рез.Партнер) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.Партнер), ТелефонМагазина, "");
			ОбластьСтрока.Параметры.Интервал        = "" + Рез.ИнтервалС + " - " + Рез.ИнтервалПо;
			ОбластьСтрока.Параметры.ТипОплаты       = Рез.ТипОплаты;
			
			
			// МАС - 31.10.2017 - № --->>  Поездки
			ОбластьСтрока.Параметры.Поездки = Строка(Рез.Поездки);
			Если Рез.Поездки >= 3 Тогда		
				КрасимПоездки = Истина		
			КонецЕсли;
			// <<--- МАС 
				
			
			Если Рез.ТипОплаты.Код = 1 Тогда				
				СуммаНаличные = СуммаНаличные + Рез.СуммаДокумента;		
			ИначеЕсли Рез.ТипОплаты.Код = 5 Тогда		
				СуммаТерминал = СуммаТерминал + Рез.СуммаДокумента;			
			КонецЕсли;
			
			
			Если Рез.ТипОплаты.Код = 2 Тогда
				СменаОплаты = "";	
				ОбластьСтрока.Параметры.Сумма  = Рез.СуммаДокумента - Рез.ПредоплатаПоКредиту;
			ИначеЕсли Рез.ТипОплаты.Код = 4 Тогда
				СменаОплаты = "";	
				ОбластьСтрока.Параметры.Сумма  = "-";
			ИначеЕсли Рез.ТипОплаты.Код = 7 Тогда	
				СменаОплаты = "";
				ОбластьСтрока.Параметры.ФСумма = "ОПЛАЧЕНО";
				ОбластьСтрока.Параметры.Сумма  = "-";
			Иначе
				//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)>>>
				//СменаОплаты = ?(Рез.ЗапретСменыОплаты = Истина, "Смена оплаты запрещена", "Смена оплаты разрешена");
				СменаОплаты = ?(Рез.ЗапретСменыОплаты = Истина, "Смена оплаты запрещена", "");
				//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)<<<
				Если Рез.ЗапретСменыОплаты Тогда			
					КрасимЗапреты = Истина;				
				КонецЕсли;	
			КонецЕсли;
			
			Если Рез.ТипОплаты.Код = 2 Тогда		
				ЧастичныйВыкуп = "";			
			Иначе	
				Если Рез.Партнер.Код = "Shop_602 " Тогда // Бетховен	
					//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)>>>
					//ЧастичныйВыкуп = ?(Рез.Заказ.ЗапретЧастичногоВыкупа = Истина, "Частичный выкуп запрещен", "Частичный выкуп разрешен");
					ЧастичныйВыкуп = ?(Рез.Заказ.ЗапретЧастичногоВыкупа = Истина, "Частичный выкуп запрещен", "");
					//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)<<<
					Если Рез.Заказ.ЗапретЧастичногоВыкупа Тогда		
						КрасимЗапреты = Истина;					
					КонецЕсли;
				Иначе
					//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)>>>
					//ЧастичныйВыкуп = ?(Рез.ЗапретЧастичногоВыкупа = Истина, "Частичный выкуп запрещен", "Частичный выкуп разрешен");
					ЧастичныйВыкуп = ?(Рез.ЗапретЧастичногоВыкупа = Истина, "Частичный выкуп запрещен", "");
					//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)<<<
					Если Рез.ЗапретЧастичногоВыкупа Тогда		
						КрасимЗапреты = Истина;					
					КонецЕсли;
				КонецЕсли;							
			КонецЕсли;
			
			//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)>>>
			//ОбластьСтрока.Параметры.ПараметрыОплаты = ЧастичныйВыкуп + ?(СменаОплаты = "", "", ?(ЧастичныйВыкуп = "", "", Символы.ПС) + СменаОплаты)
			//											+ ?((Рез.Партнер.Код = "Shop_248 " ИЛИ Рез.Партнер.Код = "Shop_601 " ИЛИ Рез.Партнер.Код = "Shop_752 "), Символы.ПС + Рез.СОжиданием, "");		
			ПараметрыОплаты = ЧастичныйВыкуп + ?(СменаОплаты = "", "", ?(ЧастичныйВыкуп = "", "", Символы.ПС) + СменаОплаты);
			Если Рез.РасчетДоставки Тогда
                ПараметрыОплаты = ?(ПараметрыОплаты <> "", ПараметрыОплаты + Символы.ПС + "Условие для бесплатной доставки", "Условие для бесплатной доставки");
				КрасимЗапреты = Истина;
			КонецЕсли;
			Если Рез.ОплатаДоставкиПриОтказе Тогда
				ПараметрыОплаты = ?(ПараметрыОплаты <> "", ПараметрыОплаты + Символы.ПС + "Оплата доставки при отказе", "Оплата доставки при отказе");
				КрасимЗапреты = Истина;
			КонецЕсли;
			//|	ВЫБОР
			//|		КОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.СОжиданием, ЛОЖЬ)
			//|			ТОГДА ""С вскрытием""
			//|		ИНАЧЕ ""Без вскрытия""
			//|	КОНЕЦ КАК СОжиданием,
			//ЕСТЬNULL(ДополнительныеПараметрыЗаказа.СОжиданием, ЛОЖЬ) КАК СОжиданием
			Если Рез.КодПартнера = "Shop_248 " ИЛИ Рез.КодПартнера = "Shop_601 " ИЛИ Рез.КодПартнера = "Shop_752 " Тогда
				Если Не Рез.СОжиданием Тогда
					ПараметрыОплаты = ?(ПараметрыОплаты <> "", ПараметрыОплаты + Символы.ПС + "Без вскрытия", "Без вскрытия");
					КрасимЗапреты = Истина;
				КонецЕсли;
			КонецЕсли;
			ОбластьСтрока.Параметры.ПараметрыОплаты = ПараметрыОплаты;
			//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)<<<
			
			//CeHbKA #4513 06.04.2021
			Если Рез.ПодписаниеИВозвратСопрДокументов = Истина Тогда
				ОбластьСтрока.Параметры.ПараметрыОплаты = ОбластьСтрока.Параметры.ПараметрыОплаты + "" + Символы.ПС + "Подписание сопроводительного документа";
				ПодписаниеСопроводительныхДокументов = ПодписаниеСопроводительныхДокументов + 1;
			КонецЕсли; 
			//CeHbKA #4513 06.04.2021			
			
			Если ВысотаОбластей + 10 > 34 Тогда
				ТабличныйДокумент.Вывести(ОбластьТекст);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				НуженТекст = Ложь;
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
				ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
				ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
				ТабличныйДокумент.Вывести(ОбластьКолонтитул);		
				
				
				ТабличныйДокумент.Вывести(ОбластьСтрокаЗаголовок);
				ВысотаОбластей = 2;
			КонецЕсли;
			
			
		
			// >>>  Выделение фона  >>>		
			ОбластьОформленияСтроки = ТабличныйДокумент.Вывести(ОбластьСтрока);
			Если КрасимПоездки Тогда
				ТабличныйДокумент.Область(ОбластьОформленияСтроки.Верх, 10, ОбластьОформленияСтроки.Низ, 10).ЦветФона = Новый Цвет(213,213,213);
			КонецЕсли;
			Если КрасимЗапреты Тогда
				ТабличныйДокумент.Область(ОбластьОформленияСтроки.Верх, 11, ОбластьОформленияСтроки.Низ, 11).ЦветФона = Новый Цвет(213,213,213);
			КонецЕсли;
			// <<<  Выделение фона  <<<
			
			//Асеев 10.01.2022 (по письму Маркировка Заказа с Виной ТК)>>>
			Если Рез.Контроль Тогда
				ТабличныйДокумент.Область(ОбластьОформленияСтроки.Верх, 3, ОбластьОформленияСтроки.Верх, 3).ЦветФона = Новый Цвет(213,213,213);
			КонецЕсли;
			//Асеев 10.01.2022 (по письму Маркировка Заказа с Виной ТК)<<<
			
			НуженТекст = Истина;
			//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)>>>
			//ВысотаОбластей = ВысотаОбластей + 3;
			ВысотаОбластей = ВысотаОбластей + 4;
			//Асеев 23.10.2020 (по письму Re: Динамический расчет доставки)<<<
					
			Если НПП = ВсегоСтрок Тогда
				ТабличныйДокумент.Вывести(ОбластьТекст);
				НуженТекст = Ложь;
				ВысотаОбластей = ВысотаОбластей + 5;
			КонецЕсли;
			
			Если ВысотаОбластей > 34 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				НуженТекст = Ложь;
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
				ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
				ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
				ТабличныйДокумент.Вывести(ОбластьКолонтитул);		
				
				ВысотаОбластей = 2;
			КонецЕсли;
			
			НПП = НПП + 1;
			
		ИначеЕсли Рез.ТипЗаказа = "З" Тогда // --- забор
			
			// МАС - 26.12.2017 - №2148 --->> 
			Попытка			 
				ОбъемЗ = Рез.ОбъемЗабора;		
				Если ОбъемЗ = 0 Тогда		
					ОбъемныйБрэйк = "-";
					ОбъемЗ = "";
				Иначе	
					ОбъемныйБрэйк = ПолучитьБрейкСогласноОбъемуПартнера(Рез.Заказ, ОбъемЗ);		 
				КонецЕсли;	 
			Исключение		 
			КонецПопытки;
			ОбластьЗабор.Параметры.Вес          	= "" + ОбъемЗ + Символы.ПС + ОбъемныйБрэйк;
			ОбластьЗабор.Параметры.ПараметрыОплаты  = "" + ОбъемЗ;
			ОбластьЗабор.Параметры.ТипОплаты        = "" + ОбъемныйБрэйк;
			// <<--- МАС 
			
		    ОбластьЗабор.Параметры.НПП          	= НПП;
			ОбластьЗабор.Параметры.ТипЗаказа    	= Рез.ТипЗаказа;
			ОбластьЗабор.Параметры.НомерЗаказа  	= Рез.Номер;
			ОбластьЗабор.Параметры.ВнешнийНомер 	= Рез.НомерВнешнегоЗаказа;
			ОбластьЗабор.Параметры.КолМест      	= Рез.КоличествоМест;
			ОбластьЗабор.Параметры.Сумма       	    = "-";
			//ОбластьЗабор.Параметры.ФСумма           = "-";
			ОбластьЗабор.Параметры.Контакты	 	    = "" + Рез.Грузополучатель + ", " + Рез.Телефон;
			ОбластьЗабор.Параметры.Адрес			= Рез.АдресДоставки;
			//
			
			ТелефонМагазина = Рез.Партнер.ТелефонИнтернетМагазина;
			Если Рез.Партнер.Код = "Shop_248 " ИЛИ Рез.Партнер.Код = "Shop_601 " ИЛИ Рез.Партнер.Код = "Shop_752 " Тогда
				ТелефонМагазина = "8-495-974-35-64";
			ИначеЕсли Рез.Партнер.Код = "Shop_438 " Тогда	
			    ТелефонМагазина = "8-499-643-33-64";
			КонецЕсли;
			
			ОбластьЗабор.Параметры.ПартнерТелефон  = "" + ?((Рез.Партнер.Код = "Shop_248 " ИЛИ Рез.Партнер.Код = "Shop_601 " ИЛИ Рез.Партнер.Код = "Shop_752 "), "YD", Рез.Партнер) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.Партнер), ТелефонМагазина, "");
			ОбластьЗабор.Параметры.Интервал        = "" + Рез.ИнтервалС + " - " + Рез.ИнтервалПо;
			//ОбластьЗабор.Параметры.ТипОплаты       = "";
			
			//ОбластьЗабор.Параметры.ПараметрыОплаты = "";
			
			// проверка влазит ли на лист		
			
			Если ВысотаОбластей + 10 > 34 Тогда
				ТабличныйДокумент.Вывести(ОбластьТекст);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				НуженТекст = Ложь;
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
				ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
				ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
				ТабличныйДокумент.Вывести(ОбластьКолонтитул);		
								
				ТабличныйДокумент.Вывести(ОбластьСтрокаЗаголовок);
				ВысотаОбластей = 2;
			КонецЕсли;

						
			
		    ТабличныйДокумент.Вывести(ОбластьЗабор);
			НуженТекст = Истина;
			ВысотаОбластей = ВысотаОбластей + 3;
			
			
			Если НПП = ВсегоСтрок Тогда
				ТабличныйДокумент.Вывести(ОбластьТекст);
				НуженТекст = Ложь;
				ВысотаОбластей = ВысотаОбластей + 5;
			КонецЕсли;
			
			Если ВысотаОбластей > 34 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				НуженТекст = Ложь;
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
				ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
				ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
				
				ТабличныйДокумент.Вывести(ОбластьКолонтитул);		
				ВысотаОбластей = 2;
			КонецЕсли;
			
			
			НПП = НПП + 1;
		КонецЕсли;	
				
		НомерСтроки = НомерСтроки + 1;
			
	КонецЦикла;
	
	
	// подвал
	
	
	// проверка влазит ли на лист	
	//ВысотаОбластей = 2;
	
	Если НуженТекст Тогда	
		ТабличныйДокумент.Вывести(ОбластьТекст);	
		ВысотаОбластей = ВысотаОбластей + 5;
	КонецЕсли;	
	
	Если ВысотаОбластей + 10 > 34 Тогда		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		НомерСтраницы = НомерСтраницы + 1;
		ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
		ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
		ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
		ТабличныйДокумент.Вывести(ОбластьКолонтитул);		
		
		ВысотаОбластей = 1;
	КонецЕсли;
	
	ОбластьПодвал.Параметры.ИтогоНаличные = СуммаНаличные;
	ОбластьПодвал.Параметры.ИтогоТерминал = СуммаТерминал;
	
	ОбластьПодвал.Параметры.НомерМаршрута = НомерМаршрута;
	ОбластьПодвал.Параметры.МаркаАвто = МаркаАвто;
	ОбластьПодвал.Параметры.ГосНомер = ГосНомер;
	//Геннадий 03.07.2020 ->
	//ОбластьПодвал.Параметры.ДатаРейса = Формат(РейсСсылка.Дата, "ДЛФ=DD");
	ОбластьПодвал.Параметры.ДатаРейса = Формат(РейсСсылка.ДатаРейса, "ДЛФ=DD");
	//Геннадий 03.07.2020 <-
	//ОбластьПодвал.Параметры.КолКредитныхДоговоров = КолКредитныхДоговоров;
	//CeHbKA #06.04.2021
	ОбластьПодвал.Параметры.ПодписаниеСопроводительныхДокументов = ПодписаниеСопроводительныхДокументов;
	//CeHbKA #06.04.2021
	ОбластьПодвал.Параметры.КолБезнальныхДокументов = КолБезнальныхДокументов;
	
	//+++ БАО 25.05.2017 №900
	ОбластьПодвал.Параметры.КолЛореальВ2В = КолЛореальВ2В;	
	//--- БАО 25.05.2017 №900

	//Попытка
	//начал сбоить QR код 08.06.2023
		//СтрокаКода = ХэшФункцииСервер.Хэш(РезРейс.НомерРейсаКодАвто);
		//ОбластьПодвал.Рисунки.НадписьQRКод.Текст = СтрокаКода;
		//КартинкаQRКода = Новый Картинка(РаботаСШтрихкодированиемСервер.ПолучитьДвоичныеДанныеКартинкиQR(СтрокаКода));
		//ОбластьПодвал.Рисунки.QRКод.Картинка = КартинкаQRКода;
	//начал сбоить QR код 08.06.2023

	//Исключение
	//	Сообщить("Ошибка формирования QR-кода для отправки СМС экипажем!", СтатусСообщения.ОченьВажное);
	//КонецПопытки;
		
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
		
	
	ТабличныйДокумент.ВерхнийКолонтитул.Выводить = Ложь;
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	//ТабличныйДокумент.ВерхнийКолонтитул.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц	
	//ТабличныйДокумент.ВерхнийКолонтитул.ТекстСправа = "" + Формат(ТекущаяДата(), "ДФ='dd-MM-yyyy HH:mm'");
	//ТабличныйДокумент.ВерхнийКолонтитул.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции

&НаСервере
Функция ПечатьМаршрутногоЛистаСерверС2022(РейсСсылка, ТабличныйДокумент)
	
	Макет = Документы.Рейс.ПолучитьМакет("МаршрутныйЛист_Горизонтальный2022");
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
    ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрокаЗаголовок = Макет.ПолучитьОбласть("СтрокаЗаголовок");		
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаЗаказ");			
	ОбластьЗабор = Макет.ПолучитьОбласть("СтрокаЗабор");
	ОбластьТекст = Макет.ПолучитьОбласть("Текст2");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	//ОбластьАвтоНадЗаголовком = Макет.ПолучитьОбласть("АвтоНадЗаголовком");
	ОбластьКорректировкаВеса = Макет.ПолучитьОбласть("КорректировкаВеса");
	
	СтруктураПараметровОтмены = Новый Структура("Заказ");
	СтруктураПараметровОтмены.Вставить("Реквизит", Перечисления.РеквизитыЗаказа.СостояниеЗаказаОтменен);
	СтруктураПараметровОтмены.Вставить("Рейс", РейсСсылка);
	СтруктураПараметровОтмены.Вставить("СтароеЗначение", "2");
	СтруктураПараметровОтмены.Вставить("НовоеЗначение", "4");
	СтруктураПараметровОтмены.Вставить("СтатусТрансляцииИзменения", Перечисления.СтатусыТрансляцииИзмененийВЗаказах.ИзменениеЗафиксировано);
	
	ПараметрыДокументаОтмены = Новый Структура("Реализация");
	ПараметрыДокументаОтмены.Вставить("Статус", Справочники.новаРезультатМестнойДоставки.НеВыполнена);
	ПараметрыДокументаОтмены.Вставить("ПричинаНеВыполненияДоставки", Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда);
	ПараметрыДокументаОтмены.Вставить("ТипЗаказа", Перечисления.ТипыЗаказов.Доставка);
	ПараметрыДокументаОтмены.Вставить("ИнициаторСостояния", Перечисления.ИнициаторыСостояния.ИнтернетМагазин);
	ПараметрыДокументаОтмены.Вставить("СтатусОтИМ", Истина);
	ПараметрыДокументаОтмены.Вставить("Рейс", РейсСсылка);
	
	УжеПечатался = Ложь;
	
	// шапка
	ЗапросПоРейсу = Новый Запрос;
	ЗапросПоРейсу.Текст =
	"ВЫБРАТЬ
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель.Наименование КАК Водитель,
	|	ВЫБОР
	|		КОГДА ПривязкаМашинКРейсамСрезПоследних.Рейс.ВнешнийОператорМаршрутизации <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПривязкаМашинКРейсамСрезПоследних.Водитель.ИДВнешнегоОператораМаршрутизации
	|	КОНЕЦ КАК CourierId,
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор.Наименование КАК Экспедитор,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт.Код + ПривязкаМашинКРейсамСрезПоследних.Рейс.Номер КАК НомерРейсаКодАвто,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт.Марка.Наименование КАК МаркаАвто,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт.НомерГосударственнойРегистрации КАК ГосНомер,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	|	ЕСТЬNULL(ВЗ_КонтрольВремени.УжеПечатался, ЛОЖЬ) КАК УжеПечатался,
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК ВодительСсылка,
	|	НастройкиУчетаОбщиеСрезПоследних.ПричинаОтказаПереносаПриОтменеЗаказаПартнеромВРейсе КАК ПричинаОтказаПереносаПриОтменеЗаказаПартнеромВРейсе,
	|	ВЗ_ФиксацияМаршрутизации.Дата КАК ДатаФиксацииМаршрутизации
	|ИЗ
	|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ПривязкаМашинКРейсамСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаОбщие.СрезПоследних КАК НастройкиУчетаОбщиеСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА КАК УжеПечатался
	|		ИЗ
	|			РегистрСведений.КонтрольВремени КАК КонтрольВремени
	|		ГДЕ
	|			КонтрольВремени.Рейс = &Рейс
	|			И КонтрольВремени.Событие = ЗНАЧЕНИЕ(Справочник.СобытияКонтроляВремени.РаспечаткаМаршрутногоЛиста)
	|			И КонтрольВремени.ОкончаниеСобытия) КАК ВЗ_КонтрольВремени
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ФиксацияМаршрутизацииРейса.Дата КАК Дата
	|		ИЗ
	|			Документ.ФиксацияМаршрутизацииРейса КАК ФиксацияМаршрутизацииРейса
	|		ГДЕ
	|			ФиксацияМаршрутизацииРейса.Рейс = &Рейс
	|			И НЕ ФиксацияМаршрутизацииРейса.ПометкаУдаления
	|		
	|		УПОРЯДОЧИТЬ ПО
	|			Дата УБЫВ,
	|			ФиксацияМаршрутизацииРейса.Ссылка УБЫВ) КАК ВЗ_ФиксацияМаршрутизации
	|		ПО (ИСТИНА)";
	ЗапросПоРейсу.УстановитьПараметр("Рейс", РейсСсылка);	
	РезРейс = ЗапросПоРейсу.Выполнить().Выбрать();
	Если РезРейс.Следующий() Тогда		
		МаркаАвто = РезРейс.МаркаАвто;
		ГосНомер  = РезРейс.ГосНомер;
		ДанныеРейса = "Водитель: " + РезРейс.Водитель + Символы.ПС 
			+ ?(ЗначениеЗаполнено(РезРейс.Экспедитор), "Экспедитор: " + РезРейс.Экспедитор + Символы.ПС, "")
			+ ?(ЗначениеЗаполнено(РезРейс.CourierId), "CourierId: " + РезРейс.CourierId, "");
		ОбластьШапка.Параметры.ДанныеРейса = ДанныеРейса;
		
		СтруктураПараметровОтмены.Вставить("Транспорт", РезРейс.Транспорт);
		
		УжеПечатался = РезРейс.УжеПечатался;
		
		ПараметрыДокументаОтмены.Вставить("Водитель", РезРейс.ВодительСсылка);
		ПараметрыДокументаОтмены.Вставить("ПричинаОтказаПереноса", РезРейс.ПричинаОтказаПереносаПриОтменеЗаказаПартнеромВРейсе);
		ПараметрыДокументаОтмены.Вставить("Транспорт", РезРейс.Транспорт);
		
		ПризнакМаршрутизации = ?(РезРейс.ДатаФиксацииМаршрутизации = Null, "МАРШРУТИЗАЦИЯ НЕ ВЫПОЛНЯЛАСЬ!", "Выполнена маршрутизация в " + Формат(РезРейс.ДатаФиксацииМаршрутизации, "ДФ=HH:mm:ss"));	
		ОбластьШапка.Параметры.ПризнакМаршрутизации = ПризнакМаршрутизации;
		Сообщить(ПризнакМаршрутизации);
	КонецЕсли;
	
	НомерМаршрута = РейсСсылка.НомерПалетты;
	
	КолЗаказов = 0;
	КолЗаборов = 0;
	КолКредитныхДоговоров = 0;
	КолБезнальныхДокументов	= 0;
	
	ПодписаниеСопроводительныхДокументов = 0;
	
	КолЛореальВ2В = 0;
	
	ЛореальВ2В = Справочники.Контрагенты.НайтиПоКоду("Shop_680");
		
	DirectCredit = Справочники.Контрагенты.НайтиПоКоду("Shop_234");
	DirectCredit_Папка = Справочники.Контрагенты.НайтиПоКоду("Shop_101");
	Poscredit = Справочники.Контрагенты.НайтиПоКоду("Shop_391");
	
	
	ЗапросЗаказы = Новый Запрос;
	ЗапросЗаказы.Текст =
	"ВЫБРАТЬ
	|	РейсЗаказы.Заказ.ТипОплаты КАК ТипОплаты,
	|	ВЫБОР
	|		КОГДА РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ""Доставка""
	|		ИНАЧЕ ""Забор""
	|	КОНЕЦ КАК ТипЗаказа,
	|	ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.ЗаборТовара).Контрагент КАК Контрагент,
	|	ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг).ВладелецТовара КАК ВладелецТовара,
	|	ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг).ВладелецТовара.Родитель КАК ВладелецТовараРодитель
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|ГДЕ
	|	РейсЗаказы.Ссылка = &Ссылка
	|	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ";
	ЗапросЗаказы.УстановитьПараметр("Ссылка", РейсСсылка);
	РезЗаказы = ЗапросЗаказы.Выполнить().Выбрать();
	
	Пока РезЗаказы.Следующий() Цикл	
		Если РезЗаказы.ТипЗаказа = "Доставка" Тогда				
			КолЗаказов = КолЗаказов + 1;
			
			Если РезЗаказы.ТипОплаты = 2 ИЛИ РезЗаказы.ВладелецТовара = DirectCredit ИЛИ РезЗаказы.ВладелецТовара = Poscredit ИЛИ РезЗаказы.ВладелецТовараРодитель = DirectCredit_Папка Тогда			
				КолКредитныхДоговоров = КолКредитныхДоговоров + 1;			
			КонецЕсли;
			
			Если РезЗаказы.ТипОплаты = 4 И Не (РезЗаказы.ВладелецТовара = DirectCredit ИЛИ РезЗаказы.ВладелецТовара = Poscredit ИЛИ РезЗаказы.ВладелецТовараРодитель = DirectCredit_Папка) Тогда 			
				КолБезнальныхДокументов = КолБезнальныхДокументов + 1;			
			КонецЕсли;
			
			Если РезЗаказы.ВладелецТовара = ЛореальВ2В Тогда
				КолЛореальВ2В = КолЛореальВ2В + 1;	
			КонецЕсли;	

			
		ИначеЕсли РезЗаказы.ТипЗаказа = "Забор" Тогда			
			КолЗаборов = КолЗаборов + 1;
			
			Если РезЗаказы.Контрагент = ЛореальВ2В Тогда
				КолЛореальВ2В = КолЛореальВ2В + 1;	
			КонецЕсли;	

		КонецЕсли;

		
	КонецЦикла;
	
	ОбластьШапка.Параметры.НомерМаршрута = НомерМаршрута;
	ОбластьШапка.Параметры.КолЗаказов = КолЗаказов;
	ОбластьШапка.Параметры.КолЗаборов = КолЗаборов;	
	ОбластьШапка.Параметры.Штрихкод = lem.глСформироватьБарКодEAN13(ОбщегоНазначения.СформироватьШтрихкодРейса(РейсСсылка));
	
	
	
	// строки заказов
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РейсЗаказы.НомерПоездки КАК НомерПоездки,
	|	""З"" КАК ТипЗаказа,
	|	ЗаборТовара.Номер КАК Номер,
	|	ЗаборТовара.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
	|	ЗаборТовара.Телефон КАК Телефон,
	|	ЗаборТовара.АдресДоставки КАК АдресДоставки,
	|	ЗаборТовара.ВремяДоставкиС КАК ИнтервалС,
	|	ЗаборТовара.ВремяДоставкиПо КАК ИнтервалПо,
	|	ЗаборТовара.ТипОплаты КАК ТипОплаты,
	|	ЗаборТовара.СуммаДокумента КАК СуммаДокумента,
	|	ЗаборТовара.ВесЗабора КАК Вес,
	|	ВЫБОР
	|		КОГДА ЗаборТовара.Контрагент.Родитель.ОсновнойМагазин = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗаборТовара.Контрагент
	|		ИНАЧЕ ЗаборТовара.Контрагент.Родитель.ОсновнойМагазин
	|	КОНЕЦ КАК Партнер,
	|	NULL КАК КоличествоМест,
	|	ЗаборТовара.Грузополучатель КАК Грузополучатель,
	|	NULL КАК ИнтервалДоставкиСтрокой,
	|	ЗаборТовара.Ссылка КАК Заказ,
	|	РейсЗаказы.НомерСтроки КАК НомерСтроки,
	|	ЗаборТовара.ОбъемЗабора КАК ОбъемЗабора,
	|	"""" КАК ДополнениеКАдресуДоставки,
	|	"""" КАК КомментарийОтправителя,
	|	ЗаборТовара.СтатусИнтернетМагазина КАК СтатусИнтернетМагазина
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	|		ПО (РейсЗаказы.Ссылка = &Ссылка)
	|			И (НЕ РейсЗаказы.УдаленИзРейса)
	|			И РейсЗаказы.Заказ = ЗаборТовара.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РейсЗаказы.НомерПоездки,
	|	""Д"",
	|	РеализацияТоваровУслуг.Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
	|	РеализацияТоваровУслуг.Телефон,
	|	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Наименование,
	|	новаМестнаяДоставка.ВремяПрибытияС,
	|	новаМестнаяДоставка.ВремяПрибытияПо,
	|	РеализацияТоваровУслуг.ТипОплаты,
	|	РеализацияТоваровУслуг.СуммаДокумента,
	|	ВЫБОР
	|		КОГДА НЕ Накладная003Заказы.Вес ЕСТЬ NULL
	|				И Накладная003Заказы.Вес > 0
	|			ТОГДА Накладная003Заказы.Вес
	|		ИНАЧЕ РеализацияТоваровУслуг.ОбщийВес
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.ВладелецТовара.Родитель.ОсновнойМагазин = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслуг.ВладелецТовара
	|		ИНАЧЕ РеализацияТоваровУслуг.ВладелецТовара.Родитель.ОсновнойМагазин
	|	КОНЕЦ,
	|	РеализацияТоваровУслуг.КоличествоМест,
	|	РеализацияТоваровУслуг.Грузополучатель,
	|	новаМестнаяДоставка.ИнтервалДоставкиСтрокой,
	|	РеализацияТоваровУслуг.Ссылка,
	|	РейсЗаказы.НомерСтроки,
	|	NULL,
	|	РеализацияТоваровУслуг.ДополнениеКАдресуДоставки,
	|	РеализацияТоваровУслуг.Комментарий,
	|	РеализацияТоваровУслуг.СтатусИнтернетМагазина
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|		ПО (РейсЗаказы.Ссылка = &Ссылка)
	|			И (НЕ РейсЗаказы.УдаленИзРейса)
	|			И РейсЗаказы.Заказ = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Накладная003.Заказы КАК Накладная003Заказы
	|		ПО РейсЗаказы.Заказ = Накладная003Заказы.Заказ
	|			И (Накладная003Заказы.Ссылка.Проведен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.НомерПоездки КАК НомерПоездки,
	|	ВТ.ТипЗаказа КАК ТипЗаказа,
	|	ВТ.Номер КАК Номер,
	|	ВТ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
	|	ВЫБОР
	|		КОГДА ВТ.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ДополнительныеПараметрыЗаказа.ПолучательЗаказа.Телефон
	|		ИНАЧЕ ВТ.Телефон
	|	КОНЕЦ КАК Телефон,
	|	ВТ.АдресДоставки КАК АдресДоставки,
	|	ЧАС(ВТ.ИнтервалС) КАК ИнтервалС,
	|	ЧАС(ВТ.ИнтервалПо) КАК ИнтервалПо,
	|	ВТ.ТипОплаты КАК ТипОплатыЧисло,
	|	ВЫБОР
	|		КОГДА ПараметрыКонтрагентовСрезПоследних.ПриёмИтогоСКлиента
	|			ТОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0)
	|		ИНАЧЕ ВТ.СуммаДокумента
	|	КОНЕЦ КАК СуммаДокумента2,
	|	ВТ.Вес КАК Вес,
	|	ВТ.Партнер.Наименование КАК НаименованиеПартнера,
	|	ВТ.Партнер.Код КАК КодПартнера,
	|	ВТ.КоличествоМест КАК КоличествоМест,
	|	ВЫБОР
	|		КОГДА ВТ.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ДополнительныеПараметрыЗаказа.ПолучательЗаказа.Наименование
	|		ИНАЧЕ ВТ.Грузополучатель.Наименование
	|	КОНЕЦ КАК Грузополучатель,
	|	ВТ.ИнтервалДоставкиСтрокой КАК ИнтервалДоставкиСтрокой,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ВТ.Заказ КАК Документ.РеализацияТоваровУслуг).ЗапретЧастичногоВыкупа, ЛОЖЬ) КАК ЗапретЧастичногоВыкупа,
	|	ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.ЗапретСменыОплаты, ЛОЖЬ) КАК ЗапретСменыОплаты,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.СОжиданием, ЛОЖЬ) КАК СОжиданием,
	|	ЕСТЬNULL(ВЗ_ФиксацияВеса.НашВес, 0) КАК НашВес,
	|	ЕСТЬNULL(ФиксацияМаршрутизацииРейсаЗаказы.ПорядокМаршрутизации, 100000 + ВТ.НомерСтроки) КАК НомерСтроки,
	|	ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП КАК КатегорияДляРасчетаЗП,
	|	ЕСТЬNULL(ВЗ_ВесРТУ.ВесПотоварный, 0) КАК ВесПотоварный,
	|	ВЫРАЗИТЬ(ВТ.Заказ КАК Документ.РеализацияТоваровУслуг).ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
	|	ВТ.Заказ КАК Заказ,
	|	ВЫБОР
	|		КОГДА ВТ.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ВТ.Заказ КАК Документ.РеализацияТоваровУслуг).УчитыватьИтогоКОплате
	|						ТОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0)
	|					ИНАЧЕ ВТ.СуммаДокумента
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДокумента,
	|	ВЫБОР
	|		КОГДА ВТ.Заказ ССЫЛКА Документ.ЗаборТовара
	|			ТОГДА ВЫРАЗИТЬ(ВТ.Заказ КАК Документ.ЗаборТовара).Контрагент
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ.Заказ КАК Документ.РеализацияТоваровУслуг).ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ЕСТЬNULL(ВЗ_Поездки.Поездки, 0) + 1 КАК Поездки,
	|	ВЗ_ВесРТУ.Сумма КАК СуммаПоТоварам,
	|	ВТ.ОбъемЗабора КАК ОбъемЗабора,
	|	ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП_Миго КАК КатегорияДляРасчетаЗП_Миго,
	|	ДополнительныеПараметрыЗаказа.ПодписаниеИВозвратСопрДокументов КАК ПодписаниеИВозвратСопрДокументов,
	|	ЕСТЬNULL(ВЗ_ТарифыДоставки.ОплатаДоставкиПриОтказе, ЛОЖЬ) КАК ОплатаДоставкиПриОтказе,
	|	ЕСТЬNULL(ВЗ_ТарифыДоставки.РасчетДоставки, ЛОЖЬ) КАК РасчетДоставки,
	|	ВТ.ДополнениеКАдресуДоставки КАК ДополнениеКАдресуДоставки,
	|	ВТ.КомментарийОтправителя КАК КомментарийОтправителя,
	|	НЕ ВЗ_Контроль.ЗаказКонтроль ЕСТЬ NULL КАК Контроль,
	|	ЕСТЬNULL(ФиксацияМаршрутизацииРейсаЗаказы.ВремяПрибытия, ДАТАВРЕМЯ(1, 1, 1)) КАК ОжидаемыйИнтервал,
	|	ВТ.Партнер.ТелефонИнтернетМагазина КАК ТелефонМагазина,
	|	ВЫБОР
	|		КОГДА ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа В (ЗНАЧЕНИЕ(Перечисление.МетодыОплатыПодъёмаЗаказа.ОплачиваетПартнер), ЗНАЧЕНИЕ(Перечисление.МетодыОплатыПодъёмаЗаказа.ОплачиваетКлиент))
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ДополнительныеПараметрыЗаказа.МетодОплатыПодъемаЗаказа)
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ОплатаПодъема,
	|	ЕСТЬNULL(ВозвратТоваровОтПокупателя.СуммаДокумента, 0) КАК СуммаВозврат,
	|	ВТ.СтатусИнтернетМагазина = 4 КАК Отмена,
	|	ЕСТЬNULL(СостоянияЗаказов.ПричинаОтказа.Наименование, СостоянияЗаказовРасширенный.ПричинаОтказа.Наименование) КАК ПричинаОтказаНаименование
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних КАК ПараметрыКонтрагентовСрезПоследних
	|		ПО ВТ.Партнер = ПараметрыКонтрагентовСрезПоследних.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО ВТ.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО ВТ.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(ФиксацияВесаСрезПоследних.Вес) КАК НашВес,
	|			ФиксацияВесаСрезПоследних.Заказ КАК Заказ
	|		ИЗ
	|			РегистрСведений.ФиксацияВеса.СрезПоследних(
	|					,
	|					Заказ В
	|						(ВЫБРАТЬ
	|							ВТ.Заказ
	|						ИЗ
	|							ВТ КАК ВТ)) КАК ФиксацияВесаСрезПоследних
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ФиксацияВесаСрезПоследних.Заказ) КАК ВЗ_ФиксацияВеса
	|		ПО ВТ.Заказ = ВЗ_ФиксацияВеса.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО ВТ.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(РеализацияТоваровУслугТовары.Вес * РеализацияТоваровУслугТовары.Количество) КАК ВесПотоварный,
	|			РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	|			СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма
	|		ИЗ
	|			ВТ КАК ВТ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|				ПО ВТ.Заказ = РеализацияТоваровУслугТовары.Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РеализацияТоваровУслугТовары.Ссылка) КАК ВЗ_ВесРТУ
	|		ПО ВТ.Заказ = ВЗ_ВесРТУ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КОЛИЧЕСТВО(ИСТИНА) КАК Поездки,
	|			СостоянияЗаказов.Заказ КАК Заказ
	|		ИЗ
	|			ВТ КАК ВТ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	|				ПО ВТ.Заказ = СостоянияЗаказов.Заказ
	|					И (СостоянияЗаказов.Регистратор ССЫЛКА Документ.новаОтчетВодителя)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СостоянияЗаказов.Заказ) КАК ВЗ_Поездки
	|		ПО ВТ.Заказ = ВЗ_Поездки.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			СостоянияЗаказов.Заказ КАК ЗаказКонтроль
	|		ИЗ
	|			РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ КАК ВТ
	|				ПО СостоянияЗаказов.Заказ = ВТ.Заказ
	|					И (СостоянияЗаказов.ПричинаОтказа.СторонаПретензии = ЗНАЧЕНИЕ(Перечисление.СторонаПретензий.Компания))) КАК ВЗ_Контроль
	|		ПО ВТ.Заказ = ВЗ_Контроль.ЗаказКонтроль
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФиксацияМаршрутизацииРейса.Заказы КАК ФиксацияМаршрутизацииРейсаЗаказы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|				ФиксацияМаршрутизацииРейса.Ссылка КАК Фиксация
	|			ИЗ
	|				Документ.ФиксацияМаршрутизацииРейса КАК ФиксацияМаршрутизацииРейса
	|			ГДЕ
	|				ФиксацияМаршрутизацииРейса.Рейс = &Ссылка
	|				И НЕ ФиксацияМаршрутизацииРейса.ПометкаУдаления
	|			
	|			УПОРЯДОЧИТЬ ПО
	|				ФиксацияМаршрутизацииРейса.Дата УБЫВ,
	|				Фиксация УБЫВ) КАК ВЗ_ПоследняяФиксацияМаршрутизации
	|			ПО ФиксацияМаршрутизацииРейсаЗаказы.Ссылка = ВЗ_ПоследняяФиксацияМаршрутизации.Фиксация
	|		ПО ВТ.Заказ = ФиксацияМаршрутизацииРейсаЗаказы.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДополнительныеПараметрыЗаказа.Заказ КАК Заказ,
	|			МАКСИМУМ(ЕСТЬNULL(ТарифыРасчетаСтоимостиДоставки.ТребуетсяОплатаСтоимостиДоставкиПриОтказеОтВыкупа, ЛОЖЬ)) КАК ОплатаДоставкиПриОтказе,
	|			МАКСИМУМ(НЕ ТарифыРасчетаСтоимостиДоставкиБрейкиПоСтоимостиВыкупа.Ссылка ЕСТЬ NULL) КАК РасчетДоставки
	|		ИЗ
	|			Документ.Рейс.Заказы КАК РейсЗаказы
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТарифыРасчетаСтоимостиДоставки КАК ТарифыРасчетаСтоимостиДоставки
	|						ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТарифыРасчетаСтоимостиДоставки.БрейкиПоСтоимостиВыкупа КАК ТарифыРасчетаСтоимостиДоставкиБрейкиПоСтоимостиВыкупа
	|						ПО ТарифыРасчетаСтоимостиДоставки.Ссылка = ТарифыРасчетаСтоимостиДоставкиБрейкиПоСтоимостиВыкупа.Ссылка
	|							И (ТарифыРасчетаСтоимостиДоставкиБрейкиПоСтоимостиВыкупа.НомерСтроки = 1)
	|					ПО ДополнительныеПараметрыЗаказа.ТарифРасчетаСтоимостиДоставки = ТарифыРасчетаСтоимостиДоставки.КодАдминки
	|				ПО (РейсЗаказы.Ссылка = &Ссылка)
	|					И (НЕ РейсЗаказы.УдаленИзРейса)
	|					И РейсЗаказы.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДополнительныеПараметрыЗаказа.Заказ) КАК ВЗ_ТарифыДоставки
	|		ПО ВТ.Заказ = ВЗ_ТарифыДоставки.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СостоянияЗаказов.Заказ КАК Заказ,
	|			МАКСИМУМ(СостоянияЗаказов.Период) КАК Период
	|		ИЗ
	|			ВТ КАК ВТ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	|				ПО ВТ.Заказ = СостоянияЗаказов.Заказ
	|					И (СостоянияЗаказов.ПричинаОтказа <> ЗНАЧЕНИЕ(Справочник.ПричиныОтказаПереноса.ПустаяСсылка))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СостоянияЗаказов.Заказ
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СостоянияЗаказовРасширенный.Заказ,
	|			МАКСИМУМ(СостоянияЗаказовРасширенный.Период)
	|		ИЗ
	|			ВТ КАК ВТ
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказовРасширенный КАК СостоянияЗаказовРасширенный
	|				ПО ВТ.Заказ = СостоянияЗаказовРасширенный.Заказ
	|					И (СостоянияЗаказовРасширенный.ПричинаОтказа <> ЗНАЧЕНИЕ(Справочник.ПричиныОтказаПереноса.ПустаяСсылка))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СостоянияЗаказовРасширенный.Заказ) КАК ВЗ_ПериодыСостояний
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	|			ПО ВЗ_ПериодыСостояний.Период = СостоянияЗаказов.Период
	|				И ВЗ_ПериодыСостояний.Заказ = СостоянияЗаказов.Заказ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказовРасширенный КАК СостоянияЗаказовРасширенный
	|			ПО ВЗ_ПериодыСостояний.Период = СостоянияЗаказовРасширенный.Период
	|				И ВЗ_ПериодыСостояний.Заказ = СостоянияЗаказовРасширенный.Заказ
	|		ПО ВТ.Заказ = ВЗ_ПериодыСостояний.Заказ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияЗаказов.Заказ КАК Заказ,
	|	СостоянияЗаказов.Период КАК Период,
	|	ВЫБОР СостоянияЗаказов.ПричинаОтказа.СторонаПретензии
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СторонаПретензий.Компания)
	|			ТОГДА 1
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СторонаПретензий.Партнер)
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Вина
	|ИЗ
	|	ВТ КАК ВТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	|		ПО ВТ.Заказ = СостоянияЗаказов.Заказ
	|			И (СостоянияЗаказов.Регистратор ССЫЛКА Документ.новаОтчетВодителя)
	|			И (СостоянияЗаказов.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена))";
	Запрос.УстановитьПараметр("Ссылка", РейсСсылка);
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Рез = РезультатПакета[1].Выбрать();
	ТаблицаВины = РезультатПакета[2].Выгрузить();
	
	СтруктураЗаказ = Новый Структура("Заказ");
	
	ПустаяДата = Дата('00010101');
	

	НПП = 1;
	
	Сейчас = ТекущаяДата();
	СтруктураПараметровОтмены.Вставить("Период", Сейчас);
	ПараметрыДокументаОтмены.Вставить("Дата", Сейчас);
	ПараметрыДокументаОтмены.Вставить("ДатаДоставки", Сейчас);
	ПараметрыДокументаОтмены.Вставить("ДатаВыгрузки", Сейчас);
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	ТабличныйДокумент.Вывести(ОбластьСтрокаЗаголовок);
	ВысотаОбластей = 4;
	
	СуммаНаличные = 0;
	СуммаТерминал = 0;
	
	ВысотаОбластейМЛ = 28.5;
	
	ЦветЗакраски = Новый Цвет(213, 213, 213);
	
	Пока Рез.Следующий() Цикл
		
		КодПартнера = СокрЛП(Рез.КодПартнера);
		
		Если Рез.ТипЗаказа = "Д" Тогда    // --- доставка
			
			КрасимЗапреты = Ложь;
			
			ОбластьСтрока.Параметры.НПП          	= НПП;
			ОбластьСтрока.Параметры.НомерЗаказа  	= Рез.Номер;
			ОбластьСтрока.Параметры.ВнешнийНомер 	= Рез.НомерВнешнегоЗаказа;
			ОбластьСтрока.Параметры.КолМест      	= Рез.КоличествоМест;
			
			СуммаВозврат = Рез.СуммаВозврат;
		
			СуммаТоваров = Рез.СуммаПоТоварам;
			ИтоговаяСумма = Рез.СуммаДокумента - Рез.СуммаВозврат;
			
			
			
			//ОбластьСтрока.Параметры.Сумма        	= ?(Рез.СуммаДокумента <> 0, Рез.СуммаДокумента, СуммаВозврат);
			Если Рез.ТипОплаты = Справочники.ТипыОплат.ОплаченоВМагазине ИЛИ Рез.ТипОплаты = Справочники.ТипыОплат.БезРасчетов Тогда // Задача № 2901			
				ОбластьСтрока.Параметры.Сумма        	= 0;				
			Иначе			
				ОбластьСтрока.Параметры.Сумма        	= ?(СуммаВозврат <> 0, ИтоговаяСумма, Рез.СуммаДокумента);				
			КонецЕсли;
			
			ОбластьСтрока.Параметры.ФСумма          = "";
			ОбластьСтрока.Параметры.Контакты	 	= "" + Рез.Грузополучатель + ", " + Рез.Телефон;	
			
			Если ЗначениеЗаполнено(Рез.ДополнениеКАдресуДоставки) Тогда
				ОбластьСтрока.Параметры.Адрес = "" + Рез.АдресДоставки + Символы.ПС + ПолучитьСтрокуБезЛишнихРазделителей(Рез.ДополнениеКАдресуДоставки);
			Иначе
				ОбластьСтрока.Параметры.Адрес = Рез.АдресДоставки;
			КонецЕсли;
			Если ЗначениеЗаполнено(Рез.КомментарийОтправителя) Тогда
				ОбластьСтрока.Параметры.КомментарийОтправителя = ПолучитьСтрокуБезЛишнихРазделителей(Рез.КомментарийОтправителя);
			Иначе
				ОбластьСтрока.Параметры.КомментарийОтправителя = "";
			КонецЕсли;
			ОбластьСтрока.Параметры.Вес1 = "" + Рез.Вес + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП_Миго), Рез.КатегорияДляРасчетаЗП_Миго, Рез.КатегорияДляРасчетаЗП);
			
			
			ТелефонМагазина = Рез.ТелефонМагазина;
			Если КодПартнера = "Shop_248" ИЛИ КодПартнера = "Shop_601" ИЛИ КодПартнера = "Shop_752" Тогда
				ТелефонМагазина = "8-495-974-35-64";
			ИначеЕсли КодПартнера = "Shop_438" Тогда	
			    ТелефонМагазина = "8-499-643-33-64";
			КонецЕсли;
			
			ОбластьСтрока.Параметры.ПартнерТелефон  = "" + ?((КодПартнера = "Shop_248" ИЛИ КодПартнера = "Shop_601"), "YD", Рез.НаименованиеПартнера) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.НаименованиеПартнера), ТелефонМагазина, "");
			ОбластьСтрока.Параметры.Интервал        = "" + Рез.ИнтервалС + " - " + Рез.ИнтервалПо;
			ОбластьСтрока.Параметры.ТипОплаты       = Рез.ТипОплаты;
			
			ОбластьСтрока.Параметры.ОжидаемыйИнтервал = ?(Рез.ОжидаемыйИнтервал = ПустаяДата, "-", Формат(Рез.ОжидаемыйИнтервал, "ДФ=HH:mm"));
			ОбластьСтрока.Параметры.ОплатаПодъема = Рез.ОплатаПодъема;
			
			ВинаСтрижа = Ложь;
			
			КоличествоПоездок = Рез.Поездки - 1;
			Если КоличествоПоездок Тогда
				СтруктураЗаказ.Заказ = Рез.Заказ;
				ТаблицаВиныЗаказа = ТаблицаВины.Скопировать(СтруктураЗаказ, "Период,Вина");
				ТаблицаВиныЗаказа.Сортировать("Период Убыв");
				НомерП = 0;
				Для Каждого СтрокаВины Из ТаблицаВиныЗаказа Цикл
					НомерП = НомерП + 1;
					Если НомерП > 3 Тогда
						Прервать;
					КонецЕсли;
					Вина = СтрокаВины.Вина;
					Если Вина = 1 Тогда
						Вина = Строка(КоличествоПоездок) + "-Вина Ст";
						ВинаСтрижа = Истина;
					ИначеЕсли Вина = 2 Тогда
						Вина = Строка(КоличествоПоездок) + "-Вина Кл";
					Иначе
						Вина = Строка(КоличествоПоездок) + "-Вина ?";
					КонецЕсли;
					ОбластьСтрока.Параметры["П" + НомерП] = Вина;
					КоличествоПоездок = КоличествоПоездок - 1;
				КонецЦикла;
				Пока НомерП < 3 Цикл
					НомерП = НомерП + 1;
					ОбластьСтрока.Параметры["П" + НомерП] = "";
				КонецЦикла;
			Иначе
				ОбластьСтрока.Параметры.П1 = "";
				ОбластьСтрока.Параметры.П2 = "";
				ОбластьСтрока.Параметры.П3 = "";
			КонецЕсли;
			
			Если ВинаСтрижа Тогда
				ОбластьСтрока.Параметры.Поездки = Строка(Рез.Поездки) + " (!!!)";
			Иначе
				ОбластьСтрока.Параметры.Поездки = Рез.Поездки;
			КонецЕсли;
			
			Если Рез.ТипОплатыЧисло = 1 Тогда				
				СуммаНаличные = СуммаНаличные + Рез.СуммаДокумента;		
			ИначеЕсли Рез.ТипОплатыЧисло = 5 Тогда		
				СуммаТерминал = СуммаТерминал + Рез.СуммаДокумента;			
			КонецЕсли;
			
			
			Если Рез.ТипОплатыЧисло = 2 Тогда
				СменаОплаты = "";	
				ОбластьСтрока.Параметры.Сумма  = Рез.СуммаДокумента - Рез.ПредоплатаПоКредиту;
			ИначеЕсли Рез.ТипОплатыЧисло = 4 Тогда
				СменаОплаты = "";	
				ОбластьСтрока.Параметры.Сумма  = "-";
			ИначеЕсли Рез.ТипОплатыЧисло = 7 Тогда	
				СменаОплаты = "";
				ОбластьСтрока.Параметры.ФСумма = "ОПЛАЧЕНО";
				ОбластьСтрока.Параметры.Сумма  = "-";
			Иначе
				СменаОплаты = ?(Рез.ЗапретСменыОплаты = Истина, "Смена оплаты запрещена", "");
				Если Рез.ЗапретСменыОплаты Тогда			
					КрасимЗапреты = Истина;				
				КонецЕсли;	
			КонецЕсли;
			
			Если Рез.ТипОплатыЧисло = 2 Тогда		
				ЧастичныйВыкуп = "";			
			Иначе	
				Если КодПартнера = "Shop_602" Тогда // Бетховен	
					ЧастичныйВыкуп = ?(Рез.Заказ.ЗапретЧастичногоВыкупа = Истина, "Частичный выкуп запрещен", "");
					Если Рез.Заказ.ЗапретЧастичногоВыкупа Тогда		
						КрасимЗапреты = Истина;					
					КонецЕсли;
				Иначе
					ЧастичныйВыкуп = ?(Рез.ЗапретЧастичногоВыкупа = Истина, "Частичный выкуп запрещен", "");
					Если Рез.ЗапретЧастичногоВыкупа Тогда		
						КрасимЗапреты = Истина;					
					КонецЕсли;
				КонецЕсли;							
			КонецЕсли;
			
			ПараметрыОплаты = ЧастичныйВыкуп + ?(СменаОплаты = "", "", ?(ЧастичныйВыкуп = "", "", Символы.ПС) + СменаОплаты);
			Если Рез.РасчетДоставки Тогда
                ПараметрыОплаты = ?(ПараметрыОплаты <> "", ПараметрыОплаты + Символы.ПС + "Условие для бесплатной доставки", "Условие для бесплатной доставки");
				КрасимЗапреты = Истина;
			КонецЕсли;
			Если Рез.ОплатаДоставкиПриОтказе Тогда
				ПараметрыОплаты = ?(ПараметрыОплаты <> "", ПараметрыОплаты + Символы.ПС + "Оплата доставки при отказе", "Оплата доставки при отказе");
				КрасимЗапреты = Истина;
			КонецЕсли;
			Если КодПартнера = "Shop_248" ИЛИ КодПартнера = "Shop_601" ИЛИ КодПартнера = "Shop_752" Тогда
				Если Не Рез.СОжиданием Тогда
					ПараметрыОплаты = ?(ПараметрыОплаты <> "", ПараметрыОплаты + Символы.ПС + "Без вскрытия", "Без вскрытия");
					КрасимЗапреты = Истина;
				КонецЕсли;
			КонецЕсли;
			ОбластьСтрока.Параметры.ПараметрыОплаты = ПараметрыОплаты;

			Если Рез.ПодписаниеИВозвратСопрДокументов = Истина Тогда
				ОбластьСтрока.Параметры.ПараметрыОплаты = ОбластьСтрока.Параметры.ПараметрыОплаты + "" + Символы.ПС + "Подписание сопроводительного документа";
				ПодписаниеСопроводительныхДокументов = ПодписаниеСопроводительныхДокументов + 1;
			КонецЕсли; 
			
			Если ВысотаОбластей + 4 > ВысотаОбластейМЛ Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьСтрокаЗаголовок);
				ВысотаОбластей = 0.5;
			КонецЕсли;
			
			ОбластьСтрока.Параметры.КомментарийКурьера = ?(Рез.Отмена, Рез.ПричинаОтказаНаименование, "");
			
			// >>>  Выделение фона  >>>		
			ОбластьОформленияСтроки = ТабличныйДокумент.Вывести(ОбластьСтрока);
			Если Рез.Отмена Тогда
				ОбластьОформленияСтроки.ЦветФона = ЦветЗакраски;
				
				Если УжеПечатался Тогда
				Иначе
					СтруктураПараметровОтмены.Заказ = Рез.Заказ;
					ИнформированиеЭкипажейОбИзмененияхВЗаказахСервер.ЗаписатьИнформированиеЭкипажейОбИзмененияхВЗаказах(СтруктураПараметровОтмены);
					
					ПараметрыДокументаОтмены.Реализация = Рез.Заказ;
					РаботаСМобильнымПриложениемЭкипажейСервер.ЭмуляцияДанныеЗаказаВодителя(ПараметрыДокументаОтмены);
				КонецЕсли;
			Иначе
				Если ВинаСтрижа Тогда
					ТабличныйДокумент.Область(ОбластьОформленияСтроки.Верх, 9, ОбластьОформленияСтроки.Низ, 9).ЦветФона = ЦветЗакраски;
				КонецЕсли;
				Если КрасимЗапреты Тогда
					ТабличныйДокумент.Область(ОбластьОформленияСтроки.Верх, 10, ОбластьОформленияСтроки.Низ, 10).ЦветФона = ЦветЗакраски;
				КонецЕсли;
				Если Рез.Контроль Тогда
					ТабличныйДокумент.Область(ОбластьОформленияСтроки.Верх, 2, ОбластьОформленияСтроки.Верх, 2).ЦветФона = ЦветЗакраски;
				КонецЕсли;
			КонецЕсли;
			// <<<  Выделение фона  <<<
			
			ВысотаОбластей = ВысотаОбластей + 4;
					
			НПП = НПП + 1;
			
		ИначеЕсли Рез.ТипЗаказа = "З" Тогда // --- забор
			
			Попытка			 
				ОбъемЗ = Рез.ОбъемЗабора;		
				Если ОбъемЗ = 0 Тогда		
					ОбъемныйБрэйк = "-";
					ОбъемЗ = "";
				Иначе	
					ОбъемныйБрэйк = ПолучитьБрейкСогласноОбъемуПартнера(Рез.Заказ, ОбъемЗ);		 
				КонецЕсли;	 
			Исключение		 
			КонецПопытки;
			ОбластьЗабор.Параметры.Вес          	= "" + ОбъемЗ + Символы.ПС + ОбъемныйБрэйк;
			ОбластьЗабор.Параметры.ПараметрыОплаты  = "" + ОбъемЗ;
			ОбластьЗабор.Параметры.ТипОплаты        = "" + ОбъемныйБрэйк;
			
		    ОбластьЗабор.Параметры.НПП          	= НПП;
			ОбластьЗабор.Параметры.НомерЗаказа  	= Рез.Номер;
			ОбластьЗабор.Параметры.ВнешнийНомер 	= Рез.НомерВнешнегоЗаказа;
			ОбластьЗабор.Параметры.КолМест      	= Рез.КоличествоМест;
			ОбластьЗабор.Параметры.Сумма       	    = "-";
			ОбластьЗабор.Параметры.Контакты	 	    = "" + Рез.Грузополучатель + ", " + Рез.Телефон;
			ОбластьЗабор.Параметры.Адрес			= Рез.АдресДоставки;
			
			ТелефонМагазина = Рез.ТелефонМагазина;
			Если КодПартнера = "Shop_248" ИЛИ КодПартнера = "Shop_601" ИЛИ КодПартнера = "Shop_752" Тогда
				ТелефонМагазина = "8-495-974-35-64";
			ИначеЕсли КодПартнера = "Shop_438" Тогда	
			    ТелефонМагазина = "8-499-643-33-64";
			КонецЕсли;
			
			ОбластьЗабор.Параметры.ПартнерТелефон  = "" + ?((КодПартнера = "Shop_248" ИЛИ КодПартнера = "Shop_601" ИЛИ КодПартнера = "Shop_752"), "YD", Рез.НаименованиеПартнера) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.НаименованиеПартнера), ТелефонМагазина, "");
			ОбластьЗабор.Параметры.Интервал        = "" + Рез.ИнтервалС + " - " + Рез.ИнтервалПо;
			
			//ОбластьСтрока.Параметры.ОжидаемыйИнтервал = ?(Рез.ОжидаемыйИнтервал = ПустаяДата, "-", Формат(Рез.ОжидаемыйИнтервал, "ДФ=HH:mm"));
			
			Если ВысотаОбластей + 2.5 > ВысотаОбластейМЛ Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьСтрокаЗаголовок);
				ВысотаОбластей = 0.5;
			КонецЕсли;
			
			ОбластьЗабор.Параметры.КомментарийКурьера = ?(Рез.Отмена, Рез.ПричинаОтказаНаименование, "");
			
		    ОбластьОформленияСтроки = ТабличныйДокумент.Вывести(ОбластьЗабор);
			Если Рез.Отмена Тогда
				ОбластьОформленияСтроки.ЦветФона = ЦветЗакраски;
			КонецЕсли;
			ВысотаОбластей = ВысотаОбластей + 2.5;
			
			НПП = НПП + 1;
		КонецЕсли;	
		
	КонецЦикла;
	
	
	// подвал
	Если ВысотаОбластей + 3 + 5 > ВысотаОбластейМЛ Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ВысотаОбластей = 0;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьТекст);
	ВысотаОбластей = ВысотаОбластей + 3;
	ТабличныйДокумент.Вывести(ОбластьКорректировкаВеса);
	ВысотаОбластей = ВысотаОбластей + 5;
	
	ОбластьПодвал.Параметры.ИтогоНаличные = СуммаНаличные;
	ОбластьПодвал.Параметры.ИтогоТерминал = СуммаТерминал;
	
	Если ВысотаОбластей + 11 + 5 > ВысотаОбластейМЛ Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ВысотаОбластей = 0;
	КонецЕсли;
	
	ОбластьПодвал.Параметры.НомерМаршрута = НомерМаршрута;
	ОбластьПодвал.Параметры.МаркаАвто = МаркаАвто;
	ОбластьПодвал.Параметры.ГосНомер = ГосНомер;
	ОбластьПодвал.Параметры.ДатаРейса = Формат(РейсСсылка.ДатаРейса, "ДЛФ=DD");
	ОбластьПодвал.Параметры.ПодписаниеСопроводительныхДокументов = ПодписаниеСопроводительныхДокументов;
	ОбластьПодвал.Параметры.КолБезнальныхДокументов = КолБезнальныхДокументов;
	
	ОбластьПодвал.Параметры.КолЛореальВ2В = КолЛореальВ2В;
	//начал сбоить QR код 08.06.2023
	//СтрокаКода = ХэшФункцииСервер.Хэш(РезРейс.НомерРейсаКодАвто);
	//ОбластьПодвал.Рисунки.НадписьQRКод.Текст = СтрокаКода;
	//КартинкаQRКода = Новый Картинка(РаботаСШтрихкодированиемСервер.ПолучитьДвоичныеДанныеКартинкиQR(СтрокаКода));
	//ОбластьПодвал.Рисунки.QRКод.Картинка = КартинкаQRКода;
	//начал сбоить QR код 08.06.2023

	ТабличныйДокумент.Вывести(ОбластьПодвал);
	ВысотаОбластей = ВысотаОбластей + 11;
	
	ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("ТаблицаПодъем"));
	ВысотаОбластей = ВысотаОбластей + 5;
	
	Если Не ПечататьБланкиОтвязанныхЗаказовПриПечатиМЛ Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказыКОтвязкеОтРейсов.Заказ КАК Заказ,
		|	МАКСИМУМ(ЗаказыКОтвязкеОтРейсов.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ПоследниеПериодыОтвязки
		|ИЗ
		|	РегистрСведений.ЗаказыКОтвязкеОтРейсов КАК ЗаказыКОтвязкеОтРейсов
		|ГДЕ
		|	ЗаказыКОтвязкеОтРейсов.Рейс = &Ссылка
		|	И ЗаказыКОтвязкеОтРейсов.ТипОтвязки В (ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ЗаказНеПоместилсяВРейс), ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки))
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыКОтвязкеОтРейсов.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ПоследниеПериодыОтвязки.Заказ КАК Заказ,
		|	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	ВТ_ПоследниеПериодыОтвязки КАК ВТ_ПоследниеПериодыОтвязки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаказыКОтвязкеОтРейсов КАК ЗаказыКОтвязкеОтРейсов
		|		ПО ВТ_ПоследниеПериодыОтвязки.Заказ = ЗаказыКОтвязкеОтРейсов.Заказ
		|			И (ЗаказыКОтвязкеОтРейсов.Рейс = &Ссылка)
		|			И ВТ_ПоследниеПериодыОтвязки.Период = ЗаказыКОтвязкеОтРейсов.Период
		|			И (ЗаказыКОтвязкеОтРейсов.ТипОтвязки = ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ЗаказНеПоместилсяВРейс))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО ВТ_ПоследниеПериодыОтвязки.Заказ = РеализацияТоваровУслуг.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыКонтрагентовСрезПоследних.Контрагент КАК Контрагент,
		|	ПараметрыКонтрагентовСрезПоследних.ОтключитьПроверкуБНЗаказов КАК ОтключитьПроверкуБНЗаказов,
		|	ПараметрыКонтрагентовСрезПоследних.СопроводительныеДокументыНаходятсяВКоробке КАК СопроводительныеДокументыНаходятсяВКоробке
		|ПОМЕСТИТЬ ВТ_ПараметрыКонтрагентов
		|ИЗ
		|	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(
		|			,
		|			Контрагент В
		|				(ВЫБРАТЬ
		|					ВТ_Заказы.ВладелецТовара КАК ВладелецТовара
		|				ИЗ
		|					ВТ_Заказы КАК ВТ_Заказы)) КАК ПараметрыКонтрагентовСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказы.Заказ КАК Заказ,
		|	РеализацияТоваровУслуг.Номер КАК НомерЗаказа,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслуг.ВладелецТовара.Родитель.ОсновнойМагазин = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА РеализацияТоваровУслуг.ВладелецТовара.Наименование
		|		ИНАЧЕ РеализацияТоваровУслуг.ВладелецТовара.Родитель.ОсновнойМагазин.Наименование
		|	КОНЕЦ КАК Партнер,
		|	РеализацияТоваровУслуг.ВладелецТовара.Наименование КАК ПодчиненныйИМ,
		|	новаМестнаяДоставка.ТочкаПрибытия.Адрес.Наименование КАК Адрес,
		|	новаМестнаяДоставка.ВремяПрибытияС КАК ВремяПрибытияС,
		|	новаМестнаяДоставка.ВремяПрибытияПо КАК ВремяПрибытияПо,
		|	РеализацияТоваровУслуг.ОбщийВес КАК Вес,
		|	РеализацияТоваровУслуг.ОбъёмЗаказа КАК Объем,
		|	РеализацияТоваровУслуг.КоличествоМест КАК КоличествоМест,
		|	НЕ ВЗ_Контроль.ЗаказКонтроль ЕСТЬ NULL КАК Контроль,
		|	ЕСТЬNULL(ВЗ_Поездки.Поездки, 0) + 1 КАК Поездки,
		|	(ТипыОплат.Ссылка = ЗНАЧЕНИЕ(Справочник.ТипыОплат.БезналичныйРасчет)
		|			И НЕ ЕСТЬNULL(ВТ_ПараметрыКонтрагентов.ОтключитьПроверкуБНЗаказов, ЛОЖЬ)
		|		ИЛИ ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПодписаниеИВозвратСопрДокументов, ЛОЖЬ))
		|		И НЕ ЕСТЬNULL(ВТ_ПараметрыКонтрагентов.СопроводительныеДокументыНаходятсяВКоробке, ЛОЖЬ) КАК Документы
		|ИЗ
		|	ВТ_Заказы КАК ВТ_Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
		|			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
		|			ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
		|		ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КОЛИЧЕСТВО(ИСТИНА) КАК Поездки,
		|			СостоянияЗаказов.Заказ КАК Заказ
		|		ИЗ
		|			ВТ_Заказы КАК ВТ_Заказы
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
		|				ПО ВТ_Заказы.Заказ = СостоянияЗаказов.Заказ
		|					И (СостоянияЗаказов.Регистратор ССЫЛКА Документ.новаОтчетВодителя)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СостоянияЗаказов.Заказ) КАК ВЗ_Поездки
		|		ПО ВТ_Заказы.Заказ = ВЗ_Поездки.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			СостоянияЗаказов.Заказ КАК ЗаказКонтроль
		|		ИЗ
		|			РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
		|				ПО СостоянияЗаказов.Заказ = ВТ_Заказы.Заказ
		|					И (СостоянияЗаказов.ПричинаОтказа.СторонаПретензии = ЗНАЧЕНИЕ(Перечисление.СторонаПретензий.Компания))) КАК ВЗ_Контроль
		|		ПО ВТ_Заказы.Заказ = ВЗ_Контроль.ЗаказКонтроль
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
		|		ПО ВТ_Заказы.Заказ = ДополнительныеПараметрыЗаказа.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыКонтрагентов КАК ВТ_ПараметрыКонтрагентов
		|		ПО ВТ_Заказы.ВладелецТовара = ВТ_ПараметрыКонтрагентов.Контрагент
		|
		|УПОРЯДОЧИТЬ ПО
		|	Партнер,
		|	НомерЗаказа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияЗаказов.Заказ КАК Заказ,
		|	СостоянияЗаказов.Период КАК Период,
		|	ВЫБОР СостоянияЗаказов.ПричинаОтказа.СторонаПретензии
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.СторонаПретензий.Компания)
		|			ТОГДА 1
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.СторонаПретензий.Партнер)
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Вина
		|ИЗ
		|	ВТ_Заказы КАК ВТ_Заказы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
		|		ПО ВТ_Заказы.Заказ = СостоянияЗаказов.Заказ
		|			И (СостоянияЗаказов.Регистратор ССЫЛКА Документ.новаОтчетВодителя)
		|			И (СостоянияЗаказов.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена))";
		
		
		РезультатПакета = Запрос.ВыполнитьПакет();
		Результат = РезультатПакета[3];
		Если Не Результат.Пустой() Тогда
			
			ТаблицаВины = РезультатПакета[4].Выгрузить();
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			ВысотаОбластей = 0;
			
			Область = Макет.ПолучитьОбласть("СданныеЗаказыЗаголовок");
			ПараметрыОбласти = Область.Параметры;
			ПараметрыОбласти.ДанныеРейса = ДанныеРейса;
			ТабличныйДокумент.Вывести(Область);
			ВысотаОбластей = ВысотаОбластей + 1.5;
			
			ОбластьЗаказыШапка = Макет.ПолучитьОбласть("СданныеЗаказыШапка");
			ОбластьЗаказыСтрока = Макет.ПолучитьОбласть("СданныеЗаказыСтрока");
			ПараметрыОбласти = ОбластьЗаказыСтрока.Параметры;
			
			ТабличныйДокумент.Вывести(ОбластьЗаказыШапка);
			ВысотаОбластей = ВысотаОбластей + 1.5;
			
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				ПараметрыОбласти.Заполнить(Выборка);
				ПараметрыОбласти.НомерЗаказа = СокрЛП(Выборка.НомерЗаказа);
				ПараметрыОбласти.ИнтервалВЗаказе = Формат(Выборка.ВремяПрибытияС, "ДФ=HH:mm") + " - " + Формат(Выборка.ВремяПрибытияПо, "ДФ=HH:mm");
				ПараметрыОбласти.Документы = ?(Выборка.Документы, "Документы", "");
				
				ПараметрыОбласти.ШКСтриж = may.ПолучитьШКCode_39(СокрЛП(Выборка.НомерЗаказа));
				
				ВинаСтрижа = Ложь;
				
				КоличествоПоездок = Выборка.Поездки - 1;
				Если КоличествоПоездок Тогда
					СтруктураЗаказ.Заказ = Выборка.Заказ;
					ТаблицаВиныЗаказа = ТаблицаВины.Скопировать(СтруктураЗаказ, "Период,Вина");
					ТаблицаВиныЗаказа.Сортировать("Период Убыв");
					НомерП = 0;
					Для Каждого СтрокаВины Из ТаблицаВиныЗаказа Цикл
						НомерП = НомерП + 1;
						Если НомерП > 3 Тогда
							Прервать;
						КонецЕсли;
						Вина = СтрокаВины.Вина;
						Если Вина = 1 Тогда
							Вина = Строка(КоличествоПоездок) + "-Вина Ст";
							ВинаСтрижа = Истина;
						ИначеЕсли Вина = 2 Тогда
							Вина = Строка(КоличествоПоездок) + "-Вина Кл";
						Иначе
							Вина = Строка(КоличествоПоездок) + "-Вина ?";
						КонецЕсли;
						ПараметрыОбласти["П" + НомерП] = Вина;
						КоличествоПоездок = КоличествоПоездок - 1;
					КонецЦикла;
					Пока НомерП < 3 Цикл
						НомерП = НомерП + 1;
						ПараметрыОбласти["П" + НомерП] = "";
					КонецЦикла;
				Иначе
					ПараметрыОбласти.П1 = "";
					ПараметрыОбласти.П2 = "";
					ПараметрыОбласти.П3 = "";
				КонецЕсли;
				
				Если ВинаСтрижа Тогда
					ПараметрыОбласти.Поездки = Строка(Выборка.Поездки) + " (!!!)";
				КонецЕсли;
				
				Если ВысотаОбластей > ВысотаОбластейМЛ Тогда
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьЗаказыШапка);
					ВысотаОбластей = 1.5;
					
				КонецЕсли;
				
				ОбластьОформленияСтроки = ТабличныйДокумент.Вывести(ОбластьЗаказыСтрока);
				Если Выборка.Контроль Тогда
					ТабличныйДокумент.Область(ОбластьОформленияСтроки.Верх, 1, ОбластьОформленияСтроки.Низ, 1).ЦветФона = ЦветЗакраски;
				КонецЕсли;
				Если ВинаСтрижа Тогда
					ТабличныйДокумент.Область(ОбластьОформленияСтроки.Верх, 9, ОбластьОформленияСтроки.Низ, 9).ЦветФона = ЦветЗакраски;
				КонецЕсли;
				Если Выборка.Документы Тогда
					ТабличныйДокумент.Область(ОбластьОформленияСтроки.Верх, 2, ОбластьОформленияСтроки.Низ, 2).ЦветФона = ЦветЗакраски;
				КонецЕсли;
				ВысотаОбластей = ВысотаОбластей + 2.25;
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	//ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ВерхнийКолонтитул.ТекстСлева = "Стр.[&НомерСтраницы] из [&СтраницВсего]";
	ТабличныйДокумент.ВерхнийКолонтитул.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
	ТабличныйДокумент.ВерхнийКолонтитул.ТекстСправа = Формат(Сейчас, "ДФ='dd-MM-yyyy HH:mm'");
	ТабличныйДокумент.ВерхнийКолонтитул.Шрифт = Новый Шрифт(ТабличныйДокумент.ВерхнийКолонтитул.Шрифт,, ТабличныйДокумент.ВерхнийКолонтитул.Шрифт.Размер + 2);
	ТабличныйДокумент.ВерхнийКолонтитул.Выводить = Истина;
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции
//Асеев 07.09.2022 (Задача № 4893)<<<

&НаСервере
Функция ПечатьМаршрутногоЛистаСервер(РейсСсылка, ТабличныйДокумент)

	ФормироватьНовыйМЛ2022 = Истина;
	
	Если ФормироватьНовыйМЛ2022 Тогда
		ТабличныйДокумент = ПечатьМаршрутногоЛистаСерверС2022(РейсСсылка, ТабличныйДокумент);
	Иначе
		ТабличныйДокумент = ПечатьМаршрутногоЛистаСерверДо2022(РейсСсылка, ТабличныйДокумент);
	КонецЕсли;

	Возврат ТабличныйДокумент;
	
КонецФункции // ()


&НаСервере
Функция ПечатьМаршрутныхЛистовНаСервере()
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Рейс.Ссылка
	                      |ИЗ
	                      |	Документ.Рейс КАК Рейс
	                      |ГДЕ
	                      |	Рейс.Проведен
	                      |	И Рейс.Дата МЕЖДУ &Дата1 И &Дата2");
	//Запрос.УстановитьПараметр("Дата1", НачалоДня(ТекущаяДата()));
	//Запрос.УстановитьПараметр("Дата2", КонецДня(ТекущаяДата()));
	
	Запрос.УстановитьПараметр("Дата1", НачалоДня(Дата("20160815")));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Дата("20160815")));

	
	Рез = Запрос.Выполнить().Выбрать();
	
	Пока Рез.Следующий() Цикл	
		
		ТабличныйДокумент = ПечатьМаршрутногоЛистаСервер(Рез.Ссылка, ТабличныйДокумент);	
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//НомерСтраницы = НомерСтраницы + 1;
					
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции


&НаКлиенте
Процедура ПечатьМаршрутныхЛистов(Команда)
		
	ОткрытьФорму("Документ.Рейс.Форма.ВыборПериода_МаршрутныйЛист");
	
	//ТабДок = ПечатьМаршрутныхЛистовНаСервере();
	//
	//ТабДок.Показать();
	
КонецПроцедуры


&НаКлиенте
Процедура ПечатьМаршрутныхЛистовСОбновлениемДанных(Команда)
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда		
		Если lem.ПоРейсуВведеноПредварительноеЗакрытие(Элементы.Список.ТекущаяСтрока.РейсМестнойДоставки) Тогда
			Возврат;
		КонецеСли;			
		// МАС - 26.06.2018 - №2286 --->> 
		//lem_Клиент.ОбновлениеДанныхПоРейсуИзВероута(Элементы.Список.ТекущаяСтрока.Идентификатор, Элементы.Список.ТекущаяСтрока.ДатаРейса, Элементы.Список.ТекущаяСтрока.vr_РаспределительныйЦентр);
		Если НужноОбновлениеДанныхПоРейсуИзВероута(Элементы.Список.ТекущаяСтрока.ТерминалДоставки) Тогда
			lem_Клиент.ОбновлениеДанныхПоРейсуИзВероута(Элементы.Список.ТекущаяСтрока.Идентификатор, Элементы.Список.ТекущаяСтрока.ДатаРейса, Элементы.Список.ТекущаяСтрока.vr_РаспределительныйЦентр);	
		КонецЕсли;
		// <<--- МАС 		
		ПечатьМаршрутногоЛиста(Неопределено);		
	КонецеСли;	
	
КонецПроцедуры

// МАС - 26.06.2018 - №2286 --->>
Функция НужноОбновлениеДанныхПоРейсуИзВероута(Терминал)

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЕСТЬNULL(ПараметрыРегиональныхТерминаловСрезПоследних.МетодикаЛогистическойМаршрутизации, ЗНАЧЕНИЕ(Перечисление.МетодикаЛогистическойМаршрутизации.МаршрутизацияVeeroute)) КАК МетодикаМаршрутизации
	                      |ИЗ
	                      |	РегистрСведений.ПараметрыРегиональныхТерминалов.СрезПоследних(, РегиональныйТерминал = &Терминал) КАК ПараметрыРегиональныхТерминаловСрезПоследних");
	Запрос.УстановитьПараметр("Терминал", Терминал);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
		Если Рез.МетодикаМаршрутизации = Перечисления.МетодикаЛогистическойМаршрутизации.МаршрутизацияVeeroute Тогда				
			Возврат Истина;	
		Иначе	
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
		
КонецФункции // ()
// <<--- МАС


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГруппаГрафик.Видимость = Ложь;
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НастройкиПользователей.Пользователь КАК Пользователь,
	                      |	НастройкиПользователей.Настройка КАК Настройка,
	                      |	НастройкиПользователей.Значение КАК Значение
	                      |ИЗ
	                      |	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	                      |ГДЕ
	                      |	НастройкиПользователей.Пользователь = &Пользователь
	                      |	И НастройкиПользователей.Настройка = &Настройка");
	Запрос.УстановитьПараметр("Пользователь", ТекПользователь);
	Запрос.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.НастройкиПользователей.ТерминалДоставки);
	Рез = Запрос.Выполнить().Выбрать();
	//ТерминалСпис = Новый СписокЗначений;
	ТерминалСпис = Новый Массив;

	
	Если Рез.Следующий() Тогда		
		Если Рез.Значение = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		ИначеЕсли Рез.Значение = Справочники.РегиональныеТерминалы.СПбСтриж Тогда
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
		Иначе
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		КонецЕсли;	
	Иначе		
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());	
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ТерминалСписок", ТерминалСпис);
	//Список.Параметры.УстановитьЗначениеПараметра("НачДата", Элементы.Список.Период.ДатаНачала);
	//Список.Параметры.УстановитьЗначениеПараметра("КонДата", ТекущаяДата());
	
	// МАС - 27.07.2017 - №1434 --->> 
	ТекВр = ТекущаяДата();
	ТекТерминал = ПараметрыСеанса.ТерминалДоставки;
	Если НЕ ЗначениеЗаполнено(ТекТерминал) Тогда	
		ТекТерминал = ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.МоскваСтриж");		
	КонецЕсли;
	
	ЗапГрафик = Новый Запрос("ВЫБРАТЬ
	                         |	ЗафиксированныйГрафикЭкипажей.Ссылка КАК Ссылка
	                         |ИЗ
	                         |	Документ.ЗафиксированныйГрафикЭкипажей КАК ЗафиксированныйГрафикЭкипажей
	                         |ГДЕ
	                         |	ЗафиксированныйГрафикЭкипажей.Проведен
	                         |	И ЗафиксированныйГрафикЭкипажей.Дата МЕЖДУ &Дата1 И &Дата2
	                         |	И ЗафиксированныйГрафикЭкипажей.ТерминалДоставки = &ТерминалДоставки");
	ЗапГрафик.УстановитьПараметр("Дата1", НачалоДня(ТекВр));
	ЗапГрафик.УстановитьПараметр("Дата2", КонецДня(ТекВр));	
	ЗапГрафик.УстановитьПараметр("ТерминалДоставки", ТекТерминал);	
	РезГрафик = ЗапГрафик.Выполнить();	
	ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗафиксироватьГрафик.Пометка = НЕ РезГрафик.Пустой();
	// <<--- МАС 
	
	// МАС - 27.07.2017 - № --->> 
	График.Параметры.УстановитьЗначениеПараметра("Дата1", НачалоДня(ТекВр));
	График.Параметры.УстановитьЗначениеПараметра("Дата2", КонецДня(ТекВр));
	// <<--- МАС 
	
	
	//Результат = РезГрафик.Выбрать();
	//Если Результат.Следующий() Тогда	
	//	График.Параметры.УстановитьЗначениеПараметра("Период", Результат.Ссылка.);		
	//КонецЕсли;
	
	
	Элементы.ФормаПоказатьСкрытьКорзину.Пометка = Истина;
	//Корзина.Параметры.УстановитьЗначениеПараметра("ДатаНач", НачалоДня(ТекущаяДата()));
	//Корзина.Параметры.УстановитьЗначениеПараметра("ДатаКон", КонецДня(ТекущаяДата()));
	ОбновитьПараметрыДатыЗапросаКорзины();
	Корзина.Параметры.УстановитьЗначениеПараметра("ТерминалДоставкиСписок", ТерминалСпис);
	
	//Корзина.Параметры.УстановитьЗначениеПараметра("ДатаНач", НачалоДня(Дата(2017,11,29)));
	//Корзина.Параметры.УстановитьЗначениеПараметра("ДатаКон", КонецДня(Дата(2017,11,29)));
    ДатаСписков = ТекущаяДата();
	
	//Асеев 18.10.2022 (Задача № 4915)>>>
	ПечататьБланкиОтвязанныхЗаказовПриПечатиМЛ = Истина;
	Элементы.ФормаПечататьБланкиОтвязанныхЗаказовПриПечатиМЛ.Пометка = ПечататьБланкиОтвязанныхЗаказовПриПечатиМЛ;
	//Асеев 18.10.2022 (Задача № 4915)<<<
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДатуСписковНаСервере()
	ОбновитьПараметрыДатыЗапросаКорзины();
	Элементы.Корзина.Обновить();
	Сообщить("Дата сменилась. Произведено обновление параметров корзины.");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДатуСписков()
	Сегодня = НачалоДня(ТекущаяДата());
	Если ДатаСписков <> Сегодня Тогда
		ДатаСписков = Сегодня;
		ОбновитьДатуСписковНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыДатыЗапросаКорзины()
	Корзина.Параметры.УстановитьЗначениеПараметра("ДатаНач", НачалоДня(ТекущаяДата()));
	Корзина.Параметры.УстановитьЗначениеПараметра("ДатаКон", КонецДня(ТекущаяДата()));
КонецПроцедуры	

&НаСервере
Функция ПолучитьОтчетВодителяПоРейсу(РейсСсылка)
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	новаОтчетВодителя.Ссылка КАК Отчет
	            |ИЗ
	            |	Документ.новаОтчетВодителя КАК новаОтчетВодителя
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс КАК РейсВероут
	            |		ПО новаОтчетВодителя.Рейс.Ссылка = РейсВероут.РейсМестнойДоставки.Ссылка
	            |ГДЕ
	            |	РейсВероут.Ссылка = &Рейс";
	Зап.УстановитьПараметр("Рейс", РейсСсылка);
	
	Выб = Зап.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда
		Возврат Выб.Отчет;
	Иначе
		Возврат Неопределено;
	КонецеСли;	
КонецФункции	

&НаКлиенте
Процедура ОткрытьОтчетВодителя(Команда)
	// Вставить содержимое обработчика.
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		Отч = ПолучитьОтчетВодителяПоРейсу(Элементы.Список.ТекущаяСтрока.Ссылка);
		Если Отч <> Неопределено Тогда
			Парам = Новый Структура("Ключ", Отч.Ссылка);
			ОткрытьФорму("Документ.новаОтчетВодителя.ФормаОбъекта", Парам, ЭтаФорма);
		Иначе
			Предупреждение("Не найден отчет водителя!");
		КонецеСли;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьГрафик(Команда)
	
	Если Час(ТекущаяДата()) >= 14 Тогда
		Сообщить("Изменение графика текущего дня после 14:00 не допускается");
	Иначе	
		ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗафиксироватьГрафик.Пометка = НЕ ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗафиксироватьГрафик.Пометка;
		ЗафиксироватьГрафикНаСервере(ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗафиксироватьГрафик.Пометка);		
		ЭтаФорма.ОбновитьОтображениеДанных();	
	КонецЕсли;	
	
	
КонецПроцедуры

&НаСервере
Процедура ЗафиксироватьГрафикНаСервере(Пометка)
	
	
	ТекВр = ТекущаяДата();	
	ТекТерминал = ПараметрыСеанса.ТерминалДоставки;
	Если НЕ ЗначениеЗаполнено(ТекТерминал) Тогда	
		ТекТерминал = ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.МоскваСтриж");		
	КонецЕсли;
	
	
	Если Пометка Тогда  // делаем новый док - пометка выставляется	
	
		НДок = Документы.ЗафиксированныйГрафикЭкипажей.СоздатьДокумент();
		НДок.Дата = ТекВр;
		НДок.ДатаРейсов = НачалоДня(ТекВр);
		НДок.Оператор = ПараметрыСеанса.ТекущийПользователь;
		НДок.ТерминалДоставки = ТекТерминал;
			
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ДокРейс.Ссылка КАК Рейс,
		                      |	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
		                      |	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
		                      |	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор,
		                      |	ПривязкаМашинКРейсамСрезПоследних.Период КАК Период,
		                      |	ПривязкаМашинКРейсамСрезПоследних.КтоПривязал КАК КтоПривязал
		                      |ИЗ
		                      |	Документ.Рейс КАК ДокРейс
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
		                      |		ПО ДокРейс.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс
		                      |ГДЕ
		                      |	ДокРейс.Проведен
		                      |	И ДокРейс.Дата МЕЖДУ &Дата1 И &Дата2
		                      |	И ДокРейс.ТерминалДоставки = &ТерминалДоставки");
		Запрос.УстановитьПараметр("Дата1", НачалоДня(ТекВр));
		Запрос.УстановитьПараметр("Дата2", КонецДня(ТекВр));
		Запрос.УстановитьПараметр("ТерминалДоставки", ТекТерминал);
		Рез = Запрос.Выполнить().Выбрать();
		
		Пока Рез.Следующий() Цикл
			
			Если ЗначениеЗаполнено(Рез.Водитель) Тогда			
				НСтр = НДок.Экипажи.Добавить();	
				НСтр.Рейс = Рез.Рейс;
				НСтр.Сотрудник = Рез.Водитель;			
				НСтр.ТипУчастникаЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
				НСтр.Транспорт = Рез.Транспорт;	
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Рез.Экспедитор) Тогда		
				НСтр = НДок.Экипажи.Добавить();	
				НСтр.Рейс = Рез.Рейс;
				НСтр.Сотрудник = Рез.Экспедитор;						
				НСтр.ТипУчастникаЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
				НСтр.Транспорт = Рез.Транспорт;	
			КонецЕсли;	
		
		КонецЦикла;
		
		
		Попытка
			НДок.Записать(РежимЗаписиДокумента.Запись);
			НДок.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			#Если Клиент Тогда
				ТекстОш = ОписаниеОшибки();
				Сообщить("проблема: " + ТекстОш);
			#КонецЕсли	
		КонецПопытки;
	
		
	Иначе // распроводим имеющиеся доки - пометка снимается
		
		ЗапГрафик = Новый Запрос("ВЫБРАТЬ
		                         |	ЗафиксированныйГрафикЭкипажей.Ссылка КАК Ссылка
		                         |ИЗ
		                         |	Документ.ЗафиксированныйГрафикЭкипажей КАК ЗафиксированныйГрафикЭкипажей
		                         |ГДЕ
		                         |	ЗафиксированныйГрафикЭкипажей.Проведен
		                         |	И ЗафиксированныйГрафикЭкипажей.Дата МЕЖДУ &Дата1 И &Дата2
		                         |	И ЗафиксированныйГрафикЭкипажей.ТерминалДоставки = &ТерминалДоставки");
		ЗапГрафик.УстановитьПараметр("Дата1", НачалоДня(ТекВр));
		ЗапГрафик.УстановитьПараметр("Дата2", КонецДня(ТекВр));	
		ЗапГрафик.УстановитьПараметр("ТерминалДоставки", ТекТерминал);	
		РезГрафик = ЗапГрафик.Выполнить().Выбрать();	
		
		Пока РезГрафик.Следующий() Цикл		
			ДокОбъект = РезГрафик.Ссылка.ПолучитьОбъект();	
			ДокОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);	
		КонецЦикла;

		
	КонецЕсли;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьГрафик(Команда)
	
	ТекПометка = ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоказатьСкрытьГрафик.Пометка;
	ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоказатьСкрытьГрафик.Пометка = НЕ ТекПометка;
	Элементы.ГруппаГрафик.Видимость = НЕ ТекПометка;
	Элементы.График.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)

	Элементы.График.Обновить();	
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникВышелНаРаботу(Команда)
	
	ТекДанные = Элементы.График.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда		
		ТекЭлемент = Элементы.График.ТекущийЭлемент.Имя;
		Если ТекЭлемент = "ГрафикВодитель" Тогда
			СотрудникВышелНаРаботуНаСервере(ТекДанные.Водитель, ТекДанные.Рейс, Истина);
		ИначеЕсли ТекЭлемент = "ГрафикЭкспедитор" Тогда	
			СотрудникВышелНаРаботуНаСервере(ТекДанные.Экспедитор, ТекДанные.Рейс, Истина);	
		КонецЕсли;
		Элементы.График.Обновить();
		Элементы.График.ВыделенныеСтроки.Очистить();			
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура СотрудникНеВышелНаРаботу(Команда)
	
	ТекДанные = Элементы.График.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ТекЭлемент = Элементы.График.ТекущийЭлемент.Имя;
		Если ТекЭлемент = "ГрафикВодитель" Тогда
			СотрудникВышелНаРаботуНаСервере(ТекДанные.Водитель, ТекДанные.Рейс, Ложь);
		ИначеЕсли ТекЭлемент = "ГрафикЭкспедитор" Тогда	
			СотрудникВышелНаРаботуНаСервере(ТекДанные.Экспедитор, ТекДанные.Рейс, Ложь);	
		КонецЕсли;
		Элементы.График.Обновить();
		Элементы.График.ВыделенныеСтроки.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СотрудникВышелНаРаботуНаСервере(Сотрудник, Рейс, Вышел)
		
	Док = Документы.КорректировкаУчетаВыходаСотрудниковНаРаботу.СоздатьДокумент();
	Док.Дата = ТекущаяДата();
	Док.Оператор = ПараметрыСеанса.ТекущийПользователь;
	Док.Рейс = Рейс;
	Док.Сотрудник = Сотрудник;
	Док.СотрудникВышелНаРаботу = Вышел;
	
	Попытка		
		Док.Записать(РежимЗаписиДокумента.Запись);
		Док.Записать(РежимЗаписиДокумента.Проведение);	
	Исключение
		#Если Клиент Тогда	
			ТекстОШ = "" + ОписаниеОшибки();
			Сообщить("Проблема: " + ТекстОШ);	
		#КонецЕсли
	КонецПопытки;		
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьГрафик(Команда)
	Элементы.График.Обновить();
	Элементы.График.ВыделенныеСтроки.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьГрафикЭкипажей" Тогда	
		Элементы.График.Обновить();			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафикПриАктивизацииЯчейки(Элемент)
	
	//Элементы.График.ВыделенныеСтроки.Очистить();
	
КонецПроцедуры


//МАС - 21.09.2017 - №1846 - Оперативное назначение ТА --->>
&НаКлиенте
Процедура СменитьНомерТА(Команда)
		
	Парам = Новый Структура("Рейс", Элементы.Список.ТекущиеДанные);
	ОткрытьФорму("Справочник.ТелефонныеАппараты.ФормаВыбора",, ЭтаФорма,,,,Новый ОписаниеОповещения("ПослеВыбораНовогоТА", ЭтотОбъект, Парам));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораНовогоТА(Пар1, Пар2) Экспорт

	
	Если ЗначениеЗаполнено(Пар1) И ЗначениеЗаполнено(Пар2) Тогда
		ПослеВыбораНовогоТАНаСервере(Пар1, Пар2);		 		
	КонецЕсли;	
	
	Элементы.Список.Обновить();
	
КонецПроцедуры
// <<--- МАС

&НаСервереБезКонтекста
Процедура ПослеВыбораНовогоТАНаСервере(Пар1, Пар2)
			// пишем в регистр
		РейсСсылка = Пар2.Рейс.Ссылка;
				
		ТекВр = НачалоДня(ТекущаяДата());
		Набор = РегистрыСведений.ОперативноеНазначениеТАНаРейс.СоздатьНаборЗаписей();
		Набор.Отбор.Рейс.Установить(РейсСсылка);
		Набор.Отбор.Период.Установить(ТекВр);
		Набор.Прочитать();
		Набор.Очистить();
		
		НЗапись = Набор.Добавить();
		НЗапись.Период = ТекВр;
		НЗапись.Рейс = РейсСсылка;
		НЗапись.ТА = Пар1;	
		
		Набор.Записать();
		
		
		// пуляем в админку	
		tripId = Формат(Число(Пар2.Рейс.РейсМестнойДоставки.Номер), "ЧГ=");
		temporary_phone = Пар1.Телефон;
		
		Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
		ТекстЗапроса = "EXEC import_setTripTemporary_phoneFrom1C " + tripId + ",'" + temporary_phone + "'";
		Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
		Евген.ОтключитьсяОтADO(Соединение);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПоказатьСкрытьКорзину(Команда)
	Элементы.ФормаПоказатьСкрытьКорзину.Пометка = Не Элементы.ФормаПоказатьСкрытьКорзину.Пометка;
	Элементы.ГруппаКорзина.Видимость = Элементы.ФормаПоказатьСкрытьКорзину.Пометка;
КонецПроцедуры


&НаСервере
Процедура ПривязатьТранспортНаСервере(ДатаРейсов)
	ТекТерминал = ПараметрыСеанса.ТерминалДоставки;
	Если НЕ ЗначениеЗаполнено(ТекТерминал) Тогда	
		ТекТерминал = Справочники.РегиональныеТерминалы.МоскваСтриж;		
	КонецЕсли;
	
	
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	новаТранспорт.Ссылка КАК Транспорт,
	            |	ЕСТЬNULL(ПривязкаМашинКРейсамСрезПоследних.Рейс, ИСТИНА) КАК МашинаНеПривязана,
	            |	ПривязкаМашинКРейсамСрезПоследних.Рейс КАК Рейс,
	            |	новаКалендарьВозможныхРейсов.Водитель КАК Водитель,
	            |	новаКалендарьВозможныхРейсов.Экспедитор КАК Экспедитор
	            |ИЗ
	            |	Справочник.новаТранспорт КАК новаТранспорт
	            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(&ДатаКон2, Рейс.ДатаРейса МЕЖДУ &ДатаНач И &ДатаКон) КАК ПривязкаМашинКРейсамСрезПоследних
	            |		ПО новаТранспорт.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Транспорт.Ссылка
	            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.новаКалендарьВозможныхРейсов КАК новаКалендарьВозможныхРейсов
	            |		ПО (новаКалендарьВозможныхРейсов.Транспорт = новаТранспорт.Ссылка)
	            |			И (новаКалендарьВозможныхРейсов.НачалоПериода >= &ДатаНач)
	            |			И (новаКалендарьВозможныхРейсов.КонецПериода <= КОНЕЦПЕРИОДА(&ДатаКон, ДЕНЬ))
	            |ГДЕ
	            |	новаТранспорт.ЭтоГруппа = ЛОЖЬ
	            |	И новаТранспорт.ПометкаУдаления = ЛОЖЬ
	            |	И новаТранспорт.Родитель.ТерминалДоставки = &ТерминалДоставки";
	 Зап.УстановитьПараметр("ДатаКон2", ТекущаяДата());
	 Зап.УстановитьПараметр("ДатаКон", КонецДня(ДатаРейсов));
	 Зап.УстановитьПараметр("ДатаНач", НачалоДня(ДатаРейсов));
	 
	 Зап.УстановитьПараметр("ТерминалДоставки", ТекТерминал);
	 
	 ТабТранспорта = Зап.Выполнить().Выгрузить();
	 
	 
	 ЗапРейсов = Новый Запрос;
	 ЗапРейсов.Текст = "ВЫБРАТЬ
	                   |	Рейс.Транспорт КАК Транспорт,
	                   |	Рейс.Ссылка КАК Рейс,
	                   |	Рейс.РейсМестнойДоставки КАК РМД
	                   |ИЗ
	                   |	Документ.Рейс КАК Рейс
	                   |ГДЕ
	                   |	Рейс.Проведен = ИСТИНА
	                   |	И Рейс.ДатаРейса МЕЖДУ &ДатаНач И &ДатаКон
	                   |	И Рейс.ТерминалДоставки = &ТерминалДоставки";
	 
	 ЗапРейсов.УстановитьПараметр("ДатаНач", НачалоДня(ДатаРейсов));
	 ЗапРейсов.УстановитьПараметр("ДатаКон", КонецДня(ДатаРейсов));
	 ЗапРейсов.УстановитьПараметр("ТерминалДоставки", ТекТерминал);
	 ТабРейсов = ЗапРейсов.Выполнить().Выгрузить();
	 
	 ЗапСоответствия = Новый Запрос;
	 ЗапСоответствия.Текст = "ВЫБРАТЬ
	                         |	Таб.Рейс КАК Рейс,
	                         |	Таб.Транспорт КАК Транспорт,
	                         |	Таб.РМД КАК РМД
	                         |ПОМЕСТИТЬ ВТРейсы
	                         |ИЗ
	                         |	&Таб КАК Таб
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ
	                         |	ПривязкаМашинКРейсам.Рейс.Транспорт.Ссылка КАК РейсТранспортСсылка,
	                         |	МАКСИМУМ(ПривязкаМашинКРейсам.Период) КАК Период
	                         |ПОМЕСТИТЬ Срез1
	                         |ИЗ
	                         |	РегистрСведений.ПривязкаМашинКРейсам КАК ПривязкаМашинКРейсам
	                         |ГДЕ
	                         |	ПривязкаМашинКРейсам.Период МЕЖДУ &НачДата И &КонДата
	                         |
	                         |СГРУППИРОВАТЬ ПО
	                         |	ПривязкаМашинКРейсам.Рейс.Транспорт.Ссылка
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ
	                         |	Срез1.РейсТранспортСсылка КАК РейсТранспортСсылка,
	                         |	ПривязкаМашинКРейсам.Транспорт КАК Транспорт
	                         |ПОМЕСТИТЬ Срез2
	                         |ИЗ
	                         |	Срез1 КАК Срез1
	                         |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам КАК ПривязкаМашинКРейсам
	                         |		ПО Срез1.РейсТранспортСсылка.Ссылка = ПривязкаМашинКРейсам.Рейс.Транспорт.Ссылка
	                         |			И Срез1.Период = ПривязкаМашинКРейсам.Период
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ
	                         |	ВТРейсы.Рейс КАК Рейс,
	                         |	ВТРейсы.Транспорт КАК ТранспортВероут,
	                         |	Срез2.Транспорт КАК Транспорт,
	                         |	ВЫБОР
	                         |		КОГДА ЕСТЬNULL(ПривязкаМашинКРейсамСрезПоследних.Транспорт, ИСТИНА) = ИСТИНА
	                         |			ТОГДА ИСТИНА
	                         |		ИНАЧЕ ЛОЖЬ
	                         |	КОНЕЦ КАК НадоПривязатьТранспорт,
	                         |	ВТРейсы.РМД КАК РМД
	                         |ИЗ
	                         |	ВТРейсы КАК ВТРейсы
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ Срез2 КАК Срез2
	                         |		ПО ВТРейсы.Транспорт = Срез2.РейсТранспортСсылка.Ссылка
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	                         |		ПО ВТРейсы.Рейс = ПривязкаМашинКРейсамСрезПоследних.Рейс.Ссылка
	                         |ГДЕ
	                         |	ВЫБОР
	                         |			КОГДА ЕСТЬNULL(ПривязкаМашинКРейсамСрезПоследних.Транспорт, ИСТИНА) = ИСТИНА
	                         |				ТОГДА ИСТИНА
	                         |			ИНАЧЕ ЛОЖЬ
	                         |		КОНЕЦ";
	 ЗапСоответствия.УстановитьПараметр("Таб", ТабРейсов);
	 ЗапСоответствия.УстановитьПараметр("НачДата", НачалоДня(ДобавитьМесяц(ДатаРейсов, -2)));
	 ЗапСоответствия.УстановитьПараметр("КонДата", ДатаРейсов - 1);
	 
	 Выб = ЗапСоответствия.Выполнить().Выбрать();
	 
	ТекД = ТекущаяДата();
	Наб = РегистрыСведений.ПривязкаМашинКРейсам.СоздатьНаборЗаписей();
	Наб.Отбор.Период.Установить(ТекД);
	Пока Выб.Следующий() Цикл
		Если Не Выб.НадоПривязатьТранспорт Тогда
			Продолжить;
		КонецЕсли;	
		
		Най = ТабТранспорта.Найти(Выб.Транспорт);
		Если Най = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		РМД = Выб.РМД.ПолучитьОбъект();
		РМД.Транспорт = Най.Транспорт;
		РМД.Водитель = Най.Водитель;
		РМД.Экспедитор = Най.Экспедитор;
		РМД.Записать();
		МаршрутизацияЗаказовСервер.ПривязатьДанныеПоРейсуКЗаборамНаСервере(Выб.Рейс, Най.Транспорт, Най.Водитель, Най.Экспедитор);
		
		Нов = Наб.Добавить();
		Нов.Период = ТекД;
		Нов.Рейс = Выб.Рейс;
		Нов.Транспорт = Най.Транспорт;
		Нов.Водитель = Най.Водитель;
		Нов.Экспедитор = Най.Экспедитор;
		Нов.КтоПривязал = ПараметрыСеанса.ТекущийПользователь;
		Нов.АвтоматическаяПривязка = Истина;
		Сообщить("Veeroute " + СокрЛП(Выб.ТранспортВероут) + " ---> " + СокрЛП(Выб.Транспорт));
	КонецЦикла; 
	
	Попытка
		Если Наб.Количество() <> 0 Тогда
			Наб.Записать();
		Иначе
			Сообщить("Данные отсутствуют!");
			Возврат;
		КонецеСли;
	Исключение
		Сообщить("Произошла ошибка при привязке транспорта! (" + ОписаниеОшибки() + ")", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецПопытки;
	Элементы.Список.Обновить();
	Сообщить("Привязка завершена!", СтатусСообщения.Обычное);
КонецПроцедуры




&НаКлиенте
Процедура ПривязатьТранспорт(Команда)
	
	Если Час(ТекущаяДата()) >= 21 Тогда
		ДатаРейсов = НачалоДня(ТекущаяДата() + 36000);
	Иначе	
		ДатаРейсов = НачалоДня(ТекущаяДата());
	КонецЕсли;	
	От = Вопрос("Выполнить автоматическую привязку экипажей к рейсам на дату " + Формат(ДатаРейсов, "ДЛФ=DD") + "?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
	
	Если От <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецеСли;	
	ПривязатьТранспортНаСервере(ДатаРейсов);
КонецПроцедуры


&НаСервере
Процедура ОтменитьОтвязкуЗаказаВКорзинеНаСервере(НомерЗаказа)
	Зап = Новый Запрос;
	
	Зап.Текст = "ВЫБРАТЬ
	            |	НезагруженныеЗаказыВАвто.Рейс.Транспорт КАК РейсТранспорт,
	            |	НезагруженныеЗаказыВАвто.Заказ КАК Заказ,
	            |	НезагруженныеЗаказыВАвто.Рейс КАК Рейс,
	            |	ВЫБОР
	            |		КОГДА ЕСТЬNULL(РейсЗаказы.Ссылка.Ссылка, ИСТИНА) = ИСТИНА
	            |			ТОГДА ЛОЖЬ
	            |		ИНАЧЕ ИСТИНА
	            |	КОНЕЦ КАК ПривязанКРейсуТекущейДаты,
	            |	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК ТранспортПогрузки
	            |ИЗ
	            |	РегистрСведений.НезагруженныеЗаказыВАвто КАК НезагруженныеЗаказыВАвто
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НезагруженныеЗаказыВАвто.СрезПоследних КАК НезагруженныеЗаказыВАвтоСрезПоследних
	            |		ПО НезагруженныеЗаказыВАвто.Заказ = НезагруженныеЗаказыВАвтоСрезПоследних.Заказ
	            |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс.Заказы КАК РейсЗаказы
	            |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	            |			ПО РейсЗаказы.Ссылка.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс.Ссылка
	            |		ПО (НезагруженныеЗаказыВАвто.Заказ = ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	            |			И (РейсЗаказы.Ссылка.ДатаРейса МЕЖДУ &ДатаНач И &ДатаКон)
	            |			И (РейсЗаказы.УдаленИзРейса = ЛОЖЬ)
	            |			И (РейсЗаказы.Ссылка.Проведен = ИСТИНА)
	            |ГДЕ
	            |	НезагруженныеЗаказыВАвто.СтатусПогрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыПогрузкиЗаказовВАвто.ЗаказНеЗагружен)
	            |	И НезагруженныеЗаказыВАвто.Период МЕЖДУ &ДатаНач И &ДатаКон
	            |	И НезагруженныеЗаказыВАвтоСрезПоследних.СтатусПогрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыПогрузкиЗаказовВАвто.ЗаказНеЗагружен)
	            |	И НезагруженныеЗаказыВАвто.Заказ.Номер = &НомерЗаказа";
	
	Зап.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));
	Зап.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));
	Зап.УстановитьПараметр("НомерЗаказа", НомерЗаказа);
	
	Выб = Зап.Выполнить().Выбрать();
	Выб.Следующий();
	Если ЗначениеЗаполнено(Выб.ТранспортПогрузки) Тогда
		Сообщить("Заказ уже привязан к рейсу!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецеСли;
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	РейсЗаказы.УдаленИзРейса КАК УдаленИзРейса
	            |ИЗ
	            |	Документ.Рейс.Заказы КАК РейсЗаказы
	            |ГДЕ
	            |	РейсЗаказы.Заказ = &Заказ
	            |	И РейсЗаказы.Ссылка.Ссылка = &Рейс";
	Зап.УстановитьПараметр("Заказ", Выб.Заказ);
	Зап.УстановитьПараметр("Рейс", Выб.Рейс);
	
	
	ВыбПоРейсу = Зап.Выполнить().Выбрать();
	Если ВыбПоРейсу.Следующий() Тогда
		Если Не ВыбПоРейсу.УдаленИзРейса Тогда
			Сообщить("Заказ уже вернули в изначальный рейс!", СтатусСообщения.ОченьВажное);
			Возврат;
		КонецеСли;	
	Иначе
		Сообщить("Заказ уже отвязан от изначального рейса!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецеСли;	
	
	ТекВр = ТекущаяДата();
	
	//Асеев 10.03.2021 (Задача № 4491)>>>
	//НачатьТранзакцию();
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	//Асеев 10.03.2021 (Задача № 4491)<<<
	Наб = РегистрыСведений.ЗаказыКОтвязкеОтРейсов.СоздатьНаборЗаписей();
	Наб.Отбор.Период.Установить(ТекВр);
	Наб.Отбор.Заказ.Установить(Выб.Заказ);
	Наб.Отбор.Рейс.Установить(Выб.Рейс);
	
	Нов = Наб.Добавить();
	Нов.Период = ТекВр;
	Нов.Заказ = Выб.Заказ;
	Нов.Рейс = Выб.Рейс;
	Нов.ТипОтвязки = Перечисления.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки;
	Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;;
	
	Наб.Записать();
	
	РейсОбъект = Выб.Рейс.ПолучитьОбъект();
	РейсОбъект.Записать(РежимЗаписиДокумента.Запись);
	РейсОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	ЗафиксироватьТранзакцию();
	
	Сообщить("Произведена отмена отвязки!");
КонецПроцедуры


&НаКлиенте
Процедура ОтменитьОтвязкуЗаказаВКорзине(Команда)
	Стр = Элементы.Корзина.ТекущиеДанные;

	ОтменитьОтвязкуЗаказаВКорзинеНаСервере(СокрЛП(Стр.Заказ));
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ОбновитьДатуСписков", 600);
	//ПодключитьОбработчикИзмененияДанных("Список.Отбор", "ДокументСписокОтборПриИзмененииДанных", Истина);
	//+Степанов Задача № 3507
	//ИзменитьОформлениеСписка(Истина);
	//-Степанов Задача № 3507
КонецПроцедуры

//&НаКлиенте
//Процедура ДокументСписокОтборПриИзмененииДанных(ПутьКДанным)

//    // Формирование строки отбора

//	Сообщить("хай");
//КонецПроцедуры

Функция ПолучитьБрейкСогласноОбъемуПартнера(Забор,ОбъемФ)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъемныеБрейки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ОбъемныеБрейки КАК ОбъемныеБрейки
		|ГДЕ
		|	ОбъемныеБрейки.Владелец = &Владелец
		|	И ОбъемныеБрейки.ОбъемОт <= &Объем
		|	И ОбъемныеБрейки.ОбъемДо >= &Объем";

	Запрос.УстановитьПараметр("Объем", ОбъемФ);
	Запрос.УстановитьПараметр("Владелец", Забор.ТарифнаяСетка);

	РезМ = Запрос.Выполнить().Выбрать();
	Пока РезМ.Следующий() Цикл
		Возврат РезМ.Ссылка;
	КонецЦикла;		
	Возврат Неопределено;
КонецФункции


&НаКлиенте
Процедура Информирование_Пригласить(Команда)
	
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт) Тогда
		Сообщить("Не привязан транспорт!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецеСли;	
	
	Если Элементы.Список.ТекущиеДанные.РейсЗакрыт Тогда
		Сообщить("Корректировка данных на эту дату заблокирована!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецеСли;	
	
	лДеньНедели = ДеньНедели(Элементы.Список.ТекущиеДанные.ДатаРейса);
	
	ДатаВстречи = Элементы.Список.ТекущиеДанные.ДатаРейса;
	
	Если лДеньНедели = 6 или лДеньНедели = 7 Тогда
		От = Вопрос("Нельзя пригласить экипаж на выходные дни. Укажете дату приглашения?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
		Если От = КодВозвратаДиалога.Да Тогда
			ДатаВстречи = ИнформированиеЭкипажейСервер.ПолучитьСледующуюБуднююДату(ДатаВстречи);
			Если Не ВвестиЗначение(ДатаВстречи, "Укажите дату встречи..", Новый ОписаниеТипов("Дата",,,,,Новый КвалификаторыДаты(ЧастиДаты.Дата))) Тогда
				Возврат;
			Иначе
				лДеньНедели = ДеньНедели(ДатаВстречи);
				Если лДеньНедели = 6 или лДеньНедели = 7 Тогда
					Сообщить("Нельзя в качестве даты приглашения указывать выходной день!", СтатусСообщения.ОченьВажное);
					Возврат;
				КонецеСли;	
			КонецеСли;	
		Иначе
			Возврат;
		КонецеСли;	
	КонецЕсли;	
	
	Если Не ИнформированиеЭкипажейСервер.Информирование_ПроверитьТекущийСтатус(ПредопределенноеЗначение("Перечисление.СтатусыВзаимодействия.ОбъектПриглашен"), Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт) Тогда
		Сообщить("Этот экипаж уже приглашен!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецЕсли;	
	ИнформированиеЭкипажейСервер.Информирование_УстановитьСтатус(ПредопределенноеЗначение("Перечисление.СтатусыВзаимодействия.ОбъектПриглашен"), Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт, ДатаВстречи);
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура Информирование_ОчиститьПриглашение(Команда)
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.Список.ТекущиеДанные.РейсЗакрыт Тогда
		Сообщить("Корректировка данных на эту дату заблокирована!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецеСли;	
	
	
	Если Не ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт) Тогда
		Сообщить("Не привязан транспорт!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецеСли;	
	Если ИнформированиеЭкипажейСервер.Информирование_ПроверитьТекущийСтатус(ПредопределенноеЗначение("Перечисление.СтатусыВзаимодействия.ОбъектПриглашен"), Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт) Тогда
		Сообщить("По этому экипажу нет активных приглашений!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецЕсли;	                                                                             
	ИнформированиеЭкипажейСервер.Информирование_УстановитьСтатус(ПредопределенноеЗначение("Перечисления.СтатусыВзаимодействия.ПустаяСсылка"), Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт, Элементы.Список.ТекущиеДанные.ДатаРейса);
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура Информирование_ВстречаВыполнена(Команда)
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт) Тогда
		Сообщить("Не привязан транспорт!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецеСли;	
	
	Если Элементы.Список.ТекущиеДанные.РейсЗакрыт Тогда
		Сообщить("Корректировка данных на эту дату заблокирована!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецеСли;	
	
	
	Если Не ИнформированиеЭкипажейСервер.Информирование_ПроверитьТекущийСтатус(ПредопределенноеЗначение("Перечисление.СтатусыВзаимодействия.ВстречаПроизведена"), Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт) Тогда
		Сообщить("По этому экипажу уже выполнена встреча!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецЕсли;	
	
	Если ИнформированиеЭкипажейСервер.Информирование_ПроверитьТекущийСтатус(ПредопределенноеЗначение("Перечисление.СтатусыВзаимодействия.ОбъектПриглашен"), Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт) Тогда
		Сообщить("По этому экипажу не назначена встреча!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецЕсли;	
	
	
	ИнформированиеЭкипажейСервер.Информирование_УстановитьСтатус(ПредопределенноеЗначение("Перечисление.СтатусыВзаимодействия.ВстречаПроизведена"), Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт, Элементы.Список.ТекущиеДанные.ДатаРейса);
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ПечатьВедомости(Команда)
	Если ЗначениеЗаполнено(Элементы.Список.ТекущаяСтрока) Тогда 
		ТабличныйДокумент = Документы.Рейс.ПолучитьТабличныйДокументИДанныеЗаказовКОтвязке_Старая(, Элементы.Список.ТекущаяСтрока);
		ТабличныйДокумент.Показать();
	КонецЕсли;
КонецПроцедуры

//+Степанов Задача № 3507 
&НаКлиенте
Процедура КнопкаПодсветка(Команда)
	Подсветка = Не Подсветка;
	ИзменитьОформлениеСписка(Ложь);
КонецПроцедуры

&НаСервере
Процедура ИзменитьОформлениеСписка(ОткрытиеФормы)
	Элементы.ФормаКнопкаПодсветка.Пометка = Подсветка;
	Если Подсветка Тогда
		Список.ТекстЗапроса = "ВЫБРАТЬ
		                      |	ДокументРейс.Ссылка КАК Ссылка,
		                      |	ДокументРейс.ПометкаУдаления КАК ПометкаУдаления,
		                      |	ДокументРейс.Номер КАК Номер,
		                      |	ДокументРейс.Дата КАК Дата,
		                      |	ДокументРейс.Проведен КАК Проведен,
		                      |	ДокументРейс.Транспорт КАК Транспорт,
		                      |	ДокументРейс.Идентификатор КАК Идентификатор,
		                      |	ДокументРейс.НомерПалетты КАК НомерПалетты,
		                      |	ДокументРейс.РежимЗагрузкиДанных КАК РежимЗагрузкиДанных,
		                      |	ДокументРейс.РейсМестнойДоставки КАК РейсМестнойДоставки,
		                      |	ДокументРейс.МоментВремени КАК МоментВремени,
		                      |	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК ПривязанныйТранспорт,
		                      |	ДокументРейс.ДатаРейса КАК ДатаРейса,
		                      |	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК ПривязанныйВодитель,
		                      |	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК ПривязанныйЭкспедитор,
		                      |	ДокументРейс.axi_Загрузка КАК axi_Загрузка,
		                      |	ДокументРейс.ТерминалДоставки КАК ТерминалДоставки,
		                      |	ЕСТЬNULL(ДокументыЗакрытыеДляИзмененияСрезПоследних.ЗакрытДляРедактирования, ЛОЖЬ) КАК РейсЗакрыт,
		                      |	ДокументРейс.УдаленноеЗакрытиеРейса КАК УдаленноеЗакрытиеРейса,
		                      |	ЕСТЬNULL(ПРЕДСТАВЛЕНИЕССЫЛКИ(ОперативноеНазначениеТАНаРейсСрезПоследних.ТА), """") КАК ТА,
		                      |	ЕСТЬNULL(1, ЛОЖЬ) КАК ОтчетУдаленноеЗакрытие,
		                      |	ЕСТЬNULL(1, ЛОЖЬ) КАК ОтчетДокументВнесенВРучную,
		                      |	ДокументРейс.КоличествоДоставок КАК КоличествоДоставок,
		                      |	ДокументРейс.КоличествоЗаборов КАК КоличествоЗаборов,
		                      |	НЕ РаспечатанныеДокументыСрезПоследних.Документ ЕСТЬ NULL КАК ВедомостьРаспечатана,
		                      |	ИнформированиеЭкипажейСрезПоследних.ДатаСобытия КАК Информирование_ДатаСобытия,
		                      |	ИнформированиеЭкипажейСрезПоследних.Период КАК Информирование_Период,
		                      |	ИнформированиеЭкипажейСрезПоследних1.Период КАК Информирование_ПериодВыполненияВстречи,
		                      |	ДокументРейс.СменаРейса КАК СменаРейса,
		                      |	ДокументРейс.ВнешнийОператорМаршрутизации КАК ВнешнийОператорМаршрутизации,
		                      |	ПривязкаМашинКРейсамСрезПоследних.ОтвязанВодитель КАК ОтвязанВодитель,
		                      |	ПривязкаМашинКРейсамСрезПоследних.ОтвязанЭкспедитор КАК ОтвязанЭкспедитор
		                      |ИЗ
		                      |	Документ.Рейс КАК ДокументРейс
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОперативноеНазначениеТАНаРейс.СрезПоследних КАК ОперативноеНазначениеТАНаРейсСрезПоследних
		                      |		ПО ДокументРейс.Ссылка = ОперативноеНазначениеТАНаРейсСрезПоследних.Рейс
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспечатанныеДокументы.СрезПоследних(, ) КАК РаспечатанныеДокументыСрезПоследних
		                      |		ПО ДокументРейс.Ссылка = РаспечатанныеДокументыСрезПоследних.Документ
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыЗакрытыеДляИзменения.СрезПоследних(, ) КАК ДокументыЗакрытыеДляИзмененияСрезПоследних
		                      |		ПО ДокументРейс.Ссылка = ДокументыЗакрытыеДляИзмененияСрезПоследних.Документ
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, ) КАК ПривязкаМашинКРейсамСрезПоследних
		                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИнформированиеЭкипажей.СрезПоследних(, Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВзаимодействия.ОбъектПриглашен)) КАК ИнформированиеЭкипажейСрезПоследних
		                      |			ПО ПривязкаМашинКРейсамСрезПоследних.Транспорт = ИнформированиеЭкипажейСрезПоследних.Транспорт
		                      |				И ПривязкаМашинКРейсамСрезПоследних.Рейс.ДатаРейса = ИнформированиеЭкипажейСрезПоследних.ДатаСобытия
		                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИнформированиеЭкипажей.СрезПоследних(, Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВзаимодействия.ВстречаПроизведена)) КАК ИнформированиеЭкипажейСрезПоследних1
		                      |			ПО ПривязкаМашинКРейсамСрезПоследних.Транспорт = ИнформированиеЭкипажейСрезПоследних1.Транспорт
		                      |				И ПривязкаМашинКРейсамСрезПоследних.Рейс.ДатаРейса = ИнформированиеЭкипажейСрезПоследних1.ДатаСобытия
		                      |		ПО ДокументРейс.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс
		                      |ГДЕ
		                      |	ДокументРейс.ТерминалДоставки В(&ТерминалСписок)";
		ЭлементыУсловногоОформления = Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы;
		ЭлементыУсловногоОформления[0].Использование = Истина;
		ЭлементыУсловногоОформления[3].Использование = Истина;
		ЭлементыУсловногоОформления[6].Использование = Истина;
		ЭлементыУсловногоОформления[7].Использование = Истина;
	Иначе
		Список.ТекстЗапроса = "ВЫБРАТЬ
		                      |	ДокументРейс.Ссылка КАК Ссылка,
		                      |	ДокументРейс.ПометкаУдаления КАК ПометкаУдаления,
		                      |	ДокументРейс.Номер КАК Номер,
		                      |	ДокументРейс.Дата КАК Дата,
		                      |	ДокументРейс.Проведен КАК Проведен,
		                      |	ДокументРейс.Транспорт КАК Транспорт,
		                      |	ДокументРейс.Идентификатор КАК Идентификатор,
		                      |	ДокументРейс.НомерПалетты КАК НомерПалетты,
		                      |	ДокументРейс.РежимЗагрузкиДанных КАК РежимЗагрузкиДанных,
		                      |	ДокументРейс.РейсМестнойДоставки КАК РейсМестнойДоставки,
		                      |	ДокументРейс.МоментВремени КАК МоментВремени,
		                      |	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК ПривязанныйТранспорт,
		                      |	ДокументРейс.ДатаРейса КАК ДатаРейса,
		                      |	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК ПривязанныйВодитель,
		                      |	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК ПривязанныйЭкспедитор,
		                      |	ДокументРейс.axi_Загрузка КАК axi_Загрузка,
		                      |	ДокументРейс.ТерминалДоставки КАК ТерминалДоставки,
		                      |	ДокументРейс.УдаленноеЗакрытиеРейса КАК УдаленноеЗакрытиеРейса,
		                      |	ЕСТЬNULL(ПРЕДСТАВЛЕНИЕССЫЛКИ(ОперативноеНазначениеТАНаРейсСрезПоследних.ТА), """") КАК ТА,
		                      |	ЕСТЬNULL(1, ЛОЖЬ) КАК ОтчетУдаленноеЗакрытие,
		                      |	ЕСТЬNULL(1, ЛОЖЬ) КАК ОтчетДокументВнесенВРучную,
		                      |	ДокументРейс.КоличествоДоставок КАК КоличествоДоставок,
		                      |	ДокументРейс.КоличествоЗаборов КАК КоличествоЗаборов,
		                      |	ДокументРейс.СменаРейса КАК СменаРейса,
		                      |	ДокументРейс.ВнешнийОператорМаршрутизации КАК ВнешнийОператорМаршрутизации
		                      |ИЗ
		                      |	Документ.Рейс КАК ДокументРейс
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОперативноеНазначениеТАНаРейс.СрезПоследних КАК ОперативноеНазначениеТАНаРейсСрезПоследних
		                      |		ПО ДокументРейс.Ссылка = ОперативноеНазначениеТАНаРейсСрезПоследних.Рейс
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, ) КАК ПривязкаМашинКРейсамСрезПоследних
		                      |		ПО ДокументРейс.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс
		                      |ГДЕ
		                      |	ДокументРейс.ТерминалДоставки В(&ТерминалСписок)";	
		ЭлементыУсловногоОформления = Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы;
		ЭлементыУсловногоОформления[0].Использование = Ложь;
		ЭлементыУсловногоОформления[3].Использование = Ложь;
		ЭлементыУсловногоОформления[6].Использование = Ложь;
		ЭлементыУсловногоОформления[7].Использование = Ложь;
	КонецЕсли;
	
КонецПроцедуры	
//-Степанов Задача № 3507

//CeHbKA 05.07.2021 
//по письму Ю.Семичастнова
&НаКлиенте
Процедура ЯндексМаршрутизация(Команда)
	
	ТекСтрока = Элементы.Список.ТекущиеДанные;
		
	ФормаЯМ = ОткрытьФорму("Обработка.СТРИЖ_ИнтеграцияЯндексМаршрутизация.Форма.Форма",, ЭтаФорма,,,,,);
	ФормаЯМ.ПослеВыбораРейса(ТекСтрока.Ссылка, Неопределено);
	
	ФормаЯМ.ДатаПланирования = ТекСтрока.ДатаРейса;
	
	НС_Авто = ФормаЯМ.ТранспортныеСредства.Добавить();
	НС_Авто.Использовать = Истина;
	НС_Авто.ТранспортноеСредство = ТекСтрока.ПривязанныйТранспорт;
	НС_Авто.СпособПеремещения = "driving";
	
КонецПроцедуры
//CeHbKA 05.07.2021

//Асеев 18.10.2022 (Задача № 4915)>>>
&НаСервереБезКонтекста
Функция ТребуетсяПечатьБланковОтвязанныхЗаказовРейса(Знач Рейс)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Рейс);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказыКОтвязкеОтРейсов.Заказ КАК Заказ,
	|	МАКСИМУМ(ЗаказыКОтвязкеОтРейсов.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ПоследниеПериодыОтвязки
	|ИЗ
	|	РегистрСведений.ЗаказыКОтвязкеОтРейсов КАК ЗаказыКОтвязкеОтРейсов
	|ГДЕ
	|	ЗаказыКОтвязкеОтРейсов.Рейс = &Ссылка
	|	И ЗаказыКОтвязкеОтРейсов.ТипОтвязки В (ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ЗаказНеПоместилсяВРейс), ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыКОтвязкеОтРейсов.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	ВТ_ПоследниеПериодыОтвязки КАК ВТ_ПоследниеПериодыОтвязки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаказыКОтвязкеОтРейсов КАК ЗаказыКОтвязкеОтРейсов
	|		ПО ВТ_ПоследниеПериодыОтвязки.Заказ = ЗаказыКОтвязкеОтРейсов.Заказ
	|			И (ЗаказыКОтвязкеОтРейсов.Рейс = &Ссылка)
	|			И ВТ_ПоследниеПериодыОтвязки.Период = ЗаказыКОтвязкеОтРейсов.Период
	|			И (ЗаказыКОтвязкеОтРейсов.ТипОтвязки = ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ЗаказНеПоместилсяВРейс))";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервере
Функция НапечататьБланкиОтвязанныхЗаказовРейса(Рейс)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
    ТабДок.АвтоМасштаб = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	ОбработкаОбъект = Обработки.ПечатьБланковЗаказовНовый.Создать();
	ОбработкаОбъект.ПечатьБланковОтвязанныхЗаказовПоРейсу(Рейс, ТабДок);
	
	Возврат ТабДок;
	
КонецФункции

&НаКлиенте
Процедура ПечататьБланкиОтвязанныхЗаказовПриПечатиМЛ(Команда)
	
	ПечататьБланкиОтвязанныхЗаказовПриПечатиМЛ = Не ПечататьБланкиОтвязанныхЗаказовПриПечатиМЛ;
	Элементы.ФормаПечататьБланкиОтвязанныхЗаказовПриПечатиМЛ.Пометка = ПечататьБланкиОтвязанныхЗаказовПриПечатиМЛ;
	
КонецПроцедуры
//Асеев 18.10.2022 (Задача № 4915)<<<

//Асеев 08.09.2023 (Задача № 5119)>>>
&НаСервереБезКонтекста
Функция МожноОтвязатьВодителя(Знач Рейс)
	
	Если baoВызовСервера.РейсЗакрыт(Рейс) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ПривязкаМашинКРейсамСрезПоследних
	|ГДЕ
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель <> ЗНАЧЕНИЕ(Справочник.новаВодители.ПустаяСсылка)";
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ОтвязатьВодителяНаСервере(Рейс)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПривязкаМашинКРейсамСрезПоследних.Рейс.РейсМестнойДоставки КАК РейсМестнойДоставки,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор,
	|	ПривязкаМашинКРейсамСрезПоследних.ОтвязанЭкспедитор КАК ОтвязанЭкспедитор
	|ИЗ
	|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ПривязкаМашинКРейсамСрезПоследних
	|ГДЕ
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель <> ЗНАЧЕНИЕ(Справочник.новаВодители.ПустаяСсылка)";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		НачатьТранзакцию();
		Попытка
			ЗаписьРегистра = РегистрыСведений.ПривязкаМашинКРейсам.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка);
			ЗаписьРегистра.Период = ТекущаяДата();
			ЗаписьРегистра.Рейс = Рейс;
			ЗаписьРегистра.ОтвязанВодитель = Истина;
			ЗаписьРегистра.КтоПривязал = ПараметрыСеанса.ТекущийПользователь;
			ЗаписьРегистра.Записать();
			
			РейсМестнойДоставки = Выборка.РейсМестнойДоставки.ПолучитьОбъект();
			РейсМестнойДоставки.Водитель = Неопределено;
			РейсМестнойДоставки.Записать();
			
			ЗафиксироватьТранзакцию();
		Исключение
			Сообщить(ОписаниеОшибки());
			Сообщить("Отвязка не выполнена!");
			ОтменитьТранзакцию();
		КонецПопытки;
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтвязатьВодителя(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если МожноОтвязатьВодителя(ТекущиеДанные.Ссылка) Тогда
		Если Вопрос("Вы действительно хотите отвязать Водителя от рейса № " + ТекущиеДанные.Номер, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ОтвязатьВодителяНаСервере(ТекущиеДанные.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МожноОтвязатьЭкспедитора(Знач Рейс)
	
	Если baoВызовСервера.РейсЗакрыт(Рейс) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ПривязкаМашинКРейсамСрезПоследних
	|ГДЕ
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор <> ЗНАЧЕНИЕ(Справочник.новаЭкспедиторы.ПустаяСсылка)";
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ОтвязатьЭкспедитораНаСервере(Рейс)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПривязкаМашинКРейсамСрезПоследних.Рейс.РейсМестнойДоставки КАК РейсМестнойДоставки,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних.ОтвязанВодитель КАК ОтвязанВодитель
	|ИЗ
	|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ПривязкаМашинКРейсамСрезПоследних
	|ГДЕ
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор <> ЗНАЧЕНИЕ(Справочник.новаЭкспедиторы.ПустаяСсылка)";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		НачатьТранзакцию();
		Попытка
		ЗаписьРегистра = РегистрыСведений.ПривязкаМашинКРейсам.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(ЗаписьРегистра, Выборка);
		ЗаписьРегистра.Период = ТекущаяДата();
		ЗаписьРегистра.Рейс = Рейс;
		ЗаписьРегистра.ОтвязанЭкспедитор = Истина;
		ЗаписьРегистра.КтоПривязал = ПараметрыСеанса.ТекущийПользователь;
		ЗаписьРегистра.Записать();
		
		РейсМестнойДоставки = Выборка.РейсМестнойДоставки.ПолучитьОбъект();
		РейсМестнойДоставки.Экспедитор = Неопределено;
		РейсМестнойДоставки.Записать();
			
		ЗафиксироватьТранзакцию();
		Исключение
			Сообщить(ОписаниеОшибки());
			Сообщить("Отвязка не выполнена!");
			ОтменитьТранзакцию();
		КонецПопытки;
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтвязатьЭкспедитора(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если МожноОтвязатьЭкспедитора(ТекущиеДанные.Ссылка) Тогда
		Если Вопрос("Вы действительно хотите отвязать Экспедитора от рейса № " + ТекущиеДанные.Номер, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ОтвязатьЭкспедитораНаСервере(ТекущиеДанные.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ИзменитьОформлениеСписка(Ложь);
КонецПроцедуры
//Асеев 08.09.2023 (Задача № 5119)<<<


