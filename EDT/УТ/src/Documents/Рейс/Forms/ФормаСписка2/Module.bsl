&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГруппаГрафик.Видимость = Ложь;
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	НастройкиПользователей.Пользователь КАК Пользователь,
	|	НастройкиПользователей.Настройка КАК Настройка,
	|	НастройкиПользователей.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	|ГДЕ
	|	НастройкиПользователей.Пользователь = &Пользователь
	|	И НастройкиПользователей.Настройка = &Настройка");
	Запрос.УстановитьПараметр("Пользователь", ТекПользователь);
	Запрос.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.НастройкиПользователей.ТерминалДоставки);
	Рез = Запрос.Выполнить().Выбрать();
	//ТерминалСпис = Новый СписокЗначений;
	ТерминалСпис = Новый Массив;
	
	
	Если Рез.Следующий() Тогда		
		Если Рез.Значение = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		ИначеЕсли Рез.Значение = Справочники.РегиональныеТерминалы.СПбСтриж Тогда
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
		Иначе
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		КонецЕсли;	
	Иначе		
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());	
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ТерминалСписок", ТерминалСпис);
	
	
	// МАС - 27.07.2017 - №1434 --->> 
	ТекВр = ТекущаяДата();
	ТекТерминал = ПараметрыСеанса.ТерминалДоставки;
	Если НЕ ЗначениеЗаполнено(ТекТерминал) Тогда	
		ТекТерминал = ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.МоскваСтриж");		
	КонецЕсли;
	
	ЗапГрафик = Новый Запрос("ВЫБРАТЬ
	|	ЗафиксированныйГрафикЭкипажей.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗафиксированныйГрафикЭкипажей КАК ЗафиксированныйГрафикЭкипажей
	|ГДЕ
	|	ЗафиксированныйГрафикЭкипажей.Проведен
	|	И ЗафиксированныйГрафикЭкипажей.Дата МЕЖДУ &Дата1 И &Дата2
	|	И ЗафиксированныйГрафикЭкипажей.ТерминалДоставки = &ТерминалДоставки");
	ЗапГрафик.УстановитьПараметр("Дата1", НачалоДня(ТекВр));
	ЗапГрафик.УстановитьПараметр("Дата2", КонецДня(ТекВр));	
	ЗапГрафик.УстановитьПараметр("ТерминалДоставки", ТекТерминал);	
	РезГрафик = ЗапГрафик.Выполнить();	
	ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗафиксироватьГрафик.Пометка = НЕ РезГрафик.Пустой();
	// <<--- МАС 
	
	// МАС - 27.07.2017 - № --->> 
	График.Параметры.УстановитьЗначениеПараметра("Дата1", НачалоДня(ТекВр));
	График.Параметры.УстановитьЗначениеПараметра("Дата2", КонецДня(ТекВр));
	// <<--- МАС 
	
	
	//Результат = РезГрафик.Выбрать();
	//Если Результат.Следующий() Тогда	
	//	График.Параметры.УстановитьЗначениеПараметра("Период", Результат.Ссылка.);		
	//КонецЕсли;
	
	
	Элементы.ФормаПоказатьСкрытьКорзину.Пометка = Истина;
	//Корзина.Параметры.УстановитьЗначениеПараметра("ДатаНач", НачалоДня(ТекущаяДата()));
	//Корзина.Параметры.УстановитьЗначениеПараметра("ДатаКон", КонецДня(ТекущаяДата()));
	ОбновитьПараметрыДатыЗапросаКорзины();
	Корзина.Параметры.УстановитьЗначениеПараметра("ТерминалДоставкиСписок", ТерминалСпис);
	
	//Корзина.Параметры.УстановитьЗначениеПараметра("ДатаНач", НачалоДня(Дата(2017,11,29)));
	//Корзина.Параметры.УстановитьЗначениеПараметра("ДатаКон", КонецДня(Дата(2017,11,29)));
	ДатаСписков = ТекущаяДата();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ОбновитьДатуСписков", 60);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДатуСписков()
	Если НачалоДня(ДатаСписков) <> НачалоДня(ТекущаяДата()) Тогда
		ДатаСписков = ТекущаяДата();
		ОбновитьПараметрыДатыЗапросаКорзины();
		Элементы.Корзина.Обновить();
		Сообщить("Дата сменилась. Произведено обновление параметров корзины.");
	КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ПривязанныйТранспорт" Тогда
		СтандартнаяОбработка = Ложь;
		//+++ БАО 22.06.2017 №926
		
		//---Если Элементы.Список.ТекущаяСтрока.РейсЗакрыт Тогда
		//--	Возврат;
		//---КонецеСли;
		
		Если baoВызовСервера.РейсЗакрыт(Элементы.Список.ТекущаяСтрока) Тогда
			Возврат;
		КонецеСли;
		
		//--- БАО 22.06.2017 №926
		
		Фрм = ПолучитьФорму("Документ.Рейс.Форма.ФормаВыбораТранспорта", Новый Структура("РежимВыбора, ДатаРейса, Транспорт", Истина, КонецДня(Элементы.Список.ТекущаяСтрока.ДатаРейса), Элементы.Список.ТекущаяСтрока.Транспорт), ЭтаФорма);
		Струк = Фрм.ОткрытьМодально();
		Если ЗначениеЗаполнено(Струк) Тогда
			
			ВыбТранспорт = Струк.Транспорт;
			ВыбВодитель = Струк.Водитель;
			ВыбЭкспедитор = Струк.Экспедитор;
			ВыбРейс = Струк.Рейс;
			ПоменятьМестами = Струк.ПоменятьМестами;
			ТекущийТранспорт = Элементы.Список.ТекущиеДанные.ПривязанныйТранспорт;
			ТекущийВодитель = Элементы.Список.ТекущиеДанные.ПривязанныйВодитель;
			ТекущийЭкспедитор = Элементы.Список.ТекущиеДанные.ПривязанныйЭкспедитор;
			
			//+++ БАО 09.08.2017 №1606
			Если ЗначениеЗаполнено(ВыбТранспорт) И ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.Ссылка) Тогда
				
				Струк = Новый Структура;
				Струк.Вставить("Транспорт", ВыбТранспорт);
				
				Попытка
					ПараметрыТранспорта = МаршрутизацияЗаказовСервер.ПрочитатьДополнительныеПараметрыТранспорта(ВыбТранспорт);
					
					//УдаленноеЗакрытиеРейсов = РегистрыСведений.ДополнительныеПараметрыТранспорта.ПолучитьПоследнее(КонецДня(ТекущаяДата()), Струк).УдаленноеЗакрытиеРейсов;
					Если ПараметрыТранспорта = Неопределено Тогда
						УдаленноеЗакрытиеРейсов = Ложь;
					Иначе	
						УдаленноеЗакрытиеРейсов = ПараметрыТранспорта.УдаленноеЗакрытие;
					КонецеСли;	
					РейсОбъект = Элементы.Список.ТекущиеДанные.Ссылка.ПолучитьОбъект();
					РейсОбъект.УдаленноеЗакрытиеРейса = УдаленноеЗакрытиеРейсов;
					РейсОбъект.Записать();
					Элементы.Список.Обновить();
					
				Исключение
					
					Сообщить("Ошибка установки реквизита Удаленное закрытие рейса. Действие отменено. Попробуйте еще раз.");
					Возврат;
					
				КонецПопытки;	
				
				
				
			КонецЕсли;
			
			//--- БАО 09.08.2017 №1606
			
			
			Если ЗначениеЗаполнено(ВыбТранспорт) Тогда
				КолПопыток = 1;
				ПривязкаВыполнена = Ложь;
				Пока КолПопыток < 4 Цикл		
					Попытка
						МаршрутизацияЗаказовСервер.ПривязатьДанныеПоРейсуКЗаборамНаСервере(Элементы.Список.ТекущаяСтрока.Ссылка, ВыбТранспорт, ВыбВодитель, ВыбЭкспедитор);
						МаршрутизацияЗаказовСервер.ПривязатьМашинунаСервере(Элементы.Список.ТекущаяСтрока.Ссылка, ВыбТранспорт, ВыбВодитель, ВыбЭкспедитор);
						КолПопыток = 4;
						ПривязкаВыполнена = Истина;
						Продолжить;	
					Исключение
						КолПопыток = КолПопыток + 1;
					КонецПопытки;
				КонецЦикла;	
				
				Если НЕ ПривязкаВыполнена Тогда	
					Сообщить("Привязка не выполнена!");			
				КонецЕсли;			
				Элементы.Список.Обновить();
			КонецеСли;
			
			
			
			Если ПоменятьМестами Тогда
				КолПопыток = 1;
				ПривязкаВыполнена = Ложь;
				Пока КолПопыток < 4 Цикл		
					Попытка
						МаршрутизацияЗаказовСервер.ПривязатьДанныеПоРейсуКЗаборамНаСервере(ВыбРейс,ТекущийТранспорт,ТекущийВодитель,ТекущийЭкспедитор);
						МаршрутизацияЗаказовСервер.ПривязатьМашинунаСервере(ВыбРейс,ТекущийТранспорт,ТекущийВодитель,ТекущийЭкспедитор);
						КолПопыток = 4;
						ПривязкаВыполнена = Истина;
						Продолжить;	
					Исключение
						КолПопыток = КолПопыток + 1;
					КонецПопытки;
				КонецЦикла;
				
				Если НЕ ПривязкаВыполнена Тогда	
					Сообщить("Привязка не выполнена!");			
				КонецЕсли;				
				Элементы.Список.Обновить();
			КонецЕсли;
			
		КонецеСли;
		
	КонецеСли;	
КонецПроцедуры

//&НаСервере
//Процедура ПривязатьДанныеПоРейсуКЗаборамНаСервере(Рейс, Машина, Водитель, Экспедитор)
//    
//    Запрос = Новый Запрос;
//    Запрос.Текст = 
//        "ВЫБРАТЬ
//        |   ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.ЗаборТовара).Ссылка КАК Забор
//        |ИЗ
//        |   Документ.Рейс.Заказы КАК РейсЗаказы
//        |ГДЕ
//        |   РейсЗаказы.Заказ.Ссылка ССЫЛКА Документ.ЗаборТовара
//        |   И РейсЗаказы.Ссылка = &Рейс";
//        
//    Запрос.УстановитьПараметр("Рейс",Рейс);
//    РезультатЗапроса = Запрос.Выполнить();
//    
//    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//    
//    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//        ЗаборОбъект = ВыборкаДетальныеЗаписи.Забор.ПолучитьОбъект();
//        ЗаборОбъект.Транспорт = Машина;
//        ЗаборОбъект.Водитель = Водитель;
//        ЗаборОбъект.Экспедитор = Экспедитор;
//        ЗаборОбъект.Записать(РежимЗаписиДокумента.Запись);
//    КонецЦикла;
//    

//КонецПроцедуры // ()


&НаКлиенте
Процедура ОткрытьСписокРейсовЗаСегодня(Команда)
	//ТабличныйДокумент = ПечатьСпискаРейсов();
	//ТабличныйДокумент.Показать();
	ОткрытьФорму("Документ.Рейс.Форма.ВыборПериода");
КонецПроцедуры

&НаСервере
Функция ПечатьСпискаРейсов()
	Макет = Документы.Рейс.ПолучитьМакет("СписокРейсов");
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|   ДокументРейс.Ссылка,
	|   ДокументРейс.ПометкаУдаления,
	|   ДокументРейс.Номер,
	|   ДокументРейс.Дата,
	|   ДокументРейс.Проведен,
	|   ДокументРейс.Транспорт,
	|   ДокументРейс.Идентификатор,
	|   ДокументРейс.НомерПалетты КАК НомерПалетты,
	|   ДокументРейс.РежимЗагрузкиДанных,
	|   ДокументРейс.РейсМестнойДоставки,
	|   ДокументРейс.МоментВремени,
	|   ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК ПривязанныйТранспорт,
	|   ДокументРейс.ДатаРейса
	|ИЗ
	|   Документ.Рейс КАК ДокументРейс
	|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	|       ПО (ПривязкаМашинКРейсамСрезПоследних.Рейс = ДокументРейс.Ссылка)
	|ГДЕ
	|   НЕ ДокументРейс.ПометкаУдаления
	|   И ДокументРейс.ДатаРейса МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|   НомерПалетты
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ТабличныйДокумент.Вывести(ОбластьШапка);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаКлиенте
Процедура ПечатьМаршрутногоЛиста(Команда)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТекДанные = Элементы.Список.ТекущиеДанные;
	may.РаспечаткаМаршрутногоЛиста(ТекДанные.Ссылка, Ложь);
	ТабличныйДокумент = ПечатьМаршрутногоЛистаСервер(ТекДанные.Ссылка, ТабличныйДокумент);		
	ТабличныйДокумент.Показать();
	may.РаспечаткаМаршрутногоЛиста(ТекДанные.Ссылка, Истина);
	Если Не ПараметрыСеансаЭтоТестоваяСреда() Тогда  //
		
		may.ОтправитьСМСПоРейсу(ТекДанные.Ссылка);
		
		// Якурнов 09.10.2018 9:46:58 PostingGiveoutToCourier
		oz_РаботаССервисом.ОбработатьВыдачуКурьеру_OZONПоРейсу(ТекДанные.Ссылка);
		
	КонецЕсли;	
КонецПроцедуры

// Якурнов 26.07.2018 13:08:40
&НаСервере
Функция ПараметрыСеансаЭтоТестоваяСреда()
	Возврат ПараметрыСеанса.ЭтоТестоваяСреда;
КонецФункции

&НаСервере
Функция ПечатьМаршрутногоЛистаСервер(РейсСсылка, ТабличныйДокумент)
	
	Макет = Документы.Рейс.ПолучитьМакет("МаршрутныйЛист_Горизонтальный");
	//ТабличныйДокумент = Новый ТабличныйДокумент;	
	
	//ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрокаЗаголовок = Макет.ПолучитьОбласть("СтрокаЗаголовок");		
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаЗаказ");			
	ОбластьЗабор = Макет.ПолучитьОбласть("СтрокаЗабор");
	ОбластьТекст = Макет.ПолучитьОбласть("Текст2");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьАвтоНадЗаголовком = Макет.ПолучитьОбласть("АвтоНадЗаголовком");
	ОбластьКолонтитул = Макет.ПолучитьОбласть("Колонтитул");
	
	
	//ЯчейкаПоездки = ТабДок.Область("R7C9:R9C9");
	
	МассивОбластей = Новый Массив;
	
	// шапка
	ЗапросПоРейсу = Новый Запрос("ВЫБРАТЬ
	|	ПривязкаМашинКРейсамСрезПоследних.Период,
	|	ПривязкаМашинКРейсамСрезПоследних.Рейс,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор,
	|	ПривязкаМашинКРейсамСрезПоследних.КтоПривязал
	|ИЗ
	|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	|ГДЕ
	|	ПривязкаМашинКРейсамСрезПоследних.Рейс = &Рейс");
	ЗапросПоРейсу.УстановитьПараметр("Рейс", РейсСсылка);	
	РезРейс = ЗапросПоРейсу.Выполнить().Выбрать();
	Если РезРейс.Следующий() Тогда		
		МаркаАвто = РезРейс.Транспорт.Марка;
		ГосНомер  = РезРейс.Транспорт.НомерГосударственнойРегистрации;
		ОбластьШапка.Параметры.ДанныеРейса = "Водитель: " + РезРейс.Водитель + Символы.ПС 
		+ ?(ЗначениеЗаполнено(РезРейс.Экспедитор), "Экспедитор: " + РезРейс.Экспедитор + Символы.ПС, ""); 
		//+ "Авто: " + МаркаАвто + ", " + ГосНомер;
	КонецЕсли;
	
	НомерМаршрута = РейсСсылка.НомерПалетты;
	
	//ОбластьШапка.Параметры.ТекущееВремя = ТекущаяДата();
	
	КолЗаказов = 0;
	КолЗаборов = 0;
	КолКредитныхДоговоров = 0;
	КолБезнальныхДокументов	= 0;
	
	//CeHbKA #4513 06.04.2021
	ПодписаниеСопроводительныхДокументов = 0;
	//CeHbKA #4513 06.04.2021
	
	//+++ БАО 25.05.2017 №900
	КолЛореальВ2В = 0;
	
	ЛореальВ2В = Справочники.Контрагенты.НайтиПоКоду("Shop_680");
	//--- БАО 25.05.2017 №900
	
	DirectCredit = Справочники.Контрагенты.НайтиПоКоду("Shop_234");
	DirectCredit_Папка = Справочники.Контрагенты.НайтиПоКоду("Shop_101");
	Poscredit = Справочники.Контрагенты.НайтиПоКоду("Shop_391");
	
	
	ЗапросЗаказы = Новый Запрос("ВЫБРАТЬ
	|	РейсЗаказы.Ссылка КАК Ссылка,
	|	РейсЗаказы.НомерСтроки КАК НомерСтроки,
	|	РейсЗаказы.НомерПоездки КАК НомерПоездки,
	|	РейсЗаказы.СтатусЗаказа КАК СтатусЗаказа,
	|	РейсЗаказы.ВидЗаказа КАК ВидЗаказа,
	|	РейсЗаказы.ПродолжительностьОперации КАК ПродолжительностьОперации,
	|	РейсЗаказы.Заказ КАК Заказ,
	|	РейсЗаказы.Объем КАК Объем,
	|	РейсЗаказы.Вес КАК Вес,
	|	РейсЗаказы.ЗаказДобавленВРучную КАК ЗаказДобавленВРучную,
	|	РейсЗаказы.УдаленИзРейса КАК УдаленИзРейса,
	|	РейсЗаказы.ЗагруженИзВероут КАК ЗагруженИзВероут,
	|	РейсЗаказы.Заказ.ТипОплаты КАК ТипОплаты,
	|	ВЫБОР
	|		КОГДА РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ""Доставка""
	|		ИНАЧЕ ""Забор""
	|	КОНЕЦ КАК ТипЗаказа,
	//+++ БАО 25.05.2017 №900
	|	РейсЗаказы.Заказ.Контрагент КАК Контрагент,
	//--- БАО 25.05.2017 №900
	|	РейсЗаказы.Заказ.ВладелецТовара КАК ВладелецТовара,
	|	РейсЗаказы.Заказ.ВладелецТовара.Родитель КАК ВладелецТовараРодитель
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|ГДЕ
	|	РейсЗаказы.Ссылка = &Ссылка
	|	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ");
	ЗапросЗаказы.УстановитьПараметр("Ссылка", РейсСсылка);
	РезЗаказы = ЗапросЗаказы.Выполнить().Выбрать();
	
	Пока РезЗаказы.Следующий() Цикл	
		Если РезЗаказы.ТипЗаказа = "Доставка" Тогда				
			КолЗаказов = КолЗаказов + 1;
			
			//кредитные договоры
			Если РезЗаказы.ТипОплаты = 2 ИЛИ РезЗаказы.ВладелецТовара = DirectCredit ИЛИ РезЗаказы.ВладелецТовара = Poscredit ИЛИ РезЗаказы.ВладелецТовараРодитель = DirectCredit_Папка Тогда			
				КолКредитныхДоговоров = КолКредитныхДоговоров + 1;			
			КонецЕсли;
			
			//безнальные документы
			//+Степанов Не учитываем документы по DirectCredit и Poscredit 
			//Если РезЗаказы.ТипОплаты = 4 Тогда			
			Если РезЗаказы.ТипОплаты = 4 И Не (РезЗаказы.ВладелецТовара = DirectCredit ИЛИ РезЗаказы.ВладелецТовара = Poscredit ИЛИ РезЗаказы.ВладелецТовараРодитель = DirectCredit_Папка) Тогда 			
				КолБезнальныхДокументов = КолБезнальныхДокументов + 1;			
			КонецЕсли;
			
			//+++ БАО 25.05.2017 №900
			Если РезЗаказы.ВладелецТовара = ЛореальВ2В Тогда
				КолЛореальВ2В = КолЛореальВ2В + 1;	
			КонецЕсли;	
			//--- БАО 25.05.2017 №900
			
			
		ИначеЕсли РезЗаказы.ТипЗаказа = "Забор" Тогда			
			КолЗаборов = КолЗаборов + 1;
			
			//+++ БАО 25.05.2017 №900
			Если РезЗаказы.Контрагент = ЛореальВ2В Тогда
				КолЛореальВ2В = КолЛореальВ2В + 1;	
			КонецЕсли;	
			//--- БАО 25.05.2017 №900
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	//Для каждого ЗакСтр Из РейсСсылка.Заказы Цикл	
	//	Если НЕ ЗакСтр.УдаленИзРейса Тогда			
	//		Если ТипЗнч(ЗакСтр.Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда				
	//			КолЗаказов = КолЗаказов + 1;
	//			
	//			//кредитные договоры
	//			Если ЗакСтр.Заказ.ТипОплаты = 2 ИЛИ ЗакСтр.Заказ.ВладелецТовара = DirectCredit ИЛИ ЗакСтр.Заказ.ВладелецТовара = Poscredit ИЛИ ЗакСтр.Заказ.ВладелецТовара.Родитель = DirectCredit_Папка Тогда			
	//				КолКредитныхДоговоров = КолКредитныхДоговоров + 1;			
	//			КонецЕсли;
	//			
	//			//безнальные документы
	//			Если ЗакСтр.Заказ.ТипОплаты = 4 Тогда			
	//				КолБезнальныхДокументов = КолБезнальныхДокументов + 1;			
	//			КонецЕсли;
	//			
	//		ИначеЕсли ТипЗнч(ЗакСтр.Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда			
	//			КолЗаборов = КолЗаборов + 1;		
	//		КонецЕсли;
	//					
	//	КонецЕсли;		
	//КонецЦикла;
	
	ОбластьШапка.Параметры.НомерМаршрута = НомерМаршрута;
	ОбластьШапка.Параметры.КолЗаказов = КолЗаказов;
	ОбластьШапка.Параметры.КолЗаборов = КолЗаборов;	
	ОбластьШапка.Параметры.Штрихкод = lem.глСформироватьБарКодEAN13(ОбщегоНазначения.СформироватьШтрихкодРейса(РейсСсылка));
	
	
	//ТабличныйДокумент.Вывести(ОбластьШапка);
	//МассивОбластей.Добавить(ОбластьШапка);
	//ТабличныйДокумент.Вывести(ОбластьСтрокаЗаголовок);
	//МассивОбластей.Добавить(ОбластьСтрокаЗаголовок);
	
	// строки заказов
	НПП = 1;
	Запрос = новый Запрос("ВЫБРАТЬ
	|	РейсЗаказы.НомерПоездки КАК НомерПоездки,
	|	""З"" КАК ТипЗаказа,
	|	РейсЗаказы.Заказ.Номер КАК Номер,
	|	РейсЗаказы.Заказ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
	|	РейсЗаказы.Заказ.Телефон КАК Телефон,
	|	РейсЗаказы.Заказ.АдресДоставки КАК АдресДоставки,
	|	РейсЗаказы.Заказ.ВремяДоставкиС КАК ИнтервалС,
	|	РейсЗаказы.Заказ.ВремяДоставкиПо КАК ИнтервалПо,
	|	РейсЗаказы.Заказ.ТипОплаты КАК ТипОплаты,
	|	РейсЗаказы.Заказ.СуммаДокумента КАК СуммаДокумента,
	|	РейсЗаказы.Заказ.ВесЗабора КАК Вес,
	|	ВЫБОР
	|		КОГДА РейсЗаказы.Заказ.Контрагент.Родитель.ОсновнойМагазин ЕСТЬ NULL
	|				ИЛИ РейсЗаказы.Заказ.Контрагент.Родитель.ОсновнойМагазин = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РейсЗаказы.Заказ.Контрагент
	|		ИНАЧЕ РейсЗаказы.Заказ.Контрагент.Родитель.ОсновнойМагазин
	|	КОНЕЦ КАК Партнер,
	|	NULL КАК КоличествоМест,
	|	РейсЗаказы.Заказ.Грузополучатель КАК Грузополучатель,
	|	NULL КАК ИнтервалДоставкиСтрокой,
	|	РейсЗаказы.Заказ КАК Заказ,
	|	РейсЗаказы.НомерСтроки КАК НомерСтроки,
	|	РейсЗаказы.Заказ.ОбъемЗабора КАК ОбъемЗабора
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|ГДЕ
	|	РейсЗаказы.Заказ ССЫЛКА Документ.ЗаборТовара
	|	И РейсЗаказы.Ссылка.Ссылка = &Ссылка
	|	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РейсЗаказы.НомерПоездки,
	|	""Д"",
	|	РейсЗаказы.Заказ.Номер,
	|	РейсЗаказы.Заказ.НомерВнешнегоЗаказа,
	|	РейсЗаказы.Заказ.Телефон,
	|	РейсЗаказы.Заказ.АдресДоставки,
	|	новаМестнаяДоставка.ВремяПрибытияС,
	|	новаМестнаяДоставка.ВремяПрибытияПо,
	|	РейсЗаказы.Заказ.ТипОплаты,
	|	РейсЗаказы.Заказ.СуммаДокумента,
	|	ВЫБОР
	|		КОГДА НЕ Накладная003Заказы.Вес ЕСТЬ NULL
	|				И Накладная003Заказы.Вес > 0
	|			ТОГДА Накладная003Заказы.Вес
	|		ИНАЧЕ РейсЗаказы.Заказ.ОбщийВес
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РейсЗаказы.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин ЕСТЬ NULL
	|				ИЛИ РейсЗаказы.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РейсЗаказы.Заказ.ВладелецТовара
	|		ИНАЧЕ РейсЗаказы.Заказ.ВладелецТовара.Родитель.ОсновнойМагазин
	|	КОНЕЦ,
	|	РейсЗаказы.Заказ.КоличествоМест,
	|	РейсЗаказы.Заказ.Грузополучатель,
	|	новаМестнаяДоставка.ИнтервалДоставкиСтрокой,
	|	РейсЗаказы.Заказ,
	|	РейсЗаказы.НомерСтроки,
	|	NULL
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО РейсЗаказы.Заказ.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Накладная003.Заказы КАК Накладная003Заказы
	|		ПО РейсЗаказы.Заказ = Накладная003Заказы.Заказ
	|			И (Накладная003Заказы.Ссылка.Проведен)
	|ГДЕ
	|	РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|	И РейсЗаказы.Ссылка.Ссылка = &Ссылка
	|	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.НомерПоездки КАК НомерПоездки,
	|	ВТ.ТипЗаказа КАК ТипЗаказа,
	|	ВТ.Номер КАК Номер,
	|	ВТ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
	|	ВТ.Телефон КАК Телефон,
	|	ВТ.АдресДоставки КАК АдресДоставки,
	|	ЧАС(ВТ.ИнтервалС) КАК ИнтервалС,
	|	ЧАС(ВТ.ИнтервалПо) КАК ИнтервалПо,
	|	ВТ.ТипОплаты КАК ТипОплатыЧисло,
	|	ВЫБОР
	|		КОГДА ПараметрыКонтрагентовСрезПоследних.ПриёмИтогоСКлиента
	|			ТОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0)
	|		ИНАЧЕ ВТ.СуммаДокумента
	|	КОНЕЦ КАК СуммаДокумента2,
	|	ВТ.Вес КАК Вес,
	|	ВТ.Партнер КАК Партнер,
	|	ВТ.КоличествоМест КАК КоличествоМест,
	|	ВТ.Грузополучатель КАК Грузополучатель,
	|	ВТ.ИнтервалДоставкиСтрокой КАК ИнтервалДоставкиСтрокой,
	|	ЕСТЬNULL(ВТ.Заказ.ЗапретЧастичногоВыкупа, ЛОЖЬ) КАК ЗапретЧастичногоВыкупа,
	|	ЕСТЬNULL(ПараметрыКонтрагентовСрезПоследних.ЗапретСменыОплаты, ЛОЖЬ) КАК ЗапретСменыОплаты,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.СОжиданием, ЛОЖЬ)
	|			ТОГДА ""С вскрытием""
	|		ИНАЧЕ ""Без вскрытия""
	|	КОНЕЦ КАК СОжиданием,
	|	ЕСТЬNULL(ВложенныйЗапрос.НашВес, 0) КАК НашВес,
	|	ВТ.НомерСтроки КАК НомерСтроки,
	//Асеев 04.05.2021 (Задача № 3837)>>>
	//|	КатегорииДоставки2014.Родитель КАК КатегорияДоставки,
	//Асеев 04.05.2021 (Задача № 3837)<<<
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП КАК КатегорияДляРасчетаЗП,
	|	ЕСТЬNULL(ВложенныйЗапрос1.ВесПотоварный, 0) КАК ВесПотоварный,
	|	ВТ.Заказ.ПредоплатаПоКредиту КАК ПредоплатаПоКредиту,
	|	ВТ.Заказ КАК Заказ,
	|	ВЫБОР
	|		КОГДА ВТ.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ.Заказ.УчитыватьИтогоКОплате
	|						ТОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0)
	|					ИНАЧЕ ВТ.СуммаДокумента
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДокумента,
	|	ВЫБОР
	|		КОГДА ВТ.Заказ ССЫЛКА Документ.ЗаборТовара
	|			ТОГДА ВТ.Заказ.Контрагент
	|		ИНАЧЕ ВТ.Заказ.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ЕСТЬNULL(ВложенныйЗапрос2.Поездки, 0) + 1 КАК Поездки,
	|	ВложенныйЗапрос1.Сумма КАК СуммаПоТоварам,
	|	ВТ.ОбъемЗабора КАК ОбъемЗабора,
	|	ДополнительныеПараметрыЗаказа.КатегорияДляРасчетаЗП_Миго КАК КатегорияДляРасчетаЗП_Миго
	//CeHbKA 06.04.2021	
	|	,ДополнительныеПараметрыЗаказа.ПодписаниеИВозвратСопрДокументов КАК ПодписаниеИВозвратСопрДокументов
	//CeHbKA 06.04.2021	
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних КАК ПараметрыКонтрагентовСрезПоследних
	|		ПО ВТ.Партнер = ПараметрыКонтрагентовСрезПоследних.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|		ПО ВТ.ТипОплаты = ТипыОплат.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО ВТ.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(ЕСТЬNULL(ФиксацияВесаСрезПоследних.Вес, 0)) КАК НашВес,
	|			ФиксацияВесаСрезПоследних.Заказ КАК Заказ
	|		ИЗ
	|			РегистрСведений.ФиксацияВеса.СрезПоследних(
	|					,
	|					Заказ В
	|						(ВЫБРАТЬ
	|							ВТ.Заказ
	|						ИЗ
	|							ВТ КАК ВТ)) КАК ФиксацияВесаСрезПоследних
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ФиксацияВесаСрезПоследних.Заказ) КАК ВложенныйЗапрос
	|		ПО ВТ.Заказ = ВложенныйЗапрос.Заказ
	//Асеев 04.05.2021 (Задача № 3837)>>>
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииДоставки2014 КАК КатегорииДоставки2014
	//|		ПО ВТ.Заказ.КатегорияДоставки = КатегорииДоставки2014.Категория
	//Асеев 04.05.2021 (Задача № 3837)<<<
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО ВТ.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(РеализацияТоваровУслугТовары.Вес * РеализацияТоваровУслугТовары.Количество) КАК ВесПотоварный,
	|			РеализацияТоваровУслугТовары.Ссылка.Ссылка КАК Ссылка,
	|			СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма
	|		ИЗ
	|			Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ГДЕ
	|			РеализацияТоваровУслугТовары.Ссылка.Ссылка В
	|					(ВЫБРАТЬ
	|						ВТ.Заказ
	|					ИЗ
	|						ВТ КАК ВТ)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РеализацияТоваровУслугТовары.Ссылка.Ссылка) КАК ВложенныйЗапрос1
	|		ПО ВТ.Заказ = ВложенныйЗапрос1.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КОЛИЧЕСТВО(СостоянияЗаказов.Период) КАК Поездки,
	|			СостоянияЗаказов.Заказ КАК Заказ
	|		ИЗ
	|			РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	|		ГДЕ
	|			СостоянияЗаказов.Регистратор ССЫЛКА Документ.новаОтчетВодителя
	|			И СостоянияЗаказов.Заказ В
	|					(ВЫБРАТЬ
	|						ВТ.Заказ
	|					ИЗ
	|						ВТ КАК ВТ)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СостоянияЗаказов.Заказ) КАК ВложенныйЗапрос2
	|		ПО ВТ.Заказ = ВложенныйЗапрос2.Заказ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки");
	Запрос.УстановитьПараметр("Ссылка", РейсСсылка);
	Рез = Запрос.Выполнить().Выбрать();
	
	ВсегоСтрок = Рез.Количество();   
	ВысотаОбластей = 5;
	
	
	СтраницВсего = 0; НомерСтраницы = 0;
	Если ВсегоСтрок <= 4 Тогда
		СтраницВсего = 1;
	Иначе
		ВсегоСтрок = ВсегоСтрок - 7;
		СтраницВсего = СтраницВсего + 1;
		Пока ВсегоСтрок > 0 Цикл
			Если ВсегоСтрок >= 8 Тогда
				СтраницВсего = СтраницВсего + 1;
				ВсегоСтрок = ВсегоСтрок - 8;
				Если ВсегоСтрок = 0 Тогда
					СтраницВсего = СтраницВсего + 1;	
				КонецЕсли;
			Иначе
				Если ВсегоСтрок > 5 Тогда			
					СтраницВсего = СтраницВсего + 2;					
				Иначе				
					СтраницВсего = СтраницВсего + 1;					
				КонецЕсли;	
				ВсегоСтрок = 0;
			КонецЕсли;		    					
		КонецЦикла;		
		
	КонецЕсли;
	
	
	НомерСтраницы = 1;	
	
	ТекВр = "" + Формат(ТекущаяДата(), "ДФ='dd-MM-yyyy HH:mm'");
	
	ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
	ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
	ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
	ТабличныйДокумент.Вывести(ОбластьКолонтитул);
	
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	МассивОбластей.Добавить(ОбластьШапка);
	ТабличныйДокумент.Вывести(ОбластьСтрокаЗаголовок);
	МассивОбластей.Добавить(ОбластьСтрокаЗаголовок);
	
	
	НуженТекст = Ложь;
	СуммаНаличные = 0;
	СуммаТерминал = 0;
	
	НомерСтраницы = 1;
	НомерСтроки = 1;
	
	
	
	Пока Рез.Следующий() Цикл
		
		Если Рез.ТипЗаказа = "Д" Тогда    // --- доставка
			
			КрасимПоездки = Ложь;
			КрасимЗапреты = Ложь;
			
			ОбластьСтрока.Параметры.НПП          	= НПП;
			ОбластьСтрока.Параметры.ТипЗаказа    	= Рез.ТипЗаказа;
			ОбластьСтрока.Параметры.НомерЗаказа  	= Рез.Номер;
			ОбластьСтрока.Параметры.ВнешнийНомер 	= Рез.НомерВнешнегоЗаказа;
			ОбластьСтрока.Параметры.КолМест      	= Рез.КоличествоМест;
			
			СуммаВозврат = 0;
			Если ЗначениеЗаполнено(Рез.Возврат) Тогда
				СуммаВозврат = Рез.Возврат.Товары.Итог("Сумма");
			КонецЕсли;
			
			// МАС - 15.11.2017 - оптимизация --->> 	
			СуммаТоваров = Рез.СуммаПоТоварам;
			//НайРеализ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(СокрЛП(Рез.Номер));
			//Если ЗначениеЗаполнено(НайРеализ) Тогда
			//	СуммаТоваров = НайРеализ.Товары.Итог("Сумма");	
			//КонецЕсли;
			// <<--- МАС
			
			// МАС - 03.08.2017 - №1456 --->> 
			//ИтоговаяСумма = СуммаТоваров - СуммаВозврат;
			ИтоговаяСумма = Рез.СуммаДокумента - СуммаВозврат;
			// <<--- МАС 
			
			
			
			//ОбластьСтрока.Параметры.Сумма        	= ?(Рез.СуммаДокумента <> 0, Рез.СуммаДокумента, СуммаВозврат);
			Если Рез.ТипОплаты = Справочники.ТипыОплат.ОплаченоВМагазине ИЛИ Рез.ТипОплаты = Справочники.ТипыОплат.БезРасчетов Тогда // Задача № 2901			
				ОбластьСтрока.Параметры.Сумма        	= 0;				
			Иначе			
				ОбластьСтрока.Параметры.Сумма        	= ?(СуммаВозврат <> 0, ИтоговаяСумма, Рез.СуммаДокумента);				
			КонецЕсли;
			
			ОбластьСтрока.Параметры.ФСумма          = "";
			ОбластьСтрока.Параметры.Контакты	 	= "" + Рез.Грузополучатель + ", " + Рез.Телефон;	
			ОбластьСтрока.Параметры.Адрес		 	= Рез.АдресДоставки;
			
			////+++ БАО 15.08.2017 №1678 
			//Если ЗначениеЗаполнено(Рез.ВладелецТовара) И рэИнтеграцияРэдЭкспресс.ЭтоРЭД(Рез.ВладелецТовара) Тогда
			//	ОбластьСтрока.Параметры.Стриж = "РЕД";
			//Иначе
			//	ОбластьСтрока.Параметры.Стриж = "Стриж";
			//КонецЕсли;	
			////--- БАО 15.08.2017 №1678 
			
			//ОбластьСтрока.Параметры.Вес          	= МАКС(Рез.Вес, Рез.НашВес);
			//ОбластьСтрока.Параметры.Вес          	= "" + МАКС(Рез.Вес, Рез.НашВес) + Символы.ПС + Рез.КатегорияДоставки;
			
			
			// МАС - 16.02.2018 - № --->> 
			//ОбластьСтрока.Параметры.Вес          	= "" + МАКС(Рез.Вес, Рез.НашВес, Рез.ВесПотоварный) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП), Рез.КатегорияДляРасчетаЗП.Родитель, Рез.КатегорияДоставки);
			ОбластьСтрока.Параметры.Вес1 = "";
			ОбластьСтрока.Параметры.Вес2 = "";
			//Если Рез.НашВес > 0 Тогда
			//	ОбластьСтрока.Параметры.Вес2          	= "" + МАКС(Рез.Вес, Рез.НашВес, Рез.ВесПотоварный) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП), Рез.КатегорияДляРасчетаЗП.Родитель, Рез.КатегорияДоставки);
			//Иначе	
			//	//ОбластьСтрока.Параметры.Вес1          	= "" + ?(Рез.ВесПотоварный > 0, Рез.ВесПотоварный, Рез.Вес) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП), Рез.КатегорияДляРасчетаЗП.Родитель, Рез.КатегорияДоставки);
			//	ОбластьСтрока.Параметры.Вес1          	= "" + МАКС(Рез.ВесПотоварный, Рез.Вес) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП), Рез.КатегорияДляРасчетаЗП.Родитель, Рез.КатегорияДоставки);
			//КонецЕсли;	
			// <<--- МАС 
			
			
			// МАС - 06.03.2018 - Теперь категория будет выводиться из МИГО --->> 
			Если Рез.НашВес > 0 Тогда
				ОбластьСтрока.Параметры.Вес2          	= "" + МАКС(Рез.Вес, Рез.НашВес, Рез.ВесПотоварный) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП_Миго), Рез.КатегорияДляРасчетаЗП_Миго, Рез.КатегорияДляРасчетаЗП);
			Иначе	
				//ОбластьСтрока.Параметры.Вес1          	= "" + ?(Рез.ВесПотоварный > 0, Рез.ВесПотоварный, Рез.Вес) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП), Рез.КатегорияДляРасчетаЗП.Родитель, Рез.КатегорияДоставки);
				ОбластьСтрока.Параметры.Вес1          	= "" + МАКС(Рез.ВесПотоварный, Рез.Вес) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.КатегорияДляРасчетаЗП_Миго), Рез.КатегорияДляРасчетаЗП_Миго, Рез.КатегорияДляРасчетаЗП);
			КонецЕсли;
			// <<--- МАС 
			
			
			
			
			
			
			ТелефонМагазина = Рез.Партнер.ТелефонИнтернетМагазина;
			Если Рез.Партнер.Код = "Shop_248 " ИЛИ Рез.Партнер.Код = "Shop_601 " ИЛИ Рез.Партнер.Код = "Shop_752 " Тогда
				ТелефонМагазина = "8-495-974-35-64";
			ИначеЕсли Рез.Партнер.Код = "Shop_438 " Тогда	
				ТелефонМагазина = "8-499-643-33-64";
			КонецЕсли;
			
			ОбластьСтрока.Параметры.ПартнерТелефон  = "" + ?((Рез.Партнер.Код = "Shop_248 " ИЛИ Рез.Партнер.Код = "Shop_601 " ИЛИ Рез.Партнер.Код = "Shop_752 "), "YD", Рез.Партнер) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.Партнер), ТелефонМагазина, "");
			ОбластьСтрока.Параметры.Интервал        = "" + Рез.ИнтервалС + " - " + Рез.ИнтервалПо;
			ОбластьСтрока.Параметры.ТипОплаты       = Рез.ТипОплаты;
			
			
			// МАС - 31.10.2017 - № --->>  Поездки
			ОбластьСтрока.Параметры.Поездки = Строка(Рез.Поездки);
			Если Рез.Поездки >= 3 Тогда		
				КрасимПоездки = Истина		
			КонецЕсли;
			// <<--- МАС 
			
			
			Если Рез.ТипОплаты.Код = 1 Тогда				
				СуммаНаличные = СуммаНаличные + Рез.СуммаДокумента;		
			ИначеЕсли Рез.ТипОплаты.Код = 5 Тогда		
				СуммаТерминал = СуммаТерминал + Рез.СуммаДокумента;			
			КонецЕсли;
			
			
			Если Рез.ТипОплаты.Код = 2 Тогда
				СменаОплаты = "";	
				ОбластьСтрока.Параметры.Сумма  = Рез.СуммаДокумента - Рез.ПредоплатаПоКредиту;
			ИначеЕсли Рез.ТипОплаты.Код = 4 Тогда
				СменаОплаты = "";	
				ОбластьСтрока.Параметры.Сумма  = "-";
			ИначеЕсли Рез.ТипОплаты.Код = 7 Тогда	
				СменаОплаты = "";
				ОбластьСтрока.Параметры.ФСумма = "ОПЛАЧЕНО";
				ОбластьСтрока.Параметры.Сумма  = "-";
			Иначе					
				СменаОплаты = ?(Рез.ЗапретСменыОплаты = Истина, "Смена оплаты запрещена", "Смена оплаты разрешена");
				Если Рез.ЗапретСменыОплаты Тогда			
					КрасимЗапреты = Истина;				
				КонецЕсли;	
			КонецЕсли;
			
			Если Рез.ТипОплаты.Код = 2 Тогда		
				ЧастичныйВыкуп = "";			
			Иначе	
				Если Рез.Партнер.Код = "Shop_602 " Тогда // Бетховен	
					ЧастичныйВыкуп = ?(Рез.Заказ.ЗапретЧастичногоВыкупа = Истина, "Частичный выкуп запрещен", "Частичный выкуп разрешен");
					Если Рез.Заказ.ЗапретЧастичногоВыкупа Тогда		
						КрасимЗапреты = Истина;					
					КонецЕсли;
				Иначе				
					ЧастичныйВыкуп = ?(Рез.ЗапретЧастичногоВыкупа = Истина, "Частичный выкуп запрещен", "Частичный выкуп разрешен");			
					Если Рез.ЗапретЧастичногоВыкупа Тогда		
						КрасимЗапреты = Истина;					
					КонецЕсли;
				КонецЕсли;							
			КонецЕсли;
			
			
			ОбластьСтрока.Параметры.ПараметрыОплаты = ЧастичныйВыкуп + ?(СменаОплаты = "", "", ?(ЧастичныйВыкуп = "", "", Символы.ПС) + СменаОплаты)
			+ ?((Рез.Партнер.Код = "Shop_248 " ИЛИ Рез.Партнер.Код = "Shop_601 " ИЛИ Рез.Партнер.Код = "Shop_752 "), Символы.ПС + Рез.СОжиданием, "");		
			
			//CeHbKA #4513 06.04.2021
			Если Рез.ПодписаниеИВозвратСопрДокументов = Истина Тогда
				ОбластьСтрока.Параметры.ПараметрыОплаты = ОбластьСтрока.Параметры.ПараметрыОплаты + "" + Символы.ПС + "Подписание сопроводительного документа";
				ПодписаниеСопроводительныхДокументов = ПодписаниеСопроводительныхДокументов + 1;
			КонецЕсли; 
			//CeHbKA #4513 06.04.2021									
			
			Если ВысотаОбластей + 10 > 34 Тогда
				ТабличныйДокумент.Вывести(ОбластьТекст);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				НуженТекст = Ложь;
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
				ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
				ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
				ТабличныйДокумент.Вывести(ОбластьКолонтитул);		
				
				
				ТабличныйДокумент.Вывести(ОбластьСтрокаЗаголовок);
				ВысотаОбластей = 2;
			КонецЕсли;
			
			
			
			// >>>  Выделение фона  >>>		
			ОбластьОформленияСтроки = ТабличныйДокумент.Вывести(ОбластьСтрока);	
			Если КрасимПоездки Тогда			
				ТабличныйДокумент.Область(ОбластьОформленияСтроки.Верх, 10, ОбластьОформленияСтроки.Низ, 10).ЦветФона = Новый Цвет(213,213,213);			
			КонецЕсли;	
			Если КрасимЗапреты Тогда			
				ТабличныйДокумент.Область(ОбластьОформленияСтроки.Верх, 11, ОбластьОформленияСтроки.Низ, 11).ЦветФона = Новый Цвет(213,213,213);			
			КонецЕсли;
			// <<<  Выделение фона  <<<
			
			НуженТекст = Истина;
			ВысотаОбластей = ВысотаОбластей + 3;
			
			
			Если НПП = ВсегоСтрок Тогда
				ТабличныйДокумент.Вывести(ОбластьТекст);
				НуженТекст = Ложь;
				ВысотаОбластей = ВысотаОбластей + 5;
			КонецЕсли;
			
			Если ВысотаОбластей > 34 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				НуженТекст = Ложь;
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
				ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
				ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
				ТабличныйДокумент.Вывести(ОбластьКолонтитул);		
				
				ВысотаОбластей = 2;
			КонецЕсли;
			
			НПП = НПП + 1;
			
		ИначеЕсли Рез.ТипЗаказа = "З" Тогда // --- забор
			
			// МАС - 26.12.2017 - №2148 --->> 
			Попытка			 
				ОбъемЗ = Рез.ОбъемЗабора;		
				Если ОбъемЗ = 0 Тогда		
					ОбъемныйБрэйк = "-";
					ОбъемЗ = "";
				Иначе	
					ОбъемныйБрэйк = ПолучитьБрейкСогласноОбъемуПартнера(Рез.Заказ, ОбъемЗ);		 
				КонецЕсли;	 
			Исключение		 
			КонецПопытки;
			ОбластьЗабор.Параметры.Вес          	= "" + ОбъемЗ + Символы.ПС + ОбъемныйБрэйк;
			ОбластьЗабор.Параметры.ПараметрыОплаты  = "" + ОбъемЗ;
			ОбластьЗабор.Параметры.ТипОплаты        = "" + ОбъемныйБрэйк;
			// <<--- МАС 
			
			ОбластьЗабор.Параметры.НПП          	= НПП;
			ОбластьЗабор.Параметры.ТипЗаказа    	= Рез.ТипЗаказа;
			ОбластьЗабор.Параметры.НомерЗаказа  	= Рез.Номер;
			ОбластьЗабор.Параметры.ВнешнийНомер 	= Рез.НомерВнешнегоЗаказа;
			ОбластьЗабор.Параметры.КолМест      	= Рез.КоличествоМест;
			ОбластьЗабор.Параметры.Сумма       	    = "-";
			//ОбластьЗабор.Параметры.ФСумма           = "-";
			ОбластьЗабор.Параметры.Контакты	 	    = "" + Рез.Грузополучатель + ", " + Рез.Телефон;
			ОбластьЗабор.Параметры.Адрес			= Рез.АдресДоставки;
			//
			
			ТелефонМагазина = Рез.Партнер.ТелефонИнтернетМагазина;
			Если Рез.Партнер.Код = "Shop_248 " ИЛИ Рез.Партнер.Код = "Shop_601 " ИЛИ Рез.Партнер.Код = "Shop_752 " Тогда
				ТелефонМагазина = "8-495-974-35-64";
			ИначеЕсли Рез.Партнер.Код = "Shop_438 " Тогда	
				ТелефонМагазина = "8-499-643-33-64";
			КонецЕсли;
			
			ОбластьЗабор.Параметры.ПартнерТелефон  = "" + ?((Рез.Партнер.Код = "Shop_248 " ИЛИ Рез.Партнер.Код = "Shop_601 " ИЛИ Рез.Партнер.Код = "Shop_752 "), "YD", Рез.Партнер) + Символы.ПС + ?(ЗначениеЗаполнено(Рез.Партнер), ТелефонМагазина, "");
			ОбластьЗабор.Параметры.Интервал        = "" + Рез.ИнтервалС + " - " + Рез.ИнтервалПо;
			//ОбластьЗабор.Параметры.ТипОплаты       = "";
			
			//ОбластьЗабор.Параметры.ПараметрыОплаты = "";
			
			// проверка влазит ли на лист		
			
			Если ВысотаОбластей + 10 > 34 Тогда
				ТабличныйДокумент.Вывести(ОбластьТекст);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				НуженТекст = Ложь;
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
				ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
				ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
				ТабличныйДокумент.Вывести(ОбластьКолонтитул);		
				
				ТабличныйДокумент.Вывести(ОбластьСтрокаЗаголовок);
				ВысотаОбластей = 2;
			КонецЕсли;
			
			
			
			ТабличныйДокумент.Вывести(ОбластьЗабор);
			НуженТекст = Истина;
			ВысотаОбластей = ВысотаОбластей + 3;
			
			
			Если НПП = ВсегоСтрок Тогда
				ТабличныйДокумент.Вывести(ОбластьТекст);
				НуженТекст = Ложь;
				ВысотаОбластей = ВысотаОбластей + 5;
			КонецЕсли;
			
			Если ВысотаОбластей > 34 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				НуженТекст = Ложь;
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
				ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
				ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
				
				ТабличныйДокумент.Вывести(ОбластьКолонтитул);		
				ВысотаОбластей = 2;
			КонецЕсли;
			
			
			НПП = НПП + 1;
		КонецЕсли;	
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	
	// подвал
	
	
	// проверка влазит ли на лист	
	//ВысотаОбластей = 2;
	
	Если НуженТекст Тогда	
		ТабличныйДокумент.Вывести(ОбластьТекст);	
		ВысотаОбластей = ВысотаОбластей + 5;
	КонецЕсли;	
	
	Если ВысотаОбластей + 10 > 34 Тогда		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		НомерСтраницы = НомерСтраницы + 1;
		ОбластьКолонтитул.Параметры.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц
		ОбластьКолонтитул.Параметры.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
		ОбластьКолонтитул.Параметры.ТекстСправа = ТекВр;
		ТабличныйДокумент.Вывести(ОбластьКолонтитул);		
		
		ВысотаОбластей = 1;
	КонецЕсли;
	
	ОбластьПодвал.Параметры.ИтогоНаличные = СуммаНаличные;
	ОбластьПодвал.Параметры.ИтогоТерминал = СуммаТерминал;
	
	ОбластьПодвал.Параметры.НомерМаршрута = НомерМаршрута;
	ОбластьПодвал.Параметры.МаркаАвто = МаркаАвто;
	ОбластьПодвал.Параметры.ГосНомер = ГосНомер;
	ОбластьПодвал.Параметры.ДатаРейса = Формат(РейсСсылка.Дата, "ДЛФ=DD");
	//ОбластьПодвал.Параметры.КолКредитныхДоговоров = КолКредитныхДоговоров;
	//CeHbKA #06.04.2021
	ОбластьПодвал.Параметры.ПодписаниеСопроводительныхДокументов = ПодписаниеСопроводительныхДокументов;
	//CeHbKA #06.04.2021
	ОбластьПодвал.Параметры.КолБезнальныхДокументов = КолБезнальныхДокументов;
	
	//+++ БАО 25.05.2017 №900
	ОбластьПодвал.Параметры.КолЛореальВ2В = КолЛореальВ2В;	
	//--- БАО 25.05.2017 №900
	
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	
	
	ТабличныйДокумент.ВерхнийКолонтитул.Выводить = Ложь;
	//ТабличныйДокумент.ВерхнийКолонтитул.ТекстСлева = "Стр." + НомерСтраницы + " из " + СтраницВсего; //нумерация страниц	
	//ТабличныйДокумент.ВерхнийКолонтитул.ТекстСправа = "" + Формат(ТекущаяДата(), "ДФ='dd-MM-yyyy HH:mm'");
	//ТабличныйДокумент.ВерхнийКолонтитул.ТекстВЦентре = "" + МаркаАвто + ", " + ГосНомер;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции // ()

&НаСервере
Функция ПечатьМаршрутныхЛистовНаСервере()
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Рейс.Ссылка
	|ИЗ
	|	Документ.Рейс КАК Рейс
	|ГДЕ
	|	Рейс.Проведен
	|	И Рейс.Дата МЕЖДУ &Дата1 И &Дата2");
	//Запрос.УстановитьПараметр("Дата1", НачалоДня(ТекущаяДата()));
	//Запрос.УстановитьПараметр("Дата2", КонецДня(ТекущаяДата()));
	
	Запрос.УстановитьПараметр("Дата1", НачалоДня(Дата("20160815")));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Дата("20160815")));
	
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Пока Рез.Следующий() Цикл	
		
		ТабличныйДокумент = ПечатьМаршрутногоЛистаСервер(Рез.Ссылка, ТабличныйДокумент);	
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//НомерСтраницы = НомерСтраницы + 1;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаКлиенте
Процедура ПечатьМаршрутныхЛистов(Команда)
	
	ОткрытьФорму("Документ.Рейс.Форма.ВыборПериода_МаршрутныйЛист");
	
	//ТабДок = ПечатьМаршрутныхЛистовНаСервере();
	//
	//ТабДок.Показать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьМаршрутныхЛистовСОбновлениемДанных(Команда)
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		Если lem.ПоРейсуВведеноПредварительноеЗакрытие(Элементы.Список.ТекущиеДанные.РейсМестнойДоставки) Тогда
			Возврат;
		КонецеСли;			
		// МАС - 26.06.2018 - №2286 --->> 
		//lem_Клиент.ОбновлениеДанныхПоРейсуИзВероута(Элементы.Список.ТекущаяСтрока.Идентификатор, Элементы.Список.ТекущаяСтрока.ДатаРейса, Элементы.Список.ТекущаяСтрока.vr_РаспределительныйЦентр);
		Если НужноОбновлениеДанныхПоРейсуИзВероута(Элементы.Список.ТекущиеДанные.ТерминалДоставки) Тогда
			lem_Клиент.ОбновлениеДанныхПоРейсуИзВероута(Элементы.Список.ТекущиеДанные.Идентификатор, Элементы.Список.ТекущиеДанные.ДатаРейса, ПолучитьРаспределительныйЦентр(Элементы.Список.ТекущаяСтрока));	
		КонецЕсли;
		// <<--- МАС 		
		ПечатьМаршрутногоЛиста(Неопределено);		
	КонецеСли;	
	
КонецПроцедуры

// Якурнов 26.07.2018 13:37:47
&НаСервере
Функция ПолучитьРаспределительныйЦентр(ДокРейс)
	Возврат ДокРейс.vr_РаспределительныйЦентр;
КонецФункции

&НаСервере
Функция НужноОбновлениеДанныхПоРейсуИзВероута(Терминал)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЕСТЬNULL(ПараметрыРегиональныхТерминаловСрезПоследних.МетодикаЛогистическойМаршрутизации, ЗНАЧЕНИЕ(Перечисление.МетодикаЛогистическойМаршрутизации.МаршрутизацияVeeroute)) КАК МетодикаМаршрутизации
	|ИЗ
	|	РегистрСведений.ПараметрыРегиональныхТерминалов.СрезПоследних(, РегиональныйТерминал = &Терминал) КАК ПараметрыРегиональныхТерминаловСрезПоследних");
	Запрос.УстановитьПараметр("Терминал", Терминал);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
		Если Рез.МетодикаМаршрутизации = Перечисления.МетодикаЛогистическойМаршрутизации.МаршрутизацияVeeroute Тогда				
			Возврат Истина;	
		Иначе	
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ()

&НаСервере
Процедура ОбновитьПараметрыДатыЗапросаКорзины()
	Корзина.Параметры.УстановитьЗначениеПараметра("ДатаНач", НачалоДня(ТекущаяДата()));
	Корзина.Параметры.УстановитьЗначениеПараметра("ДатаКон", КонецДня(ТекущаяДата()));
КонецПроцедуры	

&НаСервере
Функция ПолучитьОтчетВодителяПоРейсу(РейсСсылка)
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	|	новаОтчетВодителя.Ссылка КАК Отчет
	|ИЗ
	|	Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс КАК РейсВероут
	|		ПО новаОтчетВодителя.Рейс.Ссылка = РейсВероут.РейсМестнойДоставки.Ссылка
	|ГДЕ
	|	РейсВероут.Ссылка = &Рейс";
	Зап.УстановитьПараметр("Рейс", РейсСсылка);
	
	Выб = Зап.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда
		Возврат Выб.Отчет;
	Иначе
		Возврат Неопределено;
	КонецеСли;	
КонецФункции	

&НаКлиенте
Процедура ОткрытьОтчетВодителя(Команда)
	// Вставить содержимое обработчика.
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		Отч = ПолучитьОтчетВодителяПоРейсу(Элементы.Список.ТекущаяСтрока.Ссылка);
		Если Отч <> Неопределено Тогда
			Парам = Новый Структура("Ключ", Отч.Ссылка);
			ОткрытьФорму("Документ.новаОтчетВодителя.ФормаОбъекта", Парам, ЭтаФорма);
		Иначе
			Предупреждение("Не найден отчет водителя!");
		КонецеСли;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьГрафик(Команда)
	
	Если Час(ТекущаяДата()) >= 14 Тогда
		Сообщить("Изменение графика текущего дня после 14:00 не допускается");
	Иначе	
		ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗафиксироватьГрафик.Пометка = НЕ ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗафиксироватьГрафик.Пометка;
		ЗафиксироватьГрафикНаСервере(ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗафиксироватьГрафик.Пометка);		
		ЭтаФорма.ОбновитьОтображениеДанных();	
	КонецЕсли;	
	
	
КонецПроцедуры

&НаСервере
Процедура ЗафиксироватьГрафикНаСервере(Пометка)
	
	
	ТекВр = ТекущаяДата();	
	ТекТерминал = ПараметрыСеанса.ТерминалДоставки;
	Если НЕ ЗначениеЗаполнено(ТекТерминал) Тогда	
		ТекТерминал = ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.МоскваСтриж");		
	КонецЕсли;
	
	
	Если Пометка Тогда  // делаем новый док - пометка выставляется	
		
		НДок = Документы.ЗафиксированныйГрафикЭкипажей.СоздатьДокумент();
		НДок.Дата = ТекВр;
		НДок.ДатаРейсов = НачалоДня(ТекВр);
		НДок.Оператор = ПараметрыСеанса.ТекущийПользователь;
		НДок.ТерминалДоставки = ТекТерминал;
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ДокРейс.Ссылка КАК Рейс,
		|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
		|	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
		|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор,
		|	ПривязкаМашинКРейсамСрезПоследних.Период КАК Период,
		|	ПривязкаМашинКРейсамСрезПоследних.КтоПривязал КАК КтоПривязал
		|ИЗ
		|	Документ.Рейс КАК ДокРейс
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
		|		ПО ДокРейс.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс
		|ГДЕ
		|	ДокРейс.Проведен
		|	И ДокРейс.Дата МЕЖДУ &Дата1 И &Дата2
		|	И ДокРейс.ТерминалДоставки = &ТерминалДоставки");
		Запрос.УстановитьПараметр("Дата1", НачалоДня(ТекВр));
		Запрос.УстановитьПараметр("Дата2", КонецДня(ТекВр));
		Запрос.УстановитьПараметр("ТерминалДоставки", ТекТерминал);
		Рез = Запрос.Выполнить().Выбрать();
		
		Пока Рез.Следующий() Цикл
			
			Если ЗначениеЗаполнено(Рез.Водитель) Тогда			
				НСтр = НДок.Экипажи.Добавить();	
				НСтр.Рейс = Рез.Рейс;
				НСтр.Сотрудник = Рез.Водитель;			
				НСтр.ТипУчастникаЭкипажа = Перечисления.УчастникЭкипажа.Водитель;
				НСтр.Транспорт = Рез.Транспорт;	
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Рез.Экспедитор) Тогда		
				НСтр = НДок.Экипажи.Добавить();	
				НСтр.Рейс = Рез.Рейс;
				НСтр.Сотрудник = Рез.Экспедитор;						
				НСтр.ТипУчастникаЭкипажа = Перечисления.УчастникЭкипажа.Экспедитор;
				НСтр.Транспорт = Рез.Транспорт;	
			КонецЕсли;	
			
		КонецЦикла;
		
		
		Попытка
			НДок.Записать(РежимЗаписиДокумента.Запись);
			НДок.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			#Если Клиент Тогда
				ТекстОш = ОписаниеОшибки();
				Сообщить("проблема: " + ТекстОш);
			#КонецЕсли	
		КонецПопытки;
		
		
	Иначе // распроводим имеющиеся доки - пометка снимается
		
		ЗапГрафик = Новый Запрос("ВЫБРАТЬ
		|	ЗафиксированныйГрафикЭкипажей.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗафиксированныйГрафикЭкипажей КАК ЗафиксированныйГрафикЭкипажей
		|ГДЕ
		|	ЗафиксированныйГрафикЭкипажей.Проведен
		|	И ЗафиксированныйГрафикЭкипажей.Дата МЕЖДУ &Дата1 И &Дата2
		|	И ЗафиксированныйГрафикЭкипажей.ТерминалДоставки = &ТерминалДоставки");
		ЗапГрафик.УстановитьПараметр("Дата1", НачалоДня(ТекВр));
		ЗапГрафик.УстановитьПараметр("Дата2", КонецДня(ТекВр));	
		ЗапГрафик.УстановитьПараметр("ТерминалДоставки", ТекТерминал);	
		РезГрафик = ЗапГрафик.Выполнить().Выбрать();	
		
		Пока РезГрафик.Следующий() Цикл		
			ДокОбъект = РезГрафик.Ссылка.ПолучитьОбъект();	
			ДокОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);	
		КонецЦикла;
		
		
	КонецЕсли;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьГрафик(Команда)
	
	ТекПометка = ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоказатьСкрытьГрафик.Пометка;
	ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПоказатьСкрытьГрафик.Пометка = НЕ ТекПометка;
	Элементы.ГруппаГрафик.Видимость = НЕ ТекПометка;
	Элементы.График.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	
	Элементы.График.Обновить();	
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникВышелНаРаботу(Команда)
	
	ТекДанные = Элементы.График.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда		
		ТекЭлемент = Элементы.График.ТекущийЭлемент.Имя;
		Если ТекЭлемент = "ГрафикВодитель" Тогда
			СотрудникВышелНаРаботуНаСервере(ТекДанные.Водитель, ТекДанные.Рейс, Истина);
		ИначеЕсли ТекЭлемент = "ГрафикЭкспедитор" Тогда	
			СотрудникВышелНаРаботуНаСервере(ТекДанные.Экспедитор, ТекДанные.Рейс, Истина);	
		КонецЕсли;
		Элементы.График.Обновить();
		Элементы.График.ВыделенныеСтроки.Очистить();			
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура СотрудникНеВышелНаРаботу(Команда)
	
	ТекДанные = Элементы.График.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ТекЭлемент = Элементы.График.ТекущийЭлемент.Имя;
		Если ТекЭлемент = "ГрафикВодитель" Тогда
			СотрудникВышелНаРаботуНаСервере(ТекДанные.Водитель, ТекДанные.Рейс, Ложь);
		ИначеЕсли ТекЭлемент = "ГрафикЭкспедитор" Тогда	
			СотрудникВышелНаРаботуНаСервере(ТекДанные.Экспедитор, ТекДанные.Рейс, Ложь);	
		КонецЕсли;
		Элементы.График.Обновить();
		Элементы.График.ВыделенныеСтроки.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СотрудникВышелНаРаботуНаСервере(Сотрудник, Рейс, Вышел)
	
	Док = Документы.КорректировкаУчетаВыходаСотрудниковНаРаботу.СоздатьДокумент();
	Док.Дата = ТекущаяДата();
	Док.Оператор = ПараметрыСеанса.ТекущийПользователь;
	Док.Рейс = Рейс;
	Док.Сотрудник = Сотрудник;
	Док.СотрудникВышелНаРаботу = Вышел;
	
	Попытка		
		Док.Записать(РежимЗаписиДокумента.Запись);
		Док.Записать(РежимЗаписиДокумента.Проведение);	
	Исключение
		#Если Клиент Тогда	
			ТекстОШ = "" + ОписаниеОшибки();
			Сообщить("Проблема: " + ТекстОШ);	
		#КонецЕсли
	КонецПопытки;		
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьГрафик(Команда)
	Элементы.График.Обновить();
	Элементы.График.ВыделенныеСтроки.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьГрафикЭкипажей" Тогда	
		Элементы.График.Обновить();			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафикПриАктивизацииЯчейки(Элемент)
	
	//Элементы.График.ВыделенныеСтроки.Очистить();
	
КонецПроцедуры

//МАС - 21.09.2017 - №1846 - Оперативное назначение ТА --->>
&НаКлиенте
Процедура СменитьНомерТА(Команда)
	
	Парам = Новый Структура("Рейс", Элементы.Список.ТекущиеДанные);
	ОткрытьФорму("Справочник.ТелефонныеАппараты.ФормаВыбора",, ЭтаФорма,,,,Новый ОписаниеОповещения("ПослеВыбораНовогоТА", ЭтотОбъект, Парам));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораНовогоТА(Пар1, Пар2) Экспорт
	
	ОперативноеНазначениеТелефонаНаРейс(Пар1,Пар2);
	Элементы.Список.Обновить();
	
КонецПроцедуры

// Якурнов 26.07.2018 12:48:10
&НаСервере
Процедура ОперативноеНазначениеТелефонаНаРейс(Тел,Регион)
	Если ЗначениеЗаполнено(Тел) И ЗначениеЗаполнено(Регион) Тогда
		
		// пишем в регистр
		РейсСсылка = Регион.Рейс.Ссылка;
		
		ТекВр = НачалоДня(ТекущаяДата());
		Набор = РегистрыСведений.ОперативноеНазначениеТАНаРейс.СоздатьНаборЗаписей();
		Набор.Отбор.Рейс.Установить(РейсСсылка);
		Набор.Отбор.Период.Установить(ТекВр);
		Набор.Прочитать();
		Набор.Очистить();
		
		НЗапись = Набор.Добавить();
		НЗапись.Период = ТекВр;
		НЗапись.Рейс = РейсСсылка;
		НЗапись.ТА = Тел;	
		
		Набор.Записать();
		
		// пуляем в админку	
		tripId = Формат(Число(Регион.Рейс.РейсМестнойДоставки.Номер), "ЧГ=");
		temporary_phone = Тел.Телефон;
		
		Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
		ТекстЗапроса = "EXEC import_setTripTemporary_phoneFrom1C " + tripId + ",'" + temporary_phone + "'";
		Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Соединение);
		Евген.ОтключитьсяОтADO(Соединение);
		
	КонецЕсли;	
КонецПроцедуры

// <<--- МАС

&НаКлиенте
Процедура ПоказатьСкрытьКорзину(Команда)
	Элементы.ФормаПоказатьСкрытьКорзину.Пометка = Не Элементы.ФормаПоказатьСкрытьКорзину.Пометка;
	Элементы.ГруппаКорзина.Видимость = Элементы.ФормаПоказатьСкрытьКорзину.Пометка;
КонецПроцедуры

&НаСервере
Процедура ПривязатьТранспортНаСервере(ДатаРейсов)
	ТекТерминал = ПараметрыСеанса.ТерминалДоставки;
	Если НЕ ЗначениеЗаполнено(ТекТерминал) Тогда	
		ТекТерминал = Справочники.РегиональныеТерминалы.МоскваСтриж;		
	КонецЕсли;
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	|	новаТранспорт.Ссылка КАК Транспорт,
	|	ЕСТЬNULL(ПривязкаМашинКРейсамСрезПоследних.Рейс, ИСТИНА) КАК МашинаНеПривязана,
	|	ПривязкаМашинКРейсамСрезПоследних.Рейс КАК Рейс,
	|	новаКалендарьВозможныхРейсов.Водитель КАК Водитель,
	|	новаКалендарьВозможныхРейсов.Экспедитор КАК Экспедитор
	|ИЗ
	|	Справочник.новаТранспорт КАК новаТранспорт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(&ДатаКон2, Рейс.ДатаРейса МЕЖДУ &ДатаНач И &ДатаКон) КАК ПривязкаМашинКРейсамСрезПоследних
	|		ПО новаТранспорт.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Транспорт.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.новаКалендарьВозможныхРейсов КАК новаКалендарьВозможныхРейсов
	|		ПО (новаКалендарьВозможныхРейсов.Транспорт = новаТранспорт.Ссылка)
	|			И (новаКалендарьВозможныхРейсов.НачалоПериода >= &ДатаНач)
	|			И (новаКалендарьВозможныхРейсов.КонецПериода <= КОНЕЦПЕРИОДА(&ДатаКон, ДЕНЬ))
	|ГДЕ
	|	новаТранспорт.ЭтоГруппа = ЛОЖЬ
	|	И новаТранспорт.ПометкаУдаления = ЛОЖЬ
	|	И новаТранспорт.Родитель.ТерминалДоставки = &ТерминалДоставки";
	Зап.УстановитьПараметр("ДатаКон2", ТекущаяДата());
	Зап.УстановитьПараметр("ДатаКон", КонецДня(ДатаРейсов));
	Зап.УстановитьПараметр("ДатаНач", НачалоДня(ДатаРейсов));
	
	Зап.УстановитьПараметр("ТерминалДоставки", ТекТерминал);
	
	ТабТранспорта = Зап.Выполнить().Выгрузить();
	
	
	ЗапРейсов = Новый Запрос;
	ЗапРейсов.Текст = "ВЫБРАТЬ
	|	Рейс.Транспорт КАК Транспорт,
	|	Рейс.Ссылка КАК Рейс,
	|	Рейс.РейсМестнойДоставки КАК РМД
	|ИЗ
	|	Документ.Рейс КАК Рейс
	|ГДЕ
	|	Рейс.Проведен = ИСТИНА
	|	И Рейс.ДатаРейса МЕЖДУ &ДатаНач И &ДатаКон
	|	И Рейс.ТерминалДоставки = &ТерминалДоставки";
	
	ЗапРейсов.УстановитьПараметр("ДатаНач", НачалоДня(ДатаРейсов));
	ЗапРейсов.УстановитьПараметр("ДатаКон", КонецДня(ДатаРейсов));
	ЗапРейсов.УстановитьПараметр("ТерминалДоставки", ТекТерминал);
	ТабРейсов = ЗапРейсов.Выполнить().Выгрузить();
	
	ЗапСоответствия = Новый Запрос;
	ЗапСоответствия.Текст = "ВЫБРАТЬ
	|	Таб.Рейс КАК Рейс,
	|	Таб.Транспорт КАК Транспорт,
	|	Таб.РМД КАК РМД
	|ПОМЕСТИТЬ ВТРейсы
	|ИЗ
	|	&Таб КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПривязкаМашинКРейсам.Рейс.Транспорт.Ссылка КАК РейсТранспортСсылка,
	|	МАКСИМУМ(ПривязкаМашинКРейсам.Период) КАК Период
	|ПОМЕСТИТЬ Срез1
	|ИЗ
	|	РегистрСведений.ПривязкаМашинКРейсам КАК ПривязкаМашинКРейсам
	|ГДЕ
	|	ПривязкаМашинКРейсам.Период МЕЖДУ &НачДата И &КонДата
	|
	|СГРУППИРОВАТЬ ПО
	|	ПривязкаМашинКРейсам.Рейс.Транспорт.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Срез1.РейсТранспортСсылка КАК РейсТранспортСсылка,
	|	ПривязкаМашинКРейсам.Транспорт КАК Транспорт
	|ПОМЕСТИТЬ Срез2
	|ИЗ
	|	Срез1 КАК Срез1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам КАК ПривязкаМашинКРейсам
	|		ПО Срез1.РейсТранспортСсылка.Ссылка = ПривязкаМашинКРейсам.Рейс.Транспорт.Ссылка
	|			И Срез1.Период = ПривязкаМашинКРейсам.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРейсы.Рейс КАК Рейс,
	|	ВТРейсы.Транспорт КАК ТранспортВероут,
	|	Срез2.Транспорт КАК Транспорт,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПривязкаМашинКРейсамСрезПоследних.Транспорт, ИСТИНА) = ИСТИНА
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НадоПривязатьТранспорт,
	|	ВТРейсы.РМД КАК РМД
	|ИЗ
	|	ВТРейсы КАК ВТРейсы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Срез2 КАК Срез2
	|		ПО ВТРейсы.Транспорт = Срез2.РейсТранспортСсылка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	|		ПО ВТРейсы.Рейс = ПривязкаМашинКРейсамСрезПоследних.Рейс.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЕСТЬNULL(ПривязкаМашинКРейсамСрезПоследних.Транспорт, ИСТИНА) = ИСТИНА
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	ЗапСоответствия.УстановитьПараметр("Таб", ТабРейсов);
	ЗапСоответствия.УстановитьПараметр("НачДата", НачалоДня(ДобавитьМесяц(ДатаРейсов, -2)));
	ЗапСоответствия.УстановитьПараметр("КонДата", ДатаРейсов - 1);
	
	Выб = ЗапСоответствия.Выполнить().Выбрать();
	
	ТекД = ТекущаяДата();
	Наб = РегистрыСведений.ПривязкаМашинКРейсам.СоздатьНаборЗаписей();
	Наб.Отбор.Период.Установить(ТекД);
	Пока Выб.Следующий() Цикл
		Если Не Выб.НадоПривязатьТранспорт Тогда
			Продолжить;
		КонецЕсли;	
		
		Най = ТабТранспорта.Найти(Выб.Транспорт);
		Если Най = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		РМД = Выб.РМД.ПолучитьОбъект();
		РМД.Транспорт = Най.Транспорт;
		РМД.Водитель = Най.Водитель;
		РМД.Экспедитор = Най.Экспедитор;
		РМД.Записать();
		МаршрутизацияЗаказовСервер.ПривязатьДанныеПоРейсуКЗаборамНаСервере(Выб.Рейс, Най.Транспорт, Най.Водитель, Най.Экспедитор);
		
		Нов = Наб.Добавить();
		Нов.Период = ТекД;
		Нов.Рейс = Выб.Рейс;
		Нов.Транспорт = Най.Транспорт;
		Нов.Водитель = Най.Водитель;
		Нов.Экспедитор = Най.Экспедитор;
		Нов.КтоПривязал = ПараметрыСеанса.ТекущийПользователь;
		Нов.АвтоматическаяПривязка = Истина;
		Сообщить("Veeroute " + СокрЛП(Выб.ТранспортВероут) + " ---> " + СокрЛП(Выб.Транспорт));
	КонецЦикла; 
	
	Попытка
		Если Наб.Количество() <> 0 Тогда
			Наб.Записать();
		Иначе
			Сообщить("Данные отсутствуют!");
			Возврат;
		КонецеСли;
	Исключение
		Сообщить("Произошла ошибка при привязке транспорта! (" + ОписаниеОшибки() + ")", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецПопытки;
	Элементы.Список.Обновить();
	Сообщить("Привязка завершена!", СтатусСообщения.Обычное);
КонецПроцедуры

&НаКлиенте
Процедура ПривязатьТранспорт(Команда)
	
	Если Час(ТекущаяДата()) >= 21 Тогда
		ДатаРейсов = НачалоДня(ТекущаяДата() + 36000);
	Иначе	
		ДатаРейсов = НачалоДня(ТекущаяДата());
	КонецЕсли;	
	
	ОтветДиалога = Неопределено;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПривязатьТранспортЗавершение", ЭтотОбъект, Новый Структура("ДатаРейсов", ДатаРейсов)), "Выполнить автоматическую привязку экипажей к рейсам на дату " + Формат(ДатаРейсов, "ДЛФ=DD") + "?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
КонецПроцедуры

&НаКлиенте
Процедура ПривязатьТранспортЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ДатаРейсов = ДополнительныеПараметры.ДатаРейсов;
	
	
	ОтветДиалога = РезультатВопроса;
	
	Если ОтветДиалога <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецеСли;	
	
	ПривязатьТранспортНаСервере(ДатаРейсов);

КонецПроцедуры

&НаСервере
Процедура ОтменитьОтвязкуЗаказаВКорзинеНаСервере(НомерЗаказа)
	Зап = Новый Запрос;
	
	Зап.Текст = "ВЫБРАТЬ
	|	НезагруженныеЗаказыВАвто.Рейс.Транспорт КАК РейсТранспорт,
	|	НезагруженныеЗаказыВАвто.Заказ КАК Заказ,
	|	НезагруженныеЗаказыВАвто.Рейс КАК Рейс,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РейсЗаказы.Ссылка.Ссылка, ИСТИНА) = ИСТИНА
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПривязанКРейсуТекущейДаты,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК ТранспортПогрузки
	|ИЗ
	|	РегистрСведений.НезагруженныеЗаказыВАвто КАК НезагруженныеЗаказыВАвто
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НезагруженныеЗаказыВАвто.СрезПоследних КАК НезагруженныеЗаказыВАвтоСрезПоследних
	|		ПО НезагруженныеЗаказыВАвто.Заказ = НезагруженныеЗаказыВАвтоСрезПоследних.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс.Заказы КАК РейсЗаказы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	|			ПО РейсЗаказы.Ссылка.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс.Ссылка
	|		ПО (НезагруженныеЗаказыВАвто.Заказ = ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	|			И (РейсЗаказы.Ссылка.ДатаРейса МЕЖДУ &ДатаНач И &ДатаКон)
	|			И (РейсЗаказы.УдаленИзРейса = ЛОЖЬ)
	|			И (РейсЗаказы.Ссылка.Проведен = ИСТИНА)
	|ГДЕ
	|	НезагруженныеЗаказыВАвто.СтатусПогрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыПогрузкиЗаказовВАвто.ЗаказНеЗагружен)
	|	И НезагруженныеЗаказыВАвто.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И НезагруженныеЗаказыВАвтоСрезПоследних.СтатусПогрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыПогрузкиЗаказовВАвто.ЗаказНеЗагружен)
	|	И НезагруженныеЗаказыВАвто.Заказ.Номер = &НомерЗаказа";
	
	Зап.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));
	Зап.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));
	Зап.УстановитьПараметр("НомерЗаказа", НомерЗаказа);
	
	Выб = Зап.Выполнить().Выбрать();
	Выб.Следующий();
	Если ЗначениеЗаполнено(Выб.ТранспортПогрузки) Тогда
		Сообщить("Заказ уже привязан к рейсу!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецеСли;
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	|	РейсЗаказы.УдаленИзРейса КАК УдаленИзРейса
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|ГДЕ
	|	РейсЗаказы.Заказ = &Заказ
	|	И РейсЗаказы.Ссылка.Ссылка = &Рейс";
	Зап.УстановитьПараметр("Заказ", Выб.Заказ);
	Зап.УстановитьПараметр("Рейс", Выб.Рейс);
	
	
	ВыбПоРейсу = Зап.Выполнить().Выбрать();
	Если ВыбПоРейсу.Следующий() Тогда
		Если Не ВыбПоРейсу.УдаленИзРейса Тогда
			Сообщить("Заказ уже вернули в изначальный рейс!", СтатусСообщения.ОченьВажное);
			Возврат;
		КонецеСли;	
	Иначе
		Сообщить("Заказ уже отвязан от изначального рейса!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецеСли;	
	
	ТекВр = ТекущаяДата();
	
	//Асеев 10.03.2021 (Задача № 4491)>>>
	//НачатьТранзакцию();
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	//Асеев 10.03.2021 (Задача № 4491)<<<
	Наб = РегистрыСведений.ЗаказыКОтвязкеОтРейсов.СоздатьНаборЗаписей();
	Наб.Отбор.Период.Установить(ТекВр);
	Наб.Отбор.Заказ.Установить(Выб.Заказ);
	Наб.Отбор.Рейс.Установить(Выб.Рейс);
	
	Нов = Наб.Добавить();
	Нов.Период = ТекВр;
	Нов.Заказ = Выб.Заказ;
	Нов.Рейс = Выб.Рейс;
	Нов.ТипОтвязки = Перечисления.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки;
	Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;;
	
	Наб.Записать();
	
	РейсОбъект = Выб.Рейс.ПолучитьОбъект();
	РейсОбъект.Записать(РежимЗаписиДокумента.Запись);
	РейсОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	ЗафиксироватьТранзакцию();
	
	Сообщить("Произведена отмена отвязки!");
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьОтвязкуЗаказаВКорзине(Команда)
	Стр = Элементы.Корзина.ТекущиеДанные;
	
	ОтменитьОтвязкуЗаказаВКорзинеНаСервере(СокрЛП(Стр.Заказ));
КонецПроцедуры

&НаСервере
Функция ПолучитьБрейкСогласноОбъемуПартнера(Забор,ОбъемФ)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбъемныеБрейки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъемныеБрейки КАК ОбъемныеБрейки
	|ГДЕ
	|	ОбъемныеБрейки.Владелец = &Владелец
	|	И ОбъемныеБрейки.ОбъемОт <= &Объем
	|	И ОбъемныеБрейки.ОбъемДо >= &Объем";
	
	Запрос.УстановитьПараметр("Объем", ОбъемФ);
	Запрос.УстановитьПараметр("Владелец", Забор.ТарифнаяСетка);
	
	РезМ = Запрос.Выполнить().Выбрать();
	Пока РезМ.Следующий() Цикл
		Возврат РезМ.Ссылка;
	КонецЦикла;		
	Возврат Неопределено;
КонецФункции