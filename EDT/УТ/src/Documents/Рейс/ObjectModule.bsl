
Процедура ОтправитьСтатусыДляУдаляемыхИзРейсаЗаказов()	Экспорт // Задача № 3095

	Если ЭтотОбъект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;	
	
	//Асеев 16.04.2021 (Задача № 4541)>>>
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	РейсЗаказы.Ссылка КАК Ссылка,
	//	|	РейсЗаказы.Заказ КАК Заказ,
	//	|	РейсЗаказы.Заказ.Номер КАК ЗаказНомер,
	//	|	РейсЗаказы.УдаленИзРейса КАК УдаленИзРейса
	//	|ИЗ
	//	|	Документ.Рейс.Заказы КАК РейсЗаказы
	//	|ГДЕ
	//	|	РейсЗаказы.Ссылка = &Ссылка
	//	|	И РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг";
	//
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//
	//РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	//ТЧЗаказы = Заказы.Выгрузить(,"Заказ, УдаленИзРейса");
	//
	//ЗаказыКРегистрацииСтатусов = Новый Массив;
	//
	//Для Каждого СтрокаЗаказыВБазеДанных Из РезультатЗапроса Цикл
	//	
	//	ИзменитьСтатусДокумента = Ложь;
	//	
	//	СтрокаВТекущемДокументе = ТЧЗаказы.Найти(СтрокаЗаказыВБазеДанных.Заказ, "Заказ");
	//	
	//	Если СтрокаВТекущемДокументе = Неопределено И Не СтрокаЗаказыВБазеДанных.УдаленИзРейса Тогда// 3095, условие 1.а + 1.б
	//		
	//		ИзменитьСтатусДокумента = Истина;

	//	ИначеЕсли Не СтрокаВТекущемДокументе = Неопределено И (СтрокаВТекущемДокументе.УдаленИзРейса И Не СтрокаЗаказыВБазеДанных.УдаленИзРейса) Тогда // 3095, условие 2.а + 2.б  + 2.в
	//		
	//		ИзменитьСтатусДокумента = Истина;
	//		
	//	КонецЕсли;	
	//	
	//	Если Не ИзменитьСтатусДокумента тогда Продолжить КонецЕсли; // Ничего не менялось, смотрим в следующую запись	
	//	
	//	ЗаказыКРегистрацииСтатусов.Добавить(СтрокаЗаказыВБазеДанных.Заказ);
	//	
	//КонецЦикла;
	//	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	РейсЗаказы.Ссылка КАК ДокументРегистратор,
	//	|	РейсЗаказы.Заказ КАК Реализация,
	//	|	РейсЗаказы.Заказ.Номер КАК ЗаказНомер,
	//	|	РейсЗаказы.Ссылка.ТерминалДоставки КАК Терминал,
	//	|	ЛОЖЬ КАК БылоЗакрытие,
	//	|	224 КАК Статус,
	//	|	ЗНАЧЕНИЕ(Перечисление.ИнициаторыСостояния.ИнтернетМагазин) КАК ИнициаторСостояния,
	//	|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	//	|	ЛОЖЬ КАК БылаРегистрация
	//	|ИЗ
	//	|	Документ.Рейс.Заказы КАК РейсЗаказы
	//	|ГДЕ
	//	|	РейсЗаказы.Ссылка = &Ссылка
	//	|	И РейсЗаказы.Заказ В(&Заказ)";
	//Запрос.УстановитьПараметр("Заказ", ЗаказыКРегистрацииСтатусов);
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Заказы", Заказы.Выгрузить(Новый Структура("УдаленИзРейса", Ложь), "Заказ").ВыгрузитьКолонку("Заказ"));
	Запрос.УстановитьПараметр("ТерминалДоставки", ТерминалДоставки);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РейсЗаказы.Ссылка КАК ДокументРегистратор,
	|	РейсЗаказы.Заказ КАК Реализация,
	|	ВЫБОР
	|		КОГДА РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг).Номер
	|		ИНАЧЕ ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.ЗаборТовара).Номер
	|	КОНЕЦ КАК ЗаказНомер,
	|	&ТерминалДоставки КАК Терминал,
	|	ЛОЖЬ КАК БылоЗакрытие,
	|	224 КАК Статус,
	|	ЗНАЧЕНИЕ(Перечисление.ИнициаторыСостояния.ИнтернетМагазин) КАК ИнициаторСостояния,
	|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	|	ЛОЖЬ КАК БылаРегистрация
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|ГДЕ
	|	РейсЗаказы.Ссылка = &Ссылка
	|	И НЕ РейсЗаказы.УдаленИзРейса
	|	И НЕ РейсЗаказы.Заказ В (&Заказы)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДвижений = Результат.Выгрузить();
	//ТаблицаДвижений = Запрос.Выполнить().Выгрузить();
	//Асеев 16.04.2021 (Задача № 4541)<<<
	
	СопоставлениеИнициатора = РаботаСАдминкойСервер.СопоставлениеИнициатораСостоянияДляАдминки();
	
	МассивСтатусовsetOrderStatus  = Новый Массив;
	Для Каждого СтрокаЗаказ Из ТаблицаДвижений Цикл
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалДоставки.Код));
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Initiator", РаботаСАдминкойСервер.ИнициаторСостоянияВАдминку(СтрокаЗаказ.ИнициаторСостояния, СопоставлениеИнициатора), ДопПараметрыСтатуса);	
		МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СокрЛП(СтрокаЗаказ.ЗаказНомер), 
		СтрокаЗаказ.Статус, 
		"",
		,
		ТекущаяДата(),
		МассивСтатусовsetOrderStatus, 
		ДопПараметрыСтатуса); 		
	КонецЦикла;
	
	mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусовSetOrderStatus, "SetOrderStatus"); // ВРЕМЕННАЯ ЗАГЛУШКА ОТКЛЮЧЕНА 3095
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДвижений); 
	
КонецПроцедуры	

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	//CeHbKA #3095 09.10.2020
	//перенеса чуть ниже
	//ОтправитьСтатусыДляУдаляемыхИзРейсаЗаказов();
	//CeHbKA #3095 09.10.2020
	
//	// возникают блокировки
//	Зап = Новый Запрос;
//	если значениезаполнено(ссылка) тогда
//	Зап.Текст = "ВЫБРАТЬ
//	            |	ЗакрытиеЗаказов.Ссылка
//	            |ИЗ
//	            |	Документ.ЗакрытиеЗаказов КАК ЗакрытиеЗаказов
//	            |ГДЕ
//	            |	ЗакрытиеЗаказов.Проведен = ИСТИНА
//	            |	И ЗакрытиеЗаказов.Рейс = &Рейс";
//	Зап.УстановитьПараметр("Рейс", Ссылка);
//	// возникают блокировки
//	Рез = Зап.Выполнить().Выбрать();
//	// возникают блокировки
//	Если Рез.Следующий() Тогда
//		#Если Клиент Тогда
//			Сообщить("Рейс уже закрыт! Запись запрещена!", СтатусСообщения.ОченьВажное);
//		#КонецЕсли	
//		
//		Отказ = Истина;
//		Возврат;
//	КонецЕсли;	
//конецесли;	
//// возникают блокировки

    ОбходитьПроверки = Ложь;
	Если ДополнительныеСвойства.Свойство("ОбходПроверок")  Тогда
		ОбходитьПроверки = Истина;
	КонецЕсли;	

	
    Если Не ОбходитьПроверки Тогда
		//+++ БАО 08.06.2017 №1024 
		//Отказ = РейсЗакрыт;
		Отказ = baoВызовСервера.РейсЗакрыт(Ссылка);
		//--- БАО 08.06.2017 №1024 
		
		Если Отказ Тогда
			Возврат;
		КонецеСли;	
	КонецеСли;
	
	//Перварюха В.В. 09.10.2019	
	Если ПометкаУдаления И НЕ Ссылка.ПометкаУдаления Тогда
	
		Отказ = УчетОборудованияСервер.ПоРейсуСуществуетВыданноеОборудование(Ссылка);
				
		Если Отказ Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "По рейсу есть выданное оборудование";
			Сообщение.Сообщить();

			Возврат;
		КонецеСли;
	
	КонецЕсли;
	//Перварюха В.В. 09.10.2019
	
	Зап = Новый Запрос;
	
	//Зап.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	//            |	ЗаказыКОтвязкеОтРейсов.Заказ,
	//			|	ЗаказыКОтвязкеОтРейсов.ЗаказНайден
	//            |ИЗ
	//            |	РегистрСведений.ЗаказыКОтвязкеОтРейсов КАК ЗаказыКОтвязкеОтРейсов
	//            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаказыКОтвязкеОтРейсов.СрезПоследних(&КонДата, ) КАК ЗаказыКОтвязкеОтРейсовСрезПоследних
	//            |		ПО ЗаказыКОтвязкеОтРейсов.Заказ = ЗаказыКОтвязкеОтРейсовСрезПоследних.Заказ
	//            |			И ЗаказыКОтвязкеОтРейсов.Рейс.Ссылка = ЗаказыКОтвязкеОтРейсовСрезПоследних.Рейс

	//            |ГДЕ
	//            |	ЗаказыКОтвязкеОтРейсов.Период МЕЖДУ &НачДата И &КонДата
	//            |	И ЗаказыКОтвязкеОтРейсов.Рейс.Ссылка = &Рейс
	//            //|	И ЗаказыКОтвязкеОтРейсовСрезПоследних.ЗаказНайден = ЛОЖЬ
	//            |	И ЗаказыКОтвязкеОтРейсовСрезПоследних.ТипОтвязки.Ссылка <> ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки)";
	
	
	
	Зап.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	            |	ЗаказыКОтвязкеОтРейсов.Заказ КАК Заказ,
	            |	ЗаказыКОтвязкеОтРейсов.ЗаказНайден КАК ЗаказНайден,
	            |	ЗаказыКОтвязкеОтРейсов.Период КАК Период
	            |ПОМЕСТИТЬ ВТ
	            |ИЗ
	            |	Документ.Рейс.Заказы КАК РейсЗаказы
	            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаказыКОтвязкеОтРейсов КАК ЗаказыКОтвязкеОтРейсов
	            |		ПО РейсЗаказы.Заказ = ЗаказыКОтвязкеОтРейсов.Заказ
	            |ГДЕ
	            |	ЗаказыКОтвязкеОтРейсов.Период МЕЖДУ &НачДата И &КонДата
	            |	И РейсЗаказы.Ссылка = &Рейс
	            |	И ЗаказыКОтвязкеОтРейсов.ТипОтвязки = ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ПредварительноеЗакрытиеРейса)
	            |	И ЗаказыКОтвязкеОтРейсов.ТипОтвязки <> ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки)
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ВТ.Заказ КАК Заказ,
	            |	МАКСИМУМ(ВТ.Период) КАК Период
	            |ПОМЕСТИТЬ ВТ2
	            |ИЗ
	            |	ВТ КАК ВТ
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	ВТ.Заказ
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ЗаказыКОтвязкеОтРейсов.Период КАК Период,
	            |	ЗаказыКОтвязкеОтРейсов.Заказ КАК Заказ,
	            |	ЗаказыКОтвязкеОтРейсов.Рейс КАК Рейс,
	            |	ЗаказыКОтвязкеОтРейсов.ЗаказНайден КАК ЗаказНайден
	            |ПОМЕСТИТЬ _ВТ
	            |ИЗ
	            |	РегистрСведений.ЗаказыКОтвязкеОтРейсов КАК ЗаказыКОтвязкеОтРейсов
	            |ГДЕ
	            |	ЗаказыКОтвязкеОтРейсов.Рейс = &Рейс
	            |	И ЗаказыКОтвязкеОтРейсов.Период МЕЖДУ &НачДата И &КонДата
	            |	И ЗаказыКОтвязкеОтРейсов.ТипОтвязки <> ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ПредварительноеЗакрытиеРейса)
	            |	И ЗаказыКОтвязкеОтРейсов.ТипОтвязки <> ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки)
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	МАКСИМУМ(_ВТ.Период) КАК Период,
	            |	_ВТ.Заказ КАК Заказ
	            |ПОМЕСТИТЬ _ВТ2
	            |ИЗ
	            |	_ВТ КАК _ВТ
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	_ВТ.Заказ
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ВТ.Заказ КАК Заказ,
	            |	ВТ.ЗаказНайден КАК ЗаказНайден,
	            |	ВТ.Период КАК Период
	            |ИЗ
	            |	ВТ2 КАК ВТ2
	            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
	            |		ПО ВТ2.Период = ВТ.Период
	            |			И ВТ2.Заказ = ВТ.Заказ
	            |
	            |ОБЪЕДИНИТЬ ВСЕ
	            |
	            |ВЫБРАТЬ РАЗЛИЧНЫЕ
	            |	_ВТ.Заказ,
	            |	_ВТ.ЗаказНайден,
	            |	_ВТ.Период
	            |ИЗ
	            |	_ВТ2 КАК _ВТ2
	            |		ЛЕВОЕ СОЕДИНЕНИЕ _ВТ КАК _ВТ
	            |		ПО _ВТ2.Заказ = _ВТ.Заказ
	            |			И _ВТ2.Период = _ВТ.Период";
	
	Зап.УстановитьПараметр("Рейс", Ссылка);
	// МАС - 26.06.2018 - № --->> 
	//Зап.УстановитьПараметр("НачДата", НачалоДня(ДатаРейса));
	Зап.УстановитьПараметр("НачДата", Дата);
	// <<--- МАС 
	Зап.УстановитьПараметр("КонДата", КонецДня(ДатаРейса));
	
	Рез = Зап.Выполнить().Выгрузить();
	
	Для Каждого Тек Из Рез Цикл
		Струк = Новый Структура;
		Струк.Вставить("Заказ", Тек.Заказ);
		
		Най = Заказы.НайтиСтроки(Струк);
		
		Для Сч = 0 По Най.Количество() - 1 Цикл
			Най[Сч].УдаленИзРейса = Не Тек.ЗаказНайден;
		КонецЦикла;	
	КонецЦикла;	
	
	//Марочкин - выставляем терминал, если терминал пустой
	Если ТерминалДоставки.Пустая() Тогда
		// Михушкин - 26.04.2016 - выставлять ТерминалДоставки по первому заказу --->> 
		Если Заказы.Количество() И ЗначениеЗаполнено(Заказы[0].Заказ) И ТипЗнч(Заказы[0].Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ТерминалДоставки = Заказы[0].Заказ.ТерминалДоставки;	
			// lem - 08.11.2016 - выставлять ТерминалДоставки по первому заказу --->> + ЗАБОРЫ
		ИначеЕсли Заказы.Количество() И ЗначениеЗаполнено(Заказы[0].Заказ) И ТипЗнч(Заказы[0].Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда
			ТерминалДоставки = Заказы[0].Заказ.ТерминалДоставки;	
		Иначе
			ТерминалДоставки = Справочники.РегиональныеТерминалы.ПустаяСсылка();
		КонецЕсли;	
		// <<--- Михушкин 
	КонецеСли;
	//Марочкин - выставляем терминал, если терминал пустой
	
	
	// МАС - 31.07.2017 - №1508 - отмена отвязки (в случае перепроведения отчета с измененными данными) --->> 
	//Асеев 16.11.2020 (Задача № 4347)>>>
	//ЗапросОтвязка = Новый Запрос("ВЫБРАТЬ
	//                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.Заказ КАК Заказ,
	//                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.Рейс КАК Рейс,
	//                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.ТипОтвязки КАК ТипОтвязки
	//                             |ИЗ
	//                             |	РегистрСведений.ЗаказыКОтвязкеОтРейсов.СрезПоследних(, ) КАК ЗаказыКОтвязкеОтРейсовСрезПоследних
	//                             |ГДЕ
	//                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.ТипОтвязки = ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки)
	//                             |	И ЗаказыКОтвязкеОтРейсовСрезПоследних.Рейс = &Рейс
	//                             |
	//                             |СГРУППИРОВАТЬ ПО
	//                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.ТипОтвязки,
	//                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.Рейс,
	//                             |	ЗаказыКОтвязкеОтРейсовСрезПоследних.Заказ");
	ЗапросОтвязка = Новый Запрос;
	ЗапросОтвязка.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ЗаказыКОтвязкеОтРейсов.Период) КАК Период,
	|	ЗаказыКОтвязкеОтРейсов.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_МаксПериод
	|ИЗ
	|	РегистрСведений.ЗаказыКОтвязкеОтРейсов КАК ЗаказыКОтвязкеОтРейсов
	|ГДЕ
	|	ЗаказыКОтвязкеОтРейсов.Рейс = &Рейс
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыКОтвязкеОтРейсов.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыКОтвязкеОтРейсов.Заказ КАК Заказ
	|ИЗ
	|	ВТ_МаксПериод КАК ВТ_МаксПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаказыКОтвязкеОтРейсов КАК ЗаказыКОтвязкеОтРейсов
	|		ПО ВТ_МаксПериод.Период = ЗаказыКОтвязкеОтРейсов.Период
	|			И ВТ_МаксПериод.Заказ = ЗаказыКОтвязкеОтРейсов.Заказ
	|			И (ЗаказыКОтвязкеОтРейсов.Рейс = &Рейс)
	|			И (ЗаказыКОтвязкеОтРейсов.ТипОтвязки = ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки))";
	//Асеев 16.11.2020 (Задача № 4347)<<<
	
	ЗапросОтвязка.УстановитьПараметр("Рейс", Ссылка);
	РезОтвязка = ЗапросОтвязка.Выполнить().Выбрать();

	Пока РезОтвязка.Следующий() Цикл
		
		Най = Заказы.НайтиСтроки(Новый Структура("Заказ", РезОтвязка.Заказ));
		Для каждого Ст Из Най Цикл	
			Ст.УдаленИзРейса = Ложь;
			//ЭтотОбъект.Модифицированность = Истина; 
		КонецЦикла;		
		
	КонецЦикла;
	
	//CeHbKA #3095 09.10.2020
	ОтправитьСтатусыДляУдаляемыхИзРейсаЗаказов();
	//CeHbKA #3095 09.10.2020
	
	УстановитьКоличествоДоставокИЗаборов();

	//++Переварюха Задача № 3665	
	ЗаказДобавленВЗапланированныйРейс();
	//--Переварюха Задача № 3665

	
	//Если ЭтотОбъект.Модифицированность() Тогда	
	//	Записать(РежимЗаписиДокумента.Запись);		
	//КонецЕсли;
	// <<--- МАС
	
КонецПроцедуры	

//CeHbKA 05.03.2019 #2837
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	//Сообщить("1 - "+ТекущаяДата());
	
	Запрос = Новый Запрос;	
	Запрос.Текст = "ВЫБРАТЬ
	            |	новаМестнаяДоставка.Ссылка КАК Заказ,
	            |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Ссылка КАК Рейс,
	            |	новаМестнаяДоставка.ТочкаПрибытия.Ссылка КАК ТочкаПрибытия,
	            |	новаМестнаяДоставка.ТочкаОтправления.Ссылка КАК ТочкаОтправления
	            |ИЗ
	            |	Документ.Рейс.Заказы КАК РейсЗаказы
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	            |		ПО РейсЗаказы.Заказ.Номер = новаМестнаяДоставка.Номер
	            |ГДЕ
	            |	РейсЗаказы.Ссылка.Ссылка = &Рейс
	            |	И РейсЗаказы.ВидЗаказа = ЗНАЧЕНИЕ(Перечисление.ВидыЗаказовВероут.Drop)
	            |	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ";
				
				
	Запрос.УстановитьПараметр("Рейс", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Набор1 = РегистрыСведений.новаЗаданияРейсов.СоздатьНаборЗаписей();
	Набор1.Отбор.Рейс.Установить(РейсМестнойДоставки.Ссылка);
	
	Набор2 = РегистрыСведений.новаТочкиМаршрутаРейсов.СоздатьНаборЗаписей();
	Набор2.Отбор.Рейс.Установить(РейсМестнойДоставки.Ссылка);
	
	НПП = 0;
	Сч2 = 0;
	
	НомерТочки = 1;
	КодТочки = 2;
		
	ЭтоПерваяСтрока = Истина;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
		//РегистрыСведений.новаЗаданияРейсов
		Нов = Набор1.Добавить();
		Нов.Рейс = ВыборкаДетальныеЗаписи.Рейс;
		Нов.КодТочки = НПП;
		Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Разгрузка;
		Нов.Доставка = ВыборкаДетальныеЗаписи.Заказ;
		
		Нов = Набор1.Добавить();
		Нов.Рейс = ВыборкаДетальныеЗаписи.Рейс;
		Нов.КодТочки = НПП;
		Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Разгрузка;
		Нов.Доставка = ВыборкаДетальныеЗаписи.Заказ;
		Нов.МаршрутСопровождения = Истина;
		Если НПП = 0 Тогда
			НПП = 2;
		Иначе	
			НПП = НПП + 1;
		КонецеСли;	
		
		//погрузка		
		Нов = Набор1.Добавить();
		Нов.Рейс = ВыборкаДетальныеЗаписи.Рейс;
		Нов.КодТочки = 1;
		Нов.НомерЗадания = Сч2;
		Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Погрузка;
		Нов.Доставка = ВыборкаДетальныеЗаписи.Заказ;
		
		Нов = Набор1.Добавить();
		Нов.Рейс = ВыборкаДетальныеЗаписи.Рейс;
		Нов.КодТочки = 1;
		Нов.НомерЗадания = Сч2;
		Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Погрузка;
		Нов.Доставка = ВыборкаДетальныеЗаписи.Заказ;
		Нов.МаршрутСопровождения = Истина;
		Сч2 = Сч2 + 1;
		
		//РегистрыСведений.новаТочкиМаршрутаРейсов
		Если ЭтоПерваяСтрока Тогда
			Ид = Новый УникальныйИдентификатор;
			Нов = Набор2.Добавить();
			Нов.Рейс = РейсМестнойДоставки.Ссылка;
			Нов.КодТочки = 1;
			Нов.ИдТочки = Ид;
			Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Погрузка;
			Нов.ТочкаМаршрута = ВыборкаДетальныеЗаписи.ТочкаОтправления;
			
			Нов = Набор2.Добавить();
			Нов.Рейс = РейсМестнойДоставки.Ссылка;
			Нов.КодТочки = 1;
			Нов.ИдТочки = Ид;
			Нов.МаршрутСопровождения = Истина;
			Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Погрузка;
			Нов.ТочкаМаршрута = ВыборкаДетальныеЗаписи.ТочкаОтправления;
		КонецЕсли; 
		
		ЭтоПерваяСтрока = Ложь;
		
		Ид = Новый УникальныйИдентификатор;
		Нов = Набор2.Добавить();
		Нов.Рейс = ВыборкаДетальныеЗаписи.Рейс;
		Нов.НомерТочки = НомерТочки;
		
		Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Разгрузка;
		Нов.ТочкаМаршрута = ВыборкаДетальныеЗаписи.ТочкаПрибытия;
		Нов.ИдТочки = Ид;
		
		Нов = Набор2.Добавить();
		Нов.Рейс = ВыборкаДетальныеЗаписи.Рейс;
		Нов.НомерТочки = НомерТочки;
		
		Если НомерТочки <> 1 Тогда
			Нов.КодТочки = КодТочки;
		КонецеСли;	
		
		Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Разгрузка;
		Нов.ТочкаМаршрута = ВыборкаДетальныеЗаписи.ТочкаПрибытия;
		Нов.ИдТочки = Ид;
		Нов.МаршрутСопровождения = Истина;
		
		НомерТочки = НомерТочки + 1;
		
	КонецЦикла; 
	
	Набор1.Записать();
	Набор2.Записать();
	
	//+++ БАО 09.10.2017 №1932
	ЗафиксироватьИсториюПрикрепленияЗаказаКРейсамНовый();
	//--- БАО 09.10.2017 №1932
	
	//Сообщить("2 - "+ТекущаяДата());
	//- ДробницаЗадача № 2732
	УстановитьЗоныТарификацииВРеализации();
	//Дробница Задача № 2732 -
	
	//Сообщить("3 - "+ТекущаяДата());
	
	//++Переварюха Задача № 3665
	СписокЗаказов = Новый Массив;
	
	Для каждого СтрЗаказ Из Заказы Цикл
		Если СтрЗаказ.ЗаказДобавленВЗапланированныйРейс Тогда
			
			СтруктураЗаказа = Новый Структура;
			СтруктураЗаказа.Вставить("Заказ", СтрЗаказ.Заказ);
			СтруктураЗаказа.Вставить("Терминал", ТерминалДоставки);
			
			СписокЗаказов.Добавить(СтруктураЗаказа);	
		
		КонецЕсли;	
	
	КонецЦикла;
	
	Если СписокЗаказов.Количество() > 0 Тогда
	
		lem.ЗафиксироватьМестонахождениеЗаказа(СписокЗаказов, Справочники.ВидыМестонахожденияЗаказа.УКурьера, Ссылка);	
	
	КонецЕсли;
	//--Переварюха Задача № 3665
	
КонецПроцедуры
//CeHbKA 05.03.2019 #2837
 
Процедура ОбработкаПроведения_Старая(Отказ, РежимПроведения)
	
	Сообщить("1 - "+ТекущаяДата());
	
	// Вставить содержимое обработчика.
	
	// Якурнов 26.10.2018 13:19:31 закомменчено 
	//ОбновлениеИнформацииВАдминкеИзминениеРейсаПоЗаказам();
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	новаМестнаяДоставка.Ссылка КАК Заказ,
	            |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Ссылка КАК Рейс
	            |ИЗ
	            |	Документ.Рейс.Заказы КАК РейсЗаказы
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	            |		ПО РейсЗаказы.Заказ.Номер = новаМестнаяДоставка.Номер
	            |ГДЕ
	            |	РейсЗаказы.Ссылка.Ссылка = &Рейс
	            |	И РейсЗаказы.ВидЗаказа = ЗНАЧЕНИЕ(Перечисление.ВидыЗаказовВероут.Drop)
	            |	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ";
				
				
	Зап.УстановитьПараметр("Рейс", Ссылка);
	Рез = Зап.Выполнить().Выгрузить();
	
	Наб = РегистрыСведений.новаЗаданияРейсов.СоздатьНаборЗаписей();
	Наб.Отбор.Рейс.Установить(РейсМестнойДоставки.Ссылка);
	
	НПП = 0;
	Сч2 = 0;
	Для Каждого Тек Из Рез Цикл
		Нов = Наб.Добавить();
		Нов.Рейс = Тек.Рейс;
		Нов.КодТочки = НПП;
		Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Разгрузка;
		Нов.Доставка = Тек.Заказ;
		
		Нов = Наб.Добавить();
		Нов.Рейс = Тек.Рейс;
		Нов.КодТочки = НПП;
		Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Разгрузка;
		Нов.Доставка = Тек.Заказ;
		Нов.МаршрутСопровождения = Истина;
		Если НПП = 0 Тогда
			НПП = 2;
		Иначе	
			НПП = НПП + 1;
		КонецеСли;	
		
		
		//погрузка
		
		Нов = Наб.Добавить();
		Нов.Рейс = Тек.Рейс;
		Нов.КодТочки = 1;
		Нов.НомерЗадания = Сч2;
		Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Погрузка;
		Нов.Доставка = Тек.Заказ;
		
		Нов = Наб.Добавить();
		Нов.Рейс = Тек.Рейс;
		Нов.КодТочки = 1;
		Нов.НомерЗадания = Сч2;
		Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Погрузка;
		Нов.Доставка = Тек.Заказ;
		Нов.МаршрутСопровождения = Истина;
		Сч2 = Сч2 + 1;
		
	КонецЦикла;	
	
	Наб.Записать();
	
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	новаМестнаяДоставка.Ссылка КАК Заказ,
	            |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Ссылка КАК Рейс,
	            |	новаМестнаяДоставка.ТочкаПрибытия.Ссылка КАК ТочкаПрибытия,
	            |	новаМестнаяДоставка.ТочкаОтправления.Ссылка КАК ТочкаОтправления
	            |ИЗ
	            |	Документ.Рейс.Заказы КАК РейсЗаказы
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	            |		ПО РейсЗаказы.Заказ.Номер = новаМестнаяДоставка.Номер
	            |ГДЕ
	            |	РейсЗаказы.Ссылка.Ссылка = &Рейс
	            |	И РейсЗаказы.ВидЗаказа = ЗНАЧЕНИЕ(Перечисление.ВидыЗаказовВероут.Drop)
	            |	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ";
				
				
	Зап.УстановитьПараметр("Рейс", Ссылка);
	Рез = Зап.Выполнить().Выгрузить();
	
	Наб = РегистрыСведений.новаТочкиМаршрутаРейсов.СоздатьНаборЗаписей();
	Наб.Отбор.Рейс.Установить(РейсМестнойДоставки.Ссылка);
	
	
	Если Рез.Количество() <> 0 Тогда
		Ид = Новый УникальныйИдентификатор;
		Нов = Наб.Добавить();
		Нов.Рейс = РейсМестнойДоставки.Ссылка;
		Нов.КодТочки = 1;
		Нов.ИдТочки = Ид;
		Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Погрузка;
		Нов.ТочкаМаршрута = Рез[0].ТочкаОтправления;
		
		Нов = Наб.Добавить();
		Нов.Рейс = РейсМестнойДоставки.Ссылка;
		Нов.КодТочки = 1;
		Нов.ИдТочки = Ид;
		Нов.МаршрутСопровождения = Истина;
		Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Погрузка;
		Нов.ТочкаМаршрута = Рез[0].ТочкаОтправления;
	КонецеСли;	
	
	НомерТочки = 1;
	КодТочки = 2;
	Для Каждого Тек Из Рез Цикл
		Ид = Новый УникальныйИдентификатор;
		Нов = Наб.Добавить();
		Нов.Рейс = Тек.Рейс;
		Нов.НомерТочки = НомерТочки;
		
		Если НомерТочки <> 1 Тогда
			Нов.КодТочки = КодТочки;
			КодТочки = КодТочки + 1;
			
			
		КонецеСли;	
		
		Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Разгрузка;
		Нов.ТочкаМаршрута = Тек.ТочкаПрибытия;
		Нов.ИдТочки = Ид;
		
		Нов = Наб.Добавить();
		Нов.Рейс = Тек.Рейс;
		Нов.НомерТочки = НомерТочки;
		
		Если НомерТочки <> 1 Тогда
			Нов.КодТочки = КодТочки;
		КонецеСли;	
		
		Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Разгрузка;
		Нов.ТочкаМаршрута = Тек.ТочкаПрибытия;
		Нов.ИдТочки = Ид;
		Нов.МаршрутСопровождения = Истина;
		
		НомерТочки = НомерТочки + 1;
		
	КонецЦикла;	
	Наб.Записать();
	
	//+++ БАО 09.10.2017 №1932
	//ЗафиксироватьИсториюПрикрепленияЗаказаКРейсамНовый();
	//--- БАО 09.10.2017 №1932
	
	Сообщить("2 - "+ТекущаяДата());
	
	//- ДробницаЗадача № 2732
	УстановитьЗоныТарификацииВРеализации();
	//Дробница Задача № 2732 -
	
	Сообщить("3 - "+ТекущаяДата());
	
КонецПроцедуры

Процедура ОбновлениеИнформацииВАдминкеИзминениеРейсаПоЗаказам()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	новаЗаданияРейсов.Рейс КАК Рейс,
		|	новаЗаданияРейсов.Доставка КАК Доставка,
		|	РейсЗаказы.Заказ.Номер КАК ЗаказНомер,
		|	РейсЗаказы.Заказ КАК Заказ,
		|	РейсЗаказы.Заказ.ЗонаТарификации.КодТарифа КАК ЗаказЗонаТарификацииКодТарифа,
		|	новаЗаданияРейсов.Рейс.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта,
		|	новаЗаданияРейсов.Рейс.Водитель КАК Водитель,
		|	новаЗаданияРейсов.Рейс.Экспедитор КАК Экспедитор,
		|	новаЗаданияРейсов.Рейс.Номер КАК НомерРейса,
		|	новаЗаданияРейсов.Доставка.ВремяПрибытияПо КАК ВремяПрибытияПо,
		|	новаЗаданияРейсов.Доставка.ТочкаПрибытия КАК ТочкаПрибытия
		|ИЗ
		|	Документ.Рейс.Заказы КАК РейсЗаказы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
		|		ПО РейсЗаказы.Заказ.Номер = новаЗаданияРейсов.Доставка.Номер
		|ГДЕ
		|	РейсЗаказы.Ссылка.Ссылка = &Ссылка
		|	И новаЗаданияРейсов.Рейс <> &Рейс
		|	И новаЗаданияРейсов.Рейс.Дата МЕЖДУ &ДатаНач И &ДатаКон";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Рейс", РейсМестнойДоставки);
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Дата));
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();

	НачалоСтр = "DECLARE @t TOrderCar   ";
	Стр = НачалоСтр;
	
	// Якурнов 08.08.2018 16:37:12
	НачалоСтр2 = "DECLARE @t TOrderTrip   ";
	Стр2 = НачалоСтр2;
	
	// - Дробница Р. 2482
	МассивПараметров = Новый Массив;
	// Дробница Р. 2482 -
	
	// Задача № 3029
	МассивСтатусовsetOrderStatus  = Новый Массив;
	// Задача № 3029
	
	Пока РезультатЗапроса.Следующий() Цикл
		//+++ БАО 29.05.2017 №744
	    //ЗонаРайон = ?(РезультатЗапроса.ЭтоМосква, 0, 1);
		ЗонаРайон = Формат(?(ЗначениеЗаполнено(РезультатЗапроса.ЗаказЗонаТарификацииКодТарифа), РезультатЗапроса.ЗаказЗонаТарификацииКодТарифа, 0),"ЧН=0; ЧГ=0" );
		//--- БАО 29.05.2017 №
		
		Стр = Стр + "                                                                                                                                                                                                                      
		|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(РезультатЗапроса.ЗаказНомер) + ",'" + РезультатЗапроса.НомерТранспорта + "','" + ПараметрыСеанса.ТекущийПользователь + "', '" + mas.ДатаИз1С(РезультатЗапроса.ВремяПрибытияПо, Ложь)+"', " + ?(РезультатЗапроса.ТочкаПрибытия="NULL", "NULL", "'" + СтрЗаменить(Строка(РезультатЗапроса.ТочкаПрибытия), "'", "") + "'") + "," + Строка(ЗонаРайон) + ")";
		
		// Якурнов 08.08.2018 16:33:24
		Стр2 = Стр2 + "
		|INSERT INTO @t ([orderId],[tripId],[car],[fio1],[fio2]) VALUES (" + СокрЛП(РезультатЗапроса.ЗаказНомер) + "," + Формат(Число(РезультатЗапроса.НомерРейса), "ЧГ=") + ",'" + РезультатЗапроса.НомерТранспорта + "','" + РезультатЗапроса.Водитель + "', '"+РезультатЗапроса.Экспедитор+"')";
		
		// - Дробница Р. 2482
		Если  Не ЗначениеЗаполнено(РезультатЗапроса.НомерТранспорта) Тогда Продолжить КонецЕсли; // ОТМЕНЯЕТ ОТПРАВКУ И SetOrderCars И SetOrderStatus по текущему заказу
		ПараметрыЗапроса = Новый Структура();
		ПараметрыЗапроса.Вставить("Address", ?(РезультатЗапроса.ТочкаПрибытия="NULL", "NULL", "'" + СтрЗаменить(Строка(РезультатЗапроса.ТочкаПрибытия), "'", "") + "'"));
		ПараметрыЗапроса.Вставить("Car",  СокрЛП(РезультатЗапроса.НомерТранспорта));
		ПараметрыЗапроса.Вставить("DeliveryDate", РезультатЗапроса.ВремяПрибытияПо);
		ПараметрыЗапроса.Вставить("IsRegion", Строка(ЗонаРайон));
		ПараметрыЗапроса.Вставить("OrderId", СокрЛП(РезультатЗапроса.ЗаказНомер));
		ПараметрыЗапроса.Вставить("Who", СокрЛП(ПараметрыСеанса.ТекущийПользователь));
		
		МассивПараметров.Добавить(ПараметрыЗапроса);				
		// Дробница Р. 2482 - 
		
		// Задача № 3029
		НомерСтатуса = 222;
		ИнициаторСостояния = Перечисления.ИнициаторыСостояния.ТранспортнаяКомпания;
		Если РаботаСоСтатусамиЗаказовСервер.СохранитьСтатус(РезультатЗапроса.Заказ, НомерСтатуса, Ссылка, ИнициаторСостояния, ТерминалДоставки) Тогда 
			ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалДоставки.Код));
			ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Initiator", РаботаСАдминкойСервер.ИнициаторСостоянияВАдминку(ИнициаторСостояния), ДопПараметрыСтатуса);	
			МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СокрЛП(РезультатЗапроса.ЗаказНомер), 
			НомерСтатуса, 
			"",
			,
			ТекущаяДата(),
			МассивСтатусовsetOrderStatus, 
			ДопПараметрыСтатуса); 		
		КонецЕсли;
		// Задача № 3029
		
	КонецЦикла;
	
	// - Дробница Р. 2482
	//Если Стр <> НачалоСтр Тогда	
	//	Евген.ЗапросКИнтернетМагазину(Стр + "
	//			|EXEC import_setOrderCarsFrom1C @t
	//			|", Евген.СоздатьПодключениеКИнтернетМагазину());
	//КонецЕсли;
	Если МассивПараметров.Количество() > 0 Тогда
		
		ПараметрыЗапроса = Новый Структура;		
		ПараметрыЗапроса.Вставить("orderCars", МассивПараметров);
		СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetOrderCarsResult, ПараметрыЗапроса);
		
	КонецЕсли;
	// Дробница Р. 2482 - 

	// Задача № 3029
	mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусовSetOrderStatus, "SetOrderStatus"); 
	// Задача № 3029
	
	// Якурнов 08.08.2018 16:34:33
	Если Стр2 <> НачалоСтр2 Тогда	
		//Асеев 09.09.2020 (Задача № 4205)>>>
		//добавлен КонтекстВызова
		Евген.ЗапросКИнтернетМагазину(Стр2 + "
		|EXEC import_setTripFrom1C @t
		|", Евген.СоздатьПодключениеКИнтернетМагазину(),,, "Документ.Рейс.МодульОбъекта.ОбновлениеИнформацииВАдминкеИзминениеРейсаПоЗаказам.1");
		//Асеев 09.09.2020 (Задача № 4205)<<<
	КонецЕсли;

	
	
	//+++ БАО 26.09.2017 №1868 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаборТовара.Номер КАК Номер,
	               |	ЗаборТовара.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта,
	               |	ЗаборТовара.ДатаДоставки КАК ДатаДоставки,
	               |	ЗаборТовара.ТочкаДоставки.Адрес.Наименование КАК АдресДоставки,
	               |	ЕСТЬNULL(ЗаборТовара.ТочкаДоставки.Москва, ИСТИНА) КАК ЭтоМосква,
	               |	РейсЗаказы.Ссылка КАК Рейс,
	               |	ЗаборТовара.Транспорт КАК Транспорт
	               |ПОМЕСТИТЬ ВТ_ЗаборыСДанными
	               |ИЗ
	               |	Документ.Рейс.Заказы КАК РейсЗаказы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	               |		ПО РейсЗаказы.Заказ = ЗаборТовара.Ссылка
	               |ГДЕ
	               |	РейсЗаказы.УдаленИзРейса = ЛОЖЬ
	               |	И РейсЗаказы.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаборыСДанными.Номер КАК Номер,
	               |	ПривязкаМашинКРейсамСрезПоследних.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта,
	               |	ВТ_ЗаборыСДанными.ДатаДоставки КАК ДатаДоставки,
	               |	ВТ_ЗаборыСДанными.АдресДоставки КАК АдресДоставки,
	               |	ВТ_ЗаборыСДанными.ЭтоМосква КАК ЭтоМосква,
	               |	ВТ_ЗаборыСДанными.Рейс КАК Рейс,
	               |	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
	               |	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор,
	               |	ПривязкаМашинКРейсамСрезПоследних.Рейс.РейсМестнойДоставки.Номер КАК НомерРейса
	               |ИЗ
	               |	ВТ_ЗаборыСДанными КАК ВТ_ЗаборыСДанными
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(
	               |				,
	               |				Рейс В
	               |					(ВЫБРАТЬ
	               |						ВТ_ЗаборыСДанными.Рейс КАК Рейс
	               |					ИЗ
	               |						ВТ_ЗаборыСДанными КАК ВТ_ЗаборыСДанными)) КАК ПривязкаМашинКРейсамСрезПоследних
	               |		ПО ВТ_ЗаборыСДанными.Рейс = ПривязкаМашинКРейсамСрезПоследних.Рейс
	               |			И ВТ_ЗаборыСДанными.Транспорт <> ПривязкаМашинКРейсамСрезПоследних.Транспорт";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
	Таб = Запрос.Выполнить().Выгрузить();
	
	НачалоСтр = "DECLARE @t TOrderCar   ";
	
	// Якурнов 08.08.2018 16:37:12
	НачалоСтр2 = "DECLARE @t TOrderTrip   ";
	Стр2 = НачалоСтр2;
	
	
	Стр = НачалоСтр;                                                                                                                                                                                                                                                           
	
	// - Дробница Р. 2482
	МассивПараметров = Новый Массив;
	// Дробница Р. 2482 -

	Для Каждого Тек Из Таб Цикл
		Стр = Стр + "                                                                                                                                                                                                                      
		|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(Тек.Номер) + ",'" + Тек.НомерТранспорта + "','" + ПараметрыСеанса.ТекущийПользователь + "', '"+mas.ДатаИз1С(Тек.ДатаДоставки, Ложь)+"', " + ?(Тек.АдресДоставки="NULL", "NULL", "'" + СтрЗаменить(Строка(Тек.АдресДоставки), "'", "") + "'") + ?(Тек.ЭтоМосква, ",0", ",1") + ")";
				
		// Якурнов 06.08.2018 11:48:14 Проверен НомерРейсаМестнойДоставки
		Если ЗначениеЗаполнено(Тек.НомерРейса) Тогда			
			Стр2 = Стр2 + "
			|INSERT INTO @t ([orderId],[tripId],[car],[fio1],[fio2]) VALUES (" + СокрЛП(Тек.Номер) + "," + Формат(Число(Тек.НомерРейса), "ЧГ=") + ",'" + Тек.НомерТранспорта + "','" + Тек.Водитель + "', '"+Тек.Экспедитор+"')";
		КонецЕсли;
		
		// - Дробница Р. 2482
		Если  Не ЗначениеЗаполнено(Тек.НомерТранспорта) Тогда Продолжить КонецЕсли;
		ПараметрыЗапроса = Новый Структура();
		ПараметрыЗапроса.Вставить("Address", ?(Тек.АдресДоставки="NULL", "NULL", "'" + СтрЗаменить(Строка(Тек.АдресДоставки), "'", "") + "'"));
		ПараметрыЗапроса.Вставить("Car", СокрЛП(Тек.НомерТранспорта));
		ПараметрыЗапроса.Вставить("DeliveryDate", Тек.ДатаДоставки);
		ПараметрыЗапроса.Вставить("IsRegion", ?(Тек.ЭтоМосква, "0", "1"));
		ПараметрыЗапроса.Вставить("OrderId", СокрЛП(Тек.Номер));
		ПараметрыЗапроса.Вставить("Who", СокрЛП(ПараметрыСеанса.ТекущийПользователь));
		
		МассивПараметров.Добавить(ПараметрыЗапроса);				
		// Дробница Р. 2482 - 

	КонецЦикла;	
	
	// - Дробница Р. 2482
	//Если Стр <> НачалоСтр Тогда	
	//	Евген.ЗапросКИнтернетМагазину(Стр + "
	//	|EXEC import_setOrderCarsFrom1C @t
	//	|", Евген.СоздатьПодключениеКИнтернетМагазину());
	//КонецЕсли;
	
	Если МассивПараметров.Количество() > 0 Тогда
		
		ПараметрыЗапроса = Новый Структура;		
		ПараметрыЗапроса.Вставить("orderCars", МассивПараметров);
		СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetOrderCarsResult, ПараметрыЗапроса);
		
	КонецЕсли;
	// Дробница Р. 2482 - 
	
	// Якурнов 08.08.2018 16:34:33
	Если Стр2 <> НачалоСтр2 Тогда	
		//Асеев 09.09.2020 (Задача № 4205)>>>
		//добавлен КонтекстВызова
		Евген.ЗапросКИнтернетМагазину(Стр2 + "
		|EXEC import_setTripFrom1C @t
		|", Евген.СоздатьПодключениеКИнтернетМагазину(),,, "Документ.Рейс.МодульОбъекта.ОбновлениеИнформацииВАдминкеИзминениеРейсаПоЗаказам.2");
		//Асеев 09.09.2020 (Задача № 4205)<<<
	КонецЕсли;
	

	//--- БАО 26.09.2017 №
	

	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	//Перварюха В.В. 09.10.2019
	Отказ = УчетОборудованияСервер.ПоРейсуСуществуетВыданноеОборудование(Ссылка);
				
	Если Отказ Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "По рейсу есть выданное оборудование";
		Сообщение.Сообщить();

		Возврат;
	КонецеСли;
	//Перварюха В.В. 09.10.2019
	
	// Вставить содержимое обработчика.
	Наб = РегистрыСведений.новаЗаданияРейсов.СоздатьНаборЗаписей();
	Наб.Отбор.Рейс.Установить(РейсМестнойДоставки.Ссылка);
	Наб.Записать();
	
	Наб = РегистрыСведений.новаТочкиМаршрутаРейсов.СоздатьНаборЗаписей();
	Наб.Отбор.Рейс.Установить(РейсМестнойДоставки.Ссылка);
	Наб.Записать();
	
КонецПроцедуры

//+++ БАО 09.10.2017 №1932
Процедура ЗафиксироватьИсториюПрикрепленияЗаказаКРейсам() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Период КАК Период,
	               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Заказ КАК Заказ,
	               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Рейс КАК Рейс,
	               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Транспорт КАК Транспорт,
	               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Заказ.ЗонаТарификации.КодТарифа КАК ЗаказЗонаТарификацииКод,
	               |	ДАТАВРЕМЯ(1, 1, 1) КАК Поле1
	               |ИЗ
	               |	РегистрСведений.ИсторияПрикрепленияЗаказаКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ИсторияПрикрепленияЗаказаКРейсамСрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	               |	ПривязкаМашинКРейсамСрезПоследних.Транспорт.НомерГосударственнойРегистрации КАК ТранспортНомерГосударственнойРегистрации,
	               |	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
	               |	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор
	               |ИЗ
	               |	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ПривязкаМашинКРейсамСрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РеализацияТоваровУслуг.ЗонаТарификации.КодТарифа КАК ЗонаТарификацииКодТарифа,
	               |	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	               |	РеализацияТоваровУслуг.Номер КАК ЗаказНомер,
	               |	ЕСТЬNULL(новаМестнаяДоставка.ВремяПрибытияПо, ДАТАВРЕМЯ(1, 1, 1)) КАК ВремяПрибытияПо,
	               |	новаМестнаяДоставка.ТочкаПрибытия.Наименование КАК ТочкаПрибытия,
	               |	NULL КАК ДатаДоставки
	               |ИЗ
	               |	Документ.Рейс.Заказы КАК РейсЗаказы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	               |			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	               |		ПО РейсЗаказы.Заказ = РеализацияТоваровУслуг.Ссылка
	               |ГДЕ
	               |	РейсЗаказы.Ссылка = &Рейс
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗаборТовара.ЗонаТарификации.КодТарифа,
	               |	РейсЗаказы.Заказ,
	               |	РейсЗаказы.Заказ.Номер,
	               |	ЗаборТовара.ВремяДоставкиПо,
	               |	ЗаборТовара.ТочкаДоставки.Наименование,
	               |	ЗаборТовара.ДатаДоставки
	               |ИЗ
	               |	Документ.Рейс.Заказы КАК РейсЗаказы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	               |		ПО РейсЗаказы.Заказ = ЗаборТовара.Ссылка
	               |ГДЕ
	               |	РейсЗаказы.Ссылка = &Рейс";
	
	Запрос.УстановитьПараметр("Рейс", Ссылка);
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ТЗ = Пакет[0].Выгрузить();
	
	МассивТранспорт = Пакет[1].Выгрузить();
	Если МассивТранспорт.Количество() > 0 Тогда
		ТранспортСсылка = МассивТранспорт[0].Транспорт;
	Иначе 
		Возврат;
	КонецЕсли;	
	
	КодыТарифа =  Пакет[2].Выгрузить();
	
	НачалоСтр = "DECLARE @t TOrderCar   ";
	Стр = НачалоСтр;
	
	// Якурнов 09.08.2018 9:12:28
	НачалоСтр2 = "DECLARE @t TOrderTrip   ";
	Стр2 = НачалоСтр2;

	НомерРейсаМестнойДоставки = Ссылка.РейсМестнойДоставки.Номер;

	// - Дробница Р. 2482
	МассивПараметров = Новый Массив;	
	// Дробница Р. 2482 - 
	
	// Задача № 3029	
	ЗаказыКРегистрации = Новый Массив;
	// Задача № 3029

	Для Каждого СтрокаЗаказ Из Заказы Цикл 
		
		НайденнаяСтрока = ТЗ.Найти(СтрокаЗаказ.Заказ, "Заказ");
		Если НайденнаяСтрока = Неопределено Или (НайденнаяСтрока <> Неопределено И НайденнаяСтрока.Транспорт <> ТранспортСсылка) Тогда
			
			Менеджер = РегистрыСведений.ИсторияПрикрепленияЗаказаКРейсам.СоздатьМенеджерЗаписи();
			Менеджер.Период = ТекущаяДата();
			Менеджер.Заказ = СтрокаЗаказ.Заказ;
			Менеджер.Рейс = Ссылка;
			Менеджер.Транспорт = ТранспортСсылка;
			Менеджер.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			
			Менеджер.Записать();
			
			ДанныеЗаказа = КодыТарифа.Найти(СтрокаЗаказ.Заказ, "Заказ");
			
			Если ДанныеЗаказа = Неопределено Тогда
				Продолжить;
			КонецЕсли;	
			
			Если ТипЗнч(ДанныеЗаказа.Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда
				ДанныеЗаказа.ВремяПрибытияПо = ДанныеЗаказа.ДатаДоставки + (ДанныеЗаказа.ВремяПрибытияПо - НачалоДня(ДанныеЗаказа.ВремяПрибытияПо));
			КонецЕсли;			
			
			ЗонаРайон = Формат(?(ЗначениеЗаполнено(ДанныеЗаказа.ЗонаТарификацииКодТарифа), ДанныеЗаказа.ЗонаТарификацииКодТарифа, 0),"ЧН=0; ЧГ=0" );
			
			Стр = Стр + "                                                                                                                                                                                                                      
			|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(ДанныеЗаказа.ЗаказНомер) + ",'" + МассивТранспорт[0].ТранспортНомерГосударственнойРегистрации + "','" + ПараметрыСеанса.ТекущийПользователь + "', '" + mas.ДатаИз1С(ДанныеЗаказа.ВремяПрибытияПо, Ложь)+"', " + ?(ДанныеЗаказа.ТочкаПрибытия="NULL", "NULL", "'" + СтрЗаменить(Строка(ДанныеЗаказа.ТочкаПрибытия), "'", "") + "'") + "," + Строка(ЗонаРайон) + ")";
						
			// Якурнов 09.08.2018 9:14:27 Проверен НомерРейсаМестнойДоставки 
			Если ЗначениеЗаполнено(НомерРейсаМестнойДоставки) Тогда			
				Стр2 = Стр2 + "
				|INSERT INTO @t ([orderId],[tripId],[car],[fio1],[fio2]) VALUES (" + СокрЛП(ДанныеЗаказа.ЗаказНомер) + "," + Формат(Число(НомерРейсаМестнойДоставки), "ЧГ=") + ",'" + МассивТранспорт[0].ТранспортНомерГосударственнойРегистрации + "','" + МассивТранспорт[0].Водитель + "', '"+МассивТранспорт[0].Экспедитор+"')";
			КонецЕсли;
			
			// - Дробница Р. 2482
			Если  Не ЗначениеЗаполнено(МассивТранспорт[0].ТранспортНомерГосударственнойРегистрации) Тогда Продолжить КонецЕсли;
			ПараметрыЗапроса = Новый Структура();
			ПараметрыЗапроса.Вставить("Address", ?(ДанныеЗаказа.ТочкаПрибытия="NULL", "NULL", "'" + СтрЗаменить(Строка(ДанныеЗаказа.ТочкаПрибытия), "'", "") + "'"));
			ПараметрыЗапроса.Вставить("Car", СокрЛП(МассивТранспорт[0].ТранспортНомерГосударственнойРегистрации));
			ПараметрыЗапроса.Вставить("DeliveryDate", ДанныеЗаказа.ВремяПрибытияПо);
			ПараметрыЗапроса.Вставить("IsRegion", Строка(ЗонаРайон));
			ПараметрыЗапроса.Вставить("OrderId", СокрЛП(ДанныеЗаказа.ЗаказНомер));
			ПараметрыЗапроса.Вставить("Who", СокрЛП(ПараметрыСеанса.ТекущийПользователь));
			
			МассивПараметров.Добавить(ПараметрыЗапроса);
			// Дробница Р. 2482 - 

			// Задача № 3029
			ЗаказыКРегистрации.Добавить(СтрокаЗаказ.Заказ);
			// Задача № 3029

		КонецЕсли;	
		
	КонецЦикла;	
	
	// Задача № 3029
		
	МассивСтатусовsetOrderStatus  = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РейсЗаказы.Ссылка КАК ДокументРегистратор,
		|	РейсЗаказы.Заказ КАК Реализация,
		|	РейсЗаказы.Заказ.Номер КАК НомерЗаказа,
		|	РейсЗаказы.Ссылка.ТерминалДоставки КАК Терминал,
		|	ЛОЖЬ КАК БылоЗакрытие,
		|	222 КАК Статус,
		|	ЗНАЧЕНИЕ(Перечисление.ИнициаторыСостояния.ИнтернетМагазин) КАК ИнициаторСостояния,
		|	ЛОЖЬ КАК ПредварительноеЗакрытие,
		|	КОЛИЧЕСТВО(СтатусыЗаказов.Период) КАК БылаРегистрация
		|ПОМЕСТИТЬ ВТ_Итоги
		|ИЗ
		|	Документ.Рейс.Заказы КАК РейсЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
		|		ПО (СтатусыЗаказов.Заказ = РейсЗаказы.Заказ)
		|			И (СтатусыЗаказов.ДокументРегистратор = РейсЗаказы.Ссылка)
		|			И (СтатусыЗаказов.Статус = 222)
		|ГДЕ
		|	РейсЗаказы.Заказ В(&Заказ)
		|	И РейсЗаказы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РейсЗаказы.Ссылка,
		|	РейсЗаказы.Заказ,
		|	РейсЗаказы.Ссылка.ТерминалДоставки,
		|	РейсЗаказы.Заказ.Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Итоги.ДокументРегистратор КАК ДокументРегистратор,
		|	ВТ_Итоги.Реализация КАК Реализация,
		|	ВТ_Итоги.НомерЗаказа КАК НомерЗаказа,
		|	ВТ_Итоги.Терминал КАК Терминал,
		|	ВТ_Итоги.БылоЗакрытие КАК БылоЗакрытие,
		|	ВТ_Итоги.Статус КАК Статус,
		|	ВТ_Итоги.ИнициаторСостояния КАК ИнициаторСостояния,
		|	ВТ_Итоги.ПредварительноеЗакрытие КАК ПредварительноеЗакрытие,
		|	ВТ_Итоги.БылаРегистрация КАК БылаРегистрация
		|ИЗ
		|	ВТ_Итоги КАК ВТ_Итоги
		|ГДЕ
		|	ВТ_Итоги.БылаРегистрация = 0";
	
	Запрос.УстановитьПараметр("Заказ", ЗаказыКРегистрации);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();	
	СопоставлениеИнициатора = РаботаСАдминкойСервер.СопоставлениеИнициатораСостоянияДляАдминки();
	
	Для Каждого СтрокаДвижения Из ТаблицаДвижений Цикл	
		
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалДоставки.Код));
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Initiator", РаботаСАдминкойСервер.ИнициаторСостоянияВАдминку(СтрокаДвижения.ИнициаторСостояния, СопоставлениеИнициатора), ДопПараметрыСтатуса);	
		МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СокрЛП(СтрокаДвижения.НомерЗаказа), 
		СтрокаДвижения.Статус, 
		"",
		,
		ТекущаяДата(),
		МассивСтатусовsetOrderStatus, 
		ДопПараметрыСтатуса); 
		
	КонецЦикла;
	
	mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусовSetOrderStatus, "SetOrderStatus");//ВРЕМЕННАЯ ЗАГЛУШКА ОТКЛЮЧЕНА  // Задача № 3029
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДвижений); // Задача № 3029	
	
	// - Дробница Р. 2482
	//Если Стр <> НачалоСтр Тогда	
	//	Евген.ЗапросКИнтернетМагазину(Стр + "
	//	|EXEC import_setOrderCarsFrom1C @t
	//	|", Евген.СоздатьПодключениеКИнтернетМагазину());
	//КонецЕсли;
	Если МассивПараметров.Количество() > 0 Тогда
		
		ПараметрыЗапроса = Новый Структура;		
		ПараметрыЗапроса.Вставить("orderCars", МассивПараметров);
		СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetOrderCarsResult, ПараметрыЗапроса);
		
	КонецЕсли;	
	// Дробница Р. 2482 - 	
			

	// Якурнов 09.08.2018 9:15:03
	//Асеев 09.09.2020 (Задача № 4205)>>>
	//добавлен КонтекстВызова
	Если Стр2 <> НачалоСтр2 Тогда	
		Евген.ЗапросКИнтернетМагазину(Стр2 + "
		|EXEC import_setTripFrom1C @t
		|", Евген.СоздатьПодключениеКИнтернетМагазину(),,, "Документ.Рейс.МодульОбъекта.ЗафиксироватьИсториюПрикрепленияЗаказаКРейсам");
	КонецЕсли;
	//Асеев 09.09.2020 (Задача № 4205)<<<
	
КонецПроцедуры	
//--- БАО 09.10.2017 №1932 

Процедура ОбработатьСтатусыКРегистрации(ЗаказыКРегистрации) Экспорт  // Задача № 3029	
	
	МассивСтатусовsetOrderStatus  = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РейсЗаказы.Ссылка КАК ДокументРегистратор,
		|	РейсЗаказы.Заказ КАК Реализация,
		|	РейсЗаказы.Заказ.Номер КАК НомерЗаказа,
		|	РейсЗаказы.Ссылка.ТерминалДоставки КАК Терминал,
		|	ЛОЖЬ КАК БылоЗакрытие,
		|	222 КАК Статус,
		|	ЗНАЧЕНИЕ(Перечисление.ИнициаторыСостояния.ИнтернетМагазин) КАК ИнициаторСостояния,
		|	ЛОЖЬ КАК ПредварительноеЗакрытие,
		|	КОЛИЧЕСТВО(СтатусыЗаказов.Период) КАК БылаРегистрация
		|ПОМЕСТИТЬ ВТ_Итоги
		|ИЗ
		|	Документ.Рейс.Заказы КАК РейсЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
		|		ПО (СтатусыЗаказов.Заказ = РейсЗаказы.Заказ)
		|			И (СтатусыЗаказов.ДокументРегистратор = РейсЗаказы.Ссылка)
		|			И (СтатусыЗаказов.Статус = 222)
		|ГДЕ
		|	РейсЗаказы.Заказ В(&Заказ)
		|	И РейсЗаказы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РейсЗаказы.Ссылка,
		|	РейсЗаказы.Заказ,
		|	РейсЗаказы.Ссылка.ТерминалДоставки,
		|	РейсЗаказы.Заказ.Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Итоги.ДокументРегистратор КАК ДокументРегистратор,
		|	ВТ_Итоги.Реализация КАК Реализация,
		|	ВТ_Итоги.НомерЗаказа КАК НомерЗаказа,
		|	ВТ_Итоги.Терминал КАК Терминал,
		|	ВТ_Итоги.БылоЗакрытие КАК БылоЗакрытие,
		|	ВТ_Итоги.Статус КАК Статус,
		|	ВТ_Итоги.ИнициаторСостояния КАК ИнициаторСостояния,
		|	ВТ_Итоги.ПредварительноеЗакрытие КАК ПредварительноеЗакрытие,
		|	ВТ_Итоги.БылаРегистрация КАК БылаРегистрация
		|ИЗ
		|	ВТ_Итоги КАК ВТ_Итоги
		|ГДЕ
		|	ВТ_Итоги.БылаРегистрация = 0";
	
	Запрос.УстановитьПараметр("Заказ", ЗаказыКРегистрации);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();	
	СопоставлениеИнициатора = РаботаСАдминкойСервер.СопоставлениеИнициатораСостоянияДляАдминки();
	
	Для Каждого СтрокаДвижения Из ТаблицаДвижений Цикл	
		
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалДоставки.Код));
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Initiator", РаботаСАдминкойСервер.ИнициаторСостоянияВАдминку(СтрокаДвижения.ИнициаторСостояния, СопоставлениеИнициатора), ДопПараметрыСтатуса);	
		МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СокрЛП(СтрокаДвижения.НомерЗаказа), 
		СтрокаДвижения.Статус, 
		"",
		,
		ТекущаяДата(),
		МассивСтатусовsetOrderStatus, 
		ДопПараметрыСтатуса); 
		
	КонецЦикла;
	
	mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусовSetOrderStatus, "SetOrderStatus");//ВРЕМЕННАЯ ЗАГЛУШКА ОТКЛЮЧЕНА  // Задача № 3029
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДвижений); // Задача № 3029	
	
КОнецПроцедуры	

// Якурнов 19.09.2018 11:31:17
Процедура ЗафиксироватьИсториюПрикрепленияЗаказаКРейсамНовый() Экспорт 
	
	Запрос = Новый Запрос;
	//Асеев 17.03.2021 (Задача № 3837)>>>
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	//               |	ПривязкаМашинКРейсамСрезПоследних.Транспорт.НомерГосударственнойРегистрации КАК ТранспортНомерГосударственнойРегистрации,
	//               |	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
	//               |	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор
	//               |ИЗ
	//               |	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ПривязкаМашинКРейсамСрезПоследних
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	РеализацияТоваровУслуг.ЗонаТарификации.КодТарифа КАК ЗонаТарификацииКодТарифа,
	//               |	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	//               |	РеализацияТоваровУслуг.Номер КАК ЗаказНомер,
	//               |	ЕСТЬNULL(новаМестнаяДоставка.ВремяПрибытияПо, ДАТАВРЕМЯ(1, 1, 1)) КАК ВремяПрибытияПо,
	//               |	новаМестнаяДоставка.ТочкаПрибытия.Наименование КАК ТочкаПрибытия,
	//               |	NULL КАК ДатаДоставки
	//               |ИЗ
	//               |	Документ.Рейс.Заказы КАК РейсЗаказы
	//               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//               |			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	//               |			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	//               |		ПО РейсЗаказы.Заказ = РеализацияТоваровУслуг.Ссылка
	//               |ГДЕ
	//               |	РейсЗаказы.Ссылка = &Рейс
	//               |
	//               |ОБЪЕДИНИТЬ ВСЕ
	//               |
	//               |ВЫБРАТЬ
	//               |	ЗаборТовара.ЗонаТарификации.КодТарифа,
	//               |	РейсЗаказы.Заказ,
	//               |	РейсЗаказы.Заказ.Номер,
	//               |	ЗаборТовара.ВремяДоставкиПо,
	//               |	ЗаборТовара.ТочкаДоставки.Наименование,
	//               |	ЗаборТовара.ДатаДоставки
	//               |ИЗ
	//               |	Документ.Рейс.Заказы КАК РейсЗаказы
	//               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	//               |		ПО РейсЗаказы.Заказ = ЗаборТовара.Ссылка
	//               |ГДЕ
	//               |	РейсЗаказы.Ссылка = &Рейс";
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт.НомерГосударственнойРегистрации КАК ТранспортНомерГосударственнойРегистрации,
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор
	|ИЗ
	|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ПривязкаМашинКРейсамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|	РеализацияТоваровУслуг.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (РейсЗаказы.Ссылка = &Рейс)
	|			И РейсЗаказы.Заказ = РеализацияТоваровУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыТарифаЗаказаСрезПоследних.Заказ КАК Заказ,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации
	|ПОМЕСТИТЬ ВТ_ПараметрыТарифаЗаказа
	|ИЗ
	|	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|			,
	|			Заказ В
	|				(ВЫБРАТЬ
	|					ВТ_Заказы.Заказ КАК Заказ
	|				ИЗ
	|					ВТ_Заказы КАК ВТ_Заказы)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПараметрыТарифаЗаказа.ЗонаТарификации.КодТарифа КАК ЗонаТарификацииКодТарифа,
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	ВТ_Заказы.Номер КАК ЗаказНомер,
	|	ЕСТЬNULL(новаМестнаяДоставка.ВремяПрибытияПо, ДАТАВРЕМЯ(1, 1, 1)) КАК ВремяПрибытияПо,
	|	новаМестнаяДоставка.ТочкаПрибытия.Наименование КАК ТочкаПрибытия,
	|	NULL КАК ДатаДоставки
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыТарифаЗаказа КАК ВТ_ПараметрыТарифаЗаказа
	|		ПО ВТ_Заказы.Заказ = ВТ_ПараметрыТарифаЗаказа.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО ВТ_Заказы.Номер = новаМестнаяДоставка.Номер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаборТовара.ЗонаТарификации.КодТарифа,
	|	ЗаборТовара.Ссылка,
	|	ЗаборТовара.Номер,
	|	ЗаборТовара.ВремяДоставкиПо,
	|	ЗаборТовара.ТочкаДоставки.Наименование,
	|	ЗаборТовара.ДатаДоставки
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	|		ПО (РейсЗаказы.Ссылка = &Рейс)
	|			И РейсЗаказы.Заказ = ЗаборТовара.Ссылка";
	//Асеев 17.03.2021 (Задача № 3837)<<<
	
	Запрос.УстановитьПараметр("Рейс", Ссылка);
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	ТЗПривязанныхМашин = ПакетЗапросов[0].Выгрузить();
	
	Если ТЗПривязанныхМашин.Количество() > 0 Тогда
		ТранспортПривязанныхМашин = ТЗПривязанныхМашин[0].Транспорт;
	Иначе 
		Возврат;
	КонецЕсли;	
	
	ТЗЗаказовСКодомТарифа =  ПакетЗапросов[3].Выгрузить();
	

	НачалоСтр = "DECLARE @t TOrderCar   ";
	Стр = НачалоСтр;
	
	// Якурнов 09.08.2018 9:12:28
	НачалоСтр2 = "DECLARE @t TOrderTrip   ";
	Стр2 = НачалоСтр2;

	НомерРейсаМестнойДоставки = Ссылка.РейсМестнойДоставки.Номер;

	// - Дробница Р. 2482
	МассивПараметров = Новый Массив;
	// Дробница Р. 2482 - 
	
	//CeHbKA  №2837
	ТЗ_Заказы = Заказы.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДокТЧ.НомерСтроки КАК НомерСтроки,
	               |	ДокТЧ.Заказ КАК Заказ
	               |ПОМЕСТИТЬ ДокТЧ
	               |ИЗ
	               |	&ДокТЧ КАК ДокТЧ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДокТЧ.Заказ КАК Заказ,
	               |	ЕСТЬNULL(ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
	               |	ЕСТЬNULL(ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Транспорт, ЗНАЧЕНИЕ(Справочник.новаТранспорт.ПустаяСсылка)) КАК Транспорт
	               |ИЗ
	               |	ДокТЧ КАК ДокТЧ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияПрикрепленияЗаказаКРейсам.СрезПоследних(
	               |				,
	               |				Заказ В
	               |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |						ДокТЧ.Заказ КАК Заказ
	               |					ИЗ
	               |						ДокТЧ КАК ДокТЧ)) КАК ИсторияПрикрепленияЗаказаКРейсамСрезПоследних
	               |		ПО ДокТЧ.Заказ = ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Заказ";
	
	Запрос.УстановитьПараметр("ДокТЧ", ТЗ_Заказы);
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	// Задача № 3029	
	ЗаказыКРегистрации = Новый Массив;
	// Задача № 3029

	Пока Выборка.Следующий() Цикл
	//CeHbKA  №2837
	
	//Для Каждого СтрокаЗаказ Из Заказы Цикл 
		
		// Якурнов 19.09.2018 15:49:52
		//>>>>>>>>>>>>>>>>>>>> Проверяем на последнюю машину в ИсторияПрикрепленияЗаказаКРейсам
		//Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		//               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Период КАК Период,
		//               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Транспорт КАК Транспорт
		//               |ИЗ
		//               |	РегистрСведений.ИсторияПрикрепленияЗаказаКРейсам.СрезПоследних(, Заказ = &Заказ) КАК ИсторияПрикрепленияЗаказаКРейсамСрезПоследних
		//               |
		//               |УПОРЯДОЧИТЬ ПО
		//               |	Период УБЫВ";
		//
		//Запрос.УстановитьПараметр("Заказ", СтрокаЗаказ.Заказ);
		//
		//Результат = Запрос.Выполнить();
		//Выборка = Результат.Выбрать();
		
		ЭтоНоваяМашинаКПривязке = Истина;  
		
		//Если Выборка.Следующий() Тогда
			//Если Выборка.Транспорт = ТранспортПривязанныхМашин Тогда
			//	ЭтоНоваяМашинаКПривязке = Ложь; 
			//КонецЕсли;
		//КонецЕсли;
		//<<<<<<<<<<<<<<<<<<<<<<
		
		//CeHbKA  №2837
		Если НЕ Выборка.Транспорт.Пустая() Тогда
			Если Выборка.Транспорт = ТранспортПривязанныхМашин Тогда
				ЭтоНоваяМашинаКПривязке = Ложь; 
			КонецЕсли;
		КонецЕсли; 
		
		СтрокаЗаказ = Выборка;
		//CeHbKA  №2837
		
		Если ЭтоНоваяМашинаКПривязке Тогда
			
			Менеджер = РегистрыСведений.ИсторияПрикрепленияЗаказаКРейсам.СоздатьМенеджерЗаписи();
			Менеджер.Период = ТекущаяДата();
			Менеджер.Заказ = СтрокаЗаказ.Заказ;
			Менеджер.Рейс = Ссылка;
			Менеджер.Транспорт = ТранспортПривязанныхМашин;
			Менеджер.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			
			Менеджер.Записать();
			
			ДанныеЗаказа = ТЗЗаказовСКодомТарифа.Найти(СтрокаЗаказ.Заказ, "Заказ");
			
			Если ДанныеЗаказа = Неопределено Тогда
				Продолжить;
			КонецЕсли;	
			
			Если ТипЗнч(ДанныеЗаказа.Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда
				ДанныеЗаказа.ВремяПрибытияПо = ДанныеЗаказа.ДатаДоставки + (ДанныеЗаказа.ВремяПрибытияПо - НачалоДня(ДанныеЗаказа.ВремяПрибытияПо));
			КонецЕсли;	
				
			
			ЗонаРайон = Формат(?(ЗначениеЗаполнено(ДанныеЗаказа.ЗонаТарификацииКодТарифа), ДанныеЗаказа.ЗонаТарификацииКодТарифа, 0),"ЧН=0; ЧГ=0" );
			
			Стр = Стр + "                                                                                                                                                                                                                      
			|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(ДанныеЗаказа.ЗаказНомер) + ",'" + ТЗПривязанныхМашин[0].ТранспортНомерГосударственнойРегистрации + "','" + ПараметрыСеанса.ТекущийПользователь + "', '" + mas.ДатаИз1С(ДанныеЗаказа.ВремяПрибытияПо, Ложь)+"', " + ?(ДанныеЗаказа.ТочкаПрибытия="NULL", "NULL", "'" + СтрЗаменить(Строка(ДанныеЗаказа.ТочкаПрибытия), "'", "") + "'") + "," + Строка(ЗонаРайон) + ")";
			
			
			//Асеев 11.09.2020 (Задача № 4205)>>>
			// Якурнов 09.08.2018 9:14:27 Проверен НомерРейсаМестнойДоставки 
			//Если ЗначениеЗаполнено(НомерРейсаМестнойДоставки) Тогда
			Если ЗначениеЗаполнено(НомерРейсаМестнойДоставки) И ЗначениеЗаполнено(ТЗПривязанныхМашин[0].ТранспортНомерГосударственнойРегистрации) Тогда
			//Асеев 11.09.2020 (Задача № 4205)<<<
				Стр2 = Стр2 + "
				|INSERT INTO @t ([orderId],[tripId],[car],[fio1],[fio2]) VALUES (" + СокрЛП(ДанныеЗаказа.ЗаказНомер) + "," + Формат(Число(НомерРейсаМестнойДоставки), "ЧГ=") + ",'" + ТЗПривязанныхМашин[0].ТранспортНомерГосударственнойРегистрации + "','" + ТЗПривязанныхМашин[0].Водитель + "', '"+ТЗПривязанныхМашин[0].Экспедитор+"')";
			КонецЕсли;
			
			// - Дробница Р. 2482
			Если  Не ЗначениеЗаполнено(ТЗПривязанныхМашин[0].ТранспортНомерГосударственнойРегистрации) Тогда Продолжить КонецЕсли;			
			ПараметрыЗапроса = Новый Структура();
			ПараметрыЗапроса.Вставить("Address", ?(ДанныеЗаказа.ТочкаПрибытия="NULL", "NULL", "'" + СтрЗаменить(Строка(ДанныеЗаказа.ТочкаПрибытия), "'", "") + "'"));
			ПараметрыЗапроса.Вставить("Car", СокрЛП(ТЗПривязанныхМашин[0].ТранспортНомерГосударственнойРегистрации));
			ПараметрыЗапроса.Вставить("DeliveryDate", ДанныеЗаказа.ВремяПрибытияПо);
			ПараметрыЗапроса.Вставить("IsRegion", Строка(ЗонаРайон));
			ПараметрыЗапроса.Вставить("OrderId", СокрЛП(ДанныеЗаказа.ЗаказНомер));
			ПараметрыЗапроса.Вставить("Who", СокрЛП(ПараметрыСеанса.ТекущийПользователь));
			
			МассивПараметров.Добавить(ПараметрыЗапроса);		
			// Дробница Р. 2482 - 

			// Задача № 3029
			ЗаказыКРегистрации.Добавить(ДанныеЗаказа.Заказ);
			// Задача № 3029

		КонецЕсли;	
		
	КонецЦикла;	
	
	ОбработатьСтатусыКРегистрации(ЗаказыКРегистрации); // Задача № 3029
	
	// - Дробница Р. 2482
	//Если Стр <> НачалоСтр Тогда	
	//	Евген.ЗапросКИнтернетМагазину(Стр + "
	//	|EXEC import_setOrderCarsFrom1C @t
	//	|", Евген.СоздатьПодключениеКИнтернетМагазину());
	//КонецЕсли;
	Если МассивПараметров.Количество() > 0 Тогда
		
		ПараметрыЗапроса = Новый Структура;		
		ПараметрыЗапроса.Вставить("orderCars", МассивПараметров);
		СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetOrderCarsResult, ПараметрыЗапроса,,,Истина);
		Если НЕ СтруктураВозврата.Успешно Тогда
			Сообщить("Ошибка выгрузки машин. " + СтруктураВозврата.ОписаниеОшибки, СтатусСообщения.Важное);
		КонецЕсли;
		
	КонецЕсли;	
	// Дробница Р. 2482 - 		

	// Якурнов 09.08.2018 9:15:03
	//Асеев 09.09.2020 (Задача № 4205)>>>
	//добавлен КонтекстВызова
	Если Стр2 <> НачалоСтр2 Тогда	
		Евген.ЗапросКИнтернетМагазину(Стр2 + "
		|EXEC import_setTripFrom1C @t
		|", Евген.СоздатьПодключениеКИнтернетМагазину(),,, "Документ.Рейс.МодульОбъекта.ЗафиксироватьИсториюПрикрепленияЗаказаКРейсамНовый");
	КонецЕсли;
	//Асеев 09.09.2020 (Задача № 4205)<<<

	
КонецПроцедуры

//- Дробница Задача № 2732
Процедура УстановитьЗоныТарификацииВРеализации()

	Запрос = Новый Запрос;
	//Асеев 17.03.2021 (Задача № 3837)>>>
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	РейсЗаказы.Заказ КАК Заказ
	//	|ИЗ
	//	|	Документ.Рейс.Заказы КАК РейсЗаказы
	//	|ГДЕ
	//	|	РейсЗаказы.Ссылка = &Ссылка
	//	|	И РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	//	|			И РейсЗаказы.Заказ.ЗонаТарификации = ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка)";
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних КАК ПараметрыТарифаЗаказаСрезПоследних
	|			ПО РеализацияТоваровУслуг.Ссылка = ПараметрыТарифаЗаказаСрезПоследних.Заказ
	|				И (ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации <> ЗНАЧЕНИЕ(Справочник.ГруппыРайонов.ПустаяСсылка))
	|		ПО (РейсЗаказы.Ссылка = &Ссылка)
	|			И РейсЗаказы.Заказ = РеализацияТоваровУслуг.Ссылка
	|ГДЕ
	|	ПараметрыТарифаЗаказаСрезПоследних.Заказ ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ТарификацияУслугСервер.ПривязкаЗонДоставкиНаЗаказы(Результат.Выгрузить().ВыгрузитьКолонку("Заказ"));
	КонецЕсли;
	//Асеев 17.03.2021 (Задача № 3837)<<<
	
КонецПроцедуры	
//Дробница Задача № 2732 - 

Процедура СоздатьРейсМестнойДоставки(ЗагруженИзВероут = Ложь) Экспорт
	Если РейсМестнойДоставки.Пустая() Тогда
		нРейс = БизнесПроцессы.новаРейсМестнойДоставки.СоздатьБизнесПроцесс();
		нРейс.Дата = ДатаРейса;
		нРейс.ДатаНачала = НачалоДня(ДатаРейса) + 32400;
		нРейс.ДатаКонца = НачалоДня(ДатаРейса) + 82800;
		нРейс.РейсЗагруженИзВероут = ЗагруженИзВероут;
		нРейс.Записать();
		нРейс.Старт();
		
		РейсМестнойДоставки = нРейс.Ссылка;
		Записать(РежимЗаписиДокумента.Запись);
		//
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		|	новаЗадачаРейсаМестнойДоставки.Ссылка Как План
		|ИЗ
		|	Задача.новаЗадачаРейсаМестнойДоставки КАК новаЗадачаРейсаМестнойДоставки
		|ГДЕ
		|	новаЗадачаРейсаМестнойДоставки.БизнесПроцесс.Ссылка = &Рейс
		|	И новаЗадачаРейсаМестнойДоставки.ТочкаМаршрута = ЗНАЧЕНИЕ(справочник.новаэтапыместнойдоставки.планированиеместнойдоставки)
		|	И новаЗадачаРейсаМестнойДоставки.Выполнена = ЛОЖЬ";
		Зап.УстановитьПараметр("Рейс", нРейс.Ссылка);			
		РезЗадач = Зап.Выполнить().Выбрать();
		Если РезЗадач.Следующий() Тогда
			Задача = РезЗадач.План.ПолучитьОбъект();
			Задача.ВыполнитьЗадачу();
		КонецеСли;	
	КонецЕсли;
	
КонецПроцедуры	

Процедура УстановитьЭкипаж(ДанныеЭкипажа, ДатаУстановки) Экспорт
	Наб = РегистрыСведений.ПривязкаМашинКРейсам.СоздатьНаборЗаписей();
	Наб.Отбор.Рейс.Установить(Ссылка);
	Наб.Отбор.Период.Установить(ДатаУстановки);
	
	Нов = Наб.Добавить();
	Нов.Период = ДатаУстановки;
	Нов.КтоПривязал = ПараметрыСеанса.ТекущийПользователь;
	Нов.Рейс = Ссылка;
	Нов.Транспорт = ДанныеЭкипажа.Транспорт;
	Нов.Водитель = ДанныеЭкипажа.Водитель;
	Нов.Экспедитор = ДанныеЭкипажа.Экспедитор;
	
	РД = РейсМестнойДоставки.ПолучитьОбъект();
	РД.Транспорт = ДанныеЭкипажа.Транспорт;
	РД.Водитель = ДанныеЭкипажа.Водитель;
	РД.Экспедитор = ДанныеЭкипажа.Экспедитор;
	
	РД.Записать();
	
	Наб.Записать();
КонецПроцедуры	

Процедура УстановитьПоездкуРейса(ПланируемоеВремяНачалаПоездки, ПланируемоеВремяОкончанияПоездки) Экспорт
	Поездки.Очистить();
	Нов = Поездки.Добавить();
	Нов.НомерПоездки = 1;
	Нов.ПланируемоеВремяНачалаПоездки = ПланируемоеВремяНачалаПоездки;
	Нов.ПланируемоеВремяОкончанияПоездки = ПланируемоеВремяОкончанияПоездки;
	
	Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры	
	

Процедура ДобавитьЗаказВРейс(Заказ) Экспорт
	Струк = Новый Структура;
	Струк.Вставить("Заказ", Заказ);
	
	НайденныеСтроки = Заказы.НайтиСтроки(Струк);
	
	Для Сч = 0 По НайденныеСтроки.Количество() - 1 Цикл
		Заказы.Удалить(НайденныеСтроки[Сч]);
	КонецЦикла;	
	
	Нов = Заказы.Добавить();
	Нов.Заказ = Заказ;
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда
		Нов.ВидЗаказа = Перечисления.ВидыЗаказовВероут.COLLECTION;
	ИначеЕсли ТипЗнч(Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда	
		Нов.ВидЗаказа = Перечисления.ВидыЗаказовВероут.DROP;
	КонецеСли;
	
	Записать(РежимЗаписиДокумента.Запись);
	Записать(РежимЗаписиДокумента.Проведение);
	//ЗафиксироватьИсториюПрикрепленияЗаказаКРейсамНовый();
КонецПроцедуры	

Процедура УдалитьЗаказИзРейса(Заказ) Экспорт
	Струк = Новый Структура;
	Струк.Вставить("Заказ", Заказ);
	
	НайденныеСтроки = Заказы.НайтиСтроки(Струк);
	
	Для Сч = 0 По НайденныеСтроки.Количество() - 1 Цикл
		Заказы.Удалить(НайденныеСтроки[Сч]);
	КонецЦикла;	
	
	Записать(РежимЗаписиДокумента.Запись);
	Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры	


Процедура УстановитьКоличествоДоставокИЗаборов() Экспорт
	КолДоставок = 0;
	КолЗаборов = 0;
	Для Каждого Тек Из Заказы Цикл
		Если ТипЗнч(Тек.Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			КолДоставок = КолДоставок + 1;
		ИначеЕсли ТипЗнч(Тек.Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда	
			КолЗаборов = КолЗаборов + 1;
		КонецеСли;	
	КонецЦикла;	
	
	КоличествоДоставок = КолДоставок;
	КоличествоЗаборов = КолЗаборов;
КонецПроцедуры
	
	
Процедура ПриЗаписи(Отказ)
		
КонецПроцедуры

//++Переварюха Задача № 3665
Процедура ЗаказДобавленВЗапланированныйРейс()

	Если ТекущаяДата() > Дата(Год(Ссылка.ДатаРейса), Месяц(Ссылка.ДатаРейса), День(Ссылка.ДатаРейса), 06, 00, 00) Тогда
		
		//Асеев 18.11.2020 (Задача № 3665)>>>
		//ЗаказыТЧ = Заказы.Выгрузить(,"НомерСтроки, Заказ, УдаленИзРейса, ЗаказДобавленВЗапланированныйРейс");
		//
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//	"ВЫБРАТЬ
		//	|	ЗаказыТЧ.НомерСтроки КАК НомерСтрокиТЧ,
		//	|	ЗаказыТЧ.Заказ КАК ЗаказТЧ,
		//	|	ЗаказыТЧ.УдаленИзРейса КАК УдаленИзРейсаТЧ,
		//	|	ЗаказыТЧ.ЗаказДобавленВЗапланированныйРейс КАК ЗаказДобавленВЗапланированныйРейсТЧ
		//	|ПОМЕСТИТЬ ДокТЧ
		//	|ИЗ
		//	|	&ЗаказыТЧ КАК ЗаказыТЧ
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	РейсЗаказы.НомерСтроки КАК НомерСтроки,
		//	|	РейсЗаказы.Заказ КАК Заказ,
		//	|	РейсЗаказы.УдаленИзРейса КАК УдаленИзРейса,
		//	|	РейсЗаказы.ЗаказДобавленВЗапланированныйРейс КАК ЗаказДобавленВЗапланированныйРейс
		//	|ПОМЕСТИТЬ ДокТЧ2
		//	|ИЗ
		//	|	Документ.Рейс.Заказы КАК РейсЗаказы
		//	|ГДЕ
		//	|	РейсЗаказы.Ссылка = &Ссылка
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ДокТЧ.ЗаказТЧ КАК Заказ
		//	|ПОМЕСТИТЬ ВТ_Заказы
		//	|ИЗ
		//	|	ДокТЧ КАК ДокТЧ
		//	|
		//	|ОБЪЕДИНИТЬ ВСЕ
		//	|
		//	|ВЫБРАТЬ
		//	|	ДокТЧ2.Заказ
		//	|ИЗ
		//	|	ДокТЧ2 КАК ДокТЧ2
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ВТ_Заказы.Заказ КАК Заказ
		//	|ПОМЕСТИТЬ ВТ_Заказы1
		//	|ИЗ
		//	|	ВТ_Заказы КАК ВТ_Заказы
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ВТ_Заказы.Заказ
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ЕСТЬNULL(ДокТЧ.НомерСтрокиТЧ, 0) КАК НомерСтроки,
		//	|	ВТ_Заказы1.Заказ КАК Заказ,
		//	|	ЕСТЬNULL(ДокТЧ.УдаленИзРейсаТЧ, ЛОЖЬ) КАК УдаленИзРейса_Стало,
		//	|	ЕСТЬNULL(ДокТЧ.ЗаказДобавленВЗапланированныйРейсТЧ, ЛОЖЬ) КАК ЗаказДобавленВЗапланированныйРейс_Стало,
		//	|	ЕСТЬNULL(ДокТЧ2.УдаленИзРейса, ЛОЖЬ) КАК УдаленИзРейса_Было,
		//	|	ЕСТЬNULL(ДокТЧ2.ЗаказДобавленВЗапланированныйРейс, ЛОЖЬ) КАК ЗаказДобавленВЗапланированныйРейс_Было,
		//	|	ВЫБОР
		//	|		КОГДА ДокТЧ2.Заказ ЕСТЬ NULL
		//	|			ТОГДА ИСТИНА
		//	|		ИНАЧЕ ЛОЖЬ
		//	|	КОНЕЦ КАК ЭтоНовый
		//	|ИЗ
		//	|	ВТ_Заказы1 КАК ВТ_Заказы1
		//	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокТЧ КАК ДокТЧ
		//	|		ПО ВТ_Заказы1.Заказ = ДокТЧ.ЗаказТЧ
		//	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокТЧ2 КАК ДокТЧ2
		//	|		ПО ВТ_Заказы1.Заказ = ДокТЧ2.Заказ
		//	|ГДЕ
		//	|	ДокТЧ.ЗаказТЧ ССЫЛКА Документ.РеализацияТоваровУслуг";
		//
		//Запрос.УстановитьПараметр("Ссылка", Ссылка);
		//Запрос.УстановитьПараметр("ЗаказыТЧ", ЗаказыТЧ);
		//
		//РезультатЗапроса = Запрос.Выполнить();
		//
		//Выборка = РезультатЗапроса.Выбрать();
		//
		//Пока Выборка.Следующий() Цикл
		//	Если Выборка.Заказ.ТерминалДоставки = ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.МоскваСтриж") Тогда
		//		Если Выборка.ЭтоНовый И (НЕ Выборка.УдаленИзРейса_Стало) Тогда
		//			Заказы[Выборка.НомерСтроки - 1].ЗаказДобавленВЗапланированныйРейс = Истина;		
		//		ИначеЕсли Выборка.УдаленИзРейса_Было И (НЕ Выборка.УдаленИзРейса_Стало) Тогда
		//			Заказы[Выборка.НомерСтроки - 1].ЗаказДобавленВЗапланированныйРейс = Истина;	
		//		КонецЕсли;
		//	КонецЕсли;
		//КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ТаблицаЗаказов", Заказы.Выгрузить(,"НомерСтроки, Заказ, УдаленИзРейса"));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг) КАК Заказ,
		|	РейсЗаказы.УдаленИзРейса КАК УдаленИзРейса
		|ПОМЕСТИТЬ ВТ_Было
		|ИЗ
		|	Документ.Рейс.Заказы КАК РейсЗаказы
		|ГДЕ
		|	РейсЗаказы.Ссылка = &Ссылка
		|	И РейсЗаказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТаблицаЗаказов.Заказ КАК Документ.РеализацияТоваровУслуг) КАК Заказ,
		|	ТаблицаЗаказов.УдаленИзРейса КАК УдаленИзРейса,
		|	ТаблицаЗаказов.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_Стало
		|ИЗ
		|	&ТаблицаЗаказов КАК ТаблицаЗаказов
		|ГДЕ
		|	ТаблицаЗаказов.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Стало.НомерСтроки - 1 КАК ИндексСтроки,
		|	НЕ ВТ_Стало.УдаленИзРейса КАК ЗаказДобавленВЗапланированныйРейс
		|ИЗ
		|	ВТ_Стало КАК ВТ_Стало
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Было КАК ВТ_Было
		|		ПО ВТ_Стало.Заказ = ВТ_Было.Заказ
		|ГДЕ
		|	ВТ_Стало.Заказ.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
		|	И (ВТ_Было.Заказ ЕСТЬ NULL
		|			ИЛИ ВТ_Было.УдаленИзРейса <> ВТ_Стало.УдаленИзРейса)";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Заказы[Выборка.ИндексСтроки].ЗаказДобавленВЗапланированныйРейс = Выборка.ЗаказДобавленВЗапланированныйРейс;
		КонецЦикла;
		//Асеев 18.11.2020 (Задача № 3665)<<<
		
	КонецЕсли;

КонецПроцедуры
//--Переварюха Задача № 3665