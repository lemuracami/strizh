
// Позволяет заполнять табличную часть "Спецификация" не ссылками на номенклатуру, а строками.
Перем ИспользоватьСтроковуюСпецификацию Экспорт; // <Булево>

// Позволяет запретить выбор одновременно нескольких категорий груза и условий перевозки.
Перем ВыборТолькоЕдинственнойКатегорииИУсловия Экспорт; // <Булево>

Перем ТаблицаУсловийПеревозки;
Перем ТаблицаКатегорий;
Перем ТаблицаСпецификации;

Перем ИсхПеревезеноПалетт;

//Отключение подключенных обработчиков
//
Процедура ВыполнитьОсвобождениеРесурсов() Экспорт
	
	ИспользоватьСтроковуюСпецификацию = Неопределено;
	ВыборТолькоЕдинственнойКатегорииИУсловия = Неопределено;
	ТаблицаУсловийПеревозки = Неопределено;
	ТаблицаКатегорий = Неопределено;
	ТаблицаСпецификации = Неопределено;
	ИсхПеревезеноПалетт = Неопределено;
	
КонецПроцедуры

#Если Клиент Тогда
//
// Создает на форме элементы управления, позволяющие редактировать документ.
//
// Параметры:
//  Форма  <Форма>
//  Панель <Панель>
//
Процедура ПодключитьИнтерфейс(Форма, Панель) Экспорт
	КоличествоПараметровОбработчика = ?(Метаданные.Документы.Содержит(Форма.Метаданные()), 3, 1);
	
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, Форма,
		"ПередЗаписью",
		КоличествоПараметровОбработчика,
		"ГрузОбъект.ПередЗаписьюИзФормы(Параметр2);");
	
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, Форма,
		"ПриЗакрытии",
		0,
		"ГрузОбъект.ВыполнитьОсвобождениеРесурсов();");
	
	Отступ = 8;
	
	Страница = Панель.Страницы.Вставить(0, "СпецификацияГруза", "Спецификация груза");
	Панель.ТекущаяСтраница = Страница;
	
	КомПанель = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("КоманднаяПанель"), Панель);
	КомПанель.Верх = 0;
	КомПанель.Лево = Отступ;
	КомПанель.Ширина = Панель.Ширина - Отступ * 2;
	КомПанель.Высота = 24;
	
	ТаблицаСпецификации = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ТабличноеПоле"), Панель);
	ТаблицаСпецификации.Лево = Отступ;
	ТаблицаСпецификации.Верх = КомПанель.Верх + КомПанель.Высота;
	ТаблицаСпецификации.Высота = Панель.Высота - 19 - Отступ - ТаблицаСпецификации.Верх;
	ТаблицаСпецификации.Ширина = Панель.Ширина - Отступ - ТаблицаСпецификации.Лево;
	ТаблицаСпецификации.Данные = "ГрузОбъект.Спецификация";
	ТаблицаСпецификации.ИзменяетДанные = Истина;
	ТаблицаСпецификации.УстановитьПривязку(ГраницаЭлементаУправления.Право, Панель, ГраницаЭлементаУправления.Право);
	ТаблицаСпецификации.УстановитьПривязку(ГраницаЭлементаУправления.Низ, Панель, ГраницаЭлементаУправления.Низ);
	ТаблицаСпецификации.ТолькоПросмотр = Ложь;
	
	ТаблицаСпецификации.СоздатьКолонки();
	ТаблицаСпецификации.Колонки.ЕдиницаИзмерения.ЭлементУправления.БыстрыйВыбор = Истина;
	ТаблицаСпецификации.Колонки.ЕдиницаИзмерения.ЭлементУправления.КнопкаОчистки = Ложь;
	
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ТаблицаСпецификации.Колонки.ЕдиницаИзмерения.ЭлементУправления,
		"НачалоВыбора",
		1,
		"ГрузОбъект.НачалоВыбораЕдиницыИзмеренияСтрокиСпецификации(Параметр1, Параметр2);");
		
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ТаблицаСпецификации.Колонки.Товар.ЭлементУправления,
		"ПриИзменении",
		0,
		"ГрузОбъект.ПриИзмененииТовараСтрокиСпецификации();");
		
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ТаблицаСпецификации.Колонки.Количество.ЭлементУправления,
		"ПриИзменении",
		0,
		"ГрузОбъект.ПриИзмененииКоличестваСтрокиСпецификации();");
		
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ТаблицаСпецификации.Колонки.ЕдиницаИзмерения.ЭлементУправления,
		"ПриИзменении",
		0,
		"ГрузОбъект.ПриИзмененииЕдиницыИзмеренияСтрокиСпецификации();");
		
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ТаблицаСпецификации,
		"ПриНачалеРедактирования",
		2,
		"ГрузОбъект.ПриНачалеРедактированияСтрокиСпецификации(Параметр2, Параметр3);");
		
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ТаблицаСпецификации,
		"ПриОкончанииРедактирования",
		2,
		"ГрузОбъект.ПриОкончанииРедактированияСтрокиСпецификации(Параметр2, Параметр3);");
		
	КомПанель.ИсточникДействий = ТаблицаСпецификации;
	КомПанель.АвтоЗаполнение = Истина;
	
	Страница = Панель.Страницы.Вставить(0, "ОбщиеРеквизитыГруза", "Груз");
	Панель.ТекущаяСтраница = Страница;
		
	Х = Отступ;
	У = Отступ;
	
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = 19;
	Надпись.Заголовок = "Стоимость:";
	Надпись.Ширина = новаОбщиеПроцедуры.ШиринаТекста("Требуется мест:");
	
	Х = Х + Надпись.Ширина + Отступ;
	
	Поле = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	Поле.Лево = Х;
	Поле.Верх = У;
	Поле.Высота = 19;
	Поле.Ширина = 80;
	Поле.Данные = "ГрузОбъект.Стоимость";
	Поле.ИзменяетДанные = Истина;
	
	Х = Х + Поле.Ширина + Отступ / 2;
	
	Поле = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	Поле.Лево = Х;
	Поле.Верх = У;
	Поле.Высота = 19;
	Поле.Ширина = 50;
	Поле.Данные = "ГрузОбъект.Валюта";
	Поле.КнопкаВыбора = Истина;
	Поле.КнопкаОчистки = Ложь;
	Поле.БыстрыйВыбор = Истина;
	Поле.ИзменяетДанные = Истина;
	
	Х = Х + Поле.Ширина + Отступ;
	
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = 19;
	Надпись.Заголовок = "Вес (кг):";
	Надпись.Ширина = новаОбщиеПроцедуры.ШиринаТекста(Надпись.Заголовок);
	
	Х = Х + Надпись.Ширина + Отступ;
	
	Поле = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	Поле.Лево = Х;
	Поле.Верх = У;
	Поле.Высота = 19;
	Поле.Ширина = 80;
	Поле.Данные = "ГрузОбъект.Вес";
	Поле.ИзменяетДанные = Истина;
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, Поле,
		"ПриИзменении",
		0,
		"ГрузОбъект.ПриИзмененииВеса();");
	
	Х = Х + Поле.Ширина + Отступ;
	
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = 19;
	Надпись.Заголовок = "Объем (м3):";
	Надпись.Ширина = новаОбщиеПроцедуры.ШиринаТекста("Маркировка:");
	
	Х = Х + Надпись.Ширина + Отступ;
	
	Поле = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	Поле.Лево = Х;
	Поле.Верх = У;
	Поле.Высота = 19;
	Поле.Ширина = 80;
	Поле.Данные = "ГрузОбъект.Объем";
	Поле.ИзменяетДанные = Истина;
	
	Х = Х + Поле.Ширина + Отступ;
	
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = 19;
	Надпись.Заголовок = "Палетт:";
	Надпись.Ширина = новаОбщиеПроцедуры.ШиринаТекста(Надпись.Заголовок);
	
	Х = Х + Надпись.Ширина + Отступ;
	
	Поле = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	Поле.Лево = Х;
	Поле.Верх = У;
	Поле.Высота = 19;
	Поле.Ширина = 80;
	Поле.Данные = "ГрузОбъект.ПеревезеноПалетт";
	Поле.ИзменяетДанные = Истина;
	Поле.УстановитьПривязку(ГраницаЭлементаУправления.Право, Панель, ГраницаЭлементаУправления.Право);
	
	Х = Отступ;
	У = У + 19 + 5;
	
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = 19;
	Надпись.Заголовок = "Требуется мест:";
	Надпись.Ширина = новаОбщиеПроцедуры.ШиринаТекста(Надпись.Заголовок);
	
	Х = Х + Надпись.Ширина + Отступ;
	
	Поле = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	Поле.Лево = Х;
	Поле.Верх = У;
	Поле.Высота = 19;
	Поле.Ширина = 80;
	Поле.Данные = "ГрузОбъект.КоличествоЕдиницПеревозки";
	Поле.ИзменяетДанные = Истина;
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, Поле,
		"ПриИзменении",
		0,
		"ГрузОбъект.ПриИзмененииКоличестваЕдиницПеревозки();");
	
	Х = Х + Поле.Ширина + Отступ / 2;
	
	Х = Х + 168 + Отступ;
	
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = 19;
	Надпись.Заголовок = "Маркировка:";
	Надпись.Ширина = новаОбщиеПроцедуры.ШиринаТекста(Надпись.Заголовок);
	
	Х = Х + Надпись.Ширина + Отступ;
	
	Поле = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	Поле.Лево = Х;
	Поле.Верх = У;
	Поле.Высота = 19;
	Поле.Ширина = Панель.Ширина - Отступ - Поле.Лево;
	Поле.Данные = "ГрузОбъект.Маркировка";
	Поле.ИзменяетДанные = Истина;
	Поле.УстановитьПривязку(ГраницаЭлементаУправления.Право, Панель, ГраницаЭлементаУправления.Право);
	
	Х = Отступ;
	У = У + 19 + 5;
	
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = 19;
	Надпись.Заголовок = "Условия перевозки:";
	Надпись.Ширина = 200;
	
	Х = Х + Надпись.Ширина + Отступ;
	
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = 19;
	Надпись.Заголовок = "Категории:";
	Надпись.Ширина = 200;
	
	Х = Х + Надпись.Ширина + Отступ;
	
	Надпись = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("Надпись"), Панель);
	Надпись.Лево = Х;
	Надпись.Верх = У;
	Надпись.Высота = 19;
	Надпись.Заголовок = "Описание:";
	Надпись.Ширина = Панель.Ширина - Отступ - Надпись.Лево;;
	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, Панель, ГраницаЭлементаУправления.Право);
		
	Х = Отступ;
	У = У + 19;
	
	ТаблицаУсловийПеревозки = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ТабличноеПоле"), Панель);
	ТаблицаУсловийПеревозки.Лево = Х;
	ТаблицаУсловийПеревозки.Верх = У;
	ТаблицаУсловийПеревозки.Высота = Панель.Высота - 19 -Отступ - ТаблицаУсловийПеревозки.Верх;
	ТаблицаУсловийПеревозки.Ширина = 200;
	ТаблицаУсловийПеревозки.УстановитьПривязку(ГраницаЭлементаУправления.Низ, Панель, ГраницаЭлементаУправления.Низ);
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ТаблицаУсловийПеревозки,
		"ПриОкончанииРедактирования",
		2,
		"ГрузОбъект.ПриОкончанииРедактированияСтрокиУсловийПеревозки(Параметр2, Параметр3);");
	
	СформироватьУсловияПеревозки();
	
	Х = Х + ТаблицаУсловийПеревозки.Ширина + Отступ;
	
	ТаблицаКатегорий = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ТабличноеПоле"), Панель);
	ТаблицаКатегорий.Лево = Х;
	ТаблицаКатегорий.Верх = У;
	ТаблицаКатегорий.Высота = Панель.Высота - 19 - Отступ - ТаблицаКатегорий.Верх;
	ТаблицаКатегорий.Ширина = 200;
	ТаблицаКатегорий.УстановитьПривязку(ГраницаЭлементаУправления.Низ, Панель, ГраницаЭлементаУправления.Низ);
	новаРасширениеФорм.УстановитьОбработчикСобытия(Форма, ТаблицаКатегорий,
		"ПриОкончанииРедактирования",
		2,
		"ГрузОбъект.ПриОкончанииРедактированияСтрокиКатегории(Параметр2, Параметр3);");
	
	СформироватьКатегории();
	
	Х = Х + ТаблицаКатегорий.Ширина + Отступ;
	
	Поле = новаРасширениеФорм.ДобавитьЭлементНаФорму(Форма, Тип("ПолеВвода"), Панель);
	Поле.Лево = Х;
	Поле.Верх = У;
	Поле.Высота = Панель.Высота - 19 - Отступ - Поле.Верх;
	Поле.Ширина = Панель.Ширина - Отступ - Поле.Лево;
	Поле.Данные = "ГрузОбъект.Описание";
	Поле.ИзменяетДанные = Истина;
	Поле.УстановитьПривязку(ГраницаЭлементаУправления.Право, Панель, ГраницаЭлементаУправления.Право);
	Поле.УстановитьПривязку(ГраницаЭлементаУправления.Низ, Панель, ГраницаЭлементаУправления.Низ);
	
	ЛишняяСтраница = Панель.Страницы.Найти("Страница1");
	Если ЛишняяСтраница <> Неопределено Тогда
		Панель.Страницы.Удалить(ЛишняяСтраница);
	КонецЕсли;
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
Процедура СформироватьУсловияПеревозки()
	ТаблицаУсловийПеревозки.ТолькоПросмотр = Ложь;
	ТаблицаУсловийПеревозки.Шапка = Ложь;
	ТаблицаУсловийПеревозки.ВертикальныеЛинии = Ложь;
	ТаблицаУсловийПеревозки.ГоризонтальныеЛинии = Ложь;
	ТаблицаУсловийПеревозки.ИзменятьСоставСтрок = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВсеУсловия.Ссылка КАК Условие,
	|	Представление(ВсеУсловия.Ссылка) КАК Условие_Пред,
	|	ВЫБОР КОГДА ВыбранныеУсловия.Условие ЕСТЬ NULL ТОГДА Ложь ИНАЧЕ Истина КОНЕЦ КАК Выбрано
	|ИЗ
	|	Справочник.новаУсловияПеревозки КАК ВсеУсловия
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.новаГруз.УсловияПеревозки КАК ВыбранныеУсловия
	|ПО
	|	ВыбранныеУсловия.Ссылка = &Ссылка И ВыбранныеУсловия.Условие = ВсеУсловия.Ссылка
	|
	|ГДЕ
	|	НЕ ВсеУсловия.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО ВсеУсловия.Код ВОЗР";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТаблицаУсловийПеревозки.Значение = Запрос.Выполнить().Выгрузить();
	
	Колонка = ТаблицаУсловийПеревозки.Колонки.Добавить("Выбрано", "");
	Колонка.Ширина = 3;
	Колонка.ИзменениеРазмера = ИзменениеРазмераКолонки.НеИзменять;
	Колонка.ДанныеФлажка = "Выбрано";
	Колонка.ТолькоПросмотр = Ложь;
	Колонка.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
	
	Колонка = ТаблицаУсловийПеревозки.Колонки.Добавить("Условие", "");
	Колонка.Данные = "Условие_Пред";
	Колонка.ТолькоПросмотр = Истина;
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
Процедура СформироватьКатегории()
	ТаблицаКатегорий.ТолькоПросмотр = Ложь;
	ТаблицаКатегорий.Шапка = Ложь;
	ТаблицаКатегорий.ВертикальныеЛинии = Ложь;
	ТаблицаКатегорий.ГоризонтальныеЛинии = Ложь;
	ТаблицаКатегорий.ИзменятьСоставСтрок = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВсеКатегории.Ссылка КАК Категория,
	|	Представление(ВсеКатегории.Ссылка) КАК Категория_Пред,
	|	ВЫБОР КОГДА ВыбранныеКатегории.Категория ЕСТЬ NULL ТОГДА Ложь ИНАЧЕ Истина КОНЕЦ КАК Выбрано
	|ИЗ
	|	Справочник.новаКатегорииГрузов КАК ВсеКатегории
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.новаГруз.Категории КАК ВыбранныеКатегории
	|ПО
	|	ВыбранныеКатегории.Ссылка = &Ссылка И ВыбранныеКатегории.Категория = ВсеКатегории.Ссылка
	|
	|ГДЕ
	|	НЕ ВсеКатегории.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО ВсеКатегории.Код ВОЗР";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТаблицаКатегорий.Значение = Запрос.Выполнить().Выгрузить();
	
	Колонка = ТаблицаКатегорий.Колонки.Добавить("Выбрано", "");
	Колонка.Ширина = 3;
	Колонка.ИзменениеРазмера = ИзменениеРазмераКолонки.НеИзменять;
	Колонка.ДанныеФлажка = "Выбрано";
	Колонка.ТолькоПросмотр = Ложь;
	Колонка.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
	
	Колонка = ТаблицаКатегорий.Колонки.Добавить("Категория", "");
	Колонка.Данные = "Категория_Пред";
	Колонка.ТолькоПросмотр = Истина;
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Обработчик события "ПередЗаписью" формы, в которой редактируется документ.
//
// Параметры:
//  Отказ <Булево>
//
Процедура ПередЗаписьюИзФормы(Отказ) Экспорт
	УсловияПеревозки.Очистить();
	Для Каждого стрУсловие Из ТаблицаУсловийПеревозки.Значение Цикл
		Если стрУсловие.Выбрано Тогда
			ЗаполнитьЗначенияСвойств(УсловияПеревозки.Добавить(), стрУсловие);
		КонецЕсли;
	КонецЦикла;
	
	Категории.Очистить();
	Для Каждого стрКатегория Из ТаблицаКатегорий.Значение Цикл
		Если стрКатегория.Выбрано Тогда
			ЗаполнитьЗначенияСвойств(Категории.Добавить(), стрКатегория);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Обработчик события "ПриИзменении" табличной части "Спецификация".
//
Процедура ПриИзмененииТовараСтрокиСпецификации() Экспорт
	ПересчитатьСтрокуСпецификации(ТаблицаСпецификации.ТекущиеДанные);
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Обработчик события "ПриИзменении" элемента управления колонки "Количество" табличной части "Спецификация".
//
Процедура ПриИзмененииКоличестваСтрокиСпецификации() Экспорт
	ПересчитатьСтрокуСпецификации(ТаблицаСпецификации.ТекущиеДанные);
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Обработчик события "ПриИзменении" элемента управления колонки "ЕдиницаИзмерения" табличной части "Спецификация".
//
Процедура ПриИзмененииЕдиницыИзмеренияСтрокиСпецификации() Экспорт
	ПересчитатьСтрокуСпецификации(ТаблицаСпецификации.ТекущиеДанные);
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Обработчик события "НачалоВыбора" элемента управления колонки "ЕдиницаИзмерения" табличной части "Спецификация".
//
// Параметры:
//  Элемент              <ПолеВвода>
//  СтандартнаяОбработка <Булево>
//
Процедура НачалоВыбораЕдиницыИзмеренияСтрокиСпецификации(Элемент, СтандартнаяОбработка) Экспорт
	Если ЗначениеЗаполнено(ТаблицаСпецификации.ТекущиеДанные.Товар) Тогда
		Если ТипЗнч(ТаблицаСпецификации.ТекущиеДанные.Товар) = Тип("СправочникСсылка.новаНоменклатура") Тогда
			Элемент.ВыборПоВладельцу = ТаблицаСпецификации.ТекущиеДанные.Товар;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Обработчик события "ПриНачалеРедактирования" табличной части "Спецификация".
//
// Параметры:
//  НоваяСтрока <Булево>
//  Копирование <Булево>
//
Процедура ПриНачалеРедактированияСтрокиСпецификации(НоваяСтрока, Копирование) Экспорт
	Если НоваяСтрока И Не Копирование Тогда
		Если ИспользоватьСтроковуюСпецификацию Тогда
			ТаблицаСпецификации.ТекущиеДанные.Товар = "";
			ТаблицаСпецификации.ТекущиеДанные.ЕдиницаИзмерения = "";
			ТаблицаСпецификации.Колонки.Товар.ЭлементУправления.КнопкаВыбора = Ложь;
			ТаблицаСпецификации.Колонки.Товар.ЭлементУправления.КнопкаОчистки = Ложь;
			ТаблицаСпецификации.Колонки.ЕдиницаИзмерения.ЭлементУправления.КнопкаВыбора = Ложь;
			ТаблицаСпецификации.Колонки.ЕдиницаИзмерения.ЭлементУправления.КнопкаОчистки = Ложь;
		Иначе	
			ТаблицаСпецификации.ТекущиеДанные.Товар = Справочники.новаНоменклатура.ПустаяСсылка();
			ТаблицаСпецификации.ТекущиеДанные.ЕдиницаИзмерения = Справочники.новаЕдиницыНоменклатуры.ПустаяСсылка();
			ТаблицаСпецификации.Колонки.Товар.ЭлементУправления.КнопкаВыбора = Истина;
			ТаблицаСпецификации.Колонки.Товар.ЭлементУправления.КнопкаОчистки = Ложь;
			ТаблицаСпецификации.Колонки.ЕдиницаИзмерения.ЭлементУправления.КнопкаВыбора = Истина;
			ТаблицаСпецификации.Колонки.ЕдиницаИзмерения.ЭлементУправления.КнопкаОчистки = Ложь;
			ТаблицаСпецификации.Колонки.ЕдиницаИзмерения.ЭлементУправления.БыстрыйВыбор = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Обработчик события "ПриОкончанииРедактирования" табличной части "Спецификация".
//
// Параметры:
//  НоваяСтрока <Булево>
//  Копирование <Булево>
//
Процедура ПриОкончанииРедактированияСтрокиСпецификации(НоваяСтрока, Копирование) Экспорт
	ПересчитатьСтрокуСпецификации(ТаблицаСпецификации.ТекущиеДанные);
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
Процедура ПересчитатьСтрокуСпецификации(Строка)
	Если Не ЗначениеЗаполнено(Строка.Товар) Тогда Возврат; КонецЕсли; 
	Если Не ЗначениеЗаполнено(Строка.ЕдиницаИзмерения) Тогда Возврат; КонецЕсли; 
	
	Если Строка.ЕдиницаИзмерения.Владелец <> Строка.Товар Тогда
		Строка.ЕдиницаИзмерения = Справочники.новаЕдиницыНоменклатуры.НайтиПоНаименованию("шт",,, Строка.Товар);
	КонецЕсли;
	
	Строка.Вес = Строка.ЕдиницаИзмерения.Вес * Строка.Количество;
	Строка.Объем = Строка.ЕдиницаИзмерения.Объем * Строка.Количество;
	
	Вес = Спецификация.Итог("Вес");
	Объем = Спецификация.Итог("Объем");
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Обработчик события "ПриОкончанииРедактирования" табличной части "Категории".
//
// Параметры:
//  НоваяСтрока          <Булево>
//  ОтменаРедактирования <Булево>
//
Процедура ПриОкончанииРедактированияСтрокиКатегории(НоваяСтрока, ОтменаРедактирования) Экспорт
	Если ТаблицаКатегорий.ТекущиеДанные.Выбрано Тогда
		Для Каждого стрИсклКатегория Из ТаблицаКатегорий.ТекущиеДанные.Категория.ИсключаемыеКатегории Цикл
			стрКатегория = ТаблицаКатегорий.Значение.Найти(стрИсклКатегория.Категория, "Категория");
			Если стрКатегория = Неопределено Тогда Продолжить; КонецЕсли;
			стрКатегория.Выбрано = Ложь;
		КонецЦикла;
		
		Если ВыборТолькоЕдинственнойКатегорииИУсловия Тогда
			Для Каждого стрКатегория Из ТаблицаКатегорий.Значение Цикл
				Если стрКатегория = ТаблицаКатегорий.ТекущиеДанные Тогда Продолжить; КонецЕсли;
				
				стрКатегория.Выбрано = Ложь;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Оповестить("ИзмененыКатегорииГруза", ЭтотОбъект);		
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Обработчик события "ПриОкончанииРедактирования" табличной части "Условия перевозки".
//
// Параметры:
//  НоваяСтрока          <Булево>
//  ОтменаРедактирования <Булево>
//
Процедура ПриОкончанииРедактированияСтрокиУсловийПеревозки(НоваяСтрока, ОтменаРедактирования) Экспорт
	Если ТаблицаУсловийПеревозки.ТекущиеДанные.Выбрано Тогда
		Если ВыборТолькоЕдинственнойКатегорииИУсловия Тогда
			Для Каждого стрУсловие Из ТаблицаУсловийПеревозки.Значение Цикл
				Если стрУсловие = ТаблицаУсловийПеревозки.ТекущиеДанные Тогда Продолжить; КонецЕсли;
				
				стрУсловие.Выбрано = Ложь;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Оповестить("ИзмененыУсловияПеревозкиГруза", ЭтотОбъект);		
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Обработчик события "ПриИзменении" поля "Палетт".
//
Процедура ПриИзмененииКоличестваЕдиницПеревозки() Экспорт
	Оповестить("ИзмененыХарактеристикиГруза", ЭтотОбъект);		
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Обработчик события "ПриИзменении" поля "Вес".
//
Процедура ПриИзмененииВеса() Экспорт
	Оповестить("ИзмененыХарактеристикиГруза", ЭтотОбъект);		
КонецПроцедуры
#КонецЕсли

#Если Клиент Тогда
//
// Возвращает выбранное условие перевозки.
//
// Возвращаемое значение:
//  <СправочникСсылка.новаУсловияПеревозки>
//
Функция ПолучитьВидПеревозки() Экспорт
	Для Каждого стрУсловие Из ТаблицаУсловийПеревозки.Значение Цикл
		Если стрУсловие.Выбрано Тогда
			Возврат стрУсловие.Условие;
		КонецЕсли;	
	КонецЦикла;
	
	Возврат Справочники.новаУсловияПеревозки.ПустаяСсылка();
КонецФункции
#КонецЕсли

#Если Клиент Тогда
//
// Возвращает выбранную категорию груза.
//
// Возвращаемое значение:
//  <СправочникСсылка.новаКатегорииГрузов>
//
Функция ПолучитьКатегориюГруза() Экспорт
	Для Каждого стрКатегория Из ТаблицаКатегорий.Значение Цикл
		Если стрКатегория.Выбрано Тогда
			Возврат стрКатегория.Категория;
		КонецЕсли;	
	КонецЦикла;
	
	Возврат Справочники.новаКатегорииГрузов.ПустаяСсылка();
КонецФункции
#КонецЕсли

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	

	Если Спецификация.Количество() > 0 Тогда
		Вес = Спецификация.Итог("Вес");
		Объем = Спецификация.Итог("Объем");
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если Отказ Тогда Возврат; КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	Если ИсхПеревезеноПалетт <> ПеревезеноПалетт Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПеревозкиРейсов.Рейс КАК Рейс,	
		|	СУММА(ПеревозкиРейсов.ПеревезеноПалетт) КАК ПеревезеноПалетт
		|
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|   	ЗаданияРейсов.Рейс КАК Рейс,
		|		ЗаданияРейсов.Доставка КАК Доставка,
		|       ЗаданияРейсов.Доставка.Груз.ПеревезеноПалетт КАК ПеревезеноПалетт
		|
		|	ИЗ
		|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|   		ЗаданияРейсов.Рейс КАК Рейс
		|		ИЗ
		|			РегистрСведений.новаЗаданияРейсов КАК ЗаданияРейсов
		|		ГДЕ
		|			ЗаданияРейсов.Доставка.Груз = &Груз
		|	     И НЕ ЗаданияРейсов.МаршрутСопровождения
		|		  И ЗаданияРейсов.Рейс.Стартован
		|		  И НЕ ЗаданияРейсов.Рейс.Завершен
		|		) КАК РейсыГруза
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.новаЗаданияРейсов КАК ЗаданияРейсов
		|	ПО
		|		ЗаданияРейсов.Рейс = РейсыГруза.Рейс
		|     И НЕ ЗаданияРейсов.МаршрутСопровождения
		|	) КАК ПеревозкиРейсов
		|
		|СГРУППИРОВАТЬ ПО ПеревозкиРейсов.Рейс";
		
		Запрос.УстановитьПараметр("Груз", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			обРейс = Выборка.Рейс.ПолучитьОбъект();
			обРейс.ПеревезеноПалетт = Выборка.ПеревезеноПалетт;
			обРейс.Записать();
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

ИспользоватьСтроковуюСпецификацию = Ложь;
ВыборТолькоЕдинственнойКатегорииИУсловия = Ложь;

ИсхПеревезеноПалетт = ПеревезеноПалетт;