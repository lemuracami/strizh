
&НаСервереБезКонтекста
Функция ПолучитьТоварыКДобавлению(Знач Доставка, Знач ПриходДС)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Доставка", Доставка);
	Запрос.УстановитьПараметр("ПриходДС", ПриходДС);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.КодМаркировки КАК КодМаркировки,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|		РеализацияТоваровУслугТовары.КодМаркировки КАК КодМаркировки,
	|		РеализацияТоваровУслугТовары.Количество КАК Количество,
	|		РеализацияТоваровУслугТовары.Цена КАК Цена,
	|		РеализацияТоваровУслугТовары.Сумма КАК Сумма
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|	ГДЕ
	|		РеализацияТоваровУслугТовары.Ссылка = &Доставка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровОтПокупателяТовары.Номенклатура,
	|		ВозвратТоваровОтПокупателяТовары.КодМаркировки,
	|		-ВозвратТоваровОтПокупателяТовары.Количество,
	|		ВозвратТоваровОтПокупателяТовары.Цена,
	|		-ВозвратТоваровОтПокупателяТовары.Сумма
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|				ПО ВозвратТоваровОтПокупателя.Ссылка = ВозвратТоваровОтПокупателяТовары.Ссылка
	|			ПО (РеализацияТоваровУслуг.Ссылка = &Доставка)
	|				И РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.КодМаркировки
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.КодМаркировки КАК КодМаркировки,
	|	ВТ_Товары.Цена КАК Цена,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВТ_Товары.Сумма КАК Сумма
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя.Товары КАК ПриходДСПоОтчетуВодителяТовары
	|		ПО (ПриходДСПоОтчетуВодителяТовары.Ссылка = &ПриходДС)
	|			И (ПриходДСПоОтчетуВодителяТовары.Доставка = &Доставка)
	|			И ВТ_Товары.Номенклатура = ПриходДСПоОтчетуВодителяТовары.Номенклатура
	|			И ВТ_Товары.КодМаркировки = ПриходДСПоОтчетуВодителяТовары.КодМаркировки
	|ГДЕ
	|	ПриходДСПоОтчетуВодителяТовары.Номенклатура ЕСТЬ NULL";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		ТоварыКДобавлению = Новый Массив;
		ШаблонТовара = Новый ФиксированнаяСтруктура("Номенклатура,КодМаркировки,Цена,Количество,Сумма");
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СтруктураТовара = Новый Структура(ШаблонТовара);
			ЗаполнитьЗначенияСвойств(СтруктураТовара, Выборка);
			ТоварыКДобавлению.Добавить(СтруктураТовара);
		КонецЦикла;
		
		Возврат ТоварыКДобавлению;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ВыборТовараКДобавлениюНаСервере(СтруктураТовара)
	
	Нов = Объект.Товары.Добавить();
	ЗаполнитьЗначенияСвойств(Нов, СтруктураТовара);
	Нов.ИсходноеКоличество = Нов.Количество;
	ПересчитатьДоставку(СтруктураТовара.Доставка);
	Записать(Новый Структура("РежимЗаписиДокумента", РежимЗаписиДокумента.Запись));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборТовараКДобавлению(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Результат.Вставить("Доставка", Параметры);
		ВыборТовараКДобавлениюНаСервере(Результат);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ВыбраннаяДоставка = Элементы.Доставки.ТекущиеДанные.Доставка;
	
	ТоварыКДобавлению = ПолучитьТоварыКДобавлению(ВыбраннаяДоставка, Объект.Ссылка);
	Если ТоварыКДобавлению <> Неопределено Тогда
		ОткрытьФорму("Документ.ПриходДСПоОтчетуВодителя.Форма.ТоварыКДобавлению", Новый Структура("ТоварыКДобавлению", ТоварыКДобавлению), ЭтаФорма,,,, Новый ОписаниеОповещения("ВыборТовараКДобавлению", ЭтотОбъект, ВыбраннаяДоставка), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		Сообщить("По выбранной доставке в документе указаны все товары!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если Объект.Товары.Количество() > 0 Или Объект.Доставки.Количество() > 0 Или Объект.ПриходныеКассовыеОрдера.Количество() > 0 
		//+++ БАО 11.07.2017 №1320 
		Или Объект.ЧекиЭкипажа.Количество() > 0 
		//--- БАО 11.07.2017 №1320 
		Тогда
		От = Вопрос("Документ перед заполнением будет очищен. Продолжить?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если От = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецеСли;	
	КонецеСли;	
	ЗаполнитьНаСервере();
	//+++ БАО 12.09.2017 №
	ДоставкиПриАктивизацииСтроки(Неопределено);
	//--- БАО 12.09.2017 №
	
КонецПроцедуры
//НаСервере

&НаСервере
Процедура ЗаполнитьНаСервере() Экспорт 
	
	Объект.Товары.Очистить();
	Объект.Доставки.Очистить();
	Объект.ПриходыНаСклад.Очистить();
	Объект.ЧекиЭкипажа.Очистить();
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьНаСервере();
	ДокументОбъект.ПересчитатьИтогиПоДоставкам();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	ПересчитатьИтогиПоДоставкамНаСервере();
	ОбновитьДанныеКолонки();
	
КонецПроцедуры	

&НаКлиенте
Процедура ДоставкиПриАктивизацииСтроки(Элемент)
	Если Элементы.Доставки.ТекущиеДанные <> Неопределено Тогда
		//Асеев 28.06.2022 (Задача № 4831)>>>
		Если Элементы.Доставки.ТекущиеДанные.НомерСтроки <> НомерСтрокиДоставки Тогда
			НомерСтрокиДоставки = Элементы.Доставки.ТекущиеДанные.НомерСтроки;
			Элементы.ЧекиЭкипажаОтборЧековПоЗаказу.Пометка = Истина;
			Элементы.ПлатежиAssistОтборAssistПоЗаказу.Пометка = Истина;
			
			СтруктураОтбора = Новый ФиксированнаяСтруктура("Заказ", Элементы.Доставки.ТекущиеДанные.Доставка);
			Элементы.ПлатежиAssist.ОтборСтрок = СтруктураОтбора;
			//Асеев 28.06.2022 (Задача № 4831)<<<
			
			//+++ БАО 11.07.2017 №1320 
			Элементы.ЧекиЭкипажа.ОтборСтрок = СтруктураОтбора;
			//--- БАО 11.07.2017 №1320 
			
			Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("Доставка", Элементы.Доставки.ТекущиеДанные.Доставка);
			Элементы.Товары.ТолькоПросмотр = Элементы.Доставки.ТекущиеДанные.ЧастичныйВыкупЗапрещен;
			Если Элементы.Товары.ТолькоПросмотр Тогда
				Элементы.Товары.ЦветФона = WebЦвета.Серый;
			Иначе
				Элементы.Товары.ЦветФона = WebЦвета.Белый;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕСли;	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
    Если Элементы.Товары.ТекущиеДанные <> Неопределено Тогда
        Если Элементы.Товары.ТекущиеДанные.ТипОплаты = ПредопределенноеЗначение("Справочник.ТипыОплат.Наличные") ИЛИ Элементы.Товары.ТекущиеДанные.ТипОплаты = ПредопределенноеЗначение("Справочник.ТипыОплат.ВКредит") Тогда 
            Элементы.Товары.ТекущиеДанные.Сумма = Окр(Элементы.Товары.ТекущиеДанные.Количество * Элементы.Товары.ТекущиеДанные.Цена, 2);
            ПересчитатьДоставку(Элементы.Товары.ТекущиеДанные.Доставка);
        ИначеЕсли Элементы.Товары.ТекущиеДанные.ТипОплаты = ПредопределенноеЗначение("Справочник.ТипыОплат.ПустаяСсылка") Тогда
            Элементы.Товары.ТекущиеДанные.Сумма = Окр(Элементы.Товары.ТекущиеДанные.Количество * Элементы.Товары.ТекущиеДанные.Цена, 2);
            ПересчитатьДоставку(Элементы.Товары.ТекущиеДанные.Доставка);
        Иначе
            Элементы.Товары.ТекущиеДанные.СуммаБезнал = Окр(Элементы.Товары.ТекущиеДанные.Количество * Элементы.Товары.ТекущиеДанные.Цена, 2);
            ПересчитатьДоставку(Элементы.Товары.ТекущиеДанные.Доставка);
        КонецЕсли;
    КонецеСли;	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьДоставку(Доставка) Экспорт 
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ПересчитатьДоставку(Доставка);
	ДокументОбъект.ПересчитатьИтогиПоДоставкам();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");

	ПересчитатьИтогиПоДоставкамНаСервере();
	ОбновитьДанныеКолонки();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Элементы.ГруппаСтраницаПКО.Видимость = Константы.СозданиеПКОПоКаждомуКонтрагенту.Получить();
	//Элементы.ПКО.Видимость = Не Константы.СозданиеПКОПоКаждомуКонтрагенту.Получить();
	
	//+++ БАО 08.06.2017 №1024 
	//ТолькоПросмотр = Объект.РейсЗакрыт;
	//Если Не Объект.РейсЗакрыт Тогда
	
	ТолькоПросмотр = baoВызовСервера.РейсЗакрыт(Объект.Ссылка);
		
	Если Не ТолькоПросмотр Тогда	
	//--- БАО 08.06.2017 №1024 
	
		Если Объект.Оператор.Пустая() Тогда
			Объект.Оператор = ПараметрыСеанса.ТекущийПользователь;
		КонецеСли;	
	КонецеСли;	
	
	
	//+++ БАО 31.07.2017 №1542     	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Доставки");
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Доставки.ОшибкаВСуммах");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Истина;
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Доставки.СуммаЧековЭкипажа");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ЭлементОтбора.ПравоеЗначение = 0;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Лосось);
	//--- БАО 31.07.2017 №1542 
	
	ПересчитатьИтогиПоДоставкамНаСервере();
	ОбновитьДанныеКолонки();
	
	//Асеев 28.06.2022 (Задача № 4831)>>>
	Элементы.ФормаКомандаОтчетЛогиста.Видимость = Объект.РежимОбъединенияФункционалаЛогистаИКассира;
	Элементы.ФормаКомандаОтчетЛогиста.Доступность = Объект.РежимОбъединенияФункционалаЛогистаИКассира И Не Объект.ОтчетВодителя.Пустая();
	//Асеев 28.06.2022 (Задача № 4831)<<<
	//Асеев 19.08.2022 (Задача № 4871)>>>
	Элементы.ДоставкиТребуетсяПодписаниеИВозвратБНДокументов.Видимость = Объект.РежимОбъединенияФункционалаЛогистаИКассира;
	Элементы.ДоставкиСопрДокументыВКоробке.Видимость = Объект.РежимОбъединенияФункционалаЛогистаИКассира;
	//Асеев 19.08.2022 (Задача № 4871)<<<

КонецПроцедуры

&НаКлиенте
Процедура ДоставкиПередУдалением(Элемент, Отказ)
	От = Вопрос("Вы действительно хотите удалить доставку из документа?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
	Если От = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
		Возврат;
	КонецЕСли;	
	
	Струк = Новый Структура;
	Струк.Вставить("Доставка", Элементы.Доставки.ТекущиеДанные.Доставка);
	
	Най = Объект.Товары.НайтиСтроки(Струк);
	Для Сч = 0 По Най.Количество() - 1 Цикл
		Объект.Товары.Удалить(Най[Сч]);
	КонецЦикла;	
	ПересчитатьИтогиПоДоставкам();
КонецПроцедуры

&НаКлиенте
Процедура ДоставкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока Тогда
		ДобавитьТоварыДоставки(Элементы.Доставки.ТекущиеДанные.Доставка);
	КонецеСли;	
	ПересчитатьИтогиПоДоставкам();
КонецПроцедуры

&НаСервере
Процедура ДобавитьТоварыДоставки(Доставка)
	Если Не ЗначениеЗаполнено(Доставка) Тогда
		Возврат;
	КонецеСли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.КодМаркировки КАК КодМаркировки,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|		РеализацияТоваровУслугТовары.КодМаркировки КАК КодМаркировки,
	|		РеализацияТоваровУслугТовары.Количество КАК Количество,
	|		РеализацияТоваровУслугТовары.Цена КАК Цена,
	|		РеализацияТоваровУслугТовары.Сумма КАК Сумма
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|	ГДЕ
	|		РеализацияТоваровУслугТовары.Ссылка = &Доставка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровОтПокупателяТовары.Номенклатура,
	|		ВозвратТоваровОтПокупателяТовары.КодМаркировки,
	|		-ВозвратТоваровОтПокупателяТовары.Количество,
	|		ВозвратТоваровОтПокупателяТовары.Цена,
	|		-ВозвратТоваровОтПокупателяТовары.Сумма
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|				ПО ВозвратТоваровОтПокупателя.Ссылка = ВозвратТоваровОтПокупателяТовары.Ссылка
	|			ПО (РеализацияТоваровУслуг.Ссылка = &Доставка)
	|				И РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.КодМаркировки,
	|	ВложенныйЗапрос.Цена
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0";
	
	Запрос.УстановитьПараметр("Доставка", Доставка);	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Нов = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Выборка);
		Нов.ИсходноеКоличество = Выборка.Количество;
		Нов.Доставка = Доставка;
	КонецЦикла;	
	ПересчитатьДоставку(Доставка);
	
КонецПроцедуры	

&НаСервере
Процедура ПересчитатьДоставкуНаСервере(Доставка)
	
	ПересчитатьДоставку(Доставка);
	Записать(Новый Структура("РежимЗаписиДокумента", РежимЗаписиДокумента.Запись));
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	ПересчитатьДоставкуНаСервере(Элементы.Доставки.ТекущиеДанные.Доставка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставкиСуммаДоставкиПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Элементы.Доставки.ТекущиеДанные.Итого = Элементы.Доставки.ТекущиеДанные.Сумма + Элементы.Доставки.ТекущиеДанные.СуммаДоставки;
КонецПроцедуры

&НаСервере
Процедура ПересчитатьИтогиПоДоставкамНаСервере(Пересчитывать = Ложь)
	
	//Асеев 03.10.2022 (Задача № 4905)>>>
	Если Пересчитывать Или Объект.ИтогоЗаказов <> Объект.Доставки.Количество() Тогда
		//пересчитываем или принудительно, или при незаполненности итогов
		ДокументОбъект = РеквизитФормыВЗначение("Объект");
		ДокументОбъект.ПересчитатьИтогиПоДоставкам();
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	КонецЕсли;
	//если не пересчитывать, значит только отобразить
	СуммаПоНаличке = Объект.ИтогоНаличные;
	СуммаЧековПоНаличке = Объект.ИтогоЧекиНаличные;
	СуммаПоТерминалу = Объект.ИтогоТерминал;
	СуммаПоТерминалуПодтвержденная = Объект.ИтогоТерминалПодтвержденный;
	СуммаЧековПоТерминалу = Объект.ИтогоЧекиТерминал;
	СуммаПоСБП = Объект.ИтогоСБП;
	ВсегоДоставок = Объект.ИтогоЗаказов;
	ДоставокВыполнено = Объект.ИтогоЗаказовВыполнено;
	ВыполненоВТомЧислеЧастично = Объект.ИтогоЗаказовВыполненоВТомЧислеЧастично;
	ВыполненоБезнал = Объект.ИтогоЗаказовВыполненоВТомЧислеБН;
	ВыполненоДокументыКВозврату = Объект.ИтогоЗаказовВыполненоВТомЧислеДокументыКВозврату;
	ДоставокНеВыполнено = Объект.ИтогоЗаказовНеВыполнено;
	НевыполненоВТомЧислеПеренесено = Объект.ИтогоЗаказовНеВыполненоВТомЧислеПеренесено;
	НевыполненоБезнал = Объект.ИтогоЗаказовНеВыполненоВТомЧислеБН;
	НевыполненоДокументыКВозврату = Объект.ИтогоЗаказовНеВыполненоВТомЧислеДокументыКВозврату;
	//Асеев 03.10.2022 (Задача № 4905)<<<

	Если СуммаПоТерминалу <> СуммаПоТерминалуПодтвержденная И Объект.ПлатежиAssist.Количество() Тогда
		Элементы.СуммаПоТерминалуПодтвержденная.ЦветФона = Новый Цвет(255, 150, 150);
	Иначе
		Элементы.СуммаПоТерминалуПодтвержденная.ЦветФона = Новый Цвет();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьИтогиПоДоставкам() Экспорт
	
	ПересчитатьИтогиПоДоставкамНаСервере(Истина);
	ОбновитьДанныеКолонки();
	
КонецПроцедуры	

&НаКлиенте
Процедура ДоставкиТипОплаты1ПриИзменении(Элемент)
    ТекущиеДанные   = Элементы.Доставки.ТекущиеДанные;
	
	Если Не НеменяемыйТипОплаты.Пустая() Тогда
		ТекущиеДанные.ТипОплаты = НеменяемыйТипОплаты;
		Возврат;
	КонецЕсли;
	
    Если ТекущиеДанные.ТипОплаты = ПредопределенноеЗначение("Справочник.ТипыОплат.Наличные") Тогда
        Если ТекущиеДанные.Сумма = 0 Тогда
            ТекущиеДанные.Сумма = ТекущиеДанные.СуммаБезнал - ТекущиеДанные.СуммаДоставки;    
        КонецЕсли;
        ТекущиеДанные.Итого = ТекущиеДанные.Сумма+ТекущиеДанные.СуммаДоставки;
        ТекущиеДанные.СуммаБезнал = 0;
        ПересчитатьСуммуТоваров(ТекущиеДанные.Доставка,ТекущиеДанные.ТипОплаты);
    ИначеЕсли ТекущиеДанные.ТипОплаты = ПредопределенноеЗначение("Справочник.ТипыОплат.ВКредит") Или ТекущиеДанные.ТипОплаты = ПредопределенноеЗначение("Справочник.ТипыОплат.БезналичныйРасчет") Тогда 
        Сообщить("Нельзя менять тип оплаты на " + ТекущиеДанные.ТипОплаты + "!");
        ТекущиеДанные.ТипОплаты = ПредопределенноеЗначение("Справочник.ТипыОплат.ПустаяСсылка");
        Возврат;
    Иначе
        Если ТекущиеДанные.СуммаБезнал = 0 Тогда
            ТекущиеДанные.СуммаБезнал = ТекущиеДанные.Сумма + ТекущиеДанные.СуммаДоставки;    
        КонецЕсли;
        ТекущиеДанные.Итого = 0;
        ТекущиеДанные.Сумма = 0;
        ПересчитатьСуммуТоваров(ТекущиеДанные.Доставка,ТекущиеДанные.ТипОплаты);
    КонецЕсли;
КонецПроцедуры

//
&НаКлиенте
Процедура ПересчитатьСуммуТоваров(Доставка,ТипОплаты)
    МассивСтрок = Объект.Товары.НайтиСтроки(Новый Структура("Доставка",Доставка));
    Для каждого Стр Из МассивСтрок Цикл
        Если ТипОплаты = ПредопределенноеЗначение("Справочник.ТипыОплат.Наличные") Тогда
            Стр.СуммаБезнал = 0;
            Стр.Сумма = Стр.Количество*Стр.Цена;
        Иначе
            Стр.Сумма = 0;
            Стр.СуммаБезнал = Стр.Количество*Стр.Цена;
        КонецЕсли;
    	Стр.ТипОплаты = ТипОплаты;
    КонецЦикла;
КонецПроцедуры // ПересчитатьСуммуТоваров()


&НаКлиенте
Процедура ДоставкиТипОплаты1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
	ТекущиеДанные   = Элементы.Доставки.ТекущиеДанные;
	ТипОплаты       = ТекущиеДанные.ТипОплаты;
	Если ТипОплаты = ПредопределенноеЗначение("Справочник.ТипыОплат.ВКредит") Или ТипОплаты = ПредопределенноеЗначение("Справочник.ТипыОплат.БезналичныйРасчет") Тогда
	    СтандартнаяОбработка = Ложь;
		НеменяемыйТипОплаты = ТипОплаты;
	    Сообщить("Нельзя менять тип оплаты " + ТипОплаты + "!");
	Иначе
		НеменяемыйТипОплаты = Неопределено;
	//    СтандартнаяОбработка = Ложь;
	//    Форма = Справочники.ТипыОплат.ПолучитьФормуВыбора(,Элемент);
	//    Форма.РежимВыбора = Истина;
	//    
	//    СписокОтбора = ПолучитьСписокОтбораТипыОплат();
	//    Форма.Отбор.Ссылка.ВидСравнения =  ВидСравнения.ВСписке;
	//    Форма.Отбор.Ссылка.Использование = Истина;
	//    Форма.Отбор.Ссылка.Значение = СписокОтбора;
	//    Форма.Открыть();
	КонецЕсли;
    
КонецПроцедуры


&НаСервере
Функция ПроверитьЗаполнениеНаСервере(Отказ, ПараметрыЗаписи)
	
	ТекстПредупреждения = "";
	МассивСтрокСопрДок = Новый Массив;
	
    ЕстьНезаполненыеРеквизиты = Ложь;
    Для Каждого Стр Из Объект.Доставки Цикл
        Если Стр.ДатаПереноса = Дата("00010101") И (Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки
            ИЛИ Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносНаВторуюОчередь 
            ИЛИ Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом) Тогда
            Сообщить("В строке "+Стр.НомерСтроки+" не заполена дата переноса");
            ЕстьНезаполненыеРеквизиты = Истина;
		КонецЕсли;
		
		//Асеев 19.08.2022 (Задача № 4871)>>>
		Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			Если (Стр.ТребуетсяПодписаниеИВозвратСопрДокументов Или Стр.ТребуетсяПодписаниеИВозвратБНДокументов) И Не Стр.СопрДокументПоступил Тогда
				МассивСтрокСопрДок.Добавить(СокрЛП(Стр.Доставка.Номер));
			КонецЕсли;
		КонецЕсли;
		//Асеев 19.08.2022 (Задача № 4871)<<<
		
	КонецЦикла;
	Если ЕстьНезаполненыеРеквизиты Тогда
    	Отказ = Истина;
	КонецЕсли;
	
	//Асеев 19.08.2022 (Задача № 4871)>>>
	Если МассивСтрокСопрДок.Количество() Тогда
		ТекстПредупреждения = "По заказу № " + СтрСоединить(МассивСтрокСопрДок, ",") + " требуется принять документы." + Символы.ПС + "Отметка о приеме документов не установлена, проверьте корректность ввода данных в форме.";
	КонецЕсли;
	//Асеев 19.08.2022 (Задача № 4871)<<<
	
	Возврат ТекстПредупреждения;
	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ТекстПредупреждения = ПроверитьЗаполнениеНаСервере(Отказ, ПараметрыЗаписи);
	
	Если ТекстПредупреждения <> "" Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения,, Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДоставкиПричинаНеВыполненияПриИзменении(Элемент)
    ТекущиеДанные = Элементы.Доставки.ТекущиеДанные;
    Если НЕ (ТекущиеДанные.ПричинаНеВыполнения = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ПереносДоставки")
        ИЛИ ТекущиеДанные.ПричинаНеВыполнения = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ПереносНаВторуюОчередь")
        ИЛИ ТекущиеДанные.ПричинаНеВыполнения = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ПереносСЗаездом")) ТОГДА
        ТекущиеДанные.ДатаПереноса = Дата("00010101");    
    КонецЕсли;
    
КонецПроцедуры


&НаСервере
Процедура СоздатьЧекиВозвратПриходаНаСервере()

	ТипЧека = Перечисления.ТипыКассовыхЧеков.ЧекВозвратаПрихода;
	ТипЧекаПриход = Перечисления.ТипыКассовыхЧеков.ЧекПрихода;
	
	ЧекСоздан = Ложь;
	Для Каждого Тек Из Элементы.ЧекиЭкипажа.ВыделенныеСтроки Цикл
		ДанныеСтроки = Объект.ЧекиЭкипажа.Получить(Тек);
		Если ДанныеСтроки.ТипКассовогоЧека <> ТипЧекаПриход Тогда
			Продолжить;
		КонецеСли;	
		Если ЗначениеЗаполнено(ДанныеСтроки.ЧекВозвратПрихода) Тогда
			Продолжить;
		КонецЕсли;
		ВозвратныйЧек = РаботаСЧекамиККМСервер.СоздатьЧекНаОснованииЧека(ДанныеСтроки.Чек, ТипЧека, Объект.Оператор);
		ДанныеСтроки.ЧекВозвратПрихода = ВозвратныйЧек;
		ЧекСоздан = Истина;
	КонецЦикла;	
	
	Если ЧекСоздан Тогда
		Записать(Новый Структура("РежимЗаписиДокумента", РежимЗаписиДокумента.Запись));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПробитьЧекиВозвратПриходаНаСервере()
	
	МассивЧеков = Новый Массив;
	ТипЧекаПриход = Перечисления.ТипыКассовыхЧеков.ЧекПрихода;
	
	Для Каждого Тек Из Элементы.ЧекиЭкипажа.ВыделенныеСтроки Цикл
		ДанныеСтроки = Объект.ЧекиЭкипажа.Получить(Тек);
		Если ДанныеСтроки.ТипКассовогоЧека <> ТипЧекаПриход Тогда
			Продолжить;
		КонецеСли;	
		Если ЗначениеЗаполнено(ДанныеСтроки.ЧекВозвратПрихода) Тогда
			МассивЧеков.Добавить(ДанныеСтроки.ЧекВозвратПрихода);
		КонецеСли;	
	КонецЦикла;	
	
	Если МассивЧеков.Количество() Тогда
		ТЗЧеков = РаботаСЧекамиККМСервер.ПолучитьТЗПоМассивуЧеков(МассивЧеков);
		РаботаСЧекамиККМСервер.ПробитьЧекиПоФЗ54(ТЗЧеков, Объект.Ссылка);
		
		ДанныеСтроки = Объект.Доставки.Получить(Элементы.Доставки.ТекущаяСтрока);
		ДанныеСтроки.СуммаВозвратныхЧековКассира = ПолучитьСуммуВозвратныхЧековКассира(ДанныеСтроки.Доставка);
		
		Записать(Новый Структура("РежимЗаписиДокумента", РежимЗаписиДокумента.Запись));
		
		//Асеев 28.06.2022 (Задача № 4831)>>>
		ПересчитатьИтогиПоДоставкамНаСервере(Истина);
		ОбновитьДанныеКолонки();
		//Асеев 28.06.2022 (Задача № 4831)<<<
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПробитьЧекиВозвратПриходаНаСервере()
	
	СоздатьЧекиВозвратПриходаНаСервере();
	
	ПробитьЧекиВозвратПриходаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПробитьЧекиВозвратПрихода(Команда)
	
	//Асеев 29.06.2022 (Задача № 4833)>>>
	//СоздатьЧекиВозвратПриходаНаСервере();
	//
	//Парам = Новый Структура;
	//Парам.Вставить("РежимЗаписиДокумента", РежимЗаписиДокумента.Запись);
	//Записать(Парам);
	//
	//ПробитьЧекиВозвратПриходаНаКлиенте();
	
	СоздатьПробитьЧекиВозвратПриходаНаСервере();
	
	//Асеев 29.06.2022 (Задача № 4833)<<<
	
КонецПроцедуры

//&НаКлиенте
//Процедура ПробитьЧекиВозвратПриходаНаКлиенте()
//	МассивЧеков = Новый Массив;
//	ТипЧекаПриход = Перечисления.ТипыКассовыхЧеков.ЧекПрихода;
//	
//	Для Каждого Тек Из Элементы.ЧекиЭкипажа.ВыделенныеСтроки Цикл
//		ДанныеСтроки = Объект.ЧекиЭкипажа.Получить(Тек);
//		Если ДанныеСтроки.ТипКассовогоЧека <> ТипЧекаПриход Тогда
//			Продолжить;
//		КонецеСли;	
//		Если ЗначениеЗаполнено(ДанныеСтроки.ЧекВозвратПрихода) Тогда
//			МассивЧеков.Добавить(ДанныеСтроки.ЧекВозвратПрихода);
//		КонецеСли;	
//	КонецЦикла;	
//	
//	
//	Если МассивЧеков.Количество() <> 0 Тогда
//		ТЗЧеков = РаботаСЧекамиККМКлиент.ПолучитьТЗПоМассивуЧеков(МассивЧеков);
//		РаботаСЧекамиККМКлиент.ПробитьЧекиПоФЗ54(ТЗЧеков, Объект.Ссылка);
//	КонецеСли;
//	
//	ДанныеСтроки = Объект.Доставки.Получить(Элементы.Доставки.ТекущаяСтрока);
//	ДанныеСтроки.СуммаВозвратныхЧековКассира = ПолучитьСуммуВозвратныхЧековКассира(Элементы.Доставки.ТекущиеДанные.Доставка);
//	
//	Парам = Новый Структура;
//	Парам.Вставить("РежимЗаписиДокумента", РежимЗаписиДокумента.Запись);
//	Записать(Парам);	
//КонецПроцедуры	

Функция ПолучитьСуммуВозвратныхЧековКассира(Заказ)
	Зап = Новый Запрос;
	Зап.Текст =
	"ВЫБРАТЬ
	|	СУММА(ДополнительныеПараметрыЧеков.СуммаЧека) КАК СуммаЧеков
	|ИЗ
	|	Документ.ПриходДСПоОтчетуВодителя.ЧекиЭкипажа КАК ПриходДСПоОтчетуВодителяЧекиЭкипажа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЧеков КАК ДополнительныеПараметрыЧеков
	|		ПО (ПриходДСПоОтчетуВодителяЧекиЭкипажа.Ссылка = &Док)
	|			И (ПриходДСПоОтчетуВодителяЧекиЭкипажа.Заказ = &Заказ)
	|			И (ПриходДСПоОтчетуВодителяЧекиЭкипажа.ЧекВозвратПрихода.ЧекПробитНаККМ)
	|			И ПриходДСПоОтчетуВодителяЧекиЭкипажа.ЧекВозвратПрихода = ДополнительныеПараметрыЧеков.ЧекККМ";
	Зап.УстановитьПараметр("Док", Объект.Ссылка);
	Зап.УстановитьПараметр("Заказ", Заказ);
	Выб = Зап.Выполнить().Выбрать();
	
	Если Выб.Следующий() Тогда
		Возврат Выб.СуммаЧеков;
	Иначе
		Возврат 0;
	КонецеСли;	
КонецФункции

&НаКлиенте
Процедура ПробитьЧекиВозвратПрихода(Команда)
	
	//Асеев 29.06.2022 (Задача № 4833)>>>
	//МассивЧеков = Новый Массив;
	//ТипЧекаПриход = Перечисления.ТипыКассовыхЧеков.ЧекПрихода;
	//
	//Для Каждого Тек Из Элементы.ЧекиЭкипажа.ВыделенныеСтроки Цикл
	//	ДанныеСтроки = Объект.ЧекиЭкипажа.Получить(Тек);
	//	Если ДанныеСтроки.ТипКассовогоЧека <> ТипЧекаПриход Тогда
	//		Продолжить;
	//	КонецеСли;	
	//	Если ЗначениеЗаполнено(ДанныеСтроки.ЧекВозвратПрихода) Тогда
	//		МассивЧеков.Добавить(ДанныеСтроки.ЧекВозвратПрихода);
	//	КонецеСли;	
	//КонецЦикла;	
	//
	//
	//Если МассивЧеков.Количество() <> 0 Тогда
	//	ТЗЧеков = РаботаСЧекамиККМКлиент.ПолучитьТЗПоМассивуЧеков(МассивЧеков);
	//	РаботаСЧекамиККМКлиент.ПробитьЧекиПоФЗ54(ТЗЧеков, Объект.Ссылка);
	//КонецеСли;	
	//
	//ДанныеСтроки = Объект.Доставки.Получить(Элементы.Доставки.ТекущаяСтрока);
	//ДанныеСтроки.СуммаВозвратныхЧековКассира = ПолучитьСуммуВозвратныхЧековКассира(Элементы.Доставки.ТекущиеДанные.Доставка);
	//
	//Парам = Новый Структура;
	//Парам.Вставить("РежимЗаписиДокумента", РежимЗаписиДокумента.Запись);
	//Записать(Парам);
	
	ПробитьЧекиВозвратПриходаНаСервере();
	
	//Асеев 29.06.2022 (Задача № 4833)<<<
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеКолонки()
	
	ТипОплатыНаличные = Справочники.ТипыОплат.Наличные;
	ТипОплатыВКредит = Справочники.ТипыОплат.ВКредит;
	
	Для Каждого СтрокаДоставки Из Объект.Доставки Цикл
		Если СтрокаДоставки.ТипОплаты = ТипОплатыНаличные Или СтрокаДоставки.ТипОплаты = ТипОплатыВКредит Тогда
			Итого = СтрокаДоставки.Итого;
		Иначе
			Итого = СтрокаДоставки.СуммаБезнал;
		КонецЕсли;
		СтрокаДоставки.СуммаЧековОбщая = СтрокаДоставки.СуммаЧековЭкипажа - СтрокаДоставки.СуммаВозвратныхЧековЭкипажа - СтрокаДоставки.СуммаВозвратныхЧековКассира;
		СтрокаДоставки.ОшибкаВСуммах = Итого <> СтрокаДоставки.СуммаЧековОбщая;
	КонецЦикла;
	
КонецПроцедуры

//Асеев 14.05.2021 (Задача № 4559)>>>
&НаСервере
Процедура ОтборБНалНаСервере()
	
	ТекущаяКнопка = Элементы.ДоставкиОтборБНал;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		Элементы.Доставки.ОтборСтрок = Новый ФиксированнаяСтруктура("ТипОплаты", Справочники.ТипыОплат.БезналичныйРасчет);
	Иначе
		Элементы.Доставки.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборБНал(Команда)
	ОтборБНалНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтборСопрНаСервере()
	
	ТекущаяКнопка = Элементы.ДоставкиОтборСопр;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		Элементы.Доставки.ОтборСтрок = Новый ФиксированнаяСтруктура("ТребуетсяПодписаниеИВозвратСопрДокументов", Истина);
	Иначе
		Элементы.Доставки.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСопр(Команда)
	ОтборСопрНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДоставкиСопрДокументПоступилПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Доставки.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекСтрока.СопрДокументПоступил Тогда
		ТекСтрока.ТребуетсяПереподписаниеСопрДокумента = Ложь;
	КонецЕсли;
	
КонецПроцедуры
//Асеев 14.05.2021 (Задача № 4559)<<<

//Асеев 28.06.2022 (Задача № 4831)>>>
&НаСервере
Процедура СброситьПометкиКнопокОтбора(ТекущаяКнопка)
	
	Если ИмяКнопкиОтбораДоставок <> "" Тогда
		ПредыдущаяКнопка = Элементы[ИмяКнопкиОтбораДоставок];
		Если ПредыдущаяКнопка <> ТекущаяКнопка Тогда
			ПредыдущаяКнопка.Пометка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ИмяКнопкиОтбораДоставок = ТекущаяКнопка.Имя;
	
КонецПроцедуры

&НаСервере
Процедура ОтборНаличныеНаСервере()
	
	ТекущаяКнопка = Элементы.ДоставкиОтборНаличные;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		
		РезультатВыполнена = Справочники.новаРезультатМестнойДоставки.Выполнена;
		РезультатВыполненаЧастично = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично;
		ТипОплатыНаличные = Справочники.ТипыОплат.Наличные;
		
		Для Каждого СтрокаДоставки Из Объект.Доставки Цикл
			СтрокаДоставки.Отбор = (СтрокаДоставки.РезультатДоставки = РезультатВыполнена Или СтрокаДоставки.РезультатДоставки = РезультатВыполненаЧастично) И СтрокаДоставки.ТипОплаты = ТипОплатыНаличные;
		КонецЦикла;
		Элементы.Доставки.ОтборСтрок = Новый ФиксированнаяСтруктура("Отбор", Истина);
	Иначе
		Элементы.Доставки.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаличные(Команда)
	ОтборНаличныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтборТерминалНаСервере()
	
	ТекущаяКнопка = Элементы.ДоставкиОтборТерминал;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		
		РезультатВыполнена = Справочники.новаРезультатМестнойДоставки.Выполнена;
		РезультатВыполненаЧастично = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично;
		ТипОплатыТерминал = Справочники.ТипыОплат.Терминал;
		
		Для Каждого СтрокаДоставки Из Объект.Доставки Цикл
			СтрокаДоставки.Отбор = (СтрокаДоставки.РезультатДоставки = РезультатВыполнена Или СтрокаДоставки.РезультатДоставки = РезультатВыполненаЧастично) И СтрокаДоставки.ТипОплаты = ТипОплатыТерминал;
		КонецЦикла;
		Элементы.Доставки.ОтборСтрок = Новый ФиксированнаяСтруктура("Отбор", Истина);
	Иначе
		Элементы.Доставки.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТерминал(Команда)
	ОтборТерминалНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтборБНалПереносНаСервере()
	
	ТекущаяКнопка = Элементы.ДоставкиОтборБНалПеренос;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		Элементы.Доставки.ОтборСтрок = Новый ФиксированнаяСтруктура("РезультатДоставки,ТипОплаты", Справочники.новаРезультатМестнойДоставки.НеВыполнена, Справочники.ТипыОплат.БезналичныйРасчет);
	Иначе
		Элементы.Доставки.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборБНалПеренос(Команда)
	ОтборБНалПереносНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтборСопрПереносНаСервере()
	
	ТекущаяКнопка = Элементы.ДоставкиОтборСопрПеренос;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		Элементы.Доставки.ОтборСтрок = Новый ФиксированнаяСтруктура("РезультатДоставки,ТребуетсяПодписаниеИВозвратСопрДокументов", Справочники.новаРезультатМестнойДоставки.НеВыполнена, Истина);
	Иначе
		Элементы.Доставки.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСопрПеренос(Команда)
	ОтборСопрПереносНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтчетЛогиста(Команда)
	
	ОткрытьФорму("Документ.новаОтчетВодителя.ФормаОбъекта", Новый Структура("Ключ", Объект.ОтчетВодителя));
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОтборЧековПоЗаказуНаСервере(Доставка)
	
	Элементы.ЧекиЭкипажаОтборЧековПоЗаказу.Пометка = Не Элементы.ЧекиЭкипажаОтборЧековПоЗаказу.Пометка;
	Если Элементы.ЧекиЭкипажаОтборЧековПоЗаказу.Пометка Тогда
		Если Доставка <> Неопределено Тогда
			Элементы.ЧекиЭкипажа.ОтборСтрок = Новый ФиксированнаяСтруктура("Заказ", Доставка);
		КонецЕсли;
	Иначе
		Элементы.ЧекиЭкипажа.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЧековПоЗаказу(Команда)
	ОтборЧековПоЗаказуНаСервере(?(Элементы.Доставки.ТекущиеДанные <> Неопределено, Элементы.Доставки.ТекущиеДанные.Доставка, Неопределено));
КонецПроцедуры

&НаСервере
Процедура ОтборAssistПоЗаказуНаСервере(Доставка)
	
	Элементы.ПлатежиAssistОтборAssistПоЗаказу.Пометка = Не Элементы.ПлатежиAssistОтборAssistПоЗаказу.Пометка;
	Если Элементы.ПлатежиAssistОтборAssistПоЗаказу.Пометка Тогда
		Если Доставка <> Неопределено Тогда
			Элементы.ПлатежиAssist.ОтборСтрок = Новый ФиксированнаяСтруктура("Заказ", Доставка);
		КонецЕсли;
	Иначе
		Элементы.ПлатежиAssist.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборAssistПоЗаказу(Команда)
	ОтборAssistПоЗаказуНаСервере(?(Элементы.Доставки.ТекущиеДанные <> Неопределено, Элементы.Доставки.ТекущиеДанные.Доставка, Неопределено));
КонецПроцедуры
//Асеев 28.06.2022 (Задача № 4831)<<<

