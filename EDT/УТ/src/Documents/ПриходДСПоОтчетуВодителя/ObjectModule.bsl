
Процедура ОбработкаУдаленияПроведения(Отказ)	
	// Михушкин --->> 
	СтатусыЗакрытияЗаказов(РежимЗаписиДокумента.ОтменаПроведения);
	ОбновлениеСтатусовВАдминке(РежимЗаписиДокумента.ОтменаПроведения);
	// <<--- Михушкин	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
			
	Если НЕ ОтчетВодителя.Проведен Тогда		
		Отказ = Истина;
		#Если Клиент Тогда
			Сообщить("Не удалось провести документ, отчет водителя не проведен ("+ ОтчетВодителя.Ссылка +")");
		#КонецЕсли	
		Возврат;	
	КонецЕсли;
	
	
	Если Не ЗакрытьОтчетВодителя() Тогда
		Отказ = Истина;
		Возврат;
	КонецеСли;	
	
	// Михушкин - Добавлено ветвление по признаку загрузки для задач загрузки документа из веб-сервиса Аксиомус - 22.04.2016 --->> 
	Если axi_Загрузка Тогда // ------------------------ загрузка --------------------------	
		
		// Вставить содержимое обработчика.
		//Серегин М.В. 01.09.2015 15:33:02 
	    // К оплате клиентом не учитывается
		//Движения.ПриходДС.Очистить();
		//Движения.ПриходДС.Записывать = Истина;
		//
		//Для Каждого Тек Из Товары Цикл
		//	Если Тек.Сумма = 0 Тогда
		//		Продолжить;
		//	КонецеСли;	
		//	Нов = Движения.ПриходДС.Добавить();
		//    //Нов.Период = ОтчетВодителя.Дата;
		//	//Нов.Период = ОтчетВодителя.Рейс.ДатаНачала;
		//	Нов.Период = Дата;
		//	Нов.Доставка = Тек.Доставка;
		//	Нов.Контрагент = Тек.Доставка.ВладелецТовара;
		//	Нов.Номенклатура = Тек.Номенклатура;
		//	Нов.Сумма = Тек.Сумма;
		//КонецЦикла;	
		//
		//
		//Для Каждого Тек Из Доставки Цикл
		//	Если Тек.СуммаДоставки = 0 Тогда
		//		Продолжить;
		//	КонецеСли;	
		//	Нов = Движения.ПриходДС.Добавить();
		//    //Нов.Период = ОтчетВодителя.Дата;
		//	//Нов.Период = ОтчетВодителя.Рейс.ДатаНачала;
		//	Нов.Период = Дата;
		//	Нов.Доставка = Тек.Доставка;
		//	Нов.Контрагент = Тек.Доставка.ВладелецТовара;
		//	Нов.СуммаДоставки = Тек.СуммаДоставки;
		//КонецЦикла;	
		
		
		Движения.УчетДенежныхСредствКассиром.Очистить();
		Движения.УчетДенежныхСредствКассиром.Записывать = Истина;
		
		Для Каждого Тек Из Доставки Цикл
			Нов = Движения.УчетДенежныхСредствКассиром.Добавить();
			Нов.ЮрЛицо = Тек.ЮрЛицо;
			Нов.ВидДвижения = ВидДвиженияНакопления.Приход;
	        //Нов.Период = ОтчетВодителя.Дата;
	        //Нов.Период = Тек.Доставка.Дата;
			//Нов.Период = ОтчетВодителя.Рейс.ДатаНачала;
			Нов.Период = Дата;
			//Нов.Водитель = ОтчетВодителя.Водитель;
			Нов.Заказ = Тек.Доставка;
			Нов.ИнтернетМагазин = Тек.ИнтернетМагазин;
			Нов.ПричинаНеВыполнения = Тек.ПричинаНеВыполнения;
			Нов.ПричинаОтказаПереноса = Тек.ПричинаОтказаПереноса;
			//Серегин М.В. 28.04.2015 12:03:58 
			Нов.РезультатДоставки = Тек.РезультатДоставки;
	        //Серегин М.В. 28.04.2015 12:04:01
	        
	        ////+++++Серегин М.В. 09.10.2015 14:32:55 старый код
	        ////Серегин М.В. 31.08.2015 15:51:09 для Яндекса сумма = к оплате клиентом  
	        //Если Тек.УчитыватьКОплатеКлиентом Тогда
	        //    Нов.Сумма = Тек.КОплатеКлиентом;    
	        //Иначе
	        //    Нов.Сумма = Тек.Итого+Тек.СуммаБезнал;
	        //КонецЕсли;
	        ////Серегин М.В. 31.08.2015 15:51:12 
	        
	        //+++++Серегин М.В. 09.10.2015 14:33:01 новый код
	        //Серегин М.В. 31.08.2015 15:51:09 для Яндекса сумма = к оплате клиентом  
	        Если Тек.УчитыватьКОплатеКлиентом Тогда
	            Нов.Сумма = Тек.КОплатеКлиентом;  
	            Нов.СуммаДоставки = 0; //решили что обменов у яндекса не будет, поэтому сумма доставки = 0 )))
	        Иначе
	            Если Тек.Итого<>0 Тогда
	                Нов.Сумма = Тек.Итого+Тек.СуммаБезнал-Тек.СуммаДоставки;
	            Иначе
	                Нов.Сумма = Тек.Итого+Тек.СуммаБезнал;
	            КонецЕсли;
	            Нов.СуммаДоставки = Тек.СуммаДоставки;
	        КонецЕсли;
	        //Серегин М.В. 31.08.2015 15:51:12 
	        
			Нов.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
			Нов.ТипОплаты = Тек.ТипОплаты;
			//Нов.Транспорт = ОтчетВодителя.Транспорт;
			//Нов.Экспедитор = ОтчетВодителя.Экспедитор;
			Нов.Спецсчет = Тек.Спецсчет;
			Нов.ЧекиНеПечатаются = Тек.ЧекиНеПечатаются;
	    КонецЦикла;	
	    
	    //Серегин М.В. 28.04.2015 17:59:05 проводка частично выполненных заказов
		//Серегин М.В. 01.09.2015 15:33:02 
	    // К оплате клиентом не учитывается
	    Движения.ДанныеЧастичныхЗаказов.Очистить();
	    Движения.ДанныеЧастичныхЗаказов.Записывать = Истина;
	    Для Каждого Тек Из Товары Цикл
	        СтрокаДоставкиНайденая = Доставки.Найти(Тек.Доставка,"Доставка");
	        Если ЗначениеЗаполнено(СтрокаДоставкиНайденая) Тогда
	            Если СтрокаДоставкиНайденая.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
	                //+++++Серегин М.В. 12.11.2015 13:50:31 временно  Если НЕ Тек.ЭтоПодарочнаяПозиция Тогда
	                    Если Тек.Количество <> Тек.ИсходноеКоличество Тогда
	                        //Движение приход
	                        Движение = Движения.ДанныеЧастичныхЗаказов.Добавить();
	                        Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
							//Движение.Период = ОтчетВодителя.Рейс.ДатаНачала;
							Движение.Период = Дата;
	                        //Движение.Период = ОтчетВодителя.Дата;
	                        //Движение.Период = Тек.Доставка.Дата;
	                        Движение.Заказ = Тек.Доставка;
	                        Движение.Сумма = Тек.ИсходноеКоличество*Тек.Цена;
	                        Движение.Номенклатура = Тек.Номенклатура;
	                        Движение.Количество = Тек.ИсходноеКоличество;
							//Асеев 28.08.2020 (Задача № 4183)>>>
							Движение.КодМаркировки = Тек.КодМаркировки;
							//Асеев 28.08.2020 (Задача № 4183)<<<
	                        
	                        //Движение расход
	                        Движение = Движения.ДанныеЧастичныхЗаказов.Добавить();
	                        Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	                        //Движение.Период = ОтчетВодителя.Дата;
							//Движение.Период = ОтчетВодителя.Рейс.ДатаНачала;
							Движение.Период = Дата;
	                        //Движение.Период = Тек.Доставка.Дата;
	                        Движение.Заказ = Тек.Доставка;
	                        Движение.Сумма = Тек.Количество*Тек.Цена;
	                        Движение.Номенклатура = Тек.Номенклатура;
	                        Движение.Количество = Тек.Количество;
							//Асеев 28.08.2020 (Задача № 4183)>>>
							Движение.КодМаркировки = Тек.КодМаркировки;
							//Асеев 28.08.2020 (Задача № 4183)<<<
	                    КонецЕсли;
	                //-----Серегин М.В. 12.11.2015 13:50:45 КонецЕсли;
	            КонецЕсли;
	        КонецЕсли;
	    КонецЦикла;
	    //Серегин М.В. 28.04.2015 17:59:43
		
		// Отключено в рамках Задача 2991
		//////+++++Серегин М.В. 05.10.2015 17:20:21 движения СостоянияЗаказов
		////Движения.СостоянияЗаказов.Очистить();
		////Движения.СостоянияЗаказов.Записывать = Истина;
		////Для Каждого Стр Из Доставки Цикл
		////    Движение = Движения.СостоянияЗаказов.Добавить();
		////    Движение.Период = Дата;
		////    Движение.Доставка = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Стр.Доставка.Номер);
		////    Движение.Заказ = Стр.Доставка;
		////    Движение.РезультатДоставки = Стр.РезультатДоставки;
		////    Движение.ПричинаНеВыполнения = Стр.ПричинаНеВыполнения;
		////    Движение.ПричинаОтказа = Стр.ПричинаОтказаПереноса;
		////    Движение.ДатаПереноса = Стр.ДатаПереноса;
		////КонецЦикла;
		//////-----Серегин М.В. 05.10.2015 17:23:47 
		
		//ДвиженияСостоянияЗаказов(); //Задача 2991
		
	    ДвиженияУчетДенежныхСредствКассиромРасширеный();
		
		
	Иначе // ----------------  штатное проведение ----------------------	
		
		// Вставить содержимое обработчика.
		//Серегин М.В. 01.09.2015 15:33:02 
	    // К оплате клиентом не учитывается
		//Движения.ПриходДС.Очистить();
		//Движения.ПриходДС.Записывать = Истина;
		//
		//Для Каждого Тек Из Товары Цикл
		//	Если Тек.Сумма = 0 Тогда
		//		Продолжить;
		//	КонецеСли;	
		//	Нов = Движения.ПриходДС.Добавить();
		//    //Нов.Период = ОтчетВодителя.Дата;
		//	Нов.Период = ОтчетВодителя.Рейс.ДатаНачала;
		//	Нов.Доставка = Тек.Доставка;
		//	Нов.Контрагент = Тек.Доставка.ВладелецТовара;
		//	Нов.Номенклатура = Тек.Номенклатура;
		//	Нов.Сумма = Тек.Сумма;
		//КонецЦикла;	
		//
		//
		//Для Каждого Тек Из Доставки Цикл
		//	Если Тек.СуммаДоставки = 0 Тогда
		//		Продолжить;
		//	КонецеСли;	
		//	Нов = Движения.ПриходДС.Добавить();
		//    //Нов.Период = ОтчетВодителя.Дата;
		//	Нов.Период = ОтчетВодителя.Рейс.ДатаНачала;
		//	Нов.Доставка = Тек.Доставка;
		//	Нов.Контрагент = Тек.Доставка.ВладелецТовара;
		//	Нов.СуммаДоставки = Тек.СуммаДоставки;
		//КонецЦикла;	
		
		
		Движения.УчетДенежныхСредствКассиром.Очистить();
		Движения.УчетДенежныхСредствКассиром.Записывать = Истина;
		
		Для Каждого Тек Из Доставки Цикл
			Нов = Движения.УчетДенежныхСредствКассиром.Добавить();
			Нов.ЮрЛицо = Тек.ЮрЛицо;
			Нов.ВидДвижения = ВидДвиженияНакопления.Приход;
	        //Нов.Период = ОтчетВодителя.Дата;
	        //Нов.Период = Тек.Доставка.Дата;
			Нов.Период = ОтчетВодителя.Рейс.ДатаНачала;
			Нов.Водитель = ОтчетВодителя.Водитель;
			Нов.Заказ = Тек.Доставка;
			Нов.ИнтернетМагазин = Тек.ИнтернетМагазин;
			Нов.ПричинаНеВыполнения = Тек.ПричинаНеВыполнения;
			Нов.ПричинаОтказаПереноса = Тек.ПричинаОтказаПереноса;
			//Серегин М.В. 28.04.2015 12:03:58 
			Нов.РезультатДоставки = Тек.РезультатДоставки;
	        //Серегин М.В. 28.04.2015 12:04:01
	        
	        ////+++++Серегин М.В. 09.10.2015 14:32:55 старый код
	        ////Серегин М.В. 31.08.2015 15:51:09 для Яндекса сумма = к оплате клиентом  
	        //Если Тек.УчитыватьКОплатеКлиентом Тогда
	        //    Нов.Сумма = Тек.КОплатеКлиентом;    
	        //Иначе
	        //    Нов.Сумма = Тек.Итого+Тек.СуммаБезнал;
	        //КонецЕсли;
	        ////Серегин М.В. 31.08.2015 15:51:12 
	        
	        //+++++Серегин М.В. 09.10.2015 14:33:01 новый код
	        //Серегин М.В. 31.08.2015 15:51:09 для Яндекса сумма = к оплате клиентом  
	        Если Тек.УчитыватьКОплатеКлиентом Тогда
	            Нов.Сумма = Тек.КОплатеКлиентом;  
	            Нов.СуммаДоставки = 0; //решили что обменов у яндекса не будет, поэтому сумма доставки = 0 )))
	        Иначе
	            Если Тек.Итого<>0 Тогда
	                Нов.Сумма = Тек.Итого+Тек.СуммаБезнал-Тек.СуммаДоставки;
	            Иначе
	                Нов.Сумма = Тек.Итого+Тек.СуммаБезнал;
	            КонецЕсли;
	            Нов.СуммаДоставки = Тек.СуммаДоставки;
	        КонецЕсли;
	        //Серегин М.В. 31.08.2015 15:51:12 
	        
			Нов.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
			Нов.ТипОплаты = Тек.ТипОплаты;
			Нов.Транспорт = ОтчетВодителя.Транспорт;
			Нов.Экспедитор = ОтчетВодителя.Экспедитор;
			Нов.Спецсчет = Тек.Спецсчет;
			Нов.ЧекиНеПечатаются = Тек.ЧекиНеПечатаются;
	    КонецЦикла;	
	    
	    //Серегин М.В. 28.04.2015 17:59:05 проводка частично выполненных заказов
		//Серегин М.В. 01.09.2015 15:33:02 
	    // К оплате клиентом не учитывается
	    Движения.ДанныеЧастичныхЗаказов.Очистить();
	    Движения.ДанныеЧастичныхЗаказов.Записывать = Истина;
	    Для Каждого Тек Из Товары Цикл
	        СтрокаДоставкиНайденая = Доставки.Найти(Тек.Доставка,"Доставка");
	        Если ЗначениеЗаполнено(СтрокаДоставкиНайденая) Тогда
	            Если СтрокаДоставкиНайденая.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
	                //+++++Серегин М.В. 12.11.2015 13:50:31 временно  Если НЕ Тек.ЭтоПодарочнаяПозиция Тогда
	                    Если Тек.Количество <> Тек.ИсходноеКоличество Тогда
	                        //Движение приход
	                        Движение = Движения.ДанныеЧастичныхЗаказов.Добавить();
	                        Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	                        Движение.Период = ОтчетВодителя.Рейс.ДатаНачала;
	                        //Движение.Период = ОтчетВодителя.Дата;
	                        //Движение.Период = Тек.Доставка.Дата;
	                        Движение.Заказ = Тек.Доставка;
	                        Движение.Сумма = Тек.ИсходноеКоличество*Тек.Цена;
	                        Движение.Номенклатура = Тек.Номенклатура;
	                        Движение.Количество = Тек.ИсходноеКоличество;
							//Асеев 28.08.2020 (Задача № 4183)>>>
							Движение.КодМаркировки = Тек.КодМаркировки;
							//Асеев 28.08.2020 (Задача № 4183)<<<
	                        
	                        //Движение расход
	                        Движение = Движения.ДанныеЧастичныхЗаказов.Добавить();
	                        Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	                        //Движение.Период = ОтчетВодителя.Дата;
	                        Движение.Период = ОтчетВодителя.Рейс.ДатаНачала;
	                        //Движение.Период = Тек.Доставка.Дата;
	                        Движение.Заказ = Тек.Доставка;
	                        Движение.Сумма = Тек.Количество*Тек.Цена;
	                        Движение.Номенклатура = Тек.Номенклатура;
	                        Движение.Количество = Тек.Количество;
							//Асеев 28.08.2020 (Задача № 4183)>>>
							Движение.КодМаркировки = Тек.КодМаркировки;
							//Асеев 28.08.2020 (Задача № 4183)<<<
	                    КонецЕсли;
	                //-----Серегин М.В. 12.11.2015 13:50:45 КонецЕсли;
	            КонецЕсли;
	        КонецЕсли;
	    КонецЦикла;
	    //Серегин М.В. 28.04.2015 17:59:43
		
		// Отключено в рамках Задача 2991
		//////+++++Серегин М.В. 05.10.2015 17:20:21 движения СостоянияЗаказов
		////Движения.СостоянияЗаказов.Очистить();
		////Движения.СостоянияЗаказов.Записывать = Истина;
		////Для Каждого Стр Из Доставки Цикл
		////    Движение = Движения.СостоянияЗаказов.Добавить();
		////    Движение.Период = Дата;
		////    Движение.Доставка = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Стр.Доставка.Номер);
		////    Движение.Заказ = Стр.Доставка;
		////    Движение.РезультатДоставки = Стр.РезультатДоставки;
		////    Движение.ПричинаНеВыполнения = Стр.ПричинаНеВыполнения;
		////    Движение.ПричинаОтказа = Стр.ПричинаОтказаПереноса;
		////    Движение.ДатаПереноса = Стр.ДатаПереноса;
		////КонецЦикла;
		//////-----Серегин М.В. 05.10.2015 17:23:47 
		
		//ДвиженияСостоянияЗаказов(); //Задача 2991
		
	    ДвиженияУчетДенежныхСредствКассиромРасширеный();
	
	КонецЕсли; 	
	// <<--- Михушкин -  ветвление по признаку загрузки - КОНЕЦ 
	
	// Михушкин --->>
	СтатусыЗакрытияЗаказов(РежимЗаписиДокумента.Проведение);	
	ОбновлениеСтатусовВАдминке(РежимЗаписиДокумента.Проведение);
	// <<--- Михушкин 
	
    
    //+++++Серегин М.В. 06.11.2015 14:59:04 
    ДвиженияСтатусыДоговоров();
    //-----Серегин М.В. 06.11.2015 14:59:06 
		
	// Михушкин - 01.04.2016 --->> 
	Если НЕ Отказ Тогда
		Отказ = ОтправитьДанныеПоЧастичноВыполненнымЗаказам_Озон();	
	КонецЕсли;	
	// <<--- Михушкин 
	
	// Михушкин --->> 
	//ИзменениеДатДоставок();
	// <<--- Михушкин 
	
	//CeHbKA		
	ДвиженияВзаиморасчетыСКомитентами();
	//CeHbKA
	
	Если Не УдаленноеЗакрытие Тогда
		//Асеев 14.05.2021 (Задача № 4559)>>>
		Движения.СтатусыДвиженияПриложенныхДокументов.Очистить();
		//Движения.СтатусыДвиженияПриложенныхДокументов.Записывать = Истина;
		Для Каждого СтрокаДоставки Из Доставки Цикл
			//Асеев 19.08.2022 (Задача № 4871)>>>
			//Если СтрокаДоставки.ТипОплаты = Справочники.ТипыОплат.БезналичныйРасчет Или СтрокаДоставки.ТребуетсяПодписаниеИВозвратСопрДокументов Тогда
			Если СтрокаДоставки.ТребуетсяПодписаниеИВозвратСопрДокументов Или СтрокаДоставки.ТребуетсяПодписаниеИВозвратБНДокументов Или (Не РежимОбъединенияФункционалаЛогистаИКассира И СтрокаДоставки.ТипОплаты = Справочники.ТипыОплат.БезналичныйРасчет) Тогда
				//Асеев 19.08.2022 (Задача № 4871)<<<
				Если СтрокаДоставки.СопрДокументПоступил И СтрокаДоставки.ТребуетсяПереподписаниеСопрДокумента Тогда
					Движение = Движения.СтатусыДвиженияПриложенныхДокументов.Добавить();
					Движение.Период = Дата - 1;
					Движение.Регион = ТерминалДоставки;
					Движение.Заказ = СтрокаДоставки.Доставка;
					Движение.ВидПриложенногоДокумента = Справочники.ВидыПриложенныхДокументов.СопроводительныеДокументы;
					Движение.Статус = Справочники.СтатусыДвиженияПриложенныхДокументов.ДокументыВозвращеныВТК;
					
					Движение = Движения.СтатусыДвиженияПриложенныхДокументов.Добавить();
					Движение.Период = Дата;
					Движение.Регион = ТерминалДоставки;
					Движение.Заказ = СтрокаДоставки.Доставка;
					Движение.ВидПриложенногоДокумента = Справочники.ВидыПриложенныхДокументов.СопроводительныеДокументы;
					Движение.Статус = Справочники.СтатусыДвиженияПриложенныхДокументов.ДокументыТребуютПереподписания;
				ИначеЕсли СтрокаДоставки.СопрДокументПоступил Тогда
					Движение = Движения.СтатусыДвиженияПриложенныхДокументов.Добавить();
					Движение.Период = Дата;
					Движение.Регион = ТерминалДоставки;
					Движение.Заказ = СтрокаДоставки.Доставка;
					Движение.ВидПриложенногоДокумента = Справочники.ВидыПриложенныхДокументов.СопроводительныеДокументы;
					Движение.Статус = Справочники.СтатусыДвиженияПриложенныхДокументов.ДокументыВозвращеныВТК;
				Иначе
					Движение = Движения.СтатусыДвиженияПриложенныхДокументов.Добавить();
					Движение.Период = Дата;
					Движение.Регион = ТерминалДоставки;
					Движение.Заказ = СтрокаДоставки.Доставка;
					Движение.ВидПриложенногоДокумента = Справочники.ВидыПриложенныхДокументов.СопроводительныеДокументы;
					Движение.Статус = Справочники.СтатусыДвиженияПриложенныхДокументов.ДокументыНеВозвращеныВТК;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		//Асеев 14.05.2021 (Задача № 4559)<<<
		//Асеев 25.08.2021 (Задача № 4649)>>>
		Движения.СтатусыДвиженияПриложенныхДокументов.Записать();
		Если ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ОтчетВодителя", ОтчетВодителя);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ИСТИНА КАК Поле1
			|ИЗ
			|	Документ.новаОтчетВодителя КАК новаОтчетВодителя
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс КАК Т_Рейс
			|		ПО (новаОтчетВодителя.Ссылка = &ОтчетВодителя)
			|			И новаОтчетВодителя.Рейс = Т_Рейс.РейсМестнойДоставки
			|			И (Т_Рейс.УдаленноеЗакрытиеРейса)";
			Если Запрос.Выполнить().Пустой() Тогда
				РассылкаОНесданныхДокументах();
			КонецЕсли;
		КонецЕсли;
		//Асеев 25.08.2021 (Задача № 4649)<<<
	КонецЕсли;
	
КонецПроцедуры

//Асеев 25.08.2021 (Задача № 4649)>>>
Процедура РассылкаОНесданныхДокументах()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Доставки", Доставки.ВыгрузитьКолонку("Доставка"));
	Запрос.УстановитьПараметр("ОтчетВодителя", ОтчетВодителя);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусыДвиженияПриложенныхДокументовСрезПоследних.Заказ.Номер КАК НомерЗаказа,
	|	СтатусыДвиженияПриложенныхДокументовСрезПоследних.Заказ.ВладелецТовара.Наименование КАК Партнер,
	|	СтатусыДвиженияПриложенныхДокументовСрезПоследних.Регистратор ССЫЛКА Документ.ПриходДСПоОтчетуВодителя КАК ЭтоКасса,
	|	ПриходДСПоОтчетуВодителяДоставки.ТипОплаты.Наименование КАК ТипОплаты,
	|	ВЫБОР
	|		КОГДА ПриходДСПоОтчетуВодителяДоставки.РезультатДоставки В (ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена), ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично))
	|			ТОГДА ПриходДСПоОтчетуВодителяДоставки.РезультатДоставки.Наименование
	|		ИНАЧЕ ПриходДСПоОтчетуВодителяДоставки.ПричинаНеВыполнения.Наименование
	|	КОНЕЦ КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыДвиженияПриложенныхДокументов.СрезПоследних(&Период, Заказ В (&Доставки)) КАК СтатусыДвиженияПриложенныхДокументовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|		ПО (ПриходДСПоОтчетуВодителяДоставки.Ссылка = &Ссылка)
	|			И СтатусыДвиженияПриложенныхДокументовСрезПоследних.Заказ = ПриходДСПоОтчетуВодителяДоставки.Доставка
	|ГДЕ
	|	СтатусыДвиженияПриложенныхДокументовСрезПоследних.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыДвиженияПриложенныхДокументов.ДокументыНеВозвращеныВТК)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтоКасса,
	|	Партнер,
	|	НомерЗаказа
	|ИТОГИ ПО
	|	ЭтоКасса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	новаОтчетВодителя.Транспорт.Наименование КАК Автомобиль,
	|	новаОтчетВодителя.Водитель.Наименование КАК Водитель,
	|	новаОтчетВодителя.Экспедитор.Наименование КАК Экспедитор
	|ИЗ
	|	Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|ГДЕ
	|	новаОтчетВодителя.Ссылка = &ОтчетВодителя";
	
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Результат = РезультатПакета[0];
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаЗаголовок = РезультатПакета[1].Выбрать();
	ВыборкаЗаголовок.Следующий();
	
	ДатаРассылки = ТекущаяДата();
	
	Макет = ПолучитьМакет("РассылкаОНесданныхДокументах");
	
	ТабДок = Новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	ПараметрыОбласти = Область.Параметры;
	ПараметрыОбласти.Заполнить(ВыборкаЗаголовок);
	ПараметрыОбласти.ДатаРассылки = ДатаРассылки;
	ТабДок.Вывести(Область);
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ВыборкаЭтоКасса = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЭтоКасса.Следующий() Цикл
		
		ПараметрыОбласти = ОбластьШапка.Параметры;
		Если ВыборкаЭтоКасса.ЭтоКасса Тогда
			ПараметрыОбласти.Операции = "сдаче в кассу";
			ПараметрыОбласти.Документы = "безналичные/сопроводительные";
		Иначе
			ПараметрыОбласти.Операции = "переносе";
			ПараметрыОбласти.Документы = "безналичные";
		КонецЕсли;
		ТабДок.Вывести(ОбластьШапка);
		
		ПараметрыОбласти = ОбластьСтрока.Параметры;
		
		Выборка = ВыборкаЭтоКасса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ПараметрыОбласти.Заполнить(Выборка);
			ПараметрыОбласти.НомерЗаказа = СокрЛП(ПараметрыОбласти.НомерЗаказа);
			ТабДок.Вывести(ОбластьСтрока);
		КонецЦикла;
		
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Подвал");
	ПараметрыОбласти = Область.Параметры;
	ПараметрыОбласти.ПриходДС = ЭтотОбъект;
	ТабДок.Вывести(Область);
	
	//#Если Клиент Тогда
	//	ТабДок.Показать();
	//#КонецЕсли
	
	//ТекстПисьма = "Автомобиль: " + ВыборкаЗаголовок.Автомобиль + "<br>"
	//	+ "Водитель: " + ВыборкаЗаголовок.Водитель + "<br>"
	//	+ "Экспедитор: " + ВыборкаЗаголовок.Экспедитор + "<br>"
	//	+ "<br>"
	//	+ "При сдаче в кассу, не сданы безналичные/сопроводительные документы<br>" + ЭтотОбъект; 
		
	//Сообщить(ТекстПисьма);
		
	ИмяФайла = КаталогВременныхФайлов() + Номер + ".html";
	
	ТабДок.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.HTML);
	
	ТекстПисьма = Новый ТекстовыйДокумент;
	ТекстПисьма.Прочитать(ИмяФайла);
	ТекстПисьма = ТекстПисьма.ПолучитьТекст();
	
	МассивПолучателей = Новый Массив;
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		МассивПолучателей.Добавить("m.aseev@strizh-logistic.ru");
	Иначе
		Если ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
			МассивПолучателей.Добавить("kassir@strizh-logistic.ru");
		ИначеЕсли ТерминалДоставки = Справочники.РегиональныеТерминалы.СПбСтриж Тогда
			МассивПолучателей.Добавить("kassir_spb@strizh-logistic.ru");
		КонецЕсли;
		МассивПолучателей.Добавить("logist@strizh-logistic.ru");
		МассивПолучателей.Добавить("stanislav.tumakov@strizh-logistic.ru");
		МассивПолучателей.Добавить("y.semichastnov@strizh-logistic.ru");
		МассивПолучателей.Добавить("inna.illarionova@strizh-logistic.ru");
		МассивПолучателей.Добавить("dmitry.sherbinkin@strizh-logistic.ru");
	КонецЕсли;
	
	ТекстОшибки = "";
	ОбработкаUnion = Обработки.СТРИЖ_ИнтеграцияUniOne.Создать();
	ОбработкаUnion.ОтправитьEMAIL_HTTP(МассивПолучателей, "Несданные документы " + Формат(ДатаРассылки, "ДФ=dd.MM.yyyy"), ТекстПисьма,, "Сервер 1С",, ТипТекстаПочтовогоСообщения.HTML,, ТекстОшибки,,,, Ложь);
	
	Попытка
		УдалитьФайлы(ИмяФайла);
	Исключение
	КонецПопытки;
	
КонецПроцедуры
//Асеев 25.08.2021 (Задача № 4649)<<<

Процедура ДвиженияСостоянияЗаказов() Экспорт //ВРЕМЕННО ДЛЯ ТЕСТИРОВАНИЯ!!!  // Задача 2991
	
	// Оригинальный код записи движений:
	////Движения.СостоянияЗаказов.Очистить();
	////Движения.СостоянияЗаказов.Записывать = Истина;
	////Для Каждого Стр Из Доставки Цикл
	////    Движение = Движения.СостоянияЗаказов.Добавить();
	////    Движение.Период = Дата;
	////    Движение.Доставка = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Стр.Доставка.Номер);
	////    Движение.Заказ = Стр.Доставка;
	////    Движение.РезультатДоставки = Стр.РезультатДоставки;
	////    Движение.ПричинаНеВыполнения = Стр.ПричинаНеВыполнения;
	////    Движение.ПричинаОтказа = Стр.ПричинаОтказаПереноса;
	////    Движение.ДатаПереноса = Стр.ДатаПереноса;
	////КонецЦикла;
	
	
	Движения.СостоянияЗаказов.Очистить();
	Движения.СостоянияЗаказов.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка КАК Ссылка,
	|	ПриходДСПоОтчетуВодителяДоставки.Доставка КАК Заказ,
	|	новаМестнаяДоставка.Ссылка КАК Доставка,
	|	ПриходДСПоОтчетуВодителяДоставки.РезультатДоставки КАК РезультатДоставки,
	|	ПриходДСПоОтчетуВодителяДоставки.ПричинаНеВыполнения КАК ПричинаНеВыполнения,
	|	ПриходДСПоОтчетуВодителяДоставки.ПричинаОтказаПереноса КАК ПричинаОтказа,
	|	ПриходДСПоОтчетуВодителяДоставки.ДатаПереноса КАК ДатаПереноса,
	|	ПриходДСПоОтчетуВодителяДоставки.ПричинаОтказаПереноса.СторонаПретензии КАК СторонаПретензий,
	|	Рейс.Ссылка КАК Рейс,
	|	Рейс.ДатаРейса КАК ДатаДоставки,
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка.Дата КАК Период
	|ИЗ
	|	Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО ПриходДСПоОтчетуВодителяДоставки.Доставка.Номер = новаМестнаяДоставка.Номер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК Рейс
	|		ПО ПриходДСПоОтчетуВодителяДоставки.Ссылка.ОтчетВодителя.Рейс = Рейс.РейсМестнойДоставки
	|ГДЕ
	|	ПриходДСПоОтчетуВодителяДоставки.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.СостоянияЗаказов.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		
		Если  Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Рейс) Тогда
			Движение.ДатаДоставки =  ВыборкаДетальныеЗаписи.Заказ.Дата;
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры	

//CeHbKA
Процедура ДвиженияВзаиморасчетыСКомитентами() Экспорт 

	Движения.ВзаиморасчетыСКомитентамиПоЗаказам.Записывать = Истина;
	Движения.ВзаиморасчетыСКомитентамиПоЗаказам.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗакрытиеЗаказовЗаказы.НомерСтроки КАК НомерСтроки,		
		|	ЗакрытиеЗаказовЗаказы.ЮрЛицо КАК Организация,
		|	ЗакрытиеЗаказовЗаказы.ИнтернетМагазин КАК ВладелецТовара,
		|	&ДатаЗакрытия КАК ДатаВозникновенияЗадолженности,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка) КАК ТипЗаказа,
		|	ЗакрытиеЗаказовЗаказы.Доставка КАК Заказ,
		|	ЗакрытиеЗаказовЗаказы.СуммаЧековЭкипажа КАК Сумма
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	&ДокТЧ КАК ЗакрытиеЗаказовЗаказы
		|ГДЕ
		|	ЗакрытиеЗаказовЗаказы.ТипОплаты В(&ТипОплаты)
		|	И (ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена) ИЛИ ЗакрытиеЗаказовЗаказы.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокТЧ.НомерСтроки КАК НомерСтроки,
		|	ДокТЧ.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ДокТЧ.ВладелецТовара.Родитель.ОсновнойМагазин = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ДокТЧ.ВладелецТовара
		|		ИНАЧЕ ДокТЧ.ВладелецТовара.Родитель.ОсновнойМагазин
		|	КОНЕЦ КАК Комитент,
		|	ДокТЧ.ДатаВозникновенияЗадолженности КАК ДатаВозникновенияЗадолженности,
		|	ДокТЧ.ТипЗаказа КАК ТипЗаказа,
		|	ДокТЧ.Заказ КАК Заказ,
		|	ДокТЧ.Сумма КАК Сумма
		|ИЗ
		|	ДокТЧ КАК ДокТЧ";
		
	ТипыЗаказов = Новый Массив();
	ТипыЗаказов.Добавить(Перечисления.ТипыЗаказов.Доставка);
	ТипыЗаказов.Добавить(Перечисления.ТипыЗаказов.Самовывоз);
	
	ТипыОплаты = Новый Массив();
	ТипыОплаты.Добавить(Справочники.ТипыОплат.Наличные);
	ТипыОплаты.Добавить(Справочники.ТипыОплат.ВКредит);
	ТипыОплаты.Добавить(Справочники.ТипыОплат.Терминал);
	//Асеев 16.10.2020 (Задача № 4313)>>>
	//далее везде аналогично Терминал
	ТипыОплаты.Добавить(Справочники.ТипыОплат.СБП);
	//Асеев 16.10.2020 (Задача № 4313)<<<
	
	//Запрос.УстановитьПараметр("ТипЗаказа", ТипыЗаказов);
	Запрос.УстановитьПараметр("ТипОплаты", ТипыОплаты);
	Запрос.УстановитьПараметр("ДокТЧ", Доставки.Выгрузить());
	Запрос.УстановитьПараметр("ДатаЗакрытия", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	//Задача № 2540
	ТаблицаДвиженийВзаиморасчетовСКомитентами = РегистрыНакопления.ВзаиморасчетыСКомитентами.ТаблицаДвиженийПоРегистру();
	//Задача № 2540
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Запись = Движения.ВзаиморасчетыСКомитентамиПоЗаказам.ДобавитьПриход();
		Запись.Период = Дата;
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаДетальныеЗаписи);
				
		//CeHbKA
		Если НЕ ЗначениеЗаполнено(Запись.Организация) Тогда
			Запись.Организация = Запись.Заказ.ВладелецТовара.ОсновнойДоговорКонтрагента.Организация;
		КонецЕсли; 
		
		Если Запись.Организация.Пустая() Тогда
			Запись.Организация = Справочники.Организации.НайтиПоКоду("00-000001");
		КонецЕсли; 
		
		//Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ВладелецТовара) Тогда // Михушкин 24.05.2016
		//	Если Не ВыборкаДетальныеЗаписи.ВладелецТовара.Родитель.ОсновнойМагазин.Пустая() Тогда
		//		Запись.Комитент = ВыборкаДетальныеЗаписи.ВладелецТовара.Родитель.ОсновнойМагазин;
		//	Иначе
		//		Запись.Комитент = ВыборкаДетальныеЗаписи.ВладелецТовара;
		//	КонецеСли;
		//КонецЕсли;
		
		СуммаНаличные = 0;
		СуммаБезНаличные = 0;
		СуммаВозвратаНаличные = 0;
		СуммаВозвратаБезНаличные = 0;
		
		СтрокаТЧ = Доставки[ВыборкаДетальныеЗаписи.НомерСтроки-1];
		
		Если СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.Терминал
			ИЛИ СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.СБП
			ИЛИ СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.Наличные
			ИЛИ СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда
			
			ЗапретЧВ = smv.ПолучитьПараметрыКонтрагента(СтрокаТЧ.ИнтернетМагазин,Дата).ЗапретЧастичногоВыкупа;
			// Михушкин - костыль - нужно понять почему не выбирает данные --->> 
			Если НЕ ЗначениеЗаполнено(ЗапретЧВ) Тогда			
				ЗапретЧВ = Ложь;	
			КонецЕсли;
			// <<--- Михушкин 
			
			ЗапретЧВПоДокументу = СтрокаТЧ.Доставка.ЗапретЧастичногоВыкупа;
			Если СтрокаТЧ.УчитыватьКОплатеКлиентом Тогда
				
				Если СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.Терминал Или СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.СБП Тогда
					Если ЗапретЧВ Или ЗапретЧВПоДокументу Тогда
						СуммаБезНаличные     = СтрокаТЧ.КОплатеКлиентом;  
						СуммаДоставки      = 0; //решили что обменов у яндекса не будет, поэтому сумма доставки = 0 )))
					Иначе	
						СуммаБезНаличные     = СтрокаТЧ.СуммаБезнал;
						СуммаДоставки      = СтрокаТЧ.СуммаДоставки;
					КонецеСли;	
					
				ИначеЕсли СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.Наличные ИЛИ СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда     
					Если ЗапретЧВ Или ЗапретЧВПоДокументу Тогда
						СуммаНаличные      = СтрокаТЧ.КОплатеКлиентом;  
						СуммаДоставки      = 0; //решили что обменов у яндекса не будет, поэтому сумма доставки = 0 )))
					Иначе	
						СуммаНаличные     = СтрокаТЧ.Сумма;
						СуммаДоставки      = СтрокаТЧ.СуммаДоставки;
					КонецеСли;	
				КонецЕсли;
				
			Иначе
				СуммаНаличные = СтрокаТЧ.Сумма;
				СуммаБезНаличные = СтрокаТЧ.СуммаБезнал;
				СуммаДоставки      = СтрокаТЧ.СуммаДоставки;
			КонецЕсли;
			
			//Получим сумму документа возврата
			СуммаВозврата = ПолучитьСуммуВозврата(СтрокаТЧ.Доставка);
			
			//+++++Серегин М.В. 03.11.2015 11:01:39 небольшой костыль из-за предоплаты
			Если СтрокаТЧ.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки 
				ИЛИ СтрокаТЧ.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносНаВторуюОчередь
				ИЛИ СтрокаТЧ.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом 
				ИЛИ СтрокаТЧ.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда // добавлил новое условие когда заказ не выполнен, то и кредит = 0
				ПредоплатаБанка = 0;
			Иначе
				ПредоплатаБанка = СтрокаТЧ.ПредоплатаБанка;
			КонецЕсли;
			//-----Серегин М.В. 03.11.2015 11:02:03 
			
			
			Если СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.Терминал Или СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.СБП Тогда
				СуммаБезНаличные   = СуммаБезНаличные-СуммаВозврата-ПредоплатаБанка;
				СуммаВозвратаБезНаличные = СуммаВозврата;
			ИначеЕсли СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.Наличные ИЛИ СтрокаТЧ.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда 
				СуммаНаличные   = СуммаНаличные+СуммаДоставки-СуммаВозврата-ПредоплатаБанка;
				СуммаВозвратаНаличные      = СуммаВозврата;
			КонецЕсли;
			
			Запись.Сумма = СуммаНаличные + СуммаБезНаличные + СуммаВозвратаНаличные + СуммаВозвратаБезНаличные;
			
		КонецЕсли;
		
		//Задача № 2540
		ЗаполнитьЗначенияСвойств(ТаблицаДвиженийВзаиморасчетовСКомитентами.Добавить(),  Запись);
		//Задача № 2540

	КонецЦикла;	

	//Задача № 2540
	Движения.ВзаиморасчетыСКомитентами.СоздатьДвижения(ЭтотОбъект, ТаблицаДвиженийВзаиморасчетовСКомитентами);
	//Задача № 2540

КонецПроцедуры

функция ЗакрытьОтчетВодителя()
	//+++ БАО 08.06.2017 №1024 
	//Док = ОтчетВодителя.ПолучитьОбъект();
	//Док.РейсЗакрыт = Истина;
	//Док.ДополнительныеСвойства.Вставить("ОбходПроверок", Истина);
	//--- БАО 08.06.2017 №1024 
	Попытка
		//+++ БАО 08.06.2017 №1024 
		//Док.Записать(РежимЗаписиДокумента.Запись);
		//+Степанов Задача № 3439 
		//baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(ОтчетВодителя, Истина);
		baoВызовСервера.ДобавитьЗаписьВРегистрДокументыЗакрытыеДляИзменения(ОтчетВодителя, Истина,Ссылка);
		//-Степанов
		//--- БАО 08.06.2017 №1024 
		
		//РейсЗакрыт = Истина;
		//Записать(РежимЗаписиДокумента.Запись);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	Возврат Истина;
КонецФункции


Процедура ДвиженияУчетДенежныхСредствКассиромРасширеный()
    Движения.УчетДенежныхСредствКассиромРасширеный.Очистить();
    Движения.УчетДенежныхСредствКассиромРасширеный.Записывать = Истина;
	
	ОтчетУдаленноеЗакрытие = ОтчетВодителя.УдаленноеЗакрытие;
	ОтчетДокументВнесенВРучную = ОтчетВодителя.ДокументВнесенВРучную;
	
    Для каждого Стр Из Доставки Цикл
        //Движения по ресурсам только по этим типам оплат
        //Если Стр.ТипОплаты = Справочники.ТипыОплат.Терминал
        //    ИЛИ Стр.ТипОплаты = Справочники.ТипыОплат.Наличные 
        //    ИЛИ Стр.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда
            
            //Получаем реальный тип заказа
            ТипЗаказа = smv.ПолучитьТипЗаказаNew(Стр.Доставка);
            
            Движение = Движения.УчетДенежныхСредствКассиромРасширеный.ДобавитьПриход();
            Движение.ЮрЛицо                 = Стр.ЮрЛицо;
			//Движение.Период                 = ОтчетВодителя.Рейс.ДатаНачала;
			Движение.Период                 = Дата;
			//Движение.Водитель               = ОтчетВодителя.Водитель;
            Движение.Заказ                  = Стр.Доставка;
            Движение.ИнтернетМагазин        = Стр.ИнтернетМагазин;
            Движение.РезультатДоставки      = Стр.РезультатДоставки;
            Движение.ПричинаНеВыполнения    = Стр.ПричинаНеВыполнения;
            Движение.ПричинаОтказаПереноса  = Стр.ПричинаОтказаПереноса;
            Движение.ТипЗаказа              = ТипЗаказа;
            Движение.ТипОплаты              = Стр.ТипОплаты;
			//Движение.Транспорт              = ОтчетВодителя.Транспорт;
			//Движение.Экспедитор             = ОтчетВодителя.Экспедитор;
            Движение.Спецсчет               = Стр.Спецсчет;
            Движение.ЧекиНеПечатаются       = Стр.ЧекиНеПечатаются;
			Движение.УдаленноеЗакрытие		= УдаленноеЗакрытие И Не ДокументВнесенВРучную;
			// МАС - 05.06.2017 - №982 --->> 
			Движение.ТерминалДоставки = ЭтотОбъект.ТерминалДоставки;
			// <<--- МАС
			
			Если ОтчетУдаленноеЗакрытие И Не ОтчетДокументВнесенВРучную Тогда
				Движение.УдаленноеЗакрытие = Истина;
			КонецеСли;	
            
			Если Стр.ТипОплаты = Справочники.ТипыОплат.Терминал
				//Асеев 16.10.2020 (Задача № 4313)>>>
				//далее везде аналогично Терминал
				ИЛИ Стр.ТипОплаты = Справочники.ТипыОплат.СБП 
				//Асеев 16.10.2020 (Задача № 4313)<<<
                ИЛИ Стр.ТипОплаты = Справочники.ТипыОплат.Наличные 
                ИЛИ Стр.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда
				
				ЗапретЧВ = smv.ПолучитьПараметрыКонтрагента(Стр.ИнтернетМагазин,Дата).ЗапретЧастичногоВыкупа;
				// Михушкин - костыль - нужно понять почему не выбирает данные --->> 
				Если НЕ ЗначениеЗаполнено(ЗапретЧВ) Тогда			
					ЗапретЧВ = Ложь;	
				КонецЕсли;
				// <<--- Михушкин 
				
				ЗапретЧВПоДокументу = Стр.Доставка.ЗапретЧастичногоВыкупа;
                Если Стр.УчитыватьКОплатеКлиентом Тогда
                    
					Если Стр.ТипОплаты = Справочники.ТипыОплат.Терминал Или Стр.ТипОплаты = Справочники.ТипыОплат.СБП Тогда
						Если ЗапретЧВ Или ЗапретЧВПоДокументу Тогда
                        	Движение.СуммаБезНаличные     = Стр.КОплатеКлиентом;  
							Движение.СуммаДоставки      = 0; //решили что обменов у яндекса не будет, поэтому сумма доставки = 0 )))
						Иначе	
							Движение.СуммаБезНаличные     = Стр.СуммаБезнал;
							Движение.СуммаДоставки      = Стр.СуммаДоставки;
						КонецеСли;	
                        
					ИначеЕсли Стр.ТипОплаты = Справочники.ТипыОплат.Наличные ИЛИ Стр.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда     
						Если ЗапретЧВ Или ЗапретЧВПоДокументу Тогда
              	        	Движение.СуммаНаличные      = Стр.КОплатеКлиентом;  
							Движение.СуммаДоставки      = 0; //решили что обменов у яндекса не будет, поэтому сумма доставки = 0 )))
						Иначе	
							Движение.СуммаНаличные     = Стр.Сумма;
							Движение.СуммаДоставки      = Стр.СуммаДоставки;
						КонецеСли;	
                    КонецЕсли;
                    
                Иначе
                    Движение.СуммаНаличные = Стр.Сумма;
                    Движение.СуммаБезНаличные = Стр.СуммаБезнал;
                    Движение.СуммаДоставки      = Стр.СуммаДоставки;
                КонецЕсли;
                
                //Получим сумму документа возврата
                СуммаВозврата = ПолучитьСуммуВозврата(Стр.Доставка);
                
                //+++++Серегин М.В. 03.11.2015 11:01:39 небольшой костыль из-за предоплаты
                Если Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки 
                    ИЛИ Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносНаВторуюОчередь
                    ИЛИ Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом 
                    ИЛИ Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда // добавлил новое условие когда заказ не выполнен, то и кредит = 0
                    ПредоплатаБанка = 0;
                Иначе
                    ПредоплатаБанка = Стр.ПредоплатаБанка;
                КонецЕсли;
                //-----Серегин М.В. 03.11.2015 11:02:03 
                
                
                Если Стр.ТипОплаты = Справочники.ТипыОплат.Терминал Или Стр.ТипОплаты = Справочники.ТипыОплат.СБП Тогда
                    Движение.СуммаБезНаличные   = Движение.СуммаБезНаличные-СуммаВозврата-ПредоплатаБанка;
                    Движение.СуммаВозвратаБезНаличные = СуммаВозврата;
                ИначеЕсли Стр.ТипОплаты = Справочники.ТипыОплат.Наличные ИЛИ Стр.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда 
                    Движение.СуммаНаличные   = Движение.СуммаНаличные+Движение.СуммаДоставки-СуммаВозврата-ПредоплатаБанка;
                    Движение.СуммаВозвратаНаличные      = СуммаВозврата;
                КонецЕсли;
            
            
        КонецЕсли;
            
            Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена 
                ИЛИ Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
                Движение.Выполнено          = 1;
            Иначе
                Если Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки 
                    ИЛИ Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносНаВторуюОчередь
                    ИЛИ Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
                    Движение.Перенос        = 1;
                КонецЕсли;
                Движение.НеВыполнено        = 1;
            КонецЕсли;
            
        //КонецЕсли;
        
    КонецЦикла;
    
КонецПроцедуры

Функция ПолучитьСуммуВозврата(Доставка)

    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ПриходДСПоОтчетуВодителяТовары.Номенклатура,
        |   СУММА(ПриходДСПоОтчетуВодителяТовары.Сумма) КАК Сумма
        |ПОМЕСТИТЬ ВТ_Группировка
        |ИЗ
        |   (ВЫБРАТЬ
        |       ПриходДСПоОтчетуВодителяТовары.Номенклатура КАК Номенклатура,
        |       СУММА(ПриходДСПоОтчетуВодителяТовары.Сумма) КАК Сумма
        |   ИЗ
        |       Документ.ПриходДСПоОтчетуВодителя.Товары КАК ПриходДСПоОтчетуВодителяТовары
        |   ГДЕ
        |       ПриходДСПоОтчетуВодителяТовары.Ссылка = &Ссылка
        |       И ПриходДСПоОтчетуВодителяТовары.Доставка = &Доставка
        |   
        |   СГРУППИРОВАТЬ ПО
        |       ПриходДСПоОтчетуВодителяТовары.Номенклатура
        |   
        |   ОБЪЕДИНИТЬ ВСЕ
        |   
        |   ВЫБРАТЬ
        |       ПриходДСПоОтчетуВодителяТовары.Номенклатура,
        |       СУММА(ПриходДСПоОтчетуВодителяТовары.СуммаБезнал)
        |   ИЗ
        |       Документ.ПриходДСПоОтчетуВодителя.Товары КАК ПриходДСПоОтчетуВодителяТовары
        |   ГДЕ
        |       ПриходДСПоОтчетуВодителяТовары.Ссылка = &Ссылка
        |       И ПриходДСПоОтчетуВодителяТовары.Доставка = &Доставка
        |   
        |   СГРУППИРОВАТЬ ПО
        |       ПриходДСПоОтчетуВодителяТовары.Номенклатура) КАК ПриходДСПоОтчетуВодителяТовары
        |
        |СГРУППИРОВАТЬ ПО
        |   ПриходДСПоОтчетуВодителяТовары.Номенклатура
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   СУММА(ВТ_Группировка.Сумма) КАК Сумма
        |ПОМЕСТИТЬ ВТ
        |ИЗ
        |   ВТ_Группировка КАК ВТ_Группировка
        |ГДЕ
        |   ВТ_Группировка.Сумма < 0
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ЕСТЬNULL(ВТ.Сумма, 0) КАК СуммаВозврата
        |ИЗ
        |   ВТ КАК ВТ";
    
    Запрос.УстановитьПараметр("Доставка", Доставка);
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат ВыборкаДетальныеЗаписи.СуммаВозврата; 
    Иначе 
        Возврат 0;
    КонецЕсли;


КонецФункции // ПолучитьСуммуВозврата()

#Область SMV

Процедура ДвиженияСтатусыДоговоров()
    
    Движения.СтатусыДоговоров.Очистить();
    Движения.СтатусыДоговоров.Записывать = Истина;
    ТаблицаДвижений = СформироватьТаблицуДвиженияСтатусыДоговоров(); 
    Для каждого Стр Из ТаблицаДвижений Цикл
        Движение = Движения.СтатусыДоговоров.Добавить();
        Движение.Период = Дата;
        ЗаполнитьЗначенияСвойств(Движение,Стр);
    КонецЦикла;

КонецПроцедуры

Функция СформироватьТаблицуДвиженияСтатусыДоговоров()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ПриходДСПоОтчетуВодителяДоставки.Доставка КАК Заказ,
        |   &СтатусДоговора КАК Статус
        |ИЗ
        |   Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
        |ГДЕ
        |   ПриходДСПоОтчетуВодителяДоставки.Ссылка = &Ссылка
        |   И ПриходДСПоОтчетуВодителяДоставки.ДоговорПроверен";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    Запрос.УстановитьПараметр("СтатусДоговора", Справочники.СтатусыДоговоров.Проверен);
    
    Возврат Запрос.Выполнить().Выгрузить();    


КонецФункции // СформироватьТаблицуДвиженияСтатусыДоговоров()
	
#КонецОбласти 


Функция ОтправитьДанныеПоЧастичноВыполненнымЗаказам_Озон()

	Отказ = Ложь;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	oz_ЭкземплярыТоваровЗаказов.Заказ КАК Заказ,
	                      |	oz_ЭкземплярыТоваровЗаказов.Номенклатура КАК Номенклатура,
	                      |	ПриходДСПоОтчетуВодителяТовары.ТипОплаты,
	                      |	ПриходДСПоОтчетуВодителяТовары.ИсходноеКоличество - ПриходДСПоОтчетуВодителяТовары.Количество КАК КоличествоОтказ,
	                      |	ПриходДСПоОтчетуВодителяДоставки.ПричинаНеВыполнения КАК ПричинаНеВыполнения
	                      |ПОМЕСТИТЬ ВТ
	                      |ИЗ
	                      |	Документ.ПриходДСПоОтчетуВодителя.Товары КАК ПриходДСПоОтчетуВодителяТовары
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.oz_ЭкземплярыТоваровЗаказов КАК oz_ЭкземплярыТоваровЗаказов
	                      |		ПО ПриходДСПоОтчетуВодителяТовары.Номенклатура = oz_ЭкземплярыТоваровЗаказов.Номенклатура
	                      |			И ПриходДСПоОтчетуВодителяТовары.Доставка = oz_ЭкземплярыТоваровЗаказов.Заказ
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	                      |		ПО ПриходДСПоОтчетуВодителяТовары.Доставка = ПриходДСПоОтчетуВодителяДоставки.Доставка
	                      |ГДЕ
	                      |	ПриходДСПоОтчетуВодителяТовары.Ссылка = &Ссылка
	                      |	И ПриходДСПоОтчетуВодителяДоставки.РезультатДоставки = &Частичка
	                      |	И ПриходДСПоОтчетуВодителяДоставки.ИнтернетМагазин = &МагазинОзон
						  |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ.Заказ КАК Заказ,
	                      |	ВТ.Номенклатура,
	                      |	ВТ.ТипОплаты,
	                      |	ВТ.КоличествоОтказ,
	                      |	ВзаимосвязьПричинВозвратаOZON.ПричинаВозвратаOZON
	                      |ИЗ
	                      |	ВТ КАК ВТ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВзаимосвязьПричинВозвратаOZON КАК ВзаимосвязьПричинВозвратаOZON
	                      |		ПО ВТ.ПричинаНеВыполнения = ВзаимосвязьПричинВозвратаOZON.ПричинаВозвратаУТЛ
	                      |ГДЕ
	                      |	ВТ.КоличествоОтказ > 0
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ.Номенклатура,
	                      |	ВТ.Заказ,
	                      |	ВТ.ТипОплаты,
	                      |	ВТ.КоличествоОтказ,
	                      |	ВзаимосвязьПричинВозвратаOZON.ПричинаВозвратаOZON
	                      |ИТОГИ ПО
	                      |	Заказ");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Частичка", Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично);
	Запрос.УстановитьПараметр("МагазинОзон", Справочники.Контрагенты.НайтиПоКоду("Shop_612"));
	РезТоварГруппировка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	Пока РезТоварГруппировка.Следующий() Цикл  // -------- обход по группировкам
		попытка
		Заказ = РезТоварГруппировка.Заказ;
		КодОплаты = Заказ.ТипОплаты;
	исключение
		продолжить;
		конецпопытки;
		//Если НЕ ЗначениеЗаполнено(Заказ) Тогда
		//	Продолжить;
		//КонецЕсли;

		ТаблицаДопПараметры = Smv.ПолучитьДополнительныеПараметрыЗаказовПоНомеру(Заказ.Номер);
		Если ТаблицаДопПараметры.Количество()>0 Тогда
		    Штрихкод = ТаблицаДопПараметры[0].ШтрихкодOZON;    
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Штрихкод) Тогда 
		    Продолжить; 
		КонецЕсли;
		
		РезТовар = РезТоварГруппировка.Выбрать();  
		
		ТаблицаОтказныхПозиций = Новый ТаблицаЗначений;
		ТаблицаОтказныхПозиций.Колонки.Добавить("Barcode");
		ТаблицаОтказныхПозиций.Колонки.Добавить("ReturnReasonID");
		
		Пока РезТовар.Следующий() Цикл
						
			ПричинаВозвратаOZON = ?(ЗначениеЗаполнено(РезТовар.ПричинаВозвратаOZON), РезТовар.ПричинаВозвратаOZON, Справочники.oz_ПричиныВозврата.НайтиПоКоду("6").ID);		
					
			ЗапросТоварыШК = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ "+ РезТовар.КоличествоОтказ +"
			                              |	oz_ЭкземплярыТоваровЗаказов.Заказ,
			                              |	oz_ЭкземплярыТоваровЗаказов.Номенклатура,
			                              |	oz_ЭкземплярыТоваровЗаказов.Экземпляр,
			                              |	oz_ЭкземплярыТоваровЗаказов.Штрихкод,
			                              |	oz_ЭкземплярыТоваровЗаказов.id
			                              |ИЗ
			                              |	РегистрСведений.oz_ЭкземплярыТоваровЗаказов КАК oz_ЭкземплярыТоваровЗаказов
			                              |ГДЕ
			                              |	oz_ЭкземплярыТоваровЗаказов.Заказ = &Заказ
			                              |	И oz_ЭкземплярыТоваровЗаказов.Номенклатура = &Номенклатура");
			ЗапросТоварыШК.УстановитьПараметр("Заказ", РезТовар.Заказ); 
			ЗапросТоварыШК.УстановитьПараметр("Номенклатура", РезТовар.Номенклатура);
			РезЗапросТоварыШК = ЗапросТоварыШК.Выполнить().Выбрать();
			
			Пока РезЗапросТоварыШК.Следующий() Цикл				
				НСтр = ТаблицаОтказныхПозиций.Добавить();	
				НСтр.Barcode = РезЗапросТоварыШК.Штрихкод;
				НСтр.ReturnReasonID = ПричинаВозвратаOZON;	
				oz_СоздатьОтказнойЭкземпляр(РезЗапросТоварыШК);
			КонецЦикла;						  								
		КонецЦикла;	
		
		Попытка
			Результат = oz_РаботаССервисом.PostingGiveout(Штрихкод, ?(Строка(КодОплаты) = "1", 1, 0), ТаблицаОтказныхПозиций, Заказ, Ссылка);
			
			Если Результат <> Неопределено И Результат.Код = 0 Тогда			
				Ozon_ДанныеВыгружены = Истина;		
			КонецЕсли;
			
			Метод = Перечисления.oz_Методы.PostingGiveout;
			// логирование
			oz_РаботаССервисом.ЗаписатьЛог_oz_ИсторияОтправкиЗапросов(Результат, Метод, Заказ);
		Исключение
			Сообщить("Ошибка выполнения запроса к Ozon");
			//Отказ = Истина;
		КонецПопытки;
	КонецЦикла;
	
	Возврат Отказ;

КонецФункции

Процедура oz_СоздатьОтказнойЭкземпляр(СтрокаРез)
	
	ЭкземплярСпр = Справочники.oz_ОтказныеЭкземплярыТоваров.НайтиПоРеквизиту("Штрихкод", СтрокаРез.Штрихкод);
	
	Если НЕ ЗначениеЗаполнено(ЭкземплярСпр) Тогда		
		ЭкземплярСпр = Справочники.oz_ОтказныеЭкземплярыТоваров.СоздатьЭлемент();
		ЭкземплярСпр.Наименование = "" + СтрокаРез.Номенклатура;
		ЭкземплярСпр.Заказ = СтрокаРез.Заказ;
		ЭкземплярСпр.Номенклатура = СтрокаРез.Номенклатура;
		ЭкземплярСпр.id = СтрокаРез.id;
		ЭкземплярСпр.Штрихкод = СтрокаРез.Штрихкод;	
		ЭкземплярСпр.Записать();
	КонецЕсли;
	
	Набор = РегистрыСведений.oz_ЭкземплярыТоваровЗаказов.СоздатьНаборЗаписей();
	Набор.Отбор.Заказ.Установить(СтрокаРез.Заказ);
	Набор.Отбор.Номенклатура.Установить(СтрокаРез.Номенклатура);
	Набор.Отбор.Штрихкод.Установить(СтрокаРез.Штрихкод);
	Набор.Прочитать();
	
	Для каждого Стр Из Набор Цикл
		Стр.Экземпляр = ЭкземплярСпр.Ссылка;		
	КонецЦикла;
	
	Попытка	
		Набор.Записать();
	Исключение	
	КонецПопытки;
	

КонецПроцедуры

// Михушкин - 30.06.2016 --->>  
Процедура СтатусыЗакрытияЗаказов(Режим)
	
	
	// Подготовим таблицу	
	ТабДоставки = Новый ТаблицаЗначений;
	ТабДоставки.Колонки.Добавить("Заказ");
	ТабДоставки.Колонки.Добавить("Регистратор");
		
	Если ЭтоНовый() Тогда
		СсылкаРегистратор = ПолучитьСсылкуНового();
	Иначе
		СсылкаРегистратор = Ссылка;
	КонецЕсли;
	
	Для каждого Стр Из Доставки Цикл
		Если Стр.ПредварительноеЗакрытие Тогда	
			Нстр = ТабДоставки.Добавить();
			Нстр.Заказ = Стр.Доставка;
			Нстр.Регистратор = СсылкаРегистратор;		
		КонецЕсли;
	КонецЦикла;	
	
	//сформируем движение
	mas.СтатусыЗакрытияЗаказов(ТабДоставки, Режим);

КонецПроцедуры
// <<--- Михушкин

Процедура ИзменениеДатДоставок()
	
	Для каждого Тек Из Доставки Цикл
		
		Если ЗначениеЗаполнено(Тек.ДатаПереноса) И (Тек.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки ИЛИ Тек.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом) Тогда
			Если НачалоДня(Тек.Доставка.Дата) <> НачалоДня(Тек.ДатаПереноса) Тогда
				
				Нов = Движения.ДатыДоставок.Добавить();
				БПДоставка = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(СокрЛП(Тек.Доставка.Номер));
				Нов.Доставка = БПДоставка;
				Нов.ДатаДоставки = Тек.ДатаПереноса;
				Нов.Период = Дата;
				Попытка
					Д = БПДоставка.ПолучитьОбъект();
				Исключение
					Сообщить("Это самовывоз - " + СокрЛП(Тек.Доставка.Номер), СтатусСообщения.ОченьВажное);
				КонецПопытки;
				Д.Дата = Тек.ДатаПереноса;
				
				ЧН = Час(Д.ВремяОтправленияС);
				ЧК = Час(Д.ВремяОтправленияПо);
				
				МН = Минута(Д.ВремяОтправленияС);
				МК = Минута(Д.ВремяОтправленияПо);
				
				ЧН_ = Час(Д.ВремяПрибытияС);
				ЧК_ = Час(Д.ВремяПрибытияПо);
				
				МН_ = Минута(Д.ВремяПрибытияС);
				МК_ = Минута(Д.ВремяПрибытияПо);
				
				
				Д.ВремяОтправленияС = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН, "ЧЦ=2; ЧН=; ЧВН=; ЧГ=") + Формат(МН, "ЧЦ=2; ЧН=; ЧВН=; ЧГ=") + "00");
				Д.ВремяОтправленияПо = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК, "ЧЦ=2; ЧН=; ЧВН=; ЧГ=") + Формат(МК, "ЧЦ=2; ЧН=; ЧВН=; ЧГ=") + "00");
				
				Д.ВремяПрибытияС = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН_, "ЧЦ=2; ЧН=; ЧВН=; ЧГ=") + Формат(МН_, "ЧЦ=2; ЧН=; ЧВН=; ЧГ=") + "00");
				Д.ВремяПрибытияПо = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК_, "ЧЦ=2; ЧН=; ЧВН=; ЧГ=") + Формат(МК_, "ЧЦ=2; ЧН=; ЧВН=; ЧГ=") + "00");
				
				Д.Записать();
								
				УстановитьДатуВАдминке(Д.Номер, Тек.ДатаПереноса);

				Д_ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Д.Номер);  // , Д.Дата
				Если Не Д_.Пустая() Тогда
					Док = Д_.ПолучитьОбъект();
					Док.Дата = Тек.ДатаПереноса;
					Док.Записать(РежимЗаписиДокумента.Запись);
					Если Док.Проведен Тогда
						Док.Записать(РежимЗаписиДокумента.Проведение);
					КонецЕсли;	
				КонецЕсли;
				
				Д_ = Документы.ВозвратТоваровОтПокупателя.НайтиПоНомеру(Д.Номер, Дата); // , Д.Дата
				Если Не Д_.Пустая() Тогда
					Док = Д_.ПолучитьОбъект();
					Док.Дата = Тек.ДатаПереноса;
					Док.Записать(РежимЗаписиДокумента.Запись);
					Если Док.Проведен Тогда
						Док.Записать(РежимЗаписиДокумента.Проведение);
					КонецЕсли;	
				КонецЕсли;
			
			КонецЕсли;	
		КонецЕсли;		
	КонецЦикла;	
	
КонецПроцедуры


Процедура УстановитьДатуВАдминке(НомерЗ, ДатаЗ)
	Попытка
		ПодключениеКМагазину = Евген.СоздатьПодключениеКИнтернетМагазину(); 
	Исключение
		НормальныйХодВыполнения = Ложь;
		Возврат;
	КонецПопытки;
	
	// ++Задача № 3381
	//Ткст = "
	//|UPDATE _order
	//|SET DeliveryDate = '" + Евген.ДатаВSQL(ДатаЗ, Ложь) + "', whoLastChange = '"+ПараметрыСеанса.ТекущийПользователь+"'
	//| WHERE orderId = " + Формат(НомерЗ, "ЧГ=") + "
	//|EXEC mp_saveOrderHistory " + Формат(НомерЗ, "ЧГ=");
	//ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
	ПараметрыЗаказа = Новый Структура("OrderId, DeliveryDate, Who",
	Число(НомерЗ), ДатаЗ, СокрЛП(ПараметрыСеанса.ТекущийПользователь));
	
	ПараметрыЗапроса = новый Массив;
	ПараметрыЗапроса.Добавить(ПараметрыЗаказа);
	
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		ФайлДляКонтроля = "D:\tmp\SetOrdersDeliveryDate_" + СокрЛП(НомерЗ) + ".json";
		ТолькоСохранитьФайл = Ложь;
	Иначе
		ФайлДляКонтроля = Неопределено;
		ТолькоСохранитьФайл = Ложь;
	КонецЕсли;
	
	РезультатОтправки = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(
	Перечисления.ВидыЗапросовWEBСервис.SetOrdersDeliveryDateResult, 
	ПараметрыЗапроса, 
	ФайлДляКонтроля, 
	ТолькоСохранитьФайл);
	// --Задача № 3381
	
    ////Серегин М.В. 30.07.2015 17:16:30 старый код
    //Ткст = "
    //|UPDATE _order
    //|SET carid = 0
    //| WHERE orderId = " + Формат(НомерЗ, "ЧГ=") + "
    //|EXEC mp_saveOrderHistory " + Формат(НомерЗ, "ЧГ=");
    //ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
    ////Серегин М.В. 30.07.2015 17:16:37 новый
    Ткст = "
	|EXEC p1c_removeCarriageFromOrder " + Формат(НомерЗ, "ЧГ=") + "
	|EXEC mp_saveOrderHistory " + Формат(НомерЗ, "ЧГ=");
	ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
    //Серегин М.В. 30.07.2015 17:16:39 
	
КонецПроцедуры


Функция ЗапросКИнтернетМагазину(ТекстЗапроса, ПодключениеКМагазину) Экспорт
	
	//Сообщить("======= Запрос =======");
	//Сообщить(ТекстЗапроса);
	Cmd = Новый COMОбъект("ADODB.Command");
	Cmd.ActiveConnection = ПодключениеКМагазину;
	Cmd.CommandText = ТекстЗапроса;
	Cmd.CommandType = 1;
	Попытка
		Возврат Cmd.Execute();
	Исключение	
	КонецПопытки;
	
КонецФункции // ЗапросКИнтернетМагазину()

Процедура ОткатитьДатуДоставки()

	Для Каждого Тек Из Доставки Цикл
		Если ЗначениеЗаполнено(Тек.ДатаПереноса) И (Тек.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки ИЛИ Тек.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом) Тогда
			
			ЗапросДатаПозже = Новый Запрос("ВЫБРАТЬ
			                               |	ДатыДоставок.Период,
			                               |	ДатыДоставок.Регистратор,
			                               |	ДатыДоставок.НомерСтроки,
			                               |	ДатыДоставок.Активность,
			                               |	ДатыДоставок.Доставка,
			                               |	ДатыДоставок.Заказ,
			                               |	ДатыДоставок.ПричинаИзмененияДаты,
			                               |	ДатыДоставок.ПричинаИзмененияДатыСпр,
			                               |	ДатыДоставок.ДатаДоставки
			                               |ИЗ
			                               |	РегистрСведений.ДатыДоставок КАК ДатыДоставок
			                               |ГДЕ
			                               |	ДатыДоставок.Период >= &Дата
			                               |	И ДатыДоставок.Заказ = &Заказ
			                               |	И ДатыДоставок.Регистратор <> &Регистратор");
			ЗапросДатаПозже.УстановитьПараметр("Дата", Дата);
			ЗапросДатаПозже.УстановитьПараметр("Заказ", Тек.Доставка);
			ЗапросДатаПозже.УстановитьПараметр("Регистратор", Ссылка);
			Рез = ЗапросДатаПозже.Выполнить();
			
			Если НЕ Рез.Пустой() Тогда
				Продолжить;		
			КонецЕсли;
			
			
			
			Стр = Новый Структура;
			Стр.Вставить("Доставка", Тек.Доставка.Ссылка);
			НайПред = РегистрыСведений.ДатыДоставок.ПолучитьПоследнее(Дата - 1, Стр);
			
			
			Если ЗначениеЗаполнено(НайПред.ДатаДоставки) Тогда
				
				Д = Тек.Задание.ПолучитьОбъект();
				Д.Дата = НайПред.ДатаДоставки;  
				
				ЧН = Час(Д.ВремяОтправленияС);
				ЧК = Час(Д.ВремяОтправленияПо);
				
				МН = Минута(Д.ВремяОтправленияС);
				МК = Минута(Д.ВремяОтправленияПо);
				
				ЧН_ = Час(Д.ВремяПрибытияС);
				ЧК_ = Час(Д.ВремяПрибытияПо);
				
				МН_ = Минута(Д.ВремяПрибытияС);
				МК_ = Минута(Д.ВремяПрибытияПо);
				
				
				Д.ВремяОтправленияС = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН, "ЧЦ=2; ЧВН=; ЧГ=") + Формат(МН, "ЧЦ=2; ЧВН=; ЧГ=") + "00");
				Д.ВремяОтправленияПо = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК, "ЧЦ=2; ЧВН=; ЧГ=") + Формат(МК, "ЧЦ=2; ЧВН=; ЧГ=") + "00");
				
				Д.ВремяПрибытияС = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН_, "ЧЦ=2; ЧВН=; ЧГ=") + Формат(МН_, "ЧЦ=2; ЧВН=; ЧГ=") + "00");
				Д.ВремяПрибытияПо = Дата(Формат(Год(Тек.ДатаПереноса), "ЧГ=") + Формат(Месяц(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(Тек.ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК_, "ЧЦ=2; ЧВН=; ЧГ=") + Формат(МК_, "ЧЦ=2; ЧВН=; ЧГ=") + "00");
				
				Д.Записать();
				
							
				Д_ = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Д.Номер); // , Д.Дата
				Если Не Д_.Пустая() Тогда
					Док = Д_.ПолучитьОбъект();
					Док.Дата = НайПред.ДатаДоставки;
					УстановитьДатуВАдминке(Д.Номер, НайПред.ДатаДоставки);
					Док.Записать(РежимЗаписиДокумента.Запись);
					Если Док.Проведен Тогда
						Док.Записать(РежимЗаписиДокумента.Проведение);
					КонецеСли;	
				КонецеСли;	
				
				Д_ = Документы.ВозвратТоваровОтПокупателя.НайтиПоНомеру(Д.Номер, Д.Дата); // , Д.Дата
				Если Не Д_.Пустая() Тогда
					Док = Д_.ПолучитьОбъект();
					Док.Дата = НайПред.ДатаДоставки;
					Док.Записать(РежимЗаписиДокумента.Запись);
					Если Док.Проведен Тогда
						Док.Записать(РежимЗаписиДокумента.Проведение);
					КонецеСли;	
				КонецеСли;	
				
			КонецеСли;
		КонецеСли;
	КонецЦикла;	
	
КонецПроцедуры

Функция РасчитатьСтоимостьТоваровЗаказа(Заказ) // Задача № 2586 ItemsPrice
	
	СтрокиТоваров = Товары.НайтиСтроки(Новый Структура("Доставка", Заказ));
	
	СуммаТоваров = 0;	
	Для Каждого СтрокаТовара Из СтрокиТоваров Цикл
		СуммаТоваров = СуммаТоваров + (СтрокаТовара.Количество* СтрокаТовара.Цена);
	КонецЦикла;	
	
	Возврат СуммаТоваров;
	
КонецФункции

Процедура ОбновлениеСтатусовВАдминке(Режим) Экспорт
	
	//+Степанов Задача № 3837
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Рейс.ДатаРейса КАК ДатаРейса
	               |ИЗ
	               |	Документ.ПриходДСПоОтчетуВодителя КАК ПриходДСПоОтчетуВодителя
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс КАК Рейс
	               |		ПО ПриходДСПоОтчетуВодителя.ОтчетВодителя.Рейс = Рейс.РейсМестнойДоставки
	               |ГДЕ
	               |	ПриходДСПоОтчетуВодителя.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ДатаРейса < '20200416000000' Тогда
			ОбновлениеСтатусовВАдминке_до_16042020(Режим);
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	//-Степанов Задача № 3837
	
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();	
	Период = ТекущаяДата();
	
	//+Степанов Задача № 3837
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриходДСПоОтчетуВодителяДоставки.Доставка КАК Доставка
	               |ПОМЕСТИТЬ втДоставки
	               |ИЗ
	               |	Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	               |ГДЕ
	               |	ПриходДСПоОтчетуВодителяДоставки.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втДоставки.Доставка КАК Доставка,
	               |	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	               |	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые
	               |ИЗ
	               |	втДоставки КАК втДоставки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	               |				,
	               |				Заказ В
	               |					(ВЫБРАТЬ
	               |						втДоставки.Доставка КАК Доставка
	               |					ИЗ
	               |						втДоставки КАК втДоставки)) КАК ПараметрыТарифаЗаказаСрезПоследних
	               |		ПО втДоставки.Доставка = ПараметрыТарифаЗаказаСрезПоследних.Заказ";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТаблицаСуммУслугИзРС = Запрос.Выполнить().Выгрузить();
	//-Степанов Задача № 3837
	
	Для каждого Стр Из Доставки Цикл
		
		Если Стр.ПредварительноеЗакрытие Тогда
					
			// Задача 2586
			СтатусКЗаписи = 0;
			Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда					
				СтатусКЗаписи = 301;
			ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
				СтатусКЗаписи = 302;
			ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена 
				И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
				СтатусКЗаписи = 303;
			ИначеЕсли  Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена
				И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
				СтатусКЗаписи = 304;
			Иначе 
				СтатусКЗаписи = 401;
			КонецЕсли; 
			// Задача 2586

			
			// текст для передварительно закрытия
			orderID = СокрЛП(Стр.Доставка.Номер);
			//Status = Строка(Стр.Доставка.СтатусИнтернетМагазина);
			Status = "";
			Если Режим = РежимЗаписиДокумента.Проведение Тогда			
				Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена ИЛИ Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда				
					Status = "3";			
				ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
					Если Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда				
						Status = "3";					
					ИначеЕсли Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда				
						Status = "4";
					Иначе
						Продолжить;
					КонецЕсли;		
				КонецЕсли;
			Иначе				
				Status = "2";			
			КонецЕсли;
			
			Если СтатусКЗаписи = 303 ИЛИ СтатусКЗаписи = 304 Тогда  // Задача № 3501
               Продолжить;
			Конецесли;   		
						
			//Status = ?(Режим = РежимЗаписиДокумента.Проведение, "3", Строка(Стр.Доставка.СтатусИнтернетМагазина));
			Если СтатусКЗаписи = 301 ИЛИ СтатусКЗаписи = 302 Тогда
				ItemsPrice =  РасчитатьСтоимостьТоваровЗаказа(Стр.Доставка); // Задача № 2586
			Иначе
				ItemsPrice = Неопределено;
			КонецЕсли;
			
			//+Степанов Задача № 3837
			СтрокаСумм = ТаблицаСуммУслугИзРС.Найти(Стр.Доставка, "Доставка");
			Если СтрокаСумм = Неопределено Тогда
				УслугиСДИзРС = 0;
				УслугиСДЧистыеИзРС = 0;
			Иначе
				УслугиСДИзРС = СтрокаСумм.УслугиСД;
				УслугиСДЧистыеИзРС = СтрокаСумм.УслугиСДЧистые;
			КонецЕсли;	
			//-Степанов Задача № 3837

			
			who = ПараметрыСеанса.ТекущийПользователь;
			//completeDate = Евген.ДатаВSQL(ТекущаяДата(), Ложь);  // кассиры стали проводить документы после 0.00
			completeDate = Евген.ДатаВSQL(Стр.Доставка.Дата, Ложь);
			//+Степанов Задача № 3837
			//serviceDC = Формат(Стр.Доставка.УслугиСД, "ЧРД=.; ЧН=0; ЧГ=");
			//serviceDCclean = Формат(Стр.Доставка.УслугиСДЧистые, "ЧРД=.; ЧН=0; ЧГ=");
			serviceDC = Формат(УслугиСДИзРС, "ЧРД=.; ЧН=0; ЧГ=");
			serviceDCclean = Формат(УслугиСДЧистыеИзРС, "ЧРД=.; ЧН=0; ЧГ=");
			//-Степанов Задача № 3837
			Комм = "Предварительное закрытие ПДС";
			comment = СтрЗаменить(Комм, "'", """");
			isRefusal = ?(Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена, 1, 0);
			ReasonRefusal = "" + Стр.ПричинаНеВыполнения;
			deliveryPrice = Формат(Стр.СуммаДоставки, "ЧРД=.; ЧН=0; ЧГ=");
			payType  = Стр.ТипОплаты.Код;
			closeFlag = ?(Режим = РежимЗаписиДокумента.Проведение, 1, 0);		
			
			// Отключено в рамках Задача № 2586
			//СтрокаЗапросаПЗ = "
			//|DECLARE @t TSetOrderStatus
			//|INSERT INTO @t ([orderID],[statusId],[who],[completeDate],serviceDC,serviceDCclean,comment, isRefusal, ReasonRefusal, deliveryPrice, payType, closeFlag) VALUES (" +
			//orderID +", " +Status+", '" +who+"', '"+completeDate+"', "+serviceDC+"," +serviceDCclean+",'" +comment+"', "+isRefusal+ ", '" +ReasonRefusal+"', "+deliveryPrice+ ", " +payType+ ", "+closeFlag+")
			//|EXEC import_setOrderStatusFrom1C @t
			//|";
			//Евген.ЗапросКИнтернетМагазину(СтрокаЗапросаПЗ, Подкл);
			
			// Задача № 2586
			mas.ОтправитьФинальныйСтатусВАдминку(orderID, Число(Status), comment,
			who,
			Стр.Доставка.Дата,
			serviceDC,
			serviceDCclean,
			IsRefusal,
			ReasonRefusal,
			DeliveryPrice,
			PayType,
			,
			,
			closeFlag,
			ТерминалДоставки.Код,
			ItemsPrice);
			// Задача № 2586

			// Задача № 2586, 1 этап переделки записи статусов
			РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(Стр.Доставка, СтатусКЗаписи, Status, Ссылка);
			// Задача № 2586, 1 этап переделки записи статусов

		КонецЕсли;
	КонецЦикла;	
	
	// сформируем таблицу данных для по статусам
	ТаблицаДанных = ПолучитьДанныеОбновлениеСтатусовВАдминке();
	
	
	Если Режим = РежимЗаписиДокумента.Проведение Тогда
		
	    СтрТекстЗапроса="";
	    Стр2 = "";
	    ТекстСоставлен = Ложь;
	    Статус = 0;
		//ТаблицаДанных = ПолучитьДанныеОбновлениеСтатусовВАдминке();
		
		// Задача № 2813
		МассивСтатусов = Неопределено;

		Для каждого Стр Из ТаблицаДанных Цикл
			
			Если Стр.Статус = 303 ИЛИ Стр.Статус = 304 Тогда // Задача № 3501
                Продолжить;
			КонецЕсли;	
			
			Если Стр.Статус <> 401 Тогда
				Статус = Стр.Статус;
				Если Стр.ПредварительноеЗакрытие Тогда
					
					//// --- Отключено в рамках Задача № 2813
					//// текст для текущих статусов
					//СтрТекстЗапроса = СтрТекстЗапроса + "(" +Формат(Сокрлп(Стр.Реализация.Номер), "ЧГ=") + ","+Стр.Статус+",'Приход ДС по отчету водителя'"+")"+",";
					//// --- Отключено в рамках Задача № 2813

					// Задача № 2813
					
					ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалДоставки.Код)); // Задача № 3027
					
					//CeHbKA #3227 21.06.2019
					Если НЕ Стр.ПричинаОтказаПереноса.Пустая() Тогда
						ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonId", СокрЛП(Стр.ПричинаОтказаПереноса.Код), ДопПараметрыСтатуса); 
						ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonRefusal", СокрЛП(Стр.ПричинаОтказаПереноса.Наименование), ДопПараметрыСтатуса); // Задача № 3027
					КонецЕсли;	
					//CeHbKA #3227 21.06.2019
					
					//Асеев 26.04.2024 (Задача № 5267)>>>
					ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("OperationId", 2, ДопПараметрыСтатуса);
					//Асеев 26.04.2024 (Задача № 5267)<<<
					
					МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Стр.Реализация.Номер, 
					Стр.Статус, 
					"Приход ДС по отчету водителя",
					,
					Дата,
					МассивСтатусов, 
					ДопПараметрыСтатуса);
					
					// текст для финальных статусов
					Стр2 = Стр2 + "
					|INSERT INTO @t ([orderID],[FinalStatusID],[who]) VALUES (" + Сокрлп(Стр.Реализация.Номер) + "," + Строка(Стр.Статус) + ",'" + ПараметрыСеанса.ТекущийПользователь + "')";
	                ТекстСоставлен = Истина;
						
				КонецЕсли;	
	        КонецЕсли;     
	    КонецЦикла;
	     
	    //// --- Отключено в рамках Задача № 2813
		//// текущий статус
		//Если ТекстСоставлен И ЗначениеЗаполнено(СтрТекстЗапроса) Тогда
		//	ДлинаТекста = СтрДлина(СтрТекстЗапроса);
		//	СтрТекстЗапроса = Лев(СтрТекстЗапроса,ДлинаТекста-1);
		//	ТекстЗапроса = "
		//	|DECLARE @t TOrderStatusId
		//	|INSERT INTO @t (orderID, statusId, comment) VALUES " +
		//	СтрТекстЗапроса +" EXEC import_setOrdersStatusIDFrom1C @t";
		//	Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Подкл);		
		//КонецЕсли;
		//// --- Отключено в рамках Задача № 2813

		// Задача № 2813
		СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);
		
		// финальный статус
		Если Статус <> 0 Тогда			
			Стр2 = "DECLARE @t TOrderFinalStatus   " + Стр2 + " EXEC import_setOrderFinalStatus @t";
			Евген.ЗапросКИнтернетМагазину(Стр2, Подкл);
		КонецеСли;
		
	КонецЕсли;
	
	//костыль
	ТаблицаДанных.Колонки.Добавить("БылоЗакрытие");
	
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДанных,,ТерминалДоставки);
	// Задача № 3027 //smv.СохранитьСтатус(ТаблицаДанных);
	
	// РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныеСтатусы(ТаблицаДанных); Отключено в рамках 2586, 1 этап переделки записи статусов
	// Задача № 2586 //smv.СохранитьФинальныйСтатус(ТаблицаДанных);
	
КонецПроцедуры

Процедура ОбновлениеСтатусовВАдминке_до_16042020(Режим) Экспорт
	
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();	
	Период = ТекущаяДата();

	Для каждого Стр Из Доставки Цикл
		
		Если Стр.ПредварительноеЗакрытие Тогда
					
			// Задача 2586
			СтатусКЗаписи = 0;
			Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена Тогда					
				СтатусКЗаписи = 301;
			ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
				СтатусКЗаписи = 302;
			ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена 
				И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
				СтатусКЗаписи = 303;
			ИначеЕсли  Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена
				И Стр.ПричинаНевыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда
				СтатусКЗаписи = 304;
			Иначе 
				СтатусКЗаписи = 401;
			КонецЕсли; 
			// Задача 2586

			
			// текст для передварительно закрытия
			orderID = СокрЛП(Стр.Доставка.Номер);
			//Status = Строка(Стр.Доставка.СтатусИнтернетМагазина);
			Status = "";
			Если Режим = РежимЗаписиДокумента.Проведение Тогда			
				Если Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена ИЛИ Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда				
					Status = "3";			
				ИначеЕсли Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
					Если Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда				
						Status = "3";					
					ИначеЕсли Стр.ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда Тогда				
						Status = "4";
					Иначе
						Продолжить;
					КонецЕсли;		
				КонецЕсли;
			Иначе				
				Status = "2";			
			КонецЕсли;
			
			Если СтатусКЗаписи = 303 ИЛИ СтатусКЗаписи = 304 Тогда  // Задача № 3501
               Продолжить;
			Конецесли;   		
						
			//Status = ?(Режим = РежимЗаписиДокумента.Проведение, "3", Строка(Стр.Доставка.СтатусИнтернетМагазина));
			Если СтатусКЗаписи = 301 ИЛИ СтатусКЗаписи = 302 Тогда
				ItemsPrice =  РасчитатьСтоимостьТоваровЗаказа(Стр.Доставка); // Задача № 2586
			Иначе
				ItemsPrice = Неопределено;
			КонецЕсли;
			
			who = ПараметрыСеанса.ТекущийПользователь;
			//completeDate = Евген.ДатаВSQL(ТекущаяДата(), Ложь);  // кассиры стали проводить документы после 0.00
			completeDate = Евген.ДатаВSQL(Стр.Доставка.Дата, Ложь);
			serviceDC = Формат(Стр.Доставка.УслугиСД, "ЧРД=.; ЧН=0; ЧГ=");
			serviceDCclean = Формат(Стр.Доставка.УслугиСДЧистые, "ЧРД=.; ЧН=0; ЧГ=");
			Комм = "Предварительное закрытие ПДС";
			comment = СтрЗаменить(Комм, "'", """");
			isRefusal = ?(Стр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена, 1, 0);
			ReasonRefusal = "" + Стр.ПричинаНеВыполнения;
			deliveryPrice = Формат(Стр.СуммаДоставки, "ЧРД=.; ЧН=0; ЧГ=");
			payType  = Стр.ТипОплаты.Код;
			closeFlag = ?(Режим = РежимЗаписиДокумента.Проведение, 1, 0);		
			
			// Отключено в рамках Задача № 2586
			//СтрокаЗапросаПЗ = "
			//|DECLARE @t TSetOrderStatus
			//|INSERT INTO @t ([orderID],[statusId],[who],[completeDate],serviceDC,serviceDCclean,comment, isRefusal, ReasonRefusal, deliveryPrice, payType, closeFlag) VALUES (" +
			//orderID +", " +Status+", '" +who+"', '"+completeDate+"', "+serviceDC+"," +serviceDCclean+",'" +comment+"', "+isRefusal+ ", '" +ReasonRefusal+"', "+deliveryPrice+ ", " +payType+ ", "+closeFlag+")
			//|EXEC import_setOrderStatusFrom1C @t
			//|";
			//Евген.ЗапросКИнтернетМагазину(СтрокаЗапросаПЗ, Подкл);
			
			// Задача № 2586
			mas.ОтправитьФинальныйСтатусВАдминку(orderID, Число(Status), comment,
			who,
			Стр.Доставка.Дата,
			serviceDC,
			serviceDCclean,
			IsRefusal,
			ReasonRefusal,
			DeliveryPrice,
			PayType,
			,
			,
			closeFlag,
			ТерминалДоставки.Код,
			ItemsPrice);
			// Задача № 2586

			// Задача № 2586, 1 этап переделки записи статусов
			РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(Стр.Доставка, СтатусКЗаписи, Status, Ссылка);
			// Задача № 2586, 1 этап переделки записи статусов

		КонецЕсли;
	КонецЦикла;	
	
	// сформируем таблицу данных для по статусам
	ТаблицаДанных = ПолучитьДанныеОбновлениеСтатусовВАдминке();
	
	
	Если Режим = РежимЗаписиДокумента.Проведение Тогда
		
	    СтрТекстЗапроса="";
	    Стр2 = "";
	    ТекстСоставлен = Ложь;
	    Статус = 0;
		//ТаблицаДанных = ПолучитьДанныеОбновлениеСтатусовВАдминке();
		
		// Задача № 2813
		МассивСтатусов = Неопределено;

		Для каждого Стр Из ТаблицаДанных Цикл
			
			Если Стр.Статус = 303 ИЛИ Стр.Статус = 304 Тогда // Задача № 3501
                Продолжить;
			КонецЕсли;	
			
			Если Стр.Статус <> 401 Тогда
				Статус = Стр.Статус;
				Если Стр.ПредварительноеЗакрытие Тогда
					
					//// --- Отключено в рамках Задача № 2813
					//// текст для текущих статусов
					//СтрТекстЗапроса = СтрТекстЗапроса + "(" +Формат(Сокрлп(Стр.Реализация.Номер), "ЧГ=") + ","+Стр.Статус+",'Приход ДС по отчету водителя'"+")"+",";
					//// --- Отключено в рамках Задача № 2813

					// Задача № 2813
					
					ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалДоставки.Код)); // Задача № 3027
					
					//CeHbKA #3227 21.06.2019
					Если НЕ Стр.ПричинаОтказаПереноса.Пустая() Тогда
						ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonId", СокрЛП(Стр.ПричинаОтказаПереноса.Код), ДопПараметрыСтатуса); 
						ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonRefusal", СокрЛП(Стр.ПричинаОтказаПереноса.Наименование), ДопПараметрыСтатуса); // Задача № 3027
					КонецЕсли;	
					//CeHbKA #3227 21.06.2019
					
					МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Стр.Реализация.Номер, 
					Стр.Статус, 
					"Приход ДС по отчету водителя",
					,
					,
					МассивСтатусов, 
					ДопПараметрыСтатуса);
					
					// текст для финальных статусов
					Стр2 = Стр2 + "
					|INSERT INTO @t ([orderID],[FinalStatusID],[who]) VALUES (" + Сокрлп(Стр.Реализация.Номер) + "," + Строка(Стр.Статус) + ",'" + ПараметрыСеанса.ТекущийПользователь + "')";
	                ТекстСоставлен = Истина;
						
				КонецЕсли;	
	        КонецЕсли;     
	    КонецЦикла;
	     
	    //// --- Отключено в рамках Задача № 2813
		//// текущий статус
		//Если ТекстСоставлен И ЗначениеЗаполнено(СтрТекстЗапроса) Тогда
		//	ДлинаТекста = СтрДлина(СтрТекстЗапроса);
		//	СтрТекстЗапроса = Лев(СтрТекстЗапроса,ДлинаТекста-1);
		//	ТекстЗапроса = "
		//	|DECLARE @t TOrderStatusId
		//	|INSERT INTO @t (orderID, statusId, comment) VALUES " +
		//	СтрТекстЗапроса +" EXEC import_setOrdersStatusIDFrom1C @t";
		//	Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Подкл);		
		//КонецЕсли;
		//// --- Отключено в рамках Задача № 2813

		// Задача № 2813
		СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);
		
		// финальный статус
		Если Статус <> 0 Тогда			
			Стр2 = "DECLARE @t TOrderFinalStatus   " + Стр2 + " EXEC import_setOrderFinalStatus @t";
			Евген.ЗапросКИнтернетМагазину(Стр2, Подкл);
		КонецеСли;
		
	КонецЕсли;
	
	//костыль
	ТаблицаДанных.Колонки.Добавить("БылоЗакрытие");
	
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДанных,,ТерминалДоставки);
	// Задача № 3027 //smv.СохранитьСтатус(ТаблицаДанных);
	
	// РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныеСтатусы(ТаблицаДанных); Отключено в рамках 2586, 1 этап переделки записи статусов
	// Задача № 2586 //smv.СохранитьФинальныйСтатус(ТаблицаДанных);
	
КонецПроцедуры

Функция ПроверкаЗаполненностиРезультатовДоставки()
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ПриходДСПоОтчетуВодителяДоставки.Доставка.Номер КАК НомерЗаказа
	            |ИЗ
	            |	Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	            |ГДЕ
	            |	ПриходДСПоОтчетуВодителяДоставки.РезультатДоставки = ЗНАЧЕНИЕ(справочник.новаРезультатМестнойДоставки.пустаяСсылка)
	            |	И ПриходДСПоОтчетуВодителяДоставки.Ссылка.Ссылка = &Док";
	Зап.УстановитьПараметр("Док", Ссылка);
	
	Рез = Зап.Выполнить();
	Если Не Рез.Пустой() Тогда
		Выб = Рез.Выбрать();
		Пока Выб.Следующий() Цикл
			Сообщить("Заказ " + СокрЛП(Выб.НомерЗаказа) + " - не указан результат доставки!! Перезаполните документ!", СтатусСообщения.ОченьВажное);
		КонецЦикла;	
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецеСли;	
КонецФункции	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;	
	КонецЕсли;
	
	//Асеев 25.12.2023 (Задача № 5193)>>>
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Если РегистрыСведений.КонтрольВремени.ПаузаОтФиксацииМаршрутизации(ТерминалДоставки) Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	//Асеев 25.12.2023 (Задача № 5193)<<<
	
	Если ДополнительныеСвойства.Свойство("ОбходПроверок") Тогда
		Возврат;	
	КонецЕсли;
	
	//+++ БАО 08.06.2017 №1024 
	//Если РейсЗакрыт Тогда
	Если baoВызовСервера.РейсЗакрыт(Ссылка) Тогда
	//--- БАО 08.06.2017 №1024 
	
		Отказ = Истина;
		#Если Клиент Тогда
			Сообщить("Рейс закрыт");
		#КонецЕсли	
		Возврат;
	КонецЕсли;
	
	Если Ozon_ДанныеВыгружены Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	//+++ БАО 04.08.2017 №1494 
	
    ЗапросПроверкиОтчетаПроверкиВодителя = Новый Запрос;
	ЗапросПроверкиОтчетаПроверкиВодителя.УстановитьПараметр("ОтчетВодителя", ОтчетВодителя);
	ЗапросПроверкиОтчетаПроверкиВодителя.УстановитьПараметр("Ссылка", Ссылка);

	ЗапросПроверкиОтчетаПроверкиВодителя.Текст = "ВЫБРАТЬ
	                                             |	ПриходДСПоОтчетуВодителяДубль.Ссылка КАК Ссылка
	                                             |ИЗ
	                                             |	Документ.ПриходДСПоОтчетуВодителя КАК ПриходДСПоОтчетуВодителяДубль
	                                             |ГДЕ
	                                             |	ПриходДСПоОтчетуВодителяДубль.Ссылка <> &Ссылка
	                                             |	И ПриходДСПоОтчетуВодителяДубль.ОтчетВодителя = &ОтчетВодителя";
	Результат = ЗапросПроверкиОтчетаПроверкиВодителя.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Сообщить("По данному отчету водителя уэе есть документ " + Выборка.Ссылка);
		
		Отказ = Истина;
		
	КонецЦикла;
	
	//--- БАО 04.08.2017 №1494 
		
	
	// Проверки по статусам закрытия
	Если НЕ РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
		
		//ЗапросПроверкаСтатусов = Новый Запрос("ВЫБРАТЬ
		//                                      |	ПриходДСПоОтчетуВодителяДоставки.Доставка,
		//                                      |	ПриходДСПоОтчетуВодителяДоставки.ПредварительноеЗакрытие,
		//                                      |	СтатусыЗакрытияЗаказовСрезПоследних.СтатусЗакрытия,
		//                                      |	СтатусыЗакрытияЗаказовСрезПоследних.ДокументРегистратор,
		//                                      |	СтатусыЗакрытияЗаказовСрезПоследних.Период
		//                                      |ПОМЕСТИТЬ ВТ
		//                                      |ИЗ
		//                                      |	Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
		//                                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗакрытияЗаказов.СрезПоследних(&Период, ) КАК СтатусыЗакрытияЗаказовСрезПоследних
		//                                      |		ПО ПриходДСПоОтчетуВодителяДоставки.Доставка = СтатусыЗакрытияЗаказовСрезПоследних.Заказ
		//                                      |ГДЕ
		//                                      |	ПриходДСПоОтчетуВодителяДоставки.Ссылка.Ссылка = &Ссылка
		//                                      |	И СтатусыЗакрытияЗаказовСрезПоследних.ДокументРегистратор <> &Ссылка
		//                                      |;
		//                                      |
		//                                      |////////////////////////////////////////////////////////////////////////////////
		//                                      |ВЫБРАТЬ
		//                                      |	ВТ.Доставка,
		//                                      |	ВТ.ПредварительноеЗакрытие,
		//                                      |	ВТ.СтатусЗакрытия,
		//                                      |	ВТ.ДокументРегистратор,
		//                                      |	ВТ.Период КАК Период
		//                                      |ИЗ
		//                                      |	ВТ КАК ВТ
		//                                      |ГДЕ
		//                                      |	НЕ ВТ.СтатусЗакрытия ЕСТЬ NULL 
		//                                      |
		//                                      |УПОРЯДОЧИТЬ ПО
		//                                      |	Период УБЫВ");
		
		
		ЗапросПроверкаСтатусов = Новый Запрос("ВЫБРАТЬ
		                                      |	ПриходДСПоОтчетуВодителяДоставки.Доставка,
		                                      |	ПриходДСПоОтчетуВодителяДоставки.ПредварительноеЗакрытие
		                                      |ПОМЕСТИТЬ ВТ
		                                      |ИЗ
		                                      |	Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
		                                      |ГДЕ
		                                      |	ПриходДСПоОтчетуВодителяДоставки.Ссылка.Ссылка = &Ссылка
		                                      |;
		                                      |
		                                      |////////////////////////////////////////////////////////////////////////////////
		                                      |ВЫБРАТЬ
		                                      |	ВТ.Доставка,
		                                      |	ВТ.ПредварительноеЗакрытие,
		                                      |	ВложенныйЗапрос.Период
		                                      |ПОМЕСТИТЬ ВТ_2
		                                      |ИЗ
		                                      |	ВТ КАК ВТ
		                                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                                      |			МАКСИМУМ(СтатусыЗакрытияЗаказов.Период) КАК Период,
		                                      |			СтатусыЗакрытияЗаказов.Заказ КАК Заказ
		                                      |		ИЗ
		                                      |			РегистрСведений.СтатусыЗакрытияЗаказов КАК СтатусыЗакрытияЗаказов
		                                      |		ГДЕ
		                                      |			СтатусыЗакрытияЗаказов.Заказ В
		                                      |					(ВЫБРАТЬ
		                                      |						ВТ.Доставка
		                                      |					ИЗ
		                                      |						ВТ КАК ВТ)
		                                      |			И НЕ СтатусыЗакрытияЗаказов.СтатусЗакрытия ЕСТЬ NULL 
		                                      |			И СтатусыЗакрытияЗаказов.Период < &Период
		                                      |		
		                                      |		СГРУППИРОВАТЬ ПО
		                                      |			СтатусыЗакрытияЗаказов.Заказ) КАК ВложенныйЗапрос
		                                      |		ПО ВТ.Доставка = ВложенныйЗапрос.Заказ
		                                      |;
		                                      |
		                                      |////////////////////////////////////////////////////////////////////////////////
		                                      |ВЫБРАТЬ
		                                      |	ВТ_2.Доставка,
		                                      |	ВТ_2.ПредварительноеЗакрытие,
		                                      |	СтатусыЗакрытияЗаказов.ДокументРегистратор,
		                                      |	СтатусыЗакрытияЗаказов.СтатусЗакрытия
		                                      |ИЗ
		                                      |	ВТ_2 КАК ВТ_2
		                                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗакрытияЗаказов КАК СтатусыЗакрытияЗаказов
		                                      |		ПО ВТ_2.Доставка = СтатусыЗакрытияЗаказов.Заказ
		                                      |			И ВТ_2.Период = СтатусыЗакрытияЗаказов.Период
		                                      |ГДЕ
		                                      |	СтатусыЗакрытияЗаказов.ДокументРегистратор <> &Ссылка");		
		ЗапросПроверкаСтатусов.УстановитьПараметр("Ссылка", Ссылка);
		ЗапросПроверкаСтатусов.УстановитьПараметр("Период", Ссылка.Дата);
		РезПроверкаСтатусов = ЗапросПроверкаСтатусов.Выполнить().Выбрать();	
		
		ТекстОшибки = "";	
		
		Пока РезПроверкаСтатусов.Следующий() Цикл
			Если РежимЗаписи = РежимЗаписиДокумента.Проведение И РезПроверкаСтатусов.ПредварительноеЗакрытие И РезПроверкаСтатусов.СтатусЗакрытия = Перечисления.СтатусыПредварительногоЗакрытияЗаказов.ЗаказЗакрытОкончательно Тогда			
				ТекстОшибки = ТекстОшибки +	 "Заказ " + РезПроверкаСтатусов.Доставка + " уже закрыт товароведом" + Символы.ПС;			
			ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Проведение И РезПроверкаСтатусов.ПредварительноеЗакрытие И РезПроверкаСтатусов.СтатусЗакрытия = Перечисления.СтатусыПредварительногоЗакрытияЗаказов.ЗаказЗакрытПредварительно Тогда		
				ДокРегистратор = РезПроверкаСтатусов.ДокументРегистратор;
				Если ТипЗнч(ДокРегистратор) = Тип("ДокументСсылка.ПриходДСПоОтчетуВодителя") Тогда
					
					НайСтроки = ДокРегистратор.Доставки.НайтиСтроки(Новый Структура("Доставка", РезПроверкаСтатусов.Доставка));				
					Если НайСтроки.Количество() Тогда	
						Если НайСтроки[0].ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки
							ИЛИ НайСтроки[0].ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносНаВторуюОчередь
							ИЛИ НайСтроки[0].ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
						Иначе
							ТекстОшибки = ТекстОшибки +	 "Заказ " + РезПроверкаСтатусов.Доставка + " уже предварительно закрыт" + Символы.ПС;
						КонецЕсли;
					КонецЕсли;
								
				КонецЕсли;	
							
			ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения И РезПроверкаСтатусов.ПредварительноеЗакрытие И РезПроверкаСтатусов.СтатусЗакрытия = Перечисления.СтатусыПредварительногоЗакрытияЗаказов.ЗаказЗакрытОкончательно Тогда	 
				ТекстОшибки = ТекстОшибки +	 "Заказ " + РезПроверкаСтатусов.Доставка + " уже закрыт товароведом" + Символы.ПС;			
			КонецЕсли;		
		КонецЦикла; 
		
		Если ТекстОшибки <> "" Тогда
			Сообщить(ТекстОшибки);
			Отказ = Истина;
		КонецЕсли;
		
		Если Не РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			РезультатПроверки = ПроверкаЗаполненностиРезультатовДоставки();
			Если Не РезультатПроверки Тогда
				Отказ = Истина;
			КонецЕсли;	
		КонецеСли;
	КонецЕсли;
	
	//Отказ = Ложь;//тест
	
КонецПроцедуры

Функция ПолучитьДанныеОбновлениеСтатусовВАдминке()

    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ВЫБОР
        |		КОГДА ПриходДСПоОтчетуВодителяДоставки.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена)
        |			ТОГДА 301
        |		КОГДА ПриходДСПоОтчетуВодителяДоставки.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично)
        |			ТОГДА 302
        |		КОГДА ПриходДСПоОтчетуВодителяДоставки.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
        |				И ПриходДСПоОтчетуВодителяДоставки.ПричинаНеВыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом)
        |			ТОГДА 303
        |		КОГДА ПриходДСПоОтчетуВодителяДоставки.РезультатДоставки = ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
        |				И ПриходДСПоОтчетуВодителяДоставки.ПричинаНеВыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда)
        |			ТОГДА 304
        |		ИНАЧЕ 401
        |	КОНЕЦ КАК Статус,
        |	ПриходДСПоОтчетуВодителяДоставки.Ссылка КАК ДокументРегистратор,
        |	ЕСТЬNULL(ПриходДСПоОтчетуВодителяДоставки.ПредварительноеЗакрытие, ЛОЖЬ) = ИСТИНА КАК ПредварительноеЗакрытие,
        |	ПриходДСПоОтчетуВодителяДоставки.Доставка КАК Реализация,
        |	ПриходДСПоОтчетуВодителяДоставки.Доставка.ТерминалДоставки КАК Терминал,
        |	ПриходДСПоОтчетуВодителяДоставки.ПричинаОтказаПереноса КАК ПричинаОтказаПереноса //CeHbKA #3227 24.06.2019
        |ИЗ
        |	Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
        |ГДЕ
        |	ПриходДСПоОтчетуВодителяДоставки.Ссылка = &Ссылка";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
        
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

//Асеев 07.10.2021 (Задача № 4689)>>>
Процедура ЗаполнитьПлатежиAssist()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОтчетВодителя", ОтчетВодителя);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТранзакцииAssist.Заказ КАК Заказ,
	|	ТранзакцииAssist.Сумма КАК Сумма,
	|	ТранзакцииAssist.billnumber КАК billnumber,
	|	ТранзакцииAssist.Оплачен КАК Оплачен,
	|	ТранзакцииAssist.ДатаТранзакции КАК ДатаТранзакции,
	|	ТранзакцииAssist.ТипОплаты КАК ТипОплаты,
	|	ТранзакцииAssist.merchant_id КАК merchant_id,
	|	ТранзакцииAssist.ТипОперации КАК ТипОперации
	|ИЗ
	|	Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс КАК Т_Рейс
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТранзакцииAssist КАК ТранзакцииAssist
	|			ПО Т_Рейс.Ссылка = ТранзакцииAssist.Рейс
	|		ПО (новаОтчетВодителя.Ссылка = &ОтчетВодителя)
	|			И новаОтчетВодителя.Рейс = Т_Рейс.РейсМестнойДоставки";
	
	ПлатежиAssist.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры
//Асеев 07.10.2021 (Задача № 4689)<<<

//+++ БАО 10.08.2017 №1628
//Перенес с формы
//Убрал объект
&НаСервере        
Процедура ЗаполнитьНаСервере() Экспорт
                //Серегин М.В. 23.06.2015 11:25:01 новый
	Зап = Новый Запрос;
	//Асеев 19.08.2022 (Задача № 4871)>>>
	Зап.УстановитьПараметр("УдаленноеЗакрытие", УдаленноеЗакрытие);
	//дополнительно запрос изменен для получения доп данных по владельцам товаров
	//Асеев 19.08.2022 (Задача № 4871)<<<
	Зап.Текст =
	"ВЫБРАТЬ
	|	новаОтчетВодителяЗадания.Задание КАК Задание,
	|	новаОтчетВодителяЗадания.Задание.Номер КАК Номер,
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|	ТипыОплат.Ссылка КАК ТипОплаты,
	|	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	Документ.новаОтчетВодителя.Задания КАК новаОтчетВодителяЗадания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТипыОплат КАК ТипыОплат
	|			ПО РеализацияТоваровУслуг.ТипОплаты = ТипыОплат.Код
	|		ПО (новаОтчетВодителяЗадания.Ссылка = &ОтчетВодителя)
	|			И новаОтчетВодителяЗадания.Задание.Номер = РеализацияТоваровУслуг.Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.КодМаркировки КАК КодМаркировки,
	|	РеализацияТоваровУслугТовары.Ссылка КАК Доставка,
	|	РеализацияТоваровУслугТовары.Количество КАК Количество,
	|	РеализацияТоваровУслугТовары.Количество КАК ИсходноеКоличество,
	|	РеализацияТоваровУслугТовары.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА новаОтчетВодителяЗадания.ТипОплаты <> ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)
	|					ТОГДА новаОтчетВодителяЗадания.ТипОплаты.Код
	|				ИНАЧЕ РеализацияТоваровУслуг.ТипОплаты
	|			КОНЕЦ В (1, 2)
	|			ТОГДА РеализацияТоваровУслугТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Возврат,
	|	ВЫБОР
	|		КОГДА новаОтчетВодителяЗадания.РезультатДоставки <> ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|			ТОГДА новаМестнаяДоставка.СтоимостьДоставкиДоМКАД + новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДоставки,
	|	новаОтчетВодителяЗадания.ПричинаНевыполнения КАК ПричинаНевыполнения,
	|	новаОтчетВодителяЗадания.ПричинаОтказа КАК ПричинаОтказаПереноса,
	|	РеализацияТоваровУслуг.ВладелецТовара.ОсновнойДоговорКонтрагента.Организация КАК ЮрЛицо,
	|	ВТ_Заказы.ТипОплаты КАК ТипОплатыСтарый,
	|	РеализацияТоваровУслуг.ВладелецТовара КАК ИнтернетМагазин,
	|	РеализацияТоваровУслуг.ПредоплатаПоКредиту КАК ПредоплатаБанка,
	|	новаОтчетВодителяЗадания.РезультатДоставки КАК РезультатДоставки,
	|	ВЫБОР
	|		КОГДА НЕ ВЫБОР
	|						КОГДА новаОтчетВодителяЗадания.ТипОплаты <> ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)
	|							ТОГДА новаОтчетВодителяЗадания.ТипОплаты.Код
	|						ИНАЧЕ РеализацияТоваровУслуг.ТипОплаты
	|					КОНЕЦ В (1, 2)
	|				И новаОтчетВодителяЗадания.РезультатДоставки <> ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|			ТОГДА РеализацияТоваровУслугТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезнал,
	|	ЛОЖЬ КАК ЭтоПодарочнаяПозиция,
	|	ВЫБОР
	|		КОГДА новаОтчетВодителяЗадания.РезультатДоставки <> ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|				И новаОтчетВодителяЗадания.ТипОплаты.Код <> 7
	|			ТОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КОплатеКлиентом,
	|	РеализацияТоваровУслуг.ВладелецТовара = КонтрагентЯндекс.Значение КАК УчитыватьКОплатеКлиентомСтарая,
	|	новаОтчетВодителяЗадания.ДатаПереноса КАК ДатаПереноса,
	|	РеализацияТоваровУслуг.ЭтоДоговор КАК ЭтоДоговор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате КАК УчитыватьКОплатеКлиентом,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, ЛОЖЬ) КАК ПредварительноеЗакрытие,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ЧастичныйВыкупЗапрещен, ЛОЖЬ) КАК ЧастичныйВыкупЗапрещен,
	|	ВЫБОР
	|		КОГДА новаОтчетВодителяЗадания.ТипОплаты <> ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)
	|			ТОГДА новаОтчетВодителяЗадания.ТипОплаты
	|		ИНАЧЕ ВТ_Заказы.ТипОплаты
	|	КОНЕЦ КАК ТипОплаты,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаРТУ,
	|	0 КАК СуммаВозврата
	|ПОМЕСТИТЬ ВТ_ДоСуммДоставки
	|ИЗ
	|	Документ.новаОтчетВодителя.Задания КАК новаОтчетВодителяЗадания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|				ПО РеализацияТоваровУслуг.Ссылка = РеализацияТоваровУслугТовары.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|				ПО РеализацияТоваровУслуг.Ссылка = ДополнительныеПараметрыЗаказа.Заказ
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|				ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|			ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Константа.КонтрагентЯндекс КАК КонтрагентЯндекс
	|			ПО (ИСТИНА)
	|		ПО (новаОтчетВодителяЗадания.Ссылка = &ОтчетВодителя)
	|			И новаОтчетВодителяЗадания.Задание = ВТ_Заказы.Задание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО новаОтчетВодителяЗадания.Задание = новаМестнаяДоставка.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	|	ВозвратТоваровОтПокупателяТовары.КодМаркировки,
	|	РеализацияТоваровУслуг.Ссылка,
	|	-ВозвратТоваровОтПокупателяТовары.Количество,
	|	-ВозвратТоваровОтПокупателяТовары.Количество,
	|	ВозвратТоваровОтПокупателяТовары.Цена,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА новаОтчетВодителяЗадания.ТипОплаты <> ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)
	|					ТОГДА новаОтчетВодителяЗадания.ТипОплаты.Код
	|				ИНАЧЕ РеализацияТоваровУслуг.ТипОплаты
	|			КОНЕЦ В (1, 2)
	|			ТОГДА -ВозвратТоваровОтПокупателяТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВозвратТоваровОтПокупателяТовары.Ссылка,
	|	ВЫБОР
	|		КОГДА новаОтчетВодителяЗадания.РезультатДоставки <> ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|			ТОГДА новаМестнаяДоставка.СтоимостьДоставкиДоМКАД + новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	новаОтчетВодителяЗадания.ПричинаНевыполнения,
	|	новаОтчетВодителяЗадания.ПричинаОтказа,
	|	РеализацияТоваровУслуг.ВладелецТовара.ОсновнойДоговорКонтрагента.Организация,
	|	ВТ_Заказы.ТипОплаты,
	|	РеализацияТоваровУслуг.ВладелецТовара,
	|	РеализацияТоваровУслуг.ПредоплатаПоКредиту,
	|	новаОтчетВодителяЗадания.РезультатДоставки,
	|	ВЫБОР
	|		КОГДА НЕ ВЫБОР
	|						КОГДА новаОтчетВодителяЗадания.ТипОплаты <> ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)
	|							ТОГДА новаОтчетВодителяЗадания.ТипОплаты.Код
	|						ИНАЧЕ РеализацияТоваровУслуг.ТипОплаты
	|					КОНЕЦ В (1, 2)
	|				И новаОтчетВодителяЗадания.РезультатДоставки <> ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|			ТОГДА -ВозвратТоваровОтПокупателяТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА новаОтчетВодителяЗадания.РезультатДоставки <> ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|				И новаОтчетВодителяЗадания.ТипОплаты.Код <> 7
	|			ТОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	РеализацияТоваровУслуг.ВладелецТовара = КонтрагентЯндекс.Значение,
	|	новаОтчетВодителяЗадания.ДатаПереноса,
	|	РеализацияТоваровУслуг.ЭтоДоговор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, ЛОЖЬ),
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ЧастичныйВыкупЗапрещен, ЛОЖЬ),
	|	ВЫБОР
	|		КОГДА новаОтчетВодителяЗадания.ТипОплаты <> ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)
	|			ТОГДА новаОтчетВодителяЗадания.ТипОплаты
	|		ИНАЧЕ ВТ_Заказы.ТипОплаты
	|	КОНЕЦ,
	|	РеализацияТоваровУслуг.СуммаДокумента,
	|	ВозвратТоваровОтПокупателяТовары.Сумма
	|ИЗ
	|	Документ.новаОтчетВодителя.Задания КАК новаОтчетВодителяЗадания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|				ПО РеализацияТоваровУслуг.Ссылка = ДополнительныеПараметрыЗаказа.Заказ
	|				ЛЕВОЕ СОЕДИНЕНИЕ Константа.КонтрагентЯндекс КАК КонтрагентЯндекс
	|				ПО (ИСТИНА)
	|			ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|				ПО ВозвратТоваровОтПокупателя.Ссылка = ВозвратТоваровОтПокупателяТовары.Ссылка
	|			ПО ВТ_Заказы.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ПО (новаОтчетВодителяЗадания.Ссылка = &ОтчетВодителя)
	|			И новаОтчетВодителяЗадания.Задание = ВТ_Заказы.Задание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО новаОтчетВодителяЗадания.Задание = новаМестнаяДоставка.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугПП.Номенклатура,
	|	РеализацияТоваровУслугПП.КодМаркировки,
	|	РеализацияТоваровУслугПП.Ссылка,
	|	РеализацияТоваровУслугПП.Количество,
	|	РеализацияТоваровУслугПП.Количество,
	|	РеализацияТоваровУслугПП.Цена,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА новаОтчетВодителяЗадания.ТипОплаты <> ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)
	|					ТОГДА новаОтчетВодителяЗадания.ТипОплаты.Код
	|				ИНАЧЕ РеализацияТоваровУслуг.ТипОплаты
	|			КОНЕЦ В (1, 2)
	|			ТОГДА РеализацияТоваровУслугПП.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВЫБОР
	|		КОГДА новаОтчетВодителяЗадания.РезультатДоставки <> ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|			ТОГДА новаМестнаяДоставка.СтоимостьДоставкиДоМКАД + новаМестнаяДоставка.СтоимостьДоставкиЗаМКАД
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	новаОтчетВодителяЗадания.ПричинаНевыполнения,
	|	новаОтчетВодителяЗадания.ПричинаОтказа,
	|	РеализацияТоваровУслуг.ВладелецТовара.ОсновнойДоговорКонтрагента.Организация,
	|	ВТ_Заказы.ТипОплаты,
	|	РеализацияТоваровУслуг.ВладелецТовара,
	|	РеализацияТоваровУслуг.ПредоплатаПоКредиту,
	|	новаОтчетВодителяЗадания.РезультатДоставки,
	|	ВЫБОР
	|		КОГДА НЕ ВЫБОР
	|						КОГДА новаОтчетВодителяЗадания.ТипОплаты <> ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)
	|							ТОГДА новаОтчетВодителяЗадания.ТипОплаты.Код
	|						ИНАЧЕ РеализацияТоваровУслуг.ТипОплаты
	|					КОНЕЦ В (1, 2)
	|				И новаОтчетВодителяЗадания.РезультатДоставки <> ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|			ТОГДА РеализацияТоваровУслугПП.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ИСТИНА,
	|	ВЫБОР
	|		КОГДА новаОтчетВодителяЗадания.РезультатДоставки <> ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.НеВыполнена)
	|				И новаОтчетВодителяЗадания.ТипОплаты.Код <> 7
	|			ТОГДА ЕСТЬNULL(ДополнительныеПараметрыЗаказа.КОплатеКлиентом, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	РеализацияТоваровУслуг.ВладелецТовара = КонтрагентЯндекс.Значение,
	|	новаОтчетВодителяЗадания.ДатаПереноса,
	|	РеализацияТоваровУслуг.ЭтоДоговор,
	|	РеализацияТоваровУслуг.УчитыватьИтогоКОплате,
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ПредварительноеЗакрытие, ЛОЖЬ),
	|	ЕСТЬNULL(ДополнительныеПараметрыЗаказа.ЧастичныйВыкупЗапрещен, ЛОЖЬ),
	|	ВЫБОР
	|		КОГДА новаОтчетВодителяЗадания.ТипОплаты <> ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)
	|			ТОГДА новаОтчетВодителяЗадания.ТипОплаты
	|		ИНАЧЕ ВТ_Заказы.ТипОплаты
	|	КОНЕЦ,
	|	РеализацияТоваровУслуг.СуммаДокумента,
	|	0
	|ИЗ
	|	Документ.новаОтчетВодителя.Задания КАК новаОтчетВодителяЗадания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПП
	|				ПО РеализацияТоваровУслуг.Ссылка = РеализацияТоваровУслугПП.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|				ПО РеализацияТоваровУслуг.Ссылка = ДополнительныеПараметрыЗаказа.Заказ
	|				ЛЕВОЕ СОЕДИНЕНИЕ Константа.КонтрагентЯндекс КАК КонтрагентЯндекс
	|				ПО (ИСТИНА)
	|			ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|			ПО ВТ_Заказы.Номер = ВозвратТоваровОтПокупателя.Номер
	|		ПО (новаОтчетВодителяЗадания.Ссылка = &ОтчетВодителя)
	|			И новаОтчетВодителяЗадания.Задание = ВТ_Заказы.Задание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО новаОтчетВодителяЗадания.Задание = новаМестнаяДоставка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеПараметрыЧеков.СуммаЧека КАК СуммаЧека,
	|	ДополнительныеПараметрыЧеков.ЧекККМ КАК ЧекККМ,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	|	ДополнительныеПараметрыЧеков.ЧекККМ.ТипКассовогоЧека КАК ТипКассовогоЧека,
	|	ДанныеЗаказаВодителя.Дата КАК Дата
	|ПОМЕСТИТЬ ВТ_Общие
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЧеков КАК ДополнительныеПараметрыЧеков
	|		ПО ДанныеЗаказаВодителя.Реализация = ДополнительныеПараметрыЧеков.ЧекККМ.Реализация
	|			И ДанныеЗаказаВодителя.УзелОбмена = ДополнительныеПараметрыЧеков.МобильноеПриложение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоСуммДоставки КАК ВТ_ДоСуммДоставки
	|		ПО ДанныеЗаказаВодителя.Реализация = ВТ_ДоСуммДоставки.Доставка
	|ГДЕ
	|	ДополнительныеПараметрыЧеков.НомерЧекаВКассовомСервере <> """"
	|	И ДанныеЗаказаВодителя.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Общие.Реализация КАК Реализация,
	|	МАКСИМУМ(ВТ_Общие.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ_Последние
	|ИЗ
	|	ВТ_Общие КАК ВТ_Общие
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Общие.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Общие.Реализация КАК Заказ,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Общие.ТипКассовогоЧека = ЗНАЧЕНИЕ(Перечисление.ТипыКассовыхЧеков.ЧекВозвратаПрихода)
	|				ТОГДА ВТ_Общие.СуммаЧека
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВозвратныхЧековЭкипажа,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Общие.ТипКассовогоЧека В (ЗНАЧЕНИЕ(Перечисление.ТипыКассовыхЧеков.ЧекПрихода), ЗНАЧЕНИЕ(Перечисление.ТипыКассовыхЧеков.ПустаяСсылка))
	|				ТОГДА ВТ_Общие.СуммаЧека
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаЧековЭкипажа
	|ПОМЕСТИТЬ ВТ_Суммы
	|ИЗ
	|	ВТ_Общие КАК ВТ_Общие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Последние КАК ВТ_Последние
	|		ПО ВТ_Общие.Реализация = ВТ_Последние.Реализация
	|			И ВТ_Общие.Дата = ВТ_Последние.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Общие.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеЗаказаВодителя.Ссылка КАК Док,
	|	ДанныеЗаказаВодителя.ТипЗаказа КАК ТипЗаказа,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	|	ДанныеЗаказаВодителя.Забор КАК Забор,
	|	ДанныеЗаказаВодителя.ТипОплатыЧек КАК ТипОплаты,
	|	ДанныеЗаказаВодителя.Дата КАК Дата
	|ПОМЕСТИТЬ ВТ_ДанныеМП
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО (новаМестнаяДоставка.Ссылка В (&Мас))
	|			И ДанныеЗаказаВодителя.Реализация.Номер = новаМестнаяДоставка.Номер
	|			И (ДанныеЗаказаВодителя.Дата МЕЖДУ &Дата И &ДатаОкончания)
	|			И (ДанныеЗаказаВодителя.Проведен)
	|			И (ДанныеЗаказаВодителя.Водитель = &ВыбВодитель
	|				ИЛИ ДанныеЗаказаВодителя.Транспорт = &ВыбТранспорт)
	|			И (ДанныеЗаказаВодителя.ТипЗаказа <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Забор))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеМП.Реализация КАК Реализация,
	|	ВТ_ДанныеМП.Забор КАК Забор,
	|	МАКСИМУМ(ВТ_ДанныеМП.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ_ДанныеМПСрез
	|ИЗ
	|	ВТ_ДанныеМП КАК ВТ_ДанныеМП
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеМП.Реализация,
	|	ВТ_ДанныеМП.Забор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеМП.Реализация КАК Реализация,
	|	ВТ_ДанныеМП.ТипОплаты КАК ТипОплаты
	|ПОМЕСТИТЬ ВТ_ДанныеМППоследние
	|ИЗ
	|	ВТ_ДанныеМП КАК ВТ_ДанныеМП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеМПСрез КАК ВТ_ДанныеМПСрез
	|		ПО ВТ_ДанныеМП.Реализация = ВТ_ДанныеМПСрез.Реализация
	|			И ВТ_ДанныеМП.Забор = ВТ_ДанныеМПСрез.Забор
	|			И ВТ_ДанныеМП.Дата = ВТ_ДанныеМПСрез.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТранзакцииAssist.Рейс КАК Рейс,
	|	ТранзакцииAssist.Заказ КАК Заказ,
	|	МАКСИМУМ(ТранзакцииAssist.ДатаТранзакции) КАК ДатаТранзакции
	|ПОМЕСТИТЬ ВТ_ПоследниеТранзакцииAssist
	|ИЗ
	|	Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс КАК Т_Рейс
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТранзакцииAssist КАК ТранзакцииAssist
	|			ПО Т_Рейс.Ссылка = ТранзакцииAssist.Рейс
	|		ПО (новаОтчетВодителя.Ссылка = &ОтчетВодителя)
	|			И новаОтчетВодителя.Рейс = Т_Рейс.РейсМестнойДоставки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТранзакцииAssist.Заказ,
	|	ТранзакцииAssist.Рейс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТранзакцииAssist.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_ПлатежПоТерминалуПодтвержден
	|ИЗ
	|	ВТ_ПоследниеТранзакцииAssist КАК ВТ_ПоследниеТранзакцииAssist
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТранзакцииAssist КАК ТранзакцииAssist
	|		ПО ВТ_ПоследниеТранзакцииAssist.Рейс = ТранзакцииAssist.Рейс
	|			И ВТ_ПоследниеТранзакцииAssist.Заказ = ТранзакцииAssist.Заказ
	|			И ВТ_ПоследниеТранзакцииAssist.ДатаТранзакции = ТранзакцииAssist.ДатаТранзакции
	|			И (ТранзакцииAssist.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийAssist.Оплата)
	|					И ТранзакцииAssist.Оплачен
	|				ИЛИ ТранзакцииAssist.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийAssist.Отмена)
	|					И НЕ ТранзакцииAssist.Оплачен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДоСуммДоставки.Номенклатура КАК Номенклатура,
	|	ВТ_ДоСуммДоставки.КодМаркировки КАК КодМаркировки,
	|	ВТ_ДоСуммДоставки.Доставка КАК Доставка,
	|	ВТ_ДоСуммДоставки.Количество КАК Количество,
	|	ВТ_ДоСуммДоставки.ИсходноеКоличество КАК ИсходноеКоличество,
	|	ВТ_ДоСуммДоставки.Цена КАК Цена,
	|	ВТ_ДоСуммДоставки.Сумма КАК Сумма,
	|	ВТ_ДоСуммДоставки.Возврат КАК Возврат,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(новаОтчетВодителяДанныеМобильногоПриложения_Актуальные.Документ.РасчетнаяСтоимостьДоставки, ЛОЖЬ)
	|			ТОГДА новаОтчетВодителяДанныеМобильногоПриложения_Актуальные.Документ.СтоимостьДоставки
	|		ИНАЧЕ ВТ_ДоСуммДоставки.СуммаДоставки
	|	КОНЕЦ КАК СуммаДоставки,
	|	ВТ_ДоСуммДоставки.ПричинаНевыполнения КАК ПричинаНевыполнения,
	|	ВТ_ДоСуммДоставки.ПричинаОтказаПереноса КАК ПричинаОтказаПереноса,
	|	ВТ_ДоСуммДоставки.ЮрЛицо КАК ЮрЛицо,
	|	ВТ_ДоСуммДоставки.ТипОплатыСтарый КАК ТипОплатыСтарый,
	|	ВТ_ДоСуммДоставки.ИнтернетМагазин КАК ИнтернетМагазин,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Спецсчет КАК Спецсчет,
	|	ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ЧекиНеПечатаются КАК ЧекиНеПечатаются,
	|	ВТ_ДоСуммДоставки.ПредоплатаБанка КАК ПредоплатаБанка,
	|	ВТ_ДоСуммДоставки.РезультатДоставки КАК РезультатДоставки,
	|	ВТ_ДоСуммДоставки.СуммаБезнал КАК СуммаБезнал,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ДанныеМППоследние.ТипОплаты, ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)
	|			ТОГДА ВТ_ДанныеМППоследние.ТипОплаты
	|		ИНАЧЕ ВТ_ДоСуммДоставки.ТипОплаты
	|	КОНЕЦ КАК ТипОплаты,
	|	ВТ_ДоСуммДоставки.ЭтоПодарочнаяПозиция КАК ЭтоПодарочнаяПозиция,
	|	ВТ_ДоСуммДоставки.КОплатеКлиентом КАК КОплатеКлиентом,
	|	ВТ_ДоСуммДоставки.УчитыватьКОплатеКлиентомСтарая КАК УчитыватьКОплатеКлиентомСтарая,
	|	ВТ_ДоСуммДоставки.ДатаПереноса КАК ДатаПереноса,
	|	ВТ_ДоСуммДоставки.ЭтоДоговор КАК ЭтоДоговор,
	|	ВТ_ДоСуммДоставки.УчитыватьКОплатеКлиентом КАК УчитыватьКОплатеКлиентом,
	|	ВТ_ДоСуммДоставки.ПредварительноеЗакрытие КАК ПредварительноеЗакрытие,
	|	ВТ_ДоСуммДоставки.ЧастичныйВыкупЗапрещен КАК ЧастичныйВыкупЗапрещен,
	|	ВТ_Суммы.СуммаВозвратныхЧековЭкипажа КАК СуммаВозвратныхЧековЭкипажа,
	|	ВТ_Суммы.СуммаЧековЭкипажа КАК СуммаЧековЭкипажа,
	|	ВТ_ДанныеМППоследние.ТипОплаты КАК ТипОплатыМП,
	|	ЕСТЬNULL(новаОтчетВодителяДанныеМобильногоПриложения_Актуальные.Документ.РасчетнаяСтоимостьДоставки, ЛОЖЬ) КАК РасчетнаяСтоимостьДоставки,
	|	(ВТ_ДоСуммДоставки.РезультатДоставки В (ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена), ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично))
	|		ИЛИ ВТ_ДоСуммДоставки.ПричинаНевыполнения В (ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносДоставки), ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносСЗаездом))
	|			И НЕ ПараметрыКонтрагентовСрезПоследних.СопроводительныеДокументыНаходятсяВКоробке)
	|		И ДополнительныеПараметрыЗаказа.ПодписаниеИВозвратСопрДокументов
	|		И НЕ &УдаленноеЗакрытие КАК ТребуетсяПодписаниеИВозвратСопрДокументов,
	|	(ВТ_ДоСуммДоставки.РезультатДоставки В (ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена), ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично))
	|		ИЛИ ВТ_ДоСуммДоставки.ПричинаНевыполнения В (ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносДоставки), ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносСЗаездом))
	|			И НЕ ПараметрыКонтрагентовСрезПоследних.СопроводительныеДокументыНаходятсяВКоробке)
	|		И ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_ДанныеМППоследние.ТипОплаты, ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ТипыОплат.ПустаяСсылка)
	|				ТОГДА ВТ_ДанныеМППоследние.ТипОплаты
	|			ИНАЧЕ ВТ_ДоСуммДоставки.ТипОплаты
	|		КОНЕЦ = ЗНАЧЕНИЕ(Справочник.ТипыОплат.БезналичныйРасчет)
	|		И НЕ ПараметрыКонтрагентовСрезПоследних.ОтключитьПроверкуБНЗаказов
	|		И НЕ &УдаленноеЗакрытие КАК ТребуетсяПодписаниеИВозвратБНДокументов,
	|	НЕ ВТ_ПлатежПоТерминалуПодтвержден.Заказ ЕСТЬ NULL КАК ПлатежПоТерминалуПодтвержден,
	|	ВТ_ДоСуммДоставки.СуммаРТУ КАК СуммаРТУ,
	|	ВТ_ДоСуммДоставки.СуммаВозврата КАК СуммаВозврата,
	|	ПараметрыКонтрагентовСрезПоследних.СопроводительныеДокументыНаходятсяВКоробке КАК СопрДокументыВКоробке
	|ИЗ
	|	ВТ_ДоСуммДоставки КАК ВТ_ДоСуммДоставки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
	|		ПО ВТ_ДоСуммДоставки.Доставка = ВТ_Суммы.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеМППоследние КАК ВТ_ДанныеМППоследние
	|		ПО ВТ_ДоСуммДоставки.Доставка = ВТ_ДанныеМППоследние.Реализация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя.ДанныеМобильногоПриложения КАК новаОтчетВодителяДанныеМобильногоПриложения_Актуальные
	|		ПО (новаОтчетВодителяДанныеМобильногоПриложения_Актуальные.Ссылка = &ОтчетВодителя)
	|			И ВТ_ДоСуммДоставки.Доставка = новаОтчетВодителяДанныеМобильногоПриложения_Актуальные.Реализация
	|			И (новаОтчетВодителяДанныеМобильногоПриложения_Актуальные.АктуальныеДанные)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО ВТ_ДоСуммДоставки.Доставка = ДополнительныеПараметрыЗаказа.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПлатежПоТерминалуПодтвержден КАК ВТ_ПлатежПоТерминалуПодтвержден
	|		ПО ВТ_ДоСуммДоставки.Доставка = ВТ_ПлатежПоТерминалуПодтвержден.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЮридическоеЛицоПоДоставкеКонтрагента.СрезПоследних(
	|				&ДатаЗапроса,
	|				(Контрагент, ТипОплаты, ТипДоставки) В
	|					(ВЫБРАТЬ
	|						ВТ_Заказы.ВладелецТовара КАК ВладелецТовара,
	|						ВТ_Заказы.ТипОплаты КАК ТипОплаты,
	|						ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка) КАК ТипДоставки
	|					ИЗ
	|						ВТ_Заказы КАК ВТ_Заказы)) КАК ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних
	|		ПО ВТ_ДоСуммДоставки.ИнтернетМагазин = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.Контрагент
	|			И ВТ_ДоСуммДоставки.ТипОплатыСтарый = ЮридическоеЛицоПоДоставкеКонтрагентаСрезПоследних.ТипОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(
	|				&ДатаЗапроса,
	|				Контрагент В
	|					(ВЫБРАТЬ
	|						ВТ_Заказы.ВладелецТовара КАК ВладелецТовара
	|					ИЗ
	|						ВТ_Заказы КАК ВТ_Заказы)) КАК ПараметрыКонтрагентовСрезПоследних
	|		ПО ВТ_ДоСуммДоставки.ИнтернетМагазин = ПараметрыКонтрагентовСрезПоследних.Контрагент";
	Зап.УстановитьПараметр("ОтчетВодителя", ОтчетВодителя);
	Зап.УстановитьПараметр("ДатаЗапроса", КонецДня(ОтчетВодителя.Дата));
	
	//+++ БАО 21.08.2017 №1324
	Зап.УстановитьПараметр("Дата", ОтчетВодителя.Рейс.ДатаНачала - 3600); // экипажи начали ставить статусы заранее			
	Зап.УстановитьПараметр("ДатаОкончания", ОтчетВодителя.Рейс.ДатаНачала + 86400);			
	Зап.УстановитьПараметр("Мас", ОтчетВодителя.Задания.ВыгрузитьКолонку("Задание"));			
	Зап.УстановитьПараметр("ВыбТранспорт", ОтчетВодителя.Транспорт);			
	Зап.УстановитьПараметр("ВыбВодитель", ОтчетВодителя.Водитель);
	//--- БАО 21.08.2017 №1324
	
	//+++ БАО 12.07.2017 №1320 
	
	ДатаРейса = ОтчетВодителя.Рейс.ДатаНачала;
	Зап.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаРейса));
	Зап.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаРейса));

	//--- БАО 12.07.2017 №1320 
	
	Рез = Зап.Выполнить().Выгрузить();
	
	Товары.Загрузить(Рез);
	
	Таб = Рез.Скопировать();
	//+++ БАО 11.07.2017 №1320 
	//Асеев 02.11.2020 (Задача № 4329)>>>
	//РасчетнаяСтоимостьДоставки
	//Таб.Свернуть("Доставка, Возврат, СуммаДоставки, ПричинаНевыполнения, ПричинаОтказаПереноса, ТипОплаты, ИнтернетМагазин, ЮрЛицо, Спецсчет, ЧекиНеПечатаются, ПредоплатаБанка,РезультатДоставки,УчитыватьКОплатеКлиентом,ЧастичныйВыкупЗапрещен,КОплатеКлиентом,ДатаПереноса,ЭтоДоговор,ПредварительноеЗакрытие", "Сумма,СуммаБезнал");
	//Асеев 14.05.2021 (Задача № 4559)>>>
	//Таб.Свернуть("Доставка, Возврат, СуммаДоставки, ПричинаНевыполнения, ПричинаОтказаПереноса, ТипОплаты, ИнтернетМагазин, ЮрЛицо, Спецсчет, ЧекиНеПечатаются, ПредоплатаБанка,РезультатДоставки,УчитыватьКОплатеКлиентом,ЧастичныйВыкупЗапрещен,КОплатеКлиентом,ДатаПереноса,ЭтоДоговор,ПредварительноеЗакрытие,РасчетнаяСтоимостьДоставки", "Сумма,СуммаБезнал");
	//Асеев 07.10.2021 (Задача № 4689)>>>
	//Таб.Свернуть("Доставка, Возврат, СуммаДоставки, ПричинаНевыполнения, ПричинаОтказаПереноса, ТипОплаты, ИнтернетМагазин, ЮрЛицо, Спецсчет, ЧекиНеПечатаются, ПредоплатаБанка,РезультатДоставки,УчитыватьКОплатеКлиентом,ЧастичныйВыкупЗапрещен,КОплатеКлиентом,ДатаПереноса,ЭтоДоговор,ПредварительноеЗакрытие,РасчетнаяСтоимостьДоставки,ТребуетсяПодписаниеИВозвратСопрДокументов", "Сумма,СуммаБезнал");
	//Асеев 28.06.2022 (Задача № 4831)>>>
	//Таб.Свернуть("Доставка, Возврат, СуммаДоставки, ПричинаНевыполнения, ПричинаОтказаПереноса, ТипОплаты, ИнтернетМагазин, ЮрЛицо, Спецсчет, ЧекиНеПечатаются, ПредоплатаБанка,РезультатДоставки,УчитыватьКОплатеКлиентом,ЧастичныйВыкупЗапрещен,КОплатеКлиентом,ДатаПереноса,ЭтоДоговор,ПредварительноеЗакрытие,РасчетнаяСтоимостьДоставки,ТребуетсяПодписаниеИВозвратСопрДокументов,ПлатежПоТерминалуПодтвержден", "Сумма,СуммаБезнал");
	//Асеев 19.08.2022 (Задача № 4871)>>>
	//Таб.Свернуть("Доставка, Возврат, СуммаДоставки, ПричинаНевыполнения, ПричинаОтказаПереноса, ТипОплаты, ИнтернетМагазин, ЮрЛицо, Спецсчет, ЧекиНеПечатаются, ПредоплатаБанка,РезультатДоставки,УчитыватьКОплатеКлиентом,ЧастичныйВыкупЗапрещен,КОплатеКлиентом,ДатаПереноса,ЭтоДоговор,ПредварительноеЗакрытие,РасчетнаяСтоимостьДоставки,ТребуетсяПодписаниеИВозвратСопрДокументов,ПлатежПоТерминалуПодтвержден,СуммаРТУ", "Сумма,СуммаБезнал,СуммаВозврата");
	Таб.Свернуть("Доставка, Возврат, СуммаДоставки, ПричинаНевыполнения, ПричинаОтказаПереноса, ТипОплаты, ИнтернетМагазин, ЮрЛицо, Спецсчет, ЧекиНеПечатаются, ПредоплатаБанка,РезультатДоставки,УчитыватьКОплатеКлиентом,ЧастичныйВыкупЗапрещен,КОплатеКлиентом,ДатаПереноса,ЭтоДоговор,ПредварительноеЗакрытие,РасчетнаяСтоимостьДоставки,ТребуетсяПодписаниеИВозвратСопрДокументов,ТребуетсяПодписаниеИВозвратБНДокументов,СопрДокументыВКоробке,ПлатежПоТерминалуПодтвержден,СуммаРТУ", "Сумма,СуммаБезнал,СуммаВозврата");
	//Асеев 19.08.2022 (Задача № 4871)<<<
	//Асеев 28.06.2022 (Задача № 4831)<<<
	//Асеев 07.10.2021 (Задача № 4689)<<<
	//Асеев 14.05.2021 (Задача № 4559)<<<
	//Асеев 02.11.2020 (Задача № 4329)<<<
	//Таб.Свернуть("Доставка, Возврат, СуммаДоставки, ПричинаНевыполнения, ПричинаОтказаПереноса, ТипОплаты, ИнтернетМагазин, ЮрЛицо, Спецсчет, ЧекиНеПечатаются, ПредоплатаБанка,РезультатДоставки,УчитыватьКОплатеКлиентом,ЧастичныйВыкупЗапрещен,КОплатеКлиентом,ДатаПереноса,ЭтоДоговор,ПредварительноеЗакрытие", "Сумма,СуммаБезнал, СуммаВозвратныхЧековЭкипажа, СуммаЧековЭкипажа");
	
	ТабСумм = Рез.Скопировать();
	ТабСумм.Свернуть("Доставка, СуммаВозвратныхЧековЭкипажа, СуммаЧековЭкипажа");
	
	//--- БАО 11.07.2017 №1320 
	
	//костыль для простановки результатов доставки, если первоначально не попали данные МП
	ЗапСтатусов = Новый Запрос;
	ЗапСтатусов.Текст = 
	"ВЫБРАТЬ
	|	новаОтчетВодителяЗадания.РезультатДоставки КАК РезультатДоставки,
	|	новаОтчетВодителяЗадания.ПричинаНевыполнения КАК ПричинаНевыполнения,
	|	новаОтчетВодителяЗадания.ПричинаОтказа КАК ПричинаОтказаПереноса,
	|	новаОтчетВодителяЗадания.ДатаПереноса КАК ДатаПереноса,
	|	ДополнительныеПараметрыЗаказа.Заказ КАК Доставка
	|ИЗ
	|	Документ.новаОтчетВодителя.Задания КАК новаОтчетВодителяЗадания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО (новаОтчетВодителяЗадания.Ссылка = &Док)
	|			И новаОтчетВодителяЗадания.Задание = ДополнительныеПараметрыЗаказа.Доставка";
	ЗапСтатусов.УстановитьПараметр("Док", ОтчетВодителя);
	
	ТабСтатусов = ЗапСтатусов.Выполнить().Выгрузить();
	
	//Асеев 28.06.2022 (Задача № 4831)>>>
	//Доставки.Загрузить(Таб);
	Доставки.Очистить();
	Для Каждого ТекТаб Из Таб Цикл
		Тек = Доставки.Добавить();
		ЗаполнитьЗначенияСвойств(Тек, ТекТаб);
	//Для Каждого Тек Из Доставки Цикл
		
		//CeHbKA
		//Тек.ЮрЛицо = Тек.Доставка.ВладелецТовара.ОсновнойДоговорКонтрагента.Организация;
		//Асеев 28.06.2022 (Задача № 4831)<<<

		//+++ БАО 18.07.2017 №1334 
		
		НайденныеСтроки = ТабСумм.Найти(Тек.Доставка, "Доставка");
		
		Если НайденныеСтроки <> Неопределено Тогда
			
			Тек.СуммаВозвратныхЧековЭкипажа = НайденныеСтроки.СуммаВозвратныхЧековЭкипажа;
			Тек.СуммаЧековЭкипажа = НайденныеСтроки.СуммаЧековЭкипажа;
			
		КонецЕсли;
		
		
		//--- БАО 18.07.2017 №1334  
		
        Если Тек.ТипОплаты = Справочники.ТипыОплат.Наличные Тогда
            //+++++Серегин М.В. 09.10.2015 14:17:53 старый код
            
            Если Тек.УчитыватьКОплатеКлиентом Тогда //+++++Серегин М.В. 01.03.2016 18:19:25 
                Тек.Итого = Тек.КОплатеКлиентом;    
            Иначе //-----Серегин М.В. 01.03.2016 18:19:33 
                Тек.Итого = Тек.Сумма + Тек.СуммаДоставки;
            КонецЕсли;
            
        ИначеЕсли Тек.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда
            
            Если Тек.УчитыватьКОплатеКлиентом Тогда //+++++Серегин М.В. 01.03.2016 18:19:25 
                Тек.Итого = Тек.КОплатеКлиентом;    
            Иначе //-----Серегин М.В. 01.03.2016 18:19:33 
                Тек.Итого = Тек.Сумма + Тек.СуммаДоставки - Тек.ПредоплатаБанка;
            КонецЕсли;
            
        Иначе
            Тек.СуммаБезнал = Тек.СуммаБезнал+Тек.СуммаДоставки;
        КонецеСли;
        ////+++++Серегин М.В. 09.10.2015 14:18:20 новый код
        //Тек.Итого = Тек.Сумма;
        //ИначеЕсли Тек.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда
        //	Тек.Итого = Тек.Сумма - Тек.ПредоплатаБанка;
        //Иначе
        //    Тек.СуммаБезнал = Тек.СуммаБезнал;
        //КонецеСли;
        ////-----Серегин М.В. 09.10.2015 14:18:26 
        
		Если Не ЗначениеЗаполнено(Тек.РезультатДоставки) Тогда
			НайСтрокаСтатуса = ТабСтатусов.Найти(Тек.Доставка);
			Если НайСтрокаСтатуса <> Неопределено Тогда
				Тек.РезультатДоставки = НайСтрокаСтатуса.РезультатДоставки;
				Тек.ПричинаНеВыполнения = НайСтрокаСтатуса.ПричинаНеВыполнения;
				Тек.ПричинаОтказаПереноса = НайСтрокаСтатуса.ПричинаОтказаПереноса;
				Тек.ДатаПереноса = НайСтрокаСтатуса.ДатаПереноса;
			КонецеСли;	
		КонецЕсли;
		
		//Асеев 28.06.2022 (Задача № 4831)>>>
		Если Тек.РезультатДоставки <> Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда
			Если Тек.ТипОплаты = Справочники.ТипыОплат.Наличные Или Тек.ТипОплаты = Справочники.ТипыОплат.Терминал Или Тек.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда
				Тек.СуммаЗаказаКОплате = ТекТаб.СуммаРТУ - ТекТаб.СуммаВозврата;
			КонецЕсли;
		КонецЕсли;
		//Асеев 28.06.2022 (Задача № 4831)<<<
		
	КонецЦикла;	
	
	
	//ЗапПриходыНаСклад = Новый Запрос;
	//ЗапПриходыНаСклад.Текст = "ВЫБРАТЬ
	//                          |	ВозвратЗаказовОтВодителя.Ссылка КАК ПриходНаСклад
	//                          |ИЗ
	//                          |	Документ.ВозвратЗаказовОтВодителя КАК ВозвратЗаказовОтВодителя
	//                          |ГДЕ
	//                          |	ВозвратЗаказовОтВодителя.Проведен = ИСТИНА
	//                          |	И ВозвратЗаказовОтВодителя.Рейс.РейсМестнойДоставки = &РейсМестнойДоставки";
	//ЗапПриходыНаСклад.УстановитьПараметр("РейсМестнойДоставки", ОтчетВодителя.Рейс);
	//
	//ПриходыНаСклад.Загрузить(ЗапПриходыНаСклад.Выполнить().Выгрузить());
	
	
	
	
	Если ПриходыНаСклад.Количество() = 0 Тогда
		Для Каждого Тек Из ОтчетВодителя.Задания Цикл
			Если Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично Тогда
				Зап = Новый Запрос;
				Зап.Текст = "ВЫБРАТЬ
				            |	ДанныеЗаказаВодителяДоставленныеТовары.Номенклатура КАК Номенклатура,
							//Асеев 28.08.2020 (Задача № 4183)>>>
				            |	ДанныеЗаказаВодителяДоставленныеТовары.КодМаркировки КАК КодМаркировки,
							//Асеев 28.08.2020 (Задача № 4183)<<<
				            |	ДанныеЗаказаВодителяДоставленныеТовары.КоличествоДоставлено КАК Кол
				            |ИЗ
				            |	Документ.новаОтчетВодителя.ДанныеМобильногоПриложения КАК новаОтчетВодителяДанныеМобильногоПриложения
				            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя.ДоставленныеТовары КАК ДанныеЗаказаВодителяДоставленныеТовары
				            |		ПО новаОтчетВодителяДанныеМобильногоПриложения.Документ.Ссылка = ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Ссылка
				            |ГДЕ
				            |	новаОтчетВодителяДанныеМобильногоПриложения.Ссылка.Ссылка = &ОтчетВодителя
				            |	И ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Реализация.Номер = &Номер
				            |	И новаОтчетВодителяДанныеМобильногоПриложения.АктуальныеДанные = ИСТИНА
				            |
				            |УПОРЯДОЧИТЬ ПО
				            |	ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Дата УБЫВ
				            |АВТОУПОРЯДОЧИВАНИЕ";
				Зап.УстановитьПараметр("ОтчетВодителя", ОтчетВодителя);			
				Зап.УстановитьПараметр("Номер", тек.Задание.Номер);			
				Рез = Зап.Выполнить().Выгрузить();
				
				
				Реал = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Тек.Задание.Номер);
				Струк = Новый Структура;
				Струк.Вставить("Доставка", Реал);
				
				Мас = Товары.НайтиСтроки(Струк);
				Для Каждого Стр Из Мас Цикл
				//Асеев 28.08.2020 (Задача № 4183)>>>
				//	Най = Рез.Найти(Стр.Номенклатура);
				//	Если най = Неопределено Тогда
				//		Стр.Количество = 0;
				//		Стр.Сумма = 0;
				//        //Серегин М.В. 13.05.2015 12:02:08 
				//		Стр.СуммаБезнал = 0;
				//        //Серегин М.В. 13.05.2015 12:02:10 
				//        ПересчитатьДоставку(Реал);
				//	Иначе
				//		Если Най.Кол <> Стр.Количество Тогда
				//			Стр.Количество = Най.Кол;
				//            //Серегин М.В. 13.05.2015 12:12:52 условие на тип оплаты
				//            Если Реал.Ссылка.ТипОплаты = 1 ИЛИ Реал.Ссылка.ТипОплаты = 2 Тогда
				//                Стр.Сумма = Окр(Стр.Цена*Стр.Количество, 2);
				//            Иначе
				//                //Надо определить по типу оплаты что это безнал
				//                Стр.СуммаБезнал = Окр(Стр.Цена*Стр.Количество, 2);
				//            КонецЕсли;
				//			ПересчитатьДоставку(Реал);
				//		КонецеСли;	
				//	КонецеСли;
					Най = Рез.НайтиСтроки(Новый Структура("Номенклатура,КодМаркировки", Стр.Номенклатура, Стр.КодМаркировки));
					Если Най.Количество() Тогда
						Най = Най[0];
						Если Най.Кол <> Стр.Количество Тогда
							Стр.Количество = Най.Кол;
				            //Серегин М.В. 13.05.2015 12:12:52 условие на тип оплаты
				            Если Реал.ТипОплаты = 1 ИЛИ Реал.ТипОплаты = 2 Тогда
				                Стр.Сумма = Окр(Стр.Цена*Стр.Количество, 2);
				            Иначе
				                //Надо определить по типу оплаты что это безнал
				                Стр.СуммаБезнал = Окр(Стр.Цена*Стр.Количество, 2);
				            КонецЕсли;
							ПересчитатьДоставку(Реал);
						КонецеСли;	
					Иначе
						Стр.Количество = 0;
						Стр.Сумма = 0;
				        //Серегин М.В. 13.05.2015 12:02:08 
						Стр.СуммаБезнал = 0;
				        //Серегин М.В. 13.05.2015 12:02:10 
				        ПересчитатьДоставку(Реал);
					КонецЕсли;
				КонецЦикла;	
				//Асеев 28.08.2020 (Задача № 4183)<<<
			ИначеЕсли Тек.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена Тогда	
				Реал = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Тек.Задание.Номер);
				Струк = Новый Структура;
				Струк.Вставить("Доставка", Реал);
				Мас = Товары.НайтиСтроки(Струк);
				Для Каждого Стр Из Мас Цикл
					Стр.Количество = 0;
					Стр.Сумма = 0;
                    //Серегин М.В. 13.05.2015 12:02:08 
                    Стр.СуммаБезнал = 0;
                    //Серегин М.В. 13.05.2015 12:02:10 
					ПересчитатьДоставку(Реал);
				КонецЦикла;	
				
				Мас = Доставки.НайтиСтроки(Струк);
				Для Каждого Стр Из Мас Цикл
					Стр.СуммаДоставки = 0;
					Стр.Итого = 0;
				КонецЦикла;				
			КонецеСли;	
		КонецЦикла;	
	Иначе
		Для Каждого ТекДок Из ПриходыНаСклад Цикл
			Для Каждого Тек Из ТекДок.ПриходНаСклад.Товары Цикл
				Если Тек.Количество = 0 Тогда
					Продолжить;
				КонецеСли;	
				Струк = Новый Структура;
				Струк.Вставить("Доставка", Тек.Доставка);
				Струк.Вставить("Номенклатура", Тек.Номенклатура);
				//Асеев 28.08.2020 (Задача № 4183)>>>
				Струк.Вставить("КодМаркировки", Тек.КодМаркировки);
				//Асеев 28.08.2020 (Задача № 4183)<<<
				Най = Товары.НайтиСтроки(Струк);
				Для Сч = 0 По Най.Количество() - 1 Цикл
					Най[Сч].Количество = Най[Сч].ИсходноеКоличество - Тек.Количество; 
                    ////Серегин М.В. 13.05.2015 12:35:13 старый код
                    //Най[Сч].Сумма = Окр(Най[Сч].Цена*Най[Сч].Количество, 2);
                    //Серегин М.В. 13.05.2015 12:35:29 новый код
                    Если Тек.Доставка.Ссылка.ТипОплаты = 1 ИЛИ Тек.Доставка.Ссылка.ТипОплаты = 2 Тогда
                        Най[Сч].Сумма = Окр(Най[Сч].Цена*Най[Сч].Количество, 2);
                    Иначе
                        Най[Сч].СуммаБезнал = Окр(Най[Сч].Цена*Най[Сч].Количество, 2);
                    КонецЕсли;
                    //Серегин М.В. 13.05.2015 12:35:55 
                    
					ПересчитатьДоставку(Тек.Доставка);
				КонецЦикла;	
			КонецЦикла;	
		конецЦикла;	
	КонецеСли;
	
	
	//lem костыль для пересчета типа оплаты по ДаннымМП
	Для Каждого ТекТов из Товары Цикл
	    Если ТекТов.ТипОплаты = Справочники.ТипыОплат.Наличные ИЛИ ТекТов.ТипОплаты = Справочники.ТипыОплат.ВКредит Тогда 
	        ТекТов.Сумма = Окр(ТекТов.Количество * ТекТов.Цена, 2);    
			 ТекТов.СуммаБезнал = 0;
		ИначеЕсли ТекТов.ТипОплаты = Справочники.ТипыОплат.ПустаяСсылка() Тогда
	        ТекТов.Сумма = Окр(ТекТов.Количество * ТекТов.Цена, 2);
			ТекТов.СуммаБезнал = 0;
	    Иначе
	        ТекТов.СуммаБезнал = Окр(ТекТов.Количество * ТекТов.Цена, 2);
			ТекТов.Сумма = 0;
	    КонецЕсли;
		
		ПересчитатьДоставку(ТекТов.Доставка);
	КонецЦикла;
	//lem костыль для пересчета типа оплаты по ДаннымМП	
	
	
	//+++ БАО 11.07.2017 №1320 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДополнительныеПараметрыЧеков.СуммаЧека КАК СуммаЧека,
	|	ДополнительныеПараметрыЧеков.ЧекККМ КАК ЧекККМ,
	|	ДанныеЗаказаВодителя.Реализация КАК Реализация,
	|	ДополнительныеПараметрыЧеков.ЧекККМ.ТипКассовогоЧека КАК ТипКассовогоЧека,
	|	ДанныеЗаказаВодителя.Дата КАК Дата
	|ПОМЕСТИТЬ ВТ_Общие
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЧеков КАК ДополнительныеПараметрыЧеков
	|		ПО ДанныеЗаказаВодителя.Реализация = ДополнительныеПараметрыЧеков.ЧекККМ.Реализация
	|			И ДанныеЗаказаВодителя.УзелОбмена = ДополнительныеПараметрыЧеков.МобильноеПриложение
	|ГДЕ
	|	ДополнительныеПараметрыЧеков.НомерЧекаВКассовомСервере <> """"
	|	И ДанныеЗаказаВодителя.Реализация В(&Реализация)
	|	И ДанныеЗаказаВодителя.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Общие.Реализация КАК Реализация,
	|	МАКСИМУМ(ВТ_Общие.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ_Последние
	|ИЗ
	|	ВТ_Общие КАК ВТ_Общие
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Общие.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Общие.СуммаЧека КАК СуммаЧека,
	|	ВТ_Общие.ЧекККМ КАК Чек,
	|	ВТ_Общие.Реализация КАК Заказ,
	|	ВТ_Общие.ТипКассовогоЧека КАК ТипКассовогоЧека
	|ИЗ
	|	ВТ_Общие КАК ВТ_Общие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Последние КАК ВТ_Последние
	|		ПО ВТ_Общие.Реализация = ВТ_Последние.Реализация
	|			И ВТ_Общие.Дата = ВТ_Последние.Дата";
	
	
	Реализация = Таб.ВыгрузитьКолонку("Доставка");
	
	ДатаРейса = ОтчетВодителя.Рейс.ДатаНачала;
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаРейса));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаРейса));
	Запрос.УстановитьПараметр("Реализация", Реализация);
	
	ЧекиЭкипажа.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//--- БАО 11.07.2017 №1320 
	
	//Асеев 07.10.2021 (Задача № 4689)>>>
	ЗаполнитьПлатежиAssist();
	//Асеев 07.10.2021 (Задача № 4689)<<<
	
КонецПроцедуры

//Асеев 03.10.2022 (Задача № 4905)>>>
Процедура ПересчитатьИтогиПоДоставкам() Экспорт
	
	КолПер = 0;
	КолВыпЧ = 0;
	СуммаПоТерминалу = 0;
	СуммаПоСБП = 0;
	СуммаПоТерминалуПодтвержденная = 0;
	КолВып = 0;
	КолНеВып = 0;
	КолВыполненоБезнал = 0;
	КолВыполненоДокументыКВозврату = 0;
	СуммаПоНаличке = 0;
	СуммаЧековПоНаличке = 0;
	СуммаЧековПоТерминалу = 0;
	НевыполненоБезнал = 0;
	НевыполненоДокументыКВозврату = 0;
	
	ТипОплатыТерминал = Справочники.ТипыОплат.Терминал;
	ТипОплатыСБП = Справочники.ТипыОплат.СБП;
	ТипОплатыБезнал = Справочники.ТипыОплат.БезналичныйРасчет;
	ТипОплатыНал = Справочники.ТипыОплат.Наличные;
	ВыполненаЧастично = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично;
	ПереносДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки;
	
	Для Каждого Тек Из Доставки Цикл
		Если Тек.ТипОплаты = ТипОплатыТерминал Тогда
			СуммаПоТерминалу = СуммаПоТерминалу + Тек.СуммаБезнал;
		ИначеЕсли Тек.ТипОплаты = ТипОплатыСБП Тогда
			СуммаПоСБП = СуммаПоСБП + Тек.СуммаБезнал;
		КонецЕсли;
		Если Тек.ПричинаНеВыполнения.Пустая() Тогда
			Если Тек.РезультатДоставки = ВыполненаЧастично Тогда
				КолВыпЧ = КолВыпЧ + 1;
			КонецеСли;	
			КолВып = КолВып + 1;
			
			Если Тек.ТипОплаты = ТипОплатыБезнал Тогда
				КолВыполненоБезнал = КолВыполненоБезнал + 1;
			ИначеЕсли Тек.ТипОплаты = ТипОплатыНал Тогда
				СуммаПоНаличке = СуммаПоНаличке + Тек.Итого;
				СуммаЧековПоНаличке = СуммаЧековПоНаличке + Тек.СуммаЧековЭкипажа - Тек.СуммаВозвратныхЧековЭкипажа - Тек.СуммаВозвратныхЧековКассира;
			ИначеЕсли Тек.ТипОплаты = ТипОплатыТерминал Тогда
				СуммаЧековПоТерминалу = СуммаЧековПоТерминалу + Тек.СуммаЧековЭкипажа - Тек.СуммаВозвратныхЧековЭкипажа - Тек.СуммаВозвратныхЧековКассира;
			КонецЕсли;
			Если Тек.ТребуетсяПодписаниеИВозвратСопрДокументов Тогда
				КолВыполненоДокументыКВозврату = КолВыполненоДокументыКВозврату + 1;
			КонецЕсли;
		Иначе
			КолНеВып = КолНеВып + 1;
			Если Тек.ПричинаНеВыполнения = ПереносДоставки Тогда
				КолПер = КолПер + 1;
			КонецЕсли;
			Если Тек.ТипОплаты = ТипОплатыБезнал Тогда
				НевыполненоБезнал = НевыполненоБезнал + 1;
			КонецЕсли;
			Если Тек.ТребуетсяПодписаниеИВозвратСопрДокументов Тогда
				НевыполненоДокументыКВозврату = НевыполненоДокументыКВозврату + 1;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;

	ТипОперацииОплата = Перечисления.ТипыОперацийAssist.Оплата;
	ТипОперацииОтмена = Перечисления.ТипыОперацийAssist.Отмена;
	
	Для Каждого СтрокаПлатежа Из ПлатежиAssist Цикл
		Если СтрокаПлатежа.Оплачен И (СтрокаПлатежа.ТипОплаты = ТипОплатыТерминал Или СтрокаПлатежа.ТипОплаты = ТипОплатыСБП) Тогда
			Если СтрокаПлатежа.ТипОперации = ТипОперацииОплата Тогда
				СуммаПоТерминалуПодтвержденная = СуммаПоТерминалуПодтвержденная + СтрокаПлатежа.Сумма;
			ИначеЕсли СтрокаПлатежа.ТипОперации = ТипОперацииОтмена Тогда
				СуммаПоТерминалуПодтвержденная = СуммаПоТерминалуПодтвержденная - СтрокаПлатежа.Сумма;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ИтогоНаличные = СуммаПоНаличке;
	ИтогоЧекиНаличные = СуммаЧековПоНаличке;
	ИтогоТерминал = СуммаПоТерминалу;
	ИтогоТерминалПодтвержденный = СуммаПоТерминалуПодтвержденная;
	ИтогоЧекиТерминал = СуммаЧековПоТерминалу;
	ИтогоСБП = СуммаПоСБП;
	ИтогоЗаказов = Доставки.Количество();
	ИтогоЗаказовВыполнено = КолВып;
	ИтогоЗаказовВыполненоВТомЧислеЧастично = КолВыпЧ;
	ИтогоЗаказовВыполненоВТомЧислеБН = КолВыполненоБезнал;
	ИтогоЗаказовВыполненоВТомЧислеДокументыКВозврату = КолВыполненоДокументыКВозврату;
	ИтогоЗаказовНеВыполнено = КолНеВып;
	ИтогоЗаказовНеВыполненоВТомЧислеПеренесено = КолПер;
	ИтогоЗаказовНеВыполненоВТомЧислеБН = НевыполненоБезнал;
	ИтогоЗаказовНеВыполненоВТомЧислеДокументыКВозврату = НевыполненоДокументыКВозврату;
	
КонецПроцедуры
//Асеев 03.10.2022 (Задача № 4905)<<<

Процедура ПересчитатьДоставку(Доставка) Экспорт
	
	//Асеев 28.06.2022 (Задача № 4831)>>>
	//Таб = Товары.Выгрузить();
	СтруктураДоставка = Новый Структура("Доставка", Доставка);
	Таб = Товары.Выгрузить(СтруктураДоставка, "Доставка,Сумма,СуммаБезнал");
    //Серегин М.В. 13.05.2015 12:01:32 добавил сумма безнал
	Таб.Свернуть("Доставка", "Сумма,СуммаБезнал");
	//Струк = Новый Структура;
	//Струк.Вставить("Доставка", Доставка);
	//Най = Доставки.НайтиСтроки(Струк);
	Най = Доставки.НайтиСтроки(СтруктураДоставка);
	//Асеев 28.06.2022 (Задача № 4831)<<<	
	НайТ = Таб.Найти(Доставка);
	
	Если НайТ <> Неопределено Тогда
		Най[0].Сумма = НайТ.Сумма;
        //Серегин М.В. 13.05.2015 12:01:50 
		Най[0].СуммаБезнал = НайТ.СуммаБезнал;
        //Серегин М.В. 13.05.2015 12:01:52 
	Иначе
		Най[0].Сумма = 0;
        //Серегин М.В. 13.05.2015 12:01:55 
		Най[0].СуммаБезнал = 0;
        //Серегин М.В. 13.05.2015 12:01:57 
    КонецЕСли;
    
    ////Серегин М.В. 14.05.2015 17:45:05 Старый код
    //    Най[0].Итого = Най[0].Сумма + Най[0].СуммаДоставки;
    
    //+++++Серегин М.В. 09.10.2015 14:19:05 старый код 
    Если Най[0].СуммаБезнал = 0 И (Най[0].ТипОплаты <> Справочники.ТипыОплат.ОплаченоВМагазине И Най[0].ТипОплаты <> Справочники.ТипыОплат.БезРасчетов) Тогда // Задача № 2901
		Если Най[0].УчитыватьКОплатеКлиентом И Най[0].ЧастичныйВыкупЗапрещен Тогда //+++++Серегин М.В. 01.03.2016 18:30:39 
		    Най[0].Итого = Най[0].КОплатеКлиентом;
		Иначе //-----Серегин М.В. 01.03.2016 18:31:21 
            Най[0].Итого = Най[0].Сумма + Най[0].СуммаДоставки;
			//+Степанов
			Если Най[0].ТипОплаты = Справочники.ТипыОплат.Терминал Тогда
				Най[0].СуммаБезнал =  Най[0].СуммаДоставки;
			КонецЕсли;
			//-Степанов
		КонецЕсли;
    Иначе
        Най[0].СуммаБезнал = Най[0].СуммаБезнал + Най[0].СуммаДоставки;
    КонецЕсли;
	
	//Асеев 22.11.2021 (по письму Дубли чеков)>>>
	Если Най[0].ТипОплаты = Справочники.ТипыОплат.Терминал Тогда
		//Асеев 28.06.2022 (Задача № 4831)>>>
		//Най[0].Итого = 0;
		Най[0].Итого = Най[0].СуммаБезнал;
		//Асеев 28.06.2022 (Задача № 4831)<<<
	КонецЕсли;
	//Асеев 22.11.2021 (по письму Дубли чеков)<<<
	
    ////+++++Серегин М.В. 09.10.2015 14:19:12 новый
    //Если Най[0].СуммаБезнал = 0 Тогда
    //    Най[0].Итого = Най[0].Сумма;
    //Иначе
    //    Най[0].СуммаБезнал = Най[0].СуммаБезнал;
    //КонецЕсли;
    ////-----Серегин М.В. 09.10.2015 14:19:33 
КонецПроцедуры	

Процедура ДозаполнитьПоДаннымОтчетПоДСМП(ОтчетПоДСМП, ДокументОбъект) Экспорт 
	
	Для Каждого Товар Из ОтчетПоДСМП.ДС Цикл 
		
		Отбор = Новый Структура;
		Отбор.Вставить("Доставка", Товар.Заказ);
		
		НайденныеСтроки = ДокументОбъект.Доставки.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаНайденныеСтроки Из НайденныеСтроки Цикл 
			
			СтрокаНайденныеСтроки.ТипОплаты = Товар.ТипОплаты;
						
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры	

//--- БАО 10.08.2017 №1628
