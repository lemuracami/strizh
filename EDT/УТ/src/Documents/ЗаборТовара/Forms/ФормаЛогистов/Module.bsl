Перем ПодключениеКМагазину;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ДатаНач", НачалоДня(ТекущаяДата()));
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ДатаКон", КонецДня(ТекущаяДата()));
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Заголовок = "Заборы за " + ПредставлениеПериода(НачалоДня(ТекущаяДата()), КонецДня(ТекущаяДата()), "ДЛФ=DD");
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "Водитель" Тогда
		Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
		В = ОткрытьФормуМодально("Справочник.новаВодители.ФормаВыбора");
		Если ЗначениеЗаполнено(В) Тогда
			Д = Док.ПолучитьОбъект();
			Д.Водитель = В;
			Д.Записать(РежимЗаписиДокумента.Запись);
			Элементы.СписокДокументов.Обновить();
		КонецеСли;	
	ИначеЕсли Поле.Имя = "Экспедитор" Тогда
		Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
		В = ОткрытьФормуМодально("Справочник.новаЭкспедиторы.ФормаВыбора");
		Если ЗначениеЗаполнено(В) Тогда
			Д = Док.ПолучитьОбъект();
			Д.Экспедитор = В;
			Д.Записать(РежимЗаписиДокумента.Запись);
			Элементы.СписокДокументов.Обновить();
		КонецеСли;	
	ИначеЕсли Поле.Имя = "Транспорт" Тогда
		Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
		В = ОткрытьФормуМодально("Справочник.новаТранспорт.ФормаВыбора");
		Если ЗначениеЗаполнено(В) Тогда
			Д = Док.ПолучитьОбъект();
			Д.Транспорт = В;
			Д.Записать(РежимЗаписиДокумента.Запись);
			Элементы.СписокДокументов.Обновить();
		КонецеСли;	
	КонецеСли;	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВАдминкуНаСервере()
	
	Попытка
		ПодключениеКМагазину = Евген.СоздатьПодключениеКИнтернетМагазину(); 
	Исключение
		Сообщить("Не удалось создать подключение: "+ОписаниеОшибки(), СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ЗаборТовара.Номер,
	            |	ЗаборТовара.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта,
	            |	ЗаборТовара.ДатаДоставки,
	            |	ЗаборТовара.ТочкаДоставки.Адрес.Наименование КАК АдресДоставки,
	            |	ЕСТЬNULL(ЗаборТовара.ТочкаДоставки.Москва, ИСТИНА) КАК ЭтоМосква
	            |ИЗ
	            |	Документ.ЗаборТовара КАК ЗаборТовара
	            |ГДЕ
	            |	ЗаборТовара.ПометкаУдаления = ЛОЖЬ
	            |	И НЕ ЗаборТовара.СтатусИнтернетМагазина В (3, 4)
	            |	И ЗаборТовара.Дата МЕЖДУ &ДатаНач И &ДатаКон";
				
	Зап.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));			
	Зап.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));
	
	//ТЕСТ
	//Зап.УстановитьПараметр("ДатаНач", НачалоДня(СписокДокументов.параметры.Элементы.Найти("ДатаНач").Значение));			
	//Зап.УстановитьПараметр("ДатаКон", КонецДня(СписокДокументов.параметры.Элементы.Найти("ДатаКон").Значение));

	
	Таб = Зап.Выполнить().Выгрузить();
	
	// - Дробница Р. 2482
	МассивПараметров = Новый Массив;
	// Дробница Р. 2482 - 
	
	Стр = "DECLARE @t TOrderCar   ";
	Для Каждого Тек Из Таб Цикл
		Стр = Стр + "                                                                                                                                                                                                                      
		|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(Тек.Номер) + ",'" + Тек.НомерТранспорта + "','" + ПараметрыСеанса.ТекущийПользователь + "', '"+ДатаИз1С(Тек.ДатаДоставки, Ложь)+"', " + ?(Тек.АдресДоставки="NULL", "NULL", "'" + Тек.АдресДоставки + "'") + ?(Тек.ЭтоМосква, ",0", ",1") + ")";
		
		// - Дробница Р. 2482
		Если  Не ЗначениеЗаполнено(Тек.НомерТранспорта) Тогда Продолжить КонецЕсли;
		
		ПараметрыЗапроса = Новый Структура();
		ПараметрыЗапроса.Вставить("Address", ?(Тек.АдресДоставки="NULL", "NULL", "'" + Тек.АдресДоставки + "'"));
		ПараметрыЗапроса.Вставить("Car", СокрЛП(Тек.НомерТранспорта));
		ПараметрыЗапроса.Вставить("DeliveryDate", Тек.ДатаДоставки);
		ПараметрыЗапроса.Вставить("IsRegion", ?(Тек.ЭтоМосква, "0", "1"));
		ПараметрыЗапроса.Вставить("OrderId", СокрЛП(Тек.Номер));
		ПараметрыЗапроса.Вставить("Who", СокрЛП(ПараметрыСеанса.ТекущийПользователь));
		
		МассивПараметров.Добавить(ПараметрыЗапроса);
		// Дробница Р. 2482 - 
	КонецЦикла;	
	
	// - Дробница Р. 2482
	Если МассивПараметров.Количество() > 0 Тогда
		
		ПараметрыЗапроса = Новый Структура;		
		ПараметрыЗапроса.Вставить("orderCars", МассивПараметров);
		СтруктураВозврата = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetOrderCarsResult, ПараметрыЗапроса,,,Истина);
		Если НЕ СтруктураВозврата.Успешно Тогда
			Сообщить("Ошибка выгрузки машин. " + СтруктураВозврата.ОписаниеОшибки, СтатусСообщения.Важное);
		Иначе
			Сообщить("Выгрузка окончена.");
		КонецЕсли;
		
	КонецЕсли;
		
	//Попытка
	//	ЗапросКИнтернетМагазину(Стр + "
	//	|EXEC import_setOrderCarsFrom1C @t
	//	|");
	//	Сообщить("Выгрузка окончена.");
	//Исключение
	//	Сообщить("Ошибка выгрузки машин. " + ОписаниеОшибки(), СтатусСообщения.Важное);
	//КонецПопытки;
	// Дробница Р. 2482 -
	
КонецПроцедуры


Функция ДатаИз1С(Д, ЭтоКонец) Экспорт
	Возврат Формат(Год(Д),"ЧГ=0") + ЛидирующийНоль(Месяц(Д)) + ЛидирующийНоль(День(Д)) + " " +
			ЛидирующийНоль(Час(Д)) + ":" + ЛидирующийНоль(Минута(Д)) + ":" + ЛидирующийНоль(Секунда(Д)) +
			?(ЭтоКонец, ".998", "");
КонецФункции // ДатаИз1С()



Функция ЛидирующийНоль(зн)
	Если Зн < 10 Тогда
		Возврат "0"+Зн;
	Иначе
		Возврат Зн;
	КонецЕсли;	
КонецФункции

Функция ЗапросКИнтернетМагазину(ТекстЗапроса) Экспорт
	Cmd = Новый COMОбъект("ADODB.Command");
	Cmd.ActiveConnection = ПодключениеКМагазину;
	Cmd.CommandText = ТекстЗапроса;
	Cmd.CommandType = 1;
	Возврат Cmd.Execute();
КонецФункции



&НаКлиенте
Процедура ВыгрузитьВАдминку(Команда)
	ВыгрузитьВАдминкуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЗначение(Команда)
	//Если Элементы.СписокДокументов.Теку.Имя = "Водитель" Тогда
	//	Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
	//	В = ОткрытьФормуМодально("Справочник.новаВодители.ФормаВыбора");
	//	Если ЗначениеЗаполнено(В) Тогда
	//		Д = Док.ПолучитьОбъект();
	//		Д.Водитель = В;
	//		Д.Записать(РежимЗаписиДокумента.Запись);
	//		Элементы.СписокДокументов.Обновить();
	//	КонецеСли;	
	//ИначеЕсли Поле.Имя = "Экспедитор" Тогда
	//	Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
	//	В = ОткрытьФормуМодально("Справочник.новаЭкспедиторы.ФормаВыбора");
	//	Если ЗначениеЗаполнено(В) Тогда
	//		Д = Док.ПолучитьОбъект();
	//		Д.Экспедитор = В;
	//		Д.Записать(РежимЗаписиДокумента.Запись);
	//		Элементы.СписокДокументов.Обновить();
	//	КонецеСли;	
	//ИначеЕсли Поле.Имя = "Транспорт" Тогда
	//	Док = Элементы.СписокДокументов.ТекущиеДанные.Док;
	//	В = ОткрытьФормуМодально("Справочник.новаТранспорт.ФормаВыбора");
	//	Если ЗначениеЗаполнено(В) Тогда
	//		Д = Док.ПолучитьОбъект();
	//		Д.Транспорт = В;
	//		Д.Записать(РежимЗаписиДокумента.Запись);
	//		Элементы.СписокДокументов.Обновить();
	//	КонецеСли;	
	//КонецеСли;	
	п = 1;
КонецПроцедуры
