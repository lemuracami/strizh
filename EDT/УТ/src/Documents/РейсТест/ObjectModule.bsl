
Процедура ПередЗаписью(Отказ)

	//ОбходитьПроверки = Ложь;
	//Если ДополнительныеСвойства.Свойство("ОбходПроверок")  Тогда
	//	ОбходитьПроверки = Истина;
	//КонецЕсли;	

	//
	//Если Не ОбходитьПроверки Тогда
	//	//+++ БАО 08.06.2017 №1024 
	//	//Отказ = РейсЗакрыт;
	//	Отказ = bao.РейсЗакрыт(Ссылка);
	//	//--- БАО 08.06.2017 №1024 
	//	
	//	Если Отказ Тогда
	//		Возврат;
	//	КонецеСли;	
	//КонецеСли;
	//
	//
	//Зап = Новый Запрос;
	//
	//Зап.Текст = "ВЫБРАТЬ
	//            |	ЗаказыКОтвязкеОтРейсов.Заказ,
	//			|	ЗаказыКОтвязкеОтРейсов.ЗаказНайден
	//            |ИЗ
	//            |	РегистрСведений.ЗаказыКОтвязкеОтРейсов КАК ЗаказыКОтвязкеОтРейсов
	//            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаказыКОтвязкеОтРейсов.СрезПоследних(&КонДата, ) КАК ЗаказыКОтвязкеОтРейсовСрезПоследних
	//            |		ПО ЗаказыКОтвязкеОтРейсов.Заказ = ЗаказыКОтвязкеОтРейсовСрезПоследних.Заказ
	//            |			И ЗаказыКОтвязкеОтРейсов.Рейс.Ссылка = ЗаказыКОтвязкеОтРейсовСрезПоследних.Рейс
	//            |ГДЕ
	//            |	ЗаказыКОтвязкеОтРейсов.Период МЕЖДУ &НачДата И &КонДата
	//            |	И ЗаказыКОтвязкеОтРейсов.Рейс.Ссылка = &Рейс
	//            //|	И ЗаказыКОтвязкеОтРейсовСрезПоследних.ЗаказНайден = ЛОЖЬ
	//            |	И ЗаказыКОтвязкеОтРейсовСрезПоследних.ТипОтвязки.Ссылка <> ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки)";
	//Зап.УстановитьПараметр("Рейс", Ссылка);
	//Зап.УстановитьПараметр("НачДата", НачалоДня(ДатаРейса));
	//Зап.УстановитьПараметр("КонДата", КонецДня(ДатаРейса));
	//
	//Рез = Зап.Выполнить().Выгрузить();
	//
	//Для Каждого Тек Из Рез Цикл
	//	Струк = Новый Структура;
	//	Струк.Вставить("Заказ", Тек.Заказ);
	//	
	//	Най = Заказы.НайтиСтроки(Струк);
	//	
	//	Для Сч = 0 По Най.Количество() - 1 Цикл
	//		Най[Сч].УдаленИзРейса = Не Тек.ЗаказНайден;
	//	КонецЦикла;	
	//КонецЦикла;	
	//
	////Марочкин - выставляем терминал, если терминал пустой
	//Если ТерминалДоставки.Пустая() Тогда
	//	// Михушкин - 26.04.2016 - выставлять ТерминалДоставки по первому заказу --->> 
	//	Если Заказы.Количество() И ЗначениеЗаполнено(Заказы[0].Заказ) И ТипЗнч(Заказы[0].Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
	//		ТерминалДоставки = Заказы[0].Заказ.ТерминалДоставки;	
	//		// lem - 08.11.2016 - выставлять ТерминалДоставки по первому заказу --->> + ЗАБОРЫ
	//	ИначеЕсли Заказы.Количество() И ЗначениеЗаполнено(Заказы[0].Заказ) И ТипЗнч(Заказы[0].Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда
	//		ТерминалДоставки = Заказы[0].Заказ.ТерминалДоставки;	
	//	Иначе
	//		ТерминалДоставки = Справочники.РегиональныеТерминалы.ПустаяСсылка();
	//	КонецЕсли;	
	//	// <<--- Михушкин 
	//КонецеСли;
	////Марочкин - выставляем терминал, если терминал пустой
	//
	//
	//// МАС - 31.07.2017 - №1508 - отмена отвязки (в случае перепроведения отчета с измененными данными) --->> 
	//ЗапросОтвязка = Новый Запрос("ВЫБРАТЬ
	//                             |	ЗаказыКОтвязкеОтРейсов.Заказ КАК Заказ,
	//                             |	ЗаказыКОтвязкеОтРейсов.Рейс КАК Рейс,
	//                             |	ЗаказыКОтвязкеОтРейсов.ТипОтвязки КАК ТипОтвязки
	//                             |ИЗ
	//                             |	РегистрСведений.ЗаказыКОтвязкеОтРейсов КАК ЗаказыКОтвязкеОтРейсов
	//                             |ГДЕ
	//                             |	ЗаказыКОтвязкеОтРейсов.ТипОтвязки = ЗНАЧЕНИЕ(Перечисление.ТипыОтвязкиЗаказовОтМашин.ОтменаОтвязки)
	//                             |	И ЗаказыКОтвязкеОтРейсов.Рейс = &Рейс
	//                             |
	//                             |СГРУППИРОВАТЬ ПО
	//                             |	ЗаказыКОтвязкеОтРейсов.ТипОтвязки,
	//                             |	ЗаказыКОтвязкеОтРейсов.Рейс,
	//                             |	ЗаказыКОтвязкеОтРейсов.Заказ");
	//ЗапросОтвязка.УстановитьПараметр("Рейс", Ссылка);
	//РезОтвязка = ЗапросОтвязка.Выполнить().Выбрать();

	//Пока РезОтвязка.Следующий() Цикл
	//	
	//	Най = Заказы.НайтиСтроки(Новый Структура("Заказ", РезОтвязка.Заказ));
	//	Для каждого Ст Из Най Цикл	
	//		Ст.УдаленИзРейса = Ложь;
	//		//ЭтотОбъект.Модифицированность = Истина; 
	//	КонецЦикла;		
	//	
	//КонецЦикла;
	
	
	
КонецПроцедуры	

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Вставить содержимое обработчика.
	//ОбновлениеИнформацииВАдминкеИзминениеРейсаПоЗаказам();
	//
	//Зап = Новый Запрос;
	//Зап.Текст = "ВЫБРАТЬ
	//            |	новаМестнаяДоставка.Ссылка КАК Заказ,
	//            |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Ссылка КАК Рейс
	//            |ИЗ
	//            |	Документ.Рейс.Заказы КАК РейсЗаказы
	//            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	//            |		ПО РейсЗаказы.Заказ.Номер = новаМестнаяДоставка.Номер
	//            |ГДЕ
	//            |	РейсЗаказы.Ссылка.Ссылка = &Рейс
	//            |	И РейсЗаказы.ВидЗаказа = ЗНАЧЕНИЕ(Перечисление.ВидыЗаказовВероут.Drop)
	//            |	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ";
	//			
	//			
	//Зап.УстановитьПараметр("Рейс", Ссылка);
	//Рез = Зап.Выполнить().Выгрузить();
	//
	//Наб = РегистрыСведений.новаЗаданияРейсов.СоздатьНаборЗаписей();
	//Наб.Отбор.Рейс.Установить(РейсМестнойДоставки.Ссылка);
	//
	//НПП = 0;
	//Сч2 = 0;
	//Для Каждого Тек Из Рез Цикл
	//	Нов = Наб.Добавить();
	//	Нов.Рейс = Тек.Рейс;
	//	Нов.КодТочки = НПП;
	//	Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Разгрузка;
	//	Нов.Доставка = Тек.Заказ;
	//	
	//	Нов = Наб.Добавить();
	//	Нов.Рейс = Тек.Рейс;
	//	Нов.КодТочки = НПП;
	//	Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Разгрузка;
	//	Нов.Доставка = Тек.Заказ;
	//	Нов.МаршрутСопровождения = Истина;
	//	Если НПП = 0 Тогда
	//		НПП = 2;
	//	Иначе	
	//		НПП = НПП + 1;
	//	КонецеСли;	
	//	
	//	
	//	//погрузка
	//	
	//	Нов = Наб.Добавить();
	//	Нов.Рейс = Тек.Рейс;
	//	Нов.КодТочки = 1;
	//	Нов.НомерЗадания = Сч2;
	//	Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Погрузка;
	//	Нов.Доставка = Тек.Заказ;
	//	
	//	Нов = Наб.Добавить();
	//	Нов.Рейс = Тек.Рейс;
	//	Нов.КодТочки = 1;
	//	Нов.НомерЗадания = Сч2;
	//	Нов.Вид = Перечисления.новаВидыЗаданийРейсаМестнойДоставки.Погрузка;
	//	Нов.Доставка = Тек.Заказ;
	//	Нов.МаршрутСопровождения = Истина;
	//	Сч2 = Сч2 + 1;
	//	
	//КонецЦикла;	
	//
	//Наб.Записать();
	//
	//
	//Зап = Новый Запрос;
	//Зап.Текст = "ВЫБРАТЬ
	//            |	новаМестнаяДоставка.Ссылка КАК Заказ,
	//            |	РейсЗаказы.Ссылка.РейсМестнойДоставки.Ссылка КАК Рейс,
	//            |	новаМестнаяДоставка.ТочкаПрибытия.Ссылка КАК ТочкаПрибытия,
	//            |	новаМестнаяДоставка.ТочкаОтправления.Ссылка КАК ТочкаОтправления
	//            |ИЗ
	//            |	Документ.Рейс.Заказы КАК РейсЗаказы
	//            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	//            |		ПО РейсЗаказы.Заказ.Номер = новаМестнаяДоставка.Номер
	//            |ГДЕ
	//            |	РейсЗаказы.Ссылка.Ссылка = &Рейс
	//            |	И РейсЗаказы.ВидЗаказа = ЗНАЧЕНИЕ(Перечисление.ВидыЗаказовВероут.Drop)
	//            |	И РейсЗаказы.УдаленИзРейса = ЛОЖЬ";
	//			
	//			
	//Зап.УстановитьПараметр("Рейс", Ссылка);
	//Рез = Зап.Выполнить().Выгрузить();
	//
	//Наб = РегистрыСведений.новаТочкиМаршрутаРейсов.СоздатьНаборЗаписей();
	//Наб.Отбор.Рейс.Установить(РейсМестнойДоставки.Ссылка);
	//
	//
	//Если Рез.Количество() <> 0 Тогда
	//	Ид = Новый УникальныйИдентификатор;
	//	Нов = Наб.Добавить();
	//	Нов.Рейс = РейсМестнойДоставки.Ссылка;
	//	Нов.КодТочки = 1;
	//	Нов.ИдТочки = Ид;
	//	Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Погрузка;
	//	Нов.ТочкаМаршрута = Рез[0].ТочкаОтправления;
	//	
	//	Нов = Наб.Добавить();
	//	Нов.Рейс = РейсМестнойДоставки.Ссылка;
	//	Нов.КодТочки = 1;
	//	Нов.ИдТочки = Ид;
	//	Нов.МаршрутСопровождения = Истина;
	//	Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Погрузка;
	//	Нов.ТочкаМаршрута = Рез[0].ТочкаОтправления;
	//КонецеСли;	
	//
	//НомерТочки = 1;
	//КодТочки = 2;
	//Для Каждого Тек Из Рез Цикл
	//	Ид = Новый УникальныйИдентификатор;
	//	Нов = Наб.Добавить();
	//	Нов.Рейс = Тек.Рейс;
	//	Нов.НомерТочки = НомерТочки;
	//	
	//	Если НомерТочки <> 1 Тогда
	//		Нов.КодТочки = КодТочки;
	//		КодТочки = КодТочки + 1;
	//		
	//		
	//	КонецеСли;	
	//	
	//	Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Разгрузка;
	//	Нов.ТочкаМаршрута = Тек.ТочкаПрибытия;
	//	Нов.ИдТочки = Ид;
	//	
	//	Нов = Наб.Добавить();
	//	Нов.Рейс = Тек.Рейс;
	//	Нов.НомерТочки = НомерТочки;
	//	
	//	Если НомерТочки <> 1 Тогда
	//		Нов.КодТочки = КодТочки;
	//	КонецеСли;	
	//	
	//	Нов.Действие = Перечисления.новаДействияВТочкеРейсаМестнойДоставки.Разгрузка;
	//	Нов.ТочкаМаршрута = Тек.ТочкаПрибытия;
	//	Нов.ИдТочки = Ид;
	//	Нов.МаршрутСопровождения = Истина;
	//	
	//	НомерТочки = НомерТочки + 1;
	//	
	//КонецЦикла;	
	//Наб.Записать();
	//
	////+++ БАО 09.10.2017 №1932
	//ЗафиксироватьИсториюПрикрепленияЗаказаКРейсам();
	////--- БАО 09.10.2017 №1932
	//
	// 
	//
	//
КонецПроцедуры

Процедура ОбновлениеИнформацииВАдминкеИзминениеРейсаПоЗаказам()
	
	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ РАЗЛИЧНЫЕ
//		|	новаЗаданияРейсов.Рейс КАК Рейс,
//		|	новаЗаданияРейсов.Доставка КАК Доставка,
//		|	РейсЗаказы.Заказ.Номер КАК ЗаказНомер,
////+++ БАО 29.05.2017 №744
// 		//|	ЕСТЬNULL(новаЗаданияРейсов.Доставка.ТочкаПрибытия.Москва, ИСТИНА) КАК ЭтоМосква,
//		|	РейсЗаказы.Заказ.ЗонаТарификации.КодТарифа КАК ЗаказЗонаТарификацииКодТарифа,
////--- БАО 29.05.2017 №744
//	    |	новаЗаданияРейсов.Рейс.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта
//		|ИЗ
//		|	Документ.Рейс.Заказы КАК РейсЗаказы
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
//		|		ПО РейсЗаказы.Заказ.Номер = новаЗаданияРейсов.Доставка.Номер
//		|ГДЕ
//		|	РейсЗаказы.Ссылка.Ссылка = &Ссылка
//		|	И новаЗаданияРейсов.Рейс <> &Рейс
//		|	И новаЗаданияРейсов.Рейс.Дата МЕЖДУ &ДатаНач И &ДатаКон";
//	
//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
//	Запрос.УстановитьПараметр("Рейс", РейсМестнойДоставки);
//	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Дата));
//	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Дата));
//	
//	РезультатЗапроса = Запрос.Выполнить().Выбрать();

//	НачалоСтр = "DECLARE @t TOrderCar   ";
//	Стр = НачалоСтр;
//	Пока РезультатЗапроса.Следующий() Цикл
//		//+++ БАО 29.05.2017 №744
//	    //ЗонаРайон = ?(РезультатЗапроса.ЭтоМосква, 0, 1);
//		ЗонаРайон = Формат(?(ЗначениеЗаполнено(РезультатЗапроса.ЗаказЗонаТарификацииКодТарифа), РезультатЗапроса.ЗаказЗонаТарификацииКодТарифа, 0),"ЧН=0; ЧГ=0" );
//		//--- БАО 29.05.2017 №
//		
//		Стр = Стр + "                                                                                                                                                                                                                      
//		|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(РезультатЗапроса.ЗаказНомер) + ",'" + РезультатЗапроса.НомерТранспорта + "','" + ПараметрыСеанса.ТекущийПользователь + "', '" + mas.ДатаИз1С(РезультатЗапроса.Доставка.ВремяПрибытияПо, Ложь)+"', " + ?(РезультатЗапроса.Доставка.ТочкаПрибытия="NULL", "NULL", "'" + СтрЗаменить(Строка(РезультатЗапроса.Доставка.ТочкаПрибытия), "'", "") + "'") + "," + Строка(ЗонаРайон) + ")";
//	КонецЦикла;
//	Если Стр <> НачалоСтр Тогда	
//		Евген.ЗапросКИнтернетМагазину(Стр + "
//				|EXEC import_setOrderCarsFrom1C @t
//				|", Евген.СоздатьПодключениеКИнтернетМагазину());
//	КонецЕсли;
//	
//	
//	//+++ БАО 26.09.2017 №1868 
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	               |	ЗаборТовара.Номер КАК Номер,
//	               |	ЗаборТовара.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта,
//	               |	ЗаборТовара.ДатаДоставки КАК ДатаДоставки,
//	               |	ЗаборТовара.ТочкаДоставки.Адрес.Наименование КАК АдресДоставки,
//	               |	ЕСТЬNULL(ЗаборТовара.ТочкаДоставки.Москва, ИСТИНА) КАК ЭтоМосква,
//	               |	РейсЗаказы.Ссылка КАК Рейс,
//	               |	ЗаборТовара.Транспорт КАК Транспорт
//	               |ПОМЕСТИТЬ ВТ_ЗаборыСДанными
//	               |ИЗ
//	               |	Документ.Рейс.Заказы КАК РейсЗаказы
//	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
//	               |		ПО РейсЗаказы.Заказ = ЗаборТовара.Ссылка
//	               |ГДЕ
//	               |	РейсЗаказы.УдаленИзРейса = ЛОЖЬ
//	               |	И РейсЗаказы.Ссылка = &Ссылка
//	               |;
//	               |
//	               |////////////////////////////////////////////////////////////////////////////////
//	               |ВЫБРАТЬ
//	               |	ВТ_ЗаборыСДанными.Номер КАК Номер,
//	               |	ПривязкаМашинКРейсамСрезПоследних.Транспорт.НомерГосударственнойРегистрации КАК НомерТранспорта,
//	               |	ВТ_ЗаборыСДанными.ДатаДоставки КАК ДатаДоставки,
//	               |	ВТ_ЗаборыСДанными.АдресДоставки КАК АдресДоставки,
//	               |	ВТ_ЗаборыСДанными.ЭтоМосква КАК ЭтоМосква,
//	               |	ВТ_ЗаборыСДанными.Рейс КАК Рейс
//	               |ИЗ
//	               |	ВТ_ЗаборыСДанными КАК ВТ_ЗаборыСДанными
//	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(
//	               |				,
//	               |				Рейс В
//	               |					(ВЫБРАТЬ
//	               |						ВТ_ЗаборыСДанными.Рейс КАК Рейс
//	               |					ИЗ
//	               |						ВТ_ЗаборыСДанными КАК ВТ_ЗаборыСДанными)) КАК ПривязкаМашинКРейсамСрезПоследних
//	               |		ПО ВТ_ЗаборыСДанными.Рейс = ПривязкаМашинКРейсамСрезПоследних.Рейс
//	               |			И ВТ_ЗаборыСДанными.Транспорт <> ПривязкаМашинКРейсамСрезПоследних.Транспорт";
//	Запрос.УстановитьПараметр("Ссылка", Ссылка);

//	
//	Таб = Запрос.Выполнить().Выгрузить();
//	
//	НачалоСтр = "DECLARE @t TOrderCar   ";
//	Стр = НачалоСтр;                                                                                                                                                                                                                                                           
//	Для Каждого Тек Из Таб Цикл
//		Стр = Стр + "                                                                                                                                                                                                                      
//		|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(Тек.Номер) + ",'" + Тек.НомерТранспорта + "','" + ПараметрыСеанса.ТекущийПользователь + "', '"+mas.ДатаИз1С(Тек.ДатаДоставки, Ложь)+"', " + ?(Тек.АдресДоставки="NULL", "NULL", "'" + СтрЗаменить(Строка(Тек.АдресДоставки), "'", "") + "'") + ?(Тек.ЭтоМосква, ",0", ",1") + ")";
//	КонецЦикла;	
//	
//	Если Стр <> НачалоСтр Тогда	
//		Евген.ЗапросКИнтернетМагазину(Стр + "
//				|EXEC import_setOrderCarsFrom1C @t
//				|", Евген.СоздатьПодключениеКИнтернетМагазину());
//	КонецЕсли;

//	//--- БАО 26.09.2017 №
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	// Вставить содержимое обработчика.
	//Наб = РегистрыСведений.новаЗаданияРейсов.СоздатьНаборЗаписей();
	//Наб.Отбор.Рейс.Установить(РейсМестнойДоставки.Ссылка);
	//Наб.Записать();
	//
	//Наб = РегистрыСведений.новаТочкиМаршрутаРейсов.СоздатьНаборЗаписей();
	//Наб.Отбор.Рейс.Установить(РейсМестнойДоставки.Ссылка);
	//Наб.Записать();
	
КонецПроцедуры

//+++ БАО 09.10.2017 №1932
Процедура ЗафиксироватьИсториюПрикрепленияЗаказаКРейсам() Экспорт 
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Период КАК Период,
	//               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Заказ КАК Заказ,
	//               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Рейс КАК Рейс,
	//               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Транспорт КАК Транспорт,
	//               |	ИсторияПрикрепленияЗаказаКРейсамСрезПоследних.Заказ.ЗонаТарификации.КодТарифа КАК ЗаказЗонаТарификацииКод,
	//               |	ДАТАВРЕМЯ(1, 1, 1) КАК Поле1
	//               |ИЗ
	//               |	РегистрСведений.ИсторияПрикрепленияЗаказаКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ИсторияПрикрепленияЗаказаКРейсамСрезПоследних
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	//               |	ПривязкаМашинКРейсамСрезПоследних.Транспорт.НомерГосударственнойРегистрации КАК ТранспортНомерГосударственнойРегистрации
	//               |ИЗ
	//               |	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ПривязкаМашинКРейсамСрезПоследних
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	РеализацияТоваровУслуг.ЗонаТарификации.КодТарифа КАК ЗонаТарификацииКодТарифа,
	//               |	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	//               |	РеализацияТоваровУслуг.Номер КАК ЗаказНомер,
	//               |	ЕСТЬNULL(новаМестнаяДоставка.ВремяПрибытияПо, ДАТАВРЕМЯ(1, 1, 1)) КАК ВремяПрибытияПо,
	//               |	новаМестнаяДоставка.ТочкаПрибытия.Наименование КАК ТочкаПрибытия,
	//               |	NULL КАК ДатаДоставки
	//               |ИЗ
	//               |	Документ.Рейс.Заказы КАК РейсЗаказы
	//               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//               |			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	//               |			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	//               |		ПО РейсЗаказы.Заказ = РеализацияТоваровУслуг.Ссылка
	//               |ГДЕ
	//               |	РейсЗаказы.Ссылка = &Рейс
	//               |
	//               |ОБЪЕДИНИТЬ ВСЕ
	//               |
	//               |ВЫБРАТЬ
	//               |	ЗаборТовара.ЗонаТарификации.КодТарифа,
	//               |	РейсЗаказы.Заказ,
	//               |	РейсЗаказы.Заказ.Номер,
	//               |	ЗаборТовара.ВремяДоставкиПо,
	//               |	ЗаборТовара.ТочкаДоставки.Наименование,
	//               |	ЗаборТовара.ДатаДоставки
	//               |ИЗ
	//               |	Документ.Рейс.Заказы КАК РейсЗаказы
	//               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаборТовара КАК ЗаборТовара
	//               |		ПО РейсЗаказы.Заказ = ЗаборТовара.Ссылка
	//               |ГДЕ
	//               |	РейсЗаказы.Ссылка = &Рейс";
	//
	//Запрос.УстановитьПараметр("Рейс", Ссылка);
	//
	//Пакет = Запрос.ВыполнитьПакет();
	//
	//ТЗ = Пакет[0].Выгрузить();
	//
	//МассивТранспорт = Пакет[1].Выгрузить();
	//Если МассивТранспорт.Количество() > 0 Тогда
	//	ТранспортСсылка = МассивТранспорт[0].Транспорт;
	//Иначе 
	//	Возврат;
	//КонецЕсли;	
	//
	//КодыТарифа =  Пакет[2].Выгрузить();
	//
	//НачалоСтр = "DECLARE @t TOrderCar   ";
	//Стр = НачалоСтр;
	//
	//Для Каждого СтрокаЗаказ Из Заказы Цикл 
	//	
	//	НайденнаяСтрока = ТЗ.Найти(СтрокаЗаказ.Заказ, "Заказ");
	//	Если НайденнаяСтрока = Неопределено Или (НайденнаяСтрока <> Неопределено И НайденнаяСтрока.Транспорт <> ТранспортСсылка) Тогда
	//		
	//		Менеджер = РегистрыСведений.ИсторияПрикрепленияЗаказаКРейсам.СоздатьМенеджерЗаписи();
	//		Менеджер.Период = ТекущаяДата();
	//		Менеджер.Заказ = СтрокаЗаказ.Заказ;
	//		Менеджер.Рейс = Ссылка;
	//		Менеджер.Транспорт = ТранспортСсылка;
	//		
	//		Менеджер.Записать();
	//		
	//		ДанныеЗаказа = КодыТарифа.Найти(СтрокаЗаказ.Заказ, "Заказ");
	//		
	//		Если ДанныеЗаказа = Неопределено Тогда
	//			Продолжить;
	//		КонецЕсли;	
	//		
	//		Если ТипЗнч(ДанныеЗаказа.Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда
	//			ДанныеЗаказа.ВремяПрибытияПо = ДанныеЗаказа.ДатаДоставки + (ДанныеЗаказа.ВремяПрибытияПо - НачалоДня(ДанныеЗаказа.ВремяПрибытияПо));
	//		КонецЕсли;	
	//			
	//		
	//		ЗонаРайон = Формат(?(ЗначениеЗаполнено(ДанныеЗаказа.ЗонаТарификацииКодТарифа), ДанныеЗаказа.ЗонаТарификацииКодТарифа, 0),"ЧН=0; ЧГ=0" );
	//		
	//		Стр = Стр + "                                                                                                                                                                                                                      
	//		|INSERT INTO @t ([orderID],[car],[who],[deliveryDate],[computedAddress],isRegion) VALUES (" + СокрЛП(ДанныеЗаказа.ЗаказНомер) + ",'" + МассивТранспорт[0].ТранспортНомерГосударственнойРегистрации + "','" + ПараметрыСеанса.ТекущийПользователь + "', '" + mas.ДатаИз1С(ДанныеЗаказа.ВремяПрибытияПо, Ложь)+"', " + ?(ДанныеЗаказа.ТочкаПрибытия="NULL", "NULL", "'" + СтрЗаменить(Строка(ДанныеЗаказа.ТочкаПрибытия), "'", "") + "'") + "," + Строка(ЗонаРайон) + ")";

	//	КонецЕсли;	
	//	
	//КонецЦикла;	
	//
	//		
	//Если Стр <> НачалоСтр Тогда	
	//	Евген.ЗапросКИнтернетМагазину(Стр + "
	//			|EXEC import_setOrderCarsFrom1C @t
	//			|", Евген.СоздатьПодключениеКИнтернетМагазину());
	//КонецЕсли;

	
КонецПроцедуры	
//--- БАО 09.10.2017 №1932 

Процедура СоздатьРейсМестнойДоставки(ЗагруженИзВероут = Ложь) Экспорт
	//Если РейсМестнойДоставки.Пустая() Тогда
	//	нРейс = БизнесПроцессы.новаРейсМестнойДоставки.СоздатьБизнесПроцесс();
	//	нРейс.Дата = ДатаРейса;
	//	нРейс.ДатаНачала = НачалоДня(ДатаРейса) + 32400;
	//	нРейс.ДатаКонца = НачалоДня(ДатаРейса) + 82800;
	//	нРейс.РейсЗагруженИзВероут = ЗагруженИзВероут;
	//	нРейс.Записать();
	//	нРейс.Старт();
	//	
	//	РейсМестнойДоставки = нРейс.Ссылка;
	//	Записать(РежимЗаписиДокумента.Запись);
	//	//
	//	Зап = Новый Запрос;
	//	Зап.Текст = "ВЫБРАТЬ
	//	|	новаЗадачаРейсаМестнойДоставки.Ссылка Как План
	//	|ИЗ
	//	|	Задача.новаЗадачаРейсаМестнойДоставки КАК новаЗадачаРейсаМестнойДоставки
	//	|ГДЕ
	//	|	новаЗадачаРейсаМестнойДоставки.БизнесПроцесс.Ссылка = &Рейс
	//	|	И новаЗадачаРейсаМестнойДоставки.ТочкаМаршрута = ЗНАЧЕНИЕ(справочник.новаэтапыместнойдоставки.планированиеместнойдоставки)
	//	|	И новаЗадачаРейсаМестнойДоставки.Выполнена = ЛОЖЬ";
	//	Зап.УстановитьПараметр("Рейс", нРейс.Ссылка);			
	//	РезЗадач = Зап.Выполнить().Выбрать();
	//	Если РезЗадач.Следующий() Тогда
	//		Задача = РезЗадач.План.ПолучитьОбъект();
	//		Задача.ВыполнитьЗадачу();
	//	КонецеСли;	
	//КонецЕсли;
	
КонецПроцедуры	

Процедура УстановитьЭкипаж(ДанныеЭкипажа, ДатаУстановки) Экспорт
	Наб = РегистрыСведений.ПривязкаМашинКРейсамТест.СоздатьНаборЗаписей();
	Наб.Отбор.Рейс.Установить(Ссылка);
	Наб.Отбор.Период.Установить(ДатаУстановки);
	
	Нов = Наб.Добавить();
	Нов.Период = ДатаУстановки;
	Нов.КтоПривязал = ПараметрыСеанса.ТекущийПользователь;
	Нов.Рейс = Ссылка;
	Нов.Транспорт = ДанныеЭкипажа.Транспорт;
	Нов.Водитель = ДанныеЭкипажа.Водитель;
	Нов.Экспедитор = ДанныеЭкипажа.Экспедитор;
	
	Наб.Записать();
КонецПроцедуры	

Процедура ДобавитьЗаказВРейс(Заказ) Экспорт
	Струк = Новый Структура;
	Струк.Вставить("Заказ", Заказ);
	
	НайденныеСтроки = Заказы.НайтиСтроки(Струк);
	
	Для Сч = 0 По НайденныеСтроки.Количество() - 1 Цикл
		Заказы.Удалить(НайденныеСтроки[Сч]);
	КонецЦикла;	
	
	Нов = Заказы.Добавить();
	Нов.Заказ = Заказ;
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда
		Нов.ВидЗаказа = Перечисления.ВидыЗаказовВероут.COLLECTION;
	ИначеЕсли ТипЗнч(Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда	
		Нов.ВидЗаказа = Перечисления.ВидыЗаказовВероут.DROP;
	КонецеСли;
	
	Записать(РежимЗаписиДокумента.Запись);
	Записать(РежимЗаписиДокумента.Проведение);
	ЗафиксироватьИсториюПрикрепленияЗаказаКРейсам();
КонецПроцедуры	

Процедура УдалитьЗаказИзРейса(Заказ) Экспорт
	Струк = Новый Структура;
	Струк.Вставить("Заказ", Заказ);
	
	НайденныеСтроки = Заказы.НайтиСтроки(Струк);
	
	Для Сч = 0 По НайденныеСтроки.Количество() - 1 Цикл
		Заказы.Удалить(НайденныеСтроки[Сч]);
	КонецЦикла;	
	
	Записать(РежимЗаписиДокумента.Запись);
	Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры	
