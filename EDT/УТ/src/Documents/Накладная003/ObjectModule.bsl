
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
    Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
	
	
	ДатаДанных = Мин(Дата, ДатаЗагрузки);
	
    //Для Каждого Тек Из Заказы Цикл
    //	СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.НомерЗаказа), "ЧГ=") + ",211,'Накладная 003'";
    //	Если lem.СохранитьСтатус(Тек.Заказ, 211, Ссылка) Тогда
    //		Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
    //	КонецеСли;	
    //КонецЦикла;
	
	
	МасП = Новый Массив;
	МасП.Добавить("logist@strizh-logistic.ru");
	МасП.Добавить("sklad1@strizh-logistic.ru");
    //+++++Серегин М.В. 19.01.2016 11:50:49 
    //МасП.Добавить("yuriy.gnedov@strizh-logistic.ru");
    //-----Серегин М.В. 19.01.2016 11:50:50 
	lem.ОтправитьСообщение(МасП, "Акт 003 загружен, можно приступать к распределению маршрутов", "Акт 003 загружен, можно приступать к распределению маршрутов", , "Логистическая компания ""Стриж""") ;
	
	Если Не Отказ Тогда
		ИнформироватьПолучателей();
	КонецеСли;
	
	Возврат;
	Если Смена = Справочники.Смены.Смена1 Тогда
		Мас = Заказы.ВыгрузитьКолонку("Заказ");
		
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		|	СнятиеДоставокСПланированияЗаказы.Ссылка.Номер КАК НомерСнятия,
		|	РеализацияТоваровУслуг.Номер КАК НомерЗаказа,
		|	СнятиеДоставокСПланированияЗаказы.Ссылка.Дата КАК ДатаСнятия
		|ИЗ
		|	Документ.СнятиеДоставокСПланирования_КУдалению.Заказы КАК СнятиеДоставокСПланированияЗаказы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО СнятиеДоставокСПланированияЗаказы.Заказ.Номер = РеализацияТоваровУслуг.Номер
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&Мас)
		|	И СнятиеДоставокСПланированияЗаказы.Ссылка.Проведен = ИСТИНА
		|ИТОГИ ПО
		|	НомерСнятия";
		
		Зап.УстановитьПараметр("Мас", Мас);			
		
		Стр = "";
		
		Рез = Зап.Выполнить();
		
		Если Не Рез.Пустой() Тогда
			Стр = "Приходная накладная 003 № " + СокрЛП(Номер) + " от " + Формат(Дата, "ДЛФ=DD");
			Выб = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Выб.Следующий() Цикл
				Стр = Стр + Символы.ПС + "Снятие доставок с планирования № " + СокрЛП(Выб.НомерСнятия) + " от " + Формат(Выб.ДатаСнятия, "ДЛФ=DD") + ": ";
				ВыбД = Выб.Выбрать();
				Пока ВыбД.Следующий() Цикл
					Стр = Стр + Символы.ПС + Символы.Таб + СокрЛП(ВыбД.НомерЗаказа);
				КонецЦикла;	
			КонецЦикла;	
			
			МасП = Новый Массив;
			//МасП.Добавить("npv@strizh-logistic.ru");
			МасП.Добавить("evgeniy.marochkin@strizh-logistic.ru");
			lem.ОтправитьСообщение(МасП, "Заказы, не найденные, но приехавшие позже (" + ?(Контрагент.Пустая(), "", СокрЛП(Контрагент.Наименование)) + ")", Стр, , "Логистическая компания ""Стриж""") ;		
			
		КонецеСли;
		
		
		Движения.ДоставкиКУдалению003.Записывать = Истина;
		Движения.ДоставкиКУдалению003.Очистить();
		Движения.ДатыДоставок.Записывать = Истина;
		Движения.ДатыДоставок.Очистить();
		Движения.ОткорректированныеЗаказы003ПоНакладным.Записывать = Истина;
		Движения.ОткорректированныеЗаказы003ПоНакладным.Очистить();
		
		
		
		Мас = Заказы.ВыгрузитьКолонку("Заказ");
		
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		|	ДоставкиКУдалению003СрезПоследних.Доставка КАК Доставка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДоставкиКУдалению003.СрезПоследних(&Дата, ) КАК ДоставкиКУдалению003СрезПоследних
		|		ПО РеализацияТоваровУслуг.Номер = ДоставкиКУдалению003СрезПоследних.Доставка.Номер
		|ГДЕ
		|	ДоставкиКУдалению003СрезПоследних.ДатаУдаления <> &ПустаяДата
		|	И РеализацияТоваровУслуг.Ссылка В(&Мас)
		|	И ДоставкиКУдалению003СрезПоследних.Контрагент = &Контрагент";
		Зап.УстановитьПараметр("ПустаяДата", Дата("00010101"));			
		Зап.УстановитьПараметр("Мас", Мас);			
		Зап.УстановитьПараметр("Дата", ДатаДанных);			
		Зап.УстановитьПараметр("Контрагент", Контрагент);			
		Выб = Зап.Выполнить().Выгрузить();
		Для Каждого Тек Из Выб Цикл
			Нов = Движения.ДоставкиКУдалению003.Добавить();
			Нов.Период = ДатаДанных;
			Нов.Доставка = Тек.Доставка;
			Нов.Контрагент = Контрагент;
		КонецЦикла;
		
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		|	Накладная003Заказы.Заказ.Ссылка КАК Реализация,
		|	СнятиеДоставокСПланированияЗаказы.Заказ.Ссылка КАК Доставка,
		|	Накладная003Заказы.Заказ.Номер КАК Номер
		|ИЗ
		|	Документ.Накладная003.Заказы КАК Накладная003Заказы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СнятиеДоставокСПланирования_КУдалению.Заказы КАК СнятиеДоставокСПланированияЗаказы
		|		ПО (ВЫРАЗИТЬ(Накладная003Заказы.Заказ КАК Документ.РеализацияТоваровУслуг).Номер = СнятиеДоставокСПланированияЗаказы.Заказ.Номер)
		|ГДЕ
		|	Накладная003Заказы.Заказ.Дата < &ДатаДоставкиНаЗавтра
		|	И Накладная003Заказы.Ссылка = &Док
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Накладная003Заказы.Заказ.Ссылка,
		|	новаМестнаяДоставка.Ссылка,
		|	Накладная003Заказы.Заказ.Номер
		|ИЗ
		|	Документ.Накладная003.Заказы КАК Накладная003Заказы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
		|		ПО (ВЫРАЗИТЬ(Накладная003Заказы.Заказ КАК Документ.РеализацияТоваровУслуг).Номер = новаМестнаяДоставка.Номер)
		|ГДЕ
		|	Накладная003Заказы.Заказ.Дата МЕЖДУ &НачДата И &КонДата
		|	И Накладная003Заказы.Ссылка = &Док";
		
		Если Смена.Пустая() Или Смена = Справочники.Смены.Смена1 Тогда			
			Зап.УстановитьПараметр("ДатаДоставкиНаЗавтра", НачалоДня(ДатаДанных + 86400));
			ДатаПереноса = ДатаДанных + 86400;
		Иначе
			Зап.УстановитьПараметр("ДатаДоставкиНаЗавтра", НачалоДня(ДатаДанных));
			ДатаПереноса = ДатаДанных;
		КонецеСли;	
		
		Зап.УстановитьПараметр("НачДата", НачалоДня(ДатаДанных));
		Зап.УстановитьПараметр("КонДата", КонецДня(ДатаДанных));
		Зап.УстановитьПараметр("Док", Ссылка);
		Выб = Зап.Выполнить().Выгрузить();
		
		
		МасД = Новый Массив;
		
		Если Выб.Количество() <> 0 Тогда
			Стр = "Приходная накладная 003 № " + СокрЛП(Номер) + " от " + Формат(ДатаДанных, "ДЛФ=DD") + ":";
		Иначе
			Стр = "";
		КонецеСли;	
		
		
		Для Каждого Тек Из Выб Цикл
			Если МасД.Найти(Тек.Доставка) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;	
			Стр = Стр + Символы.ПС + Символы.Таб + СокрЛП(Тек.Номер);
			
			МасД.Добавить(Тек.Доставка);
			
			Нов = Движения.ДатыДоставок.Добавить();
			Нов.Доставка = Тек.Доставка;
			Нов.ДатаДоставки = ДатаПереноса;
			Нов.Период = ДатаДанных;
			
			Нов = Движения.ОткорректированныеЗаказы003ПоНакладным.Добавить();
			Нов.Доставка = Тек.Доставка;
			Нов.ДатаДоставки = ДатаПереноса;
			Нов.Период = ДатаДанных;
			
			Д = Тек.Доставка.ПолучитьОбъект();
			Д.Дата = ДатаПереноса;
			
			ЧН = Час(Д.ВремяОтправленияС);
			ЧК = Час(Д.ВремяОтправленияПо);
			
			МН = Минута(Д.ВремяОтправленияС);
			МК = Минута(Д.ВремяОтправленияПо);
			
			ЧН_ = Час(Д.ВремяПрибытияС);
			ЧК_ = Час(Д.ВремяПрибытияПо);
			
			МН_ = Минута(Д.ВремяПрибытияС);
			МК_ = Минута(Д.ВремяПрибытияПо);
			
			
			Д.ВремяОтправленияС = Дата(Формат(Год(ДатаПереноса), "ЧГ=") + Формат(Месяц(ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН, "ЧЦ=2; ЧВН=; ЧГ=") + Формат(МН, "ЧЦ=2; ЧВН=; ЧГ=") + "00");
			Д.ВремяОтправленияПо = Дата(Формат(Год(ДатаПереноса), "ЧГ=") + Формат(Месяц(ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК, "ЧЦ=2; ЧВН=; ЧГ=") + Формат(МК, "ЧЦ=2; ЧВН=; ЧГ=") + "00");
			
			Д.ВремяПрибытияС = Дата(Формат(Год(ДатаПереноса), "ЧГ=") + Формат(Месяц(ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧН_, "ЧЦ=2; ЧВН=; ЧГ=") + Формат(МН_, "ЧЦ=2; ЧВН=; ЧГ=") + "00");
			Д.ВремяПрибытияПо = Дата(Формат(Год(ДатаПереноса), "ЧГ=") + Формат(Месяц(ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(День(ДатаПереноса), "ЧЦ=2; ЧВН=; ЧГ=") + Формат(ЧК_, "ЧЦ=2; ЧВН=; ЧГ=") + Формат(МК_, "ЧЦ=2; ЧВН=; ЧГ=") + "00");
			
			Д.Записать();
			
			УстановитьДатуВАдминке(Тек.Номер, ДатаПереноса);
			УстановитьСтатусСтрижаВАдминке(Тек.Номер);
			Если ЗначениеЗаполнено(Тек.Реализация) Тогда
				Док = Тек.Реализация.ПолучитьОбъект();
				Док.Дата = ДатаПереноса;
				Док.Записать(РежимЗаписиДокумента.Запись);
				Если Док.Проведен Тогда
					Док.Записать(РежимЗаписиДокумента.Проведение);
				КонецеСли;	
			КонецеСли;
		КонецЦикла;	
		
		Если Выб.Количество() <> 0 Тогда
			МасП = Новый Массив;
			//МасП.Добавить("npv@strizh-logistic.ru");
			МасП.Добавить("evgeniy.marochkin@strizh-logistic.ru");
			lem.ОтправитьСообщение(МасП, "Заказы, восстановленные к планированию (" + ?(Контрагент.Пустая(), "", СокрЛП(Контрагент.Наименование)) + ")", Стр, , "Логистическая компания ""Стриж""") ;		
		КонецеСли;	
	Иначе
		
    КонецеСли;
	
КонецПроцедуры

Процедура УстановитьДатуВАдминке(НомерЗ, ДатаЗ)
	Попытка
		ПодключениеКМагазину = Евген.СоздатьПодключениеКИнтернетМагазину(); 
	Исключение
		НормальныйХодВыполнения = Ложь;
		Возврат;
	КонецПопытки;
	Ткст = "
	|UPDATE _order
	|SET DeliveryDate = '" + Евген.ДатаВSQL(ДатаЗ, Ложь) + "'
	| WHERE orderId = " + Формат(НомерЗ, "ЧГ=") + "
	|EXEC mp_saveOrderHistory " + Формат(НомерЗ, "ЧГ=");
	Евген.ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
    
    ////Серегин М.В. 30.07.2015 17:42:10 старый код
    //Ткст = "
    //|UPDATE _order
    //|SET carid = 0
    //| WHERE orderId = " + Формат(НомерЗ, "ЧГ=") + "
    //|EXEC mp_saveOrderHistory " + Формат(НомерЗ, "ЧГ=");
    //Евген.ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
    ////Серегин М.В. 30.07.2015 17:42:16 новый
    Ткст = "
	|EXEC p1c_removeCarriageFromOrder " + Формат(НомерЗ, "ЧГ=") + "
	|EXEC mp_saveOrderHistory " + Формат(НомерЗ, "ЧГ=");
	Евген.ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
    //Серегин М.В. 30.07.2015 17:42:18 
	
КонецПроцедуры	


Процедура УстановитьСтатусСтрижаВАдминке(НомерЗ)
	Попытка
		ПодключениеКМагазину = Евген.СоздатьПодключениеКИнтернетМагазину(); 
	Исключение
		НормальныйХодВыполнения = Ложь;
		Возврат;
	КонецПопытки;
	Ткст = "
	|UPDATE _order
	|SET Status = 2
	| WHERE orderId = " + Формат(НомерЗ, "ЧГ=") + "
	|EXEC mp_saveOrderHistory " + Формат(НомерЗ, "ЧГ=");
	Евген.ЗапросКИнтернетМагазину(Ткст, ПодключениеКМагазину);
КонецПроцедуры	

Процедура ИнформироватьПолучателей() Экспорт 
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	СменыПочтовыеАдреса.Адрес КАК Адрес
	            |ИЗ
	            |	Справочник.Смены.ПочтовыеАдреса КАК СменыПочтовыеАдреса
	            |ГДЕ
	            |	СменыПочтовыеАдреса.ИнформироватьОПриходеНакладной = ИСТИНА
	            |	И СменыПочтовыеАдреса.Ссылка.Ссылка = &Смена
	            |
	            |УПОРЯДОЧИТЬ ПО
	            |	Адрес";
	
	Зап.УстановитьПараметр("Смена", Смена.Ссылка);
	Таб = Зап.Выполнить().Выгрузить();
	
	МасП = Таб.ВыгрузитьКолонку("Адрес");
	
	Если масП.Количество() = 0 Тогда
		Возврат;
	КонецеСли;	
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	
	СхемаКомпоновкиДанных = ПолучитьМакет("МакетНакладной");
	СтруктураВариантов = Новый Структура;
	пВарианты = СхемаКомпоновкиДанных.ВариантыНастроек;
	Для Каждого пЭл ИЗ пВарианты Цикл
		СтруктураВариантов.Вставить(пЭл.Имя,пЭл.Настройки);
	КонецЦикла;
	КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураВариантов.Основной);
	
	//КомпоновщикНастроек.Настройки.параметрыданных.Элементы[2].Значение = Период;
	//КомпоновщикНастроек.Настройки.параметрыданных.Элементы[2].использование = Истина;
	
	КомпоновщикНастроек.Настройки.отбор.элементы[0].ПравоеЗначение = Ссылка;
	КомпоновщикНастроек.Настройки.отбор.элементы[0].ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КомпоновщикНастроек.Настройки.отбор.элементы[0].Использование = Истина;
	
	Настройки = КомпоновщикНастроек.Настройки;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки);	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,, Истина);
	
	Результат = Новый ТабличныйДокумент;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Г = Новый УникальныйИдентификатор;
	ПутьКФайлу = КаталогВременныхФайлов() +  "\" + Формат(ТекущаяДата(), "ДФ=yyyy-MM-dd") + "_" + "список заказов" + ".xls";
	Результат.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLS);
	
 	Отпр = lem.ОтправитьСообщение(МасП, "Список заказов электронной накладной", "Список заказов электронной накладной", ПутьКФайлу, "Логистическая компания ""Стриж""") ;

КонецПроцедуры	

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	
    //Серегин М.В. 18.05.2015 18:20:05 
    НайденыйДокумент = Документы.ПриходЗаказовНаСклад.НайтиПоРеквизиту("Основание",ЭтотОбъект.Ссылка);
    Если ЗначениеЗаполнено(НайденыйДокумент) Тогда
        ДокументПриходЗаказовНаСклад = НайденыйДокумент.ПолучитьОбъект();
        ДокументПриходЗаказовНаСклад.Заполнить(ЭтотОбъект.Ссылка);
        ДокументПриходЗаказовНаСклад.Записать();
		ДокументПриходЗаказовНаСклад.Записать(РежимЗаписиДокумента.Проведение);
    Иначе
        ДокументПриходЗаказовНаСклад = Документы.ПриходЗаказовНаСклад.СоздатьДокумент();
        ДокументПриходЗаказовНаСклад.Заполнить(ЭтотОбъект.Ссылка);
        ДокументПриходЗаказовНаСклад.Записать(РежимЗаписиДокумента.Запись);
		ДокументПриходЗаказовНаСклад.Записать(РежимЗаписиДокумента.Проведение);
    КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Заказы.Количество() Тогда				
	    Если ТипЗнч(Заказы[0].Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда			
			ТерминалПриема   = Заказы[0].Заказ.ТерминалПриема;
			ТерминалДоставки = Заказы[0].Заказ.ТерминалДоставки;			
		КонецЕсли;		
	КонецЕсли;
		
	
КонецПроцедуры



