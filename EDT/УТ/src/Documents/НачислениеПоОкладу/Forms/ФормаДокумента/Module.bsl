
&НаСервере
Процедура ЗаполнитьНаСервере()

//Миго-групп

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(РегламентированныйПроизводственныйКалендарь.КалендарныеДни) КАК КалендарныеДни
	               |ПОМЕСТИТЬ втКолРабочихДнейЗаПериод
	               |ИЗ
	               |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	               |ГДЕ
	               |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И (РегламентированныйПроизводственныйКалендарь.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	               |			ИЛИ РегламентированныйПроизводственныйКалендарь.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МетодикаРасчетаЗППоФизЛицамСрезПоследних.ФизЛицо КАК Сотрудник,
	               |	МетодикаРасчетаЗППоФизЛицамСрезПоследних.ОкладСумма КАК Оклад
	               |ПОМЕСТИТЬ втДанныеОклад
	               |ИЗ
	               |	РегистрСведений.МетодикаРасчетаЗППоФизЛицам.СрезПоследних(
	               |			&КонецПериода,
	               |			ОкладСумма <> 0
	               |				И Оклад = ИСТИНА) КАК МетодикаРасчетаЗППоФизЛицамСрезПоследних
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РаботникиОрганизации.Сотрудник КАК Сотрудник,
	               |	МАКСИМУМ(РаботникиОрганизации.Период) КАК Период
	               |ПОМЕСТИТЬ вр_РаботникиОрганизации
	               |ИЗ
	               |	РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РаботникиОрганизации.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вр_РаботникиОрганизации.Сотрудник КАК Сотрудник,
	               |	вр_РаботникиОрганизации.Период КАК Период,
	               |	РаботникиОрганизации.Организация КАК Организация,
	               |	РаботникиОрганизации.Состояние КАК Состояние,
	               |	РаботникиОрганизации.Должность КАК Должность
	               |ПОМЕСТИТЬ втРаботники
	               |ИЗ
	               |	вр_РаботникиОрганизации КАК вр_РаботникиОрганизации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	               |		ПО вр_РаботникиОрганизации.Сотрудник = РаботникиОрганизации.Сотрудник
	               |			И вр_РаботникиОрганизации.Период = РаботникиОрганизации.Период
	               |ГДЕ
	               |	НЕ РаботникиОрганизации.Регистратор ССЫЛКА Документ.УвольнениеСРаботыИзОрганизация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втРаботники.Сотрудник КАК Сотрудник,
	               |	втРаботники.Должность КАК Должность,
	               |	втКолРабочихДнейЗаПериод.КалендарныеДни КАК КалендарныеДни,
	               |	втДанныеОклад.Оклад КАК Оклад,
	               |	втРаботники.Организация КАК Организация
	               |ПОМЕСТИТЬ втРаботникиВодительЗаборщик
	               |ИЗ
	               |	втДанныеОклад КАК втДанныеОклад
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втРаботники КАК втРаботники
	               |		ПО (втРаботники.Сотрудник = втДанныеОклад.Сотрудник),
	               |	втКолРабочихДнейЗаПериод КАК втКолРабочихДнейЗаПериод
	               |ГДЕ
	               |	втРаботники.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ВодительЗаборщик)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗакрытиеЗаказовЗаказы.Ссылка КАК Ссылка,
	               |	ЗакрытиеЗаказовЗаказы.НомерСтроки КАК НомерСтроки,
	               |	ЗакрытиеЗаказовЗаказы.Реализация КАК Заказ,
	               |	ЗакрытиеЗаказовЗаказы.Ссылка.ДатаЗакрытия КАК ДатаЗаказа,
	               |	ЗакрытиеЗаказовЗаказы.Водитель КАК Сотрудник
	               |ПОМЕСТИТЬ втЗаказы
	               |ИЗ
	               |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	               |ГДЕ
	               |	ЗакрытиеЗаказовЗаказы.Ссылка.ДатаЗакрытия МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И ЗакрытиеЗаказовЗаказы.Водитель <> ЗНАЧЕНИЕ(Справочник.новаВодители.ПустаяСсылка)
	               |	И ЗакрытиеЗаказовЗаказы.Ссылка.ТерминалДоставки = &Терминал
	               |	И (ЗакрытиеЗаказовЗаказы.Закрыть
	               |			ИЛИ ЗакрытиеЗаказовЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносСЗаездом))
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗакрытиеЗаказовЗаказы.Ссылка,
	               |	ЗакрытиеЗаказовЗаказы.НомерСтроки,
	               |	ЗакрытиеЗаказовЗаказы.Реализация,
	               |	ЗакрытиеЗаказовЗаказы.Ссылка.ДатаЗакрытия,
	               |	ЗакрытиеЗаказовЗаказы.Экспедитор
	               |ИЗ
	               |	Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
	               |ГДЕ
	               |	ЗакрытиеЗаказовЗаказы.Ссылка.ДатаЗакрытия МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И ЗакрытиеЗаказовЗаказы.Экспедитор <> ЗНАЧЕНИЕ(Справочник.новаЭкспедиторы.ПустаяСсылка)
	               |	И ЗакрытиеЗаказовЗаказы.Ссылка.ТерминалДоставки = &Терминал
	               |	И (ЗакрытиеЗаказовЗаказы.Закрыть
	               |			ИЛИ ЗакрытиеЗаказовЗаказы.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносСЗаездом))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втЗаказы.Ссылка КАК Ссылка,
	               |	втЗаказы.Сотрудник КАК Сотрудник,
	               |	НАЧАЛОПЕРИОДА(втЗаказы.ДатаЗаказа, ДЕНЬ) КАК ФактДниОтработанные
	               |ПОМЕСТИТЬ втОтработаноДоки
	               |ИЗ
	               |	втЗаказы КАК втЗаказы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втОтработаноДоки.Сотрудник КАК Сотрудник,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втОтработаноДоки.ФактДниОтработанные) КАК ФактДниОтработанные
	               |ПОМЕСТИТЬ втОтработано
	               |ИЗ
	               |	втОтработаноДоки КАК втОтработаноДоки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втОтработаноДоки.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втРаботникиВодительЗаборщик.Сотрудник КАК ФизЛицо,
	               |	втРаботникиВодительЗаборщик.Должность КАК Должность,
	               |	втРаботникиВодительЗаборщик.КалендарныеДни КАК КалендарныеДни,
	               |	втРаботникиВодительЗаборщик.Оклад КАК Оклад,
	               |	втОтработано.ФактДниОтработанные КАК ОтработаноДней,
	               |	втРаботникиВодительЗаборщик.Оклад / втРаботникиВодительЗаборщик.КалендарныеДни * втОтработано.ФактДниОтработанные КАК мгНачислениеЗаОсновнуюРаботу,
	               |	втРаботникиВодительЗаборщик.Организация КАК Организация
	               |ИЗ
	               |	втРаботникиВодительЗаборщик КАК втРаботникиВодительЗаборщик
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОтработано КАК втОтработано
	               |		ПО втРаботникиВодительЗаборщик.Сотрудник = втОтработано.Сотрудник
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	втРаботникиВодительЗаборщик.Сотрудник.Наименование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ втДанныеОклад
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ втРаботникиВодительЗаборщик";
	
	Запрос.УстановитьПараметр("НачалоПериода", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.ПериодРегистрации));
	//Запрос.УстановитьПараметр("Организация", Объект.мгОрганизация);
	Запрос.УстановитьПараметр("Терминал", Объект.мгТерминал);
	//Запрос.УстановитьПараметр("Период", КонецДня(Объект.Дата));
	
	Объект.ФизЛица.Загрузить(Запрос.Выполнить().Выгрузить());
//Миго-групп	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если Объект.ФизЛица.Количество() <> 0 тогда
		От = Вопрос("Табличная часть не пуста. При заполнении она будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если От = КодВозвратаДиалога.Да Тогда
			Объект.ФизЛица.Очистить();
		Иначе
			Возврат;
		КонецеСли;	
	КонецеСли;	
	
	Если Объект.КоличествоРабочихДнейПоГрафику = 0 Тогда
		Сообщить("Укажите количество рабочих дней по графику!", СтатусСообщения.Важное);
		ЭтаФорма.ТекущийЭлемент = Элементы.КоличествоРабочихДнейПоГрафику;
		Возврат;
	КонецЕсли;	
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.КоличествоРабочихДнейПоГрафику = 0 Тогда
		Сообщить("Укажите количество рабочих дней по графику!");
		Отказ = Истина;
		Возврат;
	КонецЕСли;

	Объект.мгОтветственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");

КонецПроцедуры

// +++ Миго-групп 27.04.2017
&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(МесяцСтрока, Объект.ПериодРегистрации);
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
	ЗаполнитьКоличествоРабочихДней();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Объект.ПериодРегистрации = ДобавитьМесяц(Объект.ПериодРегистрации, Направление);
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
	ЗаполнитьКоличествоРабочихДней();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	//РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	//РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.ПериодРегистрации = НачалоМесяца(Объект.Дата);
		ЗаполнитьКоличествоРабочихДней();		
	КонецЕсли;
	
	// Заполним реквизит формы МесяцСтрока.
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоличествоРабочихДней()
	
	//Заполним КоличествоРабочихДнейПоГрафику: Рабочий день+Предпраздничный
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(РегламентированныйПроизводственныйКалендарь.КалендарныеДни) КАК КалендарныеДни
	               |ИЗ
	               |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	               |ГДЕ
	               |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И (РегламентированныйПроизводственныйКалендарь.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	               |			ИЛИ РегламентированныйПроизводственныйКалендарь.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный))";
	
	Запрос.УстановитьПараметр("ДатаНачала", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Объект.ПериодРегистрации));
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Объект.КоличествоРабочихДнейПоГрафику = Результат.КалендарныеДни;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, Объект.ПериодРегистрации, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицаФизЛицоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ФизЛица.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ФизЛицо) Тогда
		ДанныеСотрудника = мгДоработки.ПолучитьОрганизациюСотрудника(ТекущиеДанные.ФизЛицо);
		Если ДанныеСотрудника.Количество() = 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Сотрудник не принят ни в одну организацию";
			Сообщение.Сообщить();
		ИначеЕсли ДанныеСотрудника.Количество() > 1 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Сотрудник принят в несколько организаций, необходимо выбрать организацию сотрудника";
			Сообщение.Сообщить();
		Иначе
			ТекущиеДанные.Организация = ДанныеСотрудника[0].Организация;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
// --- Миго-групп 27.04.2017
