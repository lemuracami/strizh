
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Дата = ТекущаяДата();
	Иначе
		Если baoВызовСервера.РейсЗакрыт(Объект.Ссылка) Тогда
			ТолькоПросмотр = Истина;
			Элементы.ДекорацияТолькоЧтение.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	РежимФорма3 = Объект.СпособВнесенияДокумента = Перечисления.зпСпособыВнесенияДокументаКорректировкиЗП.ОтчетФорма3;
	Элементы.ГруппаФорма3.Видимость = РежимФорма3;
	
	РежимФорма2_ВремяУчетное = Объект.СпособВнесенияДокумента = Перечисления.зпСпособыВнесенияДокументаКорректировкиЗП.ОтчетФорма2_ВремяУчетное;
	РежимФорма2_УчетныйПробег = Объект.СпособВнесенияДокумента = Перечисления.зпСпособыВнесенияДокументаКорректировкиЗП.ОтчетФорма2_УчетныйПробег;
	РежимФорма2_ПробегЗаМКАД = Объект.СпособВнесенияДокумента = Перечисления.зпСпособыВнесенияДокументаКорректировкиЗП.ОтчетФорма2_ПробегЗаМКАД;
	//Асеев 27.05.2024 (Задача № 5275)>>>
	РежимФорма2_ОтменаНачисленияМинимальнойСтавки = Объект.СпособВнесенияДокумента = Перечисления.зпСпособыВнесенияДокументаКорректировкиЗП.ОтчетФорма2_ОтменаНачисленияМинимальнойСтавки;
	//Асеев 27.05.2024 (Задача № 5275)<<<
	
	Элементы.ГруппаФорма2.Видимость =  РежимФорма2_ВремяУчетное Или РежимФорма2_УчетныйПробег Или РежимФорма2_ПробегЗаМКАД Или РежимФорма2_ОтменаНачисленияМинимальнойСтавки;
	Элементы.ВремяРаботыУчетное.Видимость = РежимФорма2_ВремяУчетное;
	Элементы.ПробегУчетный.Видимость = РежимФорма2_УчетныйПробег;
	Элементы.ПробегЗаМКАД.Видимость = РежимФорма2_ПробегЗаМКАД;
	//Асеев 27.05.2024 (Задача № 5275)>>>
	Элементы.ОтменаНачисленияМинимальнойСтавки.Видимость = РежимФорма2_ОтменаНачисленияМинимальнойСтавки;
	//Асеев 27.05.2024 (Задача № 5275)<<<
	
	Если РежимФорма3 Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СхемаРасчета", Объект.СхемаРасчетаЗП);
		Запрос.УстановитьПараметр("ТипЗаказа", Объект.ТипЗаказа);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	зпКатегорииЗаказов.Наименование КАК Наименование,
		|	зпКатегорииЗаказов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.зпСхемыРасчетаЗП.СхемыКатегорийЗаказов КАК зпСхемыРасчетаЗПСхемыКатегорийЗаказов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.зпКатегорииЗаказов КАК зпКатегорииЗаказов
		|		ПО (зпСхемыРасчетаЗПСхемыКатегорийЗаказов.Ссылка = &СхемаРасчета)
		|			И (зпСхемыРасчетаЗПСхемыКатегорийЗаказов.ТипЗаказа = &ТипЗаказа)
		|			И зпСхемыРасчетаЗПСхемыКатегорийЗаказов.СхемаКатегорий = зпКатегорииЗаказов.Владелец
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	зпЗоныДоставки.Наименование КАК Наименование,
		|	зпЗоныДоставки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.зпСхемыРасчетаЗП.СхемыЗонДоставки КАК зпСхемыРасчетаЗПСхемыЗонДоставки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.зпЗоныДоставки КАК зпЗоныДоставки
		|		ПО (зпСхемыРасчетаЗПСхемыЗонДоставки.Ссылка = &СхемаРасчета)
		|			И (зпСхемыРасчетаЗПСхемыЗонДоставки.ТипЗаказа = &ТипЗаказа)
		|			И зпСхемыРасчетаЗПСхемыЗонДоставки.СхемаЗон = зпЗоныДоставки.Владелец
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
		
		РезультатПакета = Запрос.ВыполнитьПакет();
		
		Элементы.КатегорияЗаказа.СписокВыбора.ЗагрузитьЗначения(РезультатПакета[0].Выгрузить().ВыгрузитьКолонку("Ссылка"));
		Элементы.ЗонаДоставки.СписокВыбора.ЗагрузитьЗначения(РезультатПакета[1].Выгрузить().ВыгрузитьКолонку("Ссылка"));
		
	ИначеЕсли РежимФорма2_ВремяУчетное Тогда
		ВремяРаботыУчетное = ЧасыССотымиВЧасыСМинутами(Объект.ЧасовОтработаноФактически);
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСуммуРасчетаЗПНаСервере()
	
	Объект.ФормированиеДвижений_зпИсходныеДанныеРасчетаЗППоЗаказам = Истина;

	Если Объект.УровеньОбслуживанияЗаказа = Перечисления.УровниОбслуживания.СтандартныйУровень Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СхемаРасчетаЗП", Объект.СхемаРасчетаЗП);
		Запрос.УстановитьПараметр("ТарифРасчетаЗП", Объект.ТарифРасчетаЗП);
		Запрос.УстановитьПараметр("Роль", Объект.Роль);
		Запрос.УстановитьПараметр("ОсновноеНачисление", Объект.ОсновноеНачисление);
		Запрос.УстановитьПараметр("СоставЭкипажа", Объект.СоставЭкипажа);
		Запрос.УстановитьПараметр("ТипЗаказа", Объект.ТипЗаказа);
		Запрос.УстановитьПараметр("КатегорияЗаказа", Объект.КатегорияЗаказа);
		Запрос.УстановитьПараметр("ЗонаДоставки", Объект.ЗонаДоставки);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	зпТарификацияЗППоЗаказам.Тариф КАК Тариф
		|ИЗ
		|	РегистрСведений.зпТарификацияЗППоЗаказам КАК зпТарификацияЗППоЗаказам
		|ГДЕ
		|	зпТарификацияЗППоЗаказам.СхемаРасчетаЗП = &СхемаРасчетаЗП
		|	И зпТарификацияЗППоЗаказам.ТарифРасчетаЗП = &ТарифРасчетаЗП
		|	И зпТарификацияЗППоЗаказам.Роль = &Роль
		|	И зпТарификацияЗППоЗаказам.ОсновноеНачисление = &ОсновноеНачисление
		|	И зпТарификацияЗППоЗаказам.СоставЭкипажа = &СоставЭкипажа
		|	И зпТарификацияЗППоЗаказам.ТипЗаказа = &ТипЗаказа
		|	И зпТарификацияЗППоЗаказам.КатегорияЗаказа = &КатегорияЗаказа
		|	И зпТарификацияЗППоЗаказам.ЗонаДоставки = &ЗонаДоставки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		Объект.СуммаРасчетаЗП = Выборка.Тариф;
	Иначе
		Объект.СуммаРасчетаЗП = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КатегорияЗаказаПриИзменении(Элемент)
	
	РассчитатьСуммуРасчетаЗПНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗонаДоставкиПриИзменении(Элемент)
	
	РассчитатьСуммуРасчетаЗПНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновноеНачислениеПриИзменении(Элемент)
	
	РассчитатьСуммуРасчетаЗПНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОповеститьОЗаписиНового(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолигонМаршрутизацииСоСложнойПарковкойПриИзменении(Элемент)
	
	Объект.ФормированиеДвижений_зпИсходныеДанныеРасчетаЗППоЗаказам = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаРасчетаЗППриИзменении(Элемент)
	
	Объект.ФормированиеДвижений_зпИсходныеДанныеРасчетаЗППоЗаказам = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЧасыССотымиВЧасыСМинутами(Знач ЧасыССотыми)
	
	Если ЧасыССотыми Тогда
		Часы = Цел(ЧасыССотыми);
		Возврат Часы + (ЧасыССотыми - Часы) * 0.6;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЧасыСМинутамиВЧасыССотыми(Знач ЧасыСМинутами)
	
	Если ЧасыСМинутами Тогда
		Часы = Цел(ЧасыСМинутами);
		Возврат Часы + (ЧасыСМинутами - Часы) / 0.6;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ВремяРаботыУчетноеПриИзмененииНаСервере()
	
	Модифицированность = Истина;
	Объект.ФормированиеДвижений_зпИсходныеДанныеРасчетаЗПЧасы = Истина;
	
	//проверяем формат
	КоличествоЧасов = Цел(ВремяРаботыУчетное);
	Остаток = ВремяРаботыУчетное - КоличествоЧасов;
	Если Остаток Тогда
		Если Остаток > 0.59 Тогда
			Остаток = 0.59;
			ВремяРаботыУчетное = КоличествоЧасов + Остаток;
		КонецЕсли;
		//проверка до минуты?
	КонецЕсли;
	Объект.ЧасовОтработаноФактически = ЧасыСМинутамиВЧасыССотыми(ВремяРаботыУчетное);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЧасовОтработаноФактически", Объект.ЧасовОтработаноФактически);
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", Объект.СхемаРасчетаЗП);
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", Объект.ТарифРасчетаЗП);
	Запрос.УстановитьПараметр("ОсновноеНачисление", Объект.ОсновноеНачисление);
	Запрос.УстановитьПараметр("Роль", Объект.Роль);
	Запрос.УстановитьПараметр("СоставЭкипажа", Объект.СоставЭкипажа);
	Запрос.УстановитьПараметр("ТаблицаНачислений", Объект.НовыеРасчетныеДанные_зпИсходныеДанныеРасчетаЗПЧасы.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаНачислений.Начисление КАК Справочник.зпНачисления) КАК Начисление,
	|	ТаблицаНачислений.ЧасовОтработано КАК ЧасовОтработано,
	|	ТаблицаНачислений.СуммаОплаты КАК СуммаОплаты,
	|	ТаблицаНачислений.БрейкЧасовПереработки КАК БрейкЧасовПереработки,
	|	ТаблицаНачислений.ЧасовПереработки КАК ЧасовПереработки,
	|	ТаблицаНачислений.ВремяНачалаСобытия КАК ВремяНачалаСобытия,
	|	ТаблицаНачислений.ВремяОкончанияСобытия КАК ВремяОкончанияСобытия,
	|	ТаблицаНачислений.СтоимостьЧаса КАК СтоимостьЧаса,
	|	ТаблицаНачислений.СтоимостьСмены КАК СтоимостьСмены,
	|	ТаблицаНачислений.ВремяПечатиМЛ КАК ВремяПечатиМЛ
	|ПОМЕСТИТЬ ВТ_Начисления
	|ИЗ
	|	&ТаблицаНачислений КАК ТаблицаНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЗ_Расчет.Начисление, ВТ_Начисления.Начисление) КАК Начисление,
	|	&ЧасовОтработаноФактически КАК ЧасовОтработаноФактически,
	|	ЕСТЬNULL(ВЗ_Расчет.ЧасовОтработано, ВТ_Начисления.ЧасовОтработано) КАК ЧасовОтработано,
	|	ЕСТЬNULL(ВЗ_Расчет.СуммаОплаты, ВТ_Начисления.СуммаОплаты) КАК СуммаОплаты,
	|	ЕСТЬNULL(ВЗ_Расчет.БрейкЧасовПереработки, ВТ_Начисления.БрейкЧасовПереработки) КАК БрейкЧасовПереработки,
	|	ЕСТЬNULL(ВЗ_Расчет.ЧасовПереработки, ВТ_Начисления.ЧасовПереработки) КАК ЧасовПереработки,
	|	ВТ_Начисления.ВремяНачалаСобытия КАК ВремяНачалаСобытия,
	|	ВТ_Начисления.ВремяОкончанияСобытия КАК ВремяОкончанияСобытия,
	|	ЕСТЬNULL(ВЗ_Расчет.СтоимостьЧаса, ВТ_Начисления.СтоимостьЧаса) КАК СтоимостьЧаса,
	|	ЕСТЬNULL(ВЗ_Расчет.СтоимостьСмены, ВТ_Начисления.СтоимостьСмены) КАК СтоимостьСмены,
	|	ВТ_Начисления.ВремяПечатиМЛ КАК ВремяПечатиМЛ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Начисление КАК Начисление,
	|		ВложенныйЗапрос.СпособРасчета КАК СпособРасчета,
	|		ВЫБОР
	|			КОГДА ВложенныйЗапрос.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.зпСпособыРасчетаНачислений.СтавкаЗаЧас)
	|				ТОГДА ВложенныйЗапрос.СтавкаЗаЧас
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СтоимостьЧаса,
	|		ВЫБОР
	|			КОГДА ВложенныйЗапрос.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.зпСпособыРасчетаНачислений.СтавкаЗаЧас)
	|				ТОГДА 0
	|			ИНАЧЕ ВложенныйЗапрос.СтавкаЗаСмену
	|		КОНЕЦ КАК СтоимостьСмены,
	|		ВЫБОР
	|			КОГДА ВложенныйЗапрос.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.зпСпособыРасчетаНачислений.СтавкаЗаЧас)
	|				ТОГДА &ЧасовОтработаноФактически + ВложенныйЗапрос.ДобавляемоеКоличествоЧасов
	|			ИНАЧЕ &ЧасовОтработаноФактически
	|		КОНЕЦ КАК ЧасовОтработано,
	|		NULL КАК ЧасовПереработки,
	|		ВЫБОР
	|			КОГДА ВложенныйЗапрос.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.зпСпособыРасчетаНачислений.СтавкаЗаЧас)
	|				ТОГДА ВЫРАЗИТЬ((&ЧасовОтработаноФактически + ВложенныйЗапрос.ДобавляемоеКоличествоЧасов) * ВложенныйЗапрос.СтавкаЗаЧас КАК ЧИСЛО(15, 0))
	|			ИНАЧЕ ВложенныйЗапрос.СтавкаЗаСмену
	|		КОНЕЦ КАК СуммаОплаты,
	|		NULL КАК БрейкЧасовПереработки
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(зпСтавкиОплатыПоНачислениям.ДобавляемоеКоличествоЧасов) КАК ДобавляемоеКоличествоЧасов,
	|			МАКСИМУМ(зпСтавкиОплатыПоНачислениям.СтавкаЗаЧас) КАК СтавкаЗаЧас,
	|			МАКСИМУМ(зпСтавкиОплатыПоНачислениям.СтавкаЗаСмену) КАК СтавкаЗаСмену,
	|			зпСтавкиОплатыПоНачислениям.Начисление КАК Начисление,
	|			зпСтавкиОплатыПоНачислениям.Начисление.СпособРасчета КАК СпособРасчета
	|		ИЗ
	|			РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям
	|		ГДЕ
	|			зпСтавкиОплатыПоНачислениям.СхемаРасчетаЗП = &СхемаРасчетаЗП
	|			И зпСтавкиОплатыПоНачислениям.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|			И зпСтавкиОплатыПоНачислениям.ОсновноеНачисление = &ОсновноеНачисление
	|			И зпСтавкиОплатыПоНачислениям.Начисление = &ОсновноеНачисление
	|			И зпСтавкиОплатыПоНачислениям.Роль = &Роль
	|			И зпСтавкиОплатыПоНачислениям.СоставЭкипажа = &СоставЭкипажа
	|		
	|		СГРУППИРОВАТЬ ПО
	|			зпСтавкиОплатыПоНачислениям.Начисление,
	|			зпСтавкиОплатыПоНачислениям.Начисление.СпособРасчета) КАК ВложенныйЗапрос
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВложенныйЗапрос.Начисление,
	|		ВложенныйЗапрос.СпособРасчета,
	|		ВложенныйЗапрос.СтавкаЗаЧас,
	|		NULL,
	|		&ЧасовОтработаноФактически + ВложенныйЗапрос.ДобавляемоеКоличествоЧасов,
	|		ВЫБОР
	|			КОГДА &ЧасовОтработаноФактически + ВложенныйЗапрос.ДобавляемоеКоличествоЧасов - ВложенныйЗапрос.ЗначениеОт > 0
	|				ТОГДА &ЧасовОтработаноФактически + ВложенныйЗапрос.ДобавляемоеКоличествоЧасов - ВложенныйЗапрос.ЗначениеОт
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &ЧасовОтработаноФактически + ВложенныйЗапрос.ДобавляемоеКоличествоЧасов - ВложенныйЗапрос.ЗначениеОт > 0
	|				ТОГДА ВЫРАЗИТЬ((&ЧасовОтработаноФактически + ВложенныйЗапрос.ДобавляемоеКоличествоЧасов - ВложенныйЗапрос.ЗначениеОт) * ВложенныйЗапрос.СтавкаЗаЧас КАК ЧИСЛО(15, 0))
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВложенныйЗапрос.БрейкЧасовПереработки
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВложенныйЗапрос.Начисление КАК Начисление,
	|			ВложенныйЗапрос.СпособРасчета КАК СпособРасчета,
	|			ВложенныйЗапрос.ДобавляемоеКоличествоЧасов КАК ДобавляемоеКоличествоЧасов,
	|			ВложенныйЗапрос.СтавкаЗаЧас КАК СтавкаЗаЧас,
	|			ВложенныйЗапрос.БрейкЧасовПереработки КАК БрейкЧасовПереработки,
	|			МИНИМУМ(зпБрейкиГраницыБрейка.ЗначениеОт) КАК ЗначениеОт
	|		ИЗ
	|			(ВЫБРАТЬ
	|				зпСтавкиОплатыПоНачислениям.Начисление КАК Начисление,
	|				зпСтавкиОплатыПоНачислениям.Начисление.СпособРасчета КАК СпособРасчета,
	|				МАКСИМУМ(зпСтавкиОплатыПоНачислениям.ДобавляемоеКоличествоЧасов) КАК ДобавляемоеКоличествоЧасов,
	|				МАКСИМУМ(зпСтавкиОплатыПоНачислениям.СтавкаЗаЧас) КАК СтавкаЗаЧас,
	|				МАКСИМУМ(зпСтавкиОплатыПоНачислениям.БрейкЧасовПереработки) КАК БрейкЧасовПереработки
	|			ИЗ
	|				РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям
	|			ГДЕ
	|				зпСтавкиОплатыПоНачислениям.СхемаРасчетаЗП = &СхемаРасчетаЗП
	|				И зпСтавкиОплатыПоНачислениям.ТарифРасчетаЗП = &ТарифРасчетаЗП
	|				И зпСтавкиОплатыПоНачислениям.ОсновноеНачисление = &ОсновноеНачисление
	|				И зпСтавкиОплатыПоНачислениям.Начисление.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.зпСпособыРасчетаНачислений.СтавкаЗаЧасПереработки)
	|				И зпСтавкиОплатыПоНачислениям.Роль = &Роль
	|				И зпСтавкиОплатыПоНачислениям.СоставЭкипажа = &СоставЭкипажа
	|			
	|			СГРУППИРОВАТЬ ПО
	|				зпСтавкиОплатыПоНачислениям.Начисление,
	|				зпСтавкиОплатыПоНачислениям.Начисление.СпособРасчета) КАК ВложенныйЗапрос
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.зпБрейки.ГраницыБрейка КАК зпБрейкиГраницыБрейка
	|				ПО ВложенныйЗапрос.БрейкЧасовПереработки = зпБрейкиГраницыБрейка.Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВложенныйЗапрос.Начисление,
	|			ВложенныйЗапрос.СпособРасчета,
	|			ВложенныйЗапрос.ДобавляемоеКоличествоЧасов,
	|			ВложенныйЗапрос.СтавкаЗаЧас,
	|			ВложенныйЗапрос.БрейкЧасовПереработки) КАК ВложенныйЗапрос) КАК ВЗ_Расчет
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Начисления КАК ВТ_Начисления
	|		ПО ВЗ_Расчет.СпособРасчета = ВТ_Начисления.Начисление.СпособРасчета";
	
	Объект.НовыеРасчетныеДанные_зпИсходныеДанныеРасчетаЗПЧасы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяРаботыУчетноеПриИзменении(Элемент)
	
	ВремяРаботыУчетноеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПробегУчетныйПриИзмененииНаСервере()
	
	Объект.ФормированиеДвижений_зпИсходныеДанныеРасчетаЗППоРейсам = Истина;
	Объект.ФормированиеДвижений_зпИсходныеДанныеРасчетаЗППоРейсамДополнительныеНачисления = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", Объект.СхемаРасчетаЗП);
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", Объект.ТарифРасчетаЗП);
	Запрос.УстановитьПараметр("СоставЭкипажа", Объект.СоставЭкипажа);
	Запрос.УстановитьПараметр("Роль", Объект.Роль);
	Запрос.УстановитьПараметр("ОсновноеНачисление", Объект.ОсновноеНачисление);
	Запрос.УстановитьПараметр("ПробегУчетный", Объект.ПробегУчетный);
	Запрос.УстановитьПараметр("ТаблицаНачислений", Объект.НовыеРасчетныеДанные_зпИсходныеДанныеРасчетаЗППоРейсамДополнительныеНачисления.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНачислений.Начисление КАК Начисление,
	|	ТаблицаНачислений.Сумма КАК Сумма,
	|	ТаблицаНачислений.ВидПолигонаПарковки КАК ВидПолигонаПарковки,
	|	ТаблицаНачислений.ОбщийКилометражПоРейсу КАК ОбщийКилометражПоРейсу,
	|	ТаблицаНачислений.БрейкПробегаПоРейсу КАК БрейкПробегаПоРейсу,
	|	ТаблицаНачислений.СтавкаЗаКилометрПробега КАК СтавкаЗаКилометрПробега,
	|	ТаблицаНачислений.ТарифицируемыйКилометражПоРейсу КАК ТарифицируемыйКилометражПоРейсу
	|ПОМЕСТИТЬ ВТ_Начисления
	|ИЗ
	|	&ТаблицаНачислений КАК ТаблицаНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	зпБрейки.Ссылка КАК Ссылка,
	|	МИНИМУМ(зпБрейкиГраницыБрейка_Мин.ЗначениеОт) КАК ЗначениеОт
	|ПОМЕСТИТЬ ВТ_БрейкМинимальногоПробегаПоРейсу
	|ИЗ
	|	Справочник.зпБрейки КАК зпБрейки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.зпТарифыРасчетаЗП КАК зпТарифыРасчетаЗП
	|		ПО (зпТарифыРасчетаЗП.Ссылка = &ТарифРасчетаЗП)
	|			И зпБрейки.Владелец = зпТарифыРасчетаЗП.СхемаБрейковПробегаПоРейсу
	|			И (НЕ зпБрейки.ПометкаУдаления)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.зпБрейки.ГраницыБрейка КАК зпБрейкиГраницыБрейка
	|		ПО зпБрейки.Ссылка = зпБрейкиГраницыБрейка.Ссылка
	|			И (&ПробегУчетный МЕЖДУ зпБрейкиГраницыБрейка.ЗначениеОт И зпБрейкиГраницыБрейка.ЗначениеДо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.зпБрейки.ГраницыБрейка КАК зпБрейкиГраницыБрейка_Мин
	|		ПО зпБрейки.Ссылка = зпБрейкиГраницыБрейка_Мин.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	зпБрейки.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.зпНачисления.ДоплатаЗаПробег) КАК Начисление,
	|	(&ПробегУчетный - ВЗ_Расчет.ЗначениеОт) * ВЗ_Расчет.СтавкаЗаКилометрПробега КАК Сумма,
	|	ВТ_Начисления.ВидПолигонаПарковки КАК ВидПолигонаПарковки,
	|	&ПробегУчетный КАК ОбщийКилометражПоРейсу,
	|	ВЗ_Расчет.БрейкПробегаПоРейсу КАК БрейкПробегаПоРейсу,
	|	ВЗ_Расчет.СтавкаЗаКилометрПробега КАК СтавкаЗаКилометрПробега,
	|	&ПробегУчетный - ВЗ_Расчет.ЗначениеОт КАК ТарифицируемыйКилометражПоРейсу
	|ИЗ
	|	ВТ_Начисления КАК ВТ_Начисления
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТ_БрейкМинимальногоПробегаПоРейсу.Ссылка КАК БрейкПробегаПоРейсу,
	|			ВТ_БрейкМинимальногоПробегаПоРейсу.ЗначениеОт КАК ЗначениеОт,
	|			МАКСИМУМ(зпСтавкиОплатыПоНачислениям.СтавкаЗаКилометрПробега) КАК СтавкаЗаКилометрПробега
	|		ИЗ
	|			ВТ_БрейкМинимальногоПробегаПоРейсу КАК ВТ_БрейкМинимальногоПробегаПоРейсу
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям
	|				ПО (зпСтавкиОплатыПоНачислениям.СхемаРасчетаЗП = &СхемаРасчетаЗП)
	|					И (зпСтавкиОплатыПоНачислениям.ТарифРасчетаЗП = &ТарифРасчетаЗП)
	|					И (зпСтавкиОплатыПоНачислениям.ОсновноеНачисление = &ОсновноеНачисление)
	|					И (зпСтавкиОплатыПоНачислениям.Начисление = ЗНАЧЕНИЕ(Справочник.зпНачисления.ДоплатаЗаПробег))
	|					И (зпСтавкиОплатыПоНачислениям.Роль = &Роль)
	|					И (зпСтавкиОплатыПоНачислениям.СоставЭкипажа = &СоставЭкипажа)
	|					И (зпСтавкиОплатыПоНачислениям.БрейкМинимальногоПробегаПоРейсу = ВТ_БрейкМинимальногоПробегаПоРейсу.Ссылка)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВТ_БрейкМинимальногоПробегаПоРейсу.Ссылка,
	|			ВТ_БрейкМинимальногоПробегаПоРейсу.ЗначениеОт) КАК ВЗ_Расчет
	|		ПО (ИСТИНА)";
	
	Объект.НовыеРасчетныеДанные_зпИсходныеДанныеРасчетаЗППоРейсамДополнительныеНачисления.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ПробегУчетныйПриИзменении(Элемент)
	
	ПробегУчетныйПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПробегЗаМКАДПриИзмененииНаСервере()
	
	Объект.ФормированиеДвижений_зпИсходныеДанныеРасчетаЗППоРейсам = Истина;
	Объект.ФормированиеДвижений_зпИсходныеДанныеРасчетаЗППоРейсамДополнительныеНачисления = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СхемаРасчетаЗП", Объект.СхемаРасчетаЗП);
	Запрос.УстановитьПараметр("ТарифРасчетаЗП", Объект.ТарифРасчетаЗП);
	Запрос.УстановитьПараметр("СоставЭкипажа", Объект.СоставЭкипажа);
	Запрос.УстановитьПараметр("Роль", Объект.Роль);
	Запрос.УстановитьПараметр("ОсновноеНачисление", Объект.ОсновноеНачисление);
	Запрос.УстановитьПараметр("ПробегЗаМКАД", Объект.ПробегЗаМКАД);
	Запрос.УстановитьПараметр("ТаблицаНачислений", Объект.НовыеРасчетныеДанные_зпИсходныеДанныеРасчетаЗППоРейсамДополнительныеНачисления.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНачислений.Начисление КАК Начисление,
	|	ТаблицаНачислений.Сумма КАК Сумма,
	|	ТаблицаНачислений.ВидПолигонаПарковки КАК ВидПолигонаПарковки,
	|	ТаблицаНачислений.ОбщийКилометражПоРейсу КАК ОбщийКилометражПоРейсу,
	|	ТаблицаНачислений.БрейкПробегаПоРейсу КАК БрейкПробегаПоРейсу,
	|	ТаблицаНачислений.СтавкаЗаКилометрПробега КАК СтавкаЗаКилометрПробега,
	|	ТаблицаНачислений.ТарифицируемыйКилометражПоРейсу КАК ТарифицируемыйКилометражПоРейсу
	|ПОМЕСТИТЬ ВТ_Начисления
	|ИЗ
	|	&ТаблицаНачислений КАК ТаблицаНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	зпБрейки.Ссылка КАК Ссылка,
	|	МИНИМУМ(зпБрейкиГраницыБрейка_Мин.ЗначениеОт) КАК ЗначениеОт
	|ПОМЕСТИТЬ ВТ_БрейкМинимальногоПробегаПоРейсу
	|ИЗ
	|	Справочник.зпБрейки КАК зпБрейки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.зпТарифыРасчетаЗП КАК зпТарифыРасчетаЗП
	|		ПО (зпТарифыРасчетаЗП.Ссылка = &ТарифРасчетаЗП)
	|			И зпБрейки.Владелец = зпТарифыРасчетаЗП.СхемаБрейковПробегаПоРейсу
	|			И (НЕ зпБрейки.ПометкаУдаления)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.зпБрейки.ГраницыБрейка КАК зпБрейкиГраницыБрейка
	|		ПО зпБрейки.Ссылка = зпБрейкиГраницыБрейка.Ссылка
	|			И (&ПробегЗаМКАД МЕЖДУ зпБрейкиГраницыБрейка.ЗначениеОт И зпБрейкиГраницыБрейка.ЗначениеДо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.зпБрейки.ГраницыБрейка КАК зпБрейкиГраницыБрейка_Мин
	|		ПО зпБрейки.Ссылка = зпБрейкиГраницыБрейка_Мин.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	зпБрейки.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.зпНачисления.ДоплатаЗаПробегЗаМКАД) КАК Начисление,
	|	(&ПробегЗаМКАД - ВЗ_Расчет.ЗначениеОт) * ВЗ_Расчет.СтавкаЗаКилометрПробега КАК Сумма,
	|	ВТ_Начисления.ВидПолигонаПарковки КАК ВидПолигонаПарковки,
	|	&ПробегЗаМКАД КАК ОбщийКилометражПоРейсу,
	|	ВЗ_Расчет.БрейкПробегаПоРейсу КАК БрейкПробегаПоРейсу,
	|	ВЗ_Расчет.СтавкаЗаКилометрПробега КАК СтавкаЗаКилометрПробега,
	|	&ПробегЗаМКАД - ВЗ_Расчет.ЗначениеОт КАК ТарифицируемыйКилометражПоРейсу
	|ИЗ
	|	ВТ_Начисления КАК ВТ_Начисления
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТ_БрейкМинимальногоПробегаПоРейсу.Ссылка КАК БрейкПробегаПоРейсу,
	|			ВТ_БрейкМинимальногоПробегаПоРейсу.ЗначениеОт КАК ЗначениеОт,
	|			МАКСИМУМ(зпСтавкиОплатыПоНачислениям.СтавкаЗаКилометрПробега) КАК СтавкаЗаКилометрПробега
	|		ИЗ
	|			ВТ_БрейкМинимальногоПробегаПоРейсу КАК ВТ_БрейкМинимальногоПробегаПоРейсу
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.зпСтавкиОплатыПоНачислениям КАК зпСтавкиОплатыПоНачислениям
	|				ПО (зпСтавкиОплатыПоНачислениям.СхемаРасчетаЗП = &СхемаРасчетаЗП)
	|					И (зпСтавкиОплатыПоНачислениям.ТарифРасчетаЗП = &ТарифРасчетаЗП)
	|					И (зпСтавкиОплатыПоНачислениям.ОсновноеНачисление = &ОсновноеНачисление)
	|					И (зпСтавкиОплатыПоНачислениям.Начисление = ЗНАЧЕНИЕ(Справочник.зпНачисления.ДоплатаЗаПробегЗаМКАД))
	|					И (зпСтавкиОплатыПоНачислениям.Роль = &Роль)
	|					И (зпСтавкиОплатыПоНачислениям.СоставЭкипажа = &СоставЭкипажа)
	|					И (зпСтавкиОплатыПоНачислениям.БрейкМинимальногоПробегаПоРейсу = ВТ_БрейкМинимальногоПробегаПоРейсу.Ссылка)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВТ_БрейкМинимальногоПробегаПоРейсу.Ссылка,
	|			ВТ_БрейкМинимальногоПробегаПоРейсу.ЗначениеОт) КАК ВЗ_Расчет
	|		ПО (ИСТИНА)";
	
	Объект.НовыеРасчетныеДанные_зпИсходныеДанныеРасчетаЗППоРейсамДополнительныеНачисления.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ПробегЗаМКАДПриИзменении(Элемент)
	
	ПробегЗаМКАДПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОтменаНачисленияМинимальнойСтавкиПриИзмененииНаСервере()
	
	//Асеев 27.05.2024 (Задача № 5275)>>>
	Объект.ФормированиеДвижений_зпИсходныеДанныеРасчетаМинимальнойЗП = Истина;
	//Асеев 27.05.2024 (Задача № 5275)<<<
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменаНачисленияМинимальнойСтавкиПриИзменении(Элемент)
	ОтменаНачисленияМинимальнойСтавкиПриИзмененииНаСервере();
КонецПроцедуры
