Функция ПриИзмененииСуммСД() Экспорт 
	Сум = 0;
	БылПодъем = Ложь;
	Для Каждого Тек Из Объект.РасшифровкаУслугСД Цикл
		Если Тек.Услуга.Ссылка = Справочники.ПоказателиРасчетаУслугСД.Подъем.Ссылка Тогда
			БылПодъем = Истина;
		Иначе
			Если Тек.НазначенаВ1С Тогда
				Тек.СуммаДляИзменения = РасчетСуммыДопУслуги(Тек.Тариф, Тек.Ставка);
				Тек.СуммаПервичная = Тек.СуммаДляИзменения;
			КонецеСли;	
			
			Сум = Сум + Тек.СуммаДляИзменения;
		КонецеСли;	
		
	КонецЦикла;
	
	Сум = Сум + Объект.ЧистыеУслугиСД; 
	
	Если Не БылПодъем И Объект.Подъем <> 0 Тогда
		Сум = Сум + Объект.Подъем; 
	КонецеСли;	
		
	Возврат Сум;
КонецФункции

Функция РасчетСуммыДопУслуги(Тариф, Ставка) 
	Если Тариф.ТипРасчета = Перечисления.СпособыРасчетаДопУслуг.ФиксированнаяСумма Тогда
		Возврат Ставка;
	ИначеЕсли Тариф.ТипРасчета = Перечисления.СпособыРасчетаДопУслуг.ПроцентОтБазы Тогда
		Сумма = Окр(Объект.ЧистыеУслугиСД*Ставка/100);
		Возврат Сумма;
	ИначеЕсли Тариф.ТипРасчета = Перечисления.СпособыРасчетаДопУслуг.ПроцентОтТарифа Тогда	
		Подкл  = Евген.СоздатьПодключениеКИнтернетМагазину();
		
		RS = Евген.ЗапросКИнтернетМагазину("SELECT dbo.fs_calcServiceDCbyOrderID(" + СокрЛП(Объект.Реализация.Номер) + ") As service", Подкл);
		РезАдминка = Евген.СоздатьТаблицу(RS, "service_Ч");
		Сумма = Окр(РезАдминка[0].service_Ч*Ставка/100);
		Возврат Сумма;
	КонецеСли;	
КонецФункции	

&НаКлиенте
Процедура ЧистыеУслугиСДПриИзменении(Элемент)
	ЧистыеУслугиСДПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЧистыеУслугиСДПриИзмененииНаСервере()
	Объект.УслугиСД = ПриИзмененииСуммСД();
КонецПроцедуры

&НаКлиенте
Процедура УслугиСД1СуммаДляИзмененияПриИзменении(Элемент)
	УслугиСД1СуммаДляИзмененияПриИзмененииНаСервере(Элементы.РасшифровкаУслугСД.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура УслугиСД1СуммаДляИзмененияПриИзмененииНаСервере(ТекущиеДанные)
    
    Если ТекущиеДанные.Услуга = Справочники.ПоказателиРасчетаУслугСД.Подъем Тогда
        
        Объект.Подъем = ТекущиеДанные.СуммаДляИзменения;
		//Най[0].ПодъемВодитель = Най[0].Показатель2;
    Иначе
        Объект.УслугиСД = ПриИзмененииСуммСД();
        РеализацияОбъект = Объект.Заказ.ПолучитьОбъект();
        РеализацияОбъект.УслугиСД = Объект.УслугиСД;
		//Попытка
		//    Если РеализацияОбъект.Проведен Тогда
		//        РеализацияОбъект.Записать(РежимЗаписиДокумента.Проведение);
		//    Иначе
		//        РеализацияОбъект.Записать(РежимЗаписиДокумента.Запись);
		//    КонецЕсли;
		//Исключение
		//    Сообщить(ОписаниеОшибки());
		//КонецПопытки;
    КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Оператор = ПараметрыСеанса.ТекущийПользователь;
	Иначе
		Если ЗначениеЗаполнено(Объект.Заказ) Тогда
			Если ТипЗнч(Объект.Заказ) = Тип("ДокументСсылка.ЗаборТовара") Тогда
				ТипЗаказа = Перечисления.ТипыЗаказов.Забор;
				ВладелецЗаказа = Объект.Заказ.Контрагент;
			Иначе
				ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
				ВладелецЗаказа = Объект.Заказ.ВладелецТовара;
			КонецеСли;
		КонецеСли;	
	КонецеСли;
	ТарифицируемыйВес = Объект.ВесЗаказа;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодъемПриИзменении(Элемент)
	ПодъемПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПодъемПриИзмененииНаСервере()
	Пд = Справочники.ПоказателиРасчетаУслугСД.Подъем;
	Струк = Новый Структура;
	Струк.Вставить("Услуга", Пд.Ссылка);
	Най = Объект.РасшифровкаУслугСД.НайтиСтроки(Струк);
	
	Если Най.Количество() = 0 Тогда
		Стр = Объект.РасшифровкаУслугСД.Добавить();
		Стр.Услуга = Пд.Ссылка;
	Иначе
		Стр = Най[0];
	КонецеСли;	
	
	Стр.СуммаДляИзменения = Объект.Подъем;
	
	Комм = СокрЛП(Объект.КомментарийСД);
	Нач = Найти(Комм, "; " + "Подъём" + "=");
	Если Нач <> 0 тогда
		Стр = Лев(Комм, Нач + 2 + СтрДлина("Подъём"));
	Иначе
		Стр = Комм + "; " + "Подъём" + "=";
	КонецеСли;	
	Если Объект.Подъем <> 0 Тогда
		Стр = Стр + Формат(Объект.Подъем, "ЧГ=");
	Иначе
		Если Нач <> 0 Тогда
			Стр = Лев(Комм, Нач - 1);
		Иначе	
			Стр = Комм;
		КонецеСли;	
	КонецЕСли;	
	Объект.КомментарийСд = Стр;
	
	Если Объект.Подъем <> 0 
		И Объект.ПодъемВодитель=0   Тогда
		Объект.ПодъемВодитель = Объект.Подъем;  
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОбновитьТаблицуКорректировок");
КонецПроцедуры

&НаСервере
Процедура УстановитьВидемостьЭлементов()
	Вид = Ложь;
	Если ТипЗнч(Объект.Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Вид = Истина;
		//Асеев 04.07.2023 (Задача № 4101)>>>
		Элементы.УровеньОбслуживания.Видимость = Истина;
		Элементы.УровеньОбслуживанияНовый.Видимость = Истина;
		//Асеев 04.07.2023 (Задача № 4101)<<<
		//Асеев 04.03.2024 (Задача № 4571)>>>
		Элементы.ГруппаВесОбъем.Видимость = Истина;
		//Асеев 04.03.2024 (Задача № 4571)<<<
	Иначе
		//Асеев 04.07.2023 (Задача № 4101)>>>
		Элементы.УровеньОбслуживания.Видимость = Ложь;
		Элементы.УровеньОбслуживанияНовый.Видимость = Ложь;
		//Асеев 04.07.2023 (Задача № 4101)<<<
		//Асеев 04.03.2024 (Задача № 4571)>>>
		Элементы.ГруппаВесОбъем.Видимость = Ложь;
		//Асеев 04.03.2024 (Задача № 4571)<<<
	КонецЕсли;
	Элементы.Группа2.Видимость = Вид;
	
	//Асеев 21.05.2021 (Задача № 4571)>>>
	Если Объект.ТарификацияПоОбъемномуВесу Тогда
		//Элементы.ВесЗаказа.Видимость = Ложь;
		Элементы.ТарифицируемыйОбъемныйВес.Видимость = Вид;
	Иначе
		Элементы.ТарифицируемыйОбъемныйВес.Видимость = Ложь;
		//Элементы.ВесЗаказа.Видимость = Вид;
	КонецЕсли;
	//Асеев 21.05.2021 (Задача № 4571)<<<

КонецПроцедуры

&НаСервере
Функция ПриОткрытииНаСервере()
	
	ТекстПредупреждения = "";
	
	//Асеев 13.07.2023 (Задача № 4277)>>>
	Если Объект.Рейс.Пустая() Тогда
		Элементы.ГруппаПослеКорректировки.Доступность = Ложь;
	КонецЕсли;
	//Асеев 13.07.2023 (Задача № 4277)<<<
	
	УстановитьВидемостьЭлементов();
	//Геннадий #4277 14.10.2020 ->
	УсловноеОформление();
	//Геннадий #4277 14.10.2020 <-
	
	//Асеев 07.02.2024 (Задача № 5225)>>>
	Если Объект.Ссылка.Пустая() Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ЗакрытиеЗаказов", Объект.ЗакрытиеЗаказов);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗакрытиеЗаказов.ТерминалДоставки КАК Регион,
		|	НАЧАЛОПЕРИОДА(ЗакрытиеЗаказов.ДатаЗакрытия, МЕСЯЦ) КАК НачалоПериода,
		|	КОНЕЦПЕРИОДА(ЗакрытиеЗаказов.ДатаЗакрытия, МЕСЯЦ) КАК ОкончаниеПериода
		|ПОМЕСТИТЬ ВТ_Контроль
		|ИЗ
		|	Документ.ЗакрытиеЗаказов КАК ЗакрытиеЗаказов
		|ГДЕ
		|	ЗакрытиеЗаказов.Ссылка = &ЗакрытиеЗаказов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	зпЗакрытыеРасчетныеПериоды.РасчетныйПериод КАК РасчетныйПериод
		|ИЗ
		|	РегистрСведений.зпЗакрытыеРасчетныеПериоды КАК зпЗакрытыеРасчетныеПериоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВТ_Контроль.Регион КАК Регион,
		|			ВТ_Контроль.НачалоПериода КАК НачалоПериода,
		|			ВТ_Контроль.ОкончаниеПериода КАК ОкончаниеПериода,
		|			МАКСИМУМ(зпЗакрытыеРасчетныеПериоды.Период) КАК Период
		|		ИЗ
		|			РегистрСведений.зпЗакрытыеРасчетныеПериоды КАК зпЗакрытыеРасчетныеПериоды
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Контроль КАК ВТ_Контроль
		|				ПО зпЗакрытыеРасчетныеПериоды.Регион = ВТ_Контроль.Регион
		|					И (зпЗакрытыеРасчетныеПериоды.РасчетныйПериод МЕЖДУ ВТ_Контроль.НачалоПериода И ВТ_Контроль.ОкончаниеПериода)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВТ_Контроль.Регион,
		|			ВТ_Контроль.НачалоПериода,
		|			ВТ_Контроль.ОкончаниеПериода) КАК ВЗ_МаксПериоды
		|		ПО зпЗакрытыеРасчетныеПериоды.Период = ВЗ_МаксПериоды.Период
		|			И зпЗакрытыеРасчетныеПериоды.Регион = ВЗ_МаксПериоды.Регион
		|			И (зпЗакрытыеРасчетныеПериоды.РасчетныйПериод МЕЖДУ ВЗ_МаксПериоды.НачалоПериода И ВЗ_МаксПериоды.ОкончаниеПериода)
		|			И (зпЗакрытыеРасчетныеПериоды.ПериодЗакрыт)";
		
		Если Не Запрос.Выполнить().Пустой() Тогда
			Объект.ДанныеЗПЗакрытыДляИзменения = Истина;
			ТекстПредупреждения = "Данные з/п закрыты для изменения, соответственно, движения по заработной плате сформированы не будут!";
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстПредупреждения;
	//Асеев 07.02.2024 (Задача № 5225)<<<
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Асеев 07.02.2024 (Задача № 5225)>>>
	ТекстПредупреждения = ПриОткрытииНаСервере();
	Если ТекстПредупреждения <> "" Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	//Асеев 07.02.2024 (Задача № 5225)<<<
	
КонецПроцедуры

//Геннадий #4277 14.10.2020 ->
&НаСервере
Процедура УсловноеОформление()
	
	Если Объект.ЗапретПерерасчетаЗП Тогда
	
		 Элементы.ГруппаПослеКорректировки.Заголовок 			= "Период ЗП закрыт";
		 Элементы.ГруппаПослеКорректировки.ЦветТекстаЗаголовка 	= ЦветаСтиля.ЦветОтрицательногоЧисла;
		 
	КонецЕсли;	 
		
КонецПроцедуры
//Геннадий #4277 14.10.2020 <-
	
&НаКлиенте
Процедура ЗаказПриИзменении(Элемент)
	УстановитьВидемостьЭлементов();
КонецПроцедуры

&НаСервере
Процедура ПолучитьСтоимостьУслуг()
	may.ИзменитьОбъект(Объект);
	ЧистыеУслугиСДПриИзмененииНаСервере(); 
КонецПроцедуры

&НаСервере
Процедура ВесЗаказаПриИзмененииНаСервере()
	//Асеев 04.03.2024 (Задача № 4571)>>>
	Если Объект.ТарификацияПоОбъемномуВесу Тогда
		Если Не Объект.ОбъемныйВес Тогда
			РассчитатьОбъемныйВес();
		КонецЕсли;
		Объект.ТарифицируемыйОбъемныйВес = Макс(Объект.ВесЗаказа, Объект.ОбъемныйВес);
	КонецЕсли;
	//Асеев 04.03.2024 (Задача № 4571)<<<
	ПолучитьСтоимостьУслуг();
	//Асеев 14.08.2023 (Задача № 5095)>>>
	ОбновитьКатегориюЗаказа();
	//Асеев 14.08.2023 (Задача № 5095)<<<
КонецПроцедуры

&НаКлиенте
Процедура ВесЗаказаПриИзменении(Элемент)
	ВесЗаказаПриИзмененииНаСервере();
КонецПроцедуры

//Асеев 21.05.2021 (Задача № 4571)>>>
&НаКлиенте
Процедура ТарифицируемыйОбъемныйВесПриИзменении(Элемент)
	ПолучитьСтоимостьУслуг();
КонецПроцедуры
//Асеев 21.05.2021 (Задача № 4571)<<<

//Геннадий #4277 13.10.2020 ->
&НаСервере
Процедура ЗаполнитьЗначенияПоЗакрытиюЗаказов(НовыйДок, ТипЗак, ТарифВес, ОбъемЗабора) Экспорт
	
	ТипЗаказа = ТипЗак;
	ТарифицируемыйВес 	= ТарифВес;
	ДокКорректировка 	= РеквизитФормыВЗначение("Объект");
	ДанныеДляЗаполнения = ДокКорректировка.ЗаполнитьЗначенияПоДаннымЗакрытиеЗаказов(НовыйДок, ТипЗаказа, ТарифицируемыйВес, ОбъемЗабора);
	ЗаполнитьЗначенияСвойств(Объект, ДанныеДляЗаполнения);
	//ЗначениеВРеквизитФормы(ДокКорректировка, "Объект");
	 
КонецПроцедуры
//Геннадий #4277 13.10.2020 <-

//Асеев 04.07.2023 (Задача № 4101)>>>
&НаСервере
Процедура ОбновитьКатегориюЗаказа()
	
	ТарифицируемыйВес = Объект.ВесЗаказа;
	ОбъемЗабора = Объект.ОбъемЗабора;
	
	ДанныеДляРасчета = Новый Структура("ТипЗаказа, ТарифицируемыйВес, ОбъемЗабора, Заказ, УровеньОбслуживанияЗаказа", ТипЗаказа, ТарифицируемыйВес, ОбъемЗабора, Объект.Заказ, Объект.УровеньОбслуживанияНовый);
	ДанныеДляЗаполнения = зпРаботаСРасчетомЗарплатыСервер.ПолучитьКатегориюЗаказа(Объект.СхемаРасчетаЗП, ДанныеДляРасчета);
	Объект.КатегорияЗаказаДляРасчетаЗПНовая	= ДанныеДляЗаполнения.КатегорияЗаказа;
	
КонецПроцедуры

&НаКлиенте
Процедура УровеньОбслуживанияНовыйПриИзменении(Элемент)
	
	ОбновитьКатегориюЗаказа();
	
КонецПроцедуры
//Асеев 04.07.2023 (Задача № 4101)<<<

//Асеев 04.03.2024 (Задача № 4571)>>>
&НаСервере
Процедура РассчитатьОбъемныйВес()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ", Объект.Заказ);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ТарифнаяСеткаПартнера.КоэффициентРасчетаОбъемногоВеса, 0) КАК КоэффициентРасчетаОбъемногоВеса
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Заказ";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Объект.ОбъемныйВес = 0;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Объект.ОбъемныйВес = Объект.ОбъемЗаказа * Выборка.КоэффициентРасчетаОбъемногоВеса;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбъемЗаказаПриИзмененииНаСервере()
	Если Объект.ТарификацияПоОбъемномуВесу Тогда
		РассчитатьОбъемныйВес();
		Объект.ТарифицируемыйОбъемныйВес = Макс(Объект.ВесЗаказа, Объект.ОбъемныйВес);
		ПолучитьСтоимостьУслуг();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъемЗаказаПриИзменении(Элемент)
	ОбъемЗаказаПриИзмененииНаСервере();
КонецПроцедуры
//Асеев 04.03.2024 (Задача № 4571)<<<



