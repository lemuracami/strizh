&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	

	//CeHbKA 13.05.2019 #3103
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Терминал = ПараметрыСеанса.ТерминалДоставки;
		Объект.Терминал = ?(Объект.Терминал.Пустая(), Справочники.РегиональныеТерминалы.МоскваСтриж, Объект.Терминал);
	КонецЕсли; 
	//CeHbKA 13.05.2019 #3103
		
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиСотрудникПриИзменении(Элемент)
    ТекущиеДанные = Элементы.Сотрудники.ТекущиеДанные;
    Если ЗначениеЗаполнено(ТекущиеДанные.Сотрудник) Тогда
		
		//Миго-груп{
		//Усманов В.И.
		//27.12.2017
		СостояниеСотрудника = ПолучитьСостояние(ТекущиеДанные.Сотрудник,Объект.Организация);
				
		Если СостояниеСотрудника <>  Неопределено Тогда
			Если СостояниеСотрудника Тогда
				Сообщить("Нельзя уволить уволенного сотрудника.");
			Иначе
				 ТЗ = ПолучитьДанные(Объект.Организация,ТекущиеДанные.Сотрудник);
       			 Для каждого Стр Из ТЗ Цикл
            		ЗаполнитьЗначенияСвойств(ТекущиеДанные,Стр);
      			 КонецЦикла;	
			КонецЕсли;
		иначе
			 Сообщить("Нельзя уволить сотрудника,так как он не принят в "+Объект.Организация+".");
		КонецЕсли; 
		//Миго-груп}
		
        //+++++Серегин М.В. 29.01.2016 14:55:43 проверка на возможность увольнения
		////СтруктураОтвета = ПолучитьСостояниеИОрганизацию(ТекущиеДанные.Сотрудник);
		////Если СтруктураОтвета <> Неопределено Тогда		 
		////    Если СтруктураОтвета.Состояние = Перечисления.СостояниеРаботникаОрганизации.Уволен Тогда
		////        ТекущиеДанные.Сотрудник = Справочники.новаВодители.ПустаяСсылка();
		////        Сообщить("Нельзя уволить уволенного сотрудника.");
		////        Возврат;
		////    ИначеЕсли СтруктураОтвета.Организация <> Объект.Организация Тогда
		////        ТекущиеДанные.Сотрудник = Справочники.новаВодители.ПустаяСсылка();
		////        Сообщить("Нельзя уволить сотрудника, сотрудник офоромлен в, "+СтруктураОтвета.Организация+".");
		////        Возврат;
		////    КонецЕсли;
		////КонецЕсли;
        //-----Серегин М.В. 29.01.2016 14:55:54 
        
		//ТЗ = ПолучитьДанные(Объект.Организация,ТекущиеДанные.Сотрудник);
		//Для каждого Стр Из ТЗ Цикл
		//    ЗаполнитьЗначенияСвойств(ТекущиеДанные,Стр);
		//КонецЦикла;
	КонецЕсли;
	
	//CeHbKA 13.05.2019 #3103	
	ТекСтрока = Элементы.Сотрудники.ТекущиеДанные;
	
	ТекСтрока.ФизЛицо = ПолучитьФизЛицоНаСервере(ТекСтрока.Сотрудник);
	//CeHbKA 13.05.2019 #3103
	
КонецПроцедуры


&НаСервере
Функция ПолучитьДанные(Организация,Сотрудник)

    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   РаботникиОрганизацииСрезПоследних.Сотрудник,
        |   РаботникиОрганизацииСрезПоследних.Подразделение,
        |   РаботникиОрганизацииСрезПоследних.Должность,
        |   РаботникиОрганизацииСрезПоследних.ГрафикУчетаРабочегоВремени КАК ГрафикРаботы
        |ИЗ
        |   РегистрСведений.РаботникиОрганизации.СрезПоследних КАК РаботникиОрганизацииСрезПоследних
        |ГДЕ
        |   РаботникиОрганизацииСрезПоследних.Сотрудник = &Сотрудник
        |   И РаботникиОрганизацииСрезПоследних.Организация = &Организация";
    
    Запрос.УстановитьПараметр("Организация", Организация);
    Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
    
    РезультатЗапроса = Запрос.Выполнить().Выгрузить();
    
    Возврат РезультатЗапроса;
 
КонецФункции // ДанныеЗаполнения()


&НаКлиенте
Процедура СотрудникиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
    Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
        Отказ = Истина;
        Сообщить("Выберите Организацию!");
    КонецЕсли;
КонецПроцедуры

//миго 27.12.17
//розалиев
&НаСервере
Функция ПолучитьСостояние(Сотрудник,Организация)
    ФлСостоянияУвольнения = ложь;
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	РаботникиОрганизации.Состояние КАК Состояние,
	|	Работники.Организация КАК Организация,
	|	Работники.Сотрудник КАК Сотрудник
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(РаботникиОрганизации.Период) КАК ДатаСобытия,
	|		РаботникиОрганизации.Организация КАК Организация,
	|		РаботникиОрганизации.Сотрудник КАК Сотрудник
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|	ГДЕ
	|		РаботникиОрганизации.Сотрудник В(&Сотрудник)
	|		И РаботникиОрганизации.Организация = &Организация
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РаботникиОрганизации.Организация,
	|		РаботникиОрганизации.Сотрудник) КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|		ПО Работники.ДатаСобытия = РаботникиОрганизации.Период
	|			И Работники.Организация = РаботникиОрганизации.Организация
	|			И Работники.Сотрудник = РаботникиОрганизации.Сотрудник";
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("Организация", Организация);
    
    Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	

	
	Если Выборка.Следующий() тогда
		Если Выборка.Состояние = Перечисления.СостояниеРаботникаОрганизации.Уволен Тогда
			 ФлСостоянияУвольнения = Истина;
		 ИначеЕсли Выборка.Состояние = Перечисления.СостояниеРаботникаОрганизации.ПринятНаРаботуВОрганизацию тогда
			 ФлСостоянияУвольнения = ложь; 
		КонецЕсли;   
	Иначе
		 ФлСостоянияУвольнения = Неопределено;
	КонецЕсли;
	 
	Возврат ФлСостоянияУвольнения;
		
КонецФункции // ()
//**********

//миго Розалиев 27.12.17
//&НаСервере
//Функция ПолучитьСостояниеИОрганизацию(Сотрудник)
//    
//    Запрос = Новый Запрос;
//    Запрос.Текст = 
//	    "ВЫБРАТЬ
//	    |   РаботникиОрганизацииСрезПоследних.Организация,
//	    |   РаботникиОрганизацииСрезПоследних.Состояние
//	    |ИЗ
//	    |   РегистрСведений.РаботникиОрганизации.СрезПоследних КАК РаботникиОрганизацииСрезПоследних
//	    |ГДЕ
//	    |   РаботникиОрганизацииСрезПоследних.Сотрудник = &Сотрудник";

//	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
//	    
//    Результат = Запрос.Выполнить();
//	Выборка = Результат.Выбрать();
//	
//	Пока Выборка.Следующий() Цикл
//	    СтруктураОтвета = Новый Структура;
//	    СтруктураОтвета.Вставить("Состояние",Выборка.Состояние);
//	    СтруктураОтвета.Вставить("Организация",Выборка.Организация);
//	    Возврат СтруктураОтвета;
//	КонецЦикла;
//	
//	Иначе
//	    Возврат Неопределено;
//	КонецЕсли;
//    
//КонецФункции // ()
//**************

//CeHbKA 13.05.2019 #3103
&НаСервере
Функция ПолучитьФизЛицоНаСервере(Сотрудник)
	
	Попытка
		Возврат Сотрудник.ФизЛицо;	
	Исключение	
		Возврат Справочники.ФизическиеЛица.ПустаяСсылка();	
	КонецПопытки; 
	
КонецФункции
//CeHbKA 13.05.2019 #3103


