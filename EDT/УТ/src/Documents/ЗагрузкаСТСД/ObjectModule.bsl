
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
	
	//+++ БАО 28.07.2017 №1540 
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
		
		ТекстОшибки = "ОбработкаПроведения. Начало. Отказ: " + Отказ;
		bao.ЗаписатьВФайлЛогаОтказа(ТекстОшибки, ДополнительныеСвойства);
		
	КонецЕсли;	
	//--- БАО 28.07.2017 №1540 	
	
	//Для Каждого Тек Из Штрихкоды Цикл
	//	Если Не ЗначениеЗаполнено(Тек.Заказ) Тогда
	//		Продолжить;
	//	КонецеСли;	
	//    
	//    ////+++++Серегин М.В. 28.01.2016 13:14:04 старый код
	//    //Если СокрЛП(Тек.Заказ.ВладелецТовара.Код) = "Shop_248" Или СокрЛП(Тек.Заказ.ВладелецТовара.Родитель.Код) = "Shop_100" Тогда
	//    //	
	//    //	СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Заказ.Номер), "ЧГ=") + ",211,'Online приход по ТСД'";
	//    //	Если lem.СохранитьСтатус(Тек.Заказ, 211, Ссылка) Тогда
	//    //		Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
	//    //	КонецеСли;
	//    //КонецеСли;
	//    //+++++Серегин М.В. 28.01.2016 13:14:10 новый
	//    Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.Приход 
	//        ИЛИ ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFi
	//        ИЛИ ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute
	//		ИЛИ ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом
	//		ИЛИ ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходOZONE
	//		ИЛИ ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВыборкойНазад
	//        ИЛИ ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiПоСекторам Тогда
	//        
	//        Если НЕ СтатусыВыгруженыВАдминку Тогда
	//            СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек.Заказ.Номер), "ЧГ=") + ",211,'Online приход по ТСД'";
	//            Если lem.СохранитьСтатус(Тек.Заказ, 211, Ссылка) Тогда
	//                Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
	//                СтатусыВыгруженыВАдминкуПерем = Истина;
	//            КонецеСли;
	//        КонецЕсли;
	//    КонецеСли;
	//    //-----Серегин М.В. 28.01.2016 13:16:35 
	//    
	//КонецЦикла;
	//+++++Серегин М.В. 01.02.2016 13:56:21 
	
	//lem оптимизация
	// Если ТипЗагрузкиТСД <> Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвто Тогда отключено 04.06.2019 в рамках доработок 2943
	ЗаписанныеСтатусыЗаказов = Неопределено; // 2943
	
	Если Не СтатусыВыгруженыВАдминку Тогда
		ОбновлениеСтатусовВАдминке(РежимЗаписиДокумента.Проведение, Отказ, ЗаписанныеСтатусыЗаказов); // модифицировано в рамках Задача № 2943
		СтатусыВыгруженыВАдминку = Не Отказ; // Установка реквизита перенесена к установке статусов  
	КонецеСли;
	
	// КонецеСли;
	//lem оптимизация	
	
	ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
	//-----Серегин М.В. 01.02.2016 13:56:23 
	ДвиженияПоОтказнымЗаказам();                   
	//+++++Серегин М.В. 22.03.2016 14:27:55 
	Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходOZONE Тогда 
		Отказ = НЕ(Создатьoz_ПриёмПосылок());
	КонецЕсли;
	//-----Серегин М.В. 22.03.2016 14:27:57 
	
	
	Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвто И Штрихкоды.Количество() Тогда 
		Отказ = НЕ(СоздатьПогрузкаВАвто(ЗаписанныеСтатусыЗаказов));
	КонецЕсли;
	
	// Перенесено в ОбновлениеСтатусовВАдминке в рамках 2943
	//// - Дробница Р. Задача № 2588
	//Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute
	//	ИЛИ ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом Тогда		
	//	Отказ = НЕ(РаботаСМестамиЗаказовСервер.ЗаписатьСтатусыМестЗаказов(Ссылка));	// Отправка статусов заказов (211, 212) теперь тут	
	//КонецЕсли;	
	//// Дробница Р. Задача № 2588 - 
	
	// - Дробница Р. Задача № 2780  OZONE
	Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute
		ИЛИ ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом Тогда	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗагрузкаСТСДШтрихкоды.Штрихкод КАК Штрихкод,
		|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ
		|ИЗ
		|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		|ГДЕ
		|	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
		|	И ЗагрузкаСТСДШтрихкоды.Заказ.ВладелецТовара = &ВладелецТовара";
		
		Запрос.УстановитьПараметр("ВладелецТовара", ПараметрыСеанса.oz_МагазинOZON);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Ответ = oz_РаботаССервисом.PostingReceiveAdds(, ВыборкаДетальныеЗаписи.Штрихкод, ,ВыборкаДетальныеЗаписи.Заказ, Ссылка); 
			
			Если Не Ответ.Код = 0 Тогда		
				// Что-то случилось при отправке
			КонецЕсли;
			
		КонецЦикла;	
	КонецЕсли;
	// Дробница Р. Задача № 2780 - 
	
	
	// Михушкин - 13.04.2016 - движения по РС ФиксацияВеса --->> 
	Если СчитыватьВес Тогда		
		Движения.ФиксацияВеса.Записывать = Истина;			
		Если ЗначениеЗаполнено(ЭлектронныеВесы) Тогда	
			
			
			
			// МАС - 03.11.2017 - №2002 --->> 	
			
			// -------------------- старый код --------------------
			
			//// пока суммируем Вес по заказам 
			//Запрос = Новый Запрос("ВЫБРАТЬ
			//                      |	ЗагрузкаСТСДШтрихкоды.Заказ,
			//                      |	СУММА(ЗагрузкаСТСДШтрихкоды.Вес) КАК Вес,
			//                      |	МАКСИМУМ(ЗагрузкаСТСДШтрихкоды.Штрихкод) КАК Штрихкод
			//                      |ИЗ
			//                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
			//                      |ГДЕ
			//                      |	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
			//                      |
			//                      |СГРУППИРОВАТЬ ПО
			//                      |	ЗагрузкаСТСДШтрихкоды.Заказ");
			//Запрос.УстановитьПараметр("Ссылка", Ссылка);
			//Рез = Запрос.Выполнить().Выбрать();
			//			
			//Пока Рез.Следующий() Цикл
			//	Если ЗначениеЗаполнено(Рез.Заказ) Тогда
			//		Если Рез.Вес > 0 Тогда						
			//			Движение = Движения.ФиксацияВеса.Добавить();
			//			Движение.Весы   = ЭлектронныеВесы;
			//			Движение.Заказ  = Рез.Заказ;
			//			Движение.Вес    = Рез.Вес;
			//			Движение.Период = Дата;											
			//		КонецЕсли;				
			//	Иначе
			//		#Если Клиент Тогда
			//		Сообщить("Не указан заказ для штрихкода " + Рез.Штрихкод);
			//		#КонецЕсли
			//	КонецЕсли;
			//КонецЦикла;		
			
			// ------------------- новый код -------------------
			
			// МАС - 04.04.2018 - № --->> 			
			//Запрос = Новый Запрос("ВЫБРАТЬ
			//                      |	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ,
			//                      |	ЗагрузкаСТСДШтрихкоды.Вес КАК Вес,
			//                      |	ЗагрузкаСТСДШтрихкоды.Штрихкод КАК Штрихкод,
			//                      |	ЗагрузкаСТСДШтрихкоды.МестоЗаказа КАК МестоЗаказа,
			//                      |	ЗагрузкаСТСДШтрихкоды.НомерСтроки КАК НомерСтроки
			//                      |ПОМЕСТИТЬ ВТ_ТЧ
			//                      |ИЗ
			//                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
			//                      |ГДЕ
			//                      |	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
			//                      |;
			//                      |
			//                      |////////////////////////////////////////////////////////////////////////////////
			//                      |ВЫБРАТЬ
			//                      |	ВТ_ТЧ.Заказ КАК Заказ,
			//                      |	СУММА(ВТ_ТЧ.Вес) КАК Вес,
			//                      |	МАКСИМУМ(ВТ_ТЧ.Штрихкод) КАК Штрихкод,
			//                      |	ЛОЖЬ КАК ПоМестам
			//                      |ПОМЕСТИТЬ ВТ_НеПоМестам
			//                      |ИЗ
			//                      |	ВТ_ТЧ КАК ВТ_ТЧ
			//                      |ГДЕ
			//                      |	ЕСТЬNULL(ВТ_ТЧ.МестоЗаказа, ЗНАЧЕНИЕ(Справочник.МестапоЗаказам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.МестапоЗаказам.ПустаяСсылка)
			//                      |
			//                      |СГРУППИРОВАТЬ ПО
			//                      |	ВТ_ТЧ.Заказ
			//                      |;
			//                      |
			//                      |////////////////////////////////////////////////////////////////////////////////
			//                      |ВЫБРАТЬ
			//                      |	ВТ_ТЧ.Заказ КАК Заказ,
			//                      |	ВТ_ТЧ.Вес КАК Вес,
			//                      |	ВТ_ТЧ.Штрихкод КАК Штрихкод,
			//                      |	ВТ_ТЧ.МестоЗаказа КАК МестоЗаказа,
			//                      |	ВТ_ТЧ.НомерСтроки КАК НомерСтроки,
			//                      |	ИСТИНА КАК ПоМестам
			//                      |ПОМЕСТИТЬ ВТ_ПоМестам
			//                      |ИЗ
			//                      |	ВТ_ТЧ КАК ВТ_ТЧ
			//                      |ГДЕ
			//                      |	ВТ_ТЧ.МестоЗаказа ЕСТЬ НЕ NULL 
			//                      |	И ВТ_ТЧ.МестоЗаказа <> ЗНАЧЕНИЕ(Справочник.МестапоЗаказам.ПустаяСсылка)
			//                      |;
			//                      |
			//                      |////////////////////////////////////////////////////////////////////////////////
			//                      |ВЫБРАТЬ
			//                      |	ВТ_ПоМестам.Заказ КАК Заказ,
			//                      |	ВТ_ПоМестам.МестоЗаказа КАК МестоЗаказа,
			//                      |	МАКСИМУМ(ВТ_ПоМестам.НомерСтроки) КАК НомерСтроки
			//                      |ПОМЕСТИТЬ ВТ_КрайниеМеста
			//                      |ИЗ
			//                      |	ВТ_ПоМестам КАК ВТ_ПоМестам
			//                      |
			//                      |СГРУППИРОВАТЬ ПО
			//                      |	ВТ_ПоМестам.Заказ,
			//                      |	ВТ_ПоМестам.МестоЗаказа
			//                      |;
			//                      |
			//                      |////////////////////////////////////////////////////////////////////////////////
			//                      |ВЫБРАТЬ
			//                      |	ВТ_ПоМестам.Заказ КАК Заказ,
			//                      |	СУММА(ВТ_ПоМестам.Вес) КАК Вес,
			//                      |	ВТ_ПоМестам.Штрихкод КАК Штрихкод,
			//                      |	ВТ_ПоМестам.МестоЗаказа КАК МестоЗаказа,
			//                      |	ВТ_ПоМестам.ПоМестам КАК ПоМестам,
			//                      |	МАКСИМУМ(ЕСТЬNULL(ФиксацияВесаСрезПоследних.Вес, 0)) КАК ВесОстальныхМест
			//                      |ИЗ
			//                      |	ВТ_КрайниеМеста КАК ВТ_КрайниеМеста
			//                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоМестам КАК ВТ_ПоМестам
			//                      |		ПО ВТ_КрайниеМеста.Заказ = ВТ_ПоМестам.Заказ
			//                      |			И ВТ_КрайниеМеста.МестоЗаказа = ВТ_ПоМестам.МестоЗаказа
			//                      |			И ВТ_КрайниеМеста.НомерСтроки = ВТ_ПоМестам.НомерСтроки
			//                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксацияВеса.СрезПоследних(
			//                      |				,
			//                      |				МестоЗаказа ЕСТЬ НЕ NULL 
			//                      |					И МестоЗаказа <> ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)) КАК ФиксацияВесаСрезПоследних
			//                      |		ПО ВТ_КрайниеМеста.Заказ = ФиксацияВесаСрезПоследних.Заказ
			//                      |			И ВТ_КрайниеМеста.МестоЗаказа <> ФиксацияВесаСрезПоследних.МестоЗаказа
			//                      |
			//                      |СГРУППИРОВАТЬ ПО
			//                      |	ВТ_ПоМестам.Заказ,
			//                      |	ВТ_ПоМестам.Штрихкод,
			//                      |	ВТ_ПоМестам.ПоМестам,
			//                      |	ВТ_ПоМестам.МестоЗаказа
			//                      |
			//                      |ОБЪЕДИНИТЬ ВСЕ
			//                      |
			//                      |ВЫБРАТЬ
			//                      |	ВТ_НеПоМестам.Заказ,
			//                      |	ВТ_НеПоМестам.Вес,
			//                      |	ВТ_НеПоМестам.Штрихкод,
			//                      |	ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка),
			//                      |	ВТ_НеПоМестам.ПоМестам,
			//                      |	NULL
			//                      |ИЗ
			//                      |	ВТ_НеПоМестам КАК ВТ_НеПоМестам");			
			
			//Запрос = Новый Запрос("ВЫБРАТЬ
			//                      |	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ,
			//                      |	ЗагрузкаСТСДШтрихкоды.Вес КАК Вес,
			//                      |	ЗагрузкаСТСДШтрихкоды.Штрихкод КАК Штрихкод,
			//                      |	ЗагрузкаСТСДШтрихкоды.МестоЗаказа КАК МестоЗаказа,
			//                      |	ЗагрузкаСТСДШтрихкоды.НомерСтроки КАК НомерСтроки
			//                      |ПОМЕСТИТЬ ВТ_ТЧ
			//                      |ИЗ
			//                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
			//                      |ГДЕ
			//                      |	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
			//                      |;
			//                      |
			//                      |////////////////////////////////////////////////////////////////////////////////
			//                      |ВЫБРАТЬ
			//                      |	ВТ_ТЧ.Заказ КАК Заказ,
			//                      |	ВТ_ТЧ.МестоЗаказа КАК МестоЗаказа,
			//                      |	МАКСИМУМ(ВТ_ТЧ.НомерСтроки) КАК НомерСтроки
			//                      |ПОМЕСТИТЬ ВТ_КрайнееМесто
			//                      |ИЗ
			//                      |	ВТ_ТЧ КАК ВТ_ТЧ
			//                      |
			//                      |СГРУППИРОВАТЬ ПО
			//                      |	ВТ_ТЧ.Заказ,
			//                      |	ВТ_ТЧ.МестоЗаказа
			//                      |;
			//                      |
			//                      |////////////////////////////////////////////////////////////////////////////////
			//                      |ВЫБРАТЬ
			//                      |	ВТ_ТЧ.Заказ КАК Заказ,
			//                      |	ВТ_ТЧ.Вес КАК Вес,
			//                      |	ВТ_ТЧ.Штрихкод КАК Штрихкод,
			//                      |	ВТ_ТЧ.МестоЗаказа КАК МестоЗаказа
			//                      |ИЗ
			//                      |	ВТ_ТЧ КАК ВТ_ТЧ
			//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КрайнееМесто КАК ВТ_КрайнееМесто
			//                      |		ПО ВТ_ТЧ.Заказ = ВТ_КрайнееМесто.Заказ
			//                      |			И ВТ_ТЧ.МестоЗаказа = ВТ_КрайнееМесто.МестоЗаказа
			//                      |			И ВТ_ТЧ.НомерСтроки = ВТ_КрайнееМесто.НомерСтроки");
			//// <<--- МАС
			
			
			// МАС - 18.04.2018 - № --->> 		
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	ЗагрузкаСТСДШтрихкоды.Штрихкод КАК Штрихкод,
			|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ,
			|	ЗагрузкаСТСДШтрихкоды.Вес КАК Вес,
			|	ЗагрузкаСТСДШтрихкоды.МестоЗаказа КАК МестоЗаказа,
			|	ЗагрузкаСТСДШтрихкоды.НомерСтроки КАК НомерСтроки
			|ПОМЕСТИТЬ ВТ_ТЧ
			|ИЗ
			|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
			|ГДЕ
			|	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
			|	И ЗагрузкаСТСДШтрихкоды.Вес > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ТЧ.Заказ КАК Заказ,
			|	ВТ_ТЧ.МестоЗаказа КАК МестоЗаказа,
			|	МАКСИМУМ(ВТ_ТЧ.НомерСтроки) КАК НомерСтроки
			|ПОМЕСТИТЬ ВТ_КрайниеЗначенияТЧ
			|ИЗ
			|	ВТ_ТЧ КАК ВТ_ТЧ
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ТЧ.Заказ,
			|	ВТ_ТЧ.МестоЗаказа
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ТЧ.Штрихкод КАК Штрихкод,
			|	ВТ_ТЧ.Заказ КАК Заказ,
			|	ВТ_ТЧ.Вес КАК Вес,
			|	ВТ_ТЧ.МестоЗаказа КАК МестоЗаказа
			|ИЗ
			|	ВТ_КрайниеЗначенияТЧ КАК ВТ_КрайниеЗначенияТЧ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЧ КАК ВТ_ТЧ
			|		ПО ВТ_КрайниеЗначенияТЧ.НомерСтроки = ВТ_ТЧ.НомерСтроки");
			// <<--- МАС
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			РезТЗ = Запрос.Выполнить().Выгрузить();
			
			//Пока Рез.Следующий() Цикл
			Для каждого Стр Из РезТЗ Цикл
				
				Если ЗначениеЗаполнено(Стр.Заказ) Тогда
					//Если Стр.Вес > 0 Тогда						
					Движение = Движения.ФиксацияВеса.Добавить();
					Движение.Весы        = ЭлектронныеВесы;
					Движение.Заказ       = Стр.Заказ;
					Движение.Вес         = Стр.Вес;
					Движение.МестоЗаказа = Стр.МестоЗаказа;
					Движение.Период      = Дата;											
					//КонецЕсли;				
				Иначе
					#Если Клиент Тогда
						Сообщить("Не указан заказ для штрихкода " + Стр.Штрихкод);
					#КонецЕсли
				КонецЕсли;
			КонецЦикла;
			
			// <<--- МАС
			
		Иначе
			#Если Клиент Тогда
				Сообщить("Не указаны Электронные Весы");	
			#КонецЕсли
		КонецЕсли;
		
		
	КонецЕсли;
	// <<--- Михушкин 
	
	// Михушкин - 25.04.2016 - обновление веса в админке --->> 
	Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом Тогда
		
		// МАС - 03.11.2017 - №2002 --->> 
		
		// ----------------- старый код ---------------------
		
		//	Запрос = Новый Запрос("ВЫБРАТЬ
		//	                      |	ЗагрузкаСТСДШтрихкоды.Заказ,
		//	                      |	СУММА(ЗагрузкаСТСДШтрихкоды.Вес) КАК Вес
		//	                      |ИЗ
		//	                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		//	                      |ГДЕ
		//	                      |	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
		//	                      |
		//	                      |СГРУППИРОВАТЬ ПО
		//	                      |	ЗагрузкаСТСДШтрихкоды.Заказ");
		//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
		//	Рез = Запрос.Выполнить().Выбрать();
		//	
		//	СтрЗапроса = "declare @ords [dbo].[TorderActualOrderWeight]";
		//
		//	Пока Рез.Следующий() Цикл
		//		Если ЗначениеЗаполнено(Рез.Заказ) Тогда
		//			
		//			СтрЗапроса = СтрЗапроса + " insert into @ords(orderId, actualOrderWeight)		
		//			| values ("+Формат(СокрЛП(Рез.Заказ.Номер), "ЧГ=")+ ", " + Формат(Рез.Вес, "ЧРД=.; ЧН=0; ЧГ=") +")";				
		//	    КонецЕсли;
		//	КонецЦикла;
		
		// ----------------------- новый код -----------------------
		
		//Запрос = Новый Запрос("ВЫБРАТЬ
		//                      |	ЗагрузкаСТСДШтрихкоды.Заказ,
		//                      |	СУММА(ЗагрузкаСТСДШтрихкоды.Вес) КАК Вес
		//                      |ИЗ
		//                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		//                      |ГДЕ
		//                      |	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
		//                      |
		//                      |СГРУППИРОВАТЬ ПО
		//                      |	ЗагрузкаСТСДШтрихкоды.Заказ");
		//Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		
		//Запрос = Новый Запрос("ВЫБРАТЬ
		//                      |	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ,
		//                      |	ЗагрузкаСТСДШтрихкоды.Вес КАК Вес,
		//                      |	ЗагрузкаСТСДШтрихкоды.МестоЗаказа КАК МестоЗаказа
		//                      |ПОМЕСТИТЬ ВТ
		//                      |ИЗ
		//                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		//                      |ГДЕ
		//                      |	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
		//                      |
		//                      |СГРУППИРОВАТЬ ПО
		//                      |	ЗагрузкаСТСДШтрихкоды.Заказ,
		//                      |	ЗагрузкаСТСДШтрихкоды.МестоЗаказа,
		//                      |	ЗагрузкаСТСДШтрихкоды.Вес
		//                      |;
		//                      |
		//                      |////////////////////////////////////////////////////////////////////////////////
		//                      |ВЫБРАТЬ
		//                      |	ФиксацияВесаСрезПоследних.МестоЗаказа КАК МестоЗаказа,
		//                      |	ЕСТЬNULL(ФиксацияВесаСрезПоследних.Вес, 0) КАК Вес,
		//                      |	ФиксацияВесаСрезПоследних.Заказ КАК Заказ
		//                      |ПОМЕСТИТЬ ВТ_ДанныеРегистра
		//                      |ИЗ
		//                      |	РегистрСведений.ФиксацияВеса.СрезПоследних(
		//                      |			,
		//                      |			Заказ В
		//                      |					(ВЫБРАТЬ
		//                      |						ВТ.Заказ
		//                      |					ИЗ
		//                      |						ВТ КАК ВТ)
		//                      |				И НЕ МестоЗаказа В
		//                      |						(ВЫБРАТЬ
		//                      |							ВТ.МестоЗаказа
		//                      |						ИЗ
		//                      |							ВТ КАК ВТ)) КАК ФиксацияВесаСрезПоследних
		//                      |
		//                      |СГРУППИРОВАТЬ ПО
		//                      |	ФиксацияВесаСрезПоследних.Заказ,
		//                      |	ФиксацияВесаСрезПоследних.МестоЗаказа,
		//                      |	ЕСТЬNULL(ФиксацияВесаСрезПоследних.Вес, 0)
		//                      |;
		//                      |
		//                      |////////////////////////////////////////////////////////////////////////////////
		//                      |ВЫБРАТЬ
		//                      |	ВТ_ДанныеРегистра.Заказ КАК Заказ,
		//                      |	СУММА(ВТ_ДанныеРегистра.Вес) КАК Вес
		//                      |ПОМЕСТИТЬ ВТ_РегистрИтог
		//                      |ИЗ
		//                      |	ВТ_ДанныеРегистра КАК ВТ_ДанныеРегистра
		//                      |
		//                      |СГРУППИРОВАТЬ ПО
		//                      |	ВТ_ДанныеРегистра.Заказ
		//                      |;
		//                      |
		//                      |////////////////////////////////////////////////////////////////////////////////
		//                      |ВЫБРАТЬ
		//                      |	ВТ.Заказ КАК Заказ,
		//                      |	ВТ.Вес КАК Вес,
		//                      |	ВТ.МестоЗаказа КАК МестоЗаказа,
		//                      |	ВТ_РегистрИтог.Вес КАК ВесОстальныхМест
		//                      |ИЗ
		//                      |	ВТ КАК ВТ
		//                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрИтог КАК ВТ_РегистрИтог
		//                      |		ПО ВТ.Заказ = ВТ_РегистрИтог.Заказ");
		
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ЗагрузкаСТСДШтрихкоды.Штрихкод КАК Штрихкод,
		|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ,
		|	ЗагрузкаСТСДШтрихкоды.Вес КАК Вес,
		|	ЗагрузкаСТСДШтрихкоды.МестоЗаказа КАК МестоЗаказа,
		|	ЗагрузкаСТСДШтрихкоды.НомерСтроки КАК НомерСтроки,
		|	ЗагрузкаСТСДШтрихкоды.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ТЧ
		|ИЗ
		|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		|ГДЕ
		|	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
		|	И ЗагрузкаСТСДШтрихкоды.Вес > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЧ.Заказ КАК Заказ,
		|	ВТ_ТЧ.МестоЗаказа КАК МестоЗаказа,
		|	МАКСИМУМ(ВТ_ТЧ.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_КрайниеЗначенияТЧ
		|ИЗ
		|	ВТ_ТЧ КАК ВТ_ТЧ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТЧ.Заказ,
		|	ВТ_ТЧ.МестоЗаказа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЧ.Штрихкод КАК Штрихкод,
		|	ВТ_ТЧ.Заказ КАК Заказ,
		|	ВТ_ТЧ.Вес КАК Вес,
		|	ВТ_ТЧ.МестоЗаказа КАК МестоЗаказа,
		|	ВТ_ТЧ.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Док
		|ИЗ
		|	ВТ_КрайниеЗначенияТЧ КАК ВТ_КрайниеЗначенияТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЧ КАК ВТ_ТЧ
		|		ПО ВТ_КрайниеЗначенияТЧ.НомерСтроки = ВТ_ТЧ.НомерСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТЧ.Заказ,
		|	ВТ_ТЧ.МестоЗаказа,
		|	ВТ_ТЧ.Штрихкод,
		|	ВТ_ТЧ.Ссылка,
		|	ВТ_ТЧ.Вес
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФиксацияВеса.Период КАК Период,
		|	ФиксацияВеса.Заказ КАК Заказ,
		|	ФиксацияВеса.МестоЗаказа КАК МестоЗаказа,
		|	ФиксацияВеса.Вес КАК Вес
		|ПОМЕСТИТЬ ВТ_Рег
		|ИЗ
		|	РегистрСведений.ФиксацияВеса КАК ФиксацияВеса
		|ГДЕ
		|	ФиксацияВеса.Заказ В
		|			(ВЫБРАТЬ
		|				ВТ_Док.Заказ
		|			ИЗ
		|				ВТ_Док КАК ВТ_Док)
		|	И ФиксацияВеса.Регистратор <> &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_Рег.Период) КАК Период,
		|	ВТ_Рег.Заказ КАК Заказ,
		|	ВТ_Рег.МестоЗаказа КАК МестоЗаказа
		|ПОМЕСТИТЬ ВТ_КрайРегистра
		|ИЗ
		|	ВТ_Рег КАК ВТ_Рег
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Рег.Заказ,
		|	ВТ_Рег.МестоЗаказа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Рег.Период КАК Период,
		|	ВТ_Рег.Заказ КАК Заказ,
		|	ВТ_Рег.МестоЗаказа КАК МестоЗаказа,
		|	ВТ_Рег.Вес КАК Вес
		|ПОМЕСТИТЬ ВТ_РегИтог
		|ИЗ
		|	ВТ_КрайРегистра КАК ВТ_КрайРегистра
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Рег КАК ВТ_Рег
		|		ПО ВТ_КрайРегистра.Заказ = ВТ_Рег.Заказ
		|			И ВТ_КрайРегистра.МестоЗаказа = ВТ_Рег.МестоЗаказа
		|			И ВТ_КрайРегистра.Период = ВТ_Рег.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Док.Заказ КАК Заказ,
		|	ВТ_Док.МестоЗаказа КАК МестоЗаказа,
		|	ВТ_Док.Вес КАК Вес,
		|	ВТ_Док.Ссылка.Дата КАК Период
		|ПОМЕСТИТЬ ВТ_Суперитог
		|ИЗ
		|	ВТ_Док КАК ВТ_Док
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_РегИтог.Заказ,
		|	ВТ_РегИтог.МестоЗаказа,
		|	ВТ_РегИтог.Вес,
		|	ВТ_РегИтог.Период
		|ИЗ
		|	ВТ_РегИтог КАК ВТ_РегИтог
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Суперитог.Заказ КАК Заказ,
		|	ВТ_Суперитог.МестоЗаказа КАК МестоЗаказа,
		|	МАКСИМУМ(ВТ_Суперитог.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_КрайСуперитогов
		|ИЗ
		|	ВТ_Суперитог КАК ВТ_Суперитог
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Суперитог.Заказ,
		|	ВТ_Суперитог.МестоЗаказа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Суперитог.Заказ КАК Заказ,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Суперитог.МестоЗаказа) КАК МестоЗаказа,
		|	СУММА(ВТ_Суперитог.Вес) КАК Вес,
		|	ВТ_Суперитог.Заказ.Номер КАК НомерЗаказа
		|ИЗ
		|	ВТ_КрайСуперитогов КАК ВТ_КрайСуперитогов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Суперитог КАК ВТ_Суперитог
		|		ПО ВТ_КрайСуперитогов.Заказ = ВТ_Суперитог.Заказ
		|			И ВТ_КрайСуперитогов.МестоЗаказа = ВТ_Суперитог.МестоЗаказа
		|			И ВТ_КрайСуперитогов.Период = ВТ_Суперитог.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Суперитог.Заказ");	
		Запрос.УстановитьПараметр("Ссылка", Ссылка);			
		Рез = Запрос.Выполнить().Выбрать();
		
		СтрЗапроса = "declare @ords [dbo].[TorderActualOrderWeight]";
		МассивЗаказов = Новый Массив;
		Пока Рез.Следующий() Цикл
			Если ЗначениеЗаполнено(Рез.Заказ) Тогда
				
				//ВесДляПередачиВАдминку = Рез.Вес;
				//Если ЗначениеЗаполнено(Рез.ВесОстальныхМест) Тогда			
				//	ВесДляПередачиВАдминку = ВесДляПередачиВАдминку + Рез.ВесОстальныхМест;			
				//КонецЕсли;
				
				СтрЗапроса = СтрЗапроса + " insert into @ords(orderId, actualOrderWeight)		
				| values ("+Формат(СокрЛП(Рез.НомерЗаказа), "ЧГ=")+ ", " + Формат(Рез.Вес, "ЧРД=.; ЧН=0; ЧГ=") +")";				
				МассивЗаказов.Добавить(Рез.Заказ);
			КонецЕсли;
		КонецЦикла;
		// <<--- МАС 
		
		
		СтрЗапроса = СтрЗапроса + " EXEC [dbo].import_setOrderActualWeight @ords";
		Результат = Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);               
		
		//lem
		//МаршрутизацияЗаказовСервер.УстановитьЛогистическиеКатегорииЗаказов(МассивЗаказов);
		//lem
		
	КонецЕсли;
	// <<--- Михушкин 
	
	
	Если ТипЗагрузкиТСД <> Перечисления.ТипыЗагрузкиТСД.ПриходOZONE И 
		ТипЗагрузкиТСД <> Перечисления.ТипыЗагрузкиТСД.Аксиомус И
		ТипЗагрузкиТСД <> Перечисления.ТипыЗагрузкиТСД.ВозвратWiFiПоКонтрагентам И
		ТипЗагрузкиТСД <> Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвто И
		ТипЗагрузкиТСД <> Перечисления.ТипыЗагрузкиТСД.ВозвратКомитенту Тогда
		
		ЗафиксироватьШтрихкодыВРС();
	КонецеСли;	
	
	
	Если ТипЗагрузкиТСД <> Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвто Тогда
		Зап = Новый Запрос;
		
		Зап.Текст = "ВЫБРАТЬ
		|	ЗагрузкаСТСДШтрихкоды.Заказ.Ссылка КАК Заказ,
		|	ЗагрузкаСТСДШтрихкоды.Ссылка.ТерминалПриема КАК Терминал
		|ИЗ
		|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		|ГДЕ
		|	ЗагрузкаСТСДШтрихкоды.Ссылка.Ссылка = &Док
		|	И ЗагрузкаСТСДШтрихкоды.Заказ.Ссылка <> ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)";
		Зап.УстановитьПараметр("Док", Ссылка);			
		
		
		Рез = Зап.Выполнить().Выгрузить();
		
		
		//+++ БАО 02.08.2017 №1550	
		
		//Список = Новый СписокЗначений;
		//Массив = Рез.ВыгрузитьКолонку("Заказ");
		//Список.ЗагрузитьЗначения(Массив);
		Список = Рез.Скопировать(, "Заказ, Терминал");
		
		//--- БАО 02.08.2017 №1550
		
		lem.ЗафиксироватьМестонахождениеЗаказа(Список, Справочники.ВидыМестонахожденияЗаказа.НаСкладе, Ссылка);
	КонецеСли;
	
	Если ЭтоПриходПринципала Тогда
		Если Штрихкоды.Количество() > 0 Тогда
			may.ЗаписатьСобытиеПриходПринципала(Штрихкоды[0].ДатаВремя, Штрихкоды[0].Контрагент, ТерминалПриема);
		КонецЕсли;
	КонецЕсли;
	
	
	// МАС - 18.07.2017 - №1392 - Движения РС УчетВыходаНаРаботуСотрудниковКомпании --->> 
	Движения.УчетВыходаНаРаботуСотрудниковКомпании.Очистить();
	Движения.УчетВыходаНаРаботуСотрудниковКомпании.Записывать = Истина;	
	
	ТЗ_БэйджиСотрудников = БэйджиСотрудников.Выгрузить();
	ТЗ_БэйджиСотрудников.Свернуть("БейджСотрудника,Сотрудник,ТипУчастникаЭкипажа");
	
	Для каждого Ст Из ТЗ_БэйджиСотрудников Цикл		
		
		Движение_Бэйджи = Движения.УчетВыходаНаРаботуСотрудниковКомпании.Добавить();
		Движение_Бэйджи.БэйджСотрудника = Ст.БейджСотрудника;
		Движение_Бэйджи.Период = Дата;
		Движение_Бэйджи.Сотрудник = Ст.Сотрудник;
		Движение_Бэйджи.Регистратор = Ссылка;
		Движение_Бэйджи.СотрудникВышелНаРаботу = Истина;		
		
	КонецЦикла;
	// <<--- МАС 
	
	//Асеев 23.11.2020 (Задача № 4357)>>>
	Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute Или ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ИСТИНА КАК Поле1
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Ссылка = &Склад
		|	И Склады.ПереноситьДатуЗаказаПриПоступленииСПрошлойДатой";
		Если Не Запрос.Выполнить().Пустой() Тогда
			АвтопереносДатыДоставкиПриПоступленииТовараПодЗаказыСПрошлойДатойДоставки();
		КонецЕсли;
		
		//Асеев 03.11.2023 (Задача № 5161)>>>
		ВыполнитьДвиженияПоРСэкУчетПроизводственныхОпераций();
		//Асеев 03.11.2023 (Задача № 5161)<<<
	КонецЕсли;
	//Асеев 23.11.2020 (Задача № 4357)<<<
	
	//Асеев 29.03.2022 (Задача № 4767)>>>
	ОбработатьОтправкуСсылокЛКЗаказов();
	//Асеев 29.03.2022 (Задача № 4767)<<<

	//+++ БАО 28.07.2017 №1540 
	Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
		
		ТекстОшибки = "ОбработкаПроведения. Конец. Отказ: " + Отказ;
		bao.ЗаписатьВФайлЛогаОтказа(ТекстОшибки, ДополнительныеСвойства);
		
	КонецЕсли;	
	//--- БАО 28.07.2017 №1540 
	
	
	
КонецПроцедуры

//Асеев 03.11.2023 (Задача № 5161)>>>
Процедура ВыполнитьДвиженияПоРСэкУчетПроизводственныхОпераций()
	
	Движения.экУчетПроизводственныхОпераций.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ТерминалПриема", ТерминалПриема);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|	РеализацияТоваровУслуг.ТерминалПриема КАК ТерминалПриема
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка)
	|			И ЗагрузкаСТСДШтрихкоды.Заказ = РеализацияТоваровУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	МАКСИМУМ(экУчетПроизводственныхОпераций.ВидОперации = ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПередачаЗаказовНаМагистраль)) КАК ОбратныйПотокНаМагистраль,
	|	МАКСИМУМ(экУчетПроизводственныхОпераций.ВидОперации = ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПриходЗаказовСМагистрали)) КАК ОбратныйПотокСМагистрали
	|ПОМЕСТИТЬ ВТ_РанниеОперации
	|ИЗ
	|	РегистрСведений.экУчетПроизводственныхОпераций КАК экУчетПроизводственныхОпераций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО (ВТ_Заказы.ТерминалПриема = &ТерминалПриема)
	|			И (экУчетПроизводственныхОпераций.Период < &Период)
	|			И экУчетПроизводственныхОпераций.Заказ = ВТ_Заказы.Заказ
	|			И (экУчетПроизводственныхОпераций.ВидОперации В (ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПередачаЗаказовНаМагистраль), ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПриходЗаказовСМагистрали)))
	|			И (экУчетПроизводственныхОпераций.ОбратныйПоток)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Заказы.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_ОбратныйПотокСМагистрали
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РанниеОперации КАК ВТ_РанниеОперации
	|		ПО ВТ_Заказы.Заказ = ВТ_РанниеОперации.Заказ
	|ГДЕ
	|	ВТ_Заказы.ТерминалПриема = &ТерминалПриема
	|	И ЕСТЬNULL(ВТ_РанниеОперации.ОбратныйПотокНаМагистраль, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(ВТ_РанниеОперации.ОбратныйПотокСМагистрали, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ВТ_ОбратныйПотокСМагистрали.Заказ КАК Заказ,
	|	&ТерминалПриема КАК Регион,
	|	ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПриходЗаказовСМагистрали) КАК ВидОперации,
	|	ИСТИНА КАК ОбратныйПоток
	|ПОМЕСТИТЬ ВТ_ИсходныеДанные
	|ИЗ
	|	ВТ_ОбратныйПотокСМагистрали КАК ВТ_ОбратныйПотокСМагистрали
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ВТ_Заказы.Заказ,
	|	&ТерминалПриема,
	|	ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПриходЗаказовОтПоставщика),
	|	ЛОЖЬ
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОбратныйПотокСМагистрали КАК ВТ_ОбратныйПотокСМагистрали
	|		ПО ВТ_Заказы.Заказ = ВТ_ОбратныйПотокСМагистрали.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.экУчетПроизводственныхОпераций КАК экУчетПроизводственныхОпераций
	|		ПО (экУчетПроизводственныхОпераций.Период < &Период)
	|			И ВТ_Заказы.Заказ = экУчетПроизводственныхОпераций.Заказ
	|			И (экУчетПроизводственныхОпераций.Регион = &ТерминалПриема)
	|			И (экУчетПроизводственныхОпераций.ВидОперации = ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПриходЗаказовОтПоставщика))
	|			И (НЕ экУчетПроизводственныхОпераций.ОбратныйПоток)
	|ГДЕ
	|	ВТ_Заказы.ТерминалПриема = &ТерминалПриема
	|	И ВТ_ОбратныйПотокСМагистрали.Заказ ЕСТЬ NULL
	|	И экУчетПроизводственныхОпераций.Заказ ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ВТ_Заказы.Заказ,
	|	&ТерминалПриема,
	|	ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПриходЗаказовСМагистрали),
	|	ЛОЖЬ
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.экУчетПроизводственныхОпераций КАК экУчетПроизводственныхОпераций
	|		ПО (экУчетПроизводственныхОпераций.Период < &Период)
	|			И ВТ_Заказы.Заказ = экУчетПроизводственныхОпераций.Заказ
	|			И (экУчетПроизводственныхОпераций.Регион = &ТерминалПриема)
	|			И (экУчетПроизводственныхОпераций.ВидОперации = ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ПриходЗаказовСМагистрали))
	|			И (НЕ экУчетПроизводственныхОпераций.ОбратныйПоток)
	|ГДЕ
	|	ВТ_Заказы.ТерминалПриема <> &ТерминалПриема
	|	И экУчетПроизводственныхОпераций.Заказ ЕСТЬ NULL";
	
	ТаблицаДвижений = РегистрыСведений.экУчетПроизводственныхОпераций.ПолучитьТаблицуДвижений(Запрос);
	
	Движения.экУчетПроизводственныхОпераций.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры
//Асеев 03.11.2023 (Задача № 5161)<<<

Функция ДвиженияПоОтказнымЗаказам()
	
	МассивЗаказовАдминка = ПолучитьТаблицуОтказныхЗаказовИзАдминки();
	Если МассивЗаказовАдминка.Количество()>0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|   РеализацияТоваровУслуг.Номер КАК Номер,
		|   РеализацияТоваровУслуг.Ссылка
		|ПОМЕСТИТЬ ВТ_СписокЗаказов
		|ИЗ
		|   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|   РеализацияТоваровУслуг.Номер В(&МассивНомеров)
		|
		|СГРУППИРОВАТЬ ПО
		|   РеализацияТоваровУслуг.Номер,
		|   РеализацияТоваровУслуг.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		|   ВложенныйЗапрос.Номер
		|ПОМЕСТИТЬ ВТ_РеализацияКоличество
		|ИЗ
		|   (ВЫБРАТЬ
		|       РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
		|       РеализацияТоваровУслугТовары.Количество КАК Количество
		|   ИЗ
		|       Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|           ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
		|           ПО РеализацияТоваровУслугТовары.Ссылка.Номер = ВТ_СписокЗаказов.Номер
		|   ГДЕ
		|       НЕ РеализацияТоваровУслугТовары.Номенклатура.Артикул В
		|                   (ВЫБРАТЬ
		|                       УслугиПоЗаказам.Артикул
		|                   ИЗ
		|                       Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
		|   
		|   ОБЪЕДИНИТЬ ВСЕ
		|   
		|   ВЫБРАТЬ
		|       РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
		|       РеализацияТоваровУслугПодарочныеПозиции.Количество
		|   ИЗ
		|       Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
		|           ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
		|           ПО РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер = ВТ_СписокЗаказов.Номер
		|   ГДЕ
		|       НЕ РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
		|                   (ВЫБРАТЬ
		|                       УслугиПоЗаказам.Артикул
		|                   ИЗ
		|                       Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|   ВложенныйЗапрос.Номер
		|
		|ИНДЕКСИРОВАТЬ ПО
		|   ВложенныйЗапрос.Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
		|   СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_ВозвратПокупателяюКоличество
		|ИЗ
		|   Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
		|       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
		|       ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = ВТ_СписокЗаказов.Номер
		|ГДЕ
		|   НЕ ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул В
		|               (ВЫБРАТЬ
		|                   УслугиПоЗаказам.Артикул
		|               ИЗ
		|                   Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
		|
		|СГРУППИРОВАТЬ ПО
		|   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
		|
		|ИНДЕКСИРОВАТЬ ПО
		|   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   РеализацияТоваровУслуг.Ссылка.Номер КАК РеализацияНомер,
		|   новаМестнаяДоставка.Ссылка.Номер КАК МестнаяДоставкаНомер,
		|   ВТ_ВозвратПокупателяюКоличество.Номер КАК ВозвратНомер,
		|   ЕСТЬNULL(ВТ_ВозвратПокупателяюКоличество.Количество, 0) КАК ВозвратКоличество,
		|   ЕСТЬNULL(ВТ_РеализацияКоличество.Количество, 0) КАК РеализацияКоличество,
		|   РеализацияТоваровУслуг.Ссылка КАК Заказ
		|ПОМЕСТИТЬ ВТ_Промежуточная
		|ИЗ
		|   ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
		|       ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|           ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
		|           ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
		|           ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеализацияКоличество КАК ВТ_РеализацияКоличество
		|           ПО РеализацияТоваровУслуг.Номер = ВТ_РеализацияКоличество.Номер
		|           ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВозвратПокупателяюКоличество КАК ВТ_ВозвратПокупателяюКоличество
		|           ПО РеализацияТоваровУслуг.Номер = ВТ_ВозвратПокупателяюКоличество.Номер
		|       ПО ВТ_СписокЗаказов.Номер = РеализацияТоваровУслуг.Ссылка.Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   МАКСИМУМ(ВЫБОР
		|           КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
		|               ТОГДА ВЫБОР
		|                       КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
		|                           ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
		|                       ИНАЧЕ ВЫБОР
		|                               КОГДА ВТ_Итог.РеализацияКоличество = 0
		|                                       И ВТ_Итог.ВозвратКоличество > 0
		|                                   ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
		|                               ИНАЧЕ ВЫБОР
		|                                       КОГДА ВТ_Итог.РеализацияКоличество > 0
		|                                               И ВТ_Итог.ВозвратКоличество > 0
		|                                           ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
		|                                       ИНАЧЕ НЕОПРЕДЕЛЕНО
		|                                   КОНЕЦ
		|                           КОНЕЦ
		|                   КОНЕЦ
		|           ИНАЧЕ ВЫБОР
		|                   КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
		|                       ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
		|                   ИНАЧЕ ВЫБОР
		|                           КОГДА ВТ_Итог.РеализацияКоличество = 0
		|                                   И ВТ_Итог.ВозвратКоличество > 0
		|                               ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
		|                           ИНАЧЕ ВЫБОР
		|                                   КОГДА ВТ_Итог.РеализацияКоличество > 0
		|                                           И ВТ_Итог.ВозвратКоличество > 0
		|                                       ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
		|                                   ИНАЧЕ НЕОПРЕДЕЛЕНО
		|                               КОНЕЦ
		|                       КОНЕЦ
		|               КОНЕЦ
		|       КОНЕЦ) КАК ТипЗаказа,
		|   ВТ_Итог.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВТ_ТипЗаказа
		|ИЗ
		|   ВТ_Промежуточная КАК ВТ_Итог
		|
		|СГРУППИРОВАТЬ ПО
		|   ВТ_Итог.Заказ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|   ВТ_Итог.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   СтатусыСкладскогоУчета.Заказ
		|ПОМЕСТИТЬ ВТ_ЗаказыУжеКВозврату
		|ИЗ
		|   РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
		|       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТипЗаказа КАК ВТ_ТипЗаказа
		|       ПО СтатусыСкладскогоУчета.Заказ = ВТ_ТипЗаказа.Заказ
		|ГДЕ
		|   СтатусыСкладскогоУчета.СтатусСкладскогоУчета В(&СтатусСкладскогоУчета)
		|   И СтатусыСкладскогоУчета.Заказ.Номер В(&МассивНомеров)
		|   И ВТ_ТипЗаказа.ТипЗаказа В(&ТипЗаказа)
		|
		|СГРУППИРОВАТЬ ПО
		|   СтатусыСкладскогоУчета.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   ВТ_СписокЗаказов.Ссылка КАК Заказ,
		|   ВТ_ТипЗаказа.ТипЗаказа,
		|   ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.Возврат1) КАК СтатусСкладскогоУчета
		|ИЗ
		|   ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
		|       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТипЗаказа КАК ВТ_ТипЗаказа
		|       ПО ВТ_СписокЗаказов.Ссылка = ВТ_ТипЗаказа.Заказ
		|ГДЕ
		|   НЕ ВТ_СписокЗаказов.Ссылка В
		|               (ВЫБРАТЬ
		|                   ВТ_ЗаказыУжеКВозврату.Заказ
		|               ИЗ
		|                   ВТ_ЗаказыУжеКВозврату КАК ВТ_ЗаказыУжеКВозврату)
		|   И ВТ_ТипЗаказа.ТипЗаказа В(&ТипЗаказа)
		|
		|СГРУППИРОВАТЬ ПО
		|   ВТ_ТипЗаказа.ТипЗаказа,
		|   ВТ_СписокЗаказов.Ссылка";
		
		Запрос.УстановитьПараметр("МассивНомеров", МассивЗаказовАдминка);
		СтатусыСкладскогоУчета = Новый Массив;
		СтатусыСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.Возврат1);
		СтатусыСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.Возврат2);
		СтатусыСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.ВозвратОтправлен);
		СтатусыСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.ВозвратПринятМагазином);
		СтатусыСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.ПодготовленКВозврату);
		СтатусыСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.ЗаказНеВозвратный);
		Запрос.УстановитьПараметр("СтатусСкладскогоУчета", СтатусыСкладскогоУчета);
		ТипыЗаказов = Новый Массив;
		ТипыЗаказов.Добавить(Перечисления.ТипыЗаказов.Доставка);
		ТипыЗаказов.Добавить(Перечисления.ТипыЗаказов.Самовывоз);
		//+++++Серегин М.В. 15.12.2015 18:46:55 
		ТипыЗаказов.Добавить(Перечисления.ТипыЗаказов.Обмен);
		ТипыЗаказов.Добавить(Перечисления.ТипыЗаказов.Возврат);
		//-----Серегин М.В. 15.12.2015 18:46:58 
		Запрос.УстановитьПараметр("ТипЗаказа",ТипыЗаказов);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Движения.СтатусыСкладскогоУчета.Очистить();
		Движения.СтатусыСкладскогоУчета.Записывать = Истина;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Движение = Движения.СтатусыСкладскогоУчета.Добавить();
			Движение.Период = Дата;
			ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		КонецЦикла;
	КонецЕсли;
КонецФункции

Функция ПолучитьТаблицуОтказныхЗаказовИзАдминки()
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
	МассивНомеровЗаказов = Новый Массив;
	
	
	////+++++Серегин М.В. 29.10.2015 11:03:03 старый код
	//РезультатЗапроса = ПолучитьВыборкуПоШтрихкодамИтоги();
	//ВыборкаКонтрагент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Пока ВыборкаКонтрагент.Следующий() Цикл
	//    ИнтеренетМагазин = СокрЛП(СтрЗаменить(ВыборкаКонтрагент.Контрагент.Код,"Shop_",""));
	//    
	//    ВыборкаДетальныеЗаписи = ВыборкаКонтрагент.Выбрать();
	//    
	//    СтрокаЗаказов = "";
	//    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//        СтрокаЗаказов = СтрокаЗаказов+" "+"'"+СокрЛП(ВыборкаДетальныеЗаписи.Заказ.Номер)+"'";  
	//    КонецЦикла;
	//    
	//    СтрокаЗаказов = СтрЗаменить(СокрЛП(СтрокаЗаказов)," ",",");
	//    
	//    ТекстЗапроса = " SELECT O.orderID, S.shopID, S.InternetShopId FROM _order O
	//    |INNER JOIN
	//    |settings S (NOLOCK) ON S.shopId = O.SettingID AND O.status = 4 AND (O.orderId IN ("+СтрокаЗаказов+") OR O.orderIdimport IN ("+СтрокаЗаказов+")) AND S.internetShopID IN ('"+ИнтеренетМагазин+"')
	//    |";
	//    
	//    //Таблица = smv.СформироватьТаблицуЗначенийИзДанныхSQLБезПодключения(Подкл,ТекстЗапроса);
	//    Таблица = smv.СформироватьТаблицуЗначенийИзДанныхSQL(ТекстЗапроса);
	//    Для каждого Стр2 Из Таблица Цикл
	//        МассивНомеровЗаказов.Добавить(СтрЗаменить(СокрЛП(Стр2.orderID),Символ(160),""));
	//    КонецЦикла;
	//КонецЦикла;
	
	//+++++Серегин М.В. 29.10.2015 11:04:23 новый
	РезультатЗапроса = ПолучитьВыборкуПоШтрихкодам();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СтрокаЗаказов = "";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаЗаказов = СтрокаЗаказов+" "+"'"+СокрЛП(ВыборкаДетальныеЗаписи.ЗаказНомер)+"'";  
	КонецЦикла;
	Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
		СтрокаЗаказов = СтрЗаменить(СокрЛП(СтрокаЗаказов)," ",",");
		ТекстЗапроса = " SELECT O.orderID, S.shopID, S.InternetShopId FROM _order O
		|INNER JOIN
		|settings S (NOLOCK) ON S.shopId = O.SettingID AND O.status = 4 AND O.orderId IN ("+СтрокаЗаказов+")
		|";
		
		//Таблица = smv.СформироватьТаблицуЗначенийИзДанныхSQLБезПодключения(Подкл,ТекстЗапроса);
		Таблица = smv.СформироватьТаблицуЗначенийИзДанныхSQL(ТекстЗапроса);
		Для каждого Стр2 Из Таблица Цикл
			МассивНомеровЗаказов.Добавить(СтрЗаменить(СокрЛП(Стр2.orderID),Символ(160),""));
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивНомеровЗаказов;
	
КонецФункции // ПолучитьТаблицуОтказныхЗаказовИзАдминки()

Функция ПолучитьВыборкуПоШтрихкодамИтоги ()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|   ЗагрузкаСТСДШтрихкоды.Штрихкод,
	|   ЗагрузкаСТСДШтрихкоды.Контрагент КАК Контрагент,
	|   ЗагрузкаСТСДШтрихкоды.Заказ.Номер
	|ИЗ
	|   Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|ГДЕ
	|   ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
	|ИТОГИ ПО
	|   Контрагент";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса;
	
КонецФункции


Функция ПолучитьВыборкуПоШтрихкодам ()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|   ЗагрузкаСТСДШтрихкоды.Штрихкод,
	|   ЗагрузкаСТСДШтрихкоды.Контрагент КАК Контрагент,
	|   ЗагрузкаСТСДШтрихкоды.Заказ.Номер
	|ИЗ
	|   Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|ГДЕ
	|   ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
	|   И ЗагрузкаСТСДШтрихкоды.Заказ <> ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса;
	
КонецФункции


Функция СоздатьПогрузкаВАвто(ЗаписанныеСтатусыЗаказов = Неопределено)		
	
	Зап = Новый Запрос;
	Зап.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Документ.ПогрузкаВАвто.ЗагрузкиСТСД КАК ПогрузкаВАвтоЗагрузкиСТСД
	|ГДЕ
	|	ПогрузкаВАвтоЗагрузкиСТСД.ЗагрузкаСТСД = &Док";
	
	Зап.УстановитьПараметр("Док", Ссылка);			
	Рез = Зап.Выполнить();
	Если Не Рез.Пустой() Тогда
		Возврат Ложь;
	КонецеСли;	
	
	
	// МАС - 20.07.2017 - №1428 --->>
	ЭтапПогрузки = Неопределено;
	Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвто Тогда
		Если ВспомогательныйРежимТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвто Тогда		
			ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.Сортировка;				
		ИначеЕсли ВспомогательныйРежимТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвтоФактическая Тогда		
			ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.ПогрузкаВАвто;			
		ИначеЕсли ВспомогательныйРежимТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвтоНезагруженныеЗаказы Тогда		
			ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.ОтметкаНезагруженныхВАвтоЗаказов;
		КонецЕсли;	
	КонецЕсли;
	// <<--- МАС
	
	Если (ВспомогательныйРежимТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвтоФактическая Или 
		ВспомогательныйРежимТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвтоНезагруженныеЗаказы) И БэйджиСотрудников.Количество() <> 0 Тогда
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		|	ЕСТЬNULL(ПогрузкаВАвто.Ссылка, ИСТИНА) КАК Док,
		|	РейсВ.Ссылка КАК Рейс
		|ИЗ
		|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс КАК РейсВ
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПогрузкаВАвто КАК ПогрузкаВАвто
		|			ПО ((ПогрузкаВАвто.Рейс = РейсВ.Ссылка) И (&ЭтапПогрузки))
		|		ПО ПривязкаМашинКРейсамСрезПоследних.Рейс = РейсВ.Ссылка
		|ГДЕ
		|	
		|	 РейсВ.ДатаРейса МЕЖДУ &ДатаНач И &ДатаКон
		|	И ПривязкаМашинКРейсамСрезПоследних.Экспедитор = &Сотрудник";
		Если ЭтапПогрузки = Неопределено Тогда
			Зап.Текст = СтрЗаменить(Зап.Текст, "&ЭтапПогрузки", "ИСТИНА");		
		Иначе
			Зап.Текст = СтрЗаменить(Зап.Текст, "&ЭтапПогрузки", "ПогрузкаВАвто.ЭтапПогрузки = &ЭтапПогрузки");	
			Зап.УстановитьПараметр("ЭтапПогрузки", ЭтапПогрузки);	
		КонецЕсли;
		
		КрайняяСтрокаСБэйджем = БэйджиСотрудников[БэйджиСотрудников.Количество() - 1];
		
		Если КрайняяСтрокаСБэйджем.ТипУчастникаЭкипажа = Перечисления.УчастникЭкипажа.Водитель Тогда
			Зап.Текст = СтрЗаменить(Зап.Текст, ".Экспедитор", ".Водитель");
		КонецеСли;
		Зап.УстановитьПараметр("Сотрудник", КрайняяСтрокаСБэйджем.Сотрудник);
		Зап.УстановитьПараметр("ДатаНач", НачалоДня(Дата));
		Зап.УстановитьПараметр("ДатаКон", КонецДня(Дата));
	Иначе
		Зап = Новый Запрос;
		//+Степанов Берём номер рейса непосредственно из рейса.
		НомерРейса = Рейс.Номер;
		Если Не ПустаяСтрока(НомерРейса) Тогда
			Зап.Текст = "ВЫБРАТЬ
			            |	ЕСТЬNULL(ПогрузкаВАвто.Ссылка, ИСТИНА) КАК Док,
			            |	РейсВ.Ссылка КАК Рейс
			            |ИЗ
			            |	Документ.Рейс КАК РейсВ
			            |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПогрузкаВАвто КАК ПогрузкаВАвто
			            |		ПО (ПогрузкаВАвто.Рейс = РейсВ.Ссылка)
			            |			И (&ЭтапПогрузки)
			            |ГДЕ
			            |	РейсВ.Номер = &НомерРейса";
			Зап.УстановитьПараметр("НомерРейса", НомерРейса);
		Иначе
			Зап.Текст = "ВЫБРАТЬ
			|	ЕСТЬNULL(ПогрузкаВАвто.Ссылка, ИСТИНА) КАК Док,
			|	РейсВ.Ссылка КАК Рейс
			|ИЗ
			|	Документ.Рейс КАК РейсВ
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПогрузкаВАвто КАК ПогрузкаВАвто
			|		ПО ((ПогрузкаВАвто.Рейс = РейсВ.Ссылка) И (&ЭтапПогрузки))
			|ГДЕ
			// МАС - 20.07.2017 - №1428 --->> 
			//|	РейсВ.РейсМестнойДоставки.Номер = &НомерРейса";
			|	РейсВ.РейсМестнойДоставки.Номер = &НомерРейса";
			//|	И &ЭтапПогрузки";    //=======================================/Саша, это неверно. Это условие необходимо в связи между таблами
			// <<--- МАС        							
			Зап.УстановитьПараметр("НомерРейса", Сред(СокрЛП(Штрихкоды[0].Штрихкод), 4, 9));
		КонецЕсли;
	    //-Степанов
		Если ЭтапПогрузки = Неопределено Тогда
			Зап.Текст = СтрЗаменить(Зап.Текст, "&ЭтапПогрузки", "ИСТИНА");		
		Иначе
			Зап.Текст = СтрЗаменить(Зап.Текст, "&ЭтапПогрузки", "ПогрузкаВАвто.ЭтапПогрузки = &ЭтапПогрузки");	
			Зап.УстановитьПараметр("ЭтапПогрузки", ЭтапПогрузки);	
		КонецЕсли;
	КонецеСли;
	Рез = зап.Выполнить().Выбрать();
	
	ДокументОбъект = "";
	
	Если Рез.Следующий() Тогда
		//Асеев 14.01.2021 (по письму Re: маршруты 432 и 202)>>>
		//нельзя использовать старую погрузку в авто для случая незагруза, т.к. в прошлом незагрузе могло быть больше заказов и все они открепятся от рейса
		//Если Рез.Док = истина Тогда
		Если ВспомогательныйРежимТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвтоНезагруженныеЗаказы Или Рез.Док = истина Тогда
		//Асеев 14.01.2021 (по письму Re: маршруты 432 и 202)<<<
			ДокументОбъект = Документы.ПогрузкаВАвто.СоздатьДокумент();
			ДокументОбъект.Рейс = Рез.Рейс;
			ДокументОбъект.Дата = ТекущаяДата();
			ДокументОбъект.КоличествоПогрузок = 1;
			//lem
			ДокументОбъект.ЭтапПогрузки = ЭтапПогрузки;
			//lem
			//Асеев 15.08.2022 (Задача № 4867)>>>
			ДокументОбъект.ТерминалОбработки = ТерминалПриема;
			//Асеев 15.08.2022 (Задача № 4867)<<<
		Иначе
			ДокументОбъект = Рез.Док.ПолучитьОбъект();
			ДокументОбъект.КоличествоПогрузок = ДокументОбъект.КоличествоПогрузок + 1;
		КонецеСли;
	Иначе
		
		//+++ БАО 28.07.2017 №1540 
		Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
			
			ТекстОшибки = "СоздатьПогрузкаВАвто. Не найден РейсМестнойДоставки номер " + Сред(СокрЛП(Штрихкоды[0].Штрихкод), 4, 9);
			bao.ЗаписатьВФайлЛогаОтказа(ТекстОшибки, ДополнительныеСвойства);
			
		КонецЕсли;	
		//--- БАО 28.07.2017 №1540 
		
		
		Возврат Ложь;
	КонецеСли;	
	
	Нов = ДокументОбъект.ЗагрузкиСТСД.Добавить();
	Нов.ЗагрузкаСТСД = Ссылка;
	Нов.Склад = Склад;
	Нов.ВремяЗагрузки = ТекущаяДата();
	Нов.Штрихкод = СокрЛП(Штрихкоды[0].Штрихкод);
	
	
	СтатусТоварНаСкладе = Справочники.СтатусыЗаказов.ТоварНаСкладе;
	
	// МАС - 26.07.2017 - №1428 - суперкостыль --->> 
	Если ВспомогательныйРежимТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвтоФактическая Тогда // заполняем Заказы из Погрузки-сортировки по данному рейсу
		
		ДокументОбъект.Заказы.Очистить();
		
		ЗапросСортировка = Новый Запрос("ВЫБРАТЬ
		|	ПогрузкаВАвто.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПогрузкаВАвто КАК ПогрузкаВАвто
		|ГДЕ
		|	ПогрузкаВАвто.Проведен
		|	И ПогрузкаВАвто.Рейс = &Рейс
		|	И ПогрузкаВАвто.ЭтапПогрузки = ЗНАЧЕНИЕ(Справочник.ЭтапыПогрузкиЗаказовВТранспорт.Сортировка)");
		ЗапросСортировка.УстановитьПараметр("Рейс", ДокументОбъект.Рейс);
		РезСортировка = ЗапросСортировка.Выполнить().Выбрать();		
		
		Если РезСортировка.Следующий() Тогда			
			
			ДокСортировка = РезСортировка.Ссылка;	
			
			Для каждого Стр Из ДокСортировка.Заказы Цикл	
				НовСтр = ДокументОбъект.Заказы.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, Стр);
			КонецЦикла;
		Иначе
		КонецЕсли;
		
		
	Иначе // заполняем по-старому
		
		//+Степанов Задача № 3957 	
		НужноИсключатьЗаказы = Ложь;
		МассивИсключенныхЗаказов = Новый Массив;
		Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвто И ВспомогательныйРежимТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвто Тогда
			НужноИсключатьЗаказы = Истина;
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			               |	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ
			               |ИЗ
			               |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
			               |ГДЕ
			               |	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
			               |	И ЗагрузкаСТСДШтрихкоды.ИсключитьЧастичноПринятыйЗаказИзРейса";
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			МассивИсключенныхЗаказов = Новый Массив;
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				НоваяСтрока = ДокументОбъект.ИсключенныеИзРейсаЗаказы.Добавить();
				НоваяСтрока.Заказ = Выборка.Заказ; 
				МассивИсключенныхЗаказов.Добавить(Выборка.Заказ);
			КонецЦикла;	
		КонецЕсли;
		//-Степанов Задача № 3957 
		

		
		Сч = 1;
		Для Каждого Тек Из Штрихкоды Цикл
			//+Степанов Если заполнен реквизит рейс, то это загрузка с нового ТСД и нужны все строки
			Если Не ЗначениеЗаполнено(Рейс) И Сч = 1 Тогда
				Сч = 2;
				Продолжить;
			КонецеСли;	
			
			Если Не ЗначениеЗаполнено(Тек.Заказ) Тогда
				Продолжить;
			КонецеСли;	
			
			//+Степанов Задача № 3957 
			Если НужноИсключатьЗаказы И МассивИсключенныхЗаказов.Найти(Тек.Заказ) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;	
			//-Степанов Задача № 3957 
			
			Най = ДокументОбъект.Заказы.Найти(Тек.Заказ); // странная ситуация будет, если один и тот же заказ погрузили на нескольких складах				
			Если Най = Неопределено Тогда
				Нов = ДокументОбъект.Заказы.Добавить();
				Нов.Заказ = Тек.Заказ;
				Нов.КоличествоМест = Тек.КоличествоМест;
				Нов.ЗагрузкаСТСД = Ссылка;
				Нов.Склад = Склад;
				Если ДокументОбъект.ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.ОтметкаНезагруженныхВАвтоЗаказов Тогда
					Нов.СтатусЗаказа = СтатусТоварНаСкладе;
				КонецеСли;	
			Иначе
				Най.КоличествоМест = Най.КоличествоМест + Тек.КоличествоМест;
			КонецеСли;
		КонецЦикла;	
	КонецЕсли;
	// <<--- МАС 
	
	Если ДокументОбъект.ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.ОтметкаНезагруженныхВАвтоЗаказов Тогда
		ДокументОбъект.ИсключитьЗаказыИзРейсов = Истина;
		ДокументОбъект.ОбновлятьСтатусыЗаказов = Истина;
	КонецеСли;	
	
	
	//Асеев 20.11.2020 (по письму Re: 5834730 / 29038482 1с/разблюдовка)>>>
	//исключение задвоения мест в табличной части МестаПоЗаказам
	//Асеев 20.11.2020 (по письму Re: 5834730 / 29038482 1с/разблюдовка)<<<
	
	//Асеев 15.08.2022 (Задача № 4867)>>>
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ИмеющиесяМеста", ДокументОбъект.МестаПоЗаказам.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИмеющиесяМеста.Заказ КАК Заказ,
	|	ИмеющиесяМеста.МестоЗаказа КАК МестоЗаказа,
	|	ИмеющиесяМеста.КоличествоСканирований КАК КоличествоСканирований
	|ПОМЕСТИТЬ ВТ_ИмеющиесяМеста
	|ИЗ
	|	&ИмеющиесяМеста КАК ИмеющиесяМеста
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
	|	И ЗагрузкаСТСДШтрихкоды.МестоЗаказа <> ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Заказ КАК Заказ,
	|	ВложенныйЗапрос.МестоЗаказа КАК МестоЗаказа,
	|	СУММА(ВложенныйЗапрос.КоличествоСканирований) КАК КоличествоСканирований
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_ИмеющиесяМеста.Заказ КАК Заказ,
	|		ВТ_ИмеющиесяМеста.МестоЗаказа КАК МестоЗаказа,
	|		ВТ_ИмеющиесяМеста.КоличествоСканирований КАК КоличествоСканирований
	|	ИЗ
	|		ВТ_ИмеющиесяМеста КАК ВТ_ИмеющиесяМеста
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗагрузкаСТСДШтрихкоды.Заказ,
	|		ЗагрузкаСТСДШтрихкоды.МестоЗаказа,
	|		ЗагрузкаСТСДШтрихкоды.КоличествоМест
	|	ИЗ
	|		Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|	ГДЕ
	|		ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
	|		И ЗагрузкаСТСДШтрихкоды.МестоЗаказа <> ЗНАЧЕНИЕ(Справочник.МестаПоЗаказам.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МестаПоЗаказам.Заказ,
	|		МестаПоЗаказам.Ссылка,
	|		0
	|	ИЗ
	|		Справочник.МестаПоЗаказам КАК МестаПоЗаказам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|			ПО МестаПоЗаказам.Заказ = ВТ_Заказы.Заказ
	|				И (НЕ МестаПоЗаказам.НеАктуальное)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Заказ,
	|	ВложенныйЗапрос.МестоЗаказа";
	
	ДокументОбъект.МестаПоЗаказам.Загрузить(Запрос.Выполнить().Выгрузить());
	//Асеев 15.08.2022 (Задача № 4867)<<<
	
	//++ Задача № 2943, дополнительное перезаполнение СтатусЗаказа В Документы.ПогрузкаВАвто.ТЧ.Заказы		
	
	Попытка
		
		Если Не ЗаписанныеСтатусыЗаказов = Неопределено Тогда
			Для Каждого СтрокаЗаказ Из ДокументОбъект.Заказы Цикл
				ЗаписанныйСтатус = ЗаписанныеСтатусыЗаказов.Получить(СтрокаЗаказ.Заказ);
				Если Не ЗаписанныйСтатус = Неопределено Тогда
					Если СтрокаЗаказ.СтатусЗаказа <> ЗаписанныйСтатус Тогда					
						СтрокаЗаказ.СтатусЗаказа = ЗаписанныйСтатус;
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
		
	Исключение
		
		МасОш = Новый Массив;
		МасОш.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		МасОш.Добавить("r.drobnitsa@strizh-logistic.ru");
		lem.ОтправитьСообщение(МасОш, "Ошибка перезаполнения статусов ПогрузкаВАвто", "При перезаполнении статусов документа ПогрузкаВАвто из " + СокрЛП(Ссылка) + " возникла ошибка!" + Символы.ПС + "Текст ошибки: " + ОписаниеОшибки());
		
		Возврат Ложь;
		
	КонецПопытки;
	
	//Попытка
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	СтатусыЗаказовСрезПоследних.Заказ КАК Заказ,
	//	|	СтатусыЗаказовСрезПоследних.Статус КАК Статус,
	//	|	СтатусыЗаказовСрезПоследних.ДокументРегистратор КАК ДокументРегистратор
	//	|ИЗ
	//	|	РегистрСведений.СтатусыЗаказов.СрезПоследних(, ) КАК СтатусыЗаказовСрезПоследних
	//	|ГДЕ
	//	|	СтатусыЗаказовСрезПоследних.ДокументРегистратор = &ДокументРегистратор";
	//	
	//	Запрос.УстановитьПараметр("ДокументРегистратор", Ссылка);
	//	
	//	РезультатЗапросаСтатусов = Запрос.Выполнить().Выгрузить();
	//	
	//	Для Каждого СтрокаЗаказ Из ДокументОбъект.Заказы Цикл
	//		
	//		СтрокаСтатуса = РезультатЗапросаСтатусов.Найти(СтрокаЗаказ.Заказ, "Заказ");
	//		Если Не СтрокаСтатуса = Неопределено тогда
	//			
	//			Если СтрокаЗаказ.СтатусЗаказа.Код <> СтрокаСтатуса.Статус Тогда
	//				СтрокаЗаказ.СтатусЗаказа = Справочники.СтатусыЗаказов.НайтиПоКоду(СтрокаСтатуса.Статус);
	//			КонецЕсли;	
	//			
	//		КонецЕсли;	
	//		
	//	КонецЦикла;
	//	
	//Исключение
	//	
	//	МасОш = Новый Массив;
	//	МасОш.Добавить("evgeniy.marochkin@strizh-logistic.ru");
	//	МасОш.Добавить("r.drobnitsa@strizh-logistic.ru");
	//	lem.ОтправитьСообщение(МасОш, "Ошибка перезаполнения статусов ПогрузкаВАвто", "При перезаполнении статусов документа ПогрузкаВАвто " + СокрЛП(ДокументОбъект.Номер) + " возникла ошибка!" + Символы.ПС + "Текст ошибки: " + ОписаниеОшибки());
	//	
	//КонецПопытки;
	
	//-- Задача № 2943	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	//+Степанов Задача № 3451
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение	
		МассивПолучателей = Новый Массив;
		МассивПолучателей.Добавить("n.stepanov@strizh-logistic.ru");
		МассивПолучателей.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		Заголовок = "Не удалось провести " + Строка(Ссылка) + ". Не удалось выполнить метод SetExcludedBarcodesResult";
		lem.ОтправитьСообщение(МассивПолучателей,Заголовок,,,,,,,,,Ложь);
		pkv.ДобавитьВСписокОтложенногоПроведения(Ссылка,"Не удалось выполнить метод SetExcludedBarcodesResult");
	КонецПопытки;
	//-Степанов Задача № 3451
	
	
	
	
	//НайденыеОбъекты = Документы.ПогрузкаВАвто.НайтиПоРеквизиту("ЗагрузкаСТСД",Ссылка);
	//
	//Если НЕ ЗначениеЗаполнено(НайденыеОбъекты) Тогда
	//	ДокументОбъект = Документы.ПогрузкаВАвто.СоздатьДокумент();
	//	ДокументОбъект.Дата = ТекущаяДата();
	//	ДокументОбъект.ЗагрузкаСТСД  = Ссылка;
	//	ДокументОбъект.Штрихкод = СокрЛП(Штрихкоды[0].Штрихкод);
	//	
	//	Зап = Новый Запрос;
	//	Зап.Текст = "ВЫБРАТЬ
	//	            |	Рейс.Ссылка КАК Рейс
	//	            |ИЗ
	//	            |	Документ.Рейс КАК Рейс
	//	            |ГДЕ
	//	            |	Рейс.РейсМестнойДоставки.Номер = &Номер";
	//				
	//	Зап.УстановитьПараметр("Номер", Сред(ДокументОбъект.Штрихкод, 4, 9));
	//	Рез = Зап.Выполнить().Выбрать();
	//	
	//	Если Рез.Следующий() Тогда
	//		ДокументОбъект.Рейс = Рез.Рейс;
	//	Иначе
	//		Возврат Ложь;
	//	КонецеСли;	
	//	
	//	Сч = 1;
	//	Для Каждого Тек Из Штрихкоды Цикл
	//		Если Сч = 1 Тогда
	//			Сч = 2;
	//			Продолжить;
	//		КонецеСли;	
	//		
	//		Если Не ЗначениеЗаполнено(Тек.Заказ) Тогда
	//			Продолжить;
	//		КонецеСли;	
	//		
	//		Най = ДокументОбъект.Заказы.Найти(Тек.Заказ);
	//		
	//		Если Най = Неопределено Тогда
	//			Нов = ДокументОбъект.Заказы.Добавить();
	//			Нов.Заказ = Тек.Заказ;
	//			Нов.КоличествоМест = Тек.КоличествоМест;
	//		Иначе
	//			Най.КоличествоМест = Най.КоличествоМест + 1;
	//		КонецеСли;	
	//	КонецЦикла;	
	//	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	//	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	//КонецеСли;	
	
	
	Возврат Истина;
КонецФункции

Функция Создатьoz_ПриёмПосылок()
	
	НайденыеОбъекты = Документы.oz_ПриёмПосылок.НайтиПоРеквизиту("ЗагрузкаСТСД",Ссылка);
	
	Если НЕ ЗначениеЗаполнено(НайденыеОбъекты) Тогда
		ДокументОбъект = Документы.oz_ПриёмПосылок.СоздатьДокумент();
		ДокументОбъект.Дата = ТекущаяДата();
		ДокументОбъект.ЗагрузкаСТСД  = Ссылка;
		ДокументОбъект.ШтрихкодПеревозки = Штрихкоды[0].Штрихкод;
		
		
		// получим первые 20 отправлений и узнаем количество
		КоличествоОтправлений = 0;
		НомерСтраницы = 1;
		Результат = ДокументОбъект.CarriageContentGet(ДокументОбъект.ШтрихкодПеревозки);		
		Если Результат.Код = 0 Тогда
			КоличествоОтправлений = Результат.Rows;
		КонецЕсли;
		
		Пока КоличествоОтправлений > 0 Цикл		
			Для каждого Стр Из Результат.СписокОтправлений Цикл
				Строка = ДокументОбъект.Заказы.Добавить();
				Строка.ШтрихкодПосылки = Стр.PostingBarcode;
				Строка.Ожидается = Истина;
				КоличествоОтправлений = КоличествоОтправлений - 1;
			КонецЦикла;	
			// пытаемся получить следующие 20 отправлений
			Если КоличествоОтправлений > 0 Тогда				
				НомерСтраницы = НомерСтраницы + 1;
				Результат = ДокументОбъект.CarriageContentGet(ДокументОбъект.ШтрихкодПеревозки, НомерСтраницы);		
			КонецЕсли;					
		КонецЦикла;
		
		
		
		Для Сч = 1 По Штрихкоды.Количество()-1 Цикл
			
			Стр = Штрихкоды[Сч];          
			НайденаяСтрока = ДокументОбъект.Заказы.Найти(Стр.Штрихкод,"ШтрихкодПосылки");         
			Если НайденаяСтрока<>Неопределено Тогда
				Строка = НайденаяСтрока; 
			Иначе
				Строка = ДокументОбъект.Заказы.Добавить();
			КонецЕсли;
			
			Строка.Заказ = Стр.Заказ;
			Строка.ШтрихкодПосылки = Стр.Штрихкод;
			Если ЗначениеЗаполнено(Строка.Заказ) Тогда			
				Строка.Поступило = Истина;			
			КонецЕсли;
			
		КонецЦикла;
		
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			
			//ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);    // временно добавлено автоматическое проведение
			
			Возврат Истина;	
			
		Исключение
			
			//+++ БАО 28.07.2017 №1540 
			Если ДополнительныеСвойства.Свойство("НомерПотока") Тогда
				
				ТекстОшибки = "Создатьoz_ПриёмПосылок. Запись объект. Отказ. Ошибка: " + ОписаниеОшибки();
				bao.ЗаписатьВФайлЛогаОтказа(ТекстОшибки, ДополнительныеСвойства);
				
			КонецЕсли;	
			//--- БАО 28.07.2017 №1540 
			
			
			Возврат Ложь;
		КонецПопытки;
		
	Иначе 
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Процедура ЗафиксироватьШтрихкодыВРС() Экспорт
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗагрузкаСТСДШтрихкоды.Штрихкод) КАК КолвоШтрихкодов,
	|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_КоличествоШК
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды.Ссылка.Ссылка = &Док
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗагрузкаСТСДШтрихкоды.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗагрузкаСТСДШтрихкоды.Штрихкод,
	|	ЗагрузкаСТСДШтрихкоды.Заказ,
	|	ЗагрузкаСТСДШтрихкоды.Ссылка.Ссылка КАК ДокументТСД,
	|	ВТ_КоличествоШК.КолвоШтрихкодов
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоШК КАК ВТ_КоличествоШК
	|		ПО (ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка = ВЫРАЗИТЬ(ВТ_КоличествоШК.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды.Ссылка.Ссылка = &Док
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗагрузкаСТСДШтрихкоды.Штрихкод,
	|	ЗагрузкаСТСДШтрихкоды.Заказ,
	|	ЗагрузкаСТСДШтрихкоды.Ссылка.Ссылка,
	|	ВТ_КоличествоШК.КолвоШтрихкодов";
	
	Зап.УстановитьПараметр("Док", Ссылка);
	
	Рез = Зап.Выполнить().Выгрузить();
	
	Рез2 = Рез.Скопировать();
	
	Наб = РегистрыСведений.ШтрихкодыЗаказов.СоздатьНаборЗаписей();
	Наб.Отбор.ДокументТСД.Установить(Ссылка);
	
	Для Каждого Тек Из Рез Цикл
		Если Не ЗначениеЗаполнено(Тек.Заказ) Тогда
			Продолжить;
		КонецеСли;	
		Для Сч = 1 По Тек.КолвоШтрихкодов Цикл
			Нов = Наб.Добавить();
			ЗаполнитьЗначенияСвойств(Нов, Тек);
			Нов.НомерМеста = Сч;
		КонецЦикла;	
	КонецЦикла;	
	
	Наб.Записать();
КонецПроцедуры	

Процедура ОбработатьРанееОтклоненныеЗаявки() Экспорт// Задача № 3445
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_СписокЗаказов
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка
	|	И ЗагрузкаСТСДШтрихкоды.Заказ.СтатусИнтернетМагазина = 4
	|	И ЗагрузкаСТСДШтрихкоды.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыЗаказов.Период КАК Период,
	|	СтатусыЗаказов.Заказ КАК Заказ,
	|	СтатусыЗаказов.Статус КАК Статус
	|ПОМЕСТИТЬ ВТ_СтатусыРеализаций
	|ИЗ
	|	РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|ГДЕ
	|	СтатусыЗаказов.Период <= &ДатаДокумента
	|	И (СтатусыЗаказов.Статус = 410
	|			ИЛИ СтатусыЗаказов.Статус = 201)
	|	И СтатусыЗаказов.Заказ В
	|			(ВЫБРАТЬ
	|				ВТ_СписокЗаказов.Заказ
	|			ИЗ
	|				ВТ_СписокЗаказов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СтатусыРеализаций.Период КАК Период,
	|	ВТ_СтатусыРеализаций.Заказ КАК Заказ,
	|	ВТ_СтатусыРеализаций.Статус КАК Статус410,
	|	ВТ_СтатусыРеализацийДоп.Статус КАК Статус201
	|ПОМЕСТИТЬ ВТ_ОтношенияСтатусов
	|ИЗ
	|	ВТ_СтатусыРеализаций КАК ВТ_СтатусыРеализаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтатусыРеализаций КАК ВТ_СтатусыРеализацийДоп
	|		ПО ВТ_СтатусыРеализаций.Заказ = ВТ_СтатусыРеализацийДоп.Заказ
	|			И (ВТ_СтатусыРеализацийДоп.Период > ВТ_СтатусыРеализаций.Период)
	|			И (ВТ_СтатусыРеализацийДоп.Статус = 201)
	|ГДЕ
	|	ВТ_СтатусыРеализаций.Статус = 410
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОтношенияСтатусов.Период КАК Период,
	|	ВТ_ОтношенияСтатусов.Заказ КАК Заказ,
	|	ВТ_ОтношенияСтатусов.Статус410 КАК Статус410,
	|	ВТ_ОтношенияСтатусов.Статус201 КАК Статус201
	|ПОМЕСТИТЬ ВТ_ЗаказыБез201
	|ИЗ
	|	ВТ_ОтношенияСтатусов КАК ВТ_ОтношенияСтатусов
	|ГДЕ
	|	ВТ_ОтношенияСтатусов.Статус201 ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОтношенияСтатусов.Период КАК Период,
	|	ВТ_ОтношенияСтатусов.Заказ КАК Заказ,
	|	ВТ_ОтношенияСтатусов.Статус410 КАК Статус410,
	|	ВТ_ОтношенияСтатусов.Статус201 КАК Статус201
	|ПОМЕСТИТЬ ВТ_Заказы201
	|ИЗ
	|	ВТ_ОтношенияСтатусов КАК ВТ_ОтношенияСтатусов
	|ГДЕ
	|	НЕ ВТ_ОтношенияСтатусов.Статус201 ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	235 КАК Статус,
	|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	|	&Ссылка КАК ДокументРегистратор,
	|	ВТ_ЗаказыБез201.Заказ КАК Реализация,
	|	ВТ_ЗаказыБез201.Заказ.ТерминалДоставки КАК Терминал,
	|	ВТ_ЗаказыБез201.Заказ.Номер КАК Номер,
	|	ЛОЖЬ КАК БылоЗакрытие
	//CeHbKA #3445 09.04.2021 Дополнение 2
	|	,isnull(новаМестнаяДоставка.Ссылка, Значение(БизнесПроцесс.новаМестнаяДоставка.ПустаяСсылка)) КАК новаМестнаяДоставка,
	|	ВТ_ЗаказыБез201.Заказ.ВладелецТовара КАК ВладелецТовара,
	//CeHbKA #3445 09.04.2021 Дополнение 2
	//CeHbKA #3445 15.04.2021 Дополнение 3
	|	НачалоПериода(ВТ_ЗаказыБез201.Заказ.Дата, День) КАК ДатаЗаказаДень,
	|	ВТ_ЗаказыБез201.Заказ.Дата КАК ДатаЗаказа,
	|	НачалоПериода(&ТекущаяДата, День) КАК ТекущаяДатаДень
	//CeHbKA #3445 15.04.2021 Дополнение 3
	|ИЗ
	|	ВТ_ЗаказыБез201 КАК ВТ_ЗаказыБез201
	//CeHbKA #3445 09.04.2021 Дополнение 2
	|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|		ПО ВТ_ЗаказыБез201.Заказ.Номер = новаМестнаяДоставка.Номер
	//CeHbKA #3445 09.04.2021 Дополнение 2
	|ГДЕ
	|	НЕ ВТ_ЗаказыБез201.Заказ В
	|				(ВЫБРАТЬ
	|					ВТ_Заказы201.Заказ
	|				ИЗ
	|					ВТ_Заказы201)
	//CeHbKA #3445 09.04.2021 Дополнение 1
	|	И ВТ_ЗаказыБез201.Заказ.СтатусИнтернетМагазина = 4";
	//CeHbKA #3445 09.04.2021 Дополнение 1
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	
	//CeHbKA #3445 15.04.2021 Дополнение 3
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());	
	//CeHbKA #3445 15.04.2021 Дополнение 3
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	//CeHbKA #3445 09.04.2021 Дополнение 2	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИзменениеДатыДоставки.Ссылка КАК ДокументСсылка,
		|	ИзменениеДатыДоставки.Заказ КАК Заказ,
		|	ИзменениеДатыДоставки.ЗагрузкаСТСД КАК ЗагрузкаСТСД
		|ИЗ
		|	Документ.ИзменениеДатыДоставки КАК ИзменениеДатыДоставки
		|ГДЕ
		|	ИзменениеДатыДоставки.ЗагрузкаСТСД = &ЗагрузкаСТСД
		|	И ИзменениеДатыДоставки.Заказ В(&СписокЗаказов)
		|	И НЕ ИзменениеДатыДоставки.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ЗагрузкаСТСД", Ссылка);
	Запрос.УстановитьПараметр("СписокЗаказов", ТаблицаДанных.ВыгрузитьКолонку("Реализация"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	//CeHbKA #3445 09.04.2021 Дополнение 2	
	
	//Геннадий #3445 26.07.2022 Дополнение 4 ++
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатусыЗаказов.Заказ КАК Заказ,
		|	СтатусыЗаказов.Статус КАК Статус
		|ИЗ
		|	РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
		|ГДЕ
		|	СтатусыЗаказов.Заказ В (&СписокЗаказов)
		|	И СтатусыЗаказов.Статус = 305";
	
	Запрос.УстановитьПараметр("СписокЗаказов", ТаблицаДанных.ВыгрузитьКолонку("Реализация"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписиСтатус305 = РезультатЗапроса.Выбрать();
	//Геннадий #3445 26.07.2022 Дополнение 4 --
	
	Если ТаблицаДанных.Количество() > 0 Тогда
		
		МассивСтатусов = Неопределено;
		Для каждого Стр Из ТаблицаДанных Цикл
			ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалПриема.Код));
			МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Стр.Номер, Стр.Статус, "",,,МассивСтатусов,ДопПараметрыСтатуса);		
			
			//Геннадий #3445 26.07.2022 Дополнение 4 ++
			ВыборкаДетальныеЗаписиСтатус305.Сбросить();
			
			Если ВыборкаДетальныеЗаписиСтатус305.НайтиСледующий(Новый Структура("Заказ", Стр.Реализация)) Тогда
				Продолжить;
			КонецЕсли;	
			//Геннадий #3445 26.07.2022 Дополнение 4 --	
			
			//CeHbKA #3445 15.04.2021 Дополнение 3
			//Геннадий #3445 20.07.2021 ++
			//добавлено приведение на НачалоДня, согласно комментарию к заадче от 20.07.2021
			Если НачалоДня(Стр.ДатаЗаказа) = НачалоДня(Стр.ТекущаяДатаДень) Тогда
				Продолжить;
			КонецЕсли; 
			//CeHbKA #3445 15.04.2021 Дополнение 3
			
			//CeHbKA #3445 09.04.2021 Дополнение 2
			ДокументИзменениеДатыДоставки = Документы.ИзменениеДатыДоставки.ПустаяСсылка();
			
			ВыборкаДетальныеЗаписи.Сбросить();
			
			Пока ВыборкаДетальныеЗаписи.НайтиСледующий(Новый Структура("Заказ", Стр.Реализация)) Цикл
				ДокументИзменениеДатыДоставки = ВыборкаДетальныеЗаписи.ДокументСсылка;
			КонецЦикла;	

			Если ДокументИзменениеДатыДоставки.Пустая() Тогда
				ДокОбъект = Документы.ИзменениеДатыДоставки.СоздатьДокумент();
			Иначе
				ДокОбъект = ДокументИзменениеДатыДоставки.ПолучитьОбъект();
			КонецЕсли;
			
			ДокОбъект.Дата						 = ТекущаяДата();
			ДокОбъект.Доставка					 = Стр.новаМестнаяДоставка;
			ДокОбъект.ДатаДоставки				 = Дата;
			ДокОбъект.ПричинаИзмененияДаты		 = Перечисления.ПричиныИзмененияДатыДоставки.СдвигДатыОтклоненногоЗаказаПриЕгоПоступлении;
			ДокОбъект.Заказ						 = Стр.Реализация;
			ДокОбъект.ДатаДоставкиСтарая		 = Стр.ДатаЗаказа;
			ДокОбъект.КорректироватьДатуВАдминке = Истина;
			ДокОбъект.ИнициаторСостояния		 = Стр.ВладелецТовара;
			ДокОбъект.ПричинаОтказаПереноса 	 = Склад.ПричинаПереносаПриПоступленииСПрошлойДатой;
			ДокОбъект.ТерминалОбработки			 = ТерминалПриема;
			ДокОбъект.ЗагрузкаСТСД				 = Ссылка;
			
			ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
			//CeHbKA #3445 09.04.2021 Дополнение 2
			
		КонецЦикла;
		СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);
		
		РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДанных,,ТерминалПриема);
		
		//МасП = Новый Массив;
		//МасП.Добавить("r.drobnitsa@strizh-logistic.ru");
		//МасП.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		
		//ТемаПисьма = "Задача № 3445";
		//ТекстПисьма = "По " + СокрЛП(Ссылка) + " зарегистрированы заказы:" + Символы.ПС + 
		//СтрСоединить(ТаблицаДанных.ВыгрузитьКолонку("Номер"), ", ");
		//
		//lem.ОтправитьСообщение(МасП, ТемаПисьма, ТекстПисьма,,"Сервер 1С");
		
	КонецЕслИ;
	
КонецПроцедуры	

Процедура ОбновлениеСтатусовВАдминке(Режим, Отказ, ЗаписанныеСтатусыЗаказов = Неопределено)
	// Модифицировано в рамках Задача № 2943 
	// метод обеспечивает передачу WifiVeeRoute,
	// статусы мест заказов,
	// статусы возвратов (311, 411)
	// и магистральные статусы	
	
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();	
	Период = ТекущаяДата();
	
	//
	//Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute Или 
	//	ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом Или
	//	ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВыборкойНазад Или
	// сформируем таблицу данных для по статусам
	
	// Отключено в рамках Задача № 2943
	//Если ТипЗагрузкиТСД <> Перечисления.ТипыЗагрузкиТСД.НаборнаяВедомостьВозвраты Тогда
	//	ТаблицаДанных = ПолучитьДанныеОбновлениеСтатусовВАдминке();
	//Иначе
	//	ТаблицаДанных = ПолучитьДанныеОбновлениеСтатусовВАдминкеВозвраты();
	//КонецеСли;	
	
	// - Дробница Р. Задача № 2588 // Перенесено из ОбработкаПроведения в рамках 2943
	Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute
		//Марочкин 29.03.2019 добавлена ПогрузкаВАвто по задаче 2973  
		ИЛИ ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом Или ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвто Тогда		
		
		Отказ = НЕ(РаботаСМестамиЗаказовСервер.ЗаписатьСтатусыМестЗаказов(Ссылка, ЗаписанныеСтатусыЗаказов));	// Отправка статусов заказов (211, 212) теперь тут	
		
		Если Не ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.ПогрузкаВАвто Тогда
			
			ОбработатьРанееОтклоненныеЗаявки(); //Задача № 3445
			
		Конецесли;
		
	КонецЕсли;	
	// Дробница Р. Задача № 2588 -  // Перенесено из ОбработкаПроведения в рамках 2943
	
	Если Отказ Тогда //Задача № 2943 
		Возврат;
	КонецЕсли;	
	
	СохранятьСтатусы = Истина;
	
	// Задача № 2943
	Если ТипЗагрузкиТСД = Перечисления.ТипыЗагрузкиТСД.НаборнаяВедомостьВозвраты Тогда
		ТаблицаДанных = ПолучитьДанныеОбновлениеСтатусовВАдминкеВозвраты();
	Иначе
		ТаблицаДанных = Новый ТаблицаЗначений; // Обеспечить совместимость 
		СохранятьСтатусы = Ложь;
	КонецеСли;		
	
	Если Режим = РежимЗаписиДокумента.Проведение Тогда
		
		//// --- Отключено в рамках Задача № 2813
		//СтрТекстЗапроса="";
		//Стр2 = "";
		//ТекстСоставлен = Ложь;
		//Статус = 0;
		////ТаблицаДанных = ПолучитьДанныеОбновлениеСтатусовВАдминке();
		//
		//Для каждого Стр Из ТаблицаДанных Цикл
		//	Статус = Стр.Статус;
		//	СтрТекстЗапроса = СтрТекстЗапроса + "(" +Формат(Сокрлп(Стр.Номер), "ЧГ=") + ","+Стр.Статус+",'Online приход по ТСД (new)'"+")"+",";
		//	
		//	ТекстСоставлен = Истина;
		//	
		//КонецЦикла;
		// 
		//
		//// текущий статус
		//Если ТекстСоставлен И ЗначениеЗаполнено(СтрТекстЗапроса) Тогда
		//	ДлинаТекста = СтрДлина(СтрТекстЗапроса);
		//	СтрТекстЗапроса = Лев(СтрТекстЗапроса,ДлинаТекста-1);
		//	ТекстЗапроса = "
		//	|DECLARE @t TOrderStatusId
		//	|INSERT INTO @t (orderID, statusId, comment) VALUES " +
		//	СтрТекстЗапроса +" EXEC import_setOrdersStatusIDFrom1C @t";
		//	Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Подкл);		
		//КонецЕсли;
		//// --- Отключено в рамках Задача № 2813
		
		// Задача № 2813
		Если  СохранятьСтатусы Тогда // в рамках 2943
			МассивСтатусов = Неопределено;
			Для каждого Стр Из ТаблицаДанных Цикл
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалПриема.Код)); // Задача № 3027
				МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Стр.Номер, Стр.Статус, "Online приход по ТСД (new)",,,МассивСтатусов,ДопПараметрыСтатуса);		
			КонецЦикла;
			СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);
		КонецЕсли;
		// Задача № 2813
		
		// МАС - 25.07.2017 - №1472 отправка 220 статуса --->> 
		//отключено 28.04.2022
		//ОбновлениеСтатусовМагистральныхЗаказов();
		//отключено 28.04.2022
		// <<--- МАС 
		
		
	КонецЕсли;
	
	Если СохранятьСтатусы тогда // в рамках 2943
		//костыль
		ТаблицаДанных.Колонки.Добавить("БылоЗакрытие");
		
		РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДанных,,ТерминалПриема);
		// Задача № 3027 //smv.СохранитьСтатус(ТаблицаДанных);
		
	КонецЕсли;
	
	//CeHbKA #4001 20.05.2020
	Если ЗаписанныеСтатусыЗаказов <> Неопределено Тогда
		ФиксацияДанныхМногоместныхЗаказов(ЗаписанныеСтатусыЗаказов);	
	КонецЕсли;
	//CeHbKA #4001 20.05.2020
	
КонецПроцедуры

//CeHbKA #4001 20.05.2020
Процедура ФиксацияДанныхМногоместныхЗаказов(ЗаписанныеСтатусыЗаказов) Экспорт
	
	Набор = РегистрыСведений.УчетПоступленияМногоместныхЗаказов.СоздатьНаборЗаписей();
	
	Для каждого СтрокаСоответствие из ЗаписанныеСтатусыЗаказов цикл
		
		Если СтрокаСоответствие.Значение <> Справочники.СтатусыЗаказов.ТоварНаСкладе Тогда
			Продолжить;	
		КонецЕсли;
						
		Запись						= Набор.Добавить();
		Запись.Период				= ТекущаяДата();
		Запись.Заказ				= СтрокаСоответствие.Ключ;
		Запись.ПолностьюПоступил	= Истина;
		Запись.КоличествоМест		= СтрокаСоответствие.Ключ.КоличествоМест;
		Запись.ДокументРегистратор	= Ссылка;
				
	КонецЦикла;
	
	Если Набор.Количество() > 0 Тогда
		Набор.Записать(Ложь);		
	КонецЕсли;
	
КонецПроцедуры
//CeHbKA #4001 20.05.2020

Функция ПолучитьДанныеОбновлениеСтатусовВАдминке()
	//|	новаОтчетВодителя.Доставка.ТерминалДоставки КАК Терминал
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	211 КАК Статус,
	|	ЗагрузкаСТСДШтрихкоды.Ссылка КАК ДокументРегистратор,
	|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.ТерминалДоставки.Ссылка КАК Терминал,
	|	РеализацияТоваровУслуг.Номер КАК Номер
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды.Ссылка = &Док";
	
	Запрос.УстановитьПараметр("Док", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции


Функция ПолучитьДанныеОбновлениеСтатусовВАдминкеВозвраты()
	//|	новаОтчетВодителя.Доставка.ТерминалДоставки КАК Терминал
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СостоянияЗаказовСрезПоследних.РезультатДоставки.Ссылка = ЗНАЧЕНИЕ(справочник.новаРезультатМестнойДоставки.ВыполненаЧастично)
	|			ТОГДА 311
	|		ИНАЧЕ 311
	|	КОНЕЦ КАК Статус,
	|	ЗагрузкаСТСДШтрихкоды.Ссылка КАК ДокументРегистратор,
	|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.ТерминалДоставки.Ссылка КАК Терминал,
	|	РеализацияТоваровУслуг.Номер КАК Номер
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов.СрезПоследних(&ДатаЗапроса, ) КАК СостоянияЗаказовСрезПоследних
	|			ПО РеализацияТоваровУслуг.Ссылка = СостоянияЗаказовСрезПоследних.Заказ.Ссылка
	|		ПО (ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды.Ссылка = &Док";
	
	Запрос.УстановитьПараметр("Док", Ссылка);
	Запрос.УстановитьПараметр("ДатаЗапроса", Дата);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции


// МАС - 25.07.2017 - №1472 отправка 220 статуса --->>
Процедура ОбновлениеСтатусовМагистральныхЗаказов()
	
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();	
	Период = ТекущаяДата();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	220 КАК Статус,
	|	ЗагрузкаСТСДШтрихкоды.Ссылка КАК ДокументРегистратор,
	|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.ТерминалДоставки.Ссылка КАК Терминал,
	|	РеализацияТоваровУслуг.Номер КАК Номер
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (ВЫРАЗИТЬ(ЗагрузкаСТСДШтрихкоды.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды.Ссылка = &Док
	|	И РеализацияТоваровУслуг.ТерминалПриема <> РеализацияТоваровУслуг.ТерминалДоставки
	|	И ЗагрузкаСТСДШтрихкоды.Ссылка.ТерминалПриема = РеализацияТоваровУслуг.ТерминалДоставки";
	
	Запрос.УстановитьПараметр("Док", Ссылка);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	//// --- Отключено в рамках Задача № 2813
	//СтрТекстЗапроса="";
	//Стр2 = "";
	//ТекстСоставлен = Ложь;
	//Статус = 0;
	//
	//Для каждого Стр Из ТаблицаДанных Цикл		
	//	Статус = Стр.Статус;
	//	СтрТекстЗапроса = СтрТекстЗапроса + "(" +Формат(Сокрлп(Стр.Номер), "ЧГ=") + ","+Стр.Статус+",'Online приход по ТСД (new)'"+")"+",";		
	//	ТекстСоставлен = Истина;		
	//КонецЦикла;
	// 
	//
	//Если ТекстСоставлен И ЗначениеЗаполнено(СтрТекстЗапроса) Тогда
	//	ДлинаТекста = СтрДлина(СтрТекстЗапроса);
	//	СтрТекстЗапроса = Лев(СтрТекстЗапроса,ДлинаТекста-1);
	//	ТекстЗапроса = "
	//	|DECLARE @t TOrderStatusId
	//	|INSERT INTO @t (orderID, statusId, comment) VALUES " +
	//	СтрТекстЗапроса +" EXEC import_setOrdersStatusIDFrom1C @t";
	//	Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Подкл);		
	//КонецЕсли;
	//// --- Отключено в рамках Задача № 2813
	
	// Задача № 2813
	МассивСтатусов = Неопределено;
	Для каждого Стр Из ТаблицаДанных Цикл
		МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Стр.Номер, Стр.Статус, "Online приход по ТСД (new)",,,МассивСтатусов);		
	КонецЦикла;
	СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);
	// Задача № 2813
	
	//костыль
	ТаблицаДанных.Колонки.Добавить("БылоЗакрытие");
	
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДанных);
	// Задача № 3027 //smv.СохранитьСтатус(ТаблицаДанных);
	
	//+++ БАО 28.07.2017 №1532
	рэИнтеграцияРэдЭкспресс.REDПередачаДанныхОСтатусах_ЗаказПоступилВТерминалДоставки_РегистрацияДляОтправки(ТаблицаДанных.Скопировать(,"ДокументРегистратор, Реализация"));
	//--- БАО 28.07.2017 №1532
	
КонецПроцедуры
// <<--- МАС

//Асеев 23.11.2020 (Задача № 4357)>>>
Процедура АвтопереносДатыДоставкиПриПоступленииТовараПодЗаказыСПрошлойДатойДоставки()

	//Сообщить("Отладка: АвтопереносДатыДоставкиПриПоступленииТовараПодЗаказыСПрошлойДатойДоставки");
	//Сообщить("Отладка: " + Ссылка);
	
	Сейчас = ТекущаяДата();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Сейчас);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ТерминалОтгрузки", ТерминалПриема);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЗ_Расчет.Заказ КАК Заказ,
	|	ВЗ_Расчет.Доставка КАК Доставка,
	|	ВЗ_Расчет.ДатаДоставкиСтарая КАК ДатаДоставкиСтарая,
	|	ВЗ_Расчет.ДатаДоставки КАК ДатаДоставки
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЗ_Поступления.Заказ КАК Заказ,
	|		ВЗ_Поступления.Доставка КАК Доставка,
	|		ВЗ_Поступления.ДатаДоставкиСтарая КАК ДатаДоставкиСтарая,
	|		ВЫБОР &ТерминалОтгрузки
	|			КОГДА ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|				ТОГДА ВЫБОР
	|						КОГДА ВЗ_Поступления.ЧасПоступления >= 0
	|								И ВЗ_Поступления.ЧасПоступления < 11
	|							ТОГДА ВЫБОР
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|											И ВЗ_Поступления.ДатаДоставки < ВЗ_Поступления.ДатаПоступления
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 1)
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.СПбСтриж)
	|											И ВЗ_Поступления.ДатаДоставки <= ВЗ_Поступления.ДатаПоступления
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 1)
	|								КОНЕЦ
	|						КОГДА ВЗ_Поступления.ЧасПоступления >= 11
	|								И ВЗ_Поступления.ЧасПоступления < 22
	|							ТОГДА ВЫБОР
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|											И ВЗ_Поступления.ДатаДоставки <= ВЗ_Поступления.ДатаПоступления
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 1)
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.СПбСтриж)
	|											И ВЗ_Поступления.ДатаДоставки <= ВЗ_Поступления.ДатаПоступления
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 1)
	|								КОНЕЦ
	|						КОГДА ВЗ_Поступления.ЧасПоступления >= 22
	|							ТОГДА ВЫБОР
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|											И ВЗ_Поступления.ДатаДоставки <= ВЗ_Поступления.ДатаПоступления
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 2)
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.СПбСтриж)
	|											И ВЗ_Поступления.ДатаДоставки <= ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 1)
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 2)
	|								КОНЕЦ
	|					КОНЕЦ
	|			КОГДА ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.СПбСтриж)
	|				ТОГДА ВЫБОР
	|						КОГДА ВЗ_Поступления.ЧасПоступления >= 0
	|								И ВЗ_Поступления.ЧасПоступления < 11
	|							ТОГДА ВЫБОР
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.СПбСтриж)
	|											И ВЗ_Поступления.ДатаДоставки < ВЗ_Поступления.ДатаПоступления
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 1)
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|											И ВЗ_Поступления.ДатаДоставки <= ВЗ_Поступления.ДатаПоступления
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 1)
	|								КОНЕЦ
	|						КОГДА ВЗ_Поступления.ЧасПоступления >= 11
	|								И ВЗ_Поступления.ЧасПоступления < 22
	|							ТОГДА ВЫБОР
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.СПбСтриж)
	|											И ВЗ_Поступления.ДатаДоставки <= ВЗ_Поступления.ДатаПоступления
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 1)
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|											И ВЗ_Поступления.ДатаДоставки <= ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 1)
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 2)
	|								КОНЕЦ
	|						КОГДА ВЗ_Поступления.ЧасПоступления >= 22
	|							ТОГДА ВЫБОР
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.СПбСтриж)
	|											И ВЗ_Поступления.ДатаДоставки <= ВЗ_Поступления.ДатаПоступления
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 2)
	|									КОГДА ВЗ_Поступления.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
	|											И ВЗ_Поступления.ДатаДоставки <= ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 1)
	|										ТОГДА ДОБАВИТЬКДАТЕ(ВЗ_Поступления.ДатаПоступления, ДЕНЬ, 2)
	|								КОНЕЦ
	|					КОНЕЦ
	|		КОНЕЦ КАК ДатаДоставки
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВЗ_Заказы.Заказ КАК Заказ,
	|			ВЗ_Заказы.Доставка КАК Доставка,
	|			ВЗ_Заказы.ДатаДоставкиСтарая КАК ДатаДоставкиСтарая,
	|			ВЗ_Заказы.ТерминалДоставки КАК ТерминалДоставки,
	|			НАЧАЛОПЕРИОДА(ВЗ_Заказы.ДатаДоставкиСтарая, ДЕНЬ) КАК ДатаДоставки,
	|			НАЧАЛОПЕРИОДА(ВЗ_Заказы.ВремяПоступления, ДЕНЬ) КАК ДатаПоступления,
	|			ЧАС(ВЗ_Заказы.ВремяПоступления) КАК ЧасПоступления
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|				новаМестнаяДоставка.Ссылка КАК Доставка,
	|				РеализацияТоваровУслуг.Дата КАК ДатаДоставкиСтарая,
	|				РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|				МИНИМУМ(ЗагрузкаСТСДШтрихкоды.ДатаВремя) КАК ВремяПоступления
	|			ИЗ
	|				Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеЗаказа КАК МестонахождениеЗаказа
	|						ПО РеализацияТоваровУслуг.Ссылка = МестонахождениеЗаказа.Заказ
	|							И (МестонахождениеЗаказа.Местонахождение = ЗНАЧЕНИЕ(Справочник.ВидыМестонахожденияЗаказа.НаСкладе))
	|							И (МестонахождениеЗаказа.ДокументРегистратор <> &Ссылка)
	|						ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	|						ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
	|						ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|							ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|							ПО ВозвратТоваровОтПокупателя.Ссылка = ВозвратТоваровОтПокупателяТовары.Ссылка
	|								И (ВозвратТоваровОтПокупателяТовары.НомерСтроки = 1)
	|						ПО РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер
	|					ПО (ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка)
	|						И ЗагрузкаСТСДШтрихкоды.Заказ = РеализацияТоваровУслуг.Ссылка
	|						И (РеализацияТоваровУслуг.СтатусИнтернетМагазина = 2)
	|			ГДЕ
	|				МестонахождениеЗаказа.Заказ ЕСТЬ NULL
	|				И ВозвратТоваровОтПокупателяТовары.Ссылка ЕСТЬ NULL
	|			
	|			СГРУППИРОВАТЬ ПО
	|				РеализацияТоваровУслуг.Ссылка,
	|				новаМестнаяДоставка.Ссылка,
	|				РеализацияТоваровУслуг.Дата,
	|				РеализацияТоваровУслуг.ТерминалДоставки) КАК ВЗ_Заказы) КАК ВЗ_Поступления) КАК ВЗ_Расчет
	|ГДЕ
	|	НЕ ВЗ_Расчет.ДатаДоставки ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыТарифаЗаказаСрезПоследних.Заказ КАК Заказ,
	|	ПараметрыТарифаЗаказаСрезПоследних.Заказ.ТерминалПриема КАК ТерминалОтгрузки,
	|	ПараметрыТарифаЗаказаСрезПоследних.Заказ.ТерминалДоставки КАК ТерминалДоставки,
	|	ПараметрыТарифаЗаказаСрезПоследних.ЗонаТарификации КАК ЗонаТарификации
	|ПОМЕСТИТЬ ВТ_Зоны
	|ИЗ
	|	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
	|			&Период,
	|			Заказ В
	|				(ВЫБРАТЬ
	|					ВТ_Заказы.Заказ КАК Заказ
	|				ИЗ
	|					ВТ_Заказы КАК ВТ_Заказы)) КАК ПараметрыТарифаЗаказаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Зоны.Заказ КАК Заказ,
	|	ВТ_Заказы.ДатаДоставки КАК ДатаДоставки,
	|	КалендариДоставокПоЗонамДоставкиСрезПоследних.КалендарьДоставки КАК КалендарьДоставки
	|ПОМЕСТИТЬ ВТ_Календари
	|ИЗ
	|	ВТ_Зоны КАК ВТ_Зоны
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО ВТ_Зоны.Заказ = ВТ_Заказы.Заказ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КалендариДоставокПоЗонамДоставки.СрезПоследних(
	|				&Период,
	|				(ТерминалОтгрузки, ТерминалДоставки, ЗонаДоставки) В
	|					(ВЫБРАТЬ
	|						ВТ_Зоны.ТерминалОтгрузки КАК ТерминалОтгрузки,
	|						ВТ_Зоны.ТерминалДоставки КАК ТерминалДоставки,
	|						ВТ_Зоны.ЗонаТарификации КАК ЗонаТарификации
	|					ИЗ
	|						ВТ_Зоны КАК ВТ_Зоны)) КАК КалендариДоставокПоЗонамДоставкиСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КалендариДоставки.ДниДоставки КАК КалендариДоставкиДниДоставки
	|			ПО КалендариДоставокПоЗонамДоставкиСрезПоследних.КалендарьДоставки = КалендариДоставкиДниДоставки.Ссылка
	|				И (КалендариДоставкиДниДоставки.НомерСтроки = 7)
	|		ПО ВТ_Зоны.ТерминалОтгрузки = КалендариДоставокПоЗонамДоставкиСрезПоследних.ТерминалОтгрузки
	|			И ВТ_Зоны.ТерминалДоставки = КалендариДоставокПоЗонамДоставкиСрезПоследних.ТерминалДоставки
	|			И ВТ_Зоны.ЗонаТарификации = КалендариДоставокПоЗонамДоставкиСрезПоследних.ЗонаДоставки
	|ГДЕ
	|	КалендариДоставкиДниДоставки.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	ВТ_Заказы.Доставка КАК Доставка,
	|	ВТ_Заказы.ДатаДоставкиСтарая КАК ДатаДоставкиСтарая,
	|	ВТ_Заказы.ДатаДоставки КАК ДатаДоставки,
	|	Склады.ПричинаПереносаПриПоступленииСПрошлойДатой КАК ПричинаОтказаПереноса
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Склады.Ссылка = &Склад)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Календари.Заказ КАК Заказ,
	|	КалендариДоставкиДниДоставки.ДеньНедели.Порядок + 1 КАК ДеньКалендаря
	|ИЗ
	|	ВТ_Календари КАК ВТ_Календари
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КалендариДоставки.ДниДоставки КАК КалендариДоставкиДниДоставки_ДеньЗаказа
	|		ПО ВТ_Календари.КалендарьДоставки = КалендариДоставкиДниДоставки_ДеньЗаказа.Ссылка
	|			И (ДЕНЬНЕДЕЛИ(ВТ_Календари.ДатаДоставки) = КалендариДоставкиДниДоставки_ДеньЗаказа.ДеньНедели.Порядок + 1)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КалендариДоставки.ДниДоставки КАК КалендариДоставкиДниДоставки
	|		ПО ВТ_Календари.КалендарьДоставки = КалендариДоставкиДниДоставки.Ссылка
	|ГДЕ
	|	КалендариДоставкиДниДоставки_ДеньЗаказа.Ссылка ЕСТЬ NULL";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	Результат = РезультатПакета[3];
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	ТаблицаКалендаря = РезультатПакета[4].Выгрузить();
	ИндексыТаблицы = ТаблицаКалендаря.Индексы;
	ИндексыТаблицы.Добавить("Заказ,ДеньКалендаря");
	ИндексыТаблицы.Добавить("Заказ");
	
	СтруктураКалендарь = Новый Структура("Заказ,ДеньКалендаря");
	
	Пока Выборка.Следующий() Цикл
		Если ТаблицаКалендаря.Найти(Выборка.Заказ, "Заказ") = Неопределено Тогда
			//Сообщить("Отладка: " + Выборка.Заказ);
			Док = Документы.ИзменениеДатыДоставки.СоздатьДокумент();
			ЗаполнитьЗначенияСвойств(Док, Выборка);
			Док.Дата = Сейчас;
			Док.ПричинаИзмененияДаты = Перечисления.ПричиныИзмененияДатыДоставки.ОприходованиеЗаказаСоСдвигомДатыДоставки;
			Док.КорректироватьДатуВАдминке = Истина;
			Док.ИнициаторСостояния = Перечисления.ИнициаторыСостояния.ИнтернетМагазин;
			Док.ТерминалОбработки = ТерминалПриема;
			Док.ЗагрузкаСТСД = Ссылка;
			//Док.Записать(РежимЗаписиДокумента.Запись);//лишняя запись в транзакции
			Док.Записать(РежимЗаписиДокумента.Проведение);
			//Сообщить("Отладка: " + Док);
		Иначе
			ДатаДоставки = Выборка.ДатаДоставки;
			СтруктураКалендарь.Заказ = Выборка.Заказ;
			Для н = 1 По 10 Цикл
				ДатаДоставки = ДатаДоставки + 86400;
				СтруктураКалендарь.ДеньКалендаря = ДеньНедели(ДатаДоставки);
				СтрокиКалендаря = ТаблицаКалендаря.НайтиСтроки(СтруктураКалендарь);
				Если СтрокиКалендаря.Количество() Тогда
					//Сообщить("Отладка таблица календаря: " + Выборка.Заказ);
					Док = Документы.ИзменениеДатыДоставки.СоздатьДокумент();
					ЗаполнитьЗначенияСвойств(Док, Выборка);
					Док.Дата = Сейчас;
					Док.ДатаДоставки = ДатаДоставки;
					Док.ПричинаИзмененияДаты = Перечисления.ПричиныИзмененияДатыДоставки.ПереносДатыДоставкиЗаказаПоДаннымКалендаряДоставкиЗоны_ПоступлениеНаСклад;
					Док.КорректироватьДатуВАдминке = Истина;
					Док.ИнициаторСостояния = Перечисления.ИнициаторыСостояния.ИнтернетМагазин;
					Док.ТерминалОбработки = ТерминалПриема;
					Док.ЗагрузкаСТСД = Ссылка;
					//Док.Записать(РежимЗаписиДокумента.Запись);//лишняя запись в транзакции
					Док.Записать(РежимЗаписиДокумента.Проведение);
					//Сообщить("Отладка: " + Док);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
//Асеев 23.11.2020 (Задача № 4357)<<<

//Асеев 29.03.2022 (Задача № 4767)>>>
Процедура ОбработатьОтправкуСсылокЛКЗаказов()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды_Бывшие
	|			ПО РеализацияТоваровУслуг.Ссылка = ЗагрузкаСТСДШтрихкоды_Бывшие.Заказ
	|				И (ЗагрузкаСТСДШтрихкоды_Бывшие.Ссылка.Дата < &Дата)
	|		ПО (ЗагрузкаСТСДШтрихкоды.Ссылка = &Ссылка)
	|			И ЗагрузкаСТСДШтрихкоды.Заказ = РеализацияТоваровУслуг.Ссылка
	|ГДЕ
	|	ЗагрузкаСТСДШтрихкоды_Бывшие.Заказ ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыКонтрагентовСрезПоследних.Контрагент КАК Контрагент,
	|	ПараметрыКонтрагентовСрезПоследних.ОтправкаСсылкиЛКПолучателяЗаказаНаEmail = ЗНАЧЕНИЕ(Перечисление.ВариантыОтправкиСсылокЛКПолучателейЗаказов.ПриПоступленииЗаказаНаСкладСтриж) КАК ОтправкаEmail,
	|	ПараметрыКонтрагентовСрезПоследних.ОтправкаСсылкиЛКПолучателяЗаказаSMS = ЗНАЧЕНИЕ(Перечисление.ВариантыОтправкиСсылокЛКПолучателейЗаказов.ПриПоступленииЗаказаНаСкладСтриж) КАК ОтправкаSMS
	|ПОМЕСТИТЬ ВТ_Контрагенты
	|ИЗ
	|	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(
	|			,
	|			Контрагент В
	|				(ВЫБРАТЬ
	|					ВТ_Заказы.ВладелецТовара КАК ВладелецТовара
	|				ИЗ
	|					ВТ_Заказы КАК ВТ_Заказы)) КАК ПараметрыКонтрагентовСрезПоследних
	|ГДЕ
	|	(ПараметрыКонтрагентовСрезПоследних.ОтправкаСсылкиЛКПолучателяЗаказаНаEmail = ЗНАЧЕНИЕ(Перечисление.ВариантыОтправкиСсылокЛКПолучателейЗаказов.ПриПоступленииЗаказаНаСкладСтриж)
	|			ИЛИ ПараметрыКонтрагентовСрезПоследних.ОтправкаСсылкиЛКПолучателяЗаказаSMS = ЗНАЧЕНИЕ(Перечисление.ВариантыОтправкиСсылокЛКПолучателейЗаказов.ПриПоступленииЗаказаНаСкладСтриж))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Ссылка КАК Ссылка,
	|	ВТ_Контрагенты.ОтправкаEmail КАК ОтправкаEmail,
	|	ВТ_Контрагенты.ОтправкаSMS КАК ОтправкаSMS
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Контрагенты КАК ВТ_Контрагенты
	|		ПО ВТ_Заказы.ВладелецТовара = ВТ_Контрагенты.Контрагент";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		//Асеев 31.05.2022 (Задача № 4813)>>>
		//РаботаСЛКПолучателяСервер.ОтправитьПисьмаСоСсылкамиНаОтслеживаниеЗаказов(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
		//изменен запрос для отправки СМС
		ТаблицаЗаказовОбщая = Результат.Выгрузить();
		ТаблицаЗаказов = ТаблицаЗаказовОбщая.Скопировать(Новый Структура("ОтправкаEmail", Истина), "Ссылка");
		Если ТаблицаЗаказов.Количество() Тогда
			РаботаСЛКПолучателяСервер.ОтправитьПисьмаСоСсылкамиНаОтслеживаниеЗаказов(ТаблицаЗаказов.ВыгрузитьКолонку("Ссылка"));
		КонецЕсли;
		ТаблицаЗаказов = ТаблицаЗаказовОбщая.Скопировать(Новый Структура("ОтправкаSMS", Истина), "Ссылка");
		Если ТаблицаЗаказов.Количество() Тогда
			Обр = Обработки.SMSС.Создать();
			Обр.ОтправитьСМССоСсылкойНаЛКПолучателяЗаказа(ТаблицаЗаказов.ВыгрузитьКолонку("Ссылка"));
		КонецЕсли;
		//Асеев 31.05.2022 (Задача № 4813)<<<
	КонецЕсли;
	
КонецПроцедуры
//Асеев 29.03.2022 (Задача № 4767)<<<
