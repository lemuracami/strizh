
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Если Объект.Партнер.Пустая() Тогда
			Сообщить("Создание документы без указания партнера запрещено");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		Если Объект.ТерминалОбработки.Пустая() Тогда
			Сообщить("Создание документы без указания терминала обработки запрещено");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		Объект.Дата = ТекущаяДата();
	Иначе
		ТолькоПросмотр = Объект.Проведен;
	КонецЕсли;
	Если ТолькоПросмотр Тогда
		Элементы.ФормаОбновитьОжидаемыеШК.Доступность = Ложь;
	Иначе
		ПодготовитьТаблицуСканирования();
	КонецЕсли;
	
	ЭтоТестоваяСреда = ПараметрыСеанса.ЭтоТестоваяСреда;
	//ЭтоТестоваяСреда = Ложь;
	Если Не ЭтоТестоваяСреда Тогда
		Элементы.СканироватьШК.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьТаблицуСканирования()
	
	ТаблицаСканирования.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачПериода", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("КонПериода", КонецДня(Объект.Дата + 604800));//+7 дней
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Заказ КАК Заказ,
	|	МАКСИМУМ(ВложенныйЗапрос.СопроводительныеДокументы) КАК СопроводительныеДокументы
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|		ИСТИНА КАК СопроводительныеДокументы
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|			ПО (РеализацияТоваровУслуг.Дата МЕЖДУ &НачПериода И &КонПериода)
	|				И (РеализацияТоваровУслуг.ВладелецТовара = &Партнер)
	|				И РеализацияТоваровУслуг.Ссылка = ДополнительныеПараметрыЗаказа.Заказ
	|				И (ДополнительныеПараметрыЗаказа.ПодписаниеИВозвратСопрДокументов)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|			ПО РеализацияТоваровУслуг.Ссылка = СтатусыЗаказов.Заказ
	|				И (СтатусыЗаказов.Статус В (301, 302, 305, 410))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(&КонПериода, Контрагент = &Партнер) КАК ПараметрыКонтрагентовСрезПоследних
	|			ПО (ПараметрыКонтрагентовСрезПоследних.СопроводительныеДокументыНаходятсяВКоробке)
	|	ГДЕ
	|		СтатусыЗаказов.Заказ ЕСТЬ NULL
	|		И ПараметрыКонтрагентовСрезПоследних.СопроводительныеДокументыНаходятсяВКоробке ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Ссылка,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|			ПО РеализацияТоваровУслуг.Ссылка = СтатусыЗаказов.Заказ
	|				И (СтатусыЗаказов.Статус В (301, 302, 305, 410))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(&КонПериода, Контрагент = &Партнер) КАК ПараметрыКонтрагентовСрезПоследних
	|			ПО (ПараметрыКонтрагентовСрезПоследних.СопроводительныеДокументыНаходятсяВКоробке)
	|	ГДЕ
	|		РеализацияТоваровУслуг.Дата МЕЖДУ &НачПериода И &КонПериода
	|		И РеализацияТоваровУслуг.ВладелецТовара = &Партнер
	|		И РеализацияТоваровУслуг.ТипОплаты = 4
	|		И СтатусыЗаказов.Заказ ЕСТЬ NULL
	|		И ПараметрыКонтрагентовСрезПоследних.СопроводительныеДокументыНаходятсяВКоробке ЕСТЬ NULL) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	РейсЗаказы.Ссылка.ДатаРейса КАК ДатаРейса,
	|	МАКСИМУМ(РейсЗаказы.Ссылка.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ_МаксДатыДокументаРейс
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО РейсЗаказы.Заказ = ВТ_Заказы.Заказ
	|			И (НЕ РейсЗаказы.УдаленИзРейса)
	|			И (РейсЗаказы.Ссылка.ДатаРейса = НАЧАЛОПЕРИОДА(ВТ_Заказы.Заказ.Дата, ДЕНЬ))
	|			И (НЕ РейсЗаказы.Ссылка.ПометкаУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Заказы.Заказ,
	|	РейсЗаказы.Ссылка.ДатаРейса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_МаксДатыДокументаРейс.Заказ КАК Заказ,
	|	МАКСИМУМ(РейсЗаказы.Ссылка) КАК Рейс
	|ПОМЕСТИТЬ ВТ_Рейсы
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МаксДатыДокументаРейс КАК ВТ_МаксДатыДокументаРейс
	|		ПО РейсЗаказы.Заказ = ВТ_МаксДатыДокументаРейс.Заказ
	|			И (НЕ РейсЗаказы.УдаленИзРейса)
	|			И РейсЗаказы.Ссылка.ДатаРейса = ВТ_МаксДатыДокументаРейс.ДатаРейса
	|			И РейсЗаказы.Ссылка.Дата = ВТ_МаксДатыДокументаРейс.Дата
	|			И (НЕ РейсЗаказы.Ссылка.ПометкаУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_МаксДатыДокументаРейс.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ВТ_Рейсы.Рейс КАК Рейс,
	|	ВТ_Рейсы.Рейс.НомерПалетты КАК НомерПалеты,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК Транспорт,
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
	|	РеализацияТоваровУслуг.Дата КАК ДатаДоставки,
	|	ВЫБОР
	|		КОГДА ВТ_Заказы.СопроводительныеДокументы
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыПриложенныхДокументов.СопроводительныеДокументы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыПриложенныхДокументов.БезналичныеДокументы)
	|	КОНЕЦ КАК ВидПриложенногоДокумента
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Рейсы КАК ВТ_Рейсы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	|			ПО ВТ_Рейсы.Рейс = ПривязкаМашинКРейсамСрезПоследних.Рейс
	|		ПО ВТ_Заказы.Заказ = ВТ_Рейсы.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСканирования = ТаблицаСканирования.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСканирования, Выборка);
		СтрокаСканирования.Штрихкод = СокрЛП(Выборка.Номер);
		СтрокаСканирования = ТаблицаСканирования.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСканирования, Выборка);
		СтрокаСканирования.Штрихкод = СокрЛП(Выборка.НомерВнешнегоЗаказа);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОжидаемыеШКНаСервере()
	
	ПодготовитьТаблицуСканирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОжидаемыеШК(Команда)
	ОбновитьОжидаемыеШКНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СканироватьШКНажатие(Элемент)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СканироватьШКЗавершение", ЭтаФорма);
	ПоказатьВводСтроки(ОписаниеОповещения,,"Введите ШК",,);
	
КонецПроцедуры

&НаКлиенте
Процедура СканироватьШКЗавершение(Штрихкод, ДопПараметры) Экспорт
	
	Если Штрихкод = Неопределено Или ПустаяСтрока(Штрихкод) Тогда
		Возврат;
	КонецЕсли;
	
	СканироватьШКНаСервере(Штрихкод);
	
КонецПроцедуры

&НаСервере
Процедура СканироватьШКНаСервере(Штрихкод)
	
	СканШтрихкод = "";
	СканЗаказ = Неопределено;
	СканДатаДоставки = Неопределено;
	СканТерминалДоставки = Неопределено;
	СканНомерПалеты = 0;
	СканТранспорт = Неопределено;
	СканВодитель = Неопределено;
	
	Если ТолькоПросмотр Тогда
		Элементы.СканШтрихкод.ЦветТекста = WebЦвета.Красный;
		СканШтрихкод = "Документ проведен, сканирование запрещено!";
		Сообщить(СканШтрихкод);
		Возврат;
	КонецЕсли;
	
	ИсходныйШтрихкод = СокрЛП(Штрихкод);
	
	Если Объект.Партнер = Справочники.Контрагенты.НайтиПоКоду("Shop_976") Тогда
		ИскомыйШтрихкод = Прав(ИсходныйШтрихкод, 8);
	Иначе
		ИскомыйШтрихкод = ИсходныйШтрихкод;
	КонецЕсли;
	
	СтрокиСканирования = ТаблицаСканирования.НайтиСтроки(Новый Структура("Штрихкод", ИскомыйШтрихкод));
	Если СтрокиСканирования.Количество() Тогда
		
		СтрокаСканирования = СтрокиСканирования[0];
		Если Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", СтрокаСканирования.Заказ)).Количество() Тогда
			
			Элементы.СканШтрихкод.ЦветТекста = WebЦвета.Красный;
			СканШтрихкод = ИсходныйШтрихкод + " - уже сканирован!";
			Сообщить("Заказ " + СокрП(ОбщегоНазначения.ПолучитьЗначениеРеквизита(СтрокаСканирования.Заказ, "Номер")) + " уже сканирован!");
			
		Иначе
		
			Элементы.СканШтрихкод.ЦветТекста = WebЦвета.Черный;
			СканШтрихкод = ИскомыйШтрихкод;
			
			СканЗаказ = СтрокаСканирования.Заказ;
			СканДатаДоставки = СтрокаСканирования.ДатаДоставки;
			СканТерминалДоставки = СтрокаСканирования.ТерминалДоставки;
			СканНомерПалеты = СтрокаСканирования.НомерПалеты;
			СканТранспорт = СтрокаСканирования.Транспорт;
			СканВодитель = СтрокаСканирования.Водитель;
			
			СтрокаЗаказа = Объект.Заказы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаЗаказа, СтрокаСканирования);
			СтрокаЗаказа.Штрихкод = ИсходныйШтрихкод;
			СтрокаЗаказа.ВремяСканирования = ТекущаяДата();
			
			Записать();
			
		КонецЕсли;
	Иначе
		Элементы.СканШтрихкод.ЦветТекста = WebЦвета.Красный;
		СканШтрихкод = ИсходныйШтрихкод + " - не найден!";
		
		Сообщить("ШК " + ИсходныйШтрихкод + " не найден!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если Не Источник = "Сканер штрихкода" Тогда
		Возврат;
	КонецЕсли;		
  
	Если НЕ ЗначениеЗаполнено(Данные) Тогда
		Возврат;
	КонецЕсли;	
	
	СканироватьШКНаСервере(Данные);
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	ПодготовитьТаблицуСканирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ДатаПриИзмененииНаСервере();
КонецПроцедуры
