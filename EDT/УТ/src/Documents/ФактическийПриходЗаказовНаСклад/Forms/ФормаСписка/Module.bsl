
&НаКлиенте
Процедура ВнешнийНомерЗаказаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(ВнешнийНомерЗаказа) Тогда
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка.Номер КАК Номер
		            |ИЗ
		            |	Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
		            |ГДЕ
		            |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ.НомерВнешнегоЗаказа = &НомерВнешнегоЗаказа
		            |
		            |СГРУППИРОВАТЬ ПО
		            |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка.Ссылка,
		            |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка.Номер";
		Зап.УстановитьПараметр("НомерВнешнегоЗаказа", ВнешнийНомерЗаказа);
		
		Рез = Зап.Выполнить().Выбрать();;
		Мас = Новый Массив;
		Если Рез.Количество() = 0 Тогда
			ОчиститьПоиск(Неопределено);
		Иначе
			Пока Рез.Следующий() Цикл
				Мас.Добавить(Рез.Номер);
			КонецЦикла;	
		ИП = "Номер";
		ПЗ = Мас;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);
		КонецеСли;	
	Иначе
		ОчиститьПоиск(Неопределено);
	КонецеСли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПоиск(Команда)
	// Вставить содержимое обработчика.
		ИП = "Номер";
		ПЗ = Новый Массив;
		Исп = Ложь;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);
	//Список.Отбор.элементы[2].Использование = Ложь;
	ВнешнийНомерЗаказа = "";
	НомерЗаказа = "";
	Штрихкод = "";
КонецПроцедуры


&НаКлиенте
Процедура НомерЗаказаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(НомерЗаказа) Тогда
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка.Номер КАК Номер
		            |ИЗ
		            |	Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
		            |ГДЕ
		            |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер = &НомерЗаказа
		            |
		            |СГРУППИРОВАТЬ ПО
		            |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка.Ссылка,
		            |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка.Номер";
		Зап.УстановитьПараметр("НомерЗаказа", Формат(НомерЗаказа, "ЧГ="));
		
		Рез = Зап.Выполнить().Выбрать();;
		Мас = Новый Массив;
		Если Рез.Количество() = 0 Тогда
			ОчиститьПоиск(Неопределено);
		Иначе
			Пока Рез.Следующий() Цикл
				Мас.Добавить(Рез.Номер);
			КонецЦикла;	
		ИП = "Номер";
		ПЗ = Мас;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);
		КонецеСли;	
	Иначе
		ОчиститьПоиск(Неопределено);
	КонецеСли;
КонецПроцедуры


#Область smv
&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
   //Устанавливаем видимость/доступность кнопок в зависисмости от закрытия документа
   Если ЭтаФорма.ТекущийЭлемент = Элементы.Список Тогда
       //Элементы.СписокЗакрыт.Доступность = НЕ ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока.Закрыт;
       Элементы.ФормаСоздатьАктРасхождения.Доступность = НЕ ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока.Закрыт;
   КонецЕсли;
КонецПроцедуры

&НаСервере
Функция  ЗакрытНаСервере(ДокументСсылка)
    ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
    Закрыт = ДокументОбъект.ЗакрытьДокумент();
    ДокументОбъект.Записать();
    Возврат Закрыт;
КонецФункции

//Закрывает документ
&НаКлиенте
Процедура Закрыт(Команда)
    ДокументСсылка = ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока;
    Если НЕ ДокументСсылка.Закрыт Тогда
        Если НЕ ДокументСсылка.Проведен Тогда
            От = Вопрос("Для закрытия необходимо проведение документа. Провести?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
            Если От = КодВозвратаДиалога.Да Тогда
                ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
                ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
            Иначе
                Возврат;
            КонецеСли;
        КонецЕсли;
        Закрыт = ЗакрытНаСервере(ДокументСсылка);
        Если НЕ Закрыт Тогда
            Предупреждение("Есть расхождения, нельзя закрыть докумет!");
            Возврат;
        КонецЕсли;
    Иначе
        Закрыт = ЗакрытНаСервере(ДокументСсылка);
    КонецЕсли;
    
    //Закрыт = ЗакрытНаСервере(ДокументСсылка);
    //Если НЕ Закрыт Тогда
    //    Предупреждение("Есть расхождения, нельзя закрыть докумет!");
    //    Возврат;
    //КонецЕсли;
    
    //Устанавливаем видимость для кнопки создания акта
    Элементы.ФормаСоздатьАктРасхождения.Доступность = НЕ ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока.Закрыт;
    //Элементы.СписокЗакрыт.Доступность = НЕ ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока.Закрыт;
КонецПроцедуры

&НаСервере
Функция СоздатьАктРасхожденияНаСервере()
  ДокументОбъект = ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока.ПолучитьОбъект();
  Акт = ДокументОбъект.Создать_ОткрытьАктРасхожденияПоПриходу();
  ДокументОбъект.Записать();
  Возврат Акт; 
КонецФункции

//Создание/Открытие акта
&НаКлиенте
Процедура СоздатьАктРасхождения(Команда)
    Акт = СоздатьАктРасхожденияНаСервере();
    Если Акт <> Неопределено Тогда
    ОткрытьЗначение(Акт.Ссылка);
    Иначе
        Сообщить("Расходжений нет.", СтатусСообщения.Важное);
    КонецЕсли;
КонецПроцедуры

#КонецОбласти 

