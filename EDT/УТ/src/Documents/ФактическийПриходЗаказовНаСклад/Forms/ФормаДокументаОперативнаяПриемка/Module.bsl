

&НаКлиенте
// Процедура - обработчик внешнего событие, которое возникает при посылке
// внешним приложением сообщения, сформированного в специальном формате.
// Внешнее событие сначала обрабатывается всеми открытыми формами, имеющими
// обработчик этого события, а затем может быть обработано в процедуре модуля
// приложения с именем ОбработкаВнешнегоСобытия().
//
// Параметры:
//  Источник - <Строка>
//           - Источник внешнего события.
//
//  Событие  - <Строка>
//           - Наименование события.
//
//  Данные   - <Строка>
//           - Данные для события.
//
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	ДатаИВремяСканирования = ТекущаяДата(); // Задача № 3083
	
	Если Объект.Ссылка.Пустая() Тогда // В рамках Задача № 3083
		Записать();
	КонецЕсли;	
	
	//Если НЕ Источник = "Сканер штрихкода" Тогда
	//	Возврат;
	//КонецЕсли;	
	
	Если Объект.Проведен Тогда		
		Сообщить("Документ проведен");
		Возврат;		
	КонецЕсли;
	
  
	Если НЕ ЗначениеЗаполнено(Данные) Тогда
		Возврат;
	КонецЕсли;	
	
	Данные = СокрЛП(Данные);
	
	//Если Лев(Данные, 2) = "37" И СтрДлина(Данные) = 13 Тогда
	Если Лев(Данные, 2) = "37" И СтрДлина(Данные) = 13 И СтрНайти(Данные, "-") = 0 Тогда
		НомерР = Лев(Данные, СтрДлина(Данные) - 1);	
	Иначе
		НомерР = Данные;
	КонецЕсли;
	
	//// МАС - 09.10.2017 - костылик для автофидеса --->> 
	//Если Объект.Контрагент = АвтоФидес() Тогда	
	//	НомерР = Прав(НомерР, 6);		
	//КонецЕсли;
	//// <<--- МАС 
		                                 
	НайденныйЗаказ = Неопределено; // Задача № 3083
	
	Рез = ПолучитьЗаказыНаСервере(НомерР, НайденныйЗаказ);
	Если Рез Тогда	
		Сигнал();  // пик!	
		//Сообщить("Пик!");
	КонецЕсли;
	
	// Задача № 3083 
	РаботаСШтрихкодированиемСервер.СохранитьДанныеСканированияДляФактическогоПрихода(ДатаИВремяСканирования, Объект.Ссылка, Данные, НайденныйЗаказ);
	// Задача № 3083
	
	ОбновитьЗаголовокНеопознанныеШК();
	
	ПересчитатьИтоги();
	
	ПосчитатьИтоги();
	
	ОбновитьРасхождения();	
	
КонецПроцедуры // ВнешнееСобытие()


Функция АвтоФидес()
	
	Возврат Справочники.Контрагенты.НайтиПоКоду("Shop_197");	

КонецФункции // ()


Функция ПолучитьЗаказыНаСервере(НомерР, НайденныйЗаказ = Неопределено)

	НуженСигнал = Ложь;
	
	БезАПП = Объект.АПП.Пустая();
	
	
	Если БезАПП Тогда // без АПП
		
		//Асеев 12.03.2021 (Задача № 3837)>>>
		//Запрос = новый Запрос("ВЫБРАТЬ
		//                      |	ШтрихкодыЗаказов.Заказ КАК Заказ,
		//                      |	ШтрихкодыЗаказов.Заказ.СуммаДокумента КАК СуммаДокумента,
		//                      |	ШтрихкодыЗаказов.Заказ.УслугиСД КАК УслугиСД,
		//                      |	ШтрихкодыЗаказов.Заказ.Номер КАК Номер,
		//                      |	ШтрихкодыЗаказов.Заказ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
		//                      |	ШтрихкодыЗаказов.Заказ.ВладелецТовара КАК ВладелецТовара
		//                      |ИЗ
		//                      |	РегистрСведений.ШтрихкодыЗаказов КАК ШтрихкодыЗаказов
		//                      |ГДЕ
		//                      |	ШтрихкодыЗаказов.Штрихкод = &Штрихкод
		//                      |	И ШтрихкодыЗаказов.Заказ.ВладелецТовара = &ВладелецТовара
		//                      |
		//                      |СГРУППИРОВАТЬ ПО
		//                      |	ШтрихкодыЗаказов.Заказ,
		//                      |	ШтрихкодыЗаказов.Заказ.СуммаДокумента,
		//                      |	ШтрихкодыЗаказов.Заказ.УслугиСД,
		//                      |	ШтрихкодыЗаказов.Заказ.Номер,
		//                      |	ШтрихкодыЗаказов.Заказ.НомерВнешнегоЗаказа,
		//                      |	ШтрихкодыЗаказов.Заказ.ВладелецТовара");
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ШтрихкодыЗаказов.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	РегистрСведений.ШтрихкодыЗаказов КАК ШтрихкодыЗаказов
		|ГДЕ
		|	ШтрихкодыЗаказов.Штрихкод = &Штрихкод
		|	И ШтрихкодыЗаказов.Заказ.ВладелецТовара = &ВладелецТовара
		|
		|СГРУППИРОВАТЬ ПО
		|	ШтрихкодыЗаказов.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыТарифаЗаказаСрезПоследних.Заказ КАК Заказ,
		|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД
		|ПОМЕСТИТЬ ВТ_ПараметрыТарифаЗаказа
		|ИЗ
		|	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
		|			,
		|			Заказ В
		|				(ВЫБРАТЬ
		|					ВТ_Заказы.Заказ КАК Заказ
		|				ИЗ
		|					ВТ_Заказы КАК ВТ_Заказы)) КАК ПараметрыТарифаЗаказаСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказы.Заказ КАК Заказ,
		|	ВТ_Заказы.Заказ.СуммаДокумента КАК СуммаДокумента,
		|	ЕСТЬNULL(ВТ_ПараметрыТарифаЗаказа.УслугиСД, 0) КАК УслугиСД,
		|	ВТ_Заказы.Заказ.Номер КАК Номер,
		|	ВТ_Заказы.Заказ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
		|	ВТ_Заказы.Заказ.ВладелецТовара КАК ВладелецТовара
		|ИЗ
		|	ВТ_Заказы КАК ВТ_Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыТарифаЗаказа КАК ВТ_ПараметрыТарифаЗаказа
		|		ПО ВТ_Заказы.Заказ = ВТ_ПараметрыТарифаЗаказа.Заказ";
		//Асеев 12.03.2021 (Задача № 3837)<<<
		
		Запрос.УстановитьПараметр("Штрихкод", НомерР);
		Запрос.УстановитьПараметр("ВладелецТовара", Объект.Контрагент);

		Рез = Запрос.Выполнить().Выгрузить();			
	
		Если Рез.Количество() Тогда	// есть в системе
			
			НайденныйЗаказ = Рез[0].Заказ;
			
			Если Рез[0].ВладелецТовара = Объект.Контрагент Тогда
				
				Най = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", Рез[0].Заказ));		
				Если Най.Количество() Тогда		
					Для каждого СтрНай Из Най Цикл		
						СтрНай.КоличествоМестСканировано = СтрНай.КоличествоМестСканировано + 1;
						СтрНай.КоличествоМестПриход = СтрНай.КоличествоМестПриход + 1;
				
						Если СтрНай.КоличествоМестСканировано > СтрНай.КоличествоМестПриход Тогда				
							//Сигнал();  // пик!		
							НуженСигнал = Истина;
						КонецЕсли;
						
						СтрНай.ЕстьНаСканере = Истина;	
						
						Если Объект.Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_602") Тогда
						    СтрНай.СуммаВСистеме = Рез[0].СуммаДокумента - Рез[0].УслугиСД;
							СтрНай.СуммаНаСканере = Рез[0].СуммаДокумента - Рез[0].УслугиСД;	
						Иначе					
							СтрНай.СуммаВСистеме = Рез[0].СуммаДокумента;
							СтрНай.СуммаНаСканере = Рез[0].СуммаДокумента;	
						КонецЕсли;			
						
						Если НЕ ЗначениеЗаполнено(СтрНай.Заказ) Тогда				
							СтрНай.Заказ = Рез[0].Заказ;				
						КонецЕсли;	
					КонецЦикла;			
				Иначе	
				
					НСтр = Объект.Заказы.Добавить();
					НСтр.Заказ = Рез[0].Заказ;
					НСтр.КоличествоМестПриход = 1;
					НСтр.КоличествоМестСканировано = 1;
					НСтр.ЕстьНаСканере = Истина;
					НСтр.НомерЗаказа = Рез[0].НомерВнешнегоЗаказа;
					Если Объект.Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_602") Тогда
					    НСтр.СуммаВСистеме = Рез[0].СуммаДокумента - Рез[0].УслугиСД;
						НСтр.СуммаНаСканере = Рез[0].СуммаДокумента - Рез[0].УслугиСД;	
					Иначе					
						НСтр.СуммаВСистеме = Рез[0].СуммаДокумента;
						НСтр.СуммаНаСканере = Рез[0].СуммаДокумента;	
					КонецЕсли;				
				КонецЕсли;
				
			
			Иначе
				
				//Сигнал();  // пик!
				НуженСигнал = Истина;
				
				НайН = Объект.НеопознанныеШК.НайтиСтроки(Новый Структура("Штрихкод", НомерР));
				
				Если НайН.Количество() Тогда		
					Для каждого СтрНай Из НайН Цикл		
						СтрНай.КоличествоМест = СтрНай.КоличествоМест + 1;				
					КонецЦикла;		
				Иначе
					НСтр = Объект.НеопознанныеШК.Добавить();
					НСтр.Штрихкод = НомерР;	
					НСтр.КоличествоМест = 1;	
					НСтр.ЕстьВСистеме = Истина
				КонецЕсли;
				
			
			КонецЕсли;
			 
			
			
			Модифицированность = Истина;
						
		Иначе // добавляем в ТЧ "Не опознанные"
			
			НайденныйЗаказ = Неопределено;
			
			// МАС - 27.10.2017 - костыль для АвтоФидеса --->> 
			Если Объект.Контрагент = АвтоФидес() Тогда	
				
				НомерШК = Прав(НомерР, 6);
				//Асеев 12.03.2021 (Задача № 3837)>>>
				//ЗапросВнНомер = Новый Запрос("ВЫБРАТЬ
				//                             |	РеализацияТоваровУслуг.Ссылка КАК Заказ,
				//                             |	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
				//                             |	РеализацияТоваровУслуг.УслугиСД КАК УслугиСД,
				//                             |	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
				//                             |	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара
				//                             |ИЗ
				//                             |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
				//                             |ГДЕ
				//                             |	РеализацияТоваровУслуг.НомерВнешнегоЗаказа = &НомерВнешнегоЗаказа
				//                             |	И РеализацияТоваровУслуг.ВладелецТовара = &ВладелецТовара");
				ЗапросВнНомер = Новый Запрос;
				ЗапросВнНомер.Текст =
				"ВЫБРАТЬ
				|	РеализацияТоваровУслуг.Ссылка КАК Заказ
				|ПОМЕСТИТЬ ВТ_Заказы
				|ИЗ
				|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
				|ГДЕ
				|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа = &НомерВнешнегоЗаказа
				|	И РеализацияТоваровУслуг.ВладелецТовара = &ВладелецТовара
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПараметрыТарифаЗаказаСрезПоследних.Заказ КАК Заказ,
				|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД
				|ПОМЕСТИТЬ ВТ_ПараметрыТарифаЗаказа
				|ИЗ
				|	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
				|			,
				|			Заказ В
				|				(ВЫБРАТЬ
				|					ВТ_Заказы.Заказ КАК Заказ
				|				ИЗ
				|					ВТ_Заказы КАК ВТ_Заказы)) КАК ПараметрыТарифаЗаказаСрезПоследних
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Заказы.Заказ КАК Заказ,
				|	ВТ_Заказы.Заказ.СуммаДокумента КАК СуммаДокумента,
				|	ЕСТЬNULL(ВТ_ПараметрыТарифаЗаказа.УслугиСД, 0) КАК УслугиСД,
				|	ВТ_Заказы.Заказ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
				|	ВТ_Заказы.Заказ.ВладелецТовара КАК ВладелецТовара
				|ИЗ
				|	ВТ_Заказы КАК ВТ_Заказы
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыТарифаЗаказа КАК ВТ_ПараметрыТарифаЗаказа
				|		ПО ВТ_Заказы.Заказ = ВТ_ПараметрыТарифаЗаказа.Заказ";
				//Асеев 12.03.2021 (Задача № 3837)<<<
				ЗапросВнНомер.УстановитьПараметр("НомерВнешнегоЗаказа", НомерШК);
				ЗапросВнНомер.УстановитьПараметр("ВладелецТовара", Объект.Контрагент);
				РезВнНомер = ЗапросВнНомер.Выполнить().Выбрать();
				Если РезВнНомер.Следующий() Тогда
										
					Най = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", РезВнНомер.Заказ));		
					Если Най.Количество() Тогда		
						Для каждого СтрНай Из Най Цикл		
							СтрНай.КоличествоМестСканировано = СтрНай.КоличествоМестСканировано + 1;
							СтрНай.КоличествоМестПриход = СтрНай.КоличествоМестПриход + 1;
					
							Если СтрНай.КоличествоМестСканировано > СтрНай.КоличествоМестПриход Тогда						
								НуженСигнал = Истина;
							КонецЕсли;
				
							СтрНай.ЕстьНаСканере = Истина;							
							СтрНай.СуммаВСистеме = РезВнНомер.СуммаДокумента;
							СтрНай.СуммаНаСканере = РезВнНомер.СуммаДокумента;								
							
							Если НЕ ЗначениеЗаполнено(СтрНай.Заказ) Тогда				
								СтрНай.Заказ = РезВнНомер.Заказ;				
							КонецЕсли;	
						КонецЦикла;			
					Иначе					
						НСтр = Объект.Заказы.Добавить();
						НСтр.Заказ = РезВнНомер.Заказ;
						НСтр.КоличествоМестПриход = 1;
						НСтр.КоличествоМестСканировано = 1;
						НСтр.ЕстьНаСканере = Истина;
						НСтр.НомерЗаказа = РезВнНомер.НомерВнешнегоЗаказа;						
						НСтр.СуммаВСистеме = РезВнНомер.СуммаДокумента;
						НСтр.СуммаНаСканере = РезВнНомер.СуммаДокумента;									
					КонецЕсли;			
				КонецЕсли;
			КонецЕсли;
			// <<--- МАС - 27.10.2017 - костыль для АвтоФидеса 
			
			
			
								
			//Сигнал();  // пик!
			НуженСигнал = Истина;
			
			НайН = Объект.НеопознанныеШК.НайтиСтроки(Новый Структура("Штрихкод", НомерР));
			
			Если НайН.Количество() Тогда		
				Для каждого СтрНай Из НайН Цикл		
					СтрНай.КоличествоМест = СтрНай.КоличествоМест + 1;				
				КонецЦикла;		
			Иначе
				НСтр = Объект.НеопознанныеШК.Добавить();
				НСтр.Штрихкод = НомерР;	
				НСтр.КоличествоМест = 1;		
			КонецЕсли;	
			
			Модифицированность = Истина;
				
		КонецЕсли;
		
		
		
		Если ЗначениеЗаполнено(Най) Тогда	
			Элементы.Заказы.ТекущаяСтрока = Объект.Заказы.Индекс(Най[0]);	
			//Возврат Истина;
		Иначе
			//Возврат Ложь;
		КонецЕсли;
					
	
	Иначе // по АПП
	
		Если Объект.ШКПоМестам Тогда
			
			//Асеев 12.03.2021 (Задача № 3837)>>>
			//Запрос = новый Запрос("ВЫБРАТЬ
			//                      |	МестаПоЗаказам.Ссылка КАК Место,
			//                      |	МестаПоЗаказам.Заказ КАК Заказ,
			//                      |	МестаПоЗаказам.Заказ.СуммаДокумента КАК СуммаДокумента,
			//                      |	МестаПоЗаказам.Заказ.УслугиСД КАК УслугиСД
			//                      |ИЗ
			//                      |	Справочник.МестаПоЗаказам КАК МестаПоЗаказам
			//                      |ГДЕ
			//                      |	МестаПоЗаказам.Штрихкод = &Штрихкод");
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	МестаПоЗаказам.Ссылка КАК Место,
			|	МестаПоЗаказам.Заказ КАК Заказ
			|ПОМЕСТИТЬ ВТ_Места
			|ИЗ
			|	Справочник.МестаПоЗаказам КАК МестаПоЗаказам
			|ГДЕ
			|	МестаПоЗаказам.Штрихкод = &Штрихкод
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПараметрыТарифаЗаказаСрезПоследних.Заказ КАК Заказ,
			|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД
			|ПОМЕСТИТЬ ВТ_ПараметрыТарифаЗаказа
			|ИЗ
			|	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
			|			,
			|			Заказ В
			|				(ВЫБРАТЬ
			|					ВТ_Места.Заказ КАК Заказ
			|				ИЗ
			|					ВТ_Места КАК ВТ_Места)) КАК ПараметрыТарифаЗаказаСрезПоследних
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Места.Место КАК Место,
			|	ВТ_Места.Заказ КАК Заказ,
			|	ВТ_Места.Заказ.СуммаДокумента КАК СуммаДокумента,
			|	ЕСТЬNULL(ВТ_ПараметрыТарифаЗаказа.УслугиСД, 0) КАК УслугиСД
			|ИЗ
			|	ВТ_Места КАК ВТ_Места
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыТарифаЗаказа КАК ВТ_ПараметрыТарифаЗаказа
			|		ПО ВТ_Места.Заказ = ВТ_ПараметрыТарифаЗаказа.Заказ";
			//Асеев 12.03.2021 (Задача № 3837)<<<
			
			Запрос.УстановитьПараметр("Штрихкод", НомерР);
			Рез = Запрос.Выполнить().Выгрузить();			
			
			Если Рез.Количество() Тогда	// есть в системе
				
				НайденныйЗаказ = Рез[0].Заказ; // 3083
				
				Най = Объект.Заказы.НайтиСтроки(Новый Структура("Место", Рез[0].Место));		
				Если Най.Количество() Тогда		
					Для каждого СтрНай Из Най Цикл		
						СтрНай.КоличествоМестСканировано = СтрНай.КоличествоМестСканировано + 1;
						
						Если СтрНай.КоличествоМестСканировано > СтрНай.КоличествоМестПриход Тогда				
							//Сигнал();  // пик!		
							НуженСигнал = Истина;
						КонецЕсли;
						
						СтрНай.ЕстьНаСканере = Истина;	
						
						Если Объект.Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_602") Тогда
						    СтрНай.СуммаВСистеме = Рез[0].СуммаДокумента - Рез[0].УслугиСД;
							СтрНай.СуммаНаСканере = Рез[0].СуммаДокумента - Рез[0].УслугиСД;	
						Иначе					
							СтрНай.СуммаВСистеме = Рез[0].СуммаДокумента;
							СтрНай.СуммаНаСканере = Рез[0].СуммаДокумента;	
						КонецЕсли;
						
						Если НЕ ЗначениеЗаполнено(СтрНай.Заказ) Тогда				
							СтрНай.Заказ = Рез[0].Заказ;				
						КонецЕсли;	
					КонецЦикла;			
				Иначе	
					
					//Сигнал();  // пик!
					НуженСигнал = Истина;
								
					НайН = Объект.НеопознанныеШК.НайтиСтроки(Новый Структура("Штрихкод", НомерР));
				
					Если НайН.Количество() Тогда		
						Для каждого СтрНай Из НайН Цикл		
							СтрНай.КоличествоМест = СтрНай.КоличествоМест + 1;				
						КонецЦикла;		
					Иначе
						НСтр = Объект.НеопознанныеШК.Добавить();
						НСтр.Штрихкод = НомерР;	
						НСтр.КоличествоМест = 1;
						НСтр.ЕстьВСистеме = Истина;
					КонецЕсли;
				КонецЕсли;
				
				Модифицированность = Истина;
							
			Иначе // добавляем в ТЧ "Не опознанные"
				
				НайденныйЗаказ = Неопределено;
				
				//Сигнал();  // пик!
				НуженСигнал = Истина;
				
				НайН = Объект.НеопознанныеШК.НайтиСтроки(Новый Структура("Штрихкод", НомерР));
				
				Если НайН.Количество() Тогда		
					Для каждого СтрНай Из НайН Цикл		
						СтрНай.КоличествоМест = СтрНай.КоличествоМест + 1;				
					КонецЦикла;		
				Иначе
					НСтр = Объект.НеопознанныеШК.Добавить();
					НСтр.Штрихкод = НомерР;	
					НСтр.КоличествоМест = 1;		
				КонецЕсли;	
				
				Модифицированность = Истина;			
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Най) Тогда	
				Элементы.Заказы.ТекущаяСтрока = Объект.Заказы.Индекс(Най[0]);	
				//Возврат Истина;
			Иначе
				//Возврат Ложь;
			КонецЕсли;		
			
		Иначе	
			
			//Асеев 12.03.2021 (Задача № 3837)>>>
			//Запрос = новый Запрос("ВЫБРАТЬ
			//                      |	ШтрихкодыЗаказов.Заказ КАК Заказ,
			//                      |	ШтрихкодыЗаказов.Заказ.СуммаДокумента КАК СуммаДокумента,
			//                      |	ШтрихкодыЗаказов.Заказ.УслугиСД КАК УслугиСД
			//                      |ИЗ
			//                      |	РегистрСведений.ШтрихкодыЗаказов КАК ШтрихкодыЗаказов
			//                      |ГДЕ
			//                      |	ШтрихкодыЗаказов.Штрихкод = &Штрихкод");
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ШтрихкодыЗаказов.Заказ КАК Заказ
			|ПОМЕСТИТЬ ВТ_Заказы
			|ИЗ
			|	РегистрСведений.ШтрихкодыЗаказов КАК ШтрихкодыЗаказов
			|ГДЕ
			|	ШтрихкодыЗаказов.Штрихкод = &Штрихкод
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПараметрыТарифаЗаказаСрезПоследних.Заказ КАК Заказ,
			|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД
			|ПОМЕСТИТЬ ВТ_ПараметрыТарифаЗаказа
			|ИЗ
			|	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
			|			,
			|			Заказ В
			|				(ВЫБРАТЬ
			|					ВТ_Заказы.Заказ КАК Заказ
			|				ИЗ
			|					ВТ_Заказы КАК ВТ_Заказы)) КАК ПараметрыТарифаЗаказаСрезПоследних
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Заказы.Заказ КАК Заказ,
			|	ВТ_Заказы.Заказ.СуммаДокумента КАК СуммаДокумента,
			|	ЕСТЬNULL(ВТ_ПараметрыТарифаЗаказа.УслугиСД, 0) КАК УслугиСД
			|ИЗ
			|	ВТ_Заказы КАК ВТ_Заказы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыТарифаЗаказа КАК ВТ_ПараметрыТарифаЗаказа
			|		ПО ВТ_Заказы.Заказ = ВТ_ПараметрыТарифаЗаказа.Заказ";
			//Асеев 12.03.2021 (Задача № 3837)<<<
			Запрос.УстановитьПараметр("Штрихкод", НомерР);
			Рез = Запрос.Выполнить().Выгрузить();			
			
			Если Рез.Количество() Тогда	// есть в системе
				
				НайденныйЗаказ = Рез[0].Заказ; // 3083
				
				Най = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", Рез[0].Заказ));		
				Если Най.Количество() Тогда		
					Для каждого СтрНай Из Най Цикл		
						СтрНай.КоличествоМестСканировано = СтрНай.КоличествоМестСканировано + 1;
						
						Если СтрНай.КоличествоМестСканировано > СтрНай.КоличествоМестПриход Тогда				
							//Сигнал();  // пик!		
							НуженСигнал = Истина;
						КонецЕсли;
						
						СтрНай.ЕстьНаСканере = Истина;	
						
						Если Объект.Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_602") Тогда
						    СтрНай.СуммаВСистеме = Рез[0].СуммаДокумента - Рез[0].УслугиСД;
							СтрНай.СуммаНаСканере = Рез[0].СуммаДокумента - Рез[0].УслугиСД;	
						Иначе					
							СтрНай.СуммаВСистеме = Рез[0].СуммаДокумента;
							СтрНай.СуммаНаСканере = Рез[0].СуммаДокумента;	
						КонецЕсли;			
						
						Если НЕ ЗначениеЗаполнено(СтрНай.Заказ) Тогда				
							СтрНай.Заказ = Рез[0].Заказ;				
						КонецЕсли;	
					КонецЦикла;			
				Иначе	
					
					//Сигнал();  // пик!
					НуженСигнал = Истина;
								
					НайН = Объект.НеопознанныеШК.НайтиСтроки(Новый Структура("Штрихкод", НомерР));
				
					Если НайН.Количество() Тогда		
						Для каждого СтрНай Из НайН Цикл		
							СтрНай.КоличествоМест = СтрНай.КоличествоМест + 1;				
						КонецЦикла;		
					Иначе
						НСтр = Объект.НеопознанныеШК.Добавить();
						НСтр.Штрихкод = НомерР;	
						НСтр.КоличествоМест = 1;
						НСтр.ЕстьВСистеме = Истина;
					КонецЕсли;
				КонецЕсли;
				
				Модифицированность = Истина;
							
			Иначе // добавляем в ТЧ "Не опознанные"
				
			    НайденныйЗаказ = Неопределено;
				
				// МАС - 31.07.2017 - ищем по внешнему номеру --->>
				//Асеев 12.03.2021 (Задача № 3837)>>>
				//ЗапросВнНом = новый Запрос("ВЫБРАТЬ
				//                           |	РеализацияТоваровУслуг.Ссылка КАК Заказ,
				//                           |	РеализацияТоваровУслуг.УслугиСД КАК УслугиСД,
				//                           |	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента
				//                           |ИЗ
				//                           |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
				//                           |ГДЕ
				//                           |	РеализацияТоваровУслуг.НомерВнешнегоЗаказа = &НомерВнешнегоЗаказа
				//                           |	И &УСЛОВИЕ_ВЛАДЕЛЕЦ");
				ЗапросВнНом = Новый Запрос;
				ЗапросВнНом.Текст =
				"ВЫБРАТЬ
				|	РеализацияТоваровУслуг.Ссылка КАК Заказ
				|ПОМЕСТИТЬ ВТ_Заказы
				|ИЗ
				|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
				|ГДЕ
				|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа = &НомерВнешнегоЗаказа
				|	И &УСЛОВИЕ_ВЛАДЕЛЕЦ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПараметрыТарифаЗаказаСрезПоследних.Заказ КАК Заказ,
				|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД
				|ПОМЕСТИТЬ ВТ_ПараметрыТарифаЗаказа
				|ИЗ
				|	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(
				|			,
				|			Заказ В
				|				(ВЫБРАТЬ
				|					ВТ_Заказы.Заказ КАК Заказ
				|				ИЗ
				|					ВТ_Заказы КАК ВТ_Заказы)) КАК ПараметрыТарифаЗаказаСрезПоследних
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Заказы.Заказ КАК Заказ,
				|	ЕСТЬNULL(ВТ_ПараметрыТарифаЗаказа.УслугиСД, 0) КАК УслугиСД,
				|	ВТ_Заказы.Заказ.СуммаДокумента КАК СуммаДокумента
				|ИЗ
				|	ВТ_Заказы КАК ВТ_Заказы
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыТарифаЗаказа КАК ВТ_ПараметрыТарифаЗаказа
				|		ПО ВТ_Заказы.Заказ = ВТ_ПараметрыТарифаЗаказа.Заказ";
				//Асеев 12.03.2021 (Задача № 3837)<<<
				// МАС - 27.10.2017 - костыль для АвтоФидеса --->> 
				Если Объект.Контрагент = АвтоФидес() Тогда			
					ЗапросВнНом.Текст = СтрЗаменить(ЗапросВнНом.Текст, "&УСЛОВИЕ_ВЛАДЕЛЕЦ", "РеализацияТоваровУслуг.ВладелецТовара = &ВладелецТовара");
					ЗапросВнНом.УстановитьПараметр("НомерВнешнегоЗаказа", Прав(НомерР, 6));
					ЗапросВнНом.УстановитьПараметр("ВладелецТовара", Объект.Контрагент);
				Иначе	
					ЗапросВнНом.Текст = СтрЗаменить(ЗапросВнНом.Текст, "&УСЛОВИЕ_ВЛАДЕЛЕЦ", "ИСТИНА");
					ЗапросВнНом.УстановитьПараметр("НомерВнешнегоЗаказа", НомерР);
				КонецЕсли;	
				
				// <<--- МАС - 27.10.2017 - костыль для АвтоФидеса
			
				РезВнНом = ЗапросВнНом.Выполнить().Выгрузить();
				
				Если РезВнНом.Количество() Тогда
					
					НайденныйЗаказ = РезВнНом[0].Заказ; // 3083

					Най = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", РезВнНом[0].Заказ));		
					Если Най.Количество() Тогда		
						Для каждого СтрНай Из Най Цикл		
							СтрНай.КоличествоМестСканировано = СтрНай.КоличествоМестСканировано + 1;
							
							Если СтрНай.КоличествоМестСканировано > СтрНай.КоличествоМестПриход Тогда				
								//Сигнал();  // пик!		
								НуженСигнал = Истина;
							КонецЕсли;
							
							СтрНай.ЕстьНаСканере = Истина;	
							
							Если Объект.Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_602") Тогда
							    СтрНай.СуммаВСистеме = РезВнНом[0].СуммаДокумента - РезВнНом[0].УслугиСД;
								СтрНай.СуммаНаСканере = РезВнНом[0].СуммаДокумента - РезВнНом[0].УслугиСД;	
							Иначе					
								СтрНай.СуммаВСистеме = РезВнНом[0].СуммаДокумента;
								СтрНай.СуммаНаСканере = РезВнНом[0].СуммаДокумента;	
							КонецЕсли;			
							
							Если НЕ ЗначениеЗаполнено(СтрНай.Заказ) Тогда				
								СтрНай.Заказ = РезВнНом[0].Заказ;				
							КонецЕсли;	
						КонецЦикла;			
					Иначе	
						
						//Сигнал();  // пик!
						НуженСигнал = Истина;
									
						НайН = Объект.НеопознанныеШК.НайтиСтроки(Новый Структура("Штрихкод", НомерР));
					
						Если НайН.Количество() Тогда		
							Для каждого СтрНай Из НайН Цикл		
								СтрНай.КоличествоМест = СтрНай.КоличествоМест + 1;				
							КонецЦикла;		
						Иначе
							НСтр = Объект.НеопознанныеШК.Добавить();
							НСтр.Штрихкод = НомерР;	
							НСтр.КоличествоМест = 1;
							НСтр.ЕстьВСистеме = Истина;
						КонецЕсли;
					КонецЕсли;
					
					Модифицированность = Истина;
								
				Иначе
					
					//Сигнал();  // пик!
					НуженСигнал = Истина;
					
					НайН = Объект.НеопознанныеШК.НайтиСтроки(Новый Структура("Штрихкод", НомерР));
					
					Если НайН.Количество() Тогда		
						Для каждого СтрНай Из НайН Цикл		
							СтрНай.КоличествоМест = СтрНай.КоличествоМест + 1;				
						КонецЦикла;		
					Иначе
						НСтр = Объект.НеопознанныеШК.Добавить();
						НСтр.Штрихкод = НомерР;	
						НСтр.КоличествоМест = 1;		
					КонецЕсли;	
					
					Модифицированность = Истина;
					
				КонецЕсли;
				// <<--- МАС 
					
			КонецЕсли;
			
			
			
			Если ЗначениеЗаполнено(Най) Тогда	
				Элементы.Заказы.ТекущаяСтрока = Объект.Заказы.Индекс(Най[0]);	
				//Возврат Истина;
			Иначе
				//Возврат Ложь;
			КонецЕсли;
			
		
		КонецЕсли;	
	
	КонецЕсли;
	
	
		
	
	
	Возврат НуженСигнал;
	
КонецФункции // ()


&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	ОтменитьПоискНаСервере();
	
	// если Оперативная приемка, блокируем поля
	Если Объект.ОперативнаяПриемкаЗаказов Тогда			
		Элементы.Контрагент.ТолькоПросмотр = Истина;	
		Элементы.АПП.ТолькоПросмотр = Истина;
		Если НЕ Объект.АПП.Пустая() Тогда
			Элементы.СкладМагазина.ТолькоПросмотр = Истина;
			Элементы.ТерминалПриема.ТолькоПросмотр = Истина;
			Элементы.ТерминалДоставки.ТолькоПросмотр = Истина;		
			Элементы.ДатаВходящегоДокумента.ТолькоПросмотр = Истина;
			Элементы.НомерВходящегоДокумента.ТолькоПросмотр = Истина;		
		КонецЕсли;				
	КонецЕсли;
	
	//Элементы.ДекорацияРасхождения.Видимость = Объект.ПризнакРасхожденийСнятВручную;
	
	//Элементы.ЕстьРасхождения.Доступность = РольДоступнаСервер();
	
	ОбновитьЗаголовокНеопознанныеШК();	
	
	//Элементы.Заказы.ТолькоПросмотр = Объект.Проведен;	
	ЭтаФорма.ТолькоПросмотр = Объект.Проведен;
	Элементы.СписокДокументов.ТолькоПросмотр = Ложь;
	Элементы.СписокДокументов1.ТолькоПросмотр = Ложь;
	
	//Если Объект.ЕстьРасхождения И НЕ Объект.ПризнакРасхожденийСнятВручную Тогда	
	//	ЕстьРасхождения = Истина;		
	//Иначе
	//	ЕстьРасхождения = Ложь;
	//КонецЕсли;	
	
	//Элементы.ЕстьРасхождения.ТолькоПросмотр = НЕ РольДоступнаУправлениеРасхождениямиАПП();  
	Элементы.ЕстьРасхождения.ТолькоПросмотр = Объект.Проведен;
	
	ЭтаФорма.Заголовок = ?(ЗначениеЗаполнено(Объект.НомерКорректировки), ЭтаФорма.Заголовок + "(Корректировка)", ЭтаФорма.Заголовок);
	
	Если ЗначениеЗаполнено(Объект.НомерКорректировки) Тогда			
		Элементы.ТолькоСРасхождениями.Пометка = Истина;	
		УстановитьОтборСРасхождениями(Элементы.ТолькоСРасхождениями.Пометка);	
	КонецЕсли;
	
	// МАС - 29.09.2017 - № --->> 
	ОбновитьРасхожденияПозаказно();
	// <<--- МАС 	
		
	ПересчитатьИтоги();
	
	ОтразитьКорректировки();
	
	ОбновитьРасхождения();
	
	
КонецПроцедуры


Процедура ОбновитьРасхожденияПозаказно()

	
	Для каждого Ст Из Объект.Заказы Цикл	
		Ст.ЗаказНеПоступилПолностью = Ложь;	
		Ст.ЗаказНеПоступилЧастично = Ложь;	
	КонецЦикла;

	ЗаказыТЗ = Объект.Заказы.Выгрузить();
	ЗаказыТЗ.Свернуть("Заказ", "КоличествоМестПриход, КоличествоМестСканировано");	
	
	Для каждого Стр Из ЗаказыТЗ Цикл			
		
		Если Стр.КоличествоМестСканировано = 0 Тогда	
			НайЗак = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", Стр.Заказ));
			Для каждого СтЗак Из НайЗак Цикл	
				СтЗак.ЗаказНеПоступилПолностью = Истина;		
			КонецЦикла;
		ИначеЕсли Стр.КоличествоМестСканировано <> Стр.КоличествоМестПриход Тогда
			НайЗак = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", Стр.Заказ));
			Для каждого СтЗак Из НайЗак Цикл	
				СтЗак.ЗаказНеПоступилЧастично = Истина;		
			КонецЦикла;	
		КонецЕсли;	
		
	КонецЦикла;
	

КонецПроцедуры


Функция РольДоступнаУправлениеРасхождениямиАПП() 
	
	Возврат РольДоступна(Метаданные.Роли.УправлениеРасхождениямиАПП) ИЛИ РольДоступна(Метаданные.Роли.Админы);
	
КонецФункции


Функция РольДоступнаСервер()

	Возврат ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоНаименованию("Администратор УТЛ");

КонецФункции // ()


&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	//ОтменитьПоискНаСервере();
	Если Модифицированность Тогда		
		ПарЗап = Новый Структура("РежимЗаписиДокумента", РежимЗаписиДокумента.Запись);
		ПарЗап.Вставить("ЗавершениеРаботы",ЗавершениеРаботы);
		Записать(ПарЗап);	
	КонецЕсли;
	
	Оповестить("ОбновлениеДанных");
	
КонецПроцедуры


&НаКлиенте
Процедура СкорректироватьСтроку(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	Если ЗначениеЗаполнено(Объект.Основание) ИЛИ ЗначениеЗаполнено(Объект.Ссылка) Тогда	
		СписокДокументов.Параметры.УстановитьЗначениеПараметра("Ссылка", ?(ЗначениеЗаполнено(Объект.Основание), Объект.Основание, Объект.Ссылка));	
	КонецЕсли;	
	
	
    Соединения = ПолучитьСоединенияИнформационнойБазы();
	НомерСоединения = НомерСоединенияИнформационнойБазы();
	Для каждого Стр Из Соединения Цикл		
		Если Стр.НомерСоединения = НомерСоединения Тогда
		
			НаименованиеПриложения = ПредставлениеПриложения(Стр.ИмяПриложения);	
			Если НаименованиеПриложения = "Модуль расширения веб-сервера" Тогда
				Элементы.ШК.Видимость = Истина;
			Иначе	
			    Элементы.ШК.Видимость = Ложь;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
	//Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ЗначениеЗаполнено(Объект.Пользователь) Тогда	
	//	Объект.Пользователь = ПараметрыСеанса.ТекущийПользователь;	
	//КонецЕсли;
	
	
	// для Яндекса вместо склада выводим ИМ
	Если Объект.Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_601") ИЛИ Объект.Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_248") ИЛИ Объект.Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_752") Тогда	
		Элементы.ИМЯндекса.Видимость = Истина;
		Элементы.СкладМагазина.Видимость = Ложь;
	Иначе
		Элементы.ИМЯндекса.Видимость = Ложь;
		Элементы.СкладМагазина.Видимость = Истина;	
	КонецЕсли;
	
	
	// для версии С ШК
	Если Объект.ШКПоМестам Тогда		
	    Элементы.ГруппаВПриходе.Видимость = Ложь;
		Элементы.ГруммаМесто.Видимость    = Истина;
		//Элементы.ФормаЗаполнитьПоДаннымТСД.Доступность = Истина;
		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗаполнитьПоДаннымТСД.Доступность = Истина;
	Иначе // без ШК
		Элементы.ГруппаВПриходе.Видимость = Истина;	
		Элементы.ГруммаМесто.Видимость 	  = Ложь;
		//Элементы.ФормаЗаполнитьПоДаннымТСД.Доступность = Ложь;
		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗаполнитьПоДаннымТСД.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.ФормаЗаполнитьПоДаннымТСД.Доступность = Истина;
	
	
	//// Общий элемент УФ для всей строки
	//ТекОф = Новый Структура("ЦветФона", Новый Цвет(205, 230, 255));
	//ТекПредставление = "Цвет выделенной строки. Общий";
	//УсловноеОформление.Элементы.Вставить(2).Представление = ТекПредставление;
	//ТекОтбор = Новый Соответствие;
	//ТекОтбор.Вставить("Данные.ИдСтроки",     Новый ПолеКомпоновкиДанных("ИдентификаторТекущейСтроки"));
	//УправляемыеФормыКлиентСервер.ИзменитьЭлементУсловногоОформления(УсловноеОформление, ТекОтбор, ТекОф, "Данные", ТекПредставление);
	//
	//// Отдельное УФ для каждой ячейки
	//ТекОф = Новый Структура("ЦветФона, ЦветТекста", Новый Цвет(0, 0, 131), WebЦвета.Белый);
	//Для каждого Эл Из Элементы.Данные.ПодчиненныеЭлементы Цикл
	//    ТекПредставление = "Цвет выделенной ячейки: " + Эл.Имя;
	//    УсловноеОформление.Элементы.Вставить(3).Представление = ТекПредставление;
	//    ТекОтбор = Новый Соответствие;
	//    ТекОтбор.Вставить("ТекущаяКолонка",     Эл.Имя);
	//    ТекОтбор.Вставить("Данные.ИдСтроки",     Новый ПолеКомпоновкиДанных("ИдентификаторТекущейСтроки"));
	//    УправляемыеФормыКлиентСервер.ИзменитьЭлементУсловногоОформления(УсловноеОформление, ТекОтбор, ТекОф, Эл.Имя, ТекПредставление); // Ищет по представдению и устанавливает значения
	//	
	//	УсловноеОформление.
	//	
	//КонецЦикла;
	//
	//
	//Для каждого Ст Из Объект.Заказы Цикл		
	//	Ст.ИдСтроки = Ст.ПолучитьИдентификатор();	
	//КонецЦикла;
	
	Если Не Объект.Ссылка.Пустая() Тогда
		
		ИсторияСканирования.Параметры.УстановитьЗначениеПараметра("ДокументСсылка",  Объект.Ссылка);
		
	КонецЕсли;

	//Асеев 01.12.2020 (по письму Re: Заказ ЭККО.)>>>
	ИмяОтбора = "СканированиеВДокументе";
	ГруппаЭлементовОтбора = ОбщегоНазначенияКлиентСервер83.СоздатьГруппуЭлементовОтбора(ЛогСканирования.Отбор.Элементы, ИмяОтбора, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(ГруппаЭлементовОтбора, "baseId", 3, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(ГруппаЭлементовОтбора, "objectId", Объект.Номер, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(ГруппаЭлементовОтбора, "operationId", 5, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	//Асеев 01.12.2020 (по письму Re: Заказ ЭККО.)<<<
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьЗаголовокНеопознанныеШК()

	Кол = Объект.НеопознанныеШК.Количество();
	Элементы.ГруппаНеопознанныеШК.Заголовок = ?(Кол > 0, "Неопознанные ШК (" + Кол + ")", "Неопознанные ШК");

КонецПроцедуры


Процедура ЗаписатьИзменение(Заказ, Параметр, Значение, РучнаяКорректировка = Ложь)
	
	НСтр = Объект.ИсторияРеквизитов.Добавить();	
	НСтр.Дата = ТекущаяДата();
	НСтр.Заказ = Заказ;
	НСтр.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	НСтр.Параметр = СокрЛП(Строка(Параметр));
	НСтр.Значение = СокрЛП(Строка(Значение));
	НСтр.РучнаяКорректировка = РучнаяКорректировка;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаказыПриИзменении(Элемент)
	
	
	ОбновитьРасхожденияПозаказно();
	
	//Асеев 03.12.2020 (по письму Re: Заказ ЭККО.)>>>
	//Элементы.Заказы.ТекущиеДанные.Корректировка = Истина;
	СтрокаЗаказа = Объект.Заказы.НайтиПоИдентификатору(Элементы.Заказы.ТекущаяСтрока);
	СтрокаЗаказа.Корректировка = Истина;
	//Асеев 03.12.2020 (по письму Re: Заказ ЭККО.)<<<
		
	ПересчитатьИтоги();
	
	ОбновитьОтображениеДанных();
	
	ОбновитьРасхождения();

	
КонецПроцедуры


&НаКлиенте
Процедура ОтразитьКорректировки()
	
	ОтразитьКорректировкиНаСервере();	

КонецПроцедуры


Процедура ОтразитьКорректировкиНаСервере()

	ТЗИзменения = Объект.ИсторияРеквизитов.Выгрузить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТЗИзменения.Дата КАК Дата,
	                      |	ТЗИзменения.Параметр КАК Параметр,
	                      |	ТЗИзменения.Значение КАК Значение,
	                      |	ТЗИзменения.РучнаяКорректировка КАК РучнаяКорректировка,
	                      |	ТЗИзменения.Заказ КАК Заказ,
	                      |	ТЗИзменения.Пользователь КАК Пользователь
	                      |ПОМЕСТИТЬ ВТ
	                      |ИЗ
	                      |	&ТЗИзменения КАК ТЗИзменения
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ.Дата КАК Дата,
	                      |	ВТ.Параметр КАК Параметр,
	                      |	ВТ.Значение КАК Значение,
	                      |	ВТ.РучнаяКорректировка КАК РучнаяКорректировка,
	                      |	ВТ.Заказ КАК Заказ,
	                      |	ВТ.Пользователь КАК Пользователь
	                      |ПОМЕСТИТЬ ВТ_ДанныеЗаполнения
	                      |ИЗ
	                      |	ВТ КАК ВТ
	                      |ГДЕ
	                      |	ВТ.РучнаяКорректировка = ЛОЖЬ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	МАКСИМУМ(ВТ.Дата) КАК Дата,
	                      |	ВТ.Заказ КАК Заказ,
	                      |	ВТ.Параметр КАК Параметр
	                      |ПОМЕСТИТЬ ВТ_СрезПоследнихИзменений
	                      |ИЗ
	                      |	ВТ КАК ВТ
	                      |ГДЕ
	                      |	ВТ.РучнаяКорректировка = ИСТИНА
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ.Заказ,
	                      |	ВТ.Параметр
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ.Дата КАК Дата_Корректировка,
	                      |	ВТ.Параметр КАК Параметр_Корректировка,
	                      |	ВТ.Значение КАК ЗначениеПосле,
	                      |	ВТ.Заказ КАК Заказ_Корректировка,
	                      |	ВТ.Пользователь КАК Пользователь_Корректировка,
	                      |	ВТ_ДанныеЗаполнения.Дата КАК Дата,
	                      |	ВТ_ДанныеЗаполнения.Параметр КАК Параметр,
	                      |	ВТ_ДанныеЗаполнения.Значение КАК ЗначениеДо,
	                      |	ВТ_ДанныеЗаполнения.Заказ КАК Заказ,
	                      |	ВТ_ДанныеЗаполнения.Пользователь КАК Пользователь
	                      |ИЗ
	                      |	ВТ_СрезПоследнихИзменений КАК ВТ_СрезПоследнихИзменений
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеЗаполнения КАК ВТ_ДанныеЗаполнения
	                      |			ПО ВТ.Заказ = ВТ_ДанныеЗаполнения.Заказ
	                      |				И ВТ.Параметр = ВТ_ДанныеЗаполнения.Параметр
	                      |		ПО ВТ_СрезПоследнихИзменений.Дата = ВТ.Дата
	                      |			И ВТ_СрезПоследнихИзменений.Заказ = ВТ.Заказ
	                      |			И ВТ_СрезПоследнихИзменений.Параметр = ВТ.Параметр");
	Запрос.УстановитьПараметр("ТЗИзменения", ТЗИзменения);
	Рез = Запрос.Выполнить().Выгрузить();
	
	ТЧКорректировки.Загрузить(Рез);
	
		
	Для каждого Стр Из Объект.Заказы Цикл			
		Най = Рез.НайтиСтроки(Новый Структура("Заказ", Стр.Заказ));		
		Если Най.Количество() Тогда			
			Стр.Корректировка = Истина;		
		//Асеев 03.12.2020 (по письму Re: Заказ ЭККО.)>>>
		//Иначе
			//если корректировка была, то пусть и остается
			//иначе ручные корректировки, которые не отражены в ИсторияРеквизитов, будут потеряны 
			//Стр.Корректировка = Ложь;
			//Асеев 03.12.2020 (по письму Re: Заказ ЭККО.)<<<
		КонецЕсли;			
	КонецЦикла;
	
	//Элементы.ТЧКорректировки.Видимость = ТЧКорректировки.Количество();
		
КонецПроцедуры


&НаКлиенте
Процедура НеопознанныеШКПослеУдаления(Элемент)
	ОбновитьЗаголовокНеопознанныеШК();
КонецПроцедуры


&НаКлиенте
Процедура НеопознанныеШКПриИзменении(Элемент)
	ОбновитьЗаголовокНеопознанныеШК();
КонецПроцедуры


&НаКлиенте
Процедура ПересчитатьИтоги()
		
	КоличествоОбъявлено = 0;  КоличествоНеПоступило = 0;  КоличествоСРасхождениями = 0;	
	КоличествоМестОбъявлено = 0;  КоличествоМестПоступило = 0;	КоличествоЗаказовПоступило = 0;	
	
		
	Для каждого Стр Из Объект.Заказы Цикл
		
		Если Стр.КоличествоМестПриход <> Стр.КоличествоМестСканировано Тогда	
			Если Стр.КоличествоМестСканировано = 0 Тогда
				КоличествоНеПоступило = КоличествоНеПоступило + 1;	
			Иначе	
				КоличествоСРасхождениями = КоличествоСРасхождениями + 1;		
			КонецЕсли;		
		КонецЕсли;			
		КоличествоМестОбъявлено = КоличествоМестОбъявлено + Стр.КоличествоМестПриход;		
		КоличествоМестПоступило = КоличествоМестПоступило + Стр.КоличествоМестСканировано;
						
	КонецЦикла;
		
	ПересчитатьИтогиНаСервере();	
	
	//Объект.СуммаВСистеме = Объект.Заказы.Итог("СуммаВСистеме");
	//Объект.СуммаВПриходе = Объект.Заказы.Итог("СуммаВПриходе");
	//Объект.СуммаНаСканере = Объект.Заказы.Итог("СуммаНаСканере");
	//
	//ИтогоЕстьВСистеме = Объект.Заказы.НайтиСтроки(Новый Структура("ЕстьВСистеме",Истина)).Количество();
	//Объект.ИтогоЕстьВСистеме = ИтогоЕстьВСистеме;
	//ИтогоЕстьВПриходе = Объект.Заказы.НайтиСтроки(Новый Структура("ЕстьВПриходе",Истина)).Количество();
	//Объект.ИтогоЕстьВПриходе = ИтогоЕстьВПриходе;
	//
	//ИтогоЕстьНаСканере = Объект.Заказы.НайтиСтроки(Новый Структура("ЕстьНаСканере",Истина)).Количество();
	//Объект.ИтогоЕстьНаСканере = ИтогоЕстьНаСканере;
	//
	////Объект.КоличествоВСистеме = Объект.Заказы.Итог("КоличествоВСистеме");
	//Объект.КоличествоВПриходе = Объект.Заказы.Итог("КоличествоМестПриход");
	//Объект.КоличествоНаСканере = Объект.Заказы.Итог("КоличествоМестСканировано");
	
КонецПроцедуры // ПересчитатьИтоги()


Функция ПосчитатьЗаказыНаСервере()

	ЗаказыТЗ = Объект.Заказы.Выгрузить();
	ЗаказыТЗ.Свернуть("Заказ");
	
	Возврат ЗаказыТЗ.Количество();

КонецФункции // ()

Процедура ПересчитатьИтогиНаСервере()

	// объявлено заказов
	ЗаказыТЗ = Объект.Заказы.Выгрузить();
	ЗаказыТЗ.Свернуть("Заказ");
	КоличествоОбъявлено = ЗаказыТЗ.Количество();
	
	
	// заказов не поступило  + заказов с расхождениями
	КолНеПоступило = 0;
	КолСРасхождениями = 0;

	
	ЗаказыТЗ = Объект.Заказы.Выгрузить();
	ЗаказыТЗ.Свернуть("Заказ", "КоличествоМестПриход,КоличествоМестСканировано");
	
	ПоступилоЗаказовТЗ = Новый ТаблицаЗначений;
	ПоступилоЗаказовТЗ.Колонки.Добавить("Заказ");
	
	Для каждого Ст Из ЗаказыТЗ Цикл
	
		Если Ст.КоличествоМестСканировано = 0 Тогда	
			КолНеПоступило = КолНеПоступило + 1;			
		КонецЕсли;	
		
		Если Ст.КоличествоМестСканировано <> Ст.КоличествоМестПриход Тогда	
			КолСРасхождениями = КолСРасхождениями + 1;			
		КонецЕсли;
		
		Если Ст.КоличествоМестСканировано = Ст.КоличествоМестПриход Тогда	
			НСтр = ПоступилоЗаказовТЗ.Добавить();
			НСтр.Заказ = Ст.Заказ;		
		КонецЕсли;
	    
	КонецЦикла;

	ПоступилоЗаказовТЗ.Свернуть("Заказ");
	КоличествоЗаказовПоступило = ПоступилоЗаказовТЗ.Количество();
	
	КоличествоНеПоступило = КолНеПоступило;
	КоличествоСРасхождениями = КолСРасхождениями;		
		
	КоличествоМестПоступило = Объект.заказы.Итог("КоличествоМестСканировано");
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Сообщить("Отмена проведенного документа запрещена. Для внесения изменений введите корректировку");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// МАС - 22.09.2017 - № --->> 
	Если НЕ Объект.ПризнакРасхожденийСнятВручную И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда		
		
		Если  НЕ ЕстьРасхождения Тогда	
			Объект.ЕстьРасхождения = Ложь;			
		КонецЕсли;		
		
		Для каждого Стр Из Объект.Заказы Цикл		
			Если Стр.КоличествоМестПриход <> Стр.КоличествоМестСканировано  Тогда	
				Объект.ЕстьРасхождения = Истина;			
			КонецЕсли;		
		КонецЦикла;
		ЕстьРасхождения = Объект.ЕстьРасхождения;	
	Иначе
	КонецЕсли;	
	// <<--- МАС 
	
	
	//Если ПараметрыЗаписи.ЗавершениеРаботы Тогда
	//    ТекстПредупреждения = НСтр("ru = 'Данные не будут сохранены.'");	
	//    Отказ = Истина;
	//    Возврат;
	//КонецЕсли;
	
	ОтразитьКорректировки();
	
	ОбновитьРасхождения();
	
	ПосчитатьИтоги();
	
	//Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение И Объект.ЕстьРасхождения И Модифицированность Тогда		
	//	Режим = РежимДиалогаВопрос.ДаНет;
	//	Ответ = Вопрос(НСтр("ru = 'Провести документ с расхождениями?';"
	//	     + " en = 'Do you want to continue?'"), Режим, 0);
	//		 
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда
	//		Отказ = Истина;
	//	    Возврат;
	//	КонецЕсли;	
	//КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаказыКоличествоМестСканированоПриИзменении(Элемент)
	
	ТекДанные = Элементы.Заказы.ТекущиеДанные;
	Если ТекДанные.КоличествоМестСканировано > 0 Тогда	
		ТекДанные.ЕстьНаСканере = Истина;		
	Иначе
		ТекДанные.ЕстьНаСканере = Ложь;
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура ТолькоСРасхождениями(Команда)
		
	Элементы.ТолькоСРасхождениями.Пометка = НЕ Элементы.ТолькоСРасхождениями.Пометка;
	
	УстановитьОтборСРасхождениями(Элементы.ТолькоСРасхождениями.Пометка);
	
	Если Элементы.ТолькоСРасхождениями.Пометка Тогда	
		Элементы.ТолькоСРасхождениями.ЦветФона = WebЦвета.Томатный;		
	Иначе	
		Элементы.ТолькоСРасхождениями.ЦветФона = WebЦвета.Белый;		
	КонецЕсли;		
	
КонецПроцедуры


Процедура УстановитьОтборСРасхождениями(Установить, ТипОтбора = "Расхождения")
	
	
	Если ТипОтбора = "Расхождения" Тогда
		
		ТекСтр = Неопределено;
		Для каждого Зак Из Объект.Заказы Цикл
			
			Если ТекСтр <> Неопределено Тогда		
				Продолжить;		
			КонецЕсли;
			
			Если Зак.КоличествоМестПриход <> Зак.КоличествоМестСканировано Тогда	
				ТекСтр = Объект.Заказы.Индекс(Зак);		
			КонецЕсли;	
		
		КонецЦикла;
		
		Элементы.Заказы.ТекущаяСтрока = ТекСтр;
			
		Для каждого Стр Из УсловноеОформление.Элементы Цикл				
			Если Стр.Представление = "ТолькоРасхождения" Тогда			
				Стр.Использование = Установить;
			КонецЕсли;		
		КонецЦикла;
			
	ИначеЕсли ТипОтбора = "ПолностьюНеПоступившие" Тогда
		
		Для каждого Стр Из УсловноеОформление.Элементы Цикл				
			Если Стр.Представление = "ПолностьюНеПоступившие" Тогда			
				Стр.Использование = Установить;
			КонецЕсли;		
		КонецЦикла;
				
	ИначеЕсли ТипОтбора = "ЧастичноНеПоступившие" Тогда
		
		Для каждого Стр Из УсловноеОформление.Элементы Цикл				
			Если Стр.Представление = "ЧастичноНеПоступившие" Тогда			
				Стр.Использование = Установить;
			КонецЕсли;		
		КонецЦикла;
	
	КонецЕсли;
	
	

КонецПроцедуры


Процедура ОбновитьРасхождения()
	
	//Объект.ЕстьРасхождения = Ложь;	
	//Для каждого Стр Из Объект.Заказы Цикл		
	//	Если Стр.КоличествоМестПриход <> Стр.КоличествоМестСканировано  Тогда	
	//		Объект.ЕстьРасхождения = Истина;			
	//	КонецЕсли;		
	//КонецЦикла;		
	//
	
	//Если Объект.ЕстьРасхождения И НЕ Объект.ПризнакРасхожденийСнятВручную Тогда	
	//	ЕстьРасхождения = Истина;		
	//Иначе
	//	ЕстьРасхождения = Ложь;
	//КонецЕсли;
	//
	//Если ЕстьРасхождения Тогда	
	//	Элементы.ДекорацияРасхождения.Видимость = Объект.ПризнакРасхожденийСнятВручную;		
	//Иначе
	//    Элементы.ДекорацияРасхождения.Видимость = Ложь;	
	//КонецЕсли;
	
	ЕстьРасхождения = Объект.ЕстьРасхождения;
	Элементы.ДекорацияРасхождения.Видимость = Объект.ПризнакРасхожденийСнятВручную;

КонецПроцедуры

&НаКлиенте
Процедура УбратьПризнакРасхождений(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПослеОтвета", ЭтаФорма, ), "Снять признак расхождений?", РежимДиалогаВопрос.ДаНет);	
		
КонецПроцедуры


&НаКлиенте
Процедура ПослеОтвета(Рез, Пар2) Экспорт	
	
	Если Рез = КодВозвратаДиалога.Да Тогда			
		Объект.ПризнакРасхожденийСнятВручную = Истина;
		ЕстьРасхождения = Ложь;	
		Объект.ЕстьРасхождения = Ложь;
	КонецЕсли;		
	Элементы.ДекорацияРасхождения.Видимость = Объект.ПризнакРасхожденийСнятВручную;
	//Если Объект.ЕстьРасхождения И Объект.ПризнакРасхожденийСнятВручную Тогда	
	//	Элементы.ДекорацияРасхождения.Видимость = Истина;	
	//Иначе
	//	Элементы.ДекорацияРасхождения.Видимость = Ложь;
	//КонецЕсли;	
	//Элементы.ДекорацияРасхождения.Видимость = Объект.ПризнакРасхожденийСнятВручную;
	
КонецПроцедуры


&НаКлиенте
Процедура ЕстьРасхожденияПриИзменении(Элемент)
		                                      
	Если НЕ ЕстьРасхождения Тогда		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПослеОтвета", ЭтаФорма, ), "Снять признак расхождений?", РежимДиалогаВопрос.ДаНет);	
		Объект.ЕстьРасхождения = НЕ ЕстьРасхождения;
		ЕстьРасхождения = НЕ ЕстьРасхождения;
	Иначе
		Объект.ЕстьРасхождения = ЕстьРасхождения;
		Объект.ПризнакРасхожденийСнятВручную = Ложь;
	КонецЕсли;
	Элементы.ДекорацияРасхождения.Видимость = Объект.ПризнакРасхожденийСнятВручную;
		
КонецПроцедуры


&НаКлиенте
Процедура ШКАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
		
	Если Найти(текст,Символы.ПС)>0 И СокрЛП(Текст) <> "" Тогда
		
		СчитатьШтрихкод(СтрЗаменить(Текст, Символы.ПС, ""));	
		
		ОбновитьЗаголовокНеопознанныеШК();
	
		ПересчитатьИтоги();	
		ОбновитьРасхождения();

		ТекущийЭлемент = Элементы.ШК;
		ШК = "";
	КонецЕсли;
	
		
КонецПроцедуры


Процедура СчитатьШтрихкод(Штрихкод)
	
	
	//Сообщить("" + Штрихкод);	
	
    Если Объект.Проведен Тогда		
    	Сообщить("Документ проведен");
    	Возврат;		
    КонецЕсли;
  
    Если НЕ ЗначениеЗаполнено(Штрихкод) Тогда
    	Возврат;
    КонецЕсли;	
    
    Данные = СокрЛП(Штрихкод);
    
    Если Лев(Данные, 2) = "37" И СтрДлина(Данные) = 13 Тогда
    	НомерР = Лев(Данные, СтрДлина(Данные) - 1);	
    Иначе
    	НомерР = Данные;
    КонецЕсли;	                                 
    
    ПолучитьЗаказыНаСервере(НомерР);
	
	
	
	ШК = " ";
	ТекущийЭлемент = Элементы.ШК;
	
	
КонецПроцедуры


&НаСервере
Функция ВвестиКорректировкуНаСервере()
	
		
	// проверки возможности ввода корректировки	
	Если ЕстьКорректировкаПоДокументу() Тогда	
		возврат Неопределено;		
	КонецЕсли; 
	
	// создаем корректировку копированием
	ДокКорректировка = Объект.Ссылка.Скопировать();	
	ДокКорректировка.Дата = ТекущаяДата();
	ДокКорректировка.Записать(РежимЗаписиДокумента.Запись);
	ДокКорректировка.Основание = ?(ЗначениеЗаполнено(Объект.Основание), Объект.Основание, Объект.Ссылка);	
	ДокКорректировка.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	МАКСИМУМ(ФактическийПриходЗаказовНаСклад.НомерКорректировки) КАК НомерКорректировки
	                      |ИЗ
	                      |	Документ.ФактическийПриходЗаказовНаСклад КАК ФактическийПриходЗаказовНаСклад
	                      |ГДЕ
	                      |	ФактическийПриходЗаказовНаСклад.Основание = &Основание
	                      |	И ФактическийПриходЗаказовНаСклад.ПометкаУдаления = ЛОЖЬ");
	Запрос.УстановитьПараметр("Основание", ?(ЗначениеЗаполнено(Объект.Основание), Объект.Основание, Объект.Ссылка));
	Рез = Запрос.Выполнить().Выбрать();	
	
	Если Рез.Следующий() Тогда
		ДокКорректировка.НомерКорректировки = ?(ЗначениеЗаполнено(Рез.НомерКорректировки), Рез.НомерКорректировки, 0) + 1;
	Иначе
		ДокКорректировка.НомерКорректировки = 1;
	КонецЕсли;
	
	ДокКорректировка.Записать(РежимЗаписиДокумента.Запись);
	
	
	Возврат ДокКорректировка.Ссылка;	
	
	
КонецФункции


&НаКлиенте
Процедура ВвестиКорректировку(Команда)
	
	
	Если Объект.Проведен Тогда		
		ДокКорректировка = ВвестиКорректировкуНаСервере();
		Если ДокКорректировка <> Неопределено Тогда			
			ОткрытьФорму("Документ.ФактическийПриходЗаказовНаСклад.Форма.ФормаДокументаОперативнаяПриемка", Новый Структура("Ключ", ДокКорректировка));
			ЭтаФорма.Закрыть();	
		КонецЕсли;		
	Иначе
		Сообщить("Корректировку можно ввести только для проведенного документа");		
	КонецЕсли;	
	
	
КонецПроцедуры


&НаКлиенте
Процедура Команда1(Команда)
	
	//ТекДанные = Элементы.Заказы.ТекущиеДанные;
	//ИндексТекСтрока = Элементы.Заказы.ТекущаяСтрока - 1;
	//
	//ТекстИнфы = ПолучитьИнфуПоСтрокеНаСервере(ТекДанные.Заказ);
	//
	//Сообщение = Новый СообщениеПользователю;
	//Сообщение.Поле  = "Объект.Заказы[" + ИндексТекСтрока + "].Заказ";
	//Сообщение.Текст = "Ебанись!!!";
	//Сообщение.УстановитьДанные(Объект.Заказы);
	//Сообщение.Сообщить();

	
КонецПроцедуры


Функция ПолучитьИнфуПоСтрокеНаСервере(ЗаказСсылка)

	

КонецФункции // ()


Процедура ЗаполнитьТЗКорректировки(ДокОснование)
	
	
	//Если ЭтоАктуальныйДокумент(Объект.) Тогда
	//
	//	
	//
	//КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ФактическийПриходЗаказовНаСклад.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.ФактическийПриходЗаказовНаСклад КАК ФактическийПриходЗаказовНаСклад
	                      |ГДЕ
	                      |	ФактическийПриходЗаказовНаСклад.Основание = &Ссылка
	                      |	И ФактическийПриходЗаказовНаСклад.ПометкаУдаления = ЛОЖЬ
	                      |	И ФактическийПриходЗаказовНаСклад.Дата < &Дата
	                      |	И ФактическийПриходЗаказовНаСклад.Ссылка <> &ЭтотДок
	                      |	И ФактическийПриходЗаказовНаСклад.Ссылка <> &Ссылка
	                      |	И ФактическийПриходЗаказовНаСклад.Проведен = ИСТИНА
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ссылка УБЫВ");
	Запрос.УстановитьПараметр("Ссылка", ДокОснование);
	Запрос.УстановитьПараметр("ЭтотДок", Объект.Ссылка);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Рез = Запрос.Выполнить().Выгрузить();
	
	
	СписокДокументов = Новый СписокЗначений;
	
	
	
	Нкор = 1;
	
	Для каждого Стр Из Рез Цикл
		
		ТекДок = Стр.Ссылка;
		
		Если Нкор = 1 Тогда
		
			Корректировка1.Загрузить(ТекДок.Заказы.Выгрузить());	
			Элементы.ГруппаКорректировка1.Видимость = Истина;	
		
		//ИначеЕсли Нкор = 2 Тогда
		//	
		//	Корректировка2.Загрузить(ТекДок.Заказы.Выгрузить());	
		//	Элементы.ГруппаКорректировка2.Видимость = Истина;
				
		КонецЕсли;
		
		
		Нкор = Нкор + 1;
		
	
	КонецЦикла;
	
	
	
	
	
	Корректировка1.Загрузить(Объект.Заказы.Выгрузить());	
	Элементы.ГруппаКорректировка1.Видимость = Истина;
	
	
	//Элементы.ГруппаКорректировка1.Видимость = Ложь;	
	//Элементы.ГруппаКорректировка2.Видимость = Ложь;
	//Элементы.ГруппаКорректировка3.Видимость = Ложь;
	//Элементы.ГруппаКорректировка4.Видимость = Ложь;
	//Элементы.ГруппаКорректировка5.Видимость = Ложь;
	

КонецПроцедуры


Функция ЭтоАктуальныйДокумент(ДокСсылка) Экспорт

	
	//Запрос = новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	//                      |	ФактическийПриходЗаказовНаСклад.Ссылка КАК Ссылка
	//                      |ИЗ
	//                      |	Документ.ФактическийПриходЗаказовНаСклад КАК ФактическийПриходЗаказовНаСклад
	//                      |ГДЕ
	//                      |	ФактическийПриходЗаказовНаСклад.Основание = &Основание
	//                      |	И ФактическийПриходЗаказовНаСклад.ПометкаУдаления = ЛОЖЬ
	//                      |
	//                      |УПОРЯДОЧИТЬ ПО
	//                      |	Ссылка УБЫВ");
	//Запрос.УстановитьПараметр("Основание", ДокСсылка.Основание);
	//Рез = Запрос.Выполнить().Выбрать();
	//
	//Если Рез.Следующий() Тогда				
	//	Возврат Рез.Ссылка = ДокСсылка;					
	//КонецЕсли;
	

КонецФункции // ()


Функция ЕстьКорректировкаПоДокументу()

	
	НКор = ?(ЗначениеЗаполнено(Объект.НомерКорректировки), Объект.НомерКорректировки + 1, 1);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ФактическийПриходЗаказовНаСклад.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.ФактическийПриходЗаказовНаСклад КАК ФактическийПриходЗаказовНаСклад
	                      |ГДЕ
	                      |	ФактическийПриходЗаказовНаСклад.НомерКорректировки = &НомерКорректировки
	                      |	И ФактическийПриходЗаказовНаСклад.Основание = &Основание
	                      |	И ФактическийПриходЗаказовНаСклад.ПометкаУдаления = ЛОЖЬ");
	Запрос.УстановитьПараметр("Основание", ?(ЗначениеЗаполнено(Объект.Основание), Объект.Основание, Объект.Ссылка));
	Запрос.УстановитьПараметр("НомерКорректировки", НКор);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
		Сообщить("По документу уже введен корректирующий документ: " + Рез.Ссылка);	
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
			

КонецФункции // ()


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЭтаФорма.ТолькоПросмотр = Объект.Проведен;
	Элементы.СписокДокументов.ТолькоПросмотр = Ложь;
	Элементы.СписокДокументов1.ТолькоПросмотр = Ложь;
	ЭтаФорма.ОбновитьОтображениеДанных();	
	Элементы.ЕстьРасхождения.ТолькоПросмотр = Объект.Проведен;
	Оповестить("ОбновлениеДанных");
	
КонецПроцедуры


Функция ПолучитьАктуальнуюКорректировку(ДокСсылка)

	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ФактическийПриходЗаказовНаСклад.Ссылка КАК Ссылка,
	                      |	ФактическийПриходЗаказовНаСклад.НомерКорректировки КАК НомерКорректировки
	                      |ИЗ
	                      |	Документ.ФактическийПриходЗаказовНаСклад КАК ФактическийПриходЗаказовНаСклад
	                      |ГДЕ
	                      |	ФактическийПриходЗаказовНаСклад.ПометкаУдаления = ЛОЖЬ
	                      |	И ФактическийПриходЗаказовНаСклад.Основание = &Основание
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	НомерКорректировки УБЫВ");
	Запрос.УстановитьПараметр("Основание", ДокСсылка);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда	
		Возврат Рез.Ссылка;	
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	

КонецФункции // ()


&НаКлиенте
Процедура ЗаказыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеОтметки(Команда)
	
	//Если не ЗначениеЗаполнено(Объект.Основание) Тогда		
		Для каждого Стр Из Объект.Заказы Цикл			
			Стр.КоличествоМестСканировано = 0;
			Стр.СуммаНаСканере = 0;
			Стр.ЕстьНаСканере = 0;	
		КонецЦикла;
	//КонецЕсли;		
	
КонецПроцедуры


&НаКлиенте
Процедура НайтиСтрокуЗаказа(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьПоДаннымТСДНаСервере()

	Если Объект.ШКПоМестам Тогда
				
		МассивЗаказов = Объект.Заказы.Выгрузить(, "Заказ");
	
		Спис = новый СписокЗначений;
		Для каждого Ст Из МассивЗаказов Цикл	
			Спис.Добавить(Ст.Заказ);		
		КонецЦикла;
		
		Запрос = новый Запрос("ВЫБРАТЬ
		                      |	МестаПоЗаказам.Ссылка КАК Ссылка,
		                      |	МестаПоЗаказам.Штрихкод КАК Штрихкод,
		                      |	МестаПоЗаказам.Заказ КАК Заказ
		                      |ПОМЕСТИТЬ ВТ
		                      |ИЗ
		                      |	Справочник.МестаПоЗаказам КАК МестаПоЗаказам
		                      |ГДЕ
		                      |	МестаПоЗаказам.Заказ В(&Заказы)
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВТ.Ссылка КАК Место,
		                      |	ВТ.Заказ КАК Заказ
		                      |ИЗ
		                      |	ВТ КАК ВТ
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		                      |		ПО ВТ.Штрихкод = ЗагрузкаСТСДШтрихкоды.Штрихкод
		                      |ГДЕ
		                      |	НЕ ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
		                      |	И ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &Дата");
		Запрос.УстановитьПараметр("Заказы", Спис);		
		Запрос.УстановитьПараметр("Дата", Объект.Дата - 30 * 86400);
		РезТЗ = Запрос.Выполнить().Выгрузить();
		РезТЗ.Свернуть("Место");
		
		Для каждого Ст Из РезТЗ Цикл		
			Най = Объект.Заказы.НайтиСтроки(Новый Структура("Место", Ст.Место));	
			Для каждого Стр Из Най Цикл
				Если НЕ Стр.ЕстьНаСканере Тогда
					Стр.КоличествоМестСканировано = Число(Стр.КоличествоМестСканировано) + 1;
					Стр.ЕстьНаСканере = Истина;
					Стр.ЕстьНаСканереЗаполнено = Истина;					
				КонецЕсли;	
			КонецЦикла;				
		КонецЦикла;
		
	Иначе
				
		ТЗЗаказы = Объект.Заказы.Выгрузить();
		ТЗЗаказы.Свернуть("Заказ");
		
		Спис = новый СписокЗначений;
		Для каждого Ст Из ТЗЗаказы Цикл	
			Спис.Добавить(Ст.Заказ);		
		КонецЦикла;
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ЗагрузкаСТСДШтрихкоды.Заказ КАК Заказ
		                      |ИЗ
		                      |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		                      |ГДЕ
		                      |	ЗагрузкаСТСДШтрихкоды.Заказ В(&СписокЗаказов)
		                      |	И ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &Дата");
		Запрос.УстановитьПараметр("СписокЗаказов", Спис);
		Запрос.УстановитьПараметр("Дата", Объект.Дата - 30 * 86400);
		РезТЗ = Запрос.Выполнить().Выгрузить();
		РезТЗ.Свернуть("Заказ");
		
		Для каждого Ст Из РезТЗ Цикл		
			Най = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", Ст.Заказ));	
			Для каждого Стр Из Най Цикл
				Если НЕ Стр.ЕстьНаСканере Тогда
					Стр.КоличествоМестСканировано = Число(Стр.КоличествоМестСканировано) + 1;
					Стр.ЕстьНаСканере = Истина;
					Стр.ЕстьНаСканереЗаполнено = Истина;					
				КонецЕсли;	
			КонецЦикла;				
		КонецЦикла;	
	
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПоДаннымТСД(Команда)
	
	ЗаполнитьПоДаннымТСДНаСервере();
	
	ОбновитьРасхожденияПозаказно();
	
	ПересчитатьИтоги();
		
	ОбновитьРасхождения();
	
КонецПроцедуры


Процедура ПосчитатьИтоги()
	
	Объект.СуммаНаСканере = Объект.Заказы.Итог("СуммаНаСканере");
	Объект.КоличествоВПриходе = Объект.Заказы.Итог("КоличествоМестПриход");
	Объект.КоличествоНаСканере = Объект.Заказы.Итог("КоличествоМестСканировано");
	Объект.КоличествоЗаказов = Объект.заказы.Количество();

КонецПроцедуры



&НаКлиенте
Процедура НайтиЗаказ(Команда)
		
	Подсказка = "Введите номер заказа";
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки", ЭтотОбъект);
	ПоказатьВводСтроки(Оповещение, "", Подсказка, 0, Ложь);
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВводаСтроки(Строка, Параметры) Экспорт
	
    Если НЕ Строка = Неопределено Тогда			
		ОтборНаСервере(Строка);				
	КонецЕсли;
	
КонецПроцедуры


Процедура ОтборНаСервере(Строка)

	СписокЗаказов = НайтиЗаказНаСервере(СокрЛП(Строка));	
		
	Для каждого Эл Из УсловноеОформление.Элементы Цикл
		
		Если Эл.Представление = "ПоискЗаказа" Тогда	
			Эл.Отбор.Элементы[0].ПравоеЗначение = СписокЗаказов;
			Эл.Использование = Истина;		
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры


Функция НайтиЗаказНаСервере(НомерЗаказа)
	
	ТЗЗаказы = Объект.Заказы.Выгрузить();
	МасОтбор = Новый СписокЗначений;	
	
	Най = ТЗЗаказы.НайтиСтроки(Новый Структура("НомерЗаказа", НомерЗаказа));	
	
	Для каждого Ст Из Най Цикл	
		МасОтбор.Добавить(Ст.Заказ);		
	КонецЦикла;			
	
	
	Зак = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(НомерЗаказа);
	НайЗ = ТЗЗаказы.НайтиСтроки(Новый Структура("Заказ", Зак));		
	
	Для каждого Ст Из НайЗ Цикл	
		Если ЗначениеЗаполнено(Ст.Заказ) Тогда	
			МасОтбор.Добавить(Ст.Заказ);		
		КонецЕсли;			
	КонецЦикла;	

	Возврат МасОтбор;
		

КонецФункции // ()


&НаКлиенте
Процедура ОтменитьПоиск(Команда)
	
	ОтменитьПоискНаСервере();		
	
КонецПроцедуры


Процедура ОтменитьПоискНаСервере()

	Для каждого Эл Из УсловноеОформление.Элементы Цикл
		
		Если Эл.Представление = "ПоискЗаказа" Тогда	
			Эл.Использование = Ложь;		
		КонецЕсли;	
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
        ТекстПредупреждения = НСтр("ru = 'Если завершить работу сейчас, данные не будут сохранены!" + Символы.ПС + "Одумайся!'");	
        Отказ = Истина;
        Возврат;
    КонецЕсли;
	
	ОтменитьПоискНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПриАктивизацииЯчейки(Элемент)
	
		
	Если Объект.Заказы.Количество() Тогда
		
		Для каждого Ст Из Объект.Заказы Цикл	
			Ст.ТекущаяСтрока = Ложь;		
		КонецЦикла;	
		ТекСтрока = Элементы.Заказы.ТекущаяСтрока;
		Если ТекСтрока <> Неопределено Тогда		
			Объект.Заказы[ТекСтрока].ТекущаяСтрока = Истина;			
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.Заказы.ВыделенныеСтроки.Очистить();

		
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоПолностьюНеПоступившие(Команда)
	
	Элементы.ТолькоПолностьюНеПоступившие.Пометка = НЕ Элементы.ТолькоПолностьюНеПоступившие.Пометка;
	
	УстановитьОтборСРасхождениями(Элементы.ТолькоПолностьюНеПоступившие.Пометка, "ПолностьюНеПоступившие");
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоЧастичноНеПоступившие(Команда)
	
	Элементы.ТолькоЧастичноНеПоступившие.Пометка = НЕ Элементы.ТолькоЧастичноНеПоступившие.Пометка;
	
	УстановитьОтборСРасхождениями(Элементы.ТолькоЧастичноНеПоступившие.Пометка, "ЧастичноНеПоступившие");
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиСписокЗаказов(Команда)
	
		
	ТабДок = Новый ТабличныйДокумент;	
	
	ВывестиСписокЗаказовНаСервере(ТабДок);
	
	ТабДок.Показать();
	
	
КонецПроцедуры


Процедура ВывестиСписокЗаказовНаСервере(ТабДок)

	
	ТабДок = Новый ТабличныйДокумент;
	Об = РеквизитФормыВЗначение("Объект");	
	Макет = Об.ПолучитьМакет("ВыводСтрок");
	СРасхожд = Элементы.ТолькоСРасхождениями.Пометка;	
		
	ЗакТЗ = Объект.Заказы.Выгрузить();	
	НайТЗ = ЗакТЗ.НайтиСтроки(Новый Структура("ЗаказНеПоступилПолностью", СРасхожд));	
		
	
	

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник) // В рамках 3083, проверка записи в ИсторияСканирования.
	
	Если Источник = "ТестированиеПодключаемогоОборудования" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanDataTest" тогда
			ВнешнееСобытие(Источник, ИмяСобытия, Параметр[0]);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры





