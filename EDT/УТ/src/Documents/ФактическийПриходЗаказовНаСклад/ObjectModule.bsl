//&НаСервере
Процедура ЗаполнитьНаСервере() Экспорт
	// Вставить содержимое обработчика.
	
	Заказы.Очистить();
	ПриходныеДокументы.Очистить();
	ДокументыТСД.Очистить();
	
	Зап = Новый Запрос;
    
    //Серегин М.В. 15.06.2015 12:25:25 старый запрос
    //Зап.Текст = "ВЫБРАТЬ
    //            |   ПриходЗаказовНаСкладЗаказы.ВнешнийНомерЗаказа,
    //            |   ПриходЗаказовНаСкладЗаказы.Заказ,
    //            |   ПриходЗаказовНаСкладЗаказы.КоличествоМест
    //            |ПОМЕСТИТЬ ВТПриходПоЭДО
    //            |ИЗ
    //            |   Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
    //            |ГДЕ
    //            |   ПриходЗаказовНаСкладЗаказы.Ссылка.ПометкаУдаления = ЛОЖЬ
    //            |   И ПриходЗаказовНаСкладЗаказы.Ссылка.Дата МЕЖДУ &ДатаНач1 И &ДатаКон1
    //            |   И ПриходЗаказовНаСкладЗаказы.Ссылка.Контрагент = &Контрагент
    //            |;
    //            |
    //            |////////////////////////////////////////////////////////////////////////////////
    //            |ВЫБРАТЬ
    //            |   ЗагрузкаСТСДШтрихкоды.Штрихкод,
    //            |   ЗагрузкаСТСДШтрихкоды.Заказ,
    //            |   ЗагрузкаСТСДШтрихкоды.КоличествоМест
    //            |ПОМЕСТИТЬ ВТЗагрузкаСТСД
    //            |ИЗ
    //            |   Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
    //            |ГДЕ
    //            |   ЗагрузкаСТСДШтрихкоды.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
    //            |   И ЗагрузкаСТСДШтрихкоды.Ссылка.ПометкаУдаления = ЛОЖЬ
    //            |   И ЗагрузкаСТСДШтрихкоды.Контрагент.Ссылка = &Контрагент
    //            |;
    //            |
    //            |////////////////////////////////////////////////////////////////////////////////
    //            |ВЫБРАТЬ
    //            |   ВложенныйЗапрос.Номер,
    //            |   СУММА(ВложенныйЗапрос.Сумма) КАК Сумма
    //            |ПОМЕСТИТЬ ВТ_Суммы
    //            |ИЗ
    //            |   (ВЫБРАТЬ
    //            |       РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
    //            |       РеализацияТоваровУслугТовары.Сумма КАК Сумма
    //            |   ИЗ
    //            |       Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
    //            |   
    //            |   ОБЪЕДИНИТЬ ВСЕ
    //            |   
    //            |   ВЫБРАТЬ
    //            |       РеализацияТоваровУслугУслуги.Ссылка.Номер,
    //            |       РеализацияТоваровУслугУслуги.Сумма
    //            |   ИЗ
    //            |       Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
    //            |   
    //            |   ОБЪЕДИНИТЬ ВСЕ
    //            |   
    //            |   ВЫБРАТЬ
    //            |       ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
    //            |       ВозвратТоваровОтПокупателяТовары.Сумма
    //            |   ИЗ
    //            |       Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары) КАК ВложенныйЗапрос
    //            |
    //            |СГРУППИРОВАТЬ ПО
    //            |   ВложенныйЗапрос.Номер
    //            |ИНДЕКСИРОВАТЬ ПО
    //            |   ВложенныйЗапрос.Номер
    //            |;
    //            |
    //            |////////////////////////////////////////////////////////////////////////////////
    //            |ВЫБРАТЬ
    //            |   ВЫБОР
    //            |       КОГДА НЕ ВТЗагрузкаСТСД.Заказ ЕСТЬ NULL 
    //            |           ТОГДА ВТЗагрузкаСТСД.Заказ
    //            |       КОГДА НЕ ВТПриходПоЭДО.Заказ ЕСТЬ NULL 
    //            |           ТОГДА ВТПриходПоЭДО.Заказ
    //            |       ИНАЧЕ """"
    //            |   КОНЕЦ КАК Заказ,
    //            |   ВЫБОР
    //            |       КОГДА НЕ ВТПриходПоЭДО.ВнешнийНомерЗаказа ЕСТЬ NULL 
    //            |           ТОГДА ВТПриходПоЭДО.ВнешнийНомерЗаказа
    //            |       КОГДА НЕ ВТЗагрузкаСТСД.Штрихкод ЕСТЬ NULL 
    //            |           ТОГДА ВТЗагрузкаСТСД.Штрихкод
    //            |       ИНАЧЕ """"
    //            |   КОНЕЦ КАК НомерЗаказа,
    //            |   ВЫБОР
    //            |       КОГДА ЕСТЬNULL(ВТЗагрузкаСТСД.Заказ, ИСТИНА) = ИСТИНА
    //            |           ТОГДА ЛОЖЬ
    //            |       ИНАЧЕ ИСТИНА
    //            |   КОНЕЦ КАК ЕстьНаСканере,
    //            |   ВЫБОР
    //            |       КОГДА ЕСТЬNULL(ВТПриходПоЭДО.Заказ, ИСТИНА) = ИСТИНА
    //            |           ТОГДА ЛОЖЬ
    //            |       ИНАЧЕ ИСТИНА
    //            |   КОНЕЦ КАК ЕстьВПриходе,
    //            |   ВЫБОР
    //            |       КОГДА ЕСТЬNULL(ВТЗагрузкаСТСД.Заказ, ИСТИНА) = ИСТИНА
    //            |               И ЕСТЬNULL(ВТПриходПоЭДО.Заказ, ИСТИНА) = ИСТИНА
    //            |           ТОГДА ЛОЖЬ
    //            |       ИНАЧЕ ИСТИНА
    //            |   КОНЕЦ КАК ЕстьВСистеме,
    //            |   СУММА(ВТЗагрузкаСТСД.КоличествоМест) КАК КоличествоМестСканировано,
    //            |   СУММА(ВТПриходПоЭДО.КоличествоМест) КАК КоличествоМестПриход
    //            |ПОМЕСТИТЬ ВТ_Итог
    //            |ИЗ
    //            |   ВТПриходПоЭДО КАК ВТПриходПоЭДО
    //            |       ПОЛНОЕ СОЕДИНЕНИЕ ВТЗагрузкаСТСД КАК ВТЗагрузкаСТСД
    //            |       ПО (ВТПриходПоЭДО.Заказ.Ссылка = ВЫРАЗИТЬ(ВТЗагрузкаСТСД.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
    //            |
    //            |СГРУППИРОВАТЬ ПО
    //            |   ВЫБОР
    //            |       КОГДА НЕ ВТЗагрузкаСТСД.Заказ ЕСТЬ NULL 
    //            |           ТОГДА ВТЗагрузкаСТСД.Заказ
    //            |       КОГДА НЕ ВТПриходПоЭДО.Заказ ЕСТЬ NULL 
    //            |           ТОГДА ВТПриходПоЭДО.Заказ
    //            |       ИНАЧЕ """"
    //            |   КОНЕЦ,
    //            |   ВЫБОР
    //            |       КОГДА НЕ ВТПриходПоЭДО.ВнешнийНомерЗаказа ЕСТЬ NULL 
    //            |           ТОГДА ВТПриходПоЭДО.ВнешнийНомерЗаказа
    //            |       КОГДА НЕ ВТЗагрузкаСТСД.Штрихкод ЕСТЬ NULL 
    //            |           ТОГДА ВТЗагрузкаСТСД.Штрихкод
    //            |       ИНАЧЕ """"
    //            |   КОНЕЦ,
    //            |   ВЫБОР
    //            |       КОГДА ЕСТЬNULL(ВТЗагрузкаСТСД.Заказ, ИСТИНА) = ИСТИНА
    //            |           ТОГДА ЛОЖЬ
    //            |       ИНАЧЕ ИСТИНА
    //            |   КОНЕЦ,
    //            |   ВЫБОР
    //            |       КОГДА ЕСТЬNULL(ВТПриходПоЭДО.Заказ, ИСТИНА) = ИСТИНА
    //            |           ТОГДА ЛОЖЬ
    //            |       ИНАЧЕ ИСТИНА
    //            |   КОНЕЦ,
    //            |   ВЫБОР
    //            |       КОГДА ЕСТЬNULL(ВТЗагрузкаСТСД.Заказ, ИСТИНА) = ИСТИНА
    //            |               И ЕСТЬNULL(ВТПриходПоЭДО.Заказ, ИСТИНА) = ИСТИНА
    //            |           ТОГДА ЛОЖЬ
    //            |       ИНАЧЕ ИСТИНА
    //            |   КОНЕЦ
    //            |;
    //            |
    //            |////////////////////////////////////////////////////////////////////////////////
    //            |ВЫБРАТЬ
    //            |   ВТ_Итог.Заказ,
    //            |   ВТ_Итог.НомерЗаказа КАК НомерЗаказа,
    //            |   ВТ_Итог.ЕстьНаСканере,
    //            |   ВТ_Итог.ЕстьВПриходе,
    //            |   ВТ_Итог.ЕстьВСистеме,
    //            |   ВТ_Итог.КоличествоМестСканировано,
    //            |   ВТ_Итог.КоличествоМестПриход,
    //            |   ВТ_Суммы.Сумма
    //            |ИЗ
    //            |   ВТ_Итог КАК ВТ_Итог
    //            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
    //            |       ПО (ВЫРАЗИТЬ(ВТ_Итог.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка.Номер = ВТ_Суммы.Номер)
    //            |
    //            |УПОРЯДОЧИТЬ ПО
    //            |   НомерЗаказа";
    //Серегин М.В. 15.06.2015 12:25:34 Новый
    
        ////Серегин М.В. 12.08.2015 14:55:56 старый запрос
        //СменаПоДефолту = Справочники.Смены.Смена1;
        //Зап.Текст = "ВЫБРАТЬ
        //            |   ВложенныйЗапрос.ВнешнийНомерЗаказа,
        //            |   ВложенныйЗапрос.Заказ,
        //            |   СУММА(ВложенныйЗапрос.КоличествоМест) КАК КоличествоМест
        //            |ПОМЕСТИТЬ ВТ_ВСистеме
        //            |ИЗ
        //            |   (ВЫБРАТЬ
        //            |       РеализацияТоваровУслугТовары.Ссылка КАК Заказ,
        //            |       РеализацияТоваровУслугТовары.Ссылка.НомерВнешнегоЗаказа КАК ВнешнийНомерЗаказа,
        //            |       РеализацияТоваровУслугТовары.КоличествоМест КАК КоличествоМест
        //            |   ИЗ
        //            |       Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
        //            |   ГДЕ
        //            |       НЕ РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления
        //            |       И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
        //            |       И РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара = &Контрагент
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       РеализацияТоваровУслугУслуги.Ссылка,
        //            |       РеализацияТоваровУслугУслуги.Ссылка.НомерВнешнегоЗаказа,
        //            |       0
        //            |   ИЗ
        //            |       Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
        //            |   ГДЕ
        //            |       НЕ РеализацияТоваровУслугУслуги.Ссылка.ПометкаУдаления
        //            |       И РеализацияТоваровУслугУслуги.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
        //            |       И РеализацияТоваровУслугУслуги.Ссылка.ВладелецТовара = &Контрагент
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка,
        //            |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка.НомерВнешнегоЗаказа,
        //            |       РеализацияТоваровУслугПодарочныеПозиции.КоличествоМест
        //            |   ИЗ
        //            |       Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
        //            |   ГДЕ
        //            |       НЕ РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ПометкаУдаления
        //            |       И РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
        //            |       И РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ВладелецТовара = &Контрагент) КАК ВложенныйЗапрос
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   ВложенныйЗапрос.ВнешнийНомерЗаказа,
        //            |   ВложенныйЗапрос.Заказ
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ПриходЗаказовНаСкладЗаказы.ВнешнийНомерЗаказа,
        //            |   ПриходЗаказовНаСкладЗаказы.Заказ,
        //            |   ПриходЗаказовНаСкладЗаказы.КоличествоМест,
        //            |   ПриходЗаказовНаСкладЗаказы.Ссылка КАК ДокументПрихода
        //            |ПОМЕСТИТЬ ВТПриходПоЭДО
        //            |ИЗ
        //            |   Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
        //            |ГДЕ
        //            |   ПриходЗаказовНаСкладЗаказы.Ссылка.ПометкаУдаления = ЛОЖЬ
        //            |   И ПриходЗаказовНаСкладЗаказы.Ссылка.Дата МЕЖДУ &ДатаНач1 И &ДатаКон1
        //            |   И ПриходЗаказовНаСкладЗаказы.Ссылка.Контрагент = &Контрагент
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ЗагрузкаСТСДШтрихкоды.ВнешнийНомерЗаказа,
        //            |   ЗагрузкаСТСДШтрихкоды.Заказ,
        //            |   ЗагрузкаСТСДШтрихкоды.КоличествоМест
        //            |ПОМЕСТИТЬ ВТЗагрузкаСТСД
        //            |ИЗ
        //            |   Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
        //            |ГДЕ
        //            |   ЗагрузкаСТСДШтрихкоды.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
        //            |   И ЗагрузкаСТСДШтрихкоды.Ссылка.ПометкаУдаления = ЛОЖЬ
        //            |   И ЗагрузкаСТСДШтрихкоды.Контрагент.Ссылка = &Контрагент
        //            |   И ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFi)
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ВложенныйЗапрос.Номер,
        //            |   СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
        //            |   СУММА(ВложенныйЗапрос.Количество) КАК Количество
        //            |ПОМЕСТИТЬ ВТ_Суммы
        //            |ИЗ
        //            |   (ВЫБРАТЬ
        //            |       ПоступлениеТоваровУслугТовары.Ссылка.Номер КАК Номер,
        //            |       ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
        //            |       ПоступлениеТоваровУслугТовары.Количество КАК Количество
        //            |   ИЗ
        //            |       Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       ПоступлениеТоваровУслугУслуги.Ссылка.Номер,
        //            |       ПоступлениеТоваровУслугУслуги.Сумма,
        //            |       ПоступлениеТоваровУслугУслуги.Количество
        //            |   ИЗ
        //            |       Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер,
        //            |       ПоступлениеТоваровУслугПодарочныеПозиции.Сумма,
        //            |       ПоступлениеТоваровУслугПодарочныеПозиции.Количество
        //            |   ИЗ
        //            |       Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции) КАК ВложенныйЗапрос
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   ВложенныйЗапрос.Номер
        //            |
        //            |ИНДЕКСИРОВАТЬ ПО
        //            |   ВложенныйЗапрос.Номер
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ВложенныйЗапрос.Заказ,
        //            |   МАКСИМУМ(ВложенныйЗапрос.ЕстьВСистеме) КАК ЕстьВСистеме,
        //            |   МАКСИМУМ(ВложенныйЗапрос.ЕстьВПриходе) КАК ЕстьВПриходе,
        //            |   МАКСИМУМ(ВложенныйЗапрос.ЕстьНаСканере) КАК ЕстьНаСканере,
        //            |   СУММА(ВложенныйЗапрос.КоличествоМестСистема) КАК КоличествоМестСистема,
        //            |   СУММА(ВложенныйЗапрос.КоличествоМестПриход) КАК КоличествоМестПриход,
        //            |   СУММА(ВложенныйЗапрос.КоличествоМестСканировано) КАК КоличествоМестСканировано,
        //            |   ВложенныйЗапрос.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
        //            |   МАКСИМУМ(ВложенныйЗапрос.ДокументПрихода) КАК ДокументПрихода
        //            |ПОМЕСТИТЬ ВТ_Итог
        //            |ИЗ
        //            |   (ВЫБРАТЬ
        //            |       ИСТИНА КАК ЕстьВСистеме,
        //            |       ЛОЖЬ КАК ЕстьВПриходе,
        //            |       ЛОЖЬ КАК ЕстьНаСканере,
        //            |       ВТ_ВСистеме.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
        //            |       ВТ_ВСистеме.КоличествоМест КАК КоличествоМестСистема,
        //            |       0 КАК КоличествоМестПриход,
        //            |       0 КАК КоличествоМестСканировано,
        //            |       ВТ_ВСистеме.Заказ КАК Заказ,
        //            |       NULL КАК ДокументПрихода
        //            |   ИЗ
        //            |       ВТ_ВСистеме КАК ВТ_ВСистеме
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       ЛОЖЬ,
        //            |       ИСТИНА,
        //            |       ЛОЖЬ,
        //            |       ВТПриходПоЭДО.ВнешнийНомерЗаказа,
        //            |       0,
        //            |       ВТПриходПоЭДО.КоличествоМест,
        //            |       0,
        //            |       ВТПриходПоЭДО.Заказ,
        //            |       ВТПриходПоЭДО.ДокументПрихода
        //            |   ИЗ
        //            |       ВТПриходПоЭДО КАК ВТПриходПоЭДО
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       ЛОЖЬ,
        //            |       ЛОЖЬ,
        //            |       ИСТИНА,
        //            |       ВТЗагрузкаСТСД.ВнешнийНомерЗаказа,
        //            |       0,
        //            |       0,
        //            |       ВТЗагрузкаСТСД.КоличествоМест,
        //            |       ВТЗагрузкаСТСД.Заказ,
        //            |       NULL
        //            |   ИЗ
        //            |       ВТЗагрузкаСТСД КАК ВТЗагрузкаСТСД) КАК ВложенныйЗапрос
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   ВложенныйЗапрос.Заказ,
        //            |   ВложенныйЗапрос.ВнешнийНомерЗаказа
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   СтатусыСкладскогоУчета.Заказ
        //            |ПОМЕСТИТЬ ВТ_Статусы
        //            |ИЗ
        //            |   РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
        //            |ГДЕ
        //            |   СтатусыСкладскогоУчета.Период <= &Период
        //            |   И СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ПриходПроверен)
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   СтатусыСкладскогоУчета.Заказ
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   РеализацияТоваровУслуг.Ссылка КАК Заказ
        //            |ПОМЕСТИТЬ ВТ_Заказы
        //            |ИЗ
        //            |   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        //            |ГДЕ
        //            |   РеализацияТоваровУслуг.Дата >= &ДатаНач2
        //            |   И НЕ РеализацияТоваровУслуг.ПометкаУдаления
        //            |   И РеализацияТоваровУслуг.ВладелецТовара = &Контрагент
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   МАКСИМУМ(ВТ_Итог.Заказ) КАК Заказ,
        //            |   ЕСТЬNULL(ВТ_Итог.Заказ.НомерВнешнегоЗаказа, ВТ_Итог.ВнешнийНомерЗаказа) КАК НомерЗаказа,
        //            |   МАКСИМУМ(ВЫБОР
        //            |           КОГДА ВТ_Заказы.Заказ ЕСТЬ NULL 
        //            |               ТОГДА ВТ_Итог.ЕстьВСистеме
        //            |           ИНАЧЕ ИСТИНА
        //            |       КОНЕЦ) КАК ЕстьВСистеме,
        //            |   МАКСИМУМ(ВТ_Итог.ЕстьВПриходе) КАК ЕстьВПриходе,
        //            |   МАКСИМУМ(ВТ_Итог.ЕстьНаСканере) КАК ЕстьНаСканере,
        //            |   МАКСИМУМ(ВТ_Итог.КоличествоМестСистема) КАК КоличествоМестСистема,
        //            |   МАКСИМУМ(ВТ_Итог.КоличествоМестПриход) КАК КоличествоМестПриход,
        //            |   МАКСИМУМ(ВТ_Итог.КоличествоМестСканировано) КАК КоличествоМестСканировано,
        //            |   МАКСИМУМ(ВТ_Суммы.Сумма) КАК Сумма,
        //            |   МАКСИМУМ(ВТ_Суммы.Количество) КАК Количество,
        //            |   МАКСИМУМ(ВТ_Итог.ДокументПрихода) КАК ДокументПрихода
        //            |ИЗ
        //            |   ВТ_Итог КАК ВТ_Итог
        //            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
        //            |       ПО (ВЫРАЗИТЬ(ВТ_Итог.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка.Номер = ВТ_Суммы.Номер)
        //            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
        //            |       ПО ВТ_Итог.Заказ = ВТ_Заказы.Заказ
        //            |ГДЕ
        //            |   НЕ ВТ_Итог.Заказ В
        //            |               (ВЫБРАТЬ
        //            |                   ВТ_Статусы.Заказ
        //            |               ИЗ
        //            |                   ВТ_Статусы КАК ВТ_Статусы)
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   ЕСТЬNULL(ВТ_Итог.Заказ.НомерВнешнегоЗаказа, ВТ_Итог.ВнешнийНомерЗаказа)";
        ////Серегин М.В. 12.08.2015 14:55:48 новый код , уже старый
        //СменаПоДефолту = Справочники.Смены.Смена1;
        //Зап.Текст = "ВЫБРАТЬ
        //            |   ВложенныйЗапрос.ВнешнийНомерЗаказа,
        //            |   ВложенныйЗапрос.Заказ,
        //            |   СУММА(ВложенныйЗапрос.КоличествоМест) КАК КоличествоМест,
        //            |   МАКСИМУМ(ВложенныйЗапрос.Контрагент) КАК Контрагент
        //            |ПОМЕСТИТЬ ВТ_ВСистеме
        //            |ИЗ
        //            |   (ВЫБРАТЬ
        //            |       РеализацияТоваровУслугТовары.Ссылка КАК Заказ,
        //            |       РеализацияТоваровУслугТовары.Ссылка.НомерВнешнегоЗаказа КАК ВнешнийНомерЗаказа,
        //            |       РеализацияТоваровУслугТовары.КоличествоМест КАК КоличествоМест,
        //            |       РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара КАК Контрагент
        //            |   ИЗ
        //            |       Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
        //            |   ГДЕ
        //            |       НЕ РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления
        //            |       И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
        //            |       И РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара В(&Контрагент)
        //            |       И &ЗаполнятьПоДате = 1
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       РеализацияТоваровУслугУслуги.Ссылка,
        //            |       РеализацияТоваровУслугУслуги.Ссылка.НомерВнешнегоЗаказа,
        //            |       0,
        //            |       РеализацияТоваровУслугУслуги.Ссылка.ВладелецТовара
        //            |   ИЗ
        //            |       Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
        //            |   ГДЕ
        //            |       НЕ РеализацияТоваровУслугУслуги.Ссылка.ПометкаУдаления
        //            |       И РеализацияТоваровУслугУслуги.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
        //            |       И РеализацияТоваровУслугУслуги.Ссылка.ВладелецТовара В(&Контрагент)
        //            |       И &ЗаполнятьПоДате = 1
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка,
        //            |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка.НомерВнешнегоЗаказа,
        //            |       РеализацияТоваровУслугПодарочныеПозиции.КоличествоМест,
        //            |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ВладелецТовара
        //            |   ИЗ
        //            |       Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
        //            |   ГДЕ
        //            |       НЕ РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ПометкаУдаления
        //            |       И РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
        //            |       И РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ВладелецТовара В(&Контрагент)
        //            |       И &ЗаполнятьПоДате = 1
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       РеализацияТоваровУслуг.Ссылка,
        //            |       РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
        //            |       ПоступлениеТоваровУслугТовары.КоличествоМест,
        //            |       ПоступлениеТоваровУслугТовары.Ссылка.Контрагент
        //            |   ИЗ
        //            |       Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
        //            |           ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        //            |           ПО ПоступлениеТоваровУслугТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
        //            |   ГДЕ
        //            |       &ЗаполнятьПоДате = 2
        //            |       И НЕ ПоступлениеТоваровУслугТовары.Ссылка.ПометкаУдаления
        //            |       И ПоступлениеТоваровУслугТовары.Ссылка.Контрагент В(&Контрагент)
        //            |       И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       РеализацияТоваровУслуг.Ссылка,
        //            |       РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
        //            |       0,
        //            |       ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент
        //            |   ИЗ
        //            |       Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
        //            |           ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        //            |           ПО ПоступлениеТоваровУслугУслуги.Ссылка.Номер = РеализацияТоваровУслуг.Номер
        //            |   ГДЕ
        //            |       &ЗаполнятьПоДате = 2
        //            |       И НЕ ПоступлениеТоваровУслугУслуги.Ссылка.ПометкаУдаления
        //            |       И ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент В(&Контрагент)
        //            |       И ПоступлениеТоваровУслугУслуги.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       РеализацияТоваровУслуг.Ссылка,
        //            |       РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
        //            |       ПоступлениеТоваровУслугПодарочныеПозиции.КоличествоМест,
        //            |       ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент
        //            |   ИЗ
        //            |       Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
        //            |           ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        //            |           ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер = РеализацияТоваровУслуг.Номер
        //            |   ГДЕ
        //            |       &ЗаполнятьПоДате = 2
        //            |       И НЕ ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.ПометкаУдаления
        //            |       И ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент В(&Контрагент)
        //            |       И ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2) КАК ВложенныйЗапрос
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   ВложенныйЗапрос.ВнешнийНомерЗаказа,
        //            |   ВложенныйЗапрос.Заказ
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ПриходЗаказовНаСкладЗаказы.ВнешнийНомерЗаказа,
        //            |   ПриходЗаказовНаСкладЗаказы.Заказ,
        //            |   ПриходЗаказовНаСкладЗаказы.КоличествоМест,
        //            |   ПриходЗаказовНаСкладЗаказы.Ссылка КАК ДокументПрихода,
        //            |   ПриходЗаказовНаСкладЗаказы.Ссылка.Контрагент
        //            |ПОМЕСТИТЬ ВТПриходПоЭДО
        //            |ИЗ
        //            |   Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
        //            |ГДЕ
        //            |   ПриходЗаказовНаСкладЗаказы.Ссылка.ПометкаУдаления = ЛОЖЬ
        //            |   И ПриходЗаказовНаСкладЗаказы.Ссылка.Дата МЕЖДУ &ДатаНач1 И &ДатаКон1
        //            |   И ПриходЗаказовНаСкладЗаказы.Ссылка.Контрагент В(&Контрагент)
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ЗагрузкаСТСДШтрихкоды.ВнешнийНомерЗаказа,
        //            |   ЗагрузкаСТСДШтрихкоды.Заказ,
        //            |   ЗагрузкаСТСДШтрихкоды.КоличествоМест,
        //            |   ЗагрузкаСТСДШтрихкоды.Контрагент
        //            |ПОМЕСТИТЬ ВТЗагрузкаСТСД
        //            |ИЗ
        //            |   Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
        //            |ГДЕ
        //            |   ЗагрузкаСТСДШтрихкоды.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
        //            |   И ЗагрузкаСТСДШтрихкоды.Ссылка.ПометкаУдаления = ЛОЖЬ
        //            |   И ЗагрузкаСТСДШтрихкоды.Контрагент.Ссылка В(&Контрагент)
        //            |   И ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFi)
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ВложенныйЗапрос.Номер,
        //            |   СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
        //            |   СУММА(ВложенныйЗапрос.Количество) КАК Количество
        //            |ПОМЕСТИТЬ ВТ_Суммы
        //            |ИЗ
        //            |   (ВЫБРАТЬ
        //            |       ПоступлениеТоваровУслугТовары.Ссылка.Номер КАК Номер,
        //            |       ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
        //            |       ПоступлениеТоваровУслугТовары.Количество КАК Количество
        //            |   ИЗ
        //            |       Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       ПоступлениеТоваровУслугУслуги.Ссылка.Номер,
        //            |       ПоступлениеТоваровУслугУслуги.Сумма,
        //            |       ПоступлениеТоваровУслугУслуги.Количество
        //            |   ИЗ
        //            |       Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер,
        //            |       ПоступлениеТоваровУслугПодарочныеПозиции.Сумма,
        //            |       ПоступлениеТоваровУслугПодарочныеПозиции.Количество
        //            |   ИЗ
        //            |       Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции) КАК ВложенныйЗапрос
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   ВложенныйЗапрос.Номер
        //            |
        //            |ИНДЕКСИРОВАТЬ ПО
        //            |   ВложенныйЗапрос.Номер
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ВложенныйЗапрос.Заказ,
        //            |   МАКСИМУМ(ВложенныйЗапрос.ЕстьВСистеме) КАК ЕстьВСистеме,
        //            |   МАКСИМУМ(ВложенныйЗапрос.ЕстьВПриходе) КАК ЕстьВПриходе,
        //            |   МАКСИМУМ(ВложенныйЗапрос.ЕстьНаСканере) КАК ЕстьНаСканере,
        //            |   СУММА(ВложенныйЗапрос.КоличествоМестСистема) КАК КоличествоМестСистема,
        //            |   СУММА(ВложенныйЗапрос.КоличествоМестПриход) КАК КоличествоМестПриход,
        //            |   СУММА(ВложенныйЗапрос.КоличествоМестСканировано) КАК КоличествоМестСканировано,
        //            |   ВложенныйЗапрос.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
        //            |   МАКСИМУМ(ВложенныйЗапрос.ДокументПрихода) КАК ДокументПрихода,
        //            |   МАКСИМУМ(ВложенныйЗапрос.Контрагент) КАК Контрагент
        //            |ПОМЕСТИТЬ ВТ_Итог
        //            |ИЗ
        //            |   (ВЫБРАТЬ
        //            |       ИСТИНА КАК ЕстьВСистеме,
        //            |       ЛОЖЬ КАК ЕстьВПриходе,
        //            |       ЛОЖЬ КАК ЕстьНаСканере,
        //            |       ВТ_ВСистеме.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
        //            |       ВТ_ВСистеме.КоличествоМест КАК КоличествоМестСистема,
        //            |       0 КАК КоличествоМестПриход,
        //            |       0 КАК КоличествоМестСканировано,
        //            |       ВТ_ВСистеме.Заказ КАК Заказ,
        //            |       NULL КАК ДокументПрихода,
        //            |       ВТ_ВСистеме.Контрагент КАК Контрагент
        //            |   ИЗ
        //            |       ВТ_ВСистеме КАК ВТ_ВСистеме
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       ЛОЖЬ,
        //            |       ИСТИНА,
        //            |       ЛОЖЬ,
        //            |       ВТПриходПоЭДО.ВнешнийНомерЗаказа,
        //            |       0,
        //            |       ВТПриходПоЭДО.КоличествоМест,
        //            |       0,
        //            |       ВТПриходПоЭДО.Заказ,
        //            |       ВТПриходПоЭДО.ДокументПрихода,
        //            |       ВТПриходПоЭДО.Контрагент
        //            |   ИЗ
        //            |       ВТПриходПоЭДО КАК ВТПриходПоЭДО
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       ЛОЖЬ,
        //            |       ЛОЖЬ,
        //            |       ИСТИНА,
        //            |       ВТЗагрузкаСТСД.ВнешнийНомерЗаказа,
        //            |       0,
        //            |       0,
        //            |       ВТЗагрузкаСТСД.КоличествоМест,
        //            |       ВТЗагрузкаСТСД.Заказ,
        //            |       NULL,
        //            |       ВТЗагрузкаСТСД.Контрагент
        //            |   ИЗ
        //            |       ВТЗагрузкаСТСД КАК ВТЗагрузкаСТСД) КАК ВложенныйЗапрос
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   ВложенныйЗапрос.Заказ,
        //            |   ВложенныйЗапрос.ВнешнийНомерЗаказа
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   СтатусыСкладскогоУчета.Заказ
        //            |ПОМЕСТИТЬ ВТ_Статусы
        //            |ИЗ
        //            |   РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
        //            |ГДЕ
        //            |   СтатусыСкладскогоУчета.Период <= &Период
        //            |   И (СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ПриходПроверен)
        //            |           ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.УчтеноРасхождение))
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   СтатусыСкладскогоУчета.Заказ
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   РеализацияТоваровУслуг.Ссылка КАК Заказ
        //            |ПОМЕСТИТЬ ВТ_Заказы
        //            |ИЗ
        //            |   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        //            |ГДЕ
        //            |   РеализацияТоваровУслуг.Дата >= &ДатаНач2
        //            |   И НЕ РеализацияТоваровУслуг.ПометкаУдаления
        //            |   И РеализацияТоваровУслуг.ВладелецТовара В(&Контрагент)
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   СУММА(ВложенныйЗапрос.Количество) КАК Количество,
        //            |   ВложенныйЗапрос.Номер
        //            |ПОМЕСТИТЬ ВТ_РеализацияКоличество
        //            |ИЗ
        //            |   (ВЫБРАТЬ
        //            |       РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
        //            |       РеализацияТоваровУслугТовары.Количество КАК Количество
        //            |   ИЗ
        //            |       Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
        //            |   ГДЕ
        //            |       НЕ РеализацияТоваровУслугТовары.Номенклатура.Артикул В
        //            |                   (ВЫБРАТЬ
        //            |                       УслугиПоЗаказам.Артикул
        //            |                   ИЗ
        //            |                       Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
        //            |   
        //            |   ОБЪЕДИНИТЬ ВСЕ
        //            |   
        //            |   ВЫБРАТЬ
        //            |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
        //            |       РеализацияТоваровУслугПодарочныеПозиции.Количество
        //            |   ИЗ
        //            |       Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
        //            |   ГДЕ
        //            |       НЕ РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
        //            |                   (ВЫБРАТЬ
        //            |                       УслугиПоЗаказам.Артикул
        //            |                   ИЗ
        //            |                       Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)) КАК ВложенныйЗапрос
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   ВложенныйЗапрос.Номер
        //            |
        //            |ИНДЕКСИРОВАТЬ ПО
        //            |   ВложенныйЗапрос.Номер
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
        //            |   СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество
        //            |ПОМЕСТИТЬ ВТ_ВозвратПокупателяюКоличество
        //            |ИЗ
        //            |   Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
        //            |ГДЕ
        //            |   НЕ ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул В
        //            |               (ВЫБРАТЬ
        //            |                   УслугиПоЗаказам.Артикул
        //            |               ИЗ
        //            |                   Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
        //            |
        //            |ИНДЕКСИРОВАТЬ ПО
        //            |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   РеализацияТоваровУслуг.Ссылка.Номер КАК РеализацияНомер,
        //            |   новаМестнаяДоставка.Ссылка.Номер КАК МестнаяДоставкаНомер,
        //            |   ВТ_ВозвратПокупателяюКоличество.Номер КАК ВозвратНомер,
        //            |   ЕСТЬNULL(ВТ_ВозвратПокупателяюКоличество.Количество, 0) КАК ВозвратКоличество,
        //            |   ЕСТЬNULL(ВТ_РеализацияКоличество.Количество, 0) КАК РеализацияКоличество,
        //            |   РеализацияТоваровУслуг.Ссылка КАК Заказ
        //            |ПОМЕСТИТЬ ВТ_Промежуточная
        //            |ИЗ
        //            |   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        //            |       ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
        //            |       ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
        //            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеализацияКоличество КАК ВТ_РеализацияКоличество
        //            |       ПО РеализацияТоваровУслуг.Номер = ВТ_РеализацияКоличество.Номер
        //            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВозвратПокупателяюКоличество КАК ВТ_ВозвратПокупателяюКоличество
        //            |       ПО РеализацияТоваровУслуг.Номер = ВТ_ВозвратПокупателяюКоличество.Номер
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ВЫБОР
        //            |       КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
        //            |           ТОГДА ВЫБОР
        //            |                   КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
        //            |                       ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
        //            |                   ИНАЧЕ ВЫБОР
        //            |                           КОГДА ВТ_Итог.РеализацияКоличество = 0
        //            |                                   И ВТ_Итог.ВозвратКоличество > 0
        //            |                               ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
        //            |                           ИНАЧЕ ВЫБОР
        //            |                                   КОГДА ВТ_Итог.РеализацияКоличество > 0
        //            |                                           И ВТ_Итог.ВозвратКоличество > 0
        //            |                                       ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
        //            |                                   ИНАЧЕ НЕОПРЕДЕЛЕНО
        //            |                               КОНЕЦ
        //            |                       КОНЕЦ
        //            |               КОНЕЦ
        //            |       ИНАЧЕ ВЫБОР
        //            |               КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
        //            |                   ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
        //            |               ИНАЧЕ ВЫБОР
        //            |                       КОГДА ВТ_Итог.РеализацияКоличество = 0
        //            |                               И ВТ_Итог.ВозвратКоличество > 0
        //            |                           ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
        //            |                       ИНАЧЕ ВЫБОР
        //            |                               КОГДА ВТ_Итог.РеализацияКоличество > 0
        //            |                                       И ВТ_Итог.ВозвратКоличество > 0
        //            |                                   ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
        //            |                               ИНАЧЕ НЕОПРЕДЕЛЕНО
        //            |                           КОНЕЦ
        //            |                   КОНЕЦ
        //            |           КОНЕЦ
        //            |   КОНЕЦ КАК ТипЗаказа,
        //            |   ВТ_Итог.Заказ
        //            |ПОМЕСТИТЬ ВТ_ТипЗаказов
        //            |ИЗ
        //            |   ВТ_Промежуточная КАК ВТ_Итог
        //            |
        //            |ИНДЕКСИРОВАТЬ ПО
        //            |   ВТ_Итог.Заказ
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ВТ_Итог.Заказ КАК Заказ,
        //            |   ЕСТЬNULL(ВТ_Итог.Заказ.НомерВнешнегоЗаказа, ВТ_Итог.ВнешнийНомерЗаказа) КАК НомерЗаказа,
        //            |   МАКСИМУМ(ВЫБОР
        //            |           КОГДА ВТ_Заказы.Заказ ЕСТЬ NULL 
        //            |               ТОГДА ВТ_Итог.ЕстьВСистеме
        //            |           ИНАЧЕ ИСТИНА
        //            |       КОНЕЦ) КАК ЕстьВСистеме,
        //            |   МАКСИМУМ(ВТ_Итог.ЕстьВПриходе) КАК ЕстьВПриходе,
        //            |   МАКСИМУМ(ВТ_Итог.ЕстьНаСканере) КАК ЕстьНаСканере,
        //            |   МАКСИМУМ(ВТ_Итог.КоличествоМестСистема) КАК КоличествоМестСистема,
        //            |   МАКСИМУМ(ВТ_Итог.КоличествоМестПриход) КАК КоличествоМестПриход,
        //            |   МАКСИМУМ(ВТ_Итог.КоличествоМестСканировано) КАК КоличествоМестСканировано,
        //            |   МАКСИМУМ(ВТ_Суммы.Сумма) КАК Сумма,
        //            |   МАКСИМУМ(ВТ_Суммы.Количество) КАК Количество,
        //            |   МАКСИМУМ(ВТ_Итог.ДокументПрихода) КАК ДокументПрихода,
        //            |   МАКСИМУМ(ВТ_Итог.Контрагент) КАК Контрагент
        //            |ПОМЕСТИТЬ ВТ_Итоговая
        //            |ИЗ
        //            |   ВТ_Итог КАК ВТ_Итог
        //            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
        //            |       ПО (ВЫРАЗИТЬ(ВТ_Итог.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка.Номер = ВТ_Суммы.Номер)
        //            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
        //            |       ПО ВТ_Итог.Заказ = ВТ_Заказы.Заказ
        //            |ГДЕ
        //            |   НЕ ВТ_Итог.Заказ В
        //            |               (ВЫБРАТЬ
        //            |                   ВТ_Статусы.Заказ
        //            |               ИЗ
        //            |                   ВТ_Статусы КАК ВТ_Статусы)
        //            |
        //            |СГРУППИРОВАТЬ ПО
        //            |   ВТ_Итог.Заказ,
        //            |   ЕСТЬNULL(ВТ_Итог.Заказ.НомерВнешнегоЗаказа, ВТ_Итог.ВнешнийНомерЗаказа)
        //            |;
        //            |
        //            |////////////////////////////////////////////////////////////////////////////////
        //            |ВЫБРАТЬ
        //            |   ВТ_Итоговая.Заказ,
        //            |   ВТ_Итоговая.НомерЗаказа,
        //            |   ВТ_Итоговая.ЕстьВСистеме,
        //            |   ВТ_Итоговая.ЕстьВПриходе,
        //            |   ВТ_Итоговая.ЕстьНаСканере,
        //            |   ВТ_Итоговая.КоличествоМестСистема,
        //            |   ВТ_Итоговая.КоличествоМестПриход,
        //            |   ВТ_Итоговая.КоличествоМестСканировано,
        //            |   ВТ_Итоговая.Сумма,
        //            |   ВТ_Итоговая.Количество,
        //            |   ВТ_Итоговая.ДокументПрихода,
        //            |   ЕСТЬNULL(ВТ_ТипЗаказов.ТипЗаказа, НЕОПРЕДЕЛЕНО) КАК ТипЗаказа,
        //            |   ЕСТЬNULL(ВЫРАЗИТЬ(ВТ_Итоговая.Заказ КАК Документ.РеализацияТоваровУслуг).ВладелецТовара, ВТ_Итоговая.Контрагент) КАК Контрагент
        //            |ИЗ
        //            |   ВТ_Итоговая КАК ВТ_Итоговая
        //            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТипЗаказов КАК ВТ_ТипЗаказов
        //            |       ПО ВТ_Итоговая.Заказ = ВТ_ТипЗаказов.Заказ
        //            |ГДЕ
        //            |   НЕ ЕСТЬNULL(ВТ_ТипЗаказов.ТипЗаказа, НЕОПРЕДЕЛЕНО) В (&ТипЗаказа)";
        
        //Серегин М.В. 27.08.2015 14:48:33 новый запрос
        СменаПоДефолту = Справочники.Смены.Смена1;
		// Михушкин --->> 		
		//Зап.Текст = ПолучитьТекстЗапроса(); 
		
		РежимЗакрытияПоАПП = Ложь;
		Если Контрагенты.Количество() < 2 Тогда
            РежимЗакрытияПоАПП = РежимЗакрытияПоАПП(Контрагент.Ссылка);
			ЗаполненПоОжиданиюВАПП = РежимЗакрытияПоАПП;
		КонецЕсли;
		
		
		Если РежимЗакрытияПоАПП Тогда		
			Зап.Текст = ПолучитьТекстЗапросаПоТерминалам_НоваяЛогикаОтАПП();			
		Иначе		
			Зап.Текст = ПолучитьТекстЗапросаПоТерминалам();		
		КонецЕсли;
	
		
		// <<--- Михушкин 
		
        Если НЕ ЗначениеЗаполнено(СкладМагазина) Тогда
            ТекстЗамены = "
            |   И ВЫБОР
            |           КОГДА ВТ_КонечныйИТОГ.Контрагент = &КонтрагентТопДеливери
            |                   И ВТ_КонечныйИТОГ.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
            |               ТОГДА &СкладТопДеливери
            |           ИНАЧЕ ВТ_КонечныйИТОГ.СкладМагазина
            |       КОНЕЦ В (&СкладМагазина)";	
            
            Зап.Текст = СтрЗаменить(Зап.Текст,ТекстЗамены,"");    
        КонецЕсли;
                    
                    
        Зап.УстановитьПараметр("ТипЗаказа", Перечисления.ТипыЗаказов.Возврат);
		Зап.УстановитьПараметр("ДатаНач", ДатаНачалаВыборки);		
		Зап.УстановитьПараметр("ДатаКон", ДатаОкончанияВыборки);
        Зап.УстановитьПараметр("СкладМагазина", СкладМагазина);
        ////Серегин М.В. 23.07.2015 11:40:38 старый
        //Зап.УстановитьПараметр("ДатаНач1", НачалоДня(ДатаНачалаВыборки));		
        //Зап.УстановитьПараметр("ДатаКон1", КонецДня(ДатаОкончанияВыборки));
        //Серегин М.В. 23.07.2015 11:43:47 новый
		Зап.УстановитьПараметр("ДатаНач1", ДатаНачалаВыборки);		
		Зап.УстановитьПараметр("ДатаКон1", ДатаОкончанияВыборки);
		Зап.УстановитьПараметр("ДатаНач2", НачалоДня(ДатаОкончанияВыборки));
		Зап.УстановитьПараметр("ДатаКон2", КонецДня(ДатаОкончанияВыборки));
		
		Зап.УстановитьПараметр("ДатаНач3", НачалоДня(ДатаОкончанияВыборки) - 864000*4);
		Зап.УстановитьПараметр("ДатаКон3", КонецДня(ДатаОкончанияВыборки) + 864000*4);
		
		Зап.УстановитьПараметр("ДатаОграниченияПоступления", НачалоДня(ДатаНачалаВыборки) - 864000);
        Зап.УстановитьПараметр("Период", Дата);
        ////Серегин М.В. 20.08.2015 10:59:26 старый код
        //Зап.УстановитьПараметр("Контрагент", Контрагент.Ссылка);
        //Серегин М.В. 20.08.2015 10:59:31 новый
		Зап.УстановитьПараметр("Контрагент", Контрагенты.ВыгрузитьКолонку("Контрагент"));
        Зап.УстановитьПараметр("ЗаполнятьПоДате", ПереключательПоДате);
        //+++++Серегин М.В. 18.09.2015 13:38:21 
        КонтрагентТопДеливери = Справочники.Контрагенты.НайтиПоКоду("Shop_222");
        СкладТопДеливери = Справочники.СкладыМагазинов.НайтиПоКоду("7");
        Зап.УстановитьПараметр("КонтрагентТопДеливери", КонтрагентТопДеливери);
        Зап.УстановитьПараметр("СкладТопДеливери", СкладТопДеливери);
        //-----Серегин М.В. 18.09.2015 13:38:25 
		
		// Михушкин --->> 
		Зап.УстановитьПараметр("ТерминалПриема", ТерминалПриема);
		Зап.УстановитьПараметр("ТерминалДоставки", ТерминалДоставки);
		// <<--- Михушкин 
		        
		
		Выб = Зап.Выполнить().Выгрузить();
        //Серегин М.В. 15.06.2015 15:05:57 условие если по не группе контрагентов
        Если Контрагенты.Количество() < 2 Тогда
            РежимЗакрытияПоОжиданию = РежимЗакрытияПоОжиданию(Контрагент.Ссылка);
		КонецЕсли;
		
		Если РежимЗакрытияПоАПП Тогда
		
			РежимЗакрытияПоОжиданию = Ложь;	
		
		КонецЕсли;
		
		//Если Контрагенты.Количество() < 2 Тогда
		//    РежимЗакрытияПоАПП = РежимЗакрытияПоАПП(Контрагент.Ссылка);
		//	ЗаполненПоОжиданиюВАПП = РежимЗакрытияПоАПП;
		//КонецЕсли;
		
		
        //Серегин М.В. 15.06.2015 15:05:59 
		Для Каждого Тек Из Выб Цикл
			
			
			// РежимЗакрытияПоАПП - Пропускаем заказы, которых нет в АПП 
			//Если РежимЗакрытияПоАПП И НЕ Тек.ЕстьВПриходе Тогда
			//	Продолжить;
			//КонецЕсли;
			
			
            Нов = Заказы.Добавить();
            ЗаполнитьЗначенияСвойств(Нов, Тек);
            
            //Серегин М.В. 15.06.2015 15:05:57 условие если по группе контрагентов
            Если Контрагенты.Количество() > 1 Тогда
                РежимЗакрытияПоОжиданию = РежимЗакрытияПоОжиданию(Тек.Контрагент.Ссылка);
            КонецЕсли;
            //Серегин М.В. 15.06.2015 15:05:59 
        
            //Серегин М.В. 11.06.2015 15:14:17 по режиму закрытия дня и если есть в системе
            Если РежимЗакрытияПоОжиданию И Тек.ЕстьВСистеме Тогда
                Нов.ЕстьВСистеме = Тек.ЕстьВСистеме;
                Нов.ЕстьВПриходе = Тек.ЕстьВСистеме;
                //Серегин М.В. 29.06.2015 15:45:37 не нужно
                //Нов.ЕстьНаСканере = Тек.ЕстьВСистеме;
                //Серегин М.В. 29.06.2015 15:45:42 
			КонецЕсли;
			
			            
            //Серегин М.В. 23.07.2015 15:58:00 новый костыль
            Если ЭтоЗаказНаУстановку(Тек.Заказ.Номер) Тогда
                Нов.ЗаказНаУстановку = Истина;
                Нов.ЕстьНаСканере = Истина;
            КонецЕсли;
            //Серегин М.В. 23.07.2015 15:58:05
            
            Если Нов.ЕстьВСистеме Тогда
                Нов.СуммаВСистеме = Тек.Сумма;
                Нов.КоличествоВСистеме = Тек.Количество;
            КонецЕсли;
            Если Нов.ЕстьВПриходе Тогда
                Нов.СуммаВПриходе = Тек.Сумма;  
                Нов.КоличествоВПриходе = Тек.Количество;
            КонецЕсли;
            Если Нов.ЕстьНаСканере Тогда
                Нов.СуммаНаСканере = Тек.Сумма;
                Нов.КоличествоНаСканере = Тек.Количество;
            КонецЕсли;
            //Серегин М.В. 11.06.2015 17:19:12 
            
            Нов.ЕстьВСистемеЗаполнено = Нов.ЕстьВСистеме;
            Нов.ЕстьВПриходеЗаполнено = Нов.ЕстьВПриходе;
            Нов.ЕстьНаСканереЗаполнено= Нов.ЕстьНаСканере;
            Нов.Смена 				  = СменаПоДефолту;
			// Михушкин --->> 		
			Нов.ТерминалДоставки      = Тек.ТерминалДоставки;
            // <<--- Михушкин 
            
        КонецЦикла;	
		
		Зап.Текст = "ВЫБРАТЬ
		            |	ПриходЗаказовНаСклад.Ссылка КАК ПриходныйДокумент
		            |ИЗ
		            |	Документ.ПриходЗаказовНаСклад КАК ПриходЗаказовНаСклад
		            |ГДЕ
		            |	ПриходЗаказовНаСклад.Ссылка.ПометкаУдаления = ЛОЖЬ
		            |	И ПриходЗаказовНаСклад.Дата МЕЖДУ &ДатаНач И &ДатаКон
		            |	И ПриходЗаказовНаСклад.Контрагент.Ссылка В(&Контрагент)
		            |	И ПриходЗаказовНаСклад.СкладМагазина В(&СкладМагазина)
		            |	И ПриходЗаказовНаСклад.ТерминалПриема = &ТерминалПриема
		            |	И ПриходЗаказовНаСклад.ТерминалДоставки = &ТерминалДоставки
		            |
		            |УПОРЯДОЧИТЬ ПО
		            |	ПриходЗаказовНаСклад.Ссылка";
		
		Зап.УстановитьПараметр("ДатаНач", ДатаНачалаВыборки);		
		Зап.УстановитьПараметр("ДатаКон", ДатаОкончанияВыборки);		
        ////Серегин М.В. 20.08.2015 11:00:25 старый код
        //Зап.УстановитьПараметр("Контрагент", Контрагент.Ссылка);
        //Серегин М.В. 20.08.2015 11:00:30 новый код
		Зап.УстановитьПараметр("Контрагент", Контрагенты.ВыгрузитьКолонку("Контрагент"));
        //Серегин М.В. 14.09.2015 11:25:50 
        Если НЕ ЗначениеЗаполнено(СкладМагазина) Тогда
            Зап.Текст = СтрЗаменить(Зап.Текст,"И ПриходЗаказовНаСклад.СкладМагазина В (&СкладМагазина)","");    
        КонецЕсли;
        Зап.УстановитьПараметр("СкладМагазина", СкладМагазина);
        //Серегин М.В. 14.09.2015 11:25:51 
		// Михушкин - 28.04.2016 --->> 
		Зап.УстановитьПараметр("ТерминалПриема", ТерминалПриема);
		Зап.УстановитьПараметр("ТерминалДоставки", ТерминалДоставки);
		// <<--- Михушкин
        
		Рез = Зап.Выполнить().Выгрузить();
		
		Для Каждого Тек Из Рез Цикл
			Нов = ПриходныеДокументы.Добавить();
			ЗаполнитьЗначенияСвойств(Нов, Тек);
            нов.Смена = СменаПоДефолту;
            Нов.Учитывать = Истина;
		КонецЦикла;	
		
		
		Зап.Текст = "ВЫБРАТЬ
		            |	ЗагрузкаСТСДШтрихкоды.Ссылка КАК ЗагрузкаСТСД
		            |ИЗ
		            |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		            |ГДЕ
		            |	ЗагрузкаСТСДШтрихкоды.Ссылка.ПометкаУдаления = ЛОЖЬ
		            |	И ЗагрузкаСТСДШтрихкоды.Контрагент.Ссылка В (&Контрагент)
		            |	И ЗагрузкаСТСДШтрихкоды.Ссылка.ДатаДокумента МЕЖДУ &ДатаНач И &ДатаКон
		            |
		            |СГРУППИРОВАТЬ ПО
		            |	ЗагрузкаСТСДШтрихкоды.Ссылка
		            |
		            |УПОРЯДОЧИТЬ ПО
		            |	ЗагрузкаСТСДШтрихкоды.Ссылка";
		
		Зап.УстановитьПараметр("ДатаНач", ДатаНачалаВыборки);		
		Зап.УстановитьПараметр("ДатаКон", ДатаОкончанияВыборки);
        ////Серегин М.В. 20.08.2015 11:00:40 старый код
        //Зап.УстановитьПараметр("Контрагент", Контрагент.Ссылка);
        //Серегин М.В. 20.08.2015 11:00:46 новый код
		Зап.УстановитьПараметр("Контрагент", Контрагенты.ВыгрузитьКолонку("Контрагент"));
		Рез = Зап.Выполнить().Выгрузить();
		
		Для Каждого Тек Из Рез Цикл
			Нов = ДокументыТСД.Добавить();
			ЗаполнитьЗначенияСвойств(Нов, Тек);
            нов.Смена = СменаПоДефолту;
        КонецЦикла;	
        
        //Итоги
        СуммаВСистеме = Заказы.Итог("СуммаВСистеме");
        СуммаВПриходе = Заказы.Итог("СуммаВПриходе");
        СуммаНаСканере = Заказы.Итог("СуммаНаСканере");
        
        ИтогоЕстьВСистеме = Заказы.НайтиСтроки(Новый Структура("ЕстьВСистеме",Истина)).Количество();
        ИтогоЕстьВСистеме = ИтогоЕстьВСистеме;
        ИтогоЕстьВПриходе = Заказы.НайтиСтроки(Новый Структура("ЕстьВПриходе",Истина)).Количество();
        ИтогоЕстьВПриходе = ИтогоЕстьВПриходе;
        ИтогоЕстьНаСканере = Заказы.НайтиСтроки(Новый Структура("ЕстьНаСканере",Истина)).Количество();
        ИтогоЕстьНаСканере = ИтогоЕстьНаСканере;
        
        КоличествоВСистеме = Заказы.Итог("КоличествоВСистеме");
        КоличествоВПриходе = Заказы.Итог("КоличествоВПриходе");
        КоличествоНаСканере = Заказы.Итог("КоличествоНаСканере");
        
        
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//Отказ = Закрыт;
	Если ОперативнаяПриемкаЗаказов Тогда
	
		Если ЗначениеЗаполнено(Основание) И Ссылка.ПометкаУдаления = Истина И ПометкаУдаления = Ложь Тогда
					
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	ФактическийПриходЗаказовНаСклад.Ссылка КАК Ссылка,
			                      |	ФактическийПриходЗаказовНаСклад.НомерКорректировки КАК НомерКорректировки
			                      |ИЗ
			                      |	Документ.ФактическийПриходЗаказовНаСклад КАК ФактическийПриходЗаказовНаСклад
			                      |ГДЕ
			                      |	ФактическийПриходЗаказовНаСклад.ПометкаУдаления = ЛОЖЬ
			                      |	И ФактическийПриходЗаказовНаСклад.Основание = &Основание
			                      |	И ФактическийПриходЗаказовНаСклад.НомерКорректировки = &НомерКорректировки
			                      |	И ФактическийПриходЗаказовНаСклад.Ссылка <> &Ссылка");
			Запрос.УстановитьПараметр("Основание", Основание);
			Запрос.УстановитьПараметр("НомерКорректировки", НомерКорректировки);
			Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
			Рез = Запрос.Выполнить();
			
			Если НЕ Рез.Пустой() Тогда
				Сообщить("Корректировка не актуальна, ибо существует другая корректировка");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
				
		КонецЕсли;	
	КонецЕсли;
	
	
	Если НЕ Отказ И НЕ ЗначениеЗаполнено(ДатаНачалаВыборки) Тогда	
		ДатаНачалаВыборки = Дата;	
		ДатаВходящегоДокумента = Дата;
	КонецЕсли;
	
	
КонецПроцедуры


Функция РежимЗакрытияПоОжиданию(Контрагент)
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   РежимыЗакрытияОперационногоДняПоКонтрагентам.Контрагент,
        |   РежимыЗакрытияОперационногоДняПоКонтрагентам.РежимЗакрытияПоОжиданию
        |ИЗ
        |   РегистрСведений.РежимыЗакрытияОперационногоДняПоКонтрагентам КАК РежимыЗакрытияОперационногоДняПоКонтрагентам
        |ГДЕ
        |   РежимыЗакрытияОперационногоДняПоКонтрагентам.Контрагент = &Контрагент";
    
    Запрос.УстановитьПараметр("Контрагент", Контрагент);
    РезультатЗапроса = Запрос.Выполнить();
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат ВыборкаДетальныеЗаписи.РежимЗакрытияПоОжиданию;    
    Иначе
        Возврат  Ложь;
    КонецЕсли;
КонецФункции

//Асеев 18.02.2022 (Письмо с расхождениями по Оперативной приемке)>>>
Процедура СформироватьПисьмоСРасхождениямиПоОперативнойПриемке()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//Асеев 30.09.2024 (Задача № 5329)>>>
	//Асеев 30.09.2024 (Задача № 5329)<<<
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФактическийПриходЗаказовНаСкладЗаказы.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_ЧастичныйПриход
	|ИЗ
	|	Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
	|ГДЕ
	|	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ФактическийПриходЗаказовНаСкладЗаказы.Заказ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ФактическийПриходЗаказовНаСкладЗаказы.КоличествоМестСканировано) > 0 И
	|	СУММА(ВЫБОР
	|			КОГДА ФактическийПриходЗаказовНаСкладЗаказы.КоличествоМестПриход - ФактическийПриходЗаказовНаСкладЗаказы.КоличествоМестСканировано > 0
	|				ТОГДА ФактическийПриходЗаказовНаСкладЗаказы.КоличествоМестПриход - ФактическийПриходЗаказовНаСкладЗаказы.КоличествоМестСканировано
	|			ИНАЧЕ 0
	|		КОНЕЦ) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер КАК НомерСтриж,
	|	ФактическийПриходЗаказовНаСкладЗаказы.Заказ.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	СУММА(ФактическийПриходЗаказовНаСкладЗаказы.КоличествоМестПриход - ФактическийПриходЗаказовНаСкладЗаказы.КоличествоМестСканировано) КАК КоличествоМест,
	|	ДополнительныеПараметрыЗаказа.СкладМагазина.Наименование КАК СкладВозврата,
	|	ДополнительныеПараметрыЗаказа.СкладМагазина.ИдентификаторНаправления КАК КодСклада
	|ИЗ
	|	Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЧастичныйПриход КАК ВТ_ЧастичныйПриход
	|		ПО ФактическийПриходЗаказовНаСкладЗаказы.Заказ = ВТ_ЧастичныйПриход.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО ФактическийПриходЗаказовНаСкладЗаказы.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	|ГДЕ
	|	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
	|	И ФактическийПриходЗаказовНаСкладЗаказы.КоличествоМестПриход - ФактическийПриходЗаказовНаСкладЗаказы.КоличествоМестСканировано > 0
	|	И ВТ_ЧастичныйПриход.Заказ ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер,
	|	ФактическийПриходЗаказовНаСкладЗаказы.Заказ.НомерВнешнегоЗаказа,
	|	ДополнительныеПараметрыЗаказа.СкладМагазина.Наименование,
	|	ДополнительныеПараметрыЗаказа.СкладМагазина.ИдентификаторНаправления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВнешнийНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер КАК НомерСтриж,
	|	ФактическийПриходЗаказовНаСкладЗаказы.Заказ.НомерВнешнегоЗаказа КАК ВнешнийНомер,
	|	ФактическийПриходЗаказовНаСкладЗаказы.Штрихкод КАК ШКМеста,
	|	ДополнительныеПараметрыЗаказа.СкладМагазина.Наименование КАК СкладВозврата,
	|	ДополнительныеПараметрыЗаказа.СкладМагазина.ИдентификаторНаправления КАК КодСклада
	|ИЗ
	|	Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЧастичныйПриход КАК ВТ_ЧастичныйПриход
	|		ПО (ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка)
	|			И ФактическийПриходЗаказовНаСкладЗаказы.Заказ = ВТ_ЧастичныйПриход.Заказ
	|			И (ФактическийПриходЗаказовНаСкладЗаказы.КоличествоМестПриход - ФактическийПриходЗаказовНаСкладЗаказы.КоличествоМестСканировано > 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО ФактическийПриходЗаказовНаСкладЗаказы.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВнешнийНомер,
	|	ШКМеста";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	РезультатПолностью = РезультатПакета[1];
	РезультатЧастично = РезультатПакета[2];
	
	Если РезультатПолностью.Пустой() И РезультатЧастично.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(
	"<html><head></head>
	|<body>
	|<div style=""color: var(--message-viewer-primary-color); font-family: &quot;YS Text&quot;, Arial, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);""><strong style=""font-family: &quot;ys text&quot;, arial, sans-serif; font-size: 16px;"">Это письмо сформировано автоматически. Пожалуйста, не отвечайте на него.</strong><br style=""font-family: &quot;ys text&quot;, arial, sans-serif; font-size: 16px;"">&nbsp;
	|<p style=""font-family: &quot;ys text&quot;, arial, sans-serif; font-size: 16px;""><strong><font face=""Arial"">На склад не поступили заказы</font></strong></p>
	|<p style=""font-family: &quot;ys text&quot;, arial, sans-serif; font-size: 16px;""><strong><font face=""Arial"">Просим Вас отклонить эти заявки или же перенести их на актуальную для клиента дату.</font></strong></p>");
	
	Если Не РезультатПолностью.Пустой() Тогда
		МассивСтрок.Добавить(
		"<p style=""font-family: &quot;ys text&quot;, arial, sans-serif; font-size: 16px;""><strong style=""color: var(--message-viewer-primary-color);""><font face=""Arial"">Не поступили полностью:</font></strong></p>
		|<table border=""2"" style=""word-break: normal; border-collapse: collapse; color: rgb(0, 0, 0); font-family: &quot;ys text&quot;, arial, sans-serif; font-size: 16px; height: 21px; width: 900px;"">
		|<tbody>
		|<tr>
		|<td width=""100"">№ заказа Стриж</td>
		|<td width=""200"">№ заказа внешний</td>
		|<td width=""100"">Количество мест</td>
		|<td width=""150"">Склад возврата</td>
		|<td width=""150"">Код склада</td></tr>");
		
		Выборка = РезультатПолностью.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСтрок.Добавить(
			"<tr>
			|<td>" + Выборка.НомерСтриж + "</td>
			|<td>" + Выборка.ВнешнийНомер + "</td>
			|<td align=""right"">" + Выборка.КоличествоМест + "</td>
			|<td>" + СокрЛП(Выборка.СкладВозврата) + "</td>
			|<td>" + СокрЛП(Выборка.КодСклада) + "</td></tr>");
		КонецЦикла;
		
		МассивСтрок.Добавить("</tbody></table></div>");
	КонецЕсли;
	
	Если Не РезультатЧастично.Пустой() Тогда
		МассивСтрок.Добавить(
		"<div style=""color: var(--message-viewer-primary-color); font-family: &quot;YS Text&quot;, Arial, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);""><br></div>
		|<div style=""color: var(--message-viewer-primary-color); font-family: &quot;YS Text&quot;, Arial, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);""><strong style=""color: var(--message-viewer-primary-color); font-family: &quot;ys text&quot;, arial, sans-serif; font-size: 16px;""><font face=""Arial"">Не поступили частично:</font></strong></div>
		|<div style=""color: var(--message-viewer-primary-color); font-family: &quot;YS Text&quot;, Arial, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);""><br></div>
		|<div style=""color: var(--message-viewer-primary-color); font-family: &quot;YS Text&quot;, Arial, sans-serif; font-size: 14px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);"">
		|<div style=""color: var(--message-viewer-primary-color); font-variant-ligatures: normal;"">
		|<table border=""2"" style=""word-break: normal; border-collapse: collapse; color: rgb(0, 0, 0); font-family: &quot;ys text&quot;, arial, sans-serif; font-size: 16px; height: 21px; width: 900px;"">
		|<tbody>
		|<tr>
		|<td width=""100"">№ заказа Стриж</td>
		|<td width=""215"">№ заказа внешний</td>
		|<td width=""215"">ШК грузового места</td>
		|<td width=""150"">Склад возврата</td>
		|<td width=""150"">Код склада</td></tr>"
		);
		
		Выборка = РезультатЧастично.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСтрок.Добавить(
			"<tr>
			|<td>" + Выборка.НомерСтриж + "</td>
			|<td>" + Выборка.ВнешнийНомер + "</td>
			|<td>" + Выборка.ШКМеста + "</td>
			|<td>" + СокрЛП(Выборка.СкладВозврата) + "</td>
			|<td>" + СокрЛП(Выборка.КодСклада) + "</td></tr>");
		КонецЦикла;
		
		МассивСтрок.Добавить("</tbody></table></div></div>");
	КонецЕсли;
	
	МассивСтрок.Добавить("</body></html>");
	
	МассивПолучателей = Новый Массив;
	Если ПараметрыСеанса.ЭтоТестоваяСреда Тогда
		МассивПолучателей.Добавить("m.aseev@strizh-logistic.ru");
	Иначе
		МассивПолучателей.Добавить("sklad1@strizh-logistic.ru");
	КонецЕсли;
	
	ТемаПисьма = "АПП " + Контрагент + " от " + Формат(ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy");
	ТекстПисьма = СтрСоединить(МассивСтрок, Символы.ПС);
	
	lem.ОтправитьСообщение(МассивПолучателей, ТемаПисьма, ТекстПисьма,,,, ТипТекстаПочтовогоСообщения.HTML);
	
КонецПроцедуры
//Асеев 18.02.2022 (Письмо с расхождениями по Оперативной приемке)<<<

Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	Если ОперативнаяПриемкаЗаказов Тогда  // новая логика
		
		
		
		// ----------- регистр СтатусыСкладскогоУчета

		// собираем таблицу движений
		
		
		Если ШКПоМестам Тогда   // ---------------- ШК по Местам
			
			ЗаказыТЗ = Заказы.Выгрузить();
			ЗаказыТЗ.Свернуть("Заказ,ТерминалДоставки,ЕстьНаСканере");
			
			Для Каждого ТекСтрокаЗаказы Из ЗаказыТЗ Цикл
				Если ТекСтрокаЗаказы.ЕстьНаСканере Тогда
					
					Если Не ЗначениеЗаполнено(ТекСтрокаЗаказы.Заказ) Тогда
						Продолжить;
					КонецеСли;
					
		            Движение = Движения.СтатусыСкладскогоУчета.Добавить();
		            Движение.Период = Дата;
		            Движение.Заказ = ТекСтрокаЗаказы.Заказ;
		            Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходПроверен;
		            Движение.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
		            Движение.ТерминалОбработки = ТекСтрокаЗаказы.ТерминалДоставки;
		                     
		       
		            Движение = Движения.СтатусыСкладскогоУчета.Добавить();
		            Движение.Период = Дата + 1;
		            Движение.Заказ = ТекСтрокаЗаказы.Заказ;
		            Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходПодтвержден;
		            Движение.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
					Движение.ТерминалОбработки = ТекСтрокаЗаказы.ТерминалДоставки;
					
				КонецЕсли;			
		    КонецЦикла;
				
		Иначе
			
			Для Каждого ТекСтрокаЗаказы Из Заказы Цикл
				Если ТекСтрокаЗаказы.ЕстьНаСканере Тогда
					
					Если Не ЗначениеЗаполнено(ТекСтрокаЗаказы.Заказ) Тогда
						Продолжить;
					КонецеСли;
					
		            Движение = Движения.СтатусыСкладскогоУчета.Добавить();
		            Движение.Период = Дата;
		            Движение.Заказ = ТекСтрокаЗаказы.Заказ;
		            Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходПроверен;
		            Движение.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
		            Движение.ТерминалОбработки = ТекСтрокаЗаказы.ТерминалДоставки;
		                     
		       
		            Движение = Движения.СтатусыСкладскогоУчета.Добавить();
		            Движение.Период = Дата + 1;
		            Движение.Заказ = ТекСтрокаЗаказы.Заказ;
		            Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходПодтвержден;
		            Движение.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
					Движение.ТерминалОбработки = ТекСтрокаЗаказы.ТерминалДоставки;
					
				КонецЕсли;			
		    КонецЦикла;
						
		КонецЕсли;
		
		
		
		
		
		// Если это корректировка, получим существующие движения по АПП
		Если ЗначениеЗаполнено(Основание) Тогда
			
			ТЗ_Движения = новый ТаблицаЗначений;
			ТЗ_Движения.Колонки.Добавить("Заказ", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
			ТЗ_Движения.Колонки.Добавить("СтатусСкладскогоУчета", Новый ОписаниеТипов("СправочникСсылка.СтатусыСкладскогоУчета"));
			ТЗ_Движения.Колонки.Добавить("ТерминалОбработки", Новый ОписаниеТипов("СправочникСсылка.РегиональныеТерминалы"));
			
			Для каждого Стр Из Движения.СтатусыСкладскогоУчета Цикл
				НСтр = ТЗ_Движения.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, Стр);			
			КонецЦикла;
					
			// Получим таблицу существующих движений по АПП
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	ТЗ_Движения.Заказ КАК Заказ,
			                      |	ТЗ_Движения.СтатусСкладскогоУчета КАК Статус,
			                      |	ТЗ_Движения.ТерминалОбработки КАК ТерминалОбработки
			                      |ПОМЕСТИТЬ ВТ
			                      |ИЗ
			                      |	&ТЗ_Движения КАК ТЗ_Движения
			                      |;
			                      |
			                      |////////////////////////////////////////////////////////////////////////////////
			                      |ВЫБРАТЬ
			                      |	СтатусыСкладскогоУчета.Период КАК Период,
			                      |	СтатусыСкладскогоУчета.Регистратор КАК Регистратор,
			                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
			                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
			                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
			                      |	СтатусыСкладскогоУчета.ТерминалОбработки КАК ТерминалОбработки
			                      |ПОМЕСТИТЬ ВТ_Регистр
			                      |ИЗ
			                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
			                      |ГДЕ
			                      |	СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ФактическийПриходЗаказовНаСклад
			                      |	И (СтатусыСкладскогоУчета.Регистратор.Ссылка = &Основание
			                      |			ИЛИ СтатусыСкладскогоУчета.Регистратор.Основание = &Основание)
			                      |	И СтатусыСкладскогоУчета.Регистратор.Ссылка <> &Ссылка
			                      |	И СтатусыСкладскогоУчета.СтатусСкладскогоУчета <> ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ОтменаСтатуса)
			                      |
			                      |СГРУППИРОВАТЬ ПО
			                      |	СтатусыСкладскогоУчета.Период,
			                      |	СтатусыСкладскогоУчета.Регистратор,
			                      |	СтатусыСкладскогоУчета.Заказ,
			                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
			                      |	СтатусыСкладскогоУчета.ТипЗаказа,
			                      |	СтатусыСкладскогоУчета.ТерминалОбработки
			                      |;
			                      |
			                      |////////////////////////////////////////////////////////////////////////////////
			                      |ВЫБРАТЬ
			                      |	ВТ.Заказ КАК Заказ,
			                      |	ВТ.Статус КАК Статус,
			                      |	ВТ.ТерминалОбработки КАК ТерминалОбработки,
			                      |	ВТ_Регистр.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета_Рег,
			                      |	ВТ_Регистр.ТерминалОбработки КАК ТерминалОбработки_Рег,
			                      |	ВТ_Регистр.Заказ КАК Заказ_Рег,
			                      |	ВТ_Регистр.Регистратор КАК Регистратор_Рег
			                      |ИЗ
			                      |	ВТ КАК ВТ
			                      |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Регистр КАК ВТ_Регистр
			                      |		ПО ВТ.Заказ = ВТ_Регистр.Заказ
			                      |			И ВТ.Статус = ВТ_Регистр.СтатусСкладскогоУчета");
			Запрос.УстановитьПараметр("Основание", Основание);
			Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
			Запрос.УстановитьПараметр("ТЗ_Движения", ТЗ_Движения);
			
			РезТЗ = Запрос.Выполнить().Выгрузить();		
			МассивКУдалению = Новый Массив;
			ТЗОтмена = Новый ТаблицаЗначений;
			ТЗОтмена.Колонки.Добавить("Заказ");
			ТЗОтмена.Колонки.Добавить("Регистратор");
			
			Для каждого Стр Из РезТЗ Цикл			
				Если ЗначениеЗаполнено(Стр.Заказ_Рег) И НЕ ЗначениеЗаполнено(Стр.Заказ) Тогда // отмена статуса		
					НСтр = ТЗОтмена.Добавить();
					НСтр.Заказ = Стр.Заказ_Рег;
					Нстр.Регистратор = Стр.Регистратор_Рег;
					
					//Набор = РегистрыСведений.СтатусыСкладскогоУчета.СоздатьНаборЗаписей();	
					//Набор.Отбор.Регистратор.Установить(Стр.Регистратор_Рег);
					//Набор.Прочитать();
					//Для каждого Запись Из Набор Цикл
					//	Если Запись.Заказ = Стр.Заказ_Рег Тогда
					//		Запись.СтатусСкладскогоУчета = справочники.СтатусыСкладскогоУчета.ОтменаСтатуса;	
					//	КонецЕсли;
					//КонецЦикла;
					//Набор.Записать();		
				ИначеЕсли ЗначениеЗаполнено(Стр.Заказ_Рег) И ЗначениеЗаполнено(Стр.Заказ) Тогда	// движение уже есть
					МассивКУдалению.Добавить(Стр);		
				КонецЕсли;				
			КонецЦикла;
			
			
			// Обработаем отмену статуса
			ТЗОтмена.Свернуть("Заказ,Регистратор");	
			
			ТЗРегистраторОтмена = ТЗОтмена.Скопировать();
			ТЗРегистраторОтмена.Свернуть("Регистратор");
					
			Для каждого СтрРегистратор Из ТЗРегистраторОтмена Цикл				
				НаборОтмена = РегистрыСведений.СтатусыСкладскогоУчета.СоздатьНаборЗаписей();
				НаборОтмена.Отбор.Регистратор.Установить(СтрРегистратор.Регистратор);
				НаборОтмена.Прочитать();
				Для каждого Запись Из НаборОтмена Цикл
					НайОтм = ТЗОтмена.НайтиСтроки(Новый Структура("Заказ", Запись.Заказ));
					Если НайОтм.Количество() Тогда
						Запись.СтатусСкладскогоУчета = справочники.СтатусыСкладскогоУчета.ОтменаСтатуса;	
					КонецЕсли;
				КонецЦикла;
				НаборОтмена.Записать();				
			КонецЦикла;
			
			
					
			// чистим движения от уже существующих
			МассивУ = Новый Массив;
			Для каждого СтрМас Из МассивКУдалению Цикл	
				Для каждого Ст Из Движения.СтатусыСкладскогоУчета Цикл			
					Если СтрМас.Заказ = Ст.Заказ Тогда	
						МассивУ.Добавить(Ст);					
					КонецЕсли;
				КонецЦикла;							
			КонецЦикла;
			
			
			Для каждого СтрМасУ Из МассивУ Цикл
				Попытка
					Движения.СтатусыСкладскогоУчета.Удалить(СтрМасУ);	
				Исключение			
				КонецПопытки;							
			КонецЦикла;			
			
			
			
			Для каждого Стр Из Движения.СтатусыСкладскогоУчета Цикл
				Стр.Регистратор = ЭтотОбъект.Ссылка;		
			КонецЦикла;	
			Движения.СтатусыСкладскогоУчета.Записывать = Истина;
				
			
			
			//// ---------- регистр ОстаткиЗаказов
			//Движения.ОстаткиЗаказов.Очистить();
			//Движения.ОстаткиЗаказов.Записывать = Истина;
			//
			//// сторнируем существующие движения
			//ЗапросСторно = Новый Запрос("ВЫБРАТЬ
			//                            |	ОстаткиЗаказов.ТерминалПриема КАК ТерминалПриема,
			//                            |	ОстаткиЗаказов.ТерминалДоставки КАК ТерминалДоставки,
			//                            |	ОстаткиЗаказов.Регистратор КАК Регистратор,
			//                            |	ОстаткиЗаказов.Организация КАК Организация,
			//                            |	ОстаткиЗаказов.Склад КАК Склад,
			//                            |	ОстаткиЗаказов.Заказ КАК Заказ,
			//                            |	ОстаткиЗаказов.Номенклатура КАК Номенклатура,
			//                            |	ОстаткиЗаказов.Период КАК Период,
			//                            |	ОстаткиЗаказов.ТипЗаказа КАК ТипЗаказа,
			//                            |	ВЫБОР
			//                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			//                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.Количество, 0)
			//                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.Количество, 0)
			//                            |	КОНЕЦ КАК Количество,
			//                            |	ВЫБОР
			//                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			//                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.СуммаПрод, 0)
			//                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.СуммаПрод, 0)
			//                            |	КОНЕЦ КАК СуммаПрод,
			//                            |	ВЫБОР
			//                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			//                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.СуммаЗакуп, 0)
			//                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.СуммаЗакуп, 0)
			//                            |	КОНЕЦ КАК СуммаЗакуп
			//                            |ИЗ
			//                            |	РегистрНакопления.ОстаткиЗаказов КАК ОстаткиЗаказов
			//                            |ГДЕ
			//                            |	ОстаткиЗаказов.Регистратор ССЫЛКА Документ.ФактическийПриходЗаказовНаСклад
			//                            |	И (ОстаткиЗаказов.Регистратор.Ссылка = &Основание
			//                            |			ИЛИ ОстаткиЗаказов.Регистратор.Основание = &Основание)
			//                            |	И ОстаткиЗаказов.Регистратор.Ссылка <> &Ссылка
			//                            |
			//                            |СГРУППИРОВАТЬ ПО
			//                            |	ОстаткиЗаказов.Номенклатура,
			//                            |	ОстаткиЗаказов.ТерминалДоставки,
			//                            |	ОстаткиЗаказов.ТерминалПриема,
			//                            |	ОстаткиЗаказов.Организация,
			//                            |	ОстаткиЗаказов.Регистратор,
			//                            |	ОстаткиЗаказов.Склад,
			//                            |	ОстаткиЗаказов.Заказ,
			//                            |	ОстаткиЗаказов.Период,
			//                            |	ОстаткиЗаказов.ТипЗаказа,
			//                            |	ВЫБОР
			//                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			//                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.Количество, 0)
			//                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.Количество, 0)
			//                            |	КОНЕЦ,
			//                            |	ВЫБОР
			//                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			//                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.СуммаПрод, 0)
			//                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.СуммаПрод, 0)
			//                            |	КОНЕЦ,
			//                            |	ВЫБОР
			//                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			//                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.СуммаЗакуп, 0)
			//                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.СуммаЗакуп, 0)
			//                            |	КОНЕЦ");
			//ЗапросСторно.УстановитьПараметр("Основание", Основание);
			//ЗапросСторно.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
			//РезСторноТЗ = ЗапросСторно.Выполнить().Выгрузить();	
			//
			//Для каждого Ст Из РезСторноТЗ Цикл	
			//	Если Ст.Количество <> 0 Тогда			
			//		НСтр = Движения.ОстаткиЗаказов.ДобавитьРасход();	
			//		ЗаполнитьЗначенияСвойств(НСтр, Ст);		
			//	КонецЕсли;		
			//КонецЦикла;
			
		КонецЕсли; // -- если НЕ корректировка
		
		
		
		
		
		//// ----------- РН ОстаткиЗаказов
		//Если  Тогда // ШК по местам
		//
		//	
		//
		//Иначе // без ШК по местам
			
			Запрос = Новый Запрос(
				    "ВЫБРАТЬ
				    |	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
				    |	ПоступлениеТоваровУслугТовары.Количество КАК Количество,
				    |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ КАК Заказ,
				    |	ПоступлениеТоваровУслугТовары.Ссылка.СкладОрдер КАК СкладОрдер,
				    |	ПоступлениеТоваровУслугТовары.Ссылка.СуммаДокумента КАК СуммаДокумента,
				    |	УчетОстатковПоКонтрагентам.УчитыватьОстатки КАК УчитыватьОстатки,
				    |	ПоступлениеТоваровУслугТовары.Сумма КАК Сумма
				    |ПОМЕСТИТЬ ВТ_Товары
				    |ИЗ
				    |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
				    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
				    |		ПО ПоступлениеТоваровУслугТовары.Ссылка.Номер = ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер
				    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
				    |		ПО ПоступлениеТоваровУслугТовары.Ссылка.Контрагент = УчетОстатковПоКонтрагентам.Контрагент
				    |ГДЕ
				    |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
				    |	И НЕ ПоступлениеТоваровУслугТовары.Номенклатура.Артикул В
				    |				(ВЫБРАТЬ
				    |					УслугиПоЗаказам.Артикул
				    |				ИЗ
				    |					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
				    |				ГДЕ
				    |					НЕ УслугиПоЗаказам.ПометкаУдаления)
				    |	И ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканере
				    |	И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков
				    |
				    |ОБЪЕДИНИТЬ ВСЕ
				    |
				    |ВЫБРАТЬ
				    |	ПоступлениеТоваровУслугПодарочныеПозиции.Номенклатура,
				    |	ПоступлениеТоваровУслугПодарочныеПозиции.Количество,
				    |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ,
				    |	NULL,
				    |	NULL,
				    |	УчетОстатковПоКонтрагентам.УчитыватьОстатки,
				    |	ПоступлениеТоваровУслугПодарочныеПозиции.Сумма
				    |ИЗ
				    |	Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
				    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
				    |		ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер = ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер
				    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
				    |		ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент = УчетОстатковПоКонтрагентам.Контрагент
				    |ГДЕ
				    |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
				    |	И НЕ ПоступлениеТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
				    |				(ВЫБРАТЬ
				    |					УслугиПоЗаказам.Артикул
				    |				ИЗ
				    |					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
				    |				ГДЕ
				    |					НЕ УслугиПоЗаказам.ПометкаУдаления)
				    |	И ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканере
				    |	И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков
				    |;
				    |
				    |////////////////////////////////////////////////////////////////////////////////
				    |ВЫБРАТЬ
				    |	ВТ_Товары.Заказ КАК Заказ
				    |ПОМЕСТИТЬ ВТ_Заказы
				    |ИЗ
				    |	ВТ_Товары КАК ВТ_Товары
				    |
				    |СГРУППИРОВАТЬ ПО
				    |	ВТ_Товары.Заказ
				    |;
				    |
				    |////////////////////////////////////////////////////////////////////////////////
				    |ВЫБРАТЬ
				    |	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
				    |	ВложенныйЗапрос.Номер КАК Номер
				    |ПОМЕСТИТЬ ВТ_РеализацияКоличество
				    |ИЗ
				    |	(ВЫБРАТЬ
				    |		РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
				    |		РеализацияТоваровУслугТовары.Количество КАК Количество
				    |	ИЗ
				    |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
				    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
				    |			ПО РеализацияТоваровУслугТовары.Ссылка = ВТ_Заказы.Заказ
				    |	ГДЕ
				    |		НЕ РеализацияТоваровУслугТовары.Номенклатура.Артикул В
				    |					(ВЫБРАТЬ
				    |						УслугиПоЗаказам.Артикул
				    |					ИЗ
				    |						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
				    |	
				    |	ОБЪЕДИНИТЬ ВСЕ
				    |	
				    |	ВЫБРАТЬ
				    |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
				    |		РеализацияТоваровУслугПодарочныеПозиции.Количество
				    |	ИЗ
				    |		Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
				    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
				    |			ПО РеализацияТоваровУслугПодарочныеПозиции.Ссылка = ВТ_Заказы.Заказ
				    |	ГДЕ
				    |		НЕ РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
				    |					(ВЫБРАТЬ
				    |						УслугиПоЗаказам.Артикул
				    |					ИЗ
				    |						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)) КАК ВложенныйЗапрос
				    |
				    |СГРУППИРОВАТЬ ПО
				    |	ВложенныйЗапрос.Номер
				    |;
				    |
				    |////////////////////////////////////////////////////////////////////////////////
				    |ВЫБРАТЬ
				    |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер КАК Номер,
				    |	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество
				    |ПОМЕСТИТЬ ВТ_ВозвратПокупателяюКоличество
				    |ИЗ
				    |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
				    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
				    |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = ВТ_Заказы.Заказ.Номер
				    |ГДЕ
				    |	НЕ ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул В
				    |				(ВЫБРАТЬ
				    |					УслугиПоЗаказам.Артикул
				    |				ИЗ
				    |					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
				    |
				    |СГРУППИРОВАТЬ ПО
				    |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
				    |;
				    |
				    |////////////////////////////////////////////////////////////////////////////////
				    |ВЫБРАТЬ
				    |	новаМестнаяДоставка.Номер КАК Номер
				    |ПОМЕСТИТЬ новаМестнаяДоставка
				    |ИЗ
				    |	БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
				    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
				    |		ПО новаМестнаяДоставка.Номер = ВТ_Заказы.Заказ.Номер
				    |ГДЕ
				    |	НЕ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз
				    |;
				    |
				    |////////////////////////////////////////////////////////////////////////////////
				    |ВЫБРАТЬ
				    |	РеализацияТоваровУслуг.Ссылка.Номер КАК РеализацияНомер,
				    |	ВТ_ВозвратПокупателяюКоличество.Номер КАК ВозвратНомер,
				    |	ЕСТЬNULL(ВТ_ВозвратПокупателяюКоличество.Количество, 0) КАК ВозвратКоличество,
				    |	ЕСТЬNULL(ВТ_РеализацияКоличество.Количество, 0) КАК РеализацияКоличество,
				    |	новаМестнаяДоставка.Номер КАК МестнаяДоставкаНомер
				    |ПОМЕСТИТЬ ВТ_Итог
				    |ИЗ
				    |	ВТ_Заказы КАК ВТ_Заказы
				    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
				    |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеализацияКоличество КАК ВТ_РеализацияКоличество
				    |			ПО РеализацияТоваровУслуг.Номер = ВТ_РеализацияКоличество.Номер
				    |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВозвратПокупателяюКоличество КАК ВТ_ВозвратПокупателяюКоличество
				    |			ПО РеализацияТоваровУслуг.Номер = ВТ_ВозвратПокупателяюКоличество.Номер
				    |			ЛЕВОЕ СОЕДИНЕНИЕ новаМестнаяДоставка КАК новаМестнаяДоставка
				    |			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
				    |		ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
				    |;
				    |
				    |////////////////////////////////////////////////////////////////////////////////
				    |ВЫБРАТЬ
				    |	ВЫБОР
				    |		КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL
				    |			ТОГДА ВЫБОР
				    |					КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL
				    |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
				    |					ИНАЧЕ ВЫБОР
				    |							КОГДА ВТ_Итог.РеализацияКоличество = 0
				    |									И ВТ_Итог.ВозвратКоличество > 0
				    |								ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
				    |							ИНАЧЕ ВЫБОР
				    |									КОГДА ВТ_Итог.РеализацияКоличество > 0
				    |											И ВТ_Итог.ВозвратКоличество > 0
				    |										ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
				    |									ИНАЧЕ НЕОПРЕДЕЛЕНО
				    |								КОНЕЦ
				    |						КОНЕЦ
				    |				КОНЕЦ
				    |		ИНАЧЕ ВЫБОР
				    |				КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL
				    |					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
				    |				ИНАЧЕ ВЫБОР
				    |						КОГДА ВТ_Итог.РеализацияКоличество = 0
				    |								И ВТ_Итог.ВозвратКоличество > 0
				    |							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
				    |						ИНАЧЕ ВЫБОР
				    |								КОГДА ВТ_Итог.РеализацияКоличество > 0
				    |										И ВТ_Итог.ВозвратКоличество > 0
				    |									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
				    |								ИНАЧЕ НЕОПРЕДЕЛЕНО
				    |							КОНЕЦ
				    |					КОНЕЦ
				    |			КОНЕЦ
				    |	КОНЕЦ КАК ТипЗаказа,
				    |	ВТ_Итог.РеализацияНомер КАК НомерЗаказа
				    |ПОМЕСТИТЬ ВТ_ТипыЗаказов
				    |ИЗ
				    |	ВТ_Итог КАК ВТ_Итог
				    |
				    |СГРУППИРОВАТЬ ПО
				    |	ВЫБОР
				    |		КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL
				    |			ТОГДА ВЫБОР
				    |					КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL
				    |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
				    |					ИНАЧЕ ВЫБОР
				    |							КОГДА ВТ_Итог.РеализацияКоличество = 0
				    |									И ВТ_Итог.ВозвратКоличество > 0
				    |								ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
				    |							ИНАЧЕ ВЫБОР
				    |									КОГДА ВТ_Итог.РеализацияКоличество > 0
				    |											И ВТ_Итог.ВозвратКоличество > 0
				    |										ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
				    |									ИНАЧЕ НЕОПРЕДЕЛЕНО
				    |								КОНЕЦ
				    |						КОНЕЦ
				    |				КОНЕЦ
				    |		ИНАЧЕ ВЫБОР
				    |				КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL
				    |					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
				    |				ИНАЧЕ ВЫБОР
				    |						КОГДА ВТ_Итог.РеализацияКоличество = 0
				    |								И ВТ_Итог.ВозвратКоличество > 0
				    |							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
				    |						ИНАЧЕ ВЫБОР
				    |								КОГДА ВТ_Итог.РеализацияКоличество > 0
				    |										И ВТ_Итог.ВозвратКоличество > 0
				    |									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
				    |								ИНАЧЕ НЕОПРЕДЕЛЕНО
				    |							КОНЕЦ
				    |					КОНЕЦ
				    |			КОНЕЦ
				    |	КОНЕЦ,
				    |	ВТ_Итог.РеализацияНомер
				    |;
				    |
				    |////////////////////////////////////////////////////////////////////////////////
				    |ВЫБРАТЬ
				    |	ВТ_Товары.Номенклатура КАК Номенклатура,
				    |	ВТ_Товары.Количество КАК Количество,
				    |	ВТ_Товары.Заказ КАК Заказ,
				    |	ВТ_Товары.СкладОрдер КАК СкладОрдер,
				    |	ВТ_Товары.СуммаДокумента КАК СуммаДокумента,
				    |	ВТ_Товары.УчитыватьОстатки КАК УчитыватьОстатки,
				    |	ВТ_Товары.Сумма КАК Сумма,
				    |	ВТ_ТипыЗаказов.ТипЗаказа КАК ТипЗаказа,
				    |	ВТ_Товары.Заказ.ТерминалПриема КАК ЗаказТерминалПриема,
				    |	ВТ_Товары.Заказ.ТерминалДоставки КАК ЗаказТерминалДоставки
				    |ИЗ
				    |	ВТ_Товары КАК ВТ_Товары
				    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТипыЗаказов КАК ВТ_ТипыЗаказов
				    |		ПО ВТ_Товары.Заказ.Номер = ВТ_ТипыЗаказов.НомерЗаказа");
		    Запрос.УстановитьПараметр("Ссылка", Ссылка);
			Запрос.УстановитьПараметр("ДатаНачалаУчетаОстатков",Дата);
		    Товары = Запрос.Выполнить().Выгрузить();
		    
		    Если Товары.Количество() > 0 Тогда
		    		
		    	Для Каждого Товар Из Товары Цикл 
		    		Если Товар.УчитыватьОстатки Тогда
		    			Если ЗначениеЗаполнено(Товар.СкладОрдер) Тогда 
							Движение = Движения.ОстаткиЗаказов.ДобавитьПриход();
							Движение.Период       = ДатаНачалаВыборки;
							Движение.Заказ        = Товар.Заказ;
							Движение.Номенклатура = Товар.Номенклатура;
							Движение.Склад        = Товар.СкладОрдер;
							Движение.Организация  = Товар.Заказ.Организация;
							Движение.Количество   = Товар.Количество;
							Движение.СуммаПрод    = Товар.Сумма;
							Движение.ТипЗаказа    = Товар.ТипЗаказа;
							Движение.ТерминалПриема   = Товар.ЗаказТерминалПриема;
							Движение.ТерминалДоставки = Товар.ЗаказТерминалДоставки;
		    			КонецЕсли;
		    		КонецЕсли;
				КонецЦикла;
				
		    КонецЕсли;
		
			
		
		//КонецЕсли;

		
		Движения.ОстаткиЗаказов.Записать();
		Движения.СтатусыСкладскогоУчета.Записать();
		
		// Якурнов 05.10.2018 15:06:13 ПроверкаИСозданиеДокументаОЗОНПриёмПосылок
		ПроверкаИСозданиеДокументаОЗОНПриёмПосылок();
		
		//Асеев 18.02.2022 (Письмо с расхождениями по Оперативной приемке)>>>
		СформироватьПисьмоСРасхождениямиПоОперативнойПриемке();
		//Асеев 18.02.2022 (Письмо с расхождениями по Оперативной приемке)<<<
		
	Иначе // старая логика		
		
		// Задача № 3021	
		ЗаказыСВозвратнымСтатусом = РаботаСВозвратамиСервер.СписокЗаказовСВозвратнымиСтатусами(Дата, Заказы.ВыгрузитьКолонку("Заказ"));	
		// Задача № 3021

		
		// регистр СтатусыСкладскогоУчета
	    Движения.СтатусыСкладскогоУчета.Записывать = Истина;
	    Движения.СтатусыСкладскогоУчета.Очистить();
	    Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
	    
		Для Каждого ТекСтрокаЗаказы Из Заказы Цикл
			
			// Задача № 3021
			Если Не ЗаказыСВозвратнымСтатусом.Найти(ТекСтрокаЗаказы.Заказ) = Неопределено Тогда
				// Если есть возвратный статус на заказ, то мы его пропускаем
				Продолжить;
			КонецЕсли;	
			// Задача № 3021
			
	        ////Серегин М.В. 11.08.2015 16:49:06 старый код
	        //Если ТекСтрокаЗаказы.ЕстьВПриходе И ТекСтрокаЗаказы.ЕстьВСистеме И ТекСтрокаЗаказы.ЕстьНаСканере Тогда
	        //Серегин М.В. 11.08.2015 16:49:17 новый
	        Если ТекСтрокаЗаказы.ЕстьВПриходеЗаполнено И ТекСтрокаЗаказы.ЕстьНаСканереЗаполнено Тогда
	            
				Если Не ЗначениеЗаполнено(ТекСтрокаЗаказы.Заказ) Тогда
					Продолжить;
				КонецеСли;	
	            Движение = Движения.СтатусыСкладскогоУчета.Добавить();
	            Движение.Период = Дата;
	            Движение.Заказ = ТекСтрокаЗаказы.Заказ;
	            Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходПроверен;
	            Движение.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
	            
	            //Админка+
				//СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(ТекСтрокаЗаказы.Заказ.Номер), "ЧГ=") + ",211,'Фактический приход'";
				//Если lem.СохранитьСтатус(ТекСтрокаЗаказы.Заказ, 211, Ссылка) Тогда
				//    Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
				//КонецеСли;
	            //Админка-
	            
	            //Серегин М.В. 11.08.2015 16:50:28 добавил
	            Если ТекСтрокаЗаказы.ЕстьВПриходеЗаполнено И ТекСтрокаЗаказы.ЕстьВСистемеЗаполнено И ТекСтрокаЗаказы.ЕстьНаСканереЗаполнено Тогда
	                
	                Если Не ЗначениеЗаполнено(ТекСтрокаЗаказы.Заказ) Тогда
	                    Продолжить;
	                КонецеСли;	
	                Движение = Движения.СтатусыСкладскогоУчета.Добавить();
	                Движение.Период = Дата+1;
	                Движение.Заказ = ТекСтрокаЗаказы.Заказ;
	                Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходПодтвержден;
	                Движение.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
	            КонецЕсли;
	            
	        ИначеЕсли ТекСтрокаЗаказы.ЕстьНаСканереЗаполнено Тогда
	            
	            //Если не заполнен заказ в таб части ищем в системе заказ по внешнему номеру
	            Если НЕ ЗначениеЗаполнено(ТекСтрокаЗаказы.Заказ) Тогда  
	                Реализация = Документы.РеализацияТоваровУслуг.НайтиПоРеквизиту("НомерВнешнегоЗаказа",ТекСтрокаЗаказы.НомерЗаказа);
	            КонецЕсли;
	            //Если заполнен заказ в таб части или найдена реализация по внешнему номеру делаем движение, иначен нет
				Если ЗначениеЗаполнено(Реализация) ИЛИ ЗначениеЗаполнено(ТекСтрокаЗаказы.Заказ)Тогда
	                Движение = Движения.СтатусыСкладскогоУчета.Добавить();
	                Движение.Период = Дата;
					если ЗначениеЗаполнено(ТекСтрокаЗаказы.Заказ) Тогда
	                	Движение.Заказ = ТекСтрокаЗаказы.Заказ;
					ИначеЕсли ЗначениеЗаполнено(Реализация) Тогда
						Движение.Заказ = Реализация;
					КонецеСли;	
	                Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходЕстьНаСканере;
	                Движение.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
	            КонецЕсли;
	            
	        КонецЕсли;
	    КонецЦикла;

		ВводОстатковПоЗаказам(); // РН ОстаткиЗаказов
		
		Движения.СтатусыСкладскогоУчета.Записать();			
		
	КонецЕсли;
	
		
    
	
КонецПроцедуры

// Якурнов 05.10.2018 11:47:13
Процедура ПроверкаИСозданиеДокументаОЗОНПриёмПосылок()
	
	//Если АПП создано по API ОЗОН то продолжим
	Если НЕ Ссылка.АПП.Основание = Перечисления.ТипыЗагрузкиДанных.WEBСервисOZON Тогда
		Возврат;
	КонецЕсли;	
	
	НайденыеОбъекты = Документы.oz_ПриёмПосылок.НайтиПоРеквизиту("ФактическийПриходЗаказовНаСклад",Ссылка);
	
	КоличествоСтрокДобавлено = 0;
	
	Если НЕ ЗначениеЗаполнено(НайденыеОбъекты) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДополнительныеПараметрыПриходЗаказовНаСклад.oz_ШтрихкодПеревозки КАК oz_ШтрихкодПеревозки
		|ИЗ
		|	РегистрСведений.ДополнительныеПараметрыПриходЗаказовНаСклад КАК ДополнительныеПараметрыПриходЗаказовНаСклад
		|ГДЕ
		|	ДополнительныеПараметрыПриходЗаказовНаСклад.ПриходЗаказовНаСклад = &ПриходЗаказовНаСклад";
		
		Запрос.УстановитьПараметр("ПриходЗаказовНаСклад", Ссылка.АПП);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			ШтрихкодПеревозки = Выборка.oz_ШтрихкодПеревозки;
		Иначе
			Возврат;
		КонецЕсли;
		
		//Создаем Документ ОЗОН;
		
		ДокументОЗОН = Документы.oz_ПриёмПосылок.СоздатьДокумент();
		ДокументОЗОН.Дата = ТекущаяДата();
	    ДокументОЗОН.ФактическийПриходЗаказовНаСклад  = Ссылка;
	    ДокументОЗОН.ШтрихкодПеревозки = ШтрихкодПеревозки;
	   		
		Для каждого Стр Из Заказы Цикл
			Если Не Стр.ЕстьНаСканере Тогда
				Продолжить;
			КонецеСли;	
			КоличествоСтрокДобавлено = КоличествоСтрокДобавлено + 1;
			Строка = ДокументОЗОН.Заказы.Добавить();
			Строка.ШтрихкодПосылки = Стр.Штрихкод;
			Строка.Ожидается = Истина;
			Строка.Заказ = Стр.Заказ;
			Если ЗначениеЗаполнено(Строка.Заказ) Тогда			
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	ДополнительныеПараметрыЗаказа.ШтрихкодOZON КАК ШтрихкодOZON
				|ИЗ
				|	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
				|ГДЕ
				|	ДополнительныеПараметрыЗаказа.Заказ = &Заказ";
				
				Запрос.УстановитьПараметр("Заказ", Строка.Заказ);
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				Если Выборка.Следующий() Тогда
					Строка.ШтрихкодПосылки = Выборка.ШтрихкодOZON;
					Строка.Поступило = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		ДокументОЗОН = НайденыеОбъекты.ПолучитьОбъект();
		ДокументОЗОН.Заказы.Очистить();
		Для каждого Стр Из Заказы Цикл
			Если Не Стр.ЕстьНаСканере Тогда
				Продолжить;
			КонецеСли;	
			
			КоличествоСтрокДобавлено = КоличествоСтрокДобавлено + 1;
			Строка = ДокументОЗОН.Заказы.Добавить();
			Строка.ШтрихкодПосылки = Стр.Штрихкод;
			Строка.Ожидается = Истина;
			Строка.Заказ = Стр.Заказ;
			Если ЗначениеЗаполнено(Строка.Заказ) Тогда			
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	ДополнительныеПараметрыЗаказа.ШтрихкодOZON КАК ШтрихкодOZON
				|ИЗ
				|	РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
				|ГДЕ
				|	ДополнительныеПараметрыЗаказа.Заказ = &Заказ";
				
				Запрос.УстановитьПараметр("Заказ", Строка.Заказ);
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				Если Выборка.Следующий() Тогда
					Строка.ШтрихкодПосылки = Выборка.ШтрихкодOZON;
					Строка.Поступило = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	Попытка
		Если КоличествоСтрокДобавлено > 0 Тогда
			ДокументОЗОН.Записать(РежимЗаписиДокумента.Проведение);    // временно добавлено автоматическое проведение
		КонецеСли;	
	Исключение
		
	КонецПопытки;


КонецПроцедуры


//Процедура ОбработкаПроведенияПоНовойЛогике()
//	
//	

//	// ----------- регистр СтатусыСкладскогоУчета

//	
//	
//		
//	// собираем таблицу движений
//	Для Каждого ТекСтрокаЗаказы Из Заказы Цикл
//		
//		Если ТекСтрокаЗаказы.ЕстьНаСканере Тогда
//            
//			Если Не ЗначениеЗаполнено(ТекСтрокаЗаказы.Заказ) Тогда
//				Продолжить;
//			КонецеСли;
//			
//            Движение = Движения.СтатусыСкладскогоУчета.Добавить();
//            Движение.Период = Дата;
//            Движение.Заказ = ТекСтрокаЗаказы.Заказ;
//            Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходПроверен;
//            Движение.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
//            Движение.ТерминалОбработки = ТекСтрокаЗаказы.ТерминалДоставки;
//                     
//       
//            Движение = Движения.СтатусыСкладскогоУчета.Добавить();
//            Движение.Период = Дата + 1;
//            Движение.Заказ = ТекСтрокаЗаказы.Заказ;
//            Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходПодтвержден;
//            Движение.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
//			Движение.ТерминалОбработки = ТекСтрокаЗаказы.ТерминалДоставки;
//			
//            
//		//ИначеЕсли ТекСтрокаЗаказы.ЕстьНаСканереЗаполнено Тогда
//		//    
//		//    //Если не заполнен заказ в таб части ищем в системе заказ по внешнему номеру
//		//    Если НЕ ЗначениеЗаполнено(ТекСтрокаЗаказы.Заказ) Тогда  
//		//        Реализация = Документы.РеализацияТоваровУслуг.НайтиПоРеквизиту("НомерВнешнегоЗаказа",ТекСтрокаЗаказы.НомерЗаказа);
//		//    КонецЕсли;
//		//    //Если заполнен заказ в таб части или найдена реализация по внешнему номеру делаем движение, иначен нет
//		//	Если ЗначениеЗаполнено(Реализация) ИЛИ ЗначениеЗаполнено(ТекСтрокаЗаказы.Заказ)Тогда
//		//        Движение = Движения.СтатусыСкладскогоУчета.Добавить();
//		//        Движение.Период = Дата;
//		//		если ЗначениеЗаполнено(ТекСтрокаЗаказы.Заказ) Тогда
//		//        	Движение.Заказ = ТекСтрокаЗаказы.Заказ;
//		//		ИначеЕсли ЗначениеЗаполнено(Реализация) Тогда
//		//			Движение.Заказ = Реализация;
//		//		КонецеСли;	
//		//        Движение.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходЕстьНаСканере;
//		//        Движение.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
//		//    КонецЕсли;
//            
//		КонецЕсли;
//	
//    КонецЦикла;
//	
//	
//	// Если это корректировка, получим существующие движения по АПП
//	Если ЗначениеЗаполнено(Основание) Тогда
//		
//		ТЗ_Движения = новый ТаблицаЗначений;
//		ТЗ_Движения.Колонки.Добавить("Заказ", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
//		ТЗ_Движения.Колонки.Добавить("СтатусСкладскогоУчета", Новый ОписаниеТипов("СправочникСсылка.СтатусыСкладскогоУчета"));
//		ТЗ_Движения.Колонки.Добавить("ТерминалОбработки", Новый ОписаниеТипов("СправочникСсылка.РегиональныеТерминалы"));
//		
//		Для каждого Стр Из Движения.СтатусыСкладскогоУчета Цикл
//			НСтр = ТЗ_Движения.Добавить();
//			ЗаполнитьЗначенияСвойств(НСтр, Стр);			
//		КонецЦикла;
//				
//		// Получим таблицу существующих движений по АПП
//		Запрос = Новый Запрос("ВЫБРАТЬ
//		                      |	ТЗ_Движения.Заказ КАК Заказ,
//		                      |	ТЗ_Движения.СтатусСкладскогоУчета КАК Статус,
//		                      |	ТЗ_Движения.ТерминалОбработки КАК ТерминалОбработки
//		                      |ПОМЕСТИТЬ ВТ
//		                      |ИЗ
//		                      |	&ТЗ_Движения КАК ТЗ_Движения
//		                      |;
//		                      |
//		                      |////////////////////////////////////////////////////////////////////////////////
//		                      |ВЫБРАТЬ
//		                      |	СтатусыСкладскогоУчета.Период КАК Период,
//		                      |	СтатусыСкладскогоУчета.Регистратор КАК Регистратор,
//		                      |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
//		                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета,
//		                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
//		                      |	СтатусыСкладскогоУчета.ТерминалОбработки КАК ТерминалОбработки
//		                      |ПОМЕСТИТЬ ВТ_Регистр
//		                      |ИЗ
//		                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
//		                      |ГДЕ
//		                      |	СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ФактическийПриходЗаказовНаСклад
//		                      |	И (СтатусыСкладскогоУчета.Регистратор.Ссылка = &Основание
//		                      |			ИЛИ СтатусыСкладскогоУчета.Регистратор.Основание = &Основание)
//		                      |	И СтатусыСкладскогоУчета.Регистратор.Ссылка <> &Ссылка
//		                      |
//		                      |СГРУППИРОВАТЬ ПО
//		                      |	СтатусыСкладскогоУчета.Период,
//		                      |	СтатусыСкладскогоУчета.Регистратор,
//		                      |	СтатусыСкладскогоУчета.Заказ,
//		                      |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета,
//		                      |	СтатусыСкладскогоУчета.ТипЗаказа,
//		                      |	СтатусыСкладскогоУчета.ТерминалОбработки
//		                      |;
//		                      |
//		                      |////////////////////////////////////////////////////////////////////////////////
//		                      |ВЫБРАТЬ
//		                      |	ВТ.Заказ КАК Заказ,
//		                      |	ВТ.Статус КАК Статус,
//		                      |	ВТ.ТерминалОбработки КАК ТерминалОбработки,
//		                      |	ВТ_Регистр.СтатусСкладскогоУчета КАК СтатусСкладскогоУчета_Рег,
//		                      |	ВТ_Регистр.ТерминалОбработки КАК ТерминалОбработки_Рег,
//		                      |	ВТ_Регистр.Заказ КАК Заказ_Рег,
//		                      |	ВТ_Регистр.Регистратор КАК Регистратор_Рег
//		                      |ИЗ
//		                      |	ВТ КАК ВТ
//		                      |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Регистр КАК ВТ_Регистр
//		                      |		ПО ВТ.Заказ = ВТ_Регистр.Заказ
//		                      |			И ВТ.Статус = ВТ_Регистр.СтатусСкладскогоУчета
//		                      |			И ВТ.ТерминалОбработки = ВТ_Регистр.ТерминалОбработки");
//		Запрос.УстановитьПараметр("Основание", Основание);
//		Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
//		Запрос.УстановитьПараметр("ТЗ_Движения", ТЗ_Движения);
//		
//		РезТЗ = Запрос.Выполнить().Выгрузить();
//		
//		МассивКУдалению = Новый Массив;
//			
//		Для каждого Стр Из РезТЗ Цикл
//			
//			Если ЗначениеЗаполнено(Стр.Заказ_Рег) И НЕ ЗначениеЗаполнено(Стр.Заказ) Тогда // отмена статуса		
//				Набор = РегистрыСведений.СтатусыСкладскогоУчета.СоздатьНаборЗаписей();	
//				Набор.Отбор.Регистратор.Установить(Стр.Регистратор_Рег);
//				Набор.Отбор.Заказ.Установить(Стр.Заказ_Рег);
//				Набор.Прочитать();
//				Для каждого Запись Из Набор Цикл				
//					Запись.СтатусСкладскогоУчета = справочники.СтатусыСкладскогоУчета.ОтменаСтатуса;			
//				КонецЦикла;
//				Набор.Записать();		
//			ИначеЕсли ЗначениеЗаполнено(Стр.Заказ_Рег) И ЗначениеЗаполнено(Стр.Заказ) Тогда	// движение уже есть
//				МассивКУдалению.Добавить(Стр.Заказ);		
//			КонецЕсли;		
//		
//		КонецЦикла;
//		
//		
//		// чистим движения от уже существующих
//		Для каждого СтрМас Из МассивКУдалению Цикл			
//			Движения.СтатусыСкладскогоУчета.Удалить(СтрМас);			
//		КонецЦикла;
//		

//		
//		//Если РезТЗ.Количество() Тогда
//		//	
//		//	МассивКУдалению = Новый массив;
//		//	Для каждого СтрДвиж Из Движения.СтатусыСкладскогоУчета Цикл			
//		//		НайДвиж = РезТЗ.НайтиСтроки(Новый Структура("Заказ", СтрДвиж.Заказ));			
//		//		Для каждого Стр Из НайДвиж Цикл						
//		//			Если Стр.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПриходПроверен Тогда					
//		//				МассивКУдалению.Добавить(СтрДвиж);						
//		//			КонецЕсли;
//		//		КонецЦикла;						
//		//	КонецЦикла;	
//		//	
//		//	// чистим движения от уже существующих
//		//	Для каждого СтрМас Из МассивКУдалению Цикл			
//		//		Движения.СтатусыСкладскогоУчета.Удалить(СтрМас);			
//		//	КонецЦикла;
//		//	
//		//	
//		//КонецЕсли;
//	
//	КонецЕсли;
//	
//	
//	
//	
//	
//	// ---------- регистр ОстаткиЗаказов
//	Движения.ОстаткиЗаказов.Очистить();
//	Движения.ОстаткиЗаказов.Записывать = Истина;
//	
//	// сторнируем существующие движения
//	ЗапросСторно = Новый Запрос("ВЫБРАТЬ
//	                            |	ОстаткиЗаказов.ТерминалПриема КАК ТерминалПриема,
//	                            |	ОстаткиЗаказов.ТерминалДоставки КАК ТерминалДоставки,
//	                            |	ОстаткиЗаказов.Регистратор КАК Регистратор,
//	                            |	ОстаткиЗаказов.Организация КАК Организация,
//	                            |	ОстаткиЗаказов.Склад КАК Склад,
//	                            |	ОстаткиЗаказов.Заказ КАК Заказ,
//	                            |	ОстаткиЗаказов.Номенклатура КАК Номенклатура,
//	                            |	ОстаткиЗаказов.Период КАК Период,
//	                            |	ОстаткиЗаказов.ТипЗаказа КАК ТипЗаказа,
//	                            |	ВЫБОР
//	                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
//	                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.Количество, 0)
//	                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.Количество, 0)
//	                            |	КОНЕЦ КАК Количество,
//	                            |	ВЫБОР
//	                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
//	                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.СуммаПрод, 0)
//	                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.СуммаПрод, 0)
//	                            |	КОНЕЦ КАК СуммаПрод,
//	                            |	ВЫБОР
//	                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
//	                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.СуммаЗакуп, 0)
//	                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.СуммаЗакуп, 0)
//	                            |	КОНЕЦ КАК СуммаЗакуп
//	                            |ИЗ
//	                            |	РегистрНакопления.ОстаткиЗаказов КАК ОстаткиЗаказов
//	                            |ГДЕ
//	                            |	ОстаткиЗаказов.Регистратор ССЫЛКА Документ.ФактическийПриходЗаказовНаСклад
//	                            |	И (ОстаткиЗаказов.Регистратор.Ссылка = &Основание
//	                            |			ИЛИ ОстаткиЗаказов.Регистратор.Основание = &Основание)
//	                            |	И ОстаткиЗаказов.Регистратор.Ссылка <> &Ссылка
//	                            |
//	                            |СГРУППИРОВАТЬ ПО
//	                            |	ОстаткиЗаказов.Номенклатура,
//	                            |	ОстаткиЗаказов.ТерминалДоставки,
//	                            |	ОстаткиЗаказов.ТерминалПриема,
//	                            |	ОстаткиЗаказов.Организация,
//	                            |	ОстаткиЗаказов.Регистратор,
//	                            |	ОстаткиЗаказов.Склад,
//	                            |	ОстаткиЗаказов.Заказ,
//	                            |	ОстаткиЗаказов.Период,
//	                            |	ОстаткиЗаказов.ТипЗаказа,
//	                            |	ВЫБОР
//	                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
//	                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.Количество, 0)
//	                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.Количество, 0)
//	                            |	КОНЕЦ,
//	                            |	ВЫБОР
//	                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
//	                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.СуммаПрод, 0)
//	                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.СуммаПрод, 0)
//	                            |	КОНЕЦ,
//	                            |	ВЫБОР
//	                            |		КОГДА ОстаткиЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
//	                            |			ТОГДА ЕСТЬNULL(ОстаткиЗаказов.СуммаЗакуп, 0)
//	                            |		ИНАЧЕ -ЕСТЬNULL(ОстаткиЗаказов.СуммаЗакуп, 0)
//	                            |	КОНЕЦ");
//	ЗапросСторно.УстановитьПараметр("Основание", Основание);
//	ЗапросСторно.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
//	РезСторноТЗ = ЗапросСторно.Выполнить().Выгрузить();	
//	
//	Для каждого Ст Из РезСторноТЗ Цикл	
//		Если Ст.Количество <> 0 Тогда			
//			НСтр = Движения.ОстаткиЗаказов.ДобавитьРасход();	
//			ЗаполнитьЗначенияСвойств(НСтр, Ст);		
//		КонецЕсли;		
//	КонецЦикла;
//	
//	
//	
//	// делаем новые движения	    
//    Запрос = Новый Запрос(
//    "ВЫБРАТЬ
//    |	ПоступлениеТоваровУслугТовары.Номенклатура,
//    |	ПоступлениеТоваровУслугТовары.Количество,
//    |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ,
//    |	ПоступлениеТоваровУслугТовары.Ссылка.СкладОрдер,
//    |	ПоступлениеТоваровУслугТовары.Ссылка.СуммаДокумента,
//    |	УчетОстатковПоКонтрагентам.УчитыватьОстатки,
//    |	ПоступлениеТоваровУслугТовары.Сумма
//    |ПОМЕСТИТЬ ВТ_Товары
//    |ИЗ
//    |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
//    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
//    |		ПО ПоступлениеТоваровУслугТовары.Ссылка.Номер = ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер
//    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
//    |		ПО ПоступлениеТоваровУслугТовары.Ссылка.Контрагент = УчетОстатковПоКонтрагентам.Контрагент
//    |ГДЕ
//    |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
//    |	И ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканереЗаполнено
//    |	И НЕ ПоступлениеТоваровУслугТовары.Номенклатура.Артикул В
//    |				(ВЫБРАТЬ
//    |					УслугиПоЗаказам.Артикул
//    |				ИЗ
//    |					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
//    |				ГДЕ
//    |					НЕ УслугиПоЗаказам.ПометкаУдаления)
//    |	И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков
//    |
//    |ОБЪЕДИНИТЬ ВСЕ
//    |
//    |ВЫБРАТЬ
//    |	ПоступлениеТоваровУслугПодарочныеПозиции.Номенклатура,
//    |	ПоступлениеТоваровУслугПодарочныеПозиции.Количество,
//    |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ,
//    |	NULL,
//    |	NULL,
//    |	УчетОстатковПоКонтрагентам.УчитыватьОстатки,
//    |	ПоступлениеТоваровУслугПодарочныеПозиции.Сумма
//    |ИЗ
//    |	Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
//    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
//    |		ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер = ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер
//    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
//    |		ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент = УчетОстатковПоКонтрагентам.Контрагент
//    |ГДЕ
//    |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
//    |	И ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканереЗаполнено
//    |	И НЕ ПоступлениеТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
//    |				(ВЫБРАТЬ
//    |					УслугиПоЗаказам.Артикул
//    |				ИЗ
//    |					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
//    |				ГДЕ
//    |					НЕ УслугиПоЗаказам.ПометкаУдаления)
//    |	И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков
//    |;
//    |
//    |////////////////////////////////////////////////////////////////////////////////
//    |ВЫБРАТЬ
//    |	ВТ_Товары.Заказ
//    |ПОМЕСТИТЬ ВТ_Заказы
//    |ИЗ
//    |	ВТ_Товары КАК ВТ_Товары
//    |
//    |СГРУППИРОВАТЬ ПО
//    |	ВТ_Товары.Заказ
//    |;
//    |
//    |////////////////////////////////////////////////////////////////////////////////
//    |ВЫБРАТЬ
//    |	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
//    |	ВложенныйЗапрос.Номер
//    |ПОМЕСТИТЬ ВТ_РеализацияКоличество
//    |ИЗ
//    |	(ВЫБРАТЬ
//    |		РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
//    |		РеализацияТоваровУслугТовары.Количество КАК Количество
//    |	ИЗ
//    |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
//    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
//    |			ПО РеализацияТоваровУслугТовары.Ссылка = ВТ_Заказы.Заказ
//    |	ГДЕ
//    |		НЕ РеализацияТоваровУслугТовары.Номенклатура.Артикул В
//    |					(ВЫБРАТЬ
//    |						УслугиПоЗаказам.Артикул
//    |					ИЗ
//    |						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
//    |	
//    |	ОБЪЕДИНИТЬ ВСЕ
//    |	
//    |	ВЫБРАТЬ
//    |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
//    |		РеализацияТоваровУслугПодарочныеПозиции.Количество
//    |	ИЗ
//    |		Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
//    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
//    |			ПО РеализацияТоваровУслугПодарочныеПозиции.Ссылка = ВТ_Заказы.Заказ
//    |	ГДЕ
//    |		НЕ РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
//    |					(ВЫБРАТЬ
//    |						УслугиПоЗаказам.Артикул
//    |					ИЗ
//    |						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)) КАК ВложенныйЗапрос
//    |
//    |СГРУППИРОВАТЬ ПО
//    |	ВложенныйЗапрос.Номер
//    |;
//    |
//    |////////////////////////////////////////////////////////////////////////////////
//    |ВЫБРАТЬ
//    |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
//    |	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество
//    |ПОМЕСТИТЬ ВТ_ВозвратПокупателяюКоличество
//    |ИЗ
//    |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
//    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
//    |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = ВТ_Заказы.Заказ.Номер
//    |ГДЕ
//    |	НЕ ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул В
//    |				(ВЫБРАТЬ
//    |					УслугиПоЗаказам.Артикул
//    |				ИЗ
//    |					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
//    |
//    |СГРУППИРОВАТЬ ПО
//    |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
//    |;
//    |
//    |////////////////////////////////////////////////////////////////////////////////
//    |ВЫБРАТЬ
//    |	новаМестнаяДоставка.Номер
//    |ПОМЕСТИТЬ новаМестнаяДоставка
//    |ИЗ
//    |	БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
//    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
//    |		ПО новаМестнаяДоставка.Номер = ВТ_Заказы.Заказ.Номер
//    |ГДЕ
//    |	НЕ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз
//    |;
//    |
//    |////////////////////////////////////////////////////////////////////////////////
//    |ВЫБРАТЬ
//    |	РеализацияТоваровУслуг.Ссылка.Номер КАК РеализацияНомер,
//    |	ВТ_ВозвратПокупателяюКоличество.Номер КАК ВозвратНомер,
//    |	ЕСТЬNULL(ВТ_ВозвратПокупателяюКоличество.Количество, 0) КАК ВозвратКоличество,
//    |	ЕСТЬNULL(ВТ_РеализацияКоличество.Количество, 0) КАК РеализацияКоличество,
//    |	новаМестнаяДоставка.Номер КАК МестнаяДоставкаНомер
//    |ПОМЕСТИТЬ ВТ_Итог
//    |ИЗ
//    |	ВТ_Заказы КАК ВТ_Заказы
//    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
//    |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеализацияКоличество КАК ВТ_РеализацияКоличество
//    |			ПО РеализацияТоваровУслуг.Номер = ВТ_РеализацияКоличество.Номер
//    |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВозвратПокупателяюКоличество КАК ВТ_ВозвратПокупателяюКоличество
//    |			ПО РеализацияТоваровУслуг.Номер = ВТ_ВозвратПокупателяюКоличество.Номер
//    |			ЛЕВОЕ СОЕДИНЕНИЕ новаМестнаяДоставка КАК новаМестнаяДоставка
//    |			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
//    |		ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
//    |;
//    |
//    |////////////////////////////////////////////////////////////////////////////////
//    |ВЫБРАТЬ
//    |	ВЫБОР
//    |		КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
//    |			ТОГДА ВЫБОР
//    |					КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
//    |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
//    |					ИНАЧЕ ВЫБОР
//    |							КОГДА ВТ_Итог.РеализацияКоличество = 0
//    |									И ВТ_Итог.ВозвратКоличество > 0
//    |								ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
//    |							ИНАЧЕ ВЫБОР
//    |									КОГДА ВТ_Итог.РеализацияКоличество > 0
//    |											И ВТ_Итог.ВозвратКоличество > 0
//    |										ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
//    |									ИНАЧЕ НЕОПРЕДЕЛЕНО
//    |								КОНЕЦ
//    |						КОНЕЦ
//    |				КОНЕЦ
//    |		ИНАЧЕ ВЫБОР
//    |				КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
//    |					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
//    |				ИНАЧЕ ВЫБОР
//    |						КОГДА ВТ_Итог.РеализацияКоличество = 0
//    |								И ВТ_Итог.ВозвратКоличество > 0
//    |							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
//    |						ИНАЧЕ ВЫБОР
//    |								КОГДА ВТ_Итог.РеализацияКоличество > 0
//    |										И ВТ_Итог.ВозвратКоличество > 0
//    |									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
//    |								ИНАЧЕ НЕОПРЕДЕЛЕНО
//    |							КОНЕЦ
//    |					КОНЕЦ
//    |			КОНЕЦ
//    |	КОНЕЦ КАК ТипЗаказа,
//    |	ВТ_Итог.РеализацияНомер КАК НомерЗаказа
//    |ПОМЕСТИТЬ ВТ_ТипыЗаказов
//    |ИЗ
//    |	ВТ_Итог КАК ВТ_Итог
//    |
//    |СГРУППИРОВАТЬ ПО
//    |	ВЫБОР
//    |		КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
//    |			ТОГДА ВЫБОР
//    |					КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
//    |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
//    |					ИНАЧЕ ВЫБОР
//    |							КОГДА ВТ_Итог.РеализацияКоличество = 0
//    |									И ВТ_Итог.ВозвратКоличество > 0
//    |								ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
//    |							ИНАЧЕ ВЫБОР
//    |									КОГДА ВТ_Итог.РеализацияКоличество > 0
//    |											И ВТ_Итог.ВозвратКоличество > 0
//    |										ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
//    |									ИНАЧЕ НЕОПРЕДЕЛЕНО
//    |								КОНЕЦ
//    |						КОНЕЦ
//    |				КОНЕЦ
//    |		ИНАЧЕ ВЫБОР
//    |				КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
//    |					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
//    |				ИНАЧЕ ВЫБОР
//    |						КОГДА ВТ_Итог.РеализацияКоличество = 0
//    |								И ВТ_Итог.ВозвратКоличество > 0
//    |							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
//    |						ИНАЧЕ ВЫБОР
//    |								КОГДА ВТ_Итог.РеализацияКоличество > 0
//    |										И ВТ_Итог.ВозвратКоличество > 0
//    |									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
//    |								ИНАЧЕ НЕОПРЕДЕЛЕНО
//    |							КОНЕЦ
//    |					КОНЕЦ
//    |			КОНЕЦ
//    |	КОНЕЦ,
//    |	ВТ_Итог.РеализацияНомер
//    |;
//    |
//    |////////////////////////////////////////////////////////////////////////////////
//    |ВЫБРАТЬ
//    |	ВТ_Товары.Номенклатура,
//    |	ВТ_Товары.Количество,
//    |	ВТ_Товары.Заказ,
//    |	ВТ_Товары.СкладОрдер,
//    |	ВТ_Товары.СуммаДокумента,
//    |	ВТ_Товары.УчитыватьОстатки,
//    |	ВТ_Товары.Сумма,
//    |	ВТ_ТипыЗаказов.ТипЗаказа,
//    |	ВТ_Товары.Заказ.ТерминалПриема,
//    |	ВТ_Товары.Заказ.ТерминалДоставки
//    |ИЗ
//    |	ВТ_Товары КАК ВТ_Товары
//    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТипыЗаказов КАК ВТ_ТипыЗаказов
//    |		ПО ВТ_Товары.Заказ.Номер = ВТ_ТипыЗаказов.НомерЗаказа");
//    Запрос.УстановитьПараметр("Ссылка", Ссылка);
//    Запрос.УстановитьПараметр("ДатаНачалаУчетаОстатков",Дата);
//    Товары = Запрос.Выполнить().Выгрузить();
//    
//    Если Товары.Количество() > 0 Тогда
//    		
//    	Для Каждого Товар Из Товары Цикл 
//    		Если Товар.УчитыватьОстатки Тогда
//    			Если ЗначениеЗаполнено(Товар.СкладОрдер) Тогда 
//					Движение = Движения.ОстаткиЗаказов.ДобавитьПриход();
//					Движение.Период       = ДатаНачалаВыборки;
//					Движение.Заказ        = Товар.Заказ;
//					Движение.Номенклатура = Товар.Номенклатура;
//					Движение.Склад        = Товар.СкладОрдер;
//					Движение.Организация  = Товар.Заказ.Организация;
//					Движение.Количество   = Товар.Количество;
//					Движение.СуммаПрод    = Товар.Сумма;
//					Движение.ТипЗаказа    = Товар.ТипЗаказа;
//					Движение.ТерминалПриема   = Товар.ЗаказТерминалПриема;
//					Движение.ТерминалДоставки = Товар.ЗаказТерминалДоставки;
//    			КонецЕсли;
//    		КонецЕсли;
//		КонецЦикла;
//		
//    КонецЕсли;
//	

//КонецПроцедуры


Процедура ВводОстатковПоЗаказам();
	//+++ Костя 061015
	//		*** ОстаткиЗаказов ***
	Движения.ОстаткиЗаказов.Записывать = Истина;
	Движения.ОстаткиЗаказов.Очистить();	
    
    #Область Устарело
    
    ////+++++Серегин М.В. 03.02.2016 11:55:23 старый код
    //Запрос = Новый Запрос(
    //"ВЫБРАТЬ
    //|   ПоступлениеТоваровУслугТовары.Номенклатура,
    //|   ПоступлениеТоваровУслугТовары.Количество,
    //|   ФактическийПриходЗаказовНаСкладЗаказы.Заказ,
    //|   ПоступлениеТоваровУслугТовары.Ссылка.СкладОрдер,
    //|   ПоступлениеТоваровУслугТовары.Ссылка.СуммаДокумента,
    //|   УчетОстатковПоКонтрагентам.УчитыватьОстатки,
    //|   ПоступлениеТоваровУслугТовары.Сумма
    //|ИЗ
    //|   Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
    //|       ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
    //|       ПО ПоступлениеТоваровУслугТовары.Ссылка.Номер = ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер
    //|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
    //|       ПО ПоступлениеТоваровУслугТовары.Ссылка.Контрагент = УчетОстатковПоКонтрагентам.Контрагент
    //|ГДЕ
    //|   ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
    //|   И ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканереЗаполнено
    //|   И НЕ ПоступлениеТоваровУслугТовары.Номенклатура.Артикул В
    //|               (ВЫБРАТЬ
    //|                   УслугиПоЗаказам.Артикул
    //|               ИЗ
    //|                   Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
    //|               ГДЕ
    //|                   НЕ УслугиПоЗаказам.ПометкаУдаления)
    //|   И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков
    //|
    //|ОБЪЕДИНИТЬ ВСЕ
    //|
    //|ВЫБРАТЬ
    //|   ПоступлениеТоваровУслугПодарочныеПозиции.Номенклатура,
    //|   ПоступлениеТоваровУслугПодарочныеПозиции.Количество,
    //|   ФактическийПриходЗаказовНаСкладЗаказы.Заказ,
    //|   NULL,
    //|   NULL,
    //|   УчетОстатковПоКонтрагентам.УчитыватьОстатки,
    //|   ПоступлениеТоваровУслугПодарочныеПозиции.Сумма
    //|ИЗ
    //|   Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
    //|       ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
    //|       ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер = ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер
    //|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
    //|       ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент = УчетОстатковПоКонтрагентам.Контрагент
    //|ГДЕ
    //|   ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
    //|   И ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканереЗаполнено
    //|   И НЕ ПоступлениеТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
    //|               (ВЫБРАТЬ
    //|                   УслугиПоЗаказам.Артикул
    //|               ИЗ
    //|                   Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
    //|               ГДЕ
    //|                   НЕ УслугиПоЗаказам.ПометкаУдаления)
    //|   И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков");
    //Запрос.УстановитьПараметр("Ссылка", Ссылка);
    //Запрос.УстановитьПараметр("ДатаНачалаУчетаОстатков",Дата);
    //Товары = Запрос.Выполнить().Выгрузить();
    //
    //Если Товары.Количество() > 0 Тогда
    //		
    //	Для Каждого Товар Из Товары Цикл 
    //		Если Товар.УчитыватьОстатки Тогда
    //			Если ЗначениеЗаполнено(Товар.СкладОрдер) Тогда 
    //				ТипДоставкиЗаказа = smv.ПолучитьТипЗаказаNew(Товар.Заказ);		
    //				Если ТипДоставкиЗаказа = Неопределено Тогда
    //					Продолжить;
    //				Иначе
    //					Движение = Движения.ОстаткиЗаказов.ДобавитьПриход();
    //					Движение.Период       = ДатаНачалаВыборки;
    //					Движение.Заказ        = Товар.Заказ;
    //					Движение.Номенклатура = Товар.Номенклатура;
    //					Движение.Склад        = Товар.СкладОрдер;
    //					Движение.Организация  = Товар.Заказ.Организация;
    //					Движение.Количество   = Товар.Количество;
    //					Движение.СуммаПрод    = Товар.Сумма; //+++++Серегин М.В. 29.01.2016 13:25:56 было Движение.СуммаПрод    = Товар.СуммаДокумента; 
    //					Движение.ТипЗаказа    = ТипДоставкиЗаказа;
    //					//Движение.СуммаЗакуп = ?
    //				КонецЕсли;
    //			КонецЕсли;
    //		КонецЕсли;
    //	КонецЦикла;
    //КонецЕсли;
    ////-----Серегин М.В. 03.02.2016 11:55:38 
    #КонецОбласти 
    
    
    //+++++Серегин М.В. 03.02.2016 11:55:39 новый код проверил
    Запрос = Новый Запрос(
    "ВЫБРАТЬ
    |	ПоступлениеТоваровУслугТовары.Номенклатура,
    |	ПоступлениеТоваровУслугТовары.Количество,
    |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ,
    |	ПоступлениеТоваровУслугТовары.Ссылка.СкладОрдер,
    |	ПоступлениеТоваровУслугТовары.Ссылка.СуммаДокумента,
    |	УчетОстатковПоКонтрагентам.УчитыватьОстатки,
    |	ПоступлениеТоваровУслугТовары.Сумма
    |ПОМЕСТИТЬ ВТ_Товары
    |ИЗ
    |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
    |		ПО ПоступлениеТоваровУслугТовары.Ссылка.Номер = ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
    |		ПО ПоступлениеТоваровУслугТовары.Ссылка.Контрагент = УчетОстатковПоКонтрагентам.Контрагент
    |ГДЕ
    |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
    |	И ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканереЗаполнено
    |	И НЕ ПоступлениеТоваровУслугТовары.Номенклатура.Артикул В
    |				(ВЫБРАТЬ
    |					УслугиПоЗаказам.Артикул
    |				ИЗ
    |					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
    |				ГДЕ
    |					НЕ УслугиПоЗаказам.ПометкаУдаления)
    |	И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков
    |
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |ВЫБРАТЬ
    |	ПоступлениеТоваровУслугПодарочныеПозиции.Номенклатура,
    |	ПоступлениеТоваровУслугПодарочныеПозиции.Количество,
    |	ФактическийПриходЗаказовНаСкладЗаказы.Заказ,
    |	NULL,
    |	NULL,
    |	УчетОстатковПоКонтрагентам.УчитыватьОстатки,
    |	ПоступлениеТоваровУслугПодарочныеПозиции.Сумма
    |ИЗ
    |	Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
    |		ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер = ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОстатковПоКонтрагентам КАК УчетОстатковПоКонтрагентам
    |		ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент = УчетОстатковПоКонтрагентам.Контрагент
    |ГДЕ
    |	ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
    |	И ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканереЗаполнено
    |	И НЕ ПоступлениеТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
    |				(ВЫБРАТЬ
    |					УслугиПоЗаказам.Артикул
    |				ИЗ
    |					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
    |				ГДЕ
    |					НЕ УслугиПоЗаказам.ПометкаУдаления)
    |	И УчетОстатковПоКонтрагентам.ДатаНачалаУчетаОстатков < &ДатаНачалаУчетаОстатков
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ВТ_Товары.Заказ
    |ПОМЕСТИТЬ ВТ_Заказы
    |ИЗ
    |	ВТ_Товары КАК ВТ_Товары
    |
    |СГРУППИРОВАТЬ ПО
    |	ВТ_Товары.Заказ
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
    |	ВложенныйЗапрос.Номер
    |ПОМЕСТИТЬ ВТ_РеализацияКоличество
    |ИЗ
    |	(ВЫБРАТЬ
    |		РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
    |		РеализацияТоваровУслугТовары.Количество КАК Количество
    |	ИЗ
    |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
    |			ПО РеализацияТоваровУслугТовары.Ссылка = ВТ_Заказы.Заказ
    |	ГДЕ
    |		НЕ РеализацияТоваровУслугТовары.Номенклатура.Артикул В
    |					(ВЫБРАТЬ
    |						УслугиПоЗаказам.Артикул
    |					ИЗ
    |						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
    |	
    |	ОБЪЕДИНИТЬ ВСЕ
    |	
    |	ВЫБРАТЬ
    |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
    |		РеализацияТоваровУслугПодарочныеПозиции.Количество
    |	ИЗ
    |		Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
    |			ПО РеализацияТоваровУслугПодарочныеПозиции.Ссылка = ВТ_Заказы.Заказ
    |	ГДЕ
    |		НЕ РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
    |					(ВЫБРАТЬ
    |						УслугиПоЗаказам.Артикул
    |					ИЗ
    |						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)) КАК ВложенныйЗапрос
    |
    |СГРУППИРОВАТЬ ПО
    |	ВложенныйЗапрос.Номер
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
    |	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество
    |ПОМЕСТИТЬ ВТ_ВозвратПокупателяюКоличество
    |ИЗ
    |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
    |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = ВТ_Заказы.Заказ.Номер
    |ГДЕ
    |	НЕ ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул В
    |				(ВЫБРАТЬ
    |					УслугиПоЗаказам.Артикул
    |				ИЗ
    |					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
    |
    |СГРУППИРОВАТЬ ПО
    |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	новаМестнаяДоставка.Номер
    |ПОМЕСТИТЬ новаМестнаяДоставка
    |ИЗ
    |	БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
    |		ПО новаМестнаяДоставка.Номер = ВТ_Заказы.Заказ.Номер
    |ГДЕ
    |	НЕ новаМестнаяДоставка.ДоставкаИзмененаНаСамовывоз
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	РеализацияТоваровУслуг.Ссылка.Номер КАК РеализацияНомер,
    |	ВТ_ВозвратПокупателяюКоличество.Номер КАК ВозвратНомер,
    |	ЕСТЬNULL(ВТ_ВозвратПокупателяюКоличество.Количество, 0) КАК ВозвратКоличество,
    |	ЕСТЬNULL(ВТ_РеализацияКоличество.Количество, 0) КАК РеализацияКоличество,
    |	новаМестнаяДоставка.Номер КАК МестнаяДоставкаНомер
    |ПОМЕСТИТЬ ВТ_Итог
    |ИЗ
    |	ВТ_Заказы КАК ВТ_Заказы
    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
    |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеализацияКоличество КАК ВТ_РеализацияКоличество
    |			ПО РеализацияТоваровУслуг.Номер = ВТ_РеализацияКоличество.Номер
    |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВозвратПокупателяюКоличество КАК ВТ_ВозвратПокупателяюКоличество
    |			ПО РеализацияТоваровУслуг.Номер = ВТ_ВозвратПокупателяюКоличество.Номер
    |			ЛЕВОЕ СОЕДИНЕНИЕ новаМестнаяДоставка КАК новаМестнаяДоставка
    |			ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
    |		ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ВЫБОР
    |		КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
    |			ТОГДА ВЫБОР
    |					КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
    |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
    |					ИНАЧЕ ВЫБОР
    |							КОГДА ВТ_Итог.РеализацияКоличество = 0
    |									И ВТ_Итог.ВозвратКоличество > 0
    |								ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
    |							ИНАЧЕ ВЫБОР
    |									КОГДА ВТ_Итог.РеализацияКоличество > 0
    |											И ВТ_Итог.ВозвратКоличество > 0
    |										ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
    |									ИНАЧЕ НЕОПРЕДЕЛЕНО
    |								КОНЕЦ
    |						КОНЕЦ
    |				КОНЕЦ
    |		ИНАЧЕ ВЫБОР
    |				КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
    |					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
    |				ИНАЧЕ ВЫБОР
    |						КОГДА ВТ_Итог.РеализацияКоличество = 0
    |								И ВТ_Итог.ВозвратКоличество > 0
    |							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
    |						ИНАЧЕ ВЫБОР
    |								КОГДА ВТ_Итог.РеализацияКоличество > 0
    |										И ВТ_Итог.ВозвратКоличество > 0
    |									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
    |								ИНАЧЕ НЕОПРЕДЕЛЕНО
    |							КОНЕЦ
    |					КОНЕЦ
    |			КОНЕЦ
    |	КОНЕЦ КАК ТипЗаказа,
    |	ВТ_Итог.РеализацияНомер КАК НомерЗаказа
    |ПОМЕСТИТЬ ВТ_ТипыЗаказов
    |ИЗ
    |	ВТ_Итог КАК ВТ_Итог
    |
    |СГРУППИРОВАТЬ ПО
    |	ВЫБОР
    |		КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
    |			ТОГДА ВЫБОР
    |					КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
    |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
    |					ИНАЧЕ ВЫБОР
    |							КОГДА ВТ_Итог.РеализацияКоличество = 0
    |									И ВТ_Итог.ВозвратКоличество > 0
    |								ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
    |							ИНАЧЕ ВЫБОР
    |									КОГДА ВТ_Итог.РеализацияКоличество > 0
    |											И ВТ_Итог.ВозвратКоличество > 0
    |										ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
    |									ИНАЧЕ НЕОПРЕДЕЛЕНО
    |								КОНЕЦ
    |						КОНЕЦ
    |				КОНЕЦ
    |		ИНАЧЕ ВЫБОР
    |				КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
    |					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
    |				ИНАЧЕ ВЫБОР
    |						КОГДА ВТ_Итог.РеализацияКоличество = 0
    |								И ВТ_Итог.ВозвратКоличество > 0
    |							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
    |						ИНАЧЕ ВЫБОР
    |								КОГДА ВТ_Итог.РеализацияКоличество > 0
    |										И ВТ_Итог.ВозвратКоличество > 0
    |									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
    |								ИНАЧЕ НЕОПРЕДЕЛЕНО
    |							КОНЕЦ
    |					КОНЕЦ
    |			КОНЕЦ
    |	КОНЕЦ,
    |	ВТ_Итог.РеализацияНомер
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ВТ_Товары.Номенклатура,
    |	ВТ_Товары.Количество,
    |	ВТ_Товары.Заказ,
    |	ВТ_Товары.СкладОрдер,
    |	ВТ_Товары.СуммаДокумента,
    |	ВТ_Товары.УчитыватьОстатки,
    |	ВТ_Товары.Сумма,
    |	ВТ_ТипыЗаказов.ТипЗаказа,
    |	ВТ_Товары.Заказ.ТерминалПриема,
    |	ВТ_Товары.Заказ.ТерминалДоставки
    |ИЗ
    |	ВТ_Товары КАК ВТ_Товары
    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТипыЗаказов КАК ВТ_ТипыЗаказов
    |		ПО ВТ_Товары.Заказ.Номер = ВТ_ТипыЗаказов.НомерЗаказа");
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    Запрос.УстановитьПараметр("ДатаНачалаУчетаОстатков",Дата);
    Товары = Запрос.Выполнить().Выгрузить();
    
    Если Товары.Количество() > 0 Тогда
    		
    	Для Каждого Товар Из Товары Цикл 
    		Если Товар.УчитыватьОстатки Тогда
    			Если ЗначениеЗаполнено(Товар.СкладОрдер) Тогда 
    					Движение = Движения.ОстаткиЗаказов.ДобавитьПриход();
    					Движение.Период       = ДатаНачалаВыборки;
    					Движение.Заказ        = Товар.Заказ;
    					Движение.Номенклатура = Товар.Номенклатура;
    					Движение.Склад        = Товар.СкладОрдер;
    					Движение.Организация  = Товар.Заказ.Организация;
    					Движение.Количество   = Товар.Количество;
    					Движение.СуммаПрод    = Товар.Сумма; //+++++Серегин М.В. 29.01.2016 13:25:56 было Движение.СуммаПрод    = Товар.СуммаДокумента; 
    					Движение.ТипЗаказа    = Товар.ТипЗаказа;
						// Михушкин - 15.04.2016 --->> 
						Движение.ТерминалПриема   = Товар.ЗаказТерминалПриема;
						Движение.ТерминалДоставки = Товар.ЗаказТерминалДоставки;
						// <<--- Михушкин 
    					//Движение.СуммаЗакуп = ?
    			КонецЕсли;
    		КонецЕсли;
    	КонецЦикла;
    КонецЕсли;    
    //-----Серегин М.В. 03.02.2016 11:55:43 
	
	//+++ Костя 061015
КонецПроцедуры

Функция ЭтоЗаказНаУстановку(Номер)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
        |   ВозвратТоваровОтПокупателяТовары.Номенклатура,
        |   ВЫБОР
        |       КОГДА УслугиПоЗаказам.Ссылка ЕСТЬ NULL 
        |           ТОГДА ЛОЖЬ
        |       ИНАЧЕ ИСТИНА
        |   КОНЕЦ КАК ЭтоУслугаПоЗаказам
        |ПОМЕСТИТЬ ВТ
        |ИЗ
        |   Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
        |       ПО ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул = УслугиПоЗаказам.Артикул
        |           И (НЕ УслугиПоЗаказам.ПометкаУдаления)
        |ГДЕ
        |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = &Номер
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   РеализацияТоваровУслугТовары.Ссылка.Номер,
        |   РеализацияТоваровУслугТовары.Номенклатура,
        |   ВЫБОР
        |       КОГДА УслугиПоЗаказам.Ссылка ЕСТЬ NULL 
        |           ТОГДА ЛОЖЬ
        |       ИНАЧЕ ИСТИНА
        |   КОНЕЦ
        |ИЗ
        |   Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
        |       ПО РеализацияТоваровУслугТовары.Номенклатура.Артикул = УслугиПоЗаказам.Артикул
        |           И (НЕ УслугиПоЗаказам.ПометкаУдаления)
        |ГДЕ
        |   РеализацияТоваровУслугТовары.Ссылка.Номер = &Номер
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
        |   РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
        |   ВЫБОР
        |       КОГДА УслугиПоЗаказам.Ссылка ЕСТЬ NULL 
        |           ТОГДА ЛОЖЬ
        |       ИНАЧЕ ИСТИНА
        |   КОНЕЦ
        |ИЗ
        |   Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
        |       ПО РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул = УслугиПоЗаказам.Артикул
        |           И (НЕ УслугиПоЗаказам.ПометкаУдаления)
        |ГДЕ
        |   РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер = &Номер
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВТ.Номер КАК Номер,
        |   ВТ.Номенклатура,
        |   МАКСИМУМ(ВТ.ЭтоУслугаПоЗаказам) КАК ЭтоУслугаПоЗаказам
        |ИЗ
        |   ВТ КАК ВТ
        |
        |СГРУППИРОВАТЬ ПО
        |   ВТ.Номер,
        |   ВТ.Номенклатура
        |
        |УПОРЯДОЧИТЬ ПО
        |   Номер
        |АВТОУПОРЯДОЧИВАНИЕ";
    
    Запрос.УстановитьПараметр("Номер", Номер);
    
    РезультатЗапроса = Запрос.Выполнить().Выгрузить();
    Если РезультатЗапроса.Количество()> 0 Тогда //это значит пустые табличные части
        ЕстьНоменклатура = РезультатЗапроса.Найти(Ложь,"ЭтоУслугаПоЗаказам");
        Если ЕстьНоменклатура = Неопределено Тогда
            Возврат Истина; //только услуги
        Иначе
            Возврат Ложь; //есть номенклатура
        КонецЕсли;
    Иначе
        Возврат Ложь; //есть номенклатура
    КонецЕсли;
    
КонецФункции // ()

#Область smv
Процедура ПодгрузитьДанныеСмена2()Экспорт
    
    Смена2 = Справочники.Смены.Смена2;
    //Выборка по строкам НЕ ЕстьПриход или НЕ ЕстьТСД+подтягиваем данные второй смены.
    Зап = Новый Запрос;
    Зап.Текст = "ВЫБРАТЬ
                |   ПриходЗаказовНаСкладЗаказы.ВнешнийНомерЗаказа,
                |   ПриходЗаказовНаСкладЗаказы.Заказ,
                |   ПриходЗаказовНаСкладЗаказы.КоличествоМест,
                |   ПриходЗаказовНаСкладЗаказы.Ссылка КАК ДокументПрихода
                |ПОМЕСТИТЬ ВТПриходПоЭДО
                |ИЗ
                |   Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
                |ГДЕ
                |   ПриходЗаказовНаСкладЗаказы.Ссылка.ПометкаУдаления = ЛОЖЬ
                |   И ПриходЗаказовНаСкладЗаказы.Ссылка.Дата МЕЖДУ &ДатаНач1 И &ДатаКон1
                |   И ПриходЗаказовНаСкладЗаказы.Ссылка.Контрагент В (&Контрагент)
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |   ЗагрузкаСТСДШтрихкоды.ВнешнийНомерЗаказа,
                |   ЗагрузкаСТСДШтрихкоды.Заказ,
                |   ЗагрузкаСТСДШтрихкоды.КоличествоМест
                |ПОМЕСТИТЬ ВТЗагрузкаСТСД
                |ИЗ
                |   Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
                |ГДЕ
                |   ЗагрузкаСТСДШтрихкоды.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
                |   И ЗагрузкаСТСДШтрихкоды.Ссылка.ПометкаУдаления = ЛОЖЬ
                |   И ЗагрузкаСТСДШтрихкоды.Контрагент.Ссылка В (&Контрагент)
                |   И ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFi)
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |   ВложенныйЗапрос.Заказ,
                |   МАКСИМУМ(ВложенныйЗапрос.ЕстьВПриходе) КАК ЕстьВПриходе,
                |   МАКСИМУМ(ВложенныйЗапрос.ЕстьНаСканере) КАК ЕстьНаСканере,
                |   СУММА(ВложенныйЗапрос.КоличествоМестСистема) КАК КоличествоМестСистема,
                |   СУММА(ВложенныйЗапрос.КоличествоМестПриход) КАК КоличествоМестПриход,
                |   СУММА(ВложенныйЗапрос.КоличествоМестСканировано) КАК КоличествоМестСканировано,
                |   ВложенныйЗапрос.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
                |   МАКСИМУМ(ВложенныйЗапрос.ДокументПрихода) КАК ДокументПрихода
                |ПОМЕСТИТЬ ВТ_Итог
                |ИЗ
                |   (ВЫБРАТЬ
                |       ИСТИНА КАК ЕстьВПриходе,
                |       ЛОЖЬ КАК ЕстьНаСканере,
                |       ВТПриходПоЭДО.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
                |       0 КАК КоличествоМестСистема,
                |       ВТПриходПоЭДО.КоличествоМест КАК КоличествоМестПриход,
                |       0 КАК КоличествоМестСканировано,
                |       ВТПриходПоЭДО.Заказ КАК Заказ,
                |       ВТПриходПоЭДО.ДокументПрихода КАК ДокументПрихода
                |   ИЗ
                |       ВТПриходПоЭДО КАК ВТПриходПоЭДО
                |   
                |   ОБЪЕДИНИТЬ ВСЕ
                |   
                |   ВЫБРАТЬ
                |       ЛОЖЬ,
                |       ИСТИНА,
                |       ВТЗагрузкаСТСД.ВнешнийНомерЗаказа,
                |       0,
                |       0,
                |       ВТЗагрузкаСТСД.КоличествоМест,
                |       ВТЗагрузкаСТСД.Заказ,
                |       NULL
                |   ИЗ
                |       ВТЗагрузкаСТСД КАК ВТЗагрузкаСТСД) КАК ВложенныйЗапрос
                |
                |СГРУППИРОВАТЬ ПО
                |   ВложенныйЗапрос.Заказ,
                |   ВложенныйЗапрос.ВнешнийНомерЗаказа
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |   МАКСИМУМ(ФактическийПриходЗаказовНаСкладЗаказы.Заказ) КАК Заказ,
                |   ФактическийПриходЗаказовНаСкладЗаказы.НомерЗаказа КАК НомерЗаказа,
                |   МАКСИМУМ(ЕСТЬNULL(ВТ_Итог.ЕстьВПриходе, ЛОЖЬ)) КАК ЕстьВПриходе,
                |   МАКСИМУМ(ЕСТЬNULL(ВТ_Итог.ЕстьНаСканере, ЛОЖЬ)) КАК ЕстьНаСканере,
                |   МАКСИМУМ(ЕСТЬNULL(ВТ_Итог.КоличествоМестПриход, 0)) КАК КоличествоМестПриход,
                |   МАКСИМУМ(ЕСТЬNULL(ВТ_Итог.КоличествоМестСканировано, 0)) КАК КоличествоМестСканировано,
                |   ВТ_Итог.ДокументПрихода
                |ИЗ
                |   Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
                |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итог КАК ВТ_Итог
                |       ПО ФактическийПриходЗаказовНаСкладЗаказы.Заказ = ВТ_Итог.Заказ
                |ГДЕ
                |   ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
                |   И (НЕ ФактическийПриходЗаказовНаСкладЗаказы.ЕстьВПриходе
                |           ИЛИ НЕ ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканере)
                |
                |СГРУППИРОВАТЬ ПО
                |   ФактическийПриходЗаказовНаСкладЗаказы.НомерЗаказа,
                |   ВТ_Итог.ДокументПрихода";

    
		Зап.УстановитьПараметр("ДатаНач", ДатаНачалаВыборки+86400);		
		Зап.УстановитьПараметр("ДатаКон", ДатаОкончанияВыборки+43200);
		Зап.УстановитьПараметр("ДатаНач1", ДатаНачалаВыборки+86400);		
		Зап.УстановитьПараметр("ДатаКон1", ДатаОкончанияВыборки+43200);
        ////Серегин М.В. 20.08.2015 11:01:22 старый код
        //Зап.УстановитьПараметр("Контрагент", Контрагент.Ссылка);
        //Серегин М.В. 20.08.2015 11:01:26 новый код
		Зап.УстановитьПараметр("Контрагент", Контрагенты.ВыгрузитьКолонку("Контрагент"));
        Зап.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка );
		
		ТаблицаСмена2 = Зап.Выполнить().Выгрузить();
        
        Для Каждого Тек Из Заказы Цикл
            НайденаяСтрока = ТаблицаСмена2.Найти(Тек.Заказ);
            Если ЗначениеЗаполнено(НайденаяСтрока) Тогда 
                Если НЕ Тек.ЕстьВПриходе Тогда
                    Тек.ЕстьВПриходе = НайденаяСтрока.ЕстьВПриходе;
                КонецЕсли;
                Если НЕ Тек.ЕстьНаСканере Тогда
                    Тек.ЕстьНаСканере = НайденаяСтрока.ЕстьНаСканере;
                КонецЕсли;
                Тек.КоличествоМестПриход = НайденаяСтрока.КоличествоМестПриход;
                Тек.КоличествоМестСканировано = НайденаяСтрока.КоличествоМестСканировано;
                
                Если Тек.ЕстьВПриходе Тогда
                    Тек.СуммаВПриходе = Тек.СуммаВСистеме;  
                    Тек.КоличествоВПриходе = Тек.КоличествоВСистеме;
                КонецЕсли;
                Если Тек.ЕстьНаСканере Тогда
                    Тек.СуммаНаСканере = Тек.СуммаВСистеме;
                    Тек.КоличествоНаСканере = Тек.КоличествоВСистеме;
                КонецЕсли;
                
                Тек.ЕстьВПриходеЗаполнено = Тек.ЕстьВПриходе;
                Тек.ЕстьНаСканереЗаполнено = Тек.ЕстьНаСканере;
                Тек.ДокументПрихода = НайденаяСтрока.ДокументПрихода;
                Тек.Смена = Смена2;
            КонецЕсли;
        КонецЦикла;
        
		Зап.Текст = "ВЫБРАТЬ
		            |	ПриходЗаказовНаСклад.Ссылка КАК ПриходныйДокумент
		            |ИЗ
		            |	Документ.ПриходЗаказовНаСклад КАК ПриходЗаказовНаСклад
		            |ГДЕ
		            |	ПриходЗаказовНаСклад.Ссылка.ПометкаУдаления = ЛОЖЬ
		            |	И ПриходЗаказовНаСклад.Дата МЕЖДУ &ДатаНач И &ДатаКон
		            |	И ПриходЗаказовНаСклад.Контрагент.Ссылка В (&Контрагент)
		            |
		            |УПОРЯДОЧИТЬ ПО
		            |	ПриходЗаказовНаСклад.Ссылка";
		
		Зап.УстановитьПараметр("ДатаНач", ДатаНачалаВыборки+86400);		
		Зап.УстановитьПараметр("ДатаКон", ДатаОкончанияВыборки+43200);
        ////Серегин М.В. 20.08.2015 11:01:45 старый код
        //Зап.УстановитьПараметр("Контрагент", Контрагент.Ссылка);
        //Серегин М.В. 20.08.2015 11:01:49 новый код
        Зап.УстановитьПараметр("Контрагент", Контрагенты.ВыгрузитьКолонку("Контрагент"));

		Рез = Зап.Выполнить().Выгрузить();
		
		Для Каждого Тек Из Рез Цикл
			Нов = ПриходныеДокументы.Добавить();
			ЗаполнитьЗначенияСвойств(Нов, Тек);
            нов.Смена = Смена2;
            Нов.Учитывать = Истина;
		КонецЦикла;	
		
		
		Зап.Текст = "ВЫБРАТЬ
		            |	ЗагрузкаСТСДШтрихкоды.Ссылка КАК ЗагрузкаСТСД
		            |ИЗ
		            |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		            |ГДЕ
		            |	ЗагрузкаСТСДШтрихкоды.Ссылка.ПометкаУдаления = ЛОЖЬ
		            |	И ЗагрузкаСТСДШтрихкоды.Контрагент.Ссылка В (&Контрагент)
		            |	И ЗагрузкаСТСДШтрихкоды.Ссылка.ДатаДокумента МЕЖДУ &ДатаНач И &ДатаКон
		            |
		            |СГРУППИРОВАТЬ ПО
		            |	ЗагрузкаСТСДШтрихкоды.Ссылка
		            |
		            |УПОРЯДОЧИТЬ ПО
		            |	ЗагрузкаСТСДШтрихкоды.Ссылка";
		
		Зап.УстановитьПараметр("ДатаНач", ДатаНачалаВыборки+86400);		
		Зап.УстановитьПараметр("ДатаКон", ДатаОкончанияВыборки+43200);
        ////Серегин М.В. 20.08.2015 11:02:08 старый код
        //Зап.УстановитьПараметр("Контрагент", Контрагент.Ссылка);
        //Серегин М.В. 20.08.2015 11:02:21 новый код
		Зап.УстановитьПараметр("Контрагент", Контрагенты.ВыгрузитьКолонку("Контрагент"));
		Рез = Зап.Выполнить().Выгрузить();
		
		Для Каждого Тек Из Рез Цикл
			Нов = ДокументыТСД.Добавить();
			ЗаполнитьЗначенияСвойств(Нов, Тек);
            нов.Смена = Смена2;
        КонецЦикла;	
        
        //Итоги
        СуммаВСистеме = Заказы.Итог("СуммаВСистеме");
        СуммаВПриходе = Заказы.Итог("СуммаВПриходе");
        СуммаНаСканере = Заказы.Итог("СуммаНаСканере");
        
        ИтогоЕстьВСистеме = Заказы.НайтиСтроки(Новый Структура("ЕстьВСистеме",Истина)).Количество();
        ИтогоЕстьВСистеме = ИтогоЕстьВСистеме;
        ИтогоЕстьВПриходе = Заказы.НайтиСтроки(Новый Структура("ЕстьВПриходе",Истина)).Количество();
        ИтогоЕстьВПриходе = ИтогоЕстьВПриходе;
        ИтогоЕстьНаСканере = Заказы.НайтиСтроки(Новый Структура("ЕстьНаСканере",Истина)).Количество();
        ИтогоЕстьНаСканере = ИтогоЕстьНаСканере;
        
        КоличествоВСистеме = Заказы.Итог("КоличествоВСистеме");
        КоличествоВПриходе = Заказы.Итог("КоличествоВПриходе");
        КоличествоНаСканере = Заказы.Итог("КоличествоНаСканере");

КонецПроцедуры

//Закрытие документа
&НаСервере
Функция ЗакрытьДокумент() Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   СУММА(1) КАК КоличествоРасходжений
        |ПОМЕСТИТЬ ВТ_КоличествоРасхождений
        |ИЗ
        |   Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
        |ГДЕ
        |   ФактическийПриходЗаказовНаСкладЗаказы.ЕстьВПриходеЗаполнено <> ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканереЗаполнено
        |   И ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
        |   И НЕ ФактическийПриходЗаказовНаСкладЗаказы.ЗаказНаУстановку
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ АктРасхожденияПоПриходу.Ссылка) КАК КоличествоАктов
        |ПОМЕСТИТЬ ВТ_КоличествоАктов
        |ИЗ
        |   Документ.АктРасхожденияПоПриходу КАК АктРасхожденияПоПриходу
        |ГДЕ
        |   АктРасхожденияПоПриходу.ФактическийПриходЗаказов = &Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ЕСТЬNULL(ВТ_КоличествоРасхождений.КоличествоРасходжений, 0) КАК КоличествоРасходжений,
        |   0 КАК КоличествоАктов
        |ПОМЕСТИТЬ ВТ_Объединение
        |ИЗ
        |   ВТ_КоличествоРасхождений КАК ВТ_КоличествоРасхождений
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   0,
        |   ЕСТЬNULL(ВТ_КоличествоАктов.КоличествоАктов, 0)
        |ИЗ
        |   ВТ_КоличествоАктов КАК ВТ_КоличествоАктов
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   МАКСИМУМ(ВТ_Объединение.КоличествоРасходжений) КАК КоличествоРасходжений,
        |   МАКСИМУМ(ВТ_Объединение.КоличествоАктов) КАК КоличествоАктов
        |ПОМЕСТИТЬ ВТ_Итог
        |ИЗ
        |   ВТ_Объединение КАК ВТ_Объединение
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВЫБОР
        |       КОГДА ВТ_Итог.КоличествоРасходжений = 0
        |           ТОГДА ИСТИНА
        |       ИНАЧЕ ВЫБОР
        |               КОГДА ВТ_Итог.КоличествоАктов > 0
        |                   ТОГДА ИСТИНА
        |               ИНАЧЕ ЛОЖЬ
        |           КОНЕЦ
        |   КОНЕЦ КАК НетРасхождений
        |ИЗ
        |   ВТ_Итог КАК ВТ_Итог";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если НЕ ЭтотОбъект.Закрыт Тогда
        Если ВыборкаДетальныеЗаписи.Следующий() Тогда
            Если ВыборкаДетальныеЗаписи.НетРасхождений Тогда
                ЭтотОбъект.Закрыт = Не ЭтотОбъект.Закрыт;
                Возврат Истина;
            Иначе
                Возврат Ложь;
            КонецЕсли;
        КонецЕсли;
    Иначе
        ЭтотОбъект.Закрыт = Не ЭтотОбъект.Закрыт;
    КонецЕсли;
КонецФункции

//Создание/Поиск актаРасхожденияПоПриходу 
&НаСервере
Функция Создать_ОткрытьАктРасхожденияПоПриходу() Экспорт
    
    //Ищем уже созданный документ, если нет то создаем и заполняем новый
    АктРасхожденияПоПриходу = Документы.АктРасхожденияПоПриходу.НайтиПоРеквизиту("ФактическийПриходЗаказов",ЭтотОбъект.Ссылка);
    Если ЗначениеЗаполнено(АктРасхожденияПоПриходу) И АктРасхожденияПоПриходу.Заказы.Количество()>0 Тогда
        АктОбъект = АктРасхожденияПоПриходу.ПолучитьОбъект();
        
    ИначеЕсли ЗначениеЗаполнено(АктРасхожденияПоПриходу) И АктРасхожденияПоПриходу.Заказы.Количество()=0 Тогда
        РезультатЗапроса = ПолучитьДанныеДляЗаполненияАкта();
        Если РезультатЗапроса.Выгрузить().Количество()>0 Тогда 
            АктОбъект = АктРасхожденияПоПриходу.ПолучитьОбъект();
            ЗаполнитьАктРасхожденияПоПриходу(РезультатЗапроса,АктОбъект);
            АктОбъект.Записать();
            АктРасхожденияПоПриходу = АктОбъект.Ссылка;
        Иначе //нет расхождений, документ создавать не надо
            Возврат Неопределено
        КонецЕсли;
        
    Иначе    
        РезультатЗапроса = ПолучитьДанныеДляЗаполненияАкта();
        Если РезультатЗапроса.Выгрузить().Количество()>0 Тогда 
            АктОбъект = Документы.АктРасхожденияПоПриходу.СоздатьДокумент();
            ЗаполнитьАктРасхожденияПоПриходу(РезультатЗапроса,АктОбъект);
            АктОбъект.Записать();
            АктРасхожденияПоПриходу = АктОбъект.Ссылка;
        Иначе //нет расхождений, документ создавать не надо
            Возврат Неопределено
        КонецЕсли;
    КонецЕсли;
    
    Возврат АктОбъект;
КонецФункции // ()

&НаСервере
Функция ПолучитьДанныеДляЗаполненияАкта()

    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ФактическийПриходЗаказовНаСкладЗаказы.Заказ,
        |   ФактическийПриходЗаказовНаСкладЗаказы.НомерЗаказа КАК НомерВнешнегоЗаказа
        |ПОМЕСТИТЬ ВТ_Заказы
        |ИЗ
        |   Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
        |ГДЕ
        |   ФактическийПриходЗаказовНаСкладЗаказы.ЕстьВПриходеЗаполнено <> ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканереЗаполнено
        |   И ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВложенныйЗапрос.Номенклатура,
        |   МАКСИМУМ(ВложенныйЗапрос.Цена) КАК Цена,
        |   СУММА(ВложенныйЗапрос.Количество) КАК Количество,
        |   ВложенныйЗапрос.НомерВнешнегоЗаказа,
        |   СУММА(ВложенныйЗапрос.Сумма) КАК Сумма
        |ПОМЕСТИТЬ ВТ_НоменклатураРеализации
        |ИЗ
        |   (ВЫБРАТЬ
        |       РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
        |       РеализацияТоваровУслугТовары.Цена КАК Цена,
        |       РеализацияТоваровУслугТовары.Количество КАК Количество,
        |       РеализацияТоваровУслугТовары.Ссылка.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
        |       РеализацияТоваровУслугТовары.Сумма КАК Сумма
        |   ИЗ
        |       Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
        |           ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
        |           ПО РеализацияТоваровУслугТовары.Ссылка.НомерВнешнегоЗаказа = ВТ_Заказы.НомерВнешнегоЗаказа
        |   
        |   ОБЪЕДИНИТЬ ВСЕ
        |   
        |   ВЫБРАТЬ
        |       РеализацияТоваровУслугУслуги.Номенклатура,
        |       РеализацияТоваровУслугУслуги.Цена,
        |       РеализацияТоваровУслугУслуги.Количество,
        |       РеализацияТоваровУслугУслуги.Ссылка.НомерВнешнегоЗаказа,
        |       РеализацияТоваровУслугУслуги.Сумма
        |   ИЗ
        |       Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
        |           ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
        |           ПО РеализацияТоваровУслугУслуги.Ссылка.НомерВнешнегоЗаказа = ВТ_Заказы.НомерВнешнегоЗаказа
        |   
        |   ОБЪЕДИНИТЬ ВСЕ
        |   
        |   ВЫБРАТЬ
        |       РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
        |       РеализацияТоваровУслугПодарочныеПозиции.Цена,
        |       РеализацияТоваровУслугПодарочныеПозиции.Количество,
        |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка.НомерВнешнегоЗаказа,
        |       РеализацияТоваровУслугПодарочныеПозиции.Сумма
        |   ИЗ
        |       Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
        |           ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
        |           ПО РеализацияТоваровУслугПодарочныеПозиции.Ссылка.НомерВнешнегоЗаказа = ВТ_Заказы.НомерВнешнегоЗаказа) КАК ВложенныйЗапрос
        |
        |СГРУППИРОВАТЬ ПО
        |   ВложенныйЗапрос.Номенклатура,
        |   ВложенныйЗапрос.НомерВнешнегоЗаказа
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВТ_Заказы.Заказ КАК Заказ,
        |   ВТ_НоменклатураРеализации.Номенклатура КАК Товар,
        |   ВТ_НоменклатураРеализации.Цена,
        |   ВТ_НоменклатураРеализации.Количество,
        |   ВТ_НоменклатураРеализации.Сумма,
        |   ВТ_Заказы.Заказ.Номер КАК НомерЗаказа
        |ИЗ
        |   ВТ_Заказы КАК ВТ_Заказы
        |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НоменклатураРеализации КАК ВТ_НоменклатураРеализации
        |       ПО ВТ_Заказы.НомерВнешнегоЗаказа = ВТ_НоменклатураРеализации.НомерВнешнегоЗаказа
        |
        |УПОРЯДОЧИТЬ ПО
        |   Заказ
        |ИТОГИ ПО
        |   Заказ
        |АВТОУПОРЯДОЧИВАНИЕ";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    
   Возврат  Запрос.Выполнить();
    
КонецФункции // ()

&НаСервере
Процедура ЗаполнитьАктРасхожденияПоПриходу(РезультатЗапроса,АктОбъект)
    
    //Заполнение шапки 
    АктОбъект.Дата = ТекущаяДата();
    АктОбъект.ФактическийПриходЗаказов = Ссылка;
    
    //Заполнение табличных частей
    ТабличнаяЧастьЗаказы = АктОбъект.Заказы; 
    ТабличнаяЧастьРасхождения = АктОбъект.ТоварыРасхождения;
    ТабличнаяЧастьТовары = АктОбъект.Товары; 
    
    ВыборкаЗаказ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    
    Пока ВыборкаЗаказ.Следующий() Цикл
        СтрокаТЧЗ = ТабличнаяЧастьЗаказы.Добавить();
        ЗаполнитьЗначенияСвойств(СтрокаТЧЗ,ВыборкаЗаказ);
    
        ВыборкаДетальныеЗаписи = ВыборкаЗаказ.Выбрать();
    
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            СтрокаТЧР = ТабличнаяЧастьРасхождения.Добавить();
            ЗаполнитьЗначенияСвойств(СтрокаТЧР,ВыборкаДетальныеЗаписи);
            СтрокаТЧР.СуммаЗаказа = ВыборкаДетальныеЗаписи.Сумма;
            СтрокаТЧР.СуммаРасхождения = ВыборкаДетальныеЗаписи.Сумма;
            
            СтрокаТЧТ = ТабличнаяЧастьТовары.Добавить();
            ЗаполнитьЗначенияСвойств(СтрокаТЧТ,ВыборкаДетальныеЗаписи);
            СтрокаТЧТ.СуммаЗаказа = ВыборкаДетальныеЗаписи.Сумма;
            СтрокаТЧТ.СуммаРасхождения = ВыборкаДетальныеЗаписи.Сумма;
        КонецЦикла;
    КонецЦикла;
КонецПроцедуры // ()

&НаСервере
Процедура ПодтвердитьПоступленияНаСервере() Экспорт
    //Получим выборку по поступлениям (только когда все три галочки стоят)
    ДанныеВыборки = ПолучитьПоступленияДляПодтверждения();
    ЭтотОбъект.ПодтвержденныеПоступления.Очистить();
    Пока ДанныеВыборки.Следующий() Цикл
        ПоступлениеОбъект = ДанныеВыборки.ПоступлениеТоваровУслуг.ПолучитьОбъект();
        //Если заполнен документ прихода значит галочки по приходу проставлены автоматически
        //иначе вручную, тогда берем дату и номер из реквизитов объекта
        Если  ЗначениеЗаполнено(ДанныеВыборки.ДокументПрихода) Тогда
            ПоступлениеОбъект.ДатаВходящегоДокумента = ДанныеВыборки.ДокументПрихода.ДатаВходящегоДокумента;
            ПоступлениеОбъект.НомерВходящегоДокумента = ДанныеВыборки.ДокументПрихода.НомерВходящегоДокумента;
        Иначе
            ПоступлениеОбъект.ДатаВходящегоДокумента = ДатаВходящегоДокумента;
            ПоступлениеОбъект.НомерВходящегоДокумента = НомерВходящегоДокумента;
        КонецЕсли;
        ПоступлениеОбъект.ПоступлениеПодтверждено = Истина;
        Попытка
            ПоступлениеОбъект.Записать(РежимЗаписиДокумента.Запись);
            //Заполняем ТЧПодтвержденныеПоступления нашего объекта 
            СтрокаТЧПП = ЭтотОбъект.ПодтвержденныеПоступления.Добавить();
            ЗаполнитьЗначенияСвойств(СтрокаТЧПП,ДанныеВыборки);
        Исключение
            //Сообщить(ОписаниеОшибки());
        КонецПопытки;
    КонецЦикла;
    //Пробуем записать наш объект
    Попытка
        ЭтотОбъект.Записать();
    Исключение
        //Сообщить(ОписаниеОшибки());
    КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПолучитьПоступленияДляПодтверждения()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ПоступлениеТоваровУслуг.Ссылка КАК ПоступлениеТоваровУслуг,
        |   ФактическийПриходЗаказовНаСкладЗаказы.ДокументПрихода
        |ИЗ
        |   Документ.ФактическийПриходЗаказовНаСклад.Заказы КАК ФактическийПриходЗаказовНаСкладЗаказы
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
        |       ПО ФактическийПриходЗаказовНаСкладЗаказы.Заказ.Номер = ПоступлениеТоваровУслуг.Номер
        |ГДЕ
        |   ФактическийПриходЗаказовНаСкладЗаказы.Ссылка = &Ссылка
        |   И ФактическийПриходЗаказовНаСкладЗаказы.ЕстьВСистемеЗаполнено
        |   И ФактическийПриходЗаказовНаСкладЗаказы.ЕстьВПриходеЗаполнено
        |   И ФактическийПриходЗаказовНаСкладЗаказы.ЕстьНаСканереЗаполнено";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    
    Возврат Запрос.Выполнить().Выбрать();

КонецФункции // ПолучитьПоступленияДляПодтверждения()

//
Функция ПолучитьТекстЗапроса()

    Возврат "ВЫБРАТЬ
            |   ВложенныйЗапрос.ВнешнийНомерЗаказа,
            |   ВложенныйЗапрос.Заказ,
            |   СУММА(ВложенныйЗапрос.КоличествоМест) КАК КоличествоМест,
            |   МАКСИМУМ(ВложенныйЗапрос.Контрагент) КАК Контрагент,
            |   ВложенныйЗапрос.СкладМагазина
            |ПОМЕСТИТЬ ВТ_ВСистеме
            |ИЗ
            |   (ВЫБРАТЬ
            |       РеализацияТоваровУслугТовары.Ссылка КАК Заказ,
            |       РеализацияТоваровУслугТовары.Ссылка.НомерВнешнегоЗаказа КАК ВнешнийНомерЗаказа,
            |       РеализацияТоваровУслугТовары.КоличествоМест КАК КоличествоМест,
            |       РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара КАК Контрагент,
            |       РеализацияТоваровУслугТовары.СкладМагазина КАК СкладМагазина
            |   ИЗ
            |       Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
            |   ГДЕ
            |       РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
            |       И РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара В(&Контрагент)
            |       И &ЗаполнятьПоДате = 1
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       РеализацияТоваровУслугУслуги.Ссылка,
            |       РеализацияТоваровУслугУслуги.Ссылка.НомерВнешнегоЗаказа,
            |       0,
            |       РеализацияТоваровУслугУслуги.Ссылка.ВладелецТовара,
            |       NULL
            |   ИЗ
            |       Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
            |   ГДЕ
            |       РеализацияТоваровУслугУслуги.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
            |       И РеализацияТоваровУслугУслуги.Ссылка.ВладелецТовара В(&Контрагент)
            |       И &ЗаполнятьПоДате = 1
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка,
            |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка.НомерВнешнегоЗаказа,
            |       РеализацияТоваровУслугПодарочныеПозиции.КоличествоМест,
            |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ВладелецТовара,
            |       РеализацияТоваровУслугПодарочныеПозиции.СкладМагазина
            |   ИЗ
            |       Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
            |   ГДЕ
            |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
            |       И РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ВладелецТовара В(&Контрагент)
            |       И &ЗаполнятьПоДате = 1
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       РеализацияТоваровУслуг.Ссылка,
            |       РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
            |       ПоступлениеТоваровУслугТовары.КоличествоМест,
            |       ПоступлениеТоваровУслугТовары.Ссылка.Контрагент,
            |       ПоступлениеТоваровУслугТовары.СкладМагазина
            |   ИЗ
            |       Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
            |           ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |           ПО ПоступлениеТоваровУслугТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
            |   ГДЕ
            |       &ЗаполнятьПоДате = 2
            |       И ПоступлениеТоваровУслугТовары.Ссылка.Контрагент В(&Контрагент)
            |       И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       РеализацияТоваровУслуг.Ссылка,
            |       РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
            |       0,
            |       ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент,
            |       NULL
            |   ИЗ
            |       Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
            |           ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |           ПО ПоступлениеТоваровУслугУслуги.Ссылка.Номер = РеализацияТоваровУслуг.Номер
            |   ГДЕ
            |       &ЗаполнятьПоДате = 2
            |       И ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент В(&Контрагент)
            |       И ПоступлениеТоваровУслугУслуги.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       РеализацияТоваровУслуг.Ссылка,
            |       РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
            |       ПоступлениеТоваровУслугПодарочныеПозиции.КоличествоМест,
            |       ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент,
            |       ПоступлениеТоваровУслугПодарочныеПозиции.СкладМагазина
            |   ИЗ
            |       Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
            |           ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |           ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер = РеализацияТоваровУслуг.Номер
            |   ГДЕ
            |       &ЗаполнятьПоДате = 2
            |       И ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент В(&Контрагент)
            |       И ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2) КАК ВложенныйЗапрос
            |
            |СГРУППИРОВАТЬ ПО
            |   ВложенныйЗапрос.ВнешнийНомерЗаказа,
            |   ВложенныйЗапрос.Заказ,
            |   ВложенныйЗапрос.СкладМагазина
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   ПриходЗаказовНаСкладЗаказы.ВнешнийНомерЗаказа,
            |   ПриходЗаказовНаСкладЗаказы.Заказ,
            |   ПриходЗаказовНаСкладЗаказы.КоличествоМест,
            |   ПриходЗаказовНаСкладЗаказы.Ссылка КАК ДокументПрихода,
            |   ПриходЗаказовНаСкладЗаказы.Ссылка.Контрагент,
            |   ПриходЗаказовНаСкладЗаказы.Ссылка.СкладМагазина
            |ПОМЕСТИТЬ ВТПриходПоЭДО
            |ИЗ
            |   Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
            |ГДЕ
            |   ПриходЗаказовНаСкладЗаказы.Ссылка.ПометкаУдаления = ЛОЖЬ
            |   И ПриходЗаказовНаСкладЗаказы.Ссылка.Дата МЕЖДУ &ДатаНач1 И &ДатаКон1
            |   И ПриходЗаказовНаСкладЗаказы.Ссылка.Контрагент В(&Контрагент)
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   ЗагрузкаСТСДШтрихкоды.ВнешнийНомерЗаказа,
            |   ЗагрузкаСТСДШтрихкоды.Заказ,
            |   ЗагрузкаСТСДШтрихкоды.КоличествоМест,
            |   ЗагрузкаСТСДШтрихкоды.Контрагент
            |ПОМЕСТИТЬ ВТЗагрузкаСТСД
            |ИЗ
            |   Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
            |ГДЕ
            |   ЗагрузкаСТСДШтрихкоды.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
            |   И ЗагрузкаСТСДШтрихкоды.Ссылка.ПометкаУдаления = ЛОЖЬ
            |   И ЗагрузкаСТСДШтрихкоды.Контрагент.Ссылка В(&Контрагент)
            |   И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFi) Или ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute) Или ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом) Или ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.Аксиомус)) 
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   ВложенныйЗапрос.Номер,
            |   СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
            |   СУММА(ВложенныйЗапрос.Количество) КАК Количество
            |ПОМЕСТИТЬ ВТ_Суммы
            |ИЗ
            |   (ВЫБРАТЬ
            |       ПоступлениеТоваровУслугТовары.Ссылка.Номер КАК Номер,
            |       ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
            |       ПоступлениеТоваровУслугТовары.Количество КАК Количество
            |   ИЗ
            |       Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       ПоступлениеТоваровУслугУслуги.Ссылка.Номер,
            |       ПоступлениеТоваровУслугУслуги.Сумма,
            |       ПоступлениеТоваровУслугУслуги.Количество
            |   ИЗ
            |       Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер,
            |       ПоступлениеТоваровУслугПодарочныеПозиции.Сумма,
            |       ПоступлениеТоваровУслугПодарочныеПозиции.Количество
            |   ИЗ
            |       Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции) КАК ВложенныйЗапрос
            |
            |СГРУППИРОВАТЬ ПО
            |   ВложенныйЗапрос.Номер
            |
            |ИНДЕКСИРОВАТЬ ПО
            |   ВложенныйЗапрос.Номер
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   ВложенныйЗапрос.Заказ,
            |   МАКСИМУМ(ВложенныйЗапрос.ЕстьВСистеме) КАК ЕстьВСистеме,
            |   МАКСИМУМ(ВложенныйЗапрос.ЕстьВПриходе) КАК ЕстьВПриходе,
            |   МАКСИМУМ(ВложенныйЗапрос.ЕстьНаСканере) КАК ЕстьНаСканере,
            |   СУММА(ВложенныйЗапрос.КоличествоМестСистема) КАК КоличествоМестСистема,
            |   СУММА(ВложенныйЗапрос.КоличествоМестПриход) КАК КоличествоМестПриход,
            |   СУММА(ВложенныйЗапрос.КоличествоМестСканировано) КАК КоличествоМестСканировано,
            |   ВложенныйЗапрос.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
            |   МАКСИМУМ(ВложенныйЗапрос.ДокументПрихода) КАК ДокументПрихода,
            |   МАКСИМУМ(ВложенныйЗапрос.Контрагент) КАК Контрагент,
            |   МАКСИМУМ(ВложенныйЗапрос.СкладМагазина) КАК СкладМагазина
            |ПОМЕСТИТЬ ВТ_Итог
            |ИЗ
            |   (ВЫБРАТЬ
            |       ИСТИНА КАК ЕстьВСистеме,
            |       ЛОЖЬ КАК ЕстьВПриходе,
            |       ЛОЖЬ КАК ЕстьНаСканере,
            |       ВТ_ВСистеме.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
            |       ВТ_ВСистеме.КоличествоМест КАК КоличествоМестСистема,
            |       0 КАК КоличествоМестПриход,
            |       0 КАК КоличествоМестСканировано,
            |       ВТ_ВСистеме.Заказ КАК Заказ,
            |       NULL КАК ДокументПрихода,
            |       ВТ_ВСистеме.Контрагент КАК Контрагент,
            |       ВТ_ВСистеме.СкладМагазина КАК СкладМагазина
            |   ИЗ
            |       ВТ_ВСистеме КАК ВТ_ВСистеме
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       ЛОЖЬ,
            |       ИСТИНА,
            |       ЛОЖЬ,
            |       ВТПриходПоЭДО.ВнешнийНомерЗаказа,
            |       0,
            |       ВТПриходПоЭДО.КоличествоМест,
            |       0,
            |       ВТПриходПоЭДО.Заказ,
            |       ВТПриходПоЭДО.ДокументПрихода,
            |       ВТПриходПоЭДО.Контрагент,
            |       ВТПриходПоЭДО.СкладМагазина
            |   ИЗ
            |       ВТПриходПоЭДО КАК ВТПриходПоЭДО
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       ЛОЖЬ,
            |       ЛОЖЬ,
            |       ИСТИНА,
            |       ВТЗагрузкаСТСД.ВнешнийНомерЗаказа,
            |       0,
            |       0,
            |       ВТЗагрузкаСТСД.КоличествоМест,
            |       ВТЗагрузкаСТСД.Заказ,
            |       NULL,
            |       ВТЗагрузкаСТСД.Контрагент,
            |       NULL
            |   ИЗ
            |       ВТЗагрузкаСТСД КАК ВТЗагрузкаСТСД) КАК ВложенныйЗапрос
            |
            |СГРУППИРОВАТЬ ПО
            |   ВложенныйЗапрос.Заказ,
            |   ВложенныйЗапрос.ВнешнийНомерЗаказа
            |
            |ИНДЕКСИРОВАТЬ ПО
            |   ВложенныйЗапрос.Заказ
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   СтатусыСкладскогоУчета.Заказ
            |ПОМЕСТИТЬ ВТ_Статусы
            |ИЗ
            |   РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
            |ГДЕ
            |   СтатусыСкладскогоУчета.Период <= &Период
            |   И (СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ПриходПроверен)
            |           ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.УчтеноРасхождение))
            |
            |СГРУППИРОВАТЬ ПО
            |   СтатусыСкладскогоУчета.Заказ
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   РеализацияТоваровУслугТовары.СкладМагазина,
            |   РеализацияТоваровУслугТовары.Ссылка
            |ПОМЕСТИТЬ ВТ_ЗаказыСкладыМагазина
            |ИЗ
            |   Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
            |ГДЕ
            |   РеализацияТоваровУслугТовары.Ссылка.Дата >= &ДатаНач2
            |   И НЕ РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления
            |   И РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара В(&Контрагент)
            |
            |ОБЪЕДИНИТЬ ВСЕ
            |
            |ВЫБРАТЬ
            |   РеализацияТоваровУслугПодарочныеПозиции.СкладМагазина,
            |   РеализацияТоваровУслугПодарочныеПозиции.Ссылка
            |ИЗ
            |   Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
            |ГДЕ
            |   РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Дата >= &ДатаНач2
            |   И НЕ РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ПометкаУдаления
            |   И РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ВладелецТовара В(&Контрагент)
            |
            |ИНДЕКСИРОВАТЬ ПО
            |   РеализацияТоваровУслугТовары.Ссылка
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   РеализацияТоваровУслуг.Ссылка КАК Заказ,
            |   МАКСИМУМ(ВТ_ЗаказыСкладыМагазина.СкладМагазина) КАК СкладМагазина
            |ПОМЕСТИТЬ ВТ_Заказы
            |ИЗ
            |   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыСкладыМагазина КАК ВТ_ЗаказыСкладыМагазина
            |       ПО (ВТ_ЗаказыСкладыМагазина.Ссылка = РеализацияТоваровУслуг.Ссылка)
            |ГДЕ
            |   РеализацияТоваровУслуг.Дата >= &ДатаНач2
            |   И НЕ РеализацияТоваровУслуг.ПометкаУдаления
            |   И РеализацияТоваровУслуг.ВладелецТовара В(&Контрагент)
            |
            |СГРУППИРОВАТЬ ПО
            |   РеализацияТоваровУслуг.Ссылка
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   СУММА(ВложенныйЗапрос.Количество) КАК Количество,
            |   ВложенныйЗапрос.Номер
            |ПОМЕСТИТЬ ВТ_РеализацияКоличество
            |ИЗ
            |   (ВЫБРАТЬ
            |       РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
            |       РеализацияТоваровУслугТовары.Количество КАК Количество
            |   ИЗ
            |       Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
            |   ГДЕ
            |       НЕ РеализацияТоваровУслугТовары.Номенклатура.Артикул В
            |                   (ВЫБРАТЬ
            |                       УслугиПоЗаказам.Артикул
            |                   ИЗ
            |                       Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
            |   
            |   ОБЪЕДИНИТЬ ВСЕ
            |   
            |   ВЫБРАТЬ
            |       РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
            |       РеализацияТоваровУслугПодарочныеПозиции.Количество
            |   ИЗ
            |       Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
            |   ГДЕ
            |       НЕ РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
            |                   (ВЫБРАТЬ
            |                       УслугиПоЗаказам.Артикул
            |                   ИЗ
            |                       Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)) КАК ВложенныйЗапрос
            |
            |СГРУППИРОВАТЬ ПО
            |   ВложенныйЗапрос.Номер
            |
            |ИНДЕКСИРОВАТЬ ПО
            |   ВложенныйЗапрос.Номер
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
            |   СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество
            |ПОМЕСТИТЬ ВТ_ВозвратПокупателяюКоличество
            |ИЗ
            |   Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
            |ГДЕ
            |   НЕ ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул В
            |               (ВЫБРАТЬ
            |                   УслугиПоЗаказам.Артикул
            |               ИЗ
            |                   Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
            |
            |СГРУППИРОВАТЬ ПО
            |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
            |
            |ИНДЕКСИРОВАТЬ ПО
            |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   РеализацияТоваровУслуг.Ссылка.Номер КАК РеализацияНомер,
            |   новаМестнаяДоставка.Ссылка.Номер КАК МестнаяДоставкаНомер,
            |   ВТ_ВозвратПокупателяюКоличество.Номер КАК ВозвратНомер,
            |   ЕСТЬNULL(ВТ_ВозвратПокупателяюКоличество.Количество, 0) КАК ВозвратКоличество,
            |   ЕСТЬNULL(ВТ_РеализацияКоличество.Количество, 0) КАК РеализацияКоличество,
            |   РеализацияТоваровУслуг.Ссылка КАК Заказ
            |ПОМЕСТИТЬ ВТ_Промежуточная
            |ИЗ
            |   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |       ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
            |       ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеализацияКоличество КАК ВТ_РеализацияКоличество
            |       ПО РеализацияТоваровУслуг.Номер = ВТ_РеализацияКоличество.Номер
            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВозвратПокупателяюКоличество КАК ВТ_ВозвратПокупателяюКоличество
            |       ПО РеализацияТоваровУслуг.Номер = ВТ_ВозвратПокупателяюКоличество.Номер
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   ВЫБОР
            |       КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
            |           ТОГДА ВЫБОР
            |                   КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
            |                       ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
            |                   ИНАЧЕ ВЫБОР
            |                           КОГДА ВТ_Итог.РеализацияКоличество = 0
            |                                   И ВТ_Итог.ВозвратКоличество > 0
            |                               ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
            |                           ИНАЧЕ ВЫБОР
            |                                   КОГДА ВТ_Итог.РеализацияКоличество > 0
            |                                           И ВТ_Итог.ВозвратКоличество > 0
            |                                       ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
            |                                   ИНАЧЕ НЕОПРЕДЕЛЕНО
            |                               КОНЕЦ
            |                       КОНЕЦ
            |               КОНЕЦ
            |       ИНАЧЕ ВЫБОР
            |               КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
            |                   ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
            |               ИНАЧЕ ВЫБОР
            |                       КОГДА ВТ_Итог.РеализацияКоличество = 0
            |                               И ВТ_Итог.ВозвратКоличество > 0
            |                           ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
            |                       ИНАЧЕ ВЫБОР
            |                               КОГДА ВТ_Итог.РеализацияКоличество > 0
            |                                       И ВТ_Итог.ВозвратКоличество > 0
            |                                   ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
            |                               ИНАЧЕ НЕОПРЕДЕЛЕНО
            |                           КОНЕЦ
            |                   КОНЕЦ
            |           КОНЕЦ
            |   КОНЕЦ КАК ТипЗаказа,
            |   ВТ_Итог.Заказ
            |ПОМЕСТИТЬ ВТ_ТипЗаказов
            |ИЗ
            |   ВТ_Промежуточная КАК ВТ_Итог
            |
            |ИНДЕКСИРОВАТЬ ПО
            |   ВТ_Итог.Заказ
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   ВТ_Итог.Заказ КАК Заказ,
            |   ЕСТЬNULL(ВТ_Итог.Заказ.НомерВнешнегоЗаказа, ВТ_Итог.ВнешнийНомерЗаказа) КАК НомерЗаказа,
            |   МАКСИМУМ(ВЫБОР
            |           КОГДА ВТ_Заказы.Заказ ЕСТЬ NULL 
            |               ТОГДА ВТ_Итог.ЕстьВСистеме
            |           ИНАЧЕ ИСТИНА
            |       КОНЕЦ) КАК ЕстьВСистеме,
            |   МАКСИМУМ(ВТ_Итог.ЕстьВПриходе) КАК ЕстьВПриходе,
            |   МАКСИМУМ(ВТ_Итог.ЕстьНаСканере) КАК ЕстьНаСканере,
            |   МАКСИМУМ(ВТ_Итог.КоличествоМестСистема) КАК КоличествоМестСистема,
            |   МАКСИМУМ(ВТ_Итог.КоличествоМестПриход) КАК КоличествоМестПриход,
            |   МАКСИМУМ(ВТ_Итог.КоличествоМестСканировано) КАК КоличествоМестСканировано,
            |   МАКСИМУМ(ВТ_Суммы.Сумма) КАК Сумма,
            |   МАКСИМУМ(ВТ_Суммы.Количество) КАК Количество,
            |   МАКСИМУМ(ВТ_Итог.ДокументПрихода) КАК ДокументПрихода,
            |   МАКСИМУМ(ВТ_Итог.Контрагент) КАК Контрагент,
            |   ЕСТЬNULL(ВТ_Итог.СкладМагазина, ВТ_Заказы.СкладМагазина) КАК СкладМагазина
            |ПОМЕСТИТЬ ВТ_Итоговая
            |ИЗ
            |   ВТ_Итог КАК ВТ_Итог
            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
            |       ПО (ВЫРАЗИТЬ(ВТ_Итог.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка.Номер = ВТ_Суммы.Номер)
            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
            |       ПО ВТ_Итог.Заказ = ВТ_Заказы.Заказ
            |ГДЕ
            |   НЕ ВТ_Итог.Заказ В
            |               (ВЫБРАТЬ
            |                   ВТ_Статусы.Заказ
            |               ИЗ
            |                   ВТ_Статусы КАК ВТ_Статусы)
            |
            |СГРУППИРОВАТЬ ПО
            |   ВТ_Итог.Заказ,
            |   ЕСТЬNULL(ВТ_Итог.Заказ.НомерВнешнегоЗаказа, ВТ_Итог.ВнешнийНомерЗаказа),
            |   ЕСТЬNULL(ВТ_Итог.СкладМагазина, ВТ_Заказы.СкладМагазина)
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   ВТ_Итоговая.Заказ,
            |   ВТ_Итоговая.НомерЗаказа,
            |   ВТ_Итоговая.ЕстьВСистеме,
            |   ВТ_Итоговая.ЕстьВПриходе,
            |   ВТ_Итоговая.ЕстьНаСканере,
            |   ВТ_Итоговая.КоличествоМестСистема,
            |   ВТ_Итоговая.КоличествоМестПриход,
            |   ВТ_Итоговая.КоличествоМестСканировано,
            |   ВТ_Итоговая.Сумма,
            |   ВТ_Итоговая.Количество,
            |   ВТ_Итоговая.ДокументПрихода,
            |   ЕСТЬNULL(ВТ_ТипЗаказов.ТипЗаказа, НЕОПРЕДЕЛЕНО) КАК ТипЗаказа,
            |   ЕСТЬNULL(ВЫРАЗИТЬ(ВТ_Итоговая.Заказ КАК Документ.РеализацияТоваровУслуг).ВладелецТовара, ВТ_Итоговая.Контрагент) КАК Контрагент,
            |   ЕСТЬNULL(ВТ_Итоговая.СкладМагазина, ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)) КАК СкладМагазина
            |ПОМЕСТИТЬ ВТ_КонечныйИТОГ
            |ИЗ
            |   ВТ_Итоговая КАК ВТ_Итоговая
            |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТипЗаказов КАК ВТ_ТипЗаказов
            |       ПО ВТ_Итоговая.Заказ = ВТ_ТипЗаказов.Заказ
            |ГДЕ
            |   НЕ ЕСТЬNULL(ВТ_ТипЗаказов.ТипЗаказа, НЕОПРЕДЕЛЕНО) В (&ТипЗаказа)
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |   ВТ_КонечныйИТОГ.Заказ,
            |   ВТ_КонечныйИТОГ.НомерЗаказа,
            |   ВТ_КонечныйИТОГ.ЕстьВСистеме,
            |   ВТ_КонечныйИТОГ.ЕстьВПриходе,
            |   ВТ_КонечныйИТОГ.ЕстьНаСканере,
            |   ВТ_КонечныйИТОГ.КоличествоМестСистема,
            |   ВТ_КонечныйИТОГ.КоличествоМестПриход,
            |   ВТ_КонечныйИТОГ.КоличествоМестСканировано,
            |   ВТ_КонечныйИТОГ.Сумма,
            |   ВТ_КонечныйИТОГ.Количество,
            |   ВТ_КонечныйИТОГ.ДокументПрихода,
            |   ВТ_КонечныйИТОГ.ТипЗаказа,
            |   ВТ_КонечныйИТОГ.Контрагент,
            |   ВЫБОР
            |       КОГДА ВТ_КонечныйИТОГ.Контрагент = &КонтрагентТопДеливери
            |               И ВТ_КонечныйИТОГ.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
            |           ТОГДА &СкладТопДеливери
            |       ИНАЧЕ ВТ_КонечныйИТОГ.СкладМагазина
            |   КОНЕЦ КАК СкладМагазина
            |ИЗ
            |   ВТ_КонечныйИТОГ КАК ВТ_КонечныйИТОГ
            |ГДЕ
            |   ИСТИНА
            |   И ВЫБОР
            |           КОГДА ВТ_КонечныйИТОГ.Контрагент = &КонтрагентТопДеливери
            |                   И ВТ_КонечныйИТОГ.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
            |               ТОГДА &СкладТопДеливери
            |           ИНАЧЕ ВТ_КонечныйИТОГ.СкладМагазина
            |       КОНЕЦ В (&СкладМагазина)";	

КонецФункции // ПолучитьТекстЗапроса()


// Михушкин - 15.04.2016 - запрос с терминалами --->>  
//
Функция ПолучитьТекстЗапросаПоТерминалам()

    Возврат "ВЫБРАТЬ
            |	ВложенныйЗапрос.ВнешнийНомерЗаказа,
            |	ВложенныйЗапрос.Заказ,
            |	СУММА(ВложенныйЗапрос.КоличествоМест) КАК КоличествоМест,
            |	МАКСИМУМ(ВложенныйЗапрос.Контрагент) КАК Контрагент,
            |	ВложенныйЗапрос.СкладМагазина
            |ПОМЕСТИТЬ ВТ_ВСистеме
            |ИЗ
            |	(ВЫБРАТЬ
            |		РеализацияТоваровУслугТовары.Ссылка КАК Заказ,
            |		РеализацияТоваровУслугТовары.Ссылка.НомерВнешнегоЗаказа КАК ВнешнийНомерЗаказа,
            |		РеализацияТоваровУслугТовары.КоличествоМест КАК КоличествоМест,
            |		РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара КАК Контрагент,
            |		РеализацияТоваровУслугТовары.СкладМагазина КАК СкладМагазина
            |	ИЗ
            |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
            |	ГДЕ
            |		РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
            |		И РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара В(&Контрагент)
            |		И &ЗаполнятьПоДате = 1
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		РеализацияТоваровУслугУслуги.Ссылка,
            |		РеализацияТоваровУслугУслуги.Ссылка.НомерВнешнегоЗаказа,
            |		0,
            |		РеализацияТоваровУслугУслуги.Ссылка.ВладелецТовара,
            |		NULL
            |	ИЗ
            |		Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
            |	ГДЕ
            |		РеализацияТоваровУслугУслуги.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
            |		И РеализацияТоваровУслугУслуги.Ссылка.ВладелецТовара В(&Контрагент)
            |		И &ЗаполнятьПоДате = 1
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка,
            |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка.НомерВнешнегоЗаказа,
            |		РеализацияТоваровУслугПодарочныеПозиции.КоличествоМест,
            |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ВладелецТовара,
            |		РеализацияТоваровУслугПодарочныеПозиции.СкладМагазина
            |	ИЗ
            |		Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
            |	ГДЕ
            |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
            |		И РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ВладелецТовара В(&Контрагент)
            |		И &ЗаполнятьПоДате = 1
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		РеализацияТоваровУслуг.Ссылка,
            |		РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
            |		ПоступлениеТоваровУслугТовары.КоличествоМест,
            |		ПоступлениеТоваровУслугТовары.Ссылка.Контрагент,
            |		ПоступлениеТоваровУслугТовары.СкладМагазина
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
            |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |			ПО ПоступлениеТоваровУслугТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
            |	ГДЕ
            |		&ЗаполнятьПоДате = 2
            |		И ПоступлениеТоваровУслугТовары.Ссылка.Контрагент В(&Контрагент)
            |		И ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		РеализацияТоваровУслуг.Ссылка,
            |		РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
            |		0,
            |		ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент,
            |		NULL
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
            |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |			ПО ПоступлениеТоваровУслугУслуги.Ссылка.Номер = РеализацияТоваровУслуг.Номер
            |	ГДЕ
            |		&ЗаполнятьПоДате = 2
            |		И ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент В(&Контрагент)
            |		И ПоступлениеТоваровУслугУслуги.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		РеализацияТоваровУслуг.Ссылка,
            |		РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
            |		ПоступлениеТоваровУслугПодарочныеПозиции.КоличествоМест,
            |		ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент,
            |		ПоступлениеТоваровУслугПодарочныеПозиции.СкладМагазина
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
            |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |			ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер = РеализацияТоваровУслуг.Номер
            |	ГДЕ
            |		&ЗаполнятьПоДате = 2
            |		И ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент В(&Контрагент)
            |		И ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Дата МЕЖДУ &ДатаНач2 И &ДатаКон2) КАК ВложенныйЗапрос
            |
            |СГРУППИРОВАТЬ ПО
            |	ВложенныйЗапрос.ВнешнийНомерЗаказа,
            |	ВложенныйЗапрос.Заказ,
            |	ВложенныйЗапрос.СкладМагазина
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ПриходЗаказовНаСкладЗаказы.ВнешнийНомерЗаказа,
            |	ПриходЗаказовНаСкладЗаказы.Заказ,
            |	ПриходЗаказовНаСкладЗаказы.КоличествоМест,
            |	ПриходЗаказовНаСкладЗаказы.Ссылка КАК ДокументПрихода,
            |	ПриходЗаказовНаСкладЗаказы.Ссылка.Контрагент,
            |	ПриходЗаказовНаСкладЗаказы.Ссылка.СкладМагазина
            |ПОМЕСТИТЬ ВТПриходПоЭДО
            |ИЗ
            |	Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
            |ГДЕ
            |	ПриходЗаказовНаСкладЗаказы.Ссылка.ПометкаУдаления = ЛОЖЬ
            |	И ПриходЗаказовНаСкладЗаказы.Ссылка.Дата МЕЖДУ &ДатаНач1 И &ДатаКон1
            |	И ПриходЗаказовНаСкладЗаказы.Ссылка.Контрагент В(&Контрагент)
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ЗагрузкаСТСДШтрихкоды.ВнешнийНомерЗаказа,
            |	ЗагрузкаСТСДШтрихкоды.Заказ,
            |	ЗагрузкаСТСДШтрихкоды.КоличествоМест,
            |	ЗагрузкаСТСДШтрихкоды.Контрагент
            |ПОМЕСТИТЬ ВТЗагрузкаСТСД
            |ИЗ
            |	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
            |ГДЕ
            |	ЗагрузкаСТСДШтрихкоды.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
            |	И ЗагрузкаСТСДШтрихкоды.Ссылка.ПометкаУдаления = ЛОЖЬ
            |	И ЗагрузкаСТСДШтрихкоды.Контрагент.Ссылка В(&Контрагент)
            |	И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFi)
            |			ИЛИ ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute)
            |			ИЛИ ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом)
            |			ИЛИ ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.Аксиомус)
            |			ИЛИ ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходOZONE)
            |			ИЛИ ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриемкаЗаказовНаРегиональномТерминале))
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ВложенныйЗапрос.Номер,
            |	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
            |	СУММА(ВложенныйЗапрос.Количество) КАК Количество
            |ПОМЕСТИТЬ ВТ_Суммы
            |ИЗ
            |	(ВЫБРАТЬ
            |		ПоступлениеТоваровУслугТовары.Ссылка.Номер КАК Номер,
            |		ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
            |		ПоступлениеТоваровУслугТовары.Количество КАК Количество
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
            |	ГДЕ
            |		ПоступлениеТоваровУслугТовары.Ссылка.Дата >= &ДатаОграниченияПоступления
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		ПоступлениеТоваровУслугУслуги.Ссылка.Номер,
            |		ПоступлениеТоваровУслугУслуги.Сумма,
            |		ПоступлениеТоваровУслугУслуги.Количество
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
            |	ГДЕ
            |		ПоступлениеТоваровУслугУслуги.Ссылка.Дата >= &ДатаОграниченияПоступления
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер,
            |		ПоступлениеТоваровУслугПодарочныеПозиции.Сумма,
            |		ПоступлениеТоваровУслугПодарочныеПозиции.Количество
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
            |	ГДЕ
            |		ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Дата >= &ДатаОграниченияПоступления) КАК ВложенныйЗапрос
            |
            |СГРУППИРОВАТЬ ПО
            |	ВложенныйЗапрос.Номер
            |
            |ИНДЕКСИРОВАТЬ ПО
            |	ВложенныйЗапрос.Номер
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ВложенныйЗапрос.Заказ,
            |	МАКСИМУМ(ВложенныйЗапрос.ЕстьВСистеме) КАК ЕстьВСистеме,
            |	МАКСИМУМ(ВложенныйЗапрос.ЕстьВПриходе) КАК ЕстьВПриходе,
            |	МАКСИМУМ(ВложенныйЗапрос.ЕстьНаСканере) КАК ЕстьНаСканере,
            |	СУММА(ВложенныйЗапрос.КоличествоМестСистема) КАК КоличествоМестСистема,
            |	СУММА(ВложенныйЗапрос.КоличествоМестПриход) КАК КоличествоМестПриход,
            |	СУММА(ВложенныйЗапрос.КоличествоМестСканировано) КАК КоличествоМестСканировано,
            |	ВложенныйЗапрос.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
            |	МАКСИМУМ(ВложенныйЗапрос.ДокументПрихода) КАК ДокументПрихода,
            |	МАКСИМУМ(ВложенныйЗапрос.Контрагент) КАК Контрагент,
            |	МАКСИМУМ(ВложенныйЗапрос.СкладМагазина) КАК СкладМагазина,
            |	ВложенныйЗапрос.Заказ.ТерминалПриема,
            |	ВложенныйЗапрос.Заказ.ТерминалДоставки
            |ПОМЕСТИТЬ ВТ_Итог
            |ИЗ
            |	(ВЫБРАТЬ
            |		ИСТИНА КАК ЕстьВСистеме,
            |		ЛОЖЬ КАК ЕстьВПриходе,
            |		ЛОЖЬ КАК ЕстьНаСканере,
            |		ВТ_ВСистеме.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
            |		ВТ_ВСистеме.КоличествоМест КАК КоличествоМестСистема,
            |		0 КАК КоличествоМестПриход,
            |		0 КАК КоличествоМестСканировано,
            |		ВТ_ВСистеме.Заказ КАК Заказ,
            |		NULL КАК ДокументПрихода,
            |		ВТ_ВСистеме.Контрагент КАК Контрагент,
            |		ВТ_ВСистеме.СкладМагазина КАК СкладМагазина
            |	ИЗ
            |		ВТ_ВСистеме КАК ВТ_ВСистеме
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		ЛОЖЬ,
            |		ИСТИНА,
            |		ЛОЖЬ,
            |		ВТПриходПоЭДО.ВнешнийНомерЗаказа,
            |		0,
            |		ВТПриходПоЭДО.КоличествоМест,
            |		0,
            |		ВТПриходПоЭДО.Заказ,
            |		ВТПриходПоЭДО.ДокументПрихода,
            |		ВТПриходПоЭДО.Контрагент,
            |		ВТПриходПоЭДО.СкладМагазина
            |	ИЗ
            |		ВТПриходПоЭДО КАК ВТПриходПоЭДО
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		ЛОЖЬ,
            |		ЛОЖЬ,
            |		ИСТИНА,
            |		ВТЗагрузкаСТСД.ВнешнийНомерЗаказа,
            |		0,
            |		0,
            |		ВТЗагрузкаСТСД.КоличествоМест,
            |		ВТЗагрузкаСТСД.Заказ,
            |		NULL,
            |		ВТЗагрузкаСТСД.Контрагент,
            |		NULL
            |	ИЗ
            |		ВТЗагрузкаСТСД КАК ВТЗагрузкаСТСД) КАК ВложенныйЗапрос
            |
            |СГРУППИРОВАТЬ ПО
            |	ВложенныйЗапрос.Заказ,
            |	ВложенныйЗапрос.ВнешнийНомерЗаказа,
            |	ВложенныйЗапрос.Заказ.ТерминалПриема,
            |	ВложенныйЗапрос.Заказ.ТерминалДоставки
            |
            |ИНДЕКСИРОВАТЬ ПО
            |	ВложенныйЗапрос.Заказ
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	СтатусыСкладскогоУчета.Заказ
            |ПОМЕСТИТЬ ВТ_Статусы
            |ИЗ
            |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
            |ГДЕ
            |	СтатусыСкладскогоУчета.Период <= &Период
            |	И (СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ПриходПроверен)
            |			ИЛИ СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.УчтеноРасхождение))
            |	И СтатусыСкладскогоУчета.Период >= &ДатаОграниченияПоступления
            |
            |СГРУППИРОВАТЬ ПО
            |	СтатусыСкладскогоУчета.Заказ
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	РеализацияТоваровУслугТовары.СкладМагазина,
            |	РеализацияТоваровУслугТовары.Ссылка
            |ПОМЕСТИТЬ ВТ_ЗаказыСкладыМагазина
            |ИЗ
            |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
            |ГДЕ
            |	РеализацияТоваровУслугТовары.Ссылка.Дата >= &ДатаНач2
            |	И НЕ РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления
            |	И РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара В(&Контрагент)
            |
            |ОБЪЕДИНИТЬ ВСЕ
            |
            |ВЫБРАТЬ
            |	РеализацияТоваровУслугПодарочныеПозиции.СкладМагазина,
            |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка
            |ИЗ
            |	Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
            |ГДЕ
            |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Дата >= &ДатаНач2
            |	И НЕ РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ПометкаУдаления
            |	И РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ВладелецТовара В(&Контрагент)
            |
            |ИНДЕКСИРОВАТЬ ПО
            |	РеализацияТоваровУслугТовары.Ссылка
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	РеализацияТоваровУслуг.Ссылка КАК Заказ,
            |	МАКСИМУМ(ВТ_ЗаказыСкладыМагазина.СкладМагазина) КАК СкладМагазина
            |ПОМЕСТИТЬ ВТ_Заказы
            |ИЗ
            |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыСкладыМагазина КАК ВТ_ЗаказыСкладыМагазина
            |		ПО (ВТ_ЗаказыСкладыМагазина.Ссылка = РеализацияТоваровУслуг.Ссылка)
            |ГДЕ
            |	РеализацияТоваровУслуг.Дата >= &ДатаНач2
            |	И НЕ РеализацияТоваровУслуг.ПометкаУдаления
            |	И РеализацияТоваровУслуг.ВладелецТовара В(&Контрагент)
            |
            |СГРУППИРОВАТЬ ПО
            |	РеализацияТоваровУслуг.Ссылка
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
            |	ВложенныйЗапрос.Номер
            |ПОМЕСТИТЬ ВТ_РеализацияКоличество
            |ИЗ
            |	(ВЫБРАТЬ
            |		РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
            |		РеализацияТоваровУслугТовары.Количество КАК Количество
            |	ИЗ
            |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
            |	ГДЕ
            |		НЕ РеализацияТоваровУслугТовары.Номенклатура.Артикул В
            |					(ВЫБРАТЬ
            |						УслугиПоЗаказам.Артикул
            |					ИЗ
            |						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
            |		И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач3 И &ДатаКон3
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
            |		РеализацияТоваровУслугПодарочныеПозиции.Количество
            |	ИЗ
            |		Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
            |	ГДЕ
            |		НЕ РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул В
            |					(ВЫБРАТЬ
            |						УслугиПоЗаказам.Артикул
            |					ИЗ
            |						Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
            |		И РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Дата МЕЖДУ &ДатаНач3 И &ДатаКон3) КАК ВложенныйЗапрос
            |
            |СГРУППИРОВАТЬ ПО
            |	ВложенныйЗапрос.Номер
            |
            |ИНДЕКСИРОВАТЬ ПО
            |	ВложенныйЗапрос.Номер
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
            |	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество
            |ПОМЕСТИТЬ ВТ_ВозвратПокупателяюКоличество
            |ИЗ
            |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
            |ГДЕ
            |	НЕ ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул В
            |				(ВЫБРАТЬ
            |					УслугиПоЗаказам.Артикул
            |				ИЗ
            |					Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам)
            |	И ВозвратТоваровОтПокупателяТовары.Ссылка.Дата МЕЖДУ &ДатаНач3 И &ДатаКон3
            |
            |СГРУППИРОВАТЬ ПО
            |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
            |
            |ИНДЕКСИРОВАТЬ ПО
            |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	РеализацияТоваровУслуг.Ссылка.Номер КАК РеализацияНомер,
            |	новаМестнаяДоставка.Ссылка.Номер КАК МестнаяДоставкаНомер,
            |	ВТ_ВозвратПокупателяюКоличество.Номер КАК ВозвратНомер,
            |	ЕСТЬNULL(ВТ_ВозвратПокупателяюКоличество.Количество, 0) КАК ВозвратКоличество,
            |	ЕСТЬNULL(ВТ_РеализацияКоличество.Количество, 0) КАК РеализацияКоличество,
            |	РеализацияТоваровУслуг.Ссылка КАК Заказ
            |ПОМЕСТИТЬ ВТ_Промежуточная
            |ИЗ
            |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
            |		ПО РеализацияТоваровУслуг.Номер = новаМестнаяДоставка.Номер
            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РеализацияКоличество КАК ВТ_РеализацияКоличество
            |		ПО РеализацияТоваровУслуг.Номер = ВТ_РеализацияКоличество.Номер
            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВозвратПокупателяюКоличество КАК ВТ_ВозвратПокупателяюКоличество
            |		ПО РеализацияТоваровУслуг.Номер = ВТ_ВозвратПокупателяюКоличество.Номер
            |ГДЕ
            |	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНач3 И &ДатаКон3
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ВЫБОР
            |		КОГДА НЕ ВТ_Итог.МестнаяДоставкаНомер ЕСТЬ NULL 
            |			ТОГДА ВЫБОР
            |					КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
            |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка)
            |					ИНАЧЕ ВЫБОР
            |							КОГДА ВТ_Итог.РеализацияКоличество = 0
            |									И ВТ_Итог.ВозвратКоличество > 0
            |								ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
            |							ИНАЧЕ ВЫБОР
            |									КОГДА ВТ_Итог.РеализацияКоличество > 0
            |											И ВТ_Итог.ВозвратКоличество > 0
            |										ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
            |									ИНАЧЕ НЕОПРЕДЕЛЕНО
            |								КОНЕЦ
            |						КОНЕЦ
            |				КОНЕЦ
            |		ИНАЧЕ ВЫБОР
            |				КОГДА ВТ_Итог.ВозвратНомер ЕСТЬ NULL 
            |					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз)
            |				ИНАЧЕ ВЫБОР
            |						КОГДА ВТ_Итог.РеализацияКоличество = 0
            |								И ВТ_Итог.ВозвратКоличество > 0
            |							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Возврат)
            |						ИНАЧЕ ВЫБОР
            |								КОГДА ВТ_Итог.РеализацияКоличество > 0
            |										И ВТ_Итог.ВозвратКоличество > 0
            |									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Обмен)
            |								ИНАЧЕ НЕОПРЕДЕЛЕНО
            |							КОНЕЦ
            |					КОНЕЦ
            |			КОНЕЦ
            |	КОНЕЦ КАК ТипЗаказа,
            |	ВТ_Итог.Заказ
            |ПОМЕСТИТЬ ВТ_ТипЗаказов
            |ИЗ
            |	ВТ_Промежуточная КАК ВТ_Итог
            |
            |ИНДЕКСИРОВАТЬ ПО
            |	ВТ_Итог.Заказ
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ВТ_Итог.Заказ КАК Заказ,
            |	ЕСТЬNULL(ВТ_Итог.Заказ.НомерВнешнегоЗаказа, ВТ_Итог.ВнешнийНомерЗаказа) КАК НомерЗаказа,
            |	МАКСИМУМ(ВЫБОР
            |			КОГДА ВТ_Заказы.Заказ ЕСТЬ NULL 
            |				ТОГДА ВТ_Итог.ЕстьВСистеме
            |			ИНАЧЕ ИСТИНА
            |		КОНЕЦ) КАК ЕстьВСистеме,
            |	МАКСИМУМ(ВТ_Итог.ЕстьВПриходе) КАК ЕстьВПриходе,
            |	МАКСИМУМ(ВТ_Итог.ЕстьНаСканере) КАК ЕстьНаСканере,
            |	МАКСИМУМ(ВТ_Итог.КоличествоМестСистема) КАК КоличествоМестСистема,
            |	МАКСИМУМ(ВТ_Итог.КоличествоМестПриход) КАК КоличествоМестПриход,
            |	МАКСИМУМ(ВТ_Итог.КоличествоМестСканировано) КАК КоличествоМестСканировано,
            |	МАКСИМУМ(ВТ_Суммы.Сумма) КАК Сумма,
            |	МАКСИМУМ(ВТ_Суммы.Количество) КАК Количество,
            |	МАКСИМУМ(ВТ_Итог.ДокументПрихода) КАК ДокументПрихода,
            |	МАКСИМУМ(ВТ_Итог.Контрагент) КАК Контрагент,
            |	ЕСТЬNULL(ВТ_Итог.СкладМагазина, ВТ_Заказы.СкладМагазина) КАК СкладМагазина,
            |	ВТ_Итог.ЗаказТерминалПриема,
            |	ВТ_Итог.ЗаказТерминалДоставки
            |ПОМЕСТИТЬ ВТ_Итоговая
            |ИЗ
            |	ВТ_Итог КАК ВТ_Итог
            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
            |		ПО (ВЫРАЗИТЬ(ВТ_Итог.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка.Номер = ВТ_Суммы.Номер)
            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
            |		ПО ВТ_Итог.Заказ = ВТ_Заказы.Заказ
            |ГДЕ
            |	НЕ ВТ_Итог.Заказ В
            |				(ВЫБРАТЬ
            |					ВТ_Статусы.Заказ
            |				ИЗ
            |					ВТ_Статусы КАК ВТ_Статусы)
            |
            |СГРУППИРОВАТЬ ПО
            |	ВТ_Итог.Заказ,
            |	ЕСТЬNULL(ВТ_Итог.Заказ.НомерВнешнегоЗаказа, ВТ_Итог.ВнешнийНомерЗаказа),
            |	ЕСТЬNULL(ВТ_Итог.СкладМагазина, ВТ_Заказы.СкладМагазина),
            |	ВТ_Итог.ЗаказТерминалПриема,
            |	ВТ_Итог.ЗаказТерминалДоставки
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ВТ_Итоговая.Заказ,
            |	ВТ_Итоговая.НомерЗаказа,
            |	ВТ_Итоговая.ЕстьВСистеме,
            |	ВТ_Итоговая.ЕстьВПриходе,
            |	ВТ_Итоговая.ЕстьНаСканере,
            |	ВТ_Итоговая.КоличествоМестСистема,
            |	ВТ_Итоговая.КоличествоМестПриход,
            |	ВТ_Итоговая.КоличествоМестСканировано,
            |	ВТ_Итоговая.Сумма,
            |	ВТ_Итоговая.Количество,
            |	ВТ_Итоговая.ДокументПрихода,
            |	ЕСТЬNULL(ВТ_ТипЗаказов.ТипЗаказа, НЕОПРЕДЕЛЕНО) КАК ТипЗаказа,
            |	ЕСТЬNULL(ВЫРАЗИТЬ(ВТ_Итоговая.Заказ КАК Документ.РеализацияТоваровУслуг).ВладелецТовара, ВТ_Итоговая.Контрагент) КАК Контрагент,
            |	ЕСТЬNULL(ВТ_Итоговая.СкладМагазина, ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)) КАК СкладМагазина,
            |	ВТ_Итоговая.ЗаказТерминалПриема,
            |	ВТ_Итоговая.ЗаказТерминалДоставки
            |ПОМЕСТИТЬ ВТ_КонечныйИТОГ
            |ИЗ
            |	ВТ_Итоговая КАК ВТ_Итоговая
            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТипЗаказов КАК ВТ_ТипЗаказов
            |		ПО ВТ_Итоговая.Заказ = ВТ_ТипЗаказов.Заказ
            |ГДЕ
            |	НЕ ЕСТЬNULL(ВТ_ТипЗаказов.ТипЗаказа, НЕОПРЕДЕЛЕНО) В (&ТипЗаказа)
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ВТ_КонечныйИТОГ.Заказ,
            |	ВТ_КонечныйИТОГ.НомерЗаказа,
            |	ВТ_КонечныйИТОГ.ЕстьВСистеме,
            |	ВТ_КонечныйИТОГ.ЕстьВПриходе,
            |	ВТ_КонечныйИТОГ.ЕстьНаСканере,
            |	ВТ_КонечныйИТОГ.КоличествоМестСистема,
            |	ВТ_КонечныйИТОГ.КоличествоМестПриход,
            |	ВТ_КонечныйИТОГ.КоличествоМестСканировано,
            |	ВТ_КонечныйИТОГ.Сумма,
            |	ВТ_КонечныйИТОГ.Количество,
            |	ВТ_КонечныйИТОГ.ДокументПрихода,
            |	ВТ_КонечныйИТОГ.ТипЗаказа,
            |	ВТ_КонечныйИТОГ.Контрагент,
            |	ВЫБОР
            |		КОГДА ВТ_КонечныйИТОГ.Контрагент = &КонтрагентТопДеливери
            |				И ВТ_КонечныйИТОГ.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
            |			ТОГДА &СкладТопДеливери
            |		ИНАЧЕ ВТ_КонечныйИТОГ.СкладМагазина
            |	КОНЕЦ КАК СкладМагазина,
            |	ВТ_КонечныйИТОГ.ЗаказТерминалПриема КАК ТерминалПриема,
            |	ВТ_КонечныйИТОГ.ЗаказТерминалДоставки КАК ТерминалДоставки
            |ИЗ
            |	ВТ_КонечныйИТОГ КАК ВТ_КонечныйИТОГ
            |ГДЕ
            |	ИСТИНА
            |	И ВЫБОР
            |			КОГДА ВТ_КонечныйИТОГ.Контрагент = &КонтрагентТопДеливери
            |					И ВТ_КонечныйИТОГ.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
            |				ТОГДА &СкладТопДеливери
            |			ИНАЧЕ ВТ_КонечныйИТОГ.СкладМагазина
            |		КОНЕЦ В (&СкладМагазина)
            |	И ВТ_КонечныйИТОГ.ЗаказТерминалПриема = &ТерминалПриема
            |	И ВТ_КонечныйИТОГ.ЗаказТерминалДоставки = &ТерминалДоставки";	

КонецФункции // ПолучитьТекстЗапросаПоТерминалам()
// <<--- Михушкин



Функция ПолучитьТекстЗапросаПоТерминалам_НоваяЛогикаОтАПП()

    Возврат "ВЫБРАТЬ
            |	ПриходЗаказовНаСкладЗаказы.ВнешнийНомерЗаказа,
            |	ПриходЗаказовНаСкладЗаказы.Заказ,
            |	ПриходЗаказовНаСкладЗаказы.КоличествоМест,
            |	ПриходЗаказовНаСкладЗаказы.Ссылка КАК ДокументПрихода,
            |	ПриходЗаказовНаСкладЗаказы.Ссылка.Контрагент,
            |	ПриходЗаказовНаСкладЗаказы.Ссылка.СкладМагазина
            |ПОМЕСТИТЬ ВТПриходПоЭДО
            |ИЗ
            |	Документ.ПриходЗаказовНаСклад.Заказы КАК ПриходЗаказовНаСкладЗаказы
            |ГДЕ
            |	ПриходЗаказовНаСкладЗаказы.Ссылка.ПометкаУдаления = ЛОЖЬ
            |	И ПриходЗаказовНаСкладЗаказы.Ссылка.Дата МЕЖДУ &ДатаНач1 И &ДатаКон1
            |	И ПриходЗаказовНаСкладЗаказы.Ссылка.Контрагент В(&Контрагент)
            |	И ПриходЗаказовНаСкладЗаказы.Ссылка.СкладМагазина В(&СкладМагазина)
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	РеализацияТоваровУслуг.Ссылка,
            |	ПоступлениеТоваровУслуг.Ссылка КАК Поступление
            |ПОМЕСТИТЬ ВТ_Реализации
            |ИЗ
            |	ВТПриходПоЭДО КАК ВТПриходПоЭДО
            |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
            |			ПО РеализацияТоваровУслуг.Номер = ПоступлениеТоваровУслуг.Номер
            |		ПО ВТПриходПоЭДО.Заказ = РеализацияТоваровУслуг.Ссылка
            |ГДЕ
            |	РеализацияТоваровУслуг.ВладелецТовара В(&Контрагент)
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ВложенныйЗапрос.ВнешнийНомерЗаказа,
            |	ВложенныйЗапрос.Заказ,
            |	СУММА(ВложенныйЗапрос.КоличествоМест) КАК КоличествоМест,
            |	МАКСИМУМ(ВложенныйЗапрос.Контрагент) КАК Контрагент,
            |	ВложенныйЗапрос.СкладМагазина
            |ПОМЕСТИТЬ ВТ_ВСистеме
            |ИЗ
            |	(ВЫБРАТЬ
            |		РеализацияТоваровУслугТовары.Ссылка КАК Заказ,
            |		РеализацияТоваровУслугТовары.Ссылка.НомерВнешнегоЗаказа КАК ВнешнийНомерЗаказа,
            |		РеализацияТоваровУслугТовары.КоличествоМест КАК КоличествоМест,
            |		РеализацияТоваровУслугТовары.Ссылка.ВладелецТовара КАК Контрагент,
            |		РеализацияТоваровУслугТовары.СкладМагазина КАК СкладМагазина
            |	ИЗ
            |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
            |	ГДЕ
            |		РеализацияТоваровУслугТовары.Ссылка В
            |				(ВЫБРАТЬ
            |					ВТ_Реализации.Ссылка
            |				ИЗ
            |					ВТ_Реализации)
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		РеализацияТоваровУслугУслуги.Ссылка,
            |		РеализацияТоваровУслугУслуги.Ссылка.НомерВнешнегоЗаказа,
            |		0,
            |		РеализацияТоваровУслугУслуги.Ссылка.ВладелецТовара,
            |		NULL
            |	ИЗ
            |		Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
            |	ГДЕ
            |		РеализацияТоваровУслугУслуги.Ссылка В
            |				(ВЫБРАТЬ
            |					ВТ_Реализации.Ссылка
            |				ИЗ
            |					ВТ_Реализации)
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка,
            |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка.НомерВнешнегоЗаказа,
            |		РеализацияТоваровУслугПодарочныеПозиции.КоличествоМест,
            |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка.ВладелецТовара,
            |		РеализацияТоваровУслугПодарочныеПозиции.СкладМагазина
            |	ИЗ
            |		Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
            |	ГДЕ
            |		РеализацияТоваровУслугПодарочныеПозиции.Ссылка В
            |				(ВЫБРАТЬ
            |					ВТ_Реализации.Ссылка
            |				ИЗ
            |					ВТ_Реализации)
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		РеализацияТоваровУслуг.Ссылка,
            |		РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
            |		ПоступлениеТоваровУслугТовары.КоличествоМест,
            |		ПоступлениеТоваровУслугТовары.Ссылка.Контрагент,
            |		ПоступлениеТоваровУслугТовары.СкладМагазина
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
            |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |			ПО ПоступлениеТоваровУслугТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
            |	ГДЕ
            |		ПоступлениеТоваровУслугТовары.Ссылка В
            |				(ВЫБРАТЬ
            |					ВТ_Реализации.Поступление
            |				ИЗ
            |					ВТ_Реализации)
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		РеализацияТоваровУслуг.Ссылка,
            |		РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
            |		0,
            |		ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент,
            |		NULL
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
            |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |			ПО ПоступлениеТоваровУслугУслуги.Ссылка.Номер = РеализацияТоваровУслуг.Номер
            |	ГДЕ
            |		ПоступлениеТоваровУслугУслуги.Ссылка В
            |				(ВЫБРАТЬ
            |					ВТ_Реализации.Поступление
            |				ИЗ
            |					ВТ_Реализации)
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		РеализацияТоваровУслуг.Ссылка,
            |		РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
            |		ПоступлениеТоваровУслугПодарочныеПозиции.КоличествоМест,
            |		ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент,
            |		ПоступлениеТоваровУслугПодарочныеПозиции.СкладМагазина
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
            |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
            |			ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер = РеализацияТоваровУслуг.Номер
            |	ГДЕ
            |		ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка В
            |				(ВЫБРАТЬ
            |					ВТ_Реализации.Поступление
            |				ИЗ
            |					ВТ_Реализации)) КАК ВложенныйЗапрос
            |
            |СГРУППИРОВАТЬ ПО
            |	ВложенныйЗапрос.ВнешнийНомерЗаказа,
            |	ВложенныйЗапрос.Заказ,
            |	ВложенныйЗапрос.СкладМагазина
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ЗагрузкаСТСДШтрихкоды.ВнешнийНомерЗаказа,
            |	ЗагрузкаСТСДШтрихкоды.Заказ,
            |	ЗагрузкаСТСДШтрихкоды.КоличествоМест,
            |	ЗагрузкаСТСДШтрихкоды.Контрагент
            |ПОМЕСТИТЬ ВТЗагрузкаСТСД
            |ИЗ
            |	ВТ_Реализации КАК ВТ_Реализации
            |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
            |		ПО ВТ_Реализации.Ссылка = ЗагрузкаСТСДШтрихкоды.Заказ
            |ГДЕ
            |	ЗагрузкаСТСДШтрихкоды.Ссылка.ПометкаУдаления = ЛОЖЬ
            |	И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFi)
            |			ИЛИ ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute)
            |			ИЛИ ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом)
            |			ИЛИ ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.Аксиомус)
            |			ИЛИ ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриходOZONE)
            |			ИЛИ ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = ЗНАЧЕНИЕ(Перечисление.ТипыЗагрузкиТСД.ПриемкаЗаказовНаРегиональномТерминале))
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ВложенныйЗапрос.Номер,
            |	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
            |	СУММА(ВложенныйЗапрос.Количество) КАК Количество
            |ПОМЕСТИТЬ ВТ_Суммы
            |ИЗ
            |	(ВЫБРАТЬ
            |		ПоступлениеТоваровУслугТовары.Ссылка.Номер КАК Номер,
            |		ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
            |		ПоступлениеТоваровУслугТовары.Количество КАК Количество
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
            |	ГДЕ
            |		ПоступлениеТоваровУслугТовары.Ссылка В
            |				(ВЫБРАТЬ
            |					ВТ_Реализации.Поступление
            |				ИЗ
            |					ВТ_Реализации)
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		ПоступлениеТоваровУслугУслуги.Ссылка.Номер,
            |		ПоступлениеТоваровУслугУслуги.Сумма,
            |		ПоступлениеТоваровУслугУслуги.Количество
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
            |	ГДЕ
            |		ПоступлениеТоваровУслугУслуги.Ссылка В
            |				(ВЫБРАТЬ
            |					ВТ_Реализации.Поступление
            |				ИЗ
            |					ВТ_Реализации)
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер,
            |		ПоступлениеТоваровУслугПодарочныеПозиции.Сумма,
            |		ПоступлениеТоваровУслугПодарочныеПозиции.Количество
            |	ИЗ
            |		Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
            |	ГДЕ
            |		ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка В
            |				(ВЫБРАТЬ
            |					ВТ_Реализации.Поступление
            |				ИЗ
            |					ВТ_Реализации)) КАК ВложенныйЗапрос
            |
            |СГРУППИРОВАТЬ ПО
            |	ВложенныйЗапрос.Номер
            |
            |ИНДЕКСИРОВАТЬ ПО
            |	ВложенныйЗапрос.Номер
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ
            |	ВложенныйЗапрос.Заказ КАК Заказ,
            |	МАКСИМУМ(ВЫБОР
            |			КОГДА НЕ ВложенныйЗапрос.Заказ ЕСТЬ NULL 
            |					И ВложенныйЗапрос.Заказ <> ЗНАЧЕНИЕ(Документ.РеализацияТОваровУслуг.ПустаяСсылка)
            |					И НЕ ВложенныйЗапрос.Заказ.ПометкаУдаления
            |				ТОГДА ИСТИНА
            |			ИНАЧЕ ВложенныйЗапрос.ЕстьВСистеме
            |		КОНЕЦ) КАК ЕстьВСистеме,
            |	МАКСИМУМ(ВложенныйЗапрос.ЕстьВПриходе) КАК ЕстьВПриходе,
            |	МАКСИМУМ(ВЫБОР
            |			КОГДА НЕ ВТЗагрузкаСТСД.Заказ ЕСТЬ NULL 
            |				ТОГДА ИСТИНА
            |			ИНАЧЕ ВложенныйЗапрос.ЕстьНаСканере
            |		КОНЕЦ) КАК ЕстьНаСканере,
            |	СУММА(ВложенныйЗапрос.КоличествоМестСистема) КАК КоличествоМестСистема,
            |	СУММА(ВложенныйЗапрос.КоличествоМестПриход) КАК КоличествоМестПриход,
            |	СУММА(ВложенныйЗапрос.КоличествоМестСканировано) КАК КоличествоМестСканировано,
            |	ВложенныйЗапрос.ВнешнийНомерЗаказа КАК НомерЗаказа,
            |	МАКСИМУМ(ВложенныйЗапрос.ДокументПрихода) КАК ДокументПрихода,
            |	МАКСИМУМ(ВложенныйЗапрос.Контрагент) КАК Контрагент,
            |	МАКСИМУМ(ВложенныйЗапрос.СкладМагазина) КАК СкладМагазина,
            |	ВложенныйЗапрос.Заказ.ТерминалПриема КАК ТерминалПриема,
            |	ВложенныйЗапрос.Заказ.ТерминалДоставки КАК ТерминалДоставки,
            |	ВТ_Суммы.Сумма,
            |	ВТ_Суммы.Количество,
            |	ВТ_Суммы.Номер
            |ИЗ
            |	(ВЫБРАТЬ
            |		ИСТИНА КАК ЕстьВСистеме,
            |		ЛОЖЬ КАК ЕстьВПриходе,
            |		ЛОЖЬ КАК ЕстьНаСканере,
            |		ВТ_ВСистеме.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
            |		ВТ_ВСистеме.КоличествоМест КАК КоличествоМестСистема,
            |		0 КАК КоличествоМестПриход,
            |		0 КАК КоличествоМестСканировано,
            |		ВТ_ВСистеме.Заказ КАК Заказ,
            |		NULL КАК ДокументПрихода,
            |		ВТ_ВСистеме.Контрагент КАК Контрагент,
            |		ВТ_ВСистеме.СкладМагазина КАК СкладМагазина
            |	ИЗ
            |		ВТ_ВСистеме КАК ВТ_ВСистеме
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		ЛОЖЬ,
            |		ИСТИНА,
            |		ЛОЖЬ,
            |		ВТПриходПоЭДО.ВнешнийНомерЗаказа,
            |		0,
            |		ВТПриходПоЭДО.КоличествоМест,
            |		0,
            |		ВТПриходПоЭДО.Заказ,
            |		ВТПриходПоЭДО.ДокументПрихода,
            |		ВТПриходПоЭДО.Контрагент,
            |		ВТПриходПоЭДО.СкладМагазина
            |	ИЗ
            |		ВТПриходПоЭДО КАК ВТПриходПоЭДО
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		ЛОЖЬ,
            |		ЛОЖЬ,
            |		ИСТИНА,
            |		ВТЗагрузкаСТСД.ВнешнийНомерЗаказа,
            |		0,
            |		0,
            |		ВТЗагрузкаСТСД.КоличествоМест,
            |		ВТЗагрузкаСТСД.Заказ,
            |		NULL,
            |		ВТЗагрузкаСТСД.Контрагент,
            |		NULL
            |	ИЗ
            |		ВТЗагрузкаСТСД КАК ВТЗагрузкаСТСД) КАК ВложенныйЗапрос
            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
            |		ПО (ВЫРАЗИТЬ(ВложенныйЗапрос.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка.Номер = ВТ_Суммы.Номер)
            |		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗагрузкаСТСД КАК ВТЗагрузкаСТСД
            |		ПО ВложенныйЗапрос.Заказ = ВТЗагрузкаСТСД.Заказ
            |ГДЕ
            |	ВложенныйЗапрос.ДокументПрихода ЕСТЬ НЕ NULL 
            |	И ВложенныйЗапрос.Заказ.ТерминалПриема = &ТерминалПриема
            |	И ВложенныйЗапрос.Заказ.ТерминалДоставки = &ТерминалДоставки
            |	И ВложенныйЗапрос.СкладМагазина В(&СкладМагазина)
            |
            |СГРУППИРОВАТЬ ПО
            |	ВложенныйЗапрос.Заказ,
            |	ВложенныйЗапрос.ВнешнийНомерЗаказа,
            |	ВложенныйЗапрос.Заказ.ТерминалПриема,
            |	ВложенныйЗапрос.Заказ.ТерминалДоставки,
            |	ВТ_Суммы.Сумма,
            |	ВТ_Суммы.Количество,
            |	ВТ_Суммы.Номер";	

		КонецФункции // ПолучитьТекстЗапросаПоТерминалам()
		
		
		

#КонецОбласти 

Функция РежимЗакрытияПоАПП(Контрагент)
	
	Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	РежимыЗакрытияОперационногоДняПоКонтрагентам.Контрагент,
        |	РежимыЗакрытияОперационногоДняПоКонтрагентам.РежимЗакрытияПоАПП
        |ИЗ
        |	РегистрСведений.РежимыЗакрытияОперационногоДняПоКонтрагентам КАК РежимыЗакрытияОперационногоДняПоКонтрагентам
        |ГДЕ
        |	РежимыЗакрытияОперационногоДняПоКонтрагентам.Контрагент = &Контрагент";
    
    Запрос.УстановитьПараметр("Контрагент", Контрагент);
    РезультатЗапроса = Запрос.Выполнить();
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат ВыборкаДетальныеЗаписи.РежимЗакрытияПоАПП;    
    Иначе
        Возврат  Ложь;
	КонецЕсли;
	
КонецФункции


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
		
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходЗаказовНаСклад") Тогда
		
		
		СтандартнаяОбработка = Ложь;
	
		ЭтотОбъект.ОперативнаяПриемкаЗаказов = Истина;
		ЭтотОбъект.АПП = ДанныеЗаполнения.Ссылка;
		
		Контрагент = ДанныеЗаполнения.Контрагент;
		СкладМагазина = ДанныеЗаполнения.СкладМагазина;
		
		НомерВходящегоДокумента = ДанныеЗаполнения.НомерВходящегоДокумента;
		ДатаВходящегоДокумента = ДанныеЗаполнения.ДатаВходящегоДокумента;
		
		ТерминалПриема = ДанныеЗаполнения.ТерминалПриема;
		ТерминалДоставки = ДанныеЗаполнения.ТерминалДоставки;
		
		Пользователь = ПараметрыСеанса.ТекущийПользователь;
		
		НстрПД = ПриходныеДокументы.Добавить();
		НстрПД.ПриходныйДокумент = ДанныеЗаполнения.Ссылка;
		НстрПД.Учитывать = Истина;
		
		НКонт = Контрагенты.Добавить();
		НКонт.Контрагент = ДанныеЗаполнения.Контрагент;
		
		Если ШКПоМестам Тогда			
			
			МассивЗаказов = ДанныеЗаполнения.Заказы.Выгрузить();
			МассивЗаказов.Свернуть("Заказ");
			Спис = новый СписокЗначений;
			Для каждого Ст Из МассивЗаказов Цикл		
				Спис.Добавить(Ст.Заказ);			
			КонецЦикла;
			
			Запрос = новый Запрос("ВЫБРАТЬ
			                      |	МестаПоЗаказам.Ссылка КАК Место,
			                      |	МестаПоЗаказам.Заказ КАК Заказ,
			                      |	МестаПоЗаказам.НомерМеста КАК НомерМеста,
			                      |	МестаПоЗаказам.ИдентификаторМеста КАК ИдентификаторМеста,
			                      |	МестаПоЗаказам.Штрихкод КАК Штрихкод,
			                      |	МестаПоЗаказам.Заказ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа
			                      |ИЗ
			                      |	Справочник.МестаПоЗаказам КАК МестаПоЗаказам
			                      |ГДЕ
			                      |	МестаПоЗаказам.Заказ В(&Заказы)
			                      |	И МестаПоЗаказам.ПометкаУдаления = ЛОЖЬ
								  //CeHbKA #4203 08.09.2020
								  |	И НЕ МестаПоЗаказам.НеАктуальное
								  //CeHbKA #4203 08.09.2020
								  // МАС - 11.09.2017 - не подтягиваем места с пустыми заказами --->> 
			                      |	И МестаПоЗаказам.Заказ <> ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)
			                      |			И НЕ МестаПоЗаказам.Заказ ЕСТЬ NULL");
								  // <<--- МАС
			Запрос.УстановитьПараметр("Заказы", Спис);
			РезТЗ = Запрос.Выполнить().Выгрузить();
			
			Для каждого СтрЗ Из РезТЗ Цикл
						
				Нстр = Заказы.Добавить();
				Нстр.ДокументПрихода = ДанныеЗаполнения.Ссылка;
				Нстр.ЕстьВПриходе = Истина;
				Нстр.Заказ = СтрЗ.Заказ;
				
				Если НЕ ЗначениеЗаполнено(Нстр.Заказ) Тогда		
					Нстр.Заказ = Документы.РеализацияТоваровУслуг.НайтиПоРеквизиту("НомерВнешнегоЗаказа", СтрЗ.НомерВнешнегоЗаказа);							
				КонецЕсли;
				
				Нстр.НомерЗаказа = СтрЗ.НомерВнешнегоЗаказа;
				Нстр.ТерминалДоставки = ДанныеЗаполнения.ТерминалДоставки;	
				Нстр.КоличествоМестПриход = 1;
				Нстр.Штрихкод = СтрЗ.Штрихкод;
				Нстр.Место = СтрЗ.Место;
			КонецЦикла;
		Иначе		
			Для каждого СтрЗ Из ДанныеЗаполнения.Заказы Цикл		
				Нстр = Заказы.Добавить();
				Нстр.ДокументПрихода = ДанныеЗаполнения.Ссылка;
				Нстр.ЕстьВПриходе = Истина;
				Нстр.Заказ = СтрЗ.Заказ;
				
				Если НЕ ЗначениеЗаполнено(Нстр.Заказ) Тогда		
					Нстр.Заказ = Документы.РеализацияТоваровУслуг.НайтиПоРеквизиту("НомерВнешнегоЗаказа", СтрЗ.ВнешнийНомерЗаказа);							
				КонецЕсли;			
				
				Нстр.НомерЗаказа = СтрЗ.ВнешнийНомерЗаказа;
				Нстр.ТерминалДоставки = ДанныеЗаполнения.ТерминалДоставки;	
				Нстр.КоличествоМестПриход = ?(ЗначениеЗаполнено(СтрЗ.КоличествоМест), СтрЗ.КоличествоМест, 1);
				Нстр.СуммаВПриходе = СтрЗ.СуммаДокумента;					
			КонецЦикла;	
		КонецЕсли;
		
		
		
		
		ЗаполнитьТЧИсторияРеквизитов();
		
		ДатаАпп = ?(ЗначениеЗаполнено(ДанныеЗаполнения.ДатаВходящегоДокумента), ДанныеЗаполнения.ДатаВходящегоДокумента, ДанныеЗаполнения.Дата);			
		//Вр = ТерминалДоставки.ВремяЗакрытияОперДня;
		//СобрД1 = Дата(Год(НачД), Месяц(НачД), День(НачД), Час(Вр), Минута(Вр), Секунда(Вр));	
	
		ДатаНачалаВыборки = НачалоДня(ДатаАпп);
		ДатаОкончанияВыборки = КонецДня(ДатаАпп);
		
		Если ДанныеЗаполнения.Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_601") ИЛИ ДанныеЗаполнения.Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_248") ИЛИ ДанныеЗаполнения.Контрагент = Справочники.Контрагенты.НайтиПоКоду("Shop_752") Тогда		
			ИМЯндекса = Заказы[0].Заказ.ИнтернетМагазинЯндекса;				
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры


Процедура ЗаполнитьТЧИсторияРеквизитов()

	
	СписокКолонок = Новый Массив();
	СписокКолонок.Добавить("ЕстьНаСканере");
	СписокКолонок.Добавить("СуммаНаСканере");
	СписокКолонок.Добавить("КоличествоМестПриход");
	СписокКолонок.Добавить("КоличествоМестСканировано");
	
	
	
	Для каждого Стр Из Заказы Цикл
		
		Для каждого ТекКол Из СписокКолонок Цикл
			
			НИстория = ИсторияРеквизитов.Добавить();
			НИстория.Заказ = Стр.Заказ;
			НИстория.Параметр = ТекКол;
			НИстория.Значение = Стр[ТекКол];
			НИстория.Дата = ТекущаяДата();
			НИстория.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			НИстория.РучнаяКорректировка = Ложь;
			
		КонецЦикла;		
		
	КонецЦикла;
	


КонецПроцедуры


Процедура ПечатьСтрокТЧЗаказы()

	
	Макет = ПолучитьМакет("АПП");

	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ОблСтрокаЗаказа = Макет.ПолучитьОбласть("СтрокаЗаказа");
	//+++ БАО 10.10.2017 №1920
	//---ОблСтрокаТовара = Макет.ПолучитьОбласть("СтрокаТовара");
	ОблСтрокаТовара = Макет.ПолучитьОбласть("СтрокаТовараИдИШк");
	//--- БАО 10.10.2017 №1920 
	
	ОблЗаголовокОтказы = Макет.ПолучитьОбласть("ЗаголовокОтказы");	
	ОблЗаголовокПереносы = Макет.ПолучитьОбласть("ЗаголовокПереносы");
	ОблЗаголовокЧастичный = Макет.ПолучитьОбласть("ЗаголовокЧастичный");
	ОблЗаголовокВРучномРежиме = Макет.ПолучитьОбласть("ПринятыеВРучномРежиме");
	ОблПодвал = Макет.ПолучитьОбласть("Подвал");
	ПустоеМесто = Макет.ПолучитьОбласть("ПустоеМесто");
	
	
	

КонецПроцедуры

