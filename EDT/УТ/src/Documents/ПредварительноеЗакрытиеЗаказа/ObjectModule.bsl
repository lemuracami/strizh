
Функция РасчитатьСтоимостьТоваровЗаказа() // Задача № 2586 ItemsPrice
		
	СуммаТоваров = 0;	
	Для Каждого СтрокаТовара Из Заказ.Товары Цикл
		СуммаТоваров = СуммаТоваров + (СтрокаТовара.Количество * СтрокаТовара.Цена);
	КонецЦикла;	
	
	Возврат СуммаТоваров;
	
КонецФункции

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();	
	Период = ТекущаяДата();	
	
	// движение РС СтатусыЗакрытияЗаказов
	ТекДата = ТекущаяДата();
	Набор = РегистрыСведений.СтатусыЗакрытияЗаказов.СоздатьНаборЗаписей();
	Набор.Отбор.Период.Установить(ТекДата);
				
	НЗапись = Набор.Добавить();
	НЗапись.ДокументРегистратор = Ссылка;
	НЗапись.Заказ = Заказ;
	НЗапись.Период = ТекДата;
	//lem
	Если НовыйСтатусПредварительногоЗакрытия.Пустая() Тогда
		НЗапись.СтатусЗакрытия = Перечисления.СтатусыПредварительногоЗакрытияЗаказов.ЗаказЗакрытПредварительно;				
	Иначе
		НЗапись.СтатусЗакрытия = НовыйСтатусПредварительногоЗакрытия;				
	КонецеСли;	
	Набор.Записать();

	Если ФинальныйСтатус.Код = 301 ИЛИ ФинальныйСтатус.Код = 302 Тогда
		ItemsPrice =  РасчитатьСтоимостьТоваровЗаказа(); // Задача № 2586
	Иначе
		ItemsPrice = Неопределено;
	КонецЕсли;
	
	// текст для передварительно закрытия
	orderID = СокрЛП(Заказ.Номер);
	Status = "";
	//и определяй по правилам, Выполнен = Закрыт, ОтказСЗаездом = Закрыт, ОтказБезЗаезда = Отклонен
	//lem
	Комм = "Предварительное закрытие";
	Если НовыйСтатусПредварительногоЗакрытия.Пустая() Или НовыйСтатусПредварительногоЗакрытия = Перечисления.СтатусыПредварительногоЗакрытияЗаказов.ЗаказЗакрытПредварительно Тогда
		Если ФинальныйСтатус = Справочники.СтатусыЗаказов.Выполнен ИЛИ ФинальныйСтатус = Справочники.СтатусыЗаказов.ОтказСЗаездом Тогда	
			Status = "3";	
			Комм = "Предварительное закрытие";
					
			// Изменим дату доставки в 1С
			Если НачалоДня(Заказ.Дата) <> НачалоДня(ТекущаяДата()) Тогда								
				ДокПереносДаты = Документы.ИзменениеДатыДоставки.СоздатьДокумент();
			    ДокПереносДаты.axi = Истина;
				ДокПереносДаты.Дата = ТекущаяДата();
				ДокПереносДаты.ДатаДоставки = НачалоДня(ТекущаяДата());
				ДокПереносДаты.КорректироватьДатуВАдминке = Ложь;
				ДокПереносДаты.Доставка = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(СокрЛП(Заказ.Номер));
				ДокПереносДаты.Заказ = Заказ.Ссылка;
				ДокПереносДаты.ПричинаИзмененияДаты = Перечисления.ПричиныИзмененияДатыДоставки.ВыгрузкаИзСистемыАксиомус;
				// Задача № 2997
				ДокПереносДаты.ПричинаОтказаПереноса = ПричинаОтказа;
				// Задача № 2997
				
				ДокПереносДаты.ТерминалОбработки = ТерминалОбработки; // Задача № 3049
				
				Попытка				
					ДокПереносДаты.Записать(РежимЗаписиДокумента.Запись);
					ДокПереносДаты.Записать(РежимЗаписиДокумента.Проведение);		
				Исключение	
				КонецПопытки;						
			КонецЕсли;			
			
		ИначеЕсли ФинальныйСтатус = Справочники.СтатусыЗаказов.ОтказБезЗаезда Тогда
			Status = "4";	
			Комм = "Предварительное закрытие";
		КонецЕсли;	
	ИначеЕсли НовыйСтатусПредварительногоЗакрытия = Перечисления.СтатусыПредварительногоЗакрытияЗаказов.ЗаказОткрыт Тогда
		Status = "2";
		Комм = "Предварительное закрытие (открытие заказа товароведом из 1С)";
	КонецеСли;
	who = ПараметрыСеанса.ТекущийПользователь;
	completeDate = Евген.ДатаВSQL(ТекущаяДата(), Ложь);
	//Асеев 17.02.2021 (Задача № 3837)>>>
	//serviceDC = Формат(Заказ.УслугиСД, "ЧРД=.; ЧН=0; ЧГ=");
	//serviceDCclean = Формат(Заказ.УслугиСДЧистые, "ЧРД=.; ЧН=0; ЧГ=");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСД КАК УслугиСД,
	|	ПараметрыТарифаЗаказаСрезПоследних.УслугиСДЧистые КАК УслугиСДЧистые
	|ИЗ
	|	РегистрСведений.ПараметрыТарифаЗаказа.СрезПоследних(, Заказ = &Заказ) КАК ПараметрыТарифаЗаказаСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		УслугиСДИзРС = Выборка.УслугиСД;
		УслугиСДЧистыеИзРС = Выборка.УслугиСДЧистые;
	Иначе
		УслугиСДИзРС = 0;
		УслугиСДЧистыеИзРС = 0;
	КонецЕсли;
	serviceDC = Формат(УслугиСДИзРС, "ЧРД=.; ЧН=0; ЧГ=");
	serviceDCclean = Формат(УслугиСДЧистыеИзРС, "ЧРД=.; ЧН=0; ЧГ=");
	//Асеев 17.02.2021 (Задача № 3837)<<<
	comment = СтрЗаменить(Комм, "'", """");
	
	isRefusal = ?(Status = "4", 1, 0);
	ReasonRefusal = "";
	//deliveryPrice = Заказ.СуммаДоставки;
	payType  = Заказ.ТипОплаты;
	closeFlag = 1;		
	
	// отключено в рамках Задача № 2586
	//СтрокаЗапросаПЗ = "
	//|DECLARE @t TSetOrderStatus
	//|INSERT INTO @t ([orderID],[statusId],[who],[completeDate],serviceDC,serviceDCclean,comment, isRefusal, ReasonRefusal, payType, closeFlag) VALUES (" +
	//orderID +", " +Status+", '" +who+"', '"+completeDate+"', "+serviceDC+"," +serviceDCclean+",'" +comment+"', "+isRefusal+ ", '" +ReasonRefusal+"', " +payType+ ", "+closeFlag+")
	//|EXEC import_setOrderStatusFrom1C @t
	//|";
	//Евген.ЗапросКИнтернетМагазину(СтрокаЗапросаПЗ, Подкл);
	
	// Задача № 2586
	mas.ОтправитьФинальныйСтатусВАдминку(orderID, Число(Status), comment,
	who,
	ТекущаяДата(),
	serviceDC,
	serviceDCclean,
	IsRefusal,
	ReasonRefusal,
	,
	PayType,
	,
	,
	closeFlag,
	ТерминалОбработки.Код,
	ItemsPrice);
	// Задача № 2586
	
	
	//lem	
	Если Не ДокументВнесенВРучномРежиме Тогда
		// финальный статус
		Стр2 =  "INSERT INTO @t ([orderID],[FinalStatusID],[who]) VALUES (" + Сокрлп(Заказ.Номер) + "," + Строка(ФинальныйСтатус.Код) + ",'" + ПараметрыСеанса.ТекущийПользователь + "')";
		
		Стр2 = "DECLARE @t TOrderFinalStatus   " + Стр2 + " EXEC import_setOrderFinalStatus @t";
		Евген.ЗапросКИнтернетМагазину(Стр2, Подкл);
		
		// Задача № 2586, 1 этап переделки записи статусов
		РаботаСоСтатусамиЗаказовСервер.СохранитьФинальныйСтатус(Заказ, ФинальныйСтатус.Код, Число(Status), Ссылка, Истина);
		// Задача № 2586, 1 этап переделки записи статусов

		//// РС ФинальныеСтатусыЗаказов; ; Отключено в рамках 2586, 1 этап переделки записи статусов    				
		//НаборЗаписей = РегистрыСведений.ФинальныеСтатусыЗаказов.СоздатьНаборЗаписей();
		//НаборЗаписей.Отбор.Заказ.Установить(Заказ);
		//НаборЗаписей.Отбор.Период.Установить(Период);
		//Запись = НаборЗаписей.Добавить();
		//Запись.Период = Период;
		//Запись.Заказ = Заказ;
		//Запись.Статус = ФинальныйСтатус.Код;	
		//Запись.ДокументРегистратор = Ссылка;	
		//Запись.ПредварительноеЗакрытие = Истина;
		//НаборЗаписей.Записать();	
		
		//// --- Отключено в рамках Задача № 2813
		//	// текущий статус	
		//	СтрТекстЗапроса = "(" + Формат(СокрЛП(Заказ.Номер), "ЧГ=") + "," + Строка(ФинальныйСтатус.Код) + ",'Предварительное закрытие'" + ")";	
		//
		//	СтрЗапроса = "
		//		|DECLARE @t TOrderStatusId
		//		|INSERT INTO @t (orderID, statusId, comment) VALUES " + СтрТекстЗапроса +" EXEC import_setOrdersStatusIDFrom1C @t";		
		//	Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
		//// --- Отключено в рамках Задача № 2813
		
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалОбработки.Код)); // Задача № 3027

		//CeHbKA #3227 21.06.2019
		Если НЕ ПричинаОтказа.Пустая() Тогда
			ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonId", СокрЛП(ПричинаОтказа.Код), ДопПараметрыСтатуса); 
			ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonRefusal", СокрЛП(ПричинаОтказа.Наименование), ДопПараметрыСтатуса); // Задача № 3027
		КонецЕсли;	
		
		// Задача № 2813
		МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Заказ.Номер, ФинальныйСтатус.Код, "Предварительное закрытие",,,,ДопПараметрыСтатуса);		
		СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);
		// Задача № 2813

		
		////Стр2 =  "INSERT INTO @t ([orderID],[FinalStatusID],[who]) VALUES (" + Сокрлп(Заказ.Номер) + "," + Строка(ФинальныйСтатус.Код) + ",'" + ПараметрыСеанса.ТекущийПользователь + "')";
		//СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Заказ.Номер), "ЧГ=") + "," + Строка(ФинальныйСтатус.Код) + ",'Предварительное закрытие'";		
		////Стр2 = "DECLARE @t TOrderFinalStatus   " + Стр2 + " EXEC import_setOrderFinalStatus @t";
		//Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
		
		
		// РС СтатусыЗаказов    				
		НаборЗаписей = РегистрыСведений.СтатусыЗаказов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Заказ.Установить(Заказ);
		НаборЗаписей.Отбор.Период.Установить(Период);
		Запись = НаборЗаписей.Добавить();
		Запись.Период = Период;
		Запись.Заказ = Заказ;
		Запись.Статус = ФинальныйСтатус.Код;	
		Запись.ДокументРегистратор = Ссылка;	
		Запись.ПредварительноеЗакрытие = Истина;
		
		Запись.Терминал = ТерминалОбработки; //  Задача № 3027
		
		НаборЗаписей.Записать();	
	КонецеСли;
	
КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	Заказ = "";
	ФинальныйСтатус = "";
	ТекущийСтатус = "";
	ПричинаНеВыполнения = "";
	ПричинаОтказа = "";
	СтатусПредварительногоЗакрытия = "";
	НовыйСтатусПредварительногоЗакрытия = "";
	ДокументВнесенВРучномРежиме = Ложь;
КонецПроцедуры

