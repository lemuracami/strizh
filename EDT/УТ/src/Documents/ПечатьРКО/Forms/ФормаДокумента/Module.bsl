
&НаКлиенте
Процедура Импортировать(Команда)
	ДиалогФыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогФыбораФайла.Фильтр = "Все файлы Excel|*.xlsx;*.xls";
	ДиалогФыбораФайла.Заголовок = "Выберите файл";                                         
	// В диалоге будет открыт предварительный просмотр файлов
	//ДиалогФыбораФайла.ПредварительныйПросмотр = Истина;
	// При открытии диалога сначала для выбора будут предложены файлы
	// первого типа, из типов, перечисленных в свойстве "Фильтр".
	ДиалогФыбораФайла.ИндексФильтра = 0;
	// Открыть диалог выбора файла.
	Если ДиалогФыбораФайла.Выбрать() Тогда
	   ИмпортироватьИзЭксель(ДиалогФыбораФайла.ПолноеИмяФайла);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИмпортироватьИзЭксель(ИмяФайла)
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open(ИмяФайла);
		//Состояние("Обработка файла Microsoft Excel...");
	Исключение
		Сообщить("Ошибка при открытии файла с помощью Excel! Загрузка не будет произведена!");
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;

	Попытка
		//Открываем необходимый лист
		Excel.Sheets(1).Select(); // лист 1, по умолчанию
	Исключение
		//Закрываем Excel
		Excel.ActiveWorkbook.Close();
		Excel = 0;
		Сообщить("Файл "+Строка(ИмяФайла)+" не соответствует необходимому формату! Первый лист не найден!");
		ОтменитьТранзакцию();
		Возврат;
	КонецПопытки;

	//Получим количество строк и колонок.
	//В разных версиях Excel получаются по-разному, поэтому сначала определим версию Excel
	Версия = Лев(Excel.Version,Найти(Excel.Version,".")-1);
	Если Версия = "8" тогда
		ФайлСтрок = Excel.Cells.CurrentRegion.Rows.Count;
		ФайлКолонок = Макс(Excel.Cells.CurrentRegion.Columns.Count, 13);
	Иначе
		ФайлСтрок = Excel.Cells(1,1).SpecialCells(11).Row;
		ФайлКолонок = Excel.Cells(1,1).SpecialCells(11).Column;
	Конецесли;
	
	Попытка
		Для СтрЭксель = 2 По ФайлСтрок Цикл
			Стр = Объект.ТабличнаяЧасть.Добавить();
			Стр.ФИО = СокрЛП(Excel.Cells(СтрЭксель, 2).Text);
			Стр.Сумма = Число(Excel.Cells(СтрЭксель, 3).Value);
			Стр.Печать = Истина;
		КонецЦикла;
	Исключение
		Предупреждение("Ошибка при чтении файла! Неверная таблица или данные в файле. Строка: " + Строка(СтрЭксель));
		Объект.ТабличнаяЧасть.Очистить();
	КонецПопытки;
	
	Excel.DisplayAlerts = 0; 
	Excel.Quit();
	Excel.DisplayAlerts = 1;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	ВыбратьНаПечать(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНаПечать(ВыборНаПечать)
	Для каждого Стр Из Объект.ТабличнаяЧасть Цикл
		Стр.Печать = ВыборНаПечать;		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УбратьГалочки(Команда)
	ВыбратьНаПечать(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	ТабДок = Новый ТабличныйДокумент;
	Макет = Документы.ПечатьРКО.ПолучитьМакет("Макет");
	// Заголовок
	Область = Макет.ПолучитьОбласть("Ордер");
	Ордер = 0;
	Для Каждого ТекСтрока Из Объект.ТабличнаяЧасть Цикл
		Если ТекСтрока.Печать = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		Ордер = Ордер + 1;
		Область.Параметры.Дата = Формат(Объект.Дата, "ДЛФ=ДД");
		Область.Параметры.Сумма = ТекСтрока.Сумма;
		Область.Параметры.ФИО = ТекСтрока.ФИО;
		Область.Параметры.СуммаПрописью = ЧислоПрописью(ТекСтрока.Сумма, "Л=ru_RU;ДП=Истина;НП=Истина", "рубль, рубля, рублей, м, копейка, копейки, копеек, ж");
		ТабДок.Вывести(Область);
		
		Если Ордер = 2 тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			Ордер = 0;
		КонецЕсли;
	КонецЦикла;
	
	ВыводНаПечать(ТабДок);	
КонецПроцедуры

&НаСервере
Функция ОтборСпискаСервер()
	Отбор = Новый Структура;
	Отбор.Вставить("Печать", Истина);
	Возврат Объект.ТабличнаяЧасть.Выгрузить(Отбор,"НомерСтроки, ФИО, Сумма");	
КонецФункции

&НаКлиенте
Процедура ПечатьСписком(Команда)
	ТабДок = Новый ТабличныйДокумент;
	Построитель = Новый ПостроительОтчета;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОтборСпискаСервер());
	Макет = Документы.ПечатьРКО.ПолучитьМакет("Макет");
	Построитель.МакетШапкиТаблицы     = Макет.ПолучитьОбласть("ШапкаСписок");
	Построитель.МакетДетальныхЗаписей = Макет.ПолучитьОбласть("Список");
	Построитель.ОформитьМакет();
	Построитель.Вывести(ТабДок);
	ВыводНаПечать(ТабДок);
КонецПроцедуры

&НаКлиенте
Процедура ВыводНаПечать(ТабДок)
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Если ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоНаименованию("Андриенко Сергей")
	//	ИЛИ ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоНаименованию("Климюк Анна") 
	//	ИЛИ ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоНаименованию("Чупракова Елена")
	//	ИЛИ ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоНаименованию("Жеребцов Денис") Тогда
	//Иначе
	//	Отказ = Истина;
	//КонецЕсли;	
	
КонецПроцедуры



