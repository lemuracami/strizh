

&НаСервере
Процедура ЗаполнитьДанныеНаСервере()
	
	Объект.Заказы.Очистить();
	Объект.СуммаОжидаемая = 0;
	Объект.СуммаОжидаемаяНаличные = 0;
	Объект.СуммаПринятая = 0;
	Объект.СуммаПринятаяНаличные = 0;
	
	ПараметрыЗаписиДокумента = Новый Структура;
	ПараметрыЗаписиДокумента.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	Записать(ПараметрыЗаписиДокумента);
	
	
	// Вставить содержимое обработчика.
	Зап = Новый Запрос;
	//Асеев 25.08.2022 (Задача № 4881)>>>
	//Зап.Текст = "ВЫБРАТЬ
	//            |	СостояниеДСПриУдаленномЗакрытииСрезПоследних.Заказ КАК Заказ,
	//            |	СостояниеДСПриУдаленномЗакрытииСрезПоследних.Рейс КАК Рейс,
	//            |	СостояниеДСПриУдаленномЗакрытииСрезПоследних.СуммаДС КАК СуммаКПринятию,
	//            |	СостояниеДСПриУдаленномЗакрытииСрезПоследних.ТипОплаты КАК ТипОплаты,
	//            |	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
	//            |	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор
	//            |ИЗ
	//            |	РегистрСведений.СостояниеДСПриУдаленномЗакрытии.СрезПоследних(&ДатаЗапроса, ) КАК СостояниеДСПриУдаленномЗакрытииСрезПоследних
	//            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(&ДатаЗапроса, ) КАК ПривязкаМашинКРейсамСрезПоследних
	//            |		ПО СостояниеДСПриУдаленномЗакрытииСрезПоследних.Рейс.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс.Ссылка
	//            |ГДЕ
	//            |	СостояниеДСПриУдаленномЗакрытииСрезПоследних.ДСПринятыКассиром = ЛОЖЬ
	//            |	И СостояниеДСПриУдаленномЗакрытииСрезПоследних.Рейс.ДатаРейса = &ДатаРейса
	//            |	И ПривязкаМашинКРейсамСрезПоследних.Транспорт = &Транспорт";
	Зап.Текст =
	"ВЫБРАТЬ
	|	РейсЗаказы.Ссылка КАК Рейс,
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	Документ.Рейс.Заказы КАК РейсЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс КАК Т_Рейс
	|		ПО (Т_Рейс.ДатаРейса = &ДатаРейса)
	|			И РейсЗаказы.Ссылка = Т_Рейс.Ссылка
	|			И (НЕ РейсЗаказы.УдаленИзРейса)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО РейсЗаказы.Заказ = РеализацияТоваровУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПривязкаМашинКРейсамСрезПоследних.Рейс КАК Рейс,
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель КАК Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор КАК Экспедитор
	|ПОМЕСТИТЬ ВТ_Рейсы
	|ИЗ
	|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(
	|			&ДатаЗапроса,
	|			Рейс В
	|				(ВЫБРАТЬ
	|					ВТ_Заказы.Рейс КАК Рейс
	|				ИЗ
	|					ВТ_Заказы КАК ВТ_Заказы)) КАК ПривязкаМашинКРейсамСрезПоследних
	|ГДЕ
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт = &Транспорт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Рейс КАК Рейс,
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	ВТ_Рейсы.Водитель КАК Водитель,
	|	ВТ_Рейсы.Экспедитор КАК Экспедитор,
	|	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара,
	|	новаОтчетВодителя.Ссылка КАК ОтчетВодителя,
	|	ПриходДСПоОтчетуВодителя.Ссылка КАК ПриходДС
	|ПОМЕСТИТЬ ВТ_ЗаказыРейсов
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Рейсы КАК ВТ_Рейсы
	|		ПО ВТ_Заказы.Рейс = ВТ_Рейсы.Рейс
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя КАК новаОтчетВодителя
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя КАК ПриходДСПоОтчетуВодителя
	|			ПО новаОтчетВодителя.Ссылка = ПриходДСПоОтчетуВодителя.ОтчетВодителя
	|				И (ПриходДСПоОтчетуВодителя.Проведен)
	|		ПО ВТ_Заказы.Рейс.РейсМестнойДоставки = новаОтчетВодителя.Рейс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказыРейсов.Заказ КАК Заказ,
	|	ВТ_ЗаказыРейсов.Рейс КАК Рейс,
	|	СостояниеДСПриУдаленномЗакрытииСрезПоследних.СуммаДС КАК СуммаКПринятию,
	|	ЕСТЬNULL(СостояниеДСПриУдаленномЗакрытииСрезПоследних.ТипОплаты, новаОтчетВодителяЗадания.ТипОплаты) КАК ТипОплаты,
	|	ВТ_ЗаказыРейсов.Водитель КАК Водитель,
	|	ВТ_ЗаказыРейсов.Экспедитор КАК Экспедитор,
	|	(новаОтчетВодителяЗадания.РезультатДоставки В (ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена), ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично))
	|		ИЛИ новаОтчетВодителяЗадания.ПричинаНевыполнения В (ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносДоставки), ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносСЗаездом))
	|			И НЕ ПараметрыКонтрагентовСрезПоследних.СопроводительныеДокументыНаходятсяВКоробке)
	|		И ДополнительныеПараметрыЗаказа.ПодписаниеИВозвратСопрДокументов КАК ТребуетсяПодписаниеИВозвратСопрДокументов,
	|	(новаОтчетВодителяЗадания.РезультатДоставки В (ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.Выполнена), ЗНАЧЕНИЕ(Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично))
	|		ИЛИ новаОтчетВодителяЗадания.ПричинаНевыполнения В (ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносДоставки), ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ПереносСЗаездом))
	|			И НЕ ПараметрыКонтрагентовСрезПоследних.СопроводительныеДокументыНаходятсяВКоробке)
	|		И ЕСТЬNULL(СостояниеДСПриУдаленномЗакрытииСрезПоследних.ТипОплаты, новаОтчетВодителяЗадания.ТипОплаты) = ЗНАЧЕНИЕ(Справочник.ТипыОплат.БезналичныйРасчет)
	|		И НЕ ПараметрыКонтрагентовСрезПоследних.ОтключитьПроверкуБНЗаказов КАК ТребуетсяПодписаниеИВозвратБНДокументов,
	|	ПараметрыКонтрагентовСрезПоследних.СопроводительныеДокументыНаходятсяВКоробке КАК СопрДокументыВКоробке,
	|	СостояниеДСПриУдаленномЗакрытииСрезПоследних.Регистратор КАК Основание,
	|	СостояниеДСПриУдаленномЗакрытииСрезПоследних.Заказ ЕСТЬ NULL КАК СуммаНеУчитывается,
	|	новаОтчетВодителяЗадания.РезультатДоставки КАК РезультатДоставки,
	|	новаОтчетВодителяЗадания.ПричинаНевыполнения КАК ПричинаНевыполнения,
	|	ВТ_ЗаказыРейсов.ПриходДС КАК ПриходДС,
	|	ПриходДСПоОтчетуВодителяДоставки.СуммаЗаказаКОплате КАК СуммаЗаказаКОплате,
	|	ПриходДСПоОтчетуВодителяДоставки.ЮрЛицо КАК ЮрЛицо,
	|	ПриходДСПоОтчетуВодителяДоставки.ИнтернетМагазин КАК ИнтернетМагазин,
	|	ПриходДСПоОтчетуВодителяДоставки.СуммаЧековЭкипажа - ПриходДСПоОтчетуВодителяДоставки.СуммаВозвратныхЧековЭкипажа - ПриходДСПоОтчетуВодителяДоставки.СуммаВозвратныхЧековКассира КАК СуммаЧековОбщая
	|ИЗ
	|	ВТ_ЗаказыРейсов КАК ВТ_ЗаказыРейсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеДСПриУдаленномЗакрытии.СрезПоследних(
	|				&ДатаЗапроса,
	|				Заказ В
	|					(ВЫБРАТЬ
	|						ВТ_ЗаказыРейсов.Заказ КАК Заказ
	|					ИЗ
	|						ВТ_ЗаказыРейсов КАК ВТ_ЗаказыРейсов)) КАК СостояниеДСПриУдаленномЗакрытииСрезПоследних
	|		ПО ВТ_ЗаказыРейсов.Заказ = СостояниеДСПриУдаленномЗакрытииСрезПоследних.Заказ
	|			И (НЕ СостояниеДСПриУдаленномЗакрытииСрезПоследних.ДСПринятыКассиром)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(
	|				&ДатаЗапроса,
	|				Контрагент В
	|					(ВЫБРАТЬ
	|						ВТ_ЗаказыРейсов.ВладелецТовара КАК ВладелецТовара
	|					ИЗ
	|						ВТ_ЗаказыРейсов КАК ВТ_ЗаказыРейсов)) КАК ПараметрыКонтрагентовСрезПоследних
	|		ПО ВТ_ЗаказыРейсов.ВладелецТовара = ПараметрыКонтрагентовСрезПоследних.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|		ПО ВТ_ЗаказыРейсов.Заказ = ДополнительныеПараметрыЗаказа.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.новаОтчетВодителя.Задания КАК новаОтчетВодителяЗадания
	|		ПО ВТ_ЗаказыРейсов.ОтчетВодителя = новаОтчетВодителяЗадания.Ссылка
	|			И ВТ_ЗаказыРейсов.Заказ = новаОтчетВодителяЗадания.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходДСПоОтчетуВодителя.Доставки КАК ПриходДСПоОтчетуВодителяДоставки
	|		ПО ВТ_ЗаказыРейсов.ПриходДС = ПриходДСПоОтчетуВодителяДоставки.Ссылка
	|			И ВТ_ЗаказыРейсов.Заказ = ПриходДСПоОтчетуВодителяДоставки.Доставка";
	//Асеев 25.08.2022 (Задача № 4881)<<<
	Зап.УстановитьПараметр("ДатаЗапроса", Объект.Дата);
	Зап.УстановитьПараметр("ДатаРейса", Объект.ДатаРейса);
	Зап.УстановитьПараметр("Транспорт", Объект.Транспорт);
	
	Выб = Зап.Выполнить().Выбрать();
	
	
	ТипОплатыНаличные = Справочники.ТипыОплат.Наличные;
	
	СуммаНал = 0;
	Пока Выб.Следующий() Цикл
		Нов = Объект.Заказы.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Выб);
		Если Нов.ТипОплаты = ТипОплатыНаличные Тогда
			СуммаНал = СуммаНал + Нов.СуммаКПринятию;
		КонецеСли;
		
		Объект.Рейс = Выб.Рейс;
		Объект.Водитель = Выб.Водитель;
		Объект.Экспедитор = Выб.Экспедитор;
		Объект.Основание = Выб.Основание;
		//Асеев 03.10.2022 (Задача № 4905)>>>
		Объект.ПриходДС = Выб.ПриходДС;
		//Асеев 03.10.2022 (Задача № 4905)<<<
	КонецЦикла;	
	
	Объект.СуммаОжидаемая = Объект.Заказы.Итог("СуммаКПринятию");  
	Объект.СуммаОжидаемаяНаличные = СуммаНал;

	//Асеев 03.10.2022 (Задача № 4905)>>>
	ОбновитьИтогиПоДоставкам();
	//Асеев 03.10.2022 (Задача № 4905)<<<
	
КонецПроцедуры

//Асеев 03.10.2022 (Задача № 4905)>>>
&НаСервере
Процедура ОбновитьИтогиПоДоставкам()
	
	Если Объект.ПриходДС.Пустая() Тогда
		ВсегоДоставок = 0;
		ВыполненоБезнал = 0;
		ВыполненоВТомЧислеЧастично = 0;
		ВыполненоДокументыКВозврату = 0;
		ДоставокВыполнено = 0;
		ДоставокНеВыполнено = 0;
		НевыполненоБезнал = 0;
		НевыполненоВТомЧислеПеренесено = 0;
		НевыполненоДокументыКВозврату = 0;
		СуммаПоНаличке = 0;
		СуммаПоСБП = 0;
		СуммаПоТерминалу = 0;
		СуммаПоТерминалуПодтвержденная = 0;
		СуммаЧековПоНаличке = 0;
		СуммаЧековПоТерминалу = 0;
	Иначе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ПриходДС", Объект.ПриходДС);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПриходДСПоОтчетуВодителя.ИтогоНаличные КАК ИтогоНаличные,
		|	ПриходДСПоОтчетуВодителя.ИтогоЧекиНаличные КАК ИтогоЧекиНаличные,
		|	ПриходДСПоОтчетуВодителя.ИтогоТерминал КАК ИтогоТерминал,
		|	ПриходДСПоОтчетуВодителя.ИтогоТерминалПодтвержденный КАК ИтогоТерминалПодтвержденный,
		|	ПриходДСПоОтчетуВодителя.ИтогоЧекиТерминал КАК ИтогоЧекиТерминал,
		|	ПриходДСПоОтчетуВодителя.ИтогоСБП КАК ИтогоСБП,
		|	ПриходДСПоОтчетуВодителя.ИтогоЗаказов КАК ИтогоЗаказов,
		|	ПриходДСПоОтчетуВодителя.ИтогоЗаказовВыполнено КАК ИтогоЗаказовВыполнено,
		|	ПриходДСПоОтчетуВодителя.ИтогоЗаказовВыполненоВТомЧислеЧастично КАК ИтогоЗаказовВыполненоВТомЧислеЧастично,
		|	ПриходДСПоОтчетуВодителя.ИтогоЗаказовВыполненоВТомЧислеБН КАК ИтогоЗаказовВыполненоВТомЧислеБН,
		|	ПриходДСПоОтчетуВодителя.ИтогоЗаказовВыполненоВТомЧислеДокументыКВозврату КАК ИтогоЗаказовВыполненоВТомЧислеДокументыКВозврату,
		|	ПриходДСПоОтчетуВодителя.ИтогоЗаказовНеВыполнено КАК ИтогоЗаказовНеВыполнено,
		|	ПриходДСПоОтчетуВодителя.ИтогоЗаказовНеВыполненоВТомЧислеПеренесено КАК ИтогоЗаказовНеВыполненоВТомЧислеПеренесено,
		|	ПриходДСПоОтчетуВодителя.ИтогоЗаказовНеВыполненоВТомЧислеБН КАК ИтогоЗаказовНеВыполненоВТомЧислеБН,
		|	ПриходДСПоОтчетуВодителя.ИтогоЗаказовНеВыполненоВТомЧислеДокументыКВозврату КАК ИтогоЗаказовНеВыполненоВТомЧислеДокументыКВозврату
		|ИЗ
		|	Документ.ПриходДСПоОтчетуВодителя КАК ПриходДСПоОтчетуВодителя
		|ГДЕ
		|	ПриходДСПоОтчетуВодителя.Ссылка = &ПриходДС";
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ВсегоДоставок = Выборка.ИтогоЗаказов;
		ВыполненоБезнал = Выборка.ИтогоЗаказовВыполненоВТомЧислеБН;
		ВыполненоВТомЧислеЧастично = Выборка.ИтогоЗаказовВыполненоВТомЧислеЧастично;
		ВыполненоДокументыКВозврату = Выборка.ИтогоЗаказовВыполненоВТомЧислеДокументыКВозврату;
		ДоставокВыполнено = Выборка.ИтогоЗаказовВыполнено;
		ДоставокНеВыполнено = Выборка.ИтогоЗаказовНеВыполнено;
		НевыполненоБезнал = Выборка.ИтогоЗаказовНеВыполненоВТомЧислеБН;
		НевыполненоВТомЧислеПеренесено = Выборка.ИтогоЗаказовНеВыполненоВТомЧислеПеренесено;
		НевыполненоДокументыКВозврату = Выборка.ИтогоЗаказовНеВыполненоВТомЧислеДокументыКВозврату;
		СуммаПоНаличке = Выборка.ИтогоНаличные;
		СуммаПоСБП = Выборка.ИтогоСБП;
		СуммаПоТерминалу = Выборка.ИтогоТерминал;
		СуммаПоТерминалуПодтвержденная = Выборка.ИтогоТерминалПодтвержденный;
		СуммаЧековПоНаличке = Выборка.ИтогоЧекиНаличные;
		СуммаЧековПоТерминалу = Выборка.ИтогоЧекиТерминал;
	КонецЕсли;
	
	Если СуммаПоТерминалу <> СуммаПоТерминалуПодтвержденная Тогда
		Элементы.СуммаПоТерминалуПодтвержденная.ЦветФона = Новый Цвет(255, 150, 150);
	Иначе
		Элементы.СуммаПоТерминалуПодтвержденная.ЦветФона = Новый Цвет();
	КонецЕсли;
	
КонецПроцедуры
//Асеев 03.10.2022 (Задача № 4905)<<<

&НаКлиенте
Процедура ЗаполнитьДанные(Команда)
	Если Объект.Заказы.Количество() <> 0 тогда
		От = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьДанныеЗавершение", ЭтотОбъект), "Табличная часть не пуста, при заполнении она будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
        Возврат;	
	КонецЕсли;	
	
	ЗаполнитьДанныеФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецеСли;	
	
	ЗаполнитьДанныеФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеФрагмент()
	
	ЗаполнитьДанныеНаСервере();

КонецПроцедуры


&НаКлиенте
Процедура ПринятаВсяСумма(Команда)
	ТипОплатыНаличные = ПредопределенноеЗначение("Справочник.ТипыОплат.Наличные");
	
	СумНаличные = 0;
	Для Каждого Тек Из Объект.Заказы Цикл
		//Асеев 25.08.2022 (Задача № 4881)>>>
		Если Не Тек.СуммаНеУчитывается Тогда
		//Асеев 25.08.2022 (Задача № 4881)<<<
			Тек.ПринятаяСумма = Тек.СуммаКПринятию;
			Тек.СуммаПринята = Истина;
			
			Если Тек.ТипОплаты = ТипОплатыНаличные Тогда
				СумНаличные = СумНаличные + Тек.СуммаКПринятию;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	Объект.СуммаПринятая = Объект.Заказы.Итог("ПринятаяСумма");	
	Объект.СуммаПринятаяНаличные = СумНаличные;
КонецПроцедуры


&НаКлиенте
Процедура ДатаРейсаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ЗаполнитьДанныеПриИзмененииРеквизитов();
КонецПроцедуры


&НаКлиенте
Процедура ТранспортПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ЗаполнитьДанныеПриИзмененииРеквизитов();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеПриИзмененииРеквизитов()
	Если Не ЗначениеЗаполнено(Объект.ДатаРейса) Или Не ЗначениеЗаполнено(Объект.Транспорт) Тогда
		Возврат;
	КонецеСли;	
	
	Если Объект.Заказы.Количество() <> 0 Тогда
		СтрокаВопроса = "Перезаполнить данные?";
	Иначе
		СтрокаВопроса = "Заполнить данные?";
	КонецеСли;
	
	От = Неопределено;

	
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьДанныеПриИзмененииРеквизитовЗавершение", ЭтотОбъект), СтрокаВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеПриИзмененииРеквизитовЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	От = РезультатВопроса;
	
	Если От = КодВозвратаДиалога.Да Тогда
		Объект.Заказы.Очистить();
	Иначе
		Возврат;
	КонецеСли;	
	
	ЗаполнитьДанныеНаСервере();

КонецПроцедуры	


Процедура ОбновитьИтогоПринято()
	ИтСум = 0;
	СумНал = 0;
	ТипОплатыНаличные = Справочники.ТипыОплат.Наличные;
	
	
	Для Каждого Тек Из Объект.Заказы Цикл
		//Асеев 25.08.2022 (Задача № 4881)>>>
		//Если Тек.СуммаПринята Тогда
		Если Тек.СуммаПринята И Не Тек.СуммаНеУчитывается Тогда
		//Асеев 25.08.2022 (Задача № 4881)<<<
			ИтСум = ИтСум + Тек.СуммаКПринятию;
			Тек.ПринятаяСумма = Тек.СуммаКПринятию;
			Если Тек.ТипОплаты = ТипОплатыНаличные Тогда
				СумНал = СумНал + Тек.СуммаКПринятию;
			КонецЕсли;	
		Иначе
			Тек.ПринятаяСумма = 0;
		КонецеСли;	
	КонецЦикла;	
	
	Объект.СуммаПринятая = ИтСум;
	Объект.СуммаПринятаяНаличные = СумНал;
КонецПроцедуры	

&НаКлиенте
Процедура ЗаказыСуммаПринятаПриИзменении(Элемент)
	ОбновитьИтогоПринято();
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Пользователь.Пустая() Тогда
		Объект.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	//Асеев 03.10.2022 (Задача № 4905)>>>
	ОбновитьИтогиПоДоставкам();
	//Асеев 03.10.2022 (Задача № 4905)<<<
	
КонецПроцедуры


&НаСервере
Функция ПроверитьЗаполнениеНаСервере(Отказ, ПараметрыЗаписи)
	
	//Асеев 25.08.2022 (Задача № 4881)>>>
	ТекстПредупреждения = "";
	МассивСтрокСопрДок = Новый Массив;
	
    Для Каждого Стр Из Объект.Заказы Цикл
		
		Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			Если (Стр.ТребуетсяПодписаниеИВозвратСопрДокументов Или Стр.ТребуетсяПодписаниеИВозвратБНДокументов) И Не Стр.СопрДокументПоступил Тогда
				МассивСтрокСопрДок.Добавить(СокрЛП(Стр.Заказ.Номер));
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивСтрокСопрДок.Количество() Тогда
		ТекстПредупреждения = "По заказу № " + СтрСоединить(МассивСтрокСопрДок, ",") + " требуется принять документы." + Символы.ПС + "Отметка о приеме документов не установлена, проверьте корректность ввода данных в форме.";
	КонецЕсли;
	
	Возврат ТекстПредупреждения;
	//Асеев 25.08.2022 (Задача № 4881)<<<
	
КонецФункции


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//Асеев 25.08.2022 (Задача № 4881)>>>
	ТекстПредупреждения = ПроверитьЗаполнениеНаСервере(Отказ, ПараметрыЗаписи);
	
	Если ТекстПредупреждения <> "" Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения,, Объект.Ссылка);
	КонецЕсли;
	//Асеев 25.08.2022 (Задача № 4881)<<<
	
КонецПроцедуры

//Асеев 03.10.2022 (Задача № 4905)>>>
&НаСервере
Процедура СброситьПометкиКнопокОтбора(ТекущаяКнопка)
	
	Если ИмяКнопкиОтбораЗаказов <> "" Тогда
		ПредыдущаяКнопка = Элементы[ИмяКнопкиОтбораЗаказов];
		Если ПредыдущаяКнопка <> ТекущаяКнопка Тогда
			ПредыдущаяКнопка.Пометка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ИмяКнопкиОтбораЗаказов = ТекущаяКнопка.Имя;
	
КонецПроцедуры

&НаСервере
Процедура ОтборБНалНаСервере()
	
	ТекущаяКнопка = Элементы.ЗаказыОтборБНал;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		Элементы.Заказы.ОтборСтрок = Новый ФиксированнаяСтруктура("ТипОплаты", Справочники.ТипыОплат.БезналичныйРасчет);
	Иначе
		Элементы.Заказы.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборБНал(Команда)
	ОтборБНалНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтборСопрНаСервере()
	
	ТекущаяКнопка = Элементы.ЗаказыОтборСопр;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		Элементы.Заказы.ОтборСтрок = Новый ФиксированнаяСтруктура("ТребуетсяПодписаниеИВозвратСопрДокументов", Истина);
	Иначе
		Элементы.Заказы.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСопр(Команда)
	ОтборСопрНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтборНаличныеНаСервере()

	ТекущаяКнопка = Элементы.ЗаказыОтборНаличные;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		
		РезультатВыполнена = Справочники.новаРезультатМестнойДоставки.Выполнена;
		РезультатВыполненаЧастично = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично;
		ТипОплатыНаличные = Справочники.ТипыОплат.Наличные;
		
		Для Каждого СтрокаЗаказа Из Объект.Заказы Цикл
			СтрокаЗаказа.Отбор = (СтрокаЗаказа.РезультатДоставки = РезультатВыполнена Или СтрокаЗаказа.РезультатДоставки = РезультатВыполненаЧастично) И СтрокаЗаказа.ТипОплаты = ТипОплатыНаличные;
		КонецЦикла;
		Элементы.Заказы.ОтборСтрок = Новый ФиксированнаяСтруктура("Отбор", Истина);
	Иначе
		Элементы.Заказы.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаличные(Команда)
	ОтборНаличныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтборТерминалНаСервере()
	
	ТекущаяКнопка = Элементы.ЗаказыОтборТерминал;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		
		РезультатВыполнена = Справочники.новаРезультатМестнойДоставки.Выполнена;
		РезультатВыполненаЧастично = Справочники.новаРезультатМестнойДоставки.ВыполненаЧастично;
		ТипОплатыТерминал = Справочники.ТипыОплат.Терминал;
		
		Для Каждого СтрокаЗаказа Из Объект.Заказы Цикл
			СтрокаЗаказа.Отбор = (СтрокаЗаказа.РезультатДоставки = РезультатВыполнена Или СтрокаЗаказа.РезультатДоставки = РезультатВыполненаЧастично) И СтрокаЗаказа.ТипОплаты = ТипОплатыТерминал;
		КонецЦикла;
		Элементы.Заказы.ОтборСтрок = Новый ФиксированнаяСтруктура("Отбор", Истина);
	Иначе
		Элементы.Заказы.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТерминал(Команда)
	ОтборТерминалНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтборБНалПереносНаСервере()
	
	ТекущаяКнопка = Элементы.ЗаказыОтборБНалПеренос;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		Элементы.Заказы.ОтборСтрок = Новый ФиксированнаяСтруктура("РезультатДоставки,ТипОплаты", Справочники.новаРезультатМестнойДоставки.НеВыполнена, Справочники.ТипыОплат.БезналичныйРасчет);
	Иначе
		Элементы.Заказы.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборБНалПеренос(Команда)
	ОтборБНалПереносНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтборСопрПереносНаСервере()
	
	ТекущаяКнопка = Элементы.ЗаказыОтборСопрПеренос;
	ТекущаяКнопка.Пометка = Не ТекущаяКнопка.Пометка;
	Если ТекущаяКнопка.Пометка Тогда
		СброситьПометкиКнопокОтбора(ТекущаяКнопка);
		Элементы.Заказы.ОтборСтрок = Новый ФиксированнаяСтруктура("РезультатДоставки,ТребуетсяПодписаниеИВозвратСопрДокументов", Справочники.новаРезультатМестнойДоставки.НеВыполнена, Истина);
	Иначе
		Элементы.Заказы.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСопрПеренос(Команда)
	ОтборСопрПереносНаСервере();
КонецПроцедуры
//Асеев 03.10.2022 (Задача № 4905)<<<


