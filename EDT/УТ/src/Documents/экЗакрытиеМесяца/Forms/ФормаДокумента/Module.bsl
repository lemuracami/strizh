
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Регион = ПараметрыСеанса.ТерминалДоставки;
		Объект.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		Объект.ПериодРасчета = КонецМесяца(ДобавитьМесяц(НачалоМесяца(ТекущаяДата()), -1));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПредставлениеМесяца(ДатаНачалаМесяца) Экспорт
	Возврат Формат(ДатаНачалаМесяца, "ДФ='ММММ гггг'");
КонецФункции

&НаКлиенте
Функция СписокМесяцевПоСтроке(Текст)
	
	СписокМесяцев  = Новый СписокЗначений;
	Месяцы         = Новый Соответствие;
	МесяцыВозврата = Новый Массив;
	
	Для Счетчик = 1 По 12 Цикл
		Представление = Формат(Дата(2000, Счетчик, 1), "ДФ='ММММ'");
		СписокМесяцев.Добавить(Счетчик, Представление);
		Представление = Формат(Дата(2000, Счетчик, 1), "ДФ='МММ'");
		СписокМесяцев.Добавить(Счетчик, Представление);
	КонецЦикла;
	
	Для Каждого ЭлементСписка Из СписокМесяцев Цикл
		Если ВРег(Текст) = ВРег(Лев(ЭлементСписка.Представление, СтрДлина(Текст))) Тогда
			Месяцы[ЭлементСписка.Значение] = 0;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элемент Из Месяцы Цикл
		МесяцыВозврата.Добавить(Элемент.Ключ);
	КонецЦикла;
	
	Возврат МесяцыВозврата;
	
КонецФункции

&НаКлиенте
Функция ДатаКакМесяцПодобратьДатуПоТексту(Текст, ДатаПоТексту = НеОпределено)
	
	СписокВозврата = Новый СписокЗначений;
	ТекущийГод = Год(ТекущаяДата());
	
	Если ПустаяСтрока(Текст) Тогда
		ДатаПоТексту = Дата(1, 1, 1);
		Возврат СписокВозврата;
	КонецЕсли;
	
	Если СтрНайти(Текст, ".") <> 0 Тогда
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, ".");
	ИначеЕсли СтрНайти(Текст, ",") <> 0 Тогда
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, ",");
	ИначеЕсли СтрНайти(Текст, "-") <> 0 Тогда
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, "-");
	ИначеЕсли СтрНайти(Текст, "/") <> 0 Тогда
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, "/");
	ИначеЕсли СтрНайти(Текст, "\") <> 0 Тогда
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, "\");
	Иначе
		Подстроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, " ");
	КонецЕсли;
	
	Если Подстроки.Количество() = 1 Тогда
		
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Текст) Тогда
			МесяцЧислом = Число(Текст);
			Если МесяцЧислом >= 1 И МесяцЧислом <=12 Тогда
				ДатаПоТексту = Дата(ТекущийГод, МесяцЧислом, 1);
				Если СтрДлина(Текст) = 1 Тогда
					СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='М/гг'"));
				Иначе
					СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='ММ/гг'"));
				КонецЕсли;
			Иначе
				Возврат СписокВозврата;
			КонецЕсли;                
		Иначе
			СписокМесяцев = СписокМесяцевПоСтроке(Текст);
			Для Каждого Месяц Из СписокМесяцев Цикл
				ДатаПоТексту = Дата(ТекущийГод, Месяц, 1);
				СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='ММММ гггг'"));
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли Подстроки.Количество() = 2 Тогда
		
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Подстроки[1]) Тогда
			
			Если ПустаяСтрока(Подстроки[1]) Тогда
				ГодЧислом = 0;
				Подстроки[1] = "0";
				ТекстВозврата = Текст + "0";
			Иначе
				ГодЧислом = Число(Подстроки[1]);
				ТекстВозврата = "";
			КонецЕсли;
			
			Если ГодЧислом > 3000 Тогда
				Возврат СписокВозврата;
			КонецЕсли;
			
			Если СтрДлина(Подстроки[1]) <= 1 Тогда
				ГодЧислом = Число(Лев(Формат(ТекущийГод, "ЧГ="), 3) + Подстроки[1]);
			ИначеЕсли СтрДлина(Подстроки[1]) = 2 Тогда
				ГодЧислом = Число(Лев(Формат(ТекущийГод, "ЧГ="), 2) + Подстроки[1]);
			ИначеЕсли СтрДлина(Подстроки[1]) = 3 Тогда
				ГодЧислом = Число(Лев(Формат(ТекущийГод, "ЧГ="), 1) + Подстроки[1]);
			ИначеЕсли СтрДлина(Подстроки[1]) = 4 Тогда
				ГодЧислом = Число(Подстроки[1]);
			КонецЕсли;                    
			
		Иначе
			
			Возврат СписокВозврата;
			
		КонецЕсли;                
		Если ЗначениеЗаполнено(Подстроки[0]) И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Подстроки[0]) Тогда
			
			МесяцЧислом = Число(Подстроки[0]);
			Если МесяцЧислом >= 1 И МесяцЧислом <= 12 Тогда
				ДатаПоТексту = Дата(ГодЧислом, МесяцЧислом, 1);
				СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='ММММ гггг'"));
			Иначе
				Возврат СписокВозврата;
			КонецЕсли;                
			
		Иначе
			
			СписокМесяцев = СписокМесяцевПоСтроке(Подстроки[0]);
			
			Если СписокМесяцев.Количество() = 1 Тогда
				ДатаПоТексту = Дата(ГодЧислом, СписокМесяцев[0], 1);
				СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='ММММ гггг'"));
			Иначе
				Для Каждого Месяц Из СписокМесяцев Цикл
					ДатаПоТексту = Дата(ГодЧислом, Месяц, 1);
					СписокВозврата.Добавить(Формат(Дата(ГодЧислом, Месяц, 1), "ДФ='ММММ гггг'"));
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат СписокВозврата;
	
КонецФункции

&НаКлиенте
Функция ПолучитьРеквизитФормыПоПути(Форма, ПутьРеквизита) Экспорт
	
	МассивИмен = СтрРазделить(ПутьРеквизита, ".");
	
	НовОбъект        = Форма;
	ПоследнееПоле = МассивИмен[МассивИмен.Количество()-1];
	
	Для Сч = 0 По МассивИмен.Количество()-2 Цикл
		НовОбъект = НовОбъект[МассивИмен[Сч]]
	КонецЦикла;
	
	Возврат НовОбъект[ПоследнееПоле];
	
КонецФункции

&НаКлиенте
Процедура УстановитьРеквизитФормыПоПути(Форма, ПутьРеквизита, Значение, ТолькоЕслиНеЗаполнен = Ложь) Экспорт
	
	МассивИмен = СтрРазделить(ПутьРеквизита, ".");
	
	НовОбъект        = Форма;
	ПоследнееПоле = МассивИмен[МассивИмен.Количество()-1];
	
	Для Сч = 0 По МассивИмен.Количество()-2 Цикл
		НовОбъект = НовОбъект[МассивИмен[Сч]]
	КонецЦикла;
	Если НЕ ТолькоЕслиНеЗаполнен ИЛИ НЕ ЗначениеЗаполнено(НовОбъект[ПоследнееПоле]) Тогда
		НовОбъект[ПоследнееПоле] = Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВводМесяцаПриИзменении(РедактируемыйОбъект, ПутьРеквизита, ПутьРеквизитаПредставления, Модифицированность = Ложь) Экспорт
	
	ЗначениеПредставления = ПолучитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизитаПредставления);
	Значение              = ПолучитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита);
	Значение = НачалоМесяца(Значение);//в документе храним конец месяца
	
	ДатаКакМесяцПодобратьДатуПоТексту(ЗначениеПредставления, Значение);
	
	УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизитаПредставления, ПолучитьПредставлениеМесяца(Значение));
	//УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита, Значение);
	УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита, КонецМесяца(Значение));//в документе храним конец месяца
	
	Модифицированность = Истина;
	
КонецПроцедуры 

&НаКлиенте
Процедура ВводМесяцаНачалоВыбораЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт

	Форма = ДополнительныеПараметры.Форма;
	РедактируемыйОбъект = ДополнительныеПараметры.РедактируемыйОбъект;
	ПутьРеквизита = ДополнительныеПараметры.ПутьРеквизита;
	ПутьРеквизитаПредставления = ДополнительныеПараметры.ПутьРеквизитаПредставления;
	ИзменитьМодифицированность = ДополнительныеПараметры.ИзменитьМодифицированность;
	ОповещениеЗавершения = ДополнительныеПараметры.ОповещениеЗавершения;
	
	Если ВыбранноеЗначение = Неопределено Тогда
		
		Если ОповещениеЗавершения <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Ложь);
		КонецЕсли;
		
	Иначе
		
		Значение = ВыбранноеЗначение;
		
		//УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита, Значение);
		УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита, КонецМесяца(Значение));//в документе храним конец месяца
		Представление = ПолучитьПредставлениеМесяца(Значение);
		УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизитаПредставления, Представление);
		
		Если ИзменитьМодифицированность Тогда 
			Форма.Модифицированность = Истина;
		КонецЕсли;
		
		Если ОповещениеЗавершения <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОповещениеЗавершения = Неопределено Тогда
		Форма.ОбновитьОтображениеДанных();
	КонецЕсли;
	
	ПериодРасчетаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВводМесяцаНачалоВыбора(Форма, РедактируемыйОбъект, ПутьРеквизита, ПутьРеквизитаПредставления, ИзменитьМодифицированность = Истина, ОповещениеЗавершения = Неопределено, ЗначениеМесяцаПоУмолчанию = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Форма);
	ДополнительныеПараметры.Вставить("РедактируемыйОбъект", РедактируемыйОбъект);
	ДополнительныеПараметры.Вставить("ПутьРеквизита", ПутьРеквизита);
	ДополнительныеПараметры.Вставить("ПутьРеквизитаПредставления", ПутьРеквизитаПредставления);
	ДополнительныеПараметры.Вставить("ИзменитьМодифицированность", ИзменитьМодифицированность);
	ДополнительныеПараметры.Вставить("ОповещениеЗавершения", ОповещениеЗавершения);
	
	Значение = ПолучитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита);
	Значение = НачалоМесяца(Значение);//в документе храним конец месяца
	Если Значение <= '19000101' Тогда
		
		Если ЗначениеМесяцаПоУмолчанию = Неопределено Тогда
			Значение = НачалоМесяца(ТекущаяДата());
		Иначе
			Значение = НачалоМесяца(ЗначениеМесяцаПоУмолчанию);
		КонецЕсли;
		
	КонецЕсли; 
	
	Оповещение = Новый ОписаниеОповещения("ВводМесяцаНачалоВыбораЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Документ.зпНачислениеЗП.Форма.ВыборПериода", 
		Новый Структура("Значение,РежимВыбораПериода,ЗапрашиватьРежимВыбораПериодаУВладельца", Значение, "Месяц", Ложь),
		Форма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРасчетаСтрокойПриИзменении(Элемент)
	ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ПериодРасчета", "ПериодРасчетаСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРасчетаСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ПериодРасчета", "ПериодРасчетаСтрокой", , );
КонецПроцедуры

&НаКлиенте
Процедура ВводМесяцаРегулирование(РедактируемыйОбъект, ПутьРеквизита, ПутьРеквизитаПредставления, Направление, Модифицированность = Ложь, ЗначениеМесяцаПоУмолчанию = Неопределено) Экспорт
	
	Значение = ПолучитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита);
	Значение = НачалоМесяца(Значение);//в документе храним конец месяца
	
	Если Значение <= '19000101' Тогда
		
		Если ЗначениеМесяцаПоУмолчанию = Неопределено Тогда
			Значение = НачалоМесяца(ТекущаяДата());
		Иначе
			Значение = НачалоМесяца(ЗначениеМесяцаПоУмолчанию);
		КонецЕсли;
		
		НовоеЗначение = Значение;
		
	Иначе
		НовоеЗначение = ДобавитьМесяц(Значение, Направление);
	КонецЕсли; 
	
	Если НовоеЗначение >= '00010101' Тогда
		
		Значение = НовоеЗначение;
		
		//УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита, Значение);
		УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита, КонецМесяца(Значение));//в документе храним конец месяца
		УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизитаПредставления, ПолучитьПредставлениеМесяца(Значение));
		
		Модифицированность = Истина;
	 	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРасчетаСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ВводМесяцаРегулирование(ЭтаФорма, "Объект.ПериодРасчета", "ПериодРасчетаСтрокой", Направление, Модифицированность);
	ПериодРасчетаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПериодРасчетаСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если Не ПустаяСтрока(Текст) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	Если Текст <> "" Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРасчетаСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПериодРасчетаСтрокой = ПолучитьПредставлениеМесяца(Объект.ПериодРасчета);
КонецПроцедуры

&НаСервере
Процедура РегионПриИзмененииНаСервере()
	
	ЗаполнениеПриИзмененииПараметров();
	
КонецПроцедуры

&НаКлиенте
Процедура РегионПриИзменении(Элемент)
	РегионПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПериодРасчетаПриИзмененииНаСервере()
	
	ЗаполнениеПриИзмененииПараметров();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеПриИзмененииПараметров()
	
	Если Объект.Регион.Пустая() Или Не ЗначениеЗаполнено(Объект.ПериодРасчета) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Склад_УчетныйВес И Объект.Магистраль_УчетныйВес И Объект.ЗатратыАвто.Количество() Тогда
		//все заполнено
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоказателиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВносимыеПоказателиИзПредыдущегоПериодаНаСервере()
	
	//Сообщить("Заполнение показателей из предыдущего периоды " + ТекущаяДата());
	
	Модифицированность = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регион", Объект.Регион);
	Запрос.УстановитьПараметр("ПериодРасчета", НачалоДня(КонецМесяца(ДобавитьМесяц(Объект.ПериодРасчета, -1))));
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	экЗакрытиеМесяца.Склад_СуммаЗатрат КАК Склад_СуммаЗатрат,
	|	экЗакрытиеМесяца.Магистраль_СуммаЗатрат КАК Магистраль_СуммаЗатрат,
	|	экЗакрытиеМесяца.ПроцентЗатратНаОперацииТерминал КАК ПроцентЗатратНаОперацииТерминал
	|ИЗ
	|	Документ.экЗакрытиеМесяца КАК экЗакрытиеМесяца
	|ГДЕ
	|	экЗакрытиеМесяца.ПериодРасчета = &ПериодРасчета
	|	И экЗакрытиеМесяца.Регион = &Регион
	|	И экЗакрытиеМесяца.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	экЗакрытиеМесяца.Дата УБЫВ,
	|	экЗакрытиеМесяца.Ссылка УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	экЗакрытиеМесяцаЗатратыАвто.ФорматАвтотранспорта КАК ФорматАвтотранспорта,
	|	экЗакрытиеМесяцаЗатратыАвто.СуммаЗатрат КАК СуммаЗатрат
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		экЗакрытиеМесяца.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.экЗакрытиеМесяца КАК экЗакрытиеМесяца
	|	ГДЕ
	|		экЗакрытиеМесяца.ПериодРасчета = &ПериодРасчета
	|		И экЗакрытиеМесяца.Регион = &Регион
	|		И экЗакрытиеМесяца.Проведен
	|	
	|	УПОРЯДОЧИТЬ ПО
	|		экЗакрытиеМесяца.Дата УБЫВ,
	|		экЗакрытиеМесяца.Ссылка УБЫВ) КАК ВЗ_экЗакрытиеМесяца
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.экЗакрытиеМесяца.ЗатратыАвто КАК экЗакрытиеМесяцаЗатратыАвто
	|		ПО ВЗ_экЗакрытиеМесяца.Ссылка = экЗакрытиеМесяцаЗатратыАвто.Ссылка";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Результат = РезультатПакета[0];
	Если Результат.Пустой() Тогда
		Объект.Склад_СуммаЗатрат = 0;
		Объект.Магистраль_СуммаЗатрат = 0;
		Объект.ПроцентЗатратНаОперацииТерминал = 0;
		Объект.Склад_СтоимостьСкладскойОперации = 0;
		Объект.Магистраль_СтоимостьОбработки_кг = 0;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Объект, Выборка);
		Объект.Склад_СтоимостьСкладскойОперации = ?(Объект.Склад_УчетныйВес, Объект.Склад_СуммаЗатрат / Объект.Склад_УчетныйВес, 0);
		Объект.Магистраль_СтоимостьОбработки_кг = ?(Объект.Магистраль_УчетныйВес, Объект.Магистраль_СуммаЗатрат / Объект.Магистраль_УчетныйВес, 0);
	КонецЕсли;

	
	Для Каждого СтрокаЗатрат Из Объект.ЗатратыАвто Цикл
		СтрокаЗатрат.СуммаЗатрат = 0;
		СтрокаЗатрат.СтоимостьРейса = 0;
	КонецЦикла;
	
	Результат = РезультатПакета[1];
	Если Не Результат.Пустой() Тогда
		СтруктураФорматАвто = Новый Структура("ФорматАвтотранспорта");
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СтруктураФорматАвто.ФорматАвтотранспорта = Выборка.ФорматАвтотранспорта;
			СтрокиЗатрат = Объект.ЗатратыАвто.НайтиСтроки(СтруктураФорматАвто);
			Если СтрокиЗатрат.Количество() Тогда
				СтрокаЗатрат = СтрокиЗатрат[0];
				СтрокаЗатрат.СуммаЗатрат = Выборка.СуммаЗатрат;
				СтрокаЗатрат.СтоимостьРейса = ?(СтрокаЗатрат.КоличествоРейсов, СтрокаЗатрат.СуммаЗатрат / СтрокаЗатрат.КоличествоРейсов, 0);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПоказателиИзПредыдущегоПериодаВнесены()
	
	Если Объект.Склад_СуммаЗатрат Или Объект.Магистраль_СуммаЗатрат Или Объект.ПроцентЗатратНаОперацииТерминал Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для Каждого СтрокаЗатрат Из Объект.ЗатратыАвто Цикл
		Если СтрокаЗатрат.СуммаЗатрат Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьВносимыеПоказателиИзПредыдущегоПериода(Команда)
	
	Если Объект.Регион.Пустая() Или Не ЗначениеЗаполнено(Объект.ПериодРасчета) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПоказателиИзПредыдущегоПериодаВнесены() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьВносимыеПоказателиИзПредыдущегоПериодаЗавершение", ЭтотОбъект), "Перезаполнить показатели из предыдущего периода?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьВносимыеПоказателиИзПредыдущегоПериодаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВносимыеПоказателиИзПредыдущегоПериодаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьВносимыеПоказателиИзПредыдущегоПериодаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказателиНаСервере(Перезаполнение = Ложь)
	
	//Сообщить("Заполнение при изменении параметров " + ТекущаяДата());
	
	Модифицированность = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регион", Объект.Регион);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.ПериодРасчета));
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(Объект.ПериодРасчета));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗакрытыеЗаказы.Реализация КАК Реализация,
	|	МАКСИМУМ(ЗакрытыеЗаказы.Период) КАК Период,
	|	СУММА(ЗакрытыеЗаказы.ТарифицируемыйВес) КАК ТарифицируемыйВес,
	|	СУММА(ЗакрытыеЗаказы.ТарифицируемыйОбъемныйВес) КАК ТарифицируемыйОбъемныйВес
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	|ГДЕ
	|	ЗакрытыеЗаказы.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗакрытыеЗаказы.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗакрытыеЗаказы.Период КАК Период,
	|	ЗакрытыеЗаказы.Реализация КАК Реализация,
	|	МАКСИМУМ(ЗакрытыеЗаказы.Корректировка) КАК Корректировка
	|ПОМЕСТИТЬ ВТ_ПризнакКорректировки
	|ИЗ
	|	ВТ_Доходы КАК ВТ_Доходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	|		ПО ВТ_Доходы.Период = ЗакрытыеЗаказы.Период
	|			И ВТ_Доходы.Реализация = ЗакрытыеЗаказы.Реализация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗакрытыеЗаказы.Период,
	|	ЗакрытыеЗаказы.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗакрытыеЗаказы.Реализация КАК Реализация,
	|	МАКСИМУМ(ЗакрытыеЗаказы.ТипЗаказа) КАК ТипЗаказа,
	|	МАКСИМУМ(ЗакрытыеЗаказы.СтатусИнтернетМагазина) КАК СтатусИнтернетМагазина,
	|	МАКСИМУМ(ЗакрытыеЗаказы.ПричинаНевыполнения) КАК ПричинаНевыполнения
	|ПОМЕСТИТЬ ВТ_ДанныеДоходов
	|ИЗ
	|	ВТ_ПризнакКорректировки КАК ВТ_ПризнакКорректировки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	|		ПО ВТ_ПризнакКорректировки.Период = ЗакрытыеЗаказы.Период
	|			И ВТ_ПризнакКорректировки.Реализация = ЗакрытыеЗаказы.Реализация
	|			И (ВЫБОР
	|				КОГДА ВТ_ПризнакКорректировки.Корректировка
	|					ТОГДА ЗакрытыеЗаказы.Регистратор ССЫЛКА Документ.КорректировкаУслугСД
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗакрытыеЗаказы.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Доходы.Реализация КАК Заказ,
	|	ВЫБОР
	|		КОГДА ВТ_Доходы.ТарифицируемыйОбъемныйВес = 0
	|			ТОГДА ВТ_Доходы.ТарифицируемыйВес
	|		ИНАЧЕ ВТ_Доходы.ТарифицируемыйОбъемныйВес
	|	КОНЕЦ КАК ТарифицируемыйВес
	|ПОМЕСТИТЬ ВТ_ДоходыРасходы
	|ИЗ
	|	ВТ_Доходы КАК ВТ_Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТ_ДанныеДоходов.Реализация КАК Заказ
	|		ИЗ
	|			ВТ_ДанныеДоходов КАК ВТ_ДанныеДоходов
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|				ПО ВТ_ДанныеДоходов.Реализация = СтатусыЗаказов.Заказ
	|					И (СтатусыЗаказов.Статус В (211, 212))
	|		ГДЕ
	|			(ВТ_ДанныеДоходов.ТипЗаказа В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Доставка), ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Самовывоз))
	|						И СтатусыЗаказов.Заказ ЕСТЬ NULL
	|					ИЛИ ВТ_ДанныеДоходов.ТипЗаказа = ЗНАЧЕНИЕ(Перечисление.ТипыЗаказов.Забор)
	|						И ВТ_ДанныеДоходов.СтатусИнтернетМагазина = ЗНАЧЕНИЕ(Справочник.СтатусЗаказаИнтернетМагазина.ЗаказОтклонен)
	|						И ВТ_ДанныеДоходов.ПричинаНевыполнения = ЗНАЧЕНИЕ(Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаБезЗаезда))) КАК ВЗ_ИсключаемыеЗаказы
	|		ПО ВТ_Доходы.Реализация = ВЗ_ИсключаемыеЗаказы.Заказ
	|ГДЕ
	|	ВЗ_ИсключаемыеЗаказы.Заказ ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|	СУММА(ВЫБОР
	|			КОГДА экУчетПроизводственныхОпераций.ВидОперации.Родитель = ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.СкладскиеОперации)
	|					И экУчетПроизводственныхОпераций.Регион = &Регион
	|				ТОГДА экУчетПроизводственныхОпераций.ВесПроизводственнойОперации
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоОперацийРегион,
	|	СУММА(ВЫБОР
	|			КОГДА экУчетПроизводственныхОпераций.ВидОперации.Родитель = ЗНАЧЕНИЕ(Справочник.экВидыПроизводственныхОпераций.ОперацииМагистраль)
	|				ТОГДА экУчетПроизводственныхОпераций.ВесПроизводственнойОперации
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоОперацийМагистраль
	|ПОМЕСТИТЬ ВТ_ПроизводственныеОперации
	|ИЗ
	|	РегистрСведений.экУчетПроизводственныхОпераций КАК экУчетПроизводственныхОпераций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (РеализацияТоваровУслуг.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
	|			И (РеализацияТоваровУслуг.Ссылка = экУчетПроизводственныхОпераций.Заказ)
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Заказ КАК Заказ,
	|	СУММА(ВЫБОР
	|			КОГДА ВложенныйЗапрос.ФорматАвтотранспорта = ЗНАЧЕНИЕ(Справочник.ФорматыАвтотранспорта.МалоеАвто)
	|				ТОГДА ВложенныйЗапрос.КоличествоРейсов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МалоеАвтоРегион,
	|	СУММА(ВЫБОР
	|			КОГДА ВложенныйЗапрос.ФорматАвтотранспорта = ЗНАЧЕНИЕ(Справочник.ФорматыАвтотранспорта.БольшоеАвто)
	|				ТОГДА ВложенныйЗапрос.КоличествоРейсов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БольшоеАвтоРегион,
	|	СУММА(ВЫБОР
	|			КОГДА ВложенныйЗапрос.ФорматАвтотранспорта = ЗНАЧЕНИЕ(Справочник.ФорматыАвтотранспорта.ЗаборноеАвто)
	|				ТОГДА ВложенныйЗапрос.КоличествоРейсов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЗаборноеАвтоРегион
	|ПОМЕСТИТЬ ВТ_РейсыПоЗаказам
	|ИЗ
	|	(ВЫБРАТЬ
	|		РейсыПоЗаказам.Заказ КАК Заказ,
	|		РейсыПоЗаказам.ФорматАвтотранспорта КАК ФорматАвтотранспорта,
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РейсыПоЗаказам.Рейс) КАК КоличествоРейсов
	|	ИЗ
	|		РегистрСведений.РейсыПоЗаказам КАК РейсыПоЗаказам
	|	ГДЕ
	|		РейсыПоЗаказам.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И РейсыПоЗаказам.Регион = &Регион
	|		И РейсыПоЗаказам.СтатусДоставки В (ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.Доставлен), ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.ДоставленЧастично), ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.ОтказСЗаездомОперативный), ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.ПереносСЗаездом))
	|		И РейсыПоЗаказам.ЭтоШтатныйТранспорт
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РейсыПоЗаказам.Заказ,
	|		РейсыПоЗаказам.ФорматАвтотранспорта,
	|		РейсыПоЗаказам.Регион) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(ВТ_ПроизводственныеОперации.КоличествоОперацийРегион, 0) * ВТ_ДоходыРасходы.ТарифицируемыйВес) КАК УчетныйВес,
	|	СУММА(ЕСТЬNULL(ВТ_ПроизводственныеОперации.КоличествоОперацийМагистраль, 0) * ВТ_ДоходыРасходы.ТарифицируемыйВес) КАК УчетныйВесМагистраль,
	|	СУММА(ЕСТЬNULL(ВТ_РейсыПоЗаказам.МалоеАвтоРегион, 0)) КАК КММРегион,
	|	СУММА(ЕСТЬNULL(ВТ_РейсыПоЗаказам.БольшоеАвтоРегион, 0)) КАК КБМРегион,
	|	СУММА(ЕСТЬNULL(ВТ_РейсыПоЗаказам.ЗаборноеАвтоРегион, 0)) КАК КЗМРегион
	|ИЗ
	|	ВТ_ДоходыРасходы КАК ВТ_ДоходыРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроизводственныеОперации КАК ВТ_ПроизводственныеОперации
	|		ПО ВТ_ДоходыРасходы.Заказ = ВТ_ПроизводственныеОперации.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РейсыПоЗаказам КАК ВТ_РейсыПоЗаказам
	|		ПО ВТ_ДоходыРасходы.Заказ = ВТ_РейсыПоЗаказам.Заказ";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Сообщить("Данные по указанным параметрам не обнаружены!");
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Если Не Объект.Склад_УчетныйВес Или Перезаполнение Тогда
		Объект.Склад_УчетныйВес = Выборка.УчетныйВес;
	КонецЕсли;
	
	Если Не Объект.Магистраль_УчетныйВес Или Перезаполнение Тогда
		Объект.Магистраль_УчетныйВес = Выборка.УчетныйВесМагистраль;
	КонецЕсли;
	
	Если Не Объект.ЗатратыАвто.Количество() Или Перезаполнение Тогда
		Объект.ЗатратыАвто.Очистить();
		СтрокаЗатрат = Объект.ЗатратыАвто.Добавить();
		СтрокаЗатрат.ФорматАвтотранспорта = Справочники.ФорматыАвтотранспорта.МалоеАвто;
		СтрокаЗатрат.КоличествоРейсов = Выборка.КММРегион;
		СтрокаЗатрат = Объект.ЗатратыАвто.Добавить();
		СтрокаЗатрат.ФорматАвтотранспорта = Справочники.ФорматыАвтотранспорта.БольшоеАвто;
		СтрокаЗатрат.КоличествоРейсов = Выборка.КБМРегион;
		СтрокаЗатрат = Объект.ЗатратыАвто.Добавить();
		СтрокаЗатрат.ФорматАвтотранспорта = Справочники.ФорматыАвтотранспорта.ЗаборноеАвто;
		СтрокаЗатрат.КоличествоРейсов = Выборка.КЗМРегион;
	КонецЕсли;
	
	ЗаполнитьВносимыеПоказателиИзПредыдущегоПериодаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоказатели(Команда)
	
	Если Объект.Регион.Пустая() Или Не ЗначениеЗаполнено(Объект.ПериодРасчета) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Склад_УчетныйВес Или Объект.Магистраль_УчетныйВес Или Объект.ЗатратыАвто.Количество() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоказателиЗавершение", ЭтотОбъект), "Перезаполнить значения показателей?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьПоказателиНаСервере(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоказателиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоказателиНаСервере(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Склад_СуммаЗатратПриИзменении(Элемент)
	
	Объект.Склад_СтоимостьСкладскойОперации = ?(Объект.Склад_УчетныйВес, Объект.Склад_СуммаЗатрат / Объект.Склад_УчетныйВес, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура Магистраль_СуммаЗатратПриИзменении(Элемент)
	
	Объект.Магистраль_СтоимостьОбработки_кг = ?(Объект.Магистраль_УчетныйВес, Объект.Магистраль_СуммаЗатрат / Объект.Магистраль_УчетныйВес, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыАвтоСуммаЗатратПриИзменении(Элемент)
	
	СтрокаЗатрат = Элементы.ЗатратыАвто.ТекущиеДанные;
	
	СтрокаЗатрат.СтоимостьРейса = ?(СтрокаЗатрат.КоличествоРейсов, СтрокаЗатрат.СуммаЗатрат / СтрокаЗатрат.КоличествоРейсов, 0);
	
КонецПроцедуры

