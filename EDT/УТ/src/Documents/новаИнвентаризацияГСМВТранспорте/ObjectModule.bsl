
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Проверка заполнения
	Перем Заголовок;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = "Проведение документа """ + СокрЛП(Ссылка) + """: ";
	
	спОшибки = Новый Массив;
	// Проверка заполнения шапки
	СтруктураОбязательныхПолей = Новый Структура("Транспорт, Бак");
	Для Каждого СтрокаЗаправки из ГСМ Цикл
		Для Каждого ОбязательноеПоле Из СтруктураОбязательныхПолей Цикл
			Если Не ЗначениеЗаполнено(СтрокаЗаправки[ОбязательноеПоле.Ключ]) Тогда
				спОшибки.Добавить("  В строке номер " + СтрокаЗаправки.НомерСтроки +" не заполнен реквизит "+ОбязательноеПоле.Ключ+".");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если спОшибки.Количество() <> 0 Тогда
		Отказ = Истина;
		Сообщить(Заголовок,СтатусСообщения.Важное);
		Для Каждого Ошибка из спОшибки Цикл
			Сообщить(Ошибка);
		КонецЦикла;
	КонецЕсли;
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(Отказ, РежимПроведения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДвиженияПоРегистрам(Отказ, РежимПроведения)
	
	// Движения по регистру ОстаткиГСМ
	Для Каждого СтрокаГСМ Из ГСМ Цикл
		
		ОтклонениеКол = СтрокаГСМ.Количество - СтрокаГСМ.КоличествоУчет;
		ОтклонениеСум = СтрокаГСМ.Сумма      - СтрокаГСМ.СуммаУчет;
		
		Если ОтклонениеКол <> 0 Или ОтклонениеСум <> 0 Тогда
			Движение = Движения.новаОстаткиГСМ.Добавить();
			
			Если ОтклонениеКол >= 0 Тогда
				ЗнакДвижения		 = 1;
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Иначе
				ЗнакДвижения		 = -1;
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			КонецЕсли;
			
			Движение.Период		= Дата;
//			Движение.Транспорт	= СтрокаГСМ.Транспорт;
			Движение.Бак		= СтрокаГСМ.Бак;
			Движение.Количество = ОтклонениеКол * ЗнакДвижения;
			Движение.Стоимость  = ОтклонениеСум * ЗнакДвижения;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Заполняет табличную часть документа по остаткам
//
// Параметры:
//  ТолькоУчетные <Булево>
//
Процедура ЗаполнитьПоОстаткамВТС(ТолькоУчетные=Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиГСМ.Бак.Владелец КАК Транспорт,
	|	ОстаткиГСМ.Бак,
	|	ОстаткиГСМ.КоличествоОстаток КАК Количество,
	|	ОстаткиГСМ.СтоимостьОстаток КАК Стоимость
	|ИЗ
	|	РегистрНакопления.новаОстаткиГСМ.Остатки(&Дата, ) КАК ОстаткиГСМ"
	;
	
	Если ЭтоНовый() Тогда
		Запрос.УстановитьПараметр("Дата", КонецДня(Дата));
	Иначе
		Запрос.УстановитьПараметр("Дата", МоментВремени());
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти = ГСМ.Добавить();
		
		СтрокаТабличнойЧасти.Транспорт  	= Выборка.Транспорт;
		СтрокаТабличнойЧасти.Бак	    	= Выборка.Бак;
		СтрокаТабличнойЧасти.КоличествоУчет = Выборка.Количество;
		СтрокаТабличнойЧасти.Количество     = ?(ТолькоУчетные, 0, Выборка.Количество);
		СтрокаТабличнойЧасти.СуммаУчет      = Выборка.Стоимость;
		СтрокаТабличнойЧасти.Сумма          = ?(ТолькоУчетные, 0, Выборка.Стоимость);
		
	КонецЦикла;
КонецПроцедуры

// Процедура перезаполняет учетные количества в документе
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Процедура ПерезаполнитьУчетныеКоличества() Экспорт
	
	#Если Клиент Тогда
		Если ГСМ.Количество() > 0 Тогда
			ТекстВопроса = "Перезаполнить учетные количества и суммы?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Метаданные().Синоним);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли; 
		Иначе
			Возврат;
		КонецЕсли;
		
		// Документ должен быть записан, чтобы этот запрос сработал.
		Если Модифицированность() Тогда
			ТекстВопроса = "Перед заполнением следует записать документ.
			|Продолжить?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Метаданные().Синоним);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли;
			Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
	#КонецЕсли
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Транспорт,
	|	Бак,
	|	КоличествоОстаток КАК Количество,
	|	СтоимостьОстаток  КАК Стоимость
	|ИЗ
	|	РегистрНакопления.новаОстаткиГСМ.Остатки(&Дата) КАК ОстаткиГСМ";
	
	Если ЭтоНовый() Тогда
		Запрос.УстановитьПараметр("Дата", КонецДня(Дата));
	Иначе
		Запрос.УстановитьПараметр("Дата", МоментВремени());
	КонецЕсли;
	
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТабличнойЧасти Из ГСМ Цикл
		
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("Бак", СтрокаТабличнойЧасти.Бак);
		СтруктураПоиска.Вставить("Транспорт",  СтрокаТабличнойЧасти.Транспорт);
		
		МассивСтрок = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрок.Количество() = 0 Тогда
			СтрокаТабличнойЧасти.КоличествоУчет = 0;
			СтрокаТабличнойЧасти.СуммаУчет      = 0;
		Иначе
			СтрокаТабличнойЧасти.КоличествоУчет = МассивСтрок[0].Количество;
			СтрокаТабличнойЧасти.СуммаУчет      = МассивСтрок[0].Стоимость;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры  // ПерезаполнитьУчетныеКоличества()

