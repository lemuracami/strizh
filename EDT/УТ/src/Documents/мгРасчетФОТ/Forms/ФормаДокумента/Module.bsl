
// ШушлебинДА {
// 11.05.2017 описание

&НаКлиенте
Процедура Заполнить(Команда)
	Если Объект.Сотрудники.Количество() <> 0 Тогда
		От = Вопрос("Табличная часть не пуста. Перезаполнить?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если От = КодВозвратаДиалога.Да Тогда
			ЗаполнитьНаСервере();
		Иначе 
			Возврат;
		КонецЕсли;	
	Иначе
		ЗаполнитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()

	Объект.Сотрудники.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|	МАКСИМУМ(РаботникиОрганизации.Период) КАК Период
	|ПОМЕСТИТЬ вр_РаботникиОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизации.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вр_РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|	вр_РаботникиОрганизации.Период КАК Период,
	|	РаботникиОрганизации.Организация КАК Организация,
	|	РаботникиОрганизации.Состояние КАК Состояние,
	|	РаботникиОрганизации.Должность КАК Должность
	|ПОМЕСТИТЬ втРаботники
	|ИЗ
	|	вр_РаботникиОрганизации КАК вр_РаботникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизации КАК РаботникиОрганизации
	|		ПО вр_РаботникиОрганизации.Сотрудник = РаботникиОрганизации.Сотрудник
	|			И вр_РаботникиОрганизации.Период = РаботникиОрганизации.Период
	|ГДЕ
	|	НЕ РаботникиОрганизации.Регистратор ССЫЛКА Документ.УвольнениеСРаботыИзОрганизация
	|
	|СГРУППИРОВАТЬ ПО
	|	вр_РаботникиОрганизации.Сотрудник,
	|	вр_РаботникиОрганизации.Период,
	|	РаботникиОрганизации.Организация,
	|	РаботникиОрганизации.Состояние,
	|	РаботникиОрганизации.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	мгЗарплатаНачисленияОстатки.Организация КАК Организация,
	|	мгЗарплатаНачисленияОстатки.Терминал КАК Терминал,
	|	мгЗарплатаНачисленияОстатки.ВидНачисления КАК ВидНачисления,
	|	мгЗарплатаНачисленияОстатки.Сотрудник КАК Сотрудник,
	|	СУММА(мгЗарплатаНачисленияОстатки.ТарифОстаток) КАК ТарифОстаток
	|ПОМЕСТИТЬ втНачисления
	|ИЗ
	|	РегистрНакопления.мгЗарплатаНачисления.Остатки(
	|			&КонецПериода,
	|			ВЫБОР
	|				КОГДА &ОтборТерминала
	|					ТОГДА Терминал = &Терминал
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК мгЗарплатаНачисленияОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	мгЗарплатаНачисленияОстатки.Терминал,
	|	мгЗарплатаНачисленияОстатки.ВидНачисления,
	|	мгЗарплатаНачисленияОстатки.Организация,
	|	мгЗарплатаНачисленияОстатки.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Терминал,
	|	ВидНачисления,
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	мгЗарплатаУдержанияОстатки.Организация КАК Организация,
	|	мгЗарплатаУдержанияОстатки.Терминал КАК Терминал,
	|	мгЗарплатаУдержанияОстатки.ВидУдержания КАК ВидУдержания,
	|	мгЗарплатаУдержанияОстатки.Сотрудник КАК Сотрудник,
	|	СУММА(мгЗарплатаУдержанияОстатки.ТарифОстаток) КАК ТарифОстаток
	|ПОМЕСТИТЬ втУдержания
	|ИЗ
	|	РегистрНакопления.мгЗарплатаУдержания.Остатки(
	|			&КонецПериода,
	|			ВЫБОР
	|				КОГДА &ОтборТерминала
	|					ТОГДА Терминал = &Терминал
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК мгЗарплатаУдержанияОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	мгЗарплатаУдержанияОстатки.Организация,
	|	мгЗарплатаУдержанияОстатки.ВидУдержания,
	|	мгЗарплатаУдержанияОстатки.Терминал,
	|	мгЗарплатаУдержанияОстатки.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Терминал,
	|	ВидУдержания,
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНачисления.Организация КАК Организация,
	|	втНачисления.Терминал КАК Терминал,
	|	втНачисления.ВидНачисления КАК ВидНачисленияУдержания,
	|	втНачисления.Сотрудник КАК Сотрудник,
	|	втНачисления.ТарифОстаток КАК ТарифОстаток
	|ПОМЕСТИТЬ втНачУдер
	|ИЗ
	|	втНачисления КАК втНачисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втУдержания.Организация,
	|	втУдержания.Терминал,
	|	втУдержания.ВидУдержания,
	|	втУдержания.Сотрудник,
	|	втУдержания.ТарифОстаток
	|ИЗ
	|	втУдержания КАК втУдержания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНачУдер.Организация КАК Организация,
	|	втНачУдер.Терминал КАК Терминал,
	|	втНачУдер.ВидНачисленияУдержания КАК НачислениеУдержание,
	|	втНачУдер.Сотрудник КАК Сотрудник,
	|	втНачУдер.ТарифОстаток КАК Сумма,
	|	ВЫБОР
	|		КОГДА втНачУдер.ВидНачисленияУдержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.мгНачислениеУдержание.Начисление)
	|			ТОГДА втНачУдер.ТарифОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоНачислено,
	|	ВЫБОР
	|		КОГДА втНачУдер.ВидНачисленияУдержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.мгНачислениеУдержание.Удержание)
	|			ТОГДА втНачУдер.ТарифОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоУдержано,
	|	втРаботники.Должность КАК Должность,
	|	ВЫБОР
	|		КОГДА втНачУдер.ВидНачисленияУдержания.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.мгНачислениеУдержание.Выдано)
	|			ТОГДА втНачУдер.ТарифОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоВыдано
	|ИЗ
	|	втНачУдер КАК втНачУдер
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРаботники КАК втРаботники
	|		ПО втНачУдер.Организация = втРаботники.Организация
	|			И втНачУдер.Сотрудник = втРаботники.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	втНачУдер.Сотрудник.Наименование
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(ВсегоНачислено),
	|	СУММА(ВсегоУдержано),
	|	СУММА(ВсегоВыдано)
	|ПО
	|	Сотрудник";
	
	
	
	Запрос.УстановитьПараметр("НачалоПериода", Объект.ПериодРегистрации);
	Граница = Новый Граница(КонецМесяца(Объект.ПериодРегистрации), ВидГраницы.Исключая);
	Запрос.УстановитьПараметр("КонецПериода", Граница);
	//Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Терминал", Объект.Терминал);
	Если ЗначениеЗаполнено(Объект.Терминал) Тогда
		Запрос.УстановитьПараметр("ОтборТерминала", Истина);
	Иначе 
		Запрос.УстановитьПараметр("ОтборТерминала", Ложь);
	КонецЕсли;
	Результат = Запрос.Выполнить();
	ВыборкаСотрудник = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСотрудник.Следующий() Цикл
		
		НоваяСтрока = Объект.Сотрудники.Добавить();
		НоваяСтрока.ИтогоНачислено = ВыборкаСотрудник.ВсегоНачислено;
		НоваяСтрока.ИтогоУдержано = ВыборкаСотрудник.ВсегоУдержано;
		НоваяСтрока.ИтогоВыдано = ВыборкаСотрудник.ВсегоВыдано;
		ВыборкаНачисления = ВыборкаСотрудник.Выбрать();
		Пока ВыборкаНачисления.Следующий() Цикл
			
			НоваяСтрока.Сотрудник = ВыборкаНачисления.Сотрудник;
			НоваяСтрока.Должность = ВыборкаНачисления.Должность;
			НоваяСтрока.Организация = ВыборкаНачисления.Организация;
			Если ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.НачислениеОсновное") Тогда
				НоваяСтрока.НачисленоЗаОсновнуюРаботу = ВыборкаНачисления.Сумма
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.ТарифПоКонтрагенту") Тогда
				НоваяСтрока.НачисленоПоФиксТарифу = ВыборкаНачисления.Сумма
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.НадбавкиПоЗаказам") Тогда
				НоваяСтрока.НачисленоНадбавки = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.ПодработкаНаСкладе") Тогда
				НоваяСтрока.ПодработкаНаСкладе = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.МагистральСПБ") Тогда
				НоваяСтрока.МагистральСПБ = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.НочнойВодитель") Тогда
				НоваяСтрока.НочнойВодитель = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.НачислениеЗаПодъем") Тогда
				НоваяСтрока.НачисленоЗаПодъемы = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.ОтпускныеБольничные") Тогда
				НоваяСтрока.НачисленоОтпускныхБольничных = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.Премия") Тогда
				НоваяСтрока.Премия = ВыборкаНачисления.Сумма;

			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.Депримирование") Тогда
				НоваяСтрока.ВыполнениеМенее85 = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.ДисциплинарныеВзыскания") Тогда
				НоваяСтрока.ДисциплинарныеВзыскания = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.МатериальныйУщерб") Тогда
				НоваяСтрока.МатериальныйУщерб = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.ШтрафыПДД") Тогда
				НоваяСтрока.ШтрафыПДД = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.Пропуска") Тогда
				НоваяСтрока.Пропуска = ВыборкаНачисления.Сумма;
				
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.ВыданАвансИЗП") Тогда
				НоваяСтрока.ВыданАвансИЗП = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.ВСчетЗП") Тогда
				НоваяСтрока.ВСчётЗП = ВыборкаНачисления.Сумма;
			ИначеЕсли ВыборкаНачисления.НачислениеУдержание = ПредопределенноеЗначение("Справочник.мгНачисленияУдержания.ИсполнительныйЛист") Тогда
				НоваяСтрока.ИсполнительныйЛист = ВыборкаНачисления.Сумма;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;

	// подсчет выданного
	
	Для каждого СтрокаСотрудники Из Объект.Сотрудники Цикл
		СтрокаСотрудники.КВыдаче = СтрокаСотрудники.ИтогоНачислено - СтрокаСотрудники.ИтогоУдержано - СтрокаСотрудники.ИтогоВыдано;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиСотрудникПриИзменении(Элемент)
	//ТекущиеДанные = Элементы.Сотрудники.ТекущиеДанные;
	//Если ТекущиеДанные <> Неопределено Тогда
	//	ТекущиеДанные.Должность = СотрудникиЗаполнитьНаСервере(ТекущиеДанные.Сотрудник);
	//КонецЕсли;
	
	ТекущиеДанные = Элементы.Сотрудники.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Сотрудник) Тогда
		ДанныеСотрудника = мгДоработки.ПолучитьОрганизациюСотрудника(ТекущиеДанные.Сотрудник);
		Если ДанныеСотрудника.Количество() = 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Сотрудник не принят ни в одну организацию";
			Сообщение.Сообщить();
		ИначеЕсли ДанныеСотрудника.Количество() > 1 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Сотрудник принят в несколько организаций, необходимо выбрать организацию сотрудника";
			Сообщение.Сообщить();
		Иначе
			ТекущиеДанные.Организация = ДанныеСотрудника[0].Организация;
			ТекущиеДанные.Должность = СотрудникиЗаполнитьНаСервере(ТекущиеДанные.Сотрудник,ТекущиеДанные.Организация);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СотрудникиЗаполнитьНаСервере(Сотрудник,Организация)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РаботникиОрганизацииСрезПоследних.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизацииСрезПоследних.Должность КАК Должность
	|ИЗ
	|	РегистрСведений.РаботникиОрганизации.СрезПоследних(&Период, Сотрудник = &Сотрудник) КАК РаботникиОрганизацииСрезПоследних
	|ГДЕ
	|	РаботникиОрганизацииСрезПоследних.Организация = &Организация";
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Результат = Запрос.Выполнить();
	Если не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Должность;
	Иначе
		Возврат ПредопределенноеЗначение("Справочник.ДолжностиОрганизаций.ПустаяСсылка");
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Параметры.Ключ.Пустая() Тогда
		Объект.ПериодРегистрации = НачалоМесяца(Объект.Дата);
		//ЗаполнитьКоличествоРабочихДней();		
	КонецЕсли;
	
	// Заполним реквизит формы МесяцСтрока.
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаПриИзменении(Элемент)
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(МесяцСтрока, Объект.ПериодРегистрации);
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Объект.ПериодРегистрации = ДобавитьМесяц(Объект.ПериодРегистрации, Направление);
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
КонецПроцедуры

&НаКлиенте
Процедура ТерминалПриИзменении(Элемент)
	
	Если Вопрос("Документ будет перезаполнен! Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ЗаполнитьНаСервере();
		Записать();
	Иначе 
		Объект.Терминал = Объект.Ссылка.Терминал;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПриИзменении(Элемент)
	Объект.Сотрудники.Сортировать("Сотрудник");	
КонецПроцедуры

//} ШушлебинДА
