
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр СостоянияЗаказов
	Движения.СостоянияЗаказов.Записывать = Истина;
	Движения.СостоянияЗаказов.Очистить();
	Движение = Движения.СостоянияЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Заказ = Заказ;
    
    //+++++Серегин М.В. 02.11.2015 12:58:04 
    Доставка = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Заказ.Номер);
    Если НЕ ЗначениеЗаполнено(Доставка) Тогда
        Доставка = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(СокрЛП(Заказ.Номер)+"abc");
    КонецЕсли;
    Если НЕ ЗначениеЗаполнено(Доставка) Тогда
        Доставка = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(СокрЛП(Заказ.Номер)+"def");
    КонецЕсли;
    Движение.Доставка = Доставка;
    //-----Серегин М.В. 02.11.2015 12:57:56 
    
	Движение.РезультатДоставки = РезультатДоставки;
	Движение.ПричинаНеВыполнения = ПричинаНевыполнения;

    // регистр СтатусыСкладскогоУчета
    Движения.СтатусыСкладскогоУчета.Записывать = Истина;
    Движения.СтатусыСкладскогоУчета.Очистить();
    Движение = Движения.СтатусыСкладскогоУчета.Добавить();
    Движение.Период = Дата;
    Движение.Заказ = Заказ;
    Движение.СтатусСкладскогоУчета = СтатусСкладскогоУчета;
    Движение.ТипЗаказа = ТипЗаказа;
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры
