
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Движения.ОперативныеСтатусыЗаказовПоДаннымМП.Записывать = Истина;
	Движения.ОперативныеСтатусыЗаказовПоДаннымМП.Очистить();
	Движение = Движения.ОперативныеСтатусыЗаказовПоДаннымМП.Добавить();
	Движение.Заказ = ?(ЗначениеЗаполнено(Реализация),Реализация,Забор); 
	Движение.Период = ДатаДоставки;
	Движение.Рейс = Рейс;
	Если ЗначениеЗаполнено(Статус) Тогда
		Движение.РезультатДоставки = Статус;
	ИначеЕсли Не ЗначениеЗаполнено(Статус) И Не ЗначениеЗаполнено(ПричинаНеВыполненияДоставки) Тогда
		Движение.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.Выполнена;		
	Иначе
		Движение.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена;
	КонецЕсли;	
		
	Движение.ПричинаНеВыполнения = ПричинаНеВыполненияДоставки;
	Движение.ПричинаОтказаПереноса = ПричинаОтказаПереноса;
	
	// Задача № 3121
	//Геннадий #3121 12.01.2021 ->
	//Если  ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда 		
	//	
	//	Заказ = Неопределено;
	//	Если ЗначениеЗаполнено(Реализация) Тогда
	//		Заказ = Реализация;
	//	Иначе
	//		Заказ = Забор;
	//	КонецЕсли;
	//	
	//	СтатусКОтправке = Новый Массив;
	//	ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Initiator", РаботаСАдминкойСервер.ИнициаторСостоянияВАдминку(Перечисления.ИнициаторыСостояния.ИнтернетМагазин));				
	//	ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(Заказ.ТерминалДоставки.Код), ДопПараметрыСтатуса);

	//	//CeHbKA #3227 21.06.2019		
	//	Если НЕ ПричинаОтказаПереноса.Пустая() Тогда
	//		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonId ", СокрЛП(ПричинаОтказаПереноса.Код), ДопПараметрыСтатуса); 
	//		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("reasonRefusal ", СокрЛП(ПричинаОтказаПереноса.Наименование), ДопПараметрыСтатуса);
	//	КонецЕсли;	
	//	//CeHbKA #3227 21.06.2019
	//	
	//	Если РаботаСоСтатусамиЗаказовСервер.СохранитьСтатус(Заказ, 238, ЭтотОбъект.Ссылка, Перечисления.ИнициаторыСостояния.ИнтернетМагазин, Заказ.ТерминалДоставки) тогда 
	//		МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Заказ.Номер, 238, , , ,СтатусКОтправке, ДопПараметрыСтатуса);
	//		// ВРЕМЕННАЯ ЗАГЛУШКА ОТКЛЮЧЕНА 
	//		СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов); 
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//Геннадий 12.01.2021 <-
	// Задача № 3121
	
	// Задача № 3615 Переварюха В.В. 22.10.2019
	Если ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки 
		ИЛИ ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
		
		
		
		СтруктураПараметров = Новый Структура;
		Попытка
		СтруктураПараметров.Вставить("OrderId", Число(Реализация.Номер));
		Исключение
		СтруктураПараметров.Вставить("OrderId", 0);
		КонецПопытки;
		
		СтруктураПараметров.Вставить("Initiator", 2);
		
		Если ДатаДоставки = Дата(0001,01,01) Тогда
		СтруктураПараметров.Вставить("EventDate", Дата);
		Иначе
		СтруктураПараметров.Вставить("EventDate", ДатаДоставки);
		КонецЕсли;
	
				
		СтруктураПараметров.Вставить("Trip", СокрЛП(Рейс.Номер));
		СтруктураПараметров.Вставить("Who", "");
		
		Если ДатаПереноса = Дата(0001,01,01) Тогда
		СтруктураПараметров.Вставить("DeliveryDate", Дата);
		Иначе
		СтруктураПараметров.Вставить("DeliveryDate", ДатаПереноса);
		КонецЕсли;

		
		
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(СтруктураПараметров);
		
		ПараметрыЗапроса = Новый Структура;
		ПараметрыЗапроса.Вставить("changes", МассивПараметров);
		
	    СтруктураВозврата 
		= ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetPendingChangesResult, ПараметрыЗапроса,,,Истина);
		
		Если НЕ СтруктураВозврата.Успешно Тогда
			
			Если СтруктураВозврата.Свойство("ОписаниеОшибки") Тогда
				ОписаниеОшибки =  СтруктураВозврата.ОписаниеОшибки;
			Иначе	
				ОписаниеОшибки = "";
			КонецЕсли;
			
			Если ДатаПереноса = Дата(0001,01,01) Тогда
			
			ОписаниеОшибки = ОписаниеОшибки + " Не установлена дата переноса "	
			
			КонецЕсли;
			
			Мас = Новый Массив;
			Мас.Добавить("evgeniy.marochkin@strizh-logistic.ru");
			Мас.Добавить("a.pryalkin@strizh-logistic.ru");
			Мас.Добавить("v.perevaruha@strizh-logistic.ru");
			
			lem.ОтправитьСообщение(Мас,
			"Ошибка выполнения метода 'SetPendingChanges'", 
			"Ошибка выполнения метода 'SetPendingChanges' при проведении документа 'ДанныеЗаказаВодителя' №"+Номер+". ОтветСервера: "+ОписаниеОшибки);
			
		КонецЕсли;
		
	КонецЕсли;
	// Задача № 3615 Переварюха В.В. 22.10.2019

КонецПроцедуры
	
// Определяет статус заказа - 231(Доставлен) или 237(Доставлено частично)
Функция ОпределитьСтатусЗаказа() // Задача № 3099
	
	// ВОЗВРАТ 231; //ВРЕМЕННАЯ ЗАГЛУШКА ОТКЛЮЧЕНА
	
	СтатусДоставлен = 231;
	СтатусДоставленЧастично = 237;
	
	Если ЗначениеЗаполнено(Статус) Тогда
		Возврат СтатусДоставлен;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Реализация", Реализация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|		РеализацияТоваровУслугТовары.Количество КАК Количество
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|	ГДЕ
	|		РеализацияТоваровУслугТовары.Ссылка = &Реализация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
	|		РеализацияТоваровУслугПодарочныеПозиции.Количество
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
	|	ГДЕ
	|		РеализацияТоваровУслугПодарочныеПозиции.Ссылка = &Реализация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровОтПокупателяТовары.Номенклатура,
	|		-ВозвратТоваровОтПокупателяТовары.Количество
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|				ПО ВозвратТоваровОтПокупателя.Ссылка = ВозвратТоваровОтПокупателяТовары.Ссылка
	|			ПО (РеализацияТоваровУслуг.Ссылка = &Реализация)
	|				И РеализацияТоваровУслуг.Номер = ВозвратТоваровОтПокупателя.Номер) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеЗаказаВодителяДоставленныеТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ДанныеЗаказаВодителяДоставленныеТовары.КоличествоДоставлено) КАК КоличествоДоставлено
	|ПОМЕСТИТЬ ВТ_Доставки
	|ИЗ
	|	Документ.ДанныеЗаказаВодителя.ДоставленныеТовары КАК ДанныеЗаказаВодителяДоставленныеТовары
	|ГДЕ
	|	ДанныеЗаказаВодителяДоставленныеТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗаказаВодителяДоставленныеТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Доставки КАК ВТ_Доставки
	|		ПО ВТ_Товары.Номенклатура = ВТ_Доставки.Номенклатура
	|ГДЕ
	|	ЕСТЬNULL(ВТ_Товары.Количество, 0) <> ЕСТЬNULL(ВТ_Доставки.КоличествоДоставлено, 0)";
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат СтатусДоставлен;
	Иначе
		Возврат СтатусДоставленЧастично;
	КонецЕсли;
	
КонецФункции	

//Асеев 01.08.2022 (Задача № 4853)>>>
Процедура СменитьСостояниеОтклоненногоПолучателемЗаказа() Экспорт
	
	Заказ = Реализация.ПолучитьОбъект();
	Заказ.СтатусИнтернетМагазина = 2;
	Заказ.ПометкаУдаления = Ложь;
	Заказ.Записать();
	
	МассивСтатусовЗаказов = Новый Массив;
	МассивСтатусовЗаказов.Добавить(Новый Структура("OrderId,State", Число(Заказ.Номер), 2));
	
	ПараметрыЗапроса = Новый Структура("orderStates", МассивСтатусовЗаказов);
	
	ВидМетода = Перечисления.ВидыЗапросовWEBСервис.setOrdersStateResult;
	
	ПолученныеДанные = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(ВидМетода, ПараметрыЗапроса);
	
КонецПроцедуры

Функция НеобходимостьСменыСостоянияОтклоненногоПолучателемЗаказа() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ", Реализация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Заказ
	|	И РеализацияТоваровУслуг.СтатусИнтернетМагазина = 4
	|	И РеализацияТоваровУслуг.ПометкаУдаления";
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(СтатусыЗаказов.Период) КАК Период
	|		ИЗ
	|			РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|		ГДЕ
	|			СтатусыЗаказов.Заказ = &Заказ
	|			И СтатусыЗаказов.Статус = 235
	|			И СтатусыЗаказов.ДокументРегистратор ССЫЛКА Документ.УстановкаСтатусовЗаказов) КАК ВЗ_Последний235
	|		ПО СтатусыЗаказов.Период = ВЗ_Последний235.Период
	|			И (СтатусыЗаказов.Заказ = &Заказ)
	|			И (СтатусыЗаказов.Статус = 235)
	|			И (СтатусыЗаказов.ДокументРегистратор ССЫЛКА Документ.УстановкаСтатусовЗаказов)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказов КАК СостоянияЗаказов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаОбщие.СрезПоследних КАК НастройкиУчетаОбщиеСрезПоследних
	|			ПО СостоянияЗаказов.ПричинаОтказа = НастройкиУчетаОбщиеСрезПоследних.ПричинаОтказаПереносаОтменаПолучателем
	|		ПО (СостоянияЗаказов.Заказ = &Заказ)
	|			И СтатусыЗаказов.ДокументРегистратор = СостоянияЗаказов.Регистратор";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции
//Асеев 01.08.2022 (Задача № 4853)<<<

//+++ БАО 27.07.2017 №1516
//---Процедура ОбновлениеСтатусовРегламент() Экспорт
Процедура ОбновлениеСтатусовРегламент(Подкл = Неопределено) Экспорт
//--- БАО 27.07.2017 №1516	
	
	Если ЗначениеЗаполнено(Реализация) Тогда
		//Асеев 28.10.2024 (Задача № 5337)>>>
		Если ВозвратНаДоставку Тогда
			ОбновлениеСтатусовВАдминке(221, Подкл);
		//Асеев 28.10.2024 (Задача № 5337)<<<
		Иначе
			Если НЕ ЗначениеЗаполнено(ПричинаНеВыполненияДоставки) Тогда
				СтатусКОтправке = ОпределитьСтатусЗаказа(); //  Задача № 3099
				ОбновлениеСтатусовВАдминке(СтатусКОтправке, Подкл);
			ИначеЕсли ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки Или ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
				ОбновлениеСтатусовВАдминке(232, Подкл);
				//Геннадий #3121 12.01.2021 ->
			ИначеЕсли ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда	
				ОбновлениеСтатусовВАдминке(238, Подкл);
				//Геннадий 12.01.2021 <-	
			Иначе
				ОбновлениеСтатусовВАдминке(235, Подкл);
			КонецеСли;
			//Асеев 01.08.2022 (Задача № 4853)>>>
			Если ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
				Если НеобходимостьСменыСостоянияОтклоненногоПолучателемЗаказа() Тогда
					СменитьСостояниеОтклоненногоПолучателемЗаказа();
				КонецЕсли;
			КонецЕсли;
			//Асеев 01.08.2022 (Задача № 4853)<<<
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Забор) Тогда
		//Асеев 28.10.2024 (Задача № 5337)>>>
		Если ВозвратНаДоставку Тогда
			ОбновлениеСтатусовЗаборовВАдминке(221, Подкл);
		//Асеев 28.10.2024 (Задача № 5337)<<<
		Иначе
			Если НЕ ЗначениеЗаполнено(ПричинаНеВыполненияДоставки) Тогда
				ОбновлениеСтатусовЗаборовВАдминке(231, Подкл);
			ИначеЕсли ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки Или ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
				ОбновлениеСтатусовЗаборовВАдминке(232, Подкл);
				//Геннадий #3121 12.01.2021 ->
			ИначеЕсли ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда	
				ОбновлениеСтатусовЗаборовВАдминке(238, Подкл);
				//Геннадий 12.01.2021 <-	
			Иначе
				ОбновлениеСтатусовЗаборовВАдминке(235, Подкл);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
		
КонецПроцедуры	

//+++ БАО 27.07.2017 №1516
//---Процедура ОбновлениеСтатусовВАдминке(Стат) Экспорт
Процедура ОбновлениеСтатусовВАдминке(Стат, Подключение = Неопределено) Экспорт
//--- БАО 27.07.2017 №1516	
	Сп = Новый Массив;
	
	// Отключено в рамках Задача № 2813
	//Если Подключение = Неопределено Тогда
	//	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
	//Иначе
	//	Подкл = Подключение;
	//КонецЕсли;	
	//
	//Если ПричинаОтказаПереноса.ИнициаторСостояния.Пустая() Тогда		
	//	stateInitializerId = "Null";
	//ИначеЕсли ПричинаОтказаПереноса.ИнициаторСостояния = Перечисления.ИнициаторыСостояния.Клиент Тогда
	//	stateInitializerId = 1;
	//ИначеЕсли ПричинаОтказаПереноса.ИнициаторСостояния = Перечисления.ИнициаторыСостояния.ТранспортнаяКомпания Тогда
	//	stateInitializerId = 2;
	//КонецЕсли;
	//	
	//СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Реализация.Номер), "ЧГ=") + "," + Строка(Стат) + ",'МП водителя','" + ?(ПричинаОтказаПереноса.Пустая(), "", Сокрлп(ПричинаОтказаПереноса.Наименование)) + "'," + stateInitializerId;
	//Если lem.СохранитьСтатус(Реализация, Стат, Ссылка) Тогда
	//	Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
	//КонецеСли;	
	//
	// Если Подключение = Неопределено Тогда

	//	Евген.ОтключитьсяОтADO(Подкл);
	//	
	//КонецЕсли;
	// Отключено в рамках Задача № 2813

	// Задача № 2813
	Если РаботаСоСтатусамиЗаказовСервер.СохранитьСтатус(Реализация, Стат, Ссылка, ИнициаторСостояния, Рейс.ТерминалДоставки) Тогда
	// Задача № 3027 //Если lem.СохранитьСтатус(Реализация, Стат, Ссылка, ИнициаторСостояния) Тогда
		//Задача № 2869
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Initiator", РаботаСАдминкойСервер.ИнициаторСостоянияВАдминку(ИнициаторСостояния));	
		//Задача № 2869
		
		// Задача № 3027
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(Рейс.ТерминалДоставки.Код), ДопПараметрыСтатуса);
		// Задача № 3027

		//CeHbKA #3227 21.06.2019
		Если Стат = 232 ИЛИ Стат = 235 Тогда 
			Если НЕ ПричинаОтказаПереноса.Пустая() Тогда
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonId ", СокрЛП(ПричинаОтказаПереноса.Код), ДопПараметрыСтатуса); 
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("reasonRefusal ", СокрЛП(ПричинаОтказаПереноса.Наименование), ДопПараметрыСтатуса);
			КонецЕсли;	
		КонецЕсли; 
		//CeHbKA #3227 21.06.2019
		
		//Асеев 26.04.2024 (Задача № 5267)>>>
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("OperationId", 1, ДопПараметрыСтатуса);
		//Асеев 26.04.2024 (Задача № 5267)<<<
		
		МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Реализация.Номер, 
		Стат, 
		"МП водителя",
		?(ПричинаОтказаПереноса.Пустая(), "", Сокрлп(ПричинаОтказаПереноса.Наименование)),
		ДатаДоставки,
		,
		ДопПараметрыСтатуса); 
		
		СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);
		
	КонецЕсли;
	
КонецПроцедуры	

//+++ БАО 27.07.2017 №1516
Процедура ОбновлениеСтатусовЗаборовВАдминке(Стат, Подключение = Неопределено) Экспорт
//--- БАО 27.07.2017 №1516	
	Сп = Новый Массив;
	
	// Отключено в рамках Задача № 2813
	//Если Подключение = Неопределено Тогда
	//	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
	//Иначе
	//	Подкл = Подключение		
	//КонецЕсли;
	//
	//
	//Если ПричинаОтказаПереноса.ИнициаторСостояния.Пустая() Тогда		
	//	stateInitializerId = "Null";
	//ИначеЕсли ПричинаОтказаПереноса.ИнициаторСостояния = Перечисления.ИнициаторыСостояния.Клиент Тогда
	//	stateInitializerId = 1;
	//ИначеЕсли ПричинаОтказаПереноса.ИнициаторСостояния = Перечисления.ИнициаторыСостояния.ТранспортнаяКомпания Тогда
	//	stateInitializerId = 2;
	//КонецЕсли;

	//СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Забор.Номер), "ЧГ=") + "," + Строка(Стат) + ",'МП водителя','" + ?(ПричинаОтказаПереноса.Пустая(), "", Сокрлп(ПричинаОтказаПереноса.Наименование)) + "'," + stateInitializerId;
	//Если lem.СохранитьСтатус(Забор, Стат, Ссылка) Тогда
	//	Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
	//	ВыгрузкаДанныхЗабораВАдминку(Подкл);
	//КонецеСли;	
	//
	// Если Подключение = Неопределено Тогда

	//	Евген.ОтключитьсяОтADO(Подкл);
	//	
	//КонецЕсли;
	// Отключено в рамках Задача № 2813
	
	// Задача № 2813
	Если РаботаСоСтатусамиЗаказовСервер.СохранитьСтатус(Забор, Стат, Ссылка, ИнициаторСостояния, Рейс.ТерминалДоставки) Тогда
	// Задача № 3027 //Если lem.СохранитьСтатус(Забор, Стат, Ссылка, ИнициаторСостояния) Тогда
		
		//Задача № 2869
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Initiator", РаботаСАдминкойСервер.ИнициаторСостоянияВАдминку(ИнициаторСостояния));	
		//Задача № 2869

		// Задача № 3027
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(Рейс.ТерминалДоставки.Код), ДопПараметрыСтатуса);

		//Марочкин 26.04.2024 (Задача № 5267)>>>
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("OperationId", 1, ДопПараметрыСтатуса);
		//Марочкин  26.04.2024 (Задача № 5267)<<<
		
		
		//CeHbKA #3227 21.06.2019
		Если Стат = 232 ИЛИ Стат = 235 ИЛИ Стат = 238 Тогда 
			Если НЕ ПричинаОтказаПереноса.Пустая() Тогда
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonId", СокрЛП(ПричинаОтказаПереноса.Код), ДопПараметрыСтатуса); 
				ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ReasonRefusal", СокрЛП(ПричинаОтказаПереноса.Наименование), ДопПараметрыСтатуса);
			КонецЕсли;	
		КонецЕсли; 
		//CeHbKA #3227 21.06.2019
		
		МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Забор.Номер, Стат, "МП водителя",?(ПричинаОтказаПереноса.Пустая(), "", Сокрлп(ПричинаОтказаПереноса.Наименование)),,,ДопПараметрыСтатуса); 
		СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбновлениеТранзакцийРегламент(Подключение = Неопределено) Экспорт
	
	Если Подключение = Неопределено Тогда
		Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
	Иначе
		Подкл = Подключение;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(ПричинаНеВыполненияДоставки) Тогда
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	РеализацияТоваровУслугТовары.Номенклатура,
		            |	РеализацияТоваровУслугТовары.Количество КАК КоличествоКДоставке,
		            |	ЕСТЬNULL(ДанныеЗаказаВодителяДоставленныеТовары.КоличествоДоставлено, 0) КАК КоличествоДоставлено,
		            |	РеализацияТоваровУслугТовары.Цена,
		            |	0 КАК СуммаКДоставке,
		            |	0 КАК СуммаДоставлено
		            |ИЗ
		            |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДанныеЗаказаВодителя.ДоставленныеТовары КАК ДанныеЗаказаВодителяДоставленныеТовары
		            |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрагентыПередаваемыеВТранзакции КАК КонтрагентыПередаваемыеВТранзакции
		            |			ПО ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Реализация.ВладелецТовара.Ссылка = КонтрагентыПередаваемыеВТранзакции.Контрагент.Ссылка
		            |		ПО (ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Реализация.Ссылка = РеализацияТоваровУслугТовары.Ссылка.Ссылка)
		            |			И (ДанныеЗаказаВодителяДоставленныеТовары.Номенклатура.Ссылка = РеализацияТоваровУслугТовары.Номенклатура.Ссылка)
		            |ГДЕ
		            |	РеализацияТоваровУслугТовары.Ссылка = &Заказ";
					
		Зап.УстановитьПараметр("Заказ", Реализация.Ссылка);	
		Таб = Зап.Выполнить().Выгрузить();
		Для Каждого Тек Из Таб Цикл
			Тек.СуммаКДоставке = Тек.КоличествоКДоставке*Тек.Цена;
			Тек.СуммаДоставлено = Тек.КоличествоДоставлено*Тек.Цена;
		КонецЦикла;	
		Если Таб.Итог("СуммаДоставлено") <> 0 Тогда
			lem.ОтобразитьТранзакциюВАдминке(Подкл, Справочники.ТипыТранзакций.CASH_RECEIVED, Дата, Таб.Итог("СуммаДоставлено"), Реализация.Ссылка);
		КонецеСли;	
		
	//ИначеЕсли ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки Или ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
	//	ОбновлениеСтатусовВАдминке(232);
	//Иначе
	//	ОбновлениеСтатусовВАдминке(235);
КонецеСли;

	Если Подключение = Неопределено Тогда

		Евген.ОтключитьсяОтADO(Подкл);
		
	КонецЕсли;

КонецПроцедуры	


///// обновление статусов по дате документа
Процедура ОбновлениеСтатусовРегламентПоДатеДокумента() Экспорт
	Если не ЗначениеЗаполнено(ПричинаНеВыполненияДоставки) Тогда
		ОбновлениеСтатусовВАдминкеПоДатеДокумента(231);
	ИначеЕсли ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносДоставки Тогда
		ОбновлениеСтатусовВАдминкеПоДатеДокумента(232);
		
	// Якурнов 07.09.2018 11:19:55
	ИначеЕсли ПричинаНеВыполненияДоставки = Справочники.ПричиныНеВыполненияДоставки.ПереносСЗаездом Тогда
		ОбновлениеСтатусовВАдминкеПоДатеДокумента(236);
	Иначе
		ОбновлениеСтатусовВАдминкеПоДатеДокумента(235);
	КонецеСли;		
КонецПроцедуры	

Процедура ОбновлениеСтатусовВАдминкеПоДатеДокумента(Стат) Экспорт
	Сп = Новый Массив;
	
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
	
	СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C_2 " + Формат(Сокрлп(Реализация.Номер), "ЧГ=") + "," + Строка(Стат) + ",'МП водителя','" + ?(ПричинаОтказаПереноса.Пустая(), "", Сокрлп(ПричинаОтказаПереноса.Наименование)) + "', '" + Евген.ДатаВSQL(Дата, Истина)+ "'" ;
	Если РаботаСоСтатусамиЗаказовСервер.СохранитьСтатус(Реализация, Стат, Ссылка) Тогда
	// Задача № 3027 //Если lem.СохранитьСтатус(Реализация, Стат, Ссылка) Тогда
		Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
	КонецеСли;	
КонецПроцедуры	

Процедура ВыгрузкаДанныхЗабораВАдминку(Подкл) Экспорт
	may.ВыгрузкаДанныхЗабораВАдминкуОбщее(ОбъемныйБрейк, Забор);	
КонецПроцедуры	

