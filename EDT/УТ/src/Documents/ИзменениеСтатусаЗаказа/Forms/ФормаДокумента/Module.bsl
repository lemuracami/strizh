
&НаКлиенте
Процедура ПереносПриИзменении(Элемент)
	Элементы.ДатаПереноса.Доступность = Объект.Перенос;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Элементы.ДатаПереноса.Доступность = Объект.Перенос;
	
	Элементы.ГруппаТипОплаты.Доступность = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ПравоМенятьТипОплаты");
	Элементы.ТипОплатыДо.Доступность = Ложь;
	
	
	
	Если Объект.Проведен Тогда
		ТолькоПросмотр = Истина;
	КонецеСли;	
	если Объект.Оператор.Пустая() Тогда
		Объект.Оператор = ПараметрыСеанса.ТекущийПользователь;
	КонецеСли;	
КонецПроцедуры

&НаСервере
Функция ПроверкаВозможностиИзмененияСтатусаНаСервере()
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ЗакрытыеЗаказы.Период
	            |ИЗ
	            |	РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	            |ГДЕ
	            |	ЗакрытыеЗаказы.Реализация = &Реализация";
	Зап.УстановитьПараметр("Реализация", Объект.Заказ);
	
	Рез = Зап.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецеСли;	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.Заказ.Пустая() Тогда
		Сообщить("Не указан заказ!");
		Отказ = Истина;
	ИначеЕсли Объект.СтатусЗаказа.Пустая() И Объект.ТипОплатыДо = Объект.ТипОплатыПосле Тогда
		Сообщить("Не указан статус заказа!");
		Отказ = Истина;
	ИначеЕсли ПроверкаВозможностиИзмененияСтатусаНаСервере() Тогда
		Сообщить("Заказ закрыт!");
		Отказ = Истина;
	КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПриИзменении(Элемент)
	ЗаказПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаказПриИзмененииНаСервере() Экспорт
	Если Не Объект.Заказ.Пустая() Тогда
		Объект.ТипОплатыДо = Справочники.ТипыОплат.НайтиПоКоду(Объект.Заказ.ТипОплаты);
		Объект.ТипОплатыПосле = Объект.ТипОплатыДо;
	Иначе
		Объект.ТипОплатыДо = Справочники.ТипыОплат.ПустаяСсылка();
		Объект.ТипОплатыПосле = Объект.ТипОплатыДо;		
	КонецЕсли;	
КонецПроцедуры
