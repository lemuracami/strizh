
&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если Не Источник = "Сканер штрихкода" Тогда
		Возврат;
	КонецЕсли;		
  
	Если НЕ ЗначениеЗаполнено(Данные) Тогда
		Возврат;
	КонецЕсли;	
	
	СканироватьШКНаСервере(Данные);
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Объект.Ссылка.Пустая() Тогда
		Если Объект.Партнер.Пустая() Тогда
			Сообщить("Создание документы без указания партнера запрещено");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		Если Объект.ТерминалОбработки.Пустая() Тогда
			Сообщить("Создание документы без указания терминала обработки запрещено");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		Объект.Дата = ТекущаяДата();
		ЗаполнитьЗаказы();
		Элементы.ЭтапОбработки.Видимость = Ложь;
	Иначе
		ПроверитьЭтапОбработки();
	КонецЕсли;
	
	ЗаполнитьТаблицуСканирования();
	
	ЭтоТестоваяСреда = ПараметрыСеанса.ЭтоТестоваяСреда;
	Если Не ЭтоТестоваяСреда Тогда
		Элементы.СканироватьШК.Видимость = Ложь;
	КонецЕсли;
	
	Если РольДоступна("Админы") Тогда
	Иначе
		ИмяТекущегоПользователя = СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код);
		Если ИмяТекущегоПользователя = "Щербинкин Дмитрий" Тогда
		Иначе
			Элементы.ЗаказыВыделитьВсеЗаказы.Доступность = Ложь;
			Элементы.ЗаказыСнятьВыделениеЗаказов.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЭтапОбработки()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭтапыВозвратаСопроводительныхДокументовСрезПоследних.СтатусСкладскогоУчета КАК ЭтапОбработки
	|ИЗ
	|	РегистрСведений.ЭтапыВозвратаСопроводительныхДокументов.СрезПоследних(, ВозвратСопроводительныхДокументов = &Ссылка) КАК ЭтапыВозвратаСопроводительныхДокументовСрезПоследних";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Элементы.ЭтапОбработки.Видимость = Ложь;
	Иначе
		ТолькоПросмотр = Истина;
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		ЭтапОбработки = Выборка.ЭтапОбработки;
		Элементы.ЭтапОбработки.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗаказы()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ДобавитьМесяц(НачалоДня(ТекущаяДата()), -6));
	Запрос.УстановитьПараметр("НачПериода", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ТерминалДоставки", Объект.ТерминалОбработки);
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Заказ КАК Заказ,
	|	МАКСИМУМ(ВложенныйЗапрос.СопроводительныеДокументы) КАК СопроводительныеДокументы,
	|	МАКСИМУМ(ВложенныйЗапрос.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|		ИСТИНА КАК СопроводительныеДокументы,
	|		СтатусыЗаказов.Период КАК Период
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеПараметрыЗаказа КАК ДополнительныеПараметрыЗаказа
	|			ПО (РеализацияТоваровУслуг.Дата >= &Период)
	|				И (РеализацияТоваровУслуг.ВладелецТовара = &Партнер)
	|				И (РеализацияТоваровУслуг.ТерминалДоставки = &ТерминалДоставки)
	|				И РеализацияТоваровУслуг.Ссылка = ДополнительныеПараметрыЗаказа.Заказ
	|				И (ДополнительныеПараметрыЗаказа.ПодписаниеИВозвратСопрДокументов)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|			ПО РеализацияТоваровУслуг.Ссылка = СтатусыЗаказов.Заказ
	|				И (СтатусыЗаказов.Статус В (301, 302))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДвиженияПриложенныхДокументов КАК СтатусыДвиженияПриложенныхДокументов
	|			ПО РеализацияТоваровУслуг.Ссылка = СтатусыДвиженияПриложенныхДокументов.Заказ
	|				И (СтатусыДвиженияПриложенныхДокументов.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыДвиженияПриложенныхДокументов.ДокументыВозвращеныПартнеру))
	|	ГДЕ
	|		СтатусыДвиженияПриложенныхДокументов.Заказ ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Ссылка,
	|		ЛОЖЬ,
	|		СтатусыЗаказов.Период
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаказов КАК СтатусыЗаказов
	|			ПО (РеализацияТоваровУслуг.Дата >= &Период)
	|				И (РеализацияТоваровУслуг.ВладелецТовара = &Партнер)
	|				И (РеализацияТоваровУслуг.ТипОплаты = 4)
	|				И (РеализацияТоваровУслуг.ТерминалДоставки = &ТерминалДоставки)
	|				И РеализацияТоваровУслуг.Ссылка = СтатусыЗаказов.Заказ
	|				И (СтатусыЗаказов.Статус В (301, 302))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДвиженияПриложенныхДокументов КАК СтатусыДвиженияПриложенныхДокументов
	|			ПО РеализацияТоваровУслуг.Ссылка = СтатусыДвиженияПриложенныхДокументов.Заказ
	|				И (СтатусыДвиженияПриложенныхДокументов.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыДвиженияПриложенныхДокументов.ДокументыВозвращеныПартнеру))
	|	ГДЕ
	|		СтатусыДвиженияПриложенныхДокументов.Заказ ЕСТЬ NULL) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	РеализацияТоваровУслуг.ТерминалДоставки КАК ТерминалДоставки,
	|	ВЫБОР
	|		КОГДА ВТ_Заказы.СопроводительныеДокументы
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыПриложенныхДокументов.СопроводительныеДокументы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыПриложенныхДокументов.БезналичныеДокументы)
	|	КОНЕЦ КАК ВидПриложенногоДокумента,
	|	НЕ СтатусыДвиженияПриложенныхДокументов.Заказ ЕСТЬ NULL КАК ДокументПринятКассиром,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ВТ_Заказы.Период, ДЕНЬ), &НачПериода, ДЕНЬ) КАК ДнейВозврата,
	|	СтатусЗаказаИнтернетМагазина.Ссылка КАК СостояниеЗаказа
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусЗаказаИнтернетМагазина КАК СтатусЗаказаИнтернетМагазина
	|			ПО РеализацияТоваровУслуг.СтатусИнтернетМагазина = СтатусЗаказаИнтернетМагазина.Код
	|		ПО ВТ_Заказы.Заказ = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДвиженияПриложенныхДокументов КАК СтатусыДвиженияПриложенныхДокументов
	|		ПО ВТ_Заказы.Заказ = СтатусыДвиженияПриложенныхДокументов.Заказ
	|			И (СтатусыДвиженияПриложенныхДокументов.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыДвиженияПриложенныхДокументов.ДокументыВозвращеныВТК))";
	
	Объект.Заказы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСканирования()
	
	ТаблицаСканирования.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказы", Объект.Заказы.Выгрузить(, "Заказ").ВыгрузитьКолонку("Заказ"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В (&Заказы)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСканирования = ТаблицаСканирования.Добавить();
		СтрокаСканирования.Заказ = Выборка.Заказ;
		СтрокаСканирования.Штрихкод = СокрЛП(Выборка.Номер);
		СтрокаСканирования = ТаблицаСканирования.Добавить();
		СтрокаСканирования.Заказ = Выборка.Заказ;
		СтрокаСканирования.Штрихкод = СокрЛП(Выборка.НомерВнешнегоЗаказа);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СканироватьШКНажатие(Элемент)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СканироватьШКЗавершение", ЭтаФорма);
	ПоказатьВводСтроки(ОписаниеОповещения,,"Введите ШК",,);
	
КонецПроцедуры


&НаКлиенте
Процедура СканироватьШКЗавершение(Штрихкод, ДопПараметры) Экспорт
	
	Если Штрихкод = Неопределено Или ПустаяСтрока(Штрихкод) Тогда
		Возврат;
	КонецЕсли;
	
	СканироватьШКНаСервере(Штрихкод);
	
КонецПроцедуры

&НаСервере
Процедура СканироватьШКНаСервере(Штрихкод)
	
	Если ТолькоПросмотр Тогда
		Сообщить("Наборная ведомость на этапе обработки. Сканирование запрещено!");
		Возврат;
	КонецЕсли;
	
	ИсходныйШтрихкод = СокрЛП(Штрихкод);
	
	Если Объект.Партнер = Справочники.Контрагенты.НайтиПоКоду("Shop_976") Тогда
		ИскомыйШтрихкод = Прав(ИсходныйШтрихкод, 8);
	Иначе
		ИскомыйШтрихкод = ИсходныйШтрихкод;
	КонецЕсли;
	
	СтрокиСканирования = ТаблицаСканирования.НайтиСтроки(Новый Структура("Штрихкод", ИскомыйШтрихкод));
	Если СтрокиСканирования.Количество() Тогда
		
		СтрокаСканирования = СтрокиСканирования[0];
		СтрокиЗаказа = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", СтрокаСканирования.Заказ));
		Если СтрокиЗаказа.Количество() Тогда
			СтрокаЗаказа = СтрокиЗаказа[0];
			СтрокаЗаказа.Штрихкод = ИсходныйШтрихкод;
			СтрокаЗаказа.ЗаказПодтвержденКСборке = Истина;
			
			Модифицированность = Истина;
			
			Элементы.Заказы.ТекущаяСтрока = Объект.Заказы.Индекс(СтрокаЗаказа);
			
			Попытка
				Записать();
			Исключение
				Сообщить(ОписаниеОшибки());
				Если Не Объект.Ссылка.Пустая() Тогда
					ПроверитьЭтапОбработки();
					
					Если ТолькоПросмотр Тогда
						Сообщить("Наборная ведомость на этапе обработки. Сканирование запрещено!");
						Возврат;
					КонецЕсли;
				КонецЕсли;
			КонецПопытки;
		Иначе
			Сообщить("Заказ " + СокрП(ОбщегоНазначения.ПолучитьЗначениеРеквизита(СтрокаСканирования.Заказ, "Номер")) + " не найден!");
		КонецЕсли;
		
	Иначе
		Сообщить("ШК " + ИсходныйШтрихкод + " не найден!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПечатьВозвратнаяНакладнаяНаСервере()
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = Документы.НаборнаяВедомостьВозвратаПриложенныхДокументов.ПолучитьМакет("ВозвратнаяНакладная");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.НаименованиеПолное КАК НаименованиеПолное,
	|	Контрагенты.ИНН КАК ИНН,
	|	Контрагенты.КПП КАК КПП,
	|	Контрагенты.ОсновнойДоговорКонтрагента.Организация.Наименование КАК ОрганизацияНаименование,
	|	Контрагенты.ОсновнойДоговорКонтрагента.Номер КАК НомерДоговора,
	|	Контрагенты.ОсновнойДоговорКонтрагента.Дата КАК ДатаДоговора
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Партнер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаборнаяВедомостьВозвратаПриложенныхДокументовЗаказы.Заказ.Номер КАК НомерЗаказа,
	|	НаборнаяВедомостьВозвратаПриложенныхДокументовЗаказы.Заказ.НомерВнешнегоЗаказа КАК ВнешнийНомерЗаказа
	|ИЗ
	|	Документ.НаборнаяВедомостьВозвратаПриложенныхДокументов.Заказы КАК НаборнаяВедомостьВозвратаПриложенныхДокументовЗаказы
	|ГДЕ
	|	НаборнаяВедомостьВозвратаПриложенныхДокументовЗаказы.Ссылка = &Ссылка
	|	И НаборнаяВедомостьВозвратаПриложенныхДокументовЗаказы.ЗаказПодтвержденКСборке
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерЗаказа";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатПакета[0].Выбрать();
	Выборка.Следующий();
	
	Область = Макет.ПолучитьОбласть("Шапка");
	ПараметрыОбласти = Область.Параметры;
	
	ПараметрыОбласти.НомерНаборной = Объект.Номер;
	ПараметрыОбласти.НомерВозврата = Объект.Номер;
	ПараметрыОбласти.ДатаСоставления = Формат(Объект.Дата, "ДФ=dd.MM.yyyy");
	
	ПараметрыОбласти.ДатаВозврата = Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy");
	ПараметрыОбласти.Договор = "Договор № " + Выборка.НомерДоговора + " от " + Формат(Выборка.ДатаДоговора, "ДФ=dd.MM.yyyy");
	
	ЮрАдрес    = УправлениеКонтактнойИнформацией.ПолучитьАдресИзКонтактнойИнформации(Объект.Партнер, "Юридический");	
	ТекстГрузополучатель = "" + Выборка.НаименованиеПолное + ", ИНН" + Выборка.ИНН  + ", " + Выборка.КПП + ", " + ЮрАдрес;
	
	ПараметрыОбласти.Грузополучатель = ТекстГрузополучатель;
	ПараметрыОбласти.Грузоотправитель = Выборка.ОрганизацияНаименование;
	
	ТабДок.Вывести(Область);
	
	Выборка = РезультатПакета[1].Выбрать();
	
	Область = Макет.ПолучитьОбласть("Строка");
	ПараметрыОбласти = Область.Параметры;
	
	НПП = 0;
	Пока Выборка.Следующий() Цикл
		НПП = НПП + 1;
		ПараметрыОбласти.НПП = НПП;
		ПараметрыОбласти.НомерЗаказа = СокрЛП(Выборка.НомерЗаказа);
		ПараметрыОбласти.ВнешнийНомерЗаказа = СокрЛП(Выборка.ВнешнийНомерЗаказа);
		ТабДок.Вывести(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("СтрокаИтогПоЗаказу");
	ПараметрыОбласти = Область.Параметры;
	ПараметрыОбласти.КоличествоПоЗаказу = НПП;
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("СтрокаИтогиОбщие");
	ПараметрыОбласти = Область.Параметры;
	ПараметрыОбласти.КоличествоОбщее = НПП;
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Подвал");
	ПараметрыОбласти = Область.Параметры;
	ПараметрыОбласти.ИтогиПрописью = "Всего количество переданных комплектов составило " + НПП + " (" + СокрП(ФормированиеПечатныхФорм.КоличествоПрописью(НПП)) + ").";
	ТабДок.Вывести(Область);
	
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.КоличествоЭкземпляров = 2;
	
	Возврат ТабДок;
	
КонецФункции

&НаКлиенте
Процедура ПечатьВозвратнаяНакладная(Команда)
	ТабДок = ПечатьВозвратнаяНакладнаяНаСервере();
	ТабДок.Показать();
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПредлагатьУстановкуСтатусаПриПроведении(Знач Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	РегистрСведений.ЭтапыВозвратаСопроводительныхДокументов КАК ЭтапыВозвратаСопроводительныхДокументов
	|ГДЕ
	|	ЭтапыВозвратаСопроводительныхДокументов.ВозвратСопроводительныхДокументов = &Ссылка";

	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПопыткаЗакрытияОкна = Ложь;
	Если Объект.Проведен Тогда
		Если ПредлагатьУстановкуСтатусаПриПроведении(Объект.Ссылка) Тогда
			БлокироватьЗакрытиеОкна = Истина;
			ПоказатьВопрос(Новый ОписаниеОповещения("ВопросУстановкаСтатусаЗавершение", ЭтотОбъект), "Установить статус этапа обработки Подготовлен к возврату?", РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
		ОповеститьОЗаписиНового(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьСтатусПодготовленКВозврату(Знач НаборнаяВедомость)

	ЗаписьРегистра = РегистрыСведений.ЭтапыВозвратаСопроводительныхДокументов.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Период = ТекущаяДата();
	ЗаписьРегистра.ВозвратСопроводительныхДокументов = НаборнаяВедомость;
	ЗаписьРегистра.СтатусСкладскогоУчета = Справочники.СтатусыСкладскогоУчета.ПодготовленКВозврату;
	ЗаписьРегистра.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	ЗаписьРегистра.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросУстановкаСтатусаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		УстановитьСтатусПодготовленКВозврату(Объект.Ссылка);
		Если Не ПопыткаЗакрытияОкна Тогда
			ПроверитьЭтапОбработки();
		КонецЕсли;
	КонецЕсли;
	БлокироватьЗакрытиеОкна = Ложь;
	Если ПопыткаЗакрытияОкна Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы Тогда
		ПопыткаЗакрытияОкна = Истина;
		Отказ = БлокироватьЗакрытиеОкна;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыделитьВсеЗаказыНаСервере()
	
	Модифицированность = Истина;
	
	Для Каждого СтрокаЗаказа Из Объект.Заказы Цикл
		СтрокаЗаказа.ЗаказПодтвержденКСборке = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсеЗаказы(Команда)
	ВыделитьВсеЗаказыНаСервере();
КонецПроцедуры

&НаСервере
Процедура СнятьВыделениеЗаказовНаСервере()
	
	Модифицированность = Истина;
	
	Для Каждого СтрокаЗаказа Из Объект.Заказы Цикл
		СтрокаЗаказа.ЗаказПодтвержденКСборке = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделениеЗаказов(Команда)
	СнятьВыделениеЗаказовНаСервере();
КонецПроцедуры




