
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Для Каждого стрДоступность Из ДоступностьТранспорта Цикл
		Если Не ЗначениеЗаполнено(стрДоступность.Транспорт) Тогда
			Сообщить("Строка " + Строка(стрДоступность.НомерСтроки) + ": не указан транспорт!", СтатусСообщения.Важное);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(стрДоступность.НачалоПериода) Тогда
			Сообщить("Строка " + Строка(стрДоступность.НомерСтроки) + ": не указано начало периода!", СтатусСообщения.Важное);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(стрДоступность.НачалоПериода) И ЗначениеЗаполнено(стрДоступность.КонецПериода) И стрДоступность.НачалоПериода > стрДоступность.КонецПериода Тогда
			Сообщить("Строка " + Строка(стрДоступность.НомерСтроки) + ": начало периода больше окончания!", СтатусСообщения.Важное);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДоступностьТранспорта.Транспорт КАК Транспорт,
	|   ДоступностьТранспорта.НачалоПериода КАК НачалоПериода,
	|   ДоступностьТранспорта.КонецПериода КАК КонецПериода,
	|   ДоступностьТранспорта.КодПериода КАК КодПериода,
	|   ДоступностьТранспорта.Доступен КАК Доступен,
	|   ДоступностьТранспорта.Документ КАК Документ,
	|   ДоступностьТранспорта.Гараж КАК Гараж,
	|	Истина КАК НеИзменен,
	|	Ложь КАК Удален
	|ИЗ
	|	РегистрСведений.новаДоступностьТранспорта КАК ДоступностьТранспорта
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Документ.новаПланированиеРаботыТранспорта.ДоступностьТранспорта КАК ИзменяемыеПериоды
	|ПО
	|	ИзменяемыеПериоды.Ссылка = &Ссылка
	| И ДоступностьТранспорта.Транспорт = ИзменяемыеПериоды.Транспорт
	|
	|ГДЕ
	|	НЕ ИзменяемыеПериоды.Ссылка ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	тзПериоды = Запрос.Выполнить().Выгрузить();
	
	СекундВДне = 60 * 60 * 24;
	
	стОтбор = Новый Структура("Транспорт, Удален", Неопределено, Ложь);
	ДатаПересчетаКалендаряВозможныхРейсов = '30010101';
	мсТранспорт = Новый Массив;
	Для Каждого стрДоступность Из ДоступностьТранспорта Цикл
		Если стрДоступность.НачалоПериода < ДатаПересчетаКалендаряВозможныхРейсов Тогда
			ДатаПересчетаКалендаряВозможныхРейсов = стрДоступность.НачалоПериода;
		КонецЕсли;
		
		Если мсТранспорт.Найти(стрДоступность.Транспорт) = Неопределено Тогда мсТранспорт.Добавить(стрДоступность.Транспорт); КонецЕсли;
		
		стОтбор.Транспорт = стрДоступность.Транспорт;
		Периоды = тзПериоды.НайтиСтроки(стОтбор);
		
		НачалоПериода = стрДоступность.НачалоПериода;
		КонецПериода = ?(ЗначениеЗаполнено(стрДоступность.КонецПериода), стрДоступность.КонецПериода, '30000101');
		
		Для Каждого Период Из Периоды Цикл
			Если Период.КонецПериода < НачалоПериода Тогда Продолжить; КонецЕсли;
			Если Период.НачалоПериода > КонецПериода Тогда Продолжить; КонецЕсли;
			Период.Удален = Истина;
			
			Если Период.НачалоПериода < НачалоПериода Тогда
				НовыйПериод = тзПериоды.Добавить();
				ЗаполнитьЗначенияСвойств(НовыйПериод, Период,, "Удален, НеИзменен");
				НовыйПериод.КонецПериода = НачалоПериода - СекундВДне;
				НовыйПериод.КодПериода = СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
			КонецЕсли;
			Если Период.КонецПериода > КонецПериода Тогда
				НовыйПериод = тзПериоды.Добавить();
				ЗаполнитьЗначенияСвойств(НовыйПериод, Период,, "Удален, НеИзменен");
				НовыйПериод.НачалоПериода = КонецПериода + СекундВДне;
				НовыйПериод.КодПериода = СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
			КонецЕсли;
		КонецЦикла;
		
		Период = тзПериоды.Добавить();
		ЗаполнитьЗначенияСвойств(Период, стрДоступность);
		Период.НачалоПериода = НачалоПериода;
		Период.КонецПериода = КонецПериода;
		Период.КодПериода = СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
		Период.Документ = Ссылка;
	КонецЦикла;
	
	НаборЗаписей = РегистрыСведений.новаДоступностьТранспорта.СоздатьНаборЗаписей();
	Для Каждого стрПериод Из тзПериоды Цикл
		Если стрПериод.Удален = Истина Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Отбор.Транспорт.Установить(стрПериод.Транспорт);
			НаборЗаписей.Отбор.НачалоПериода.Установить(стрПериод.НачалоПериода);
			НаборЗаписей.Отбор.КонецПериода.Установить(стрПериод.КонецПериода);
			НаборЗаписей.Записать();
			
		ИначеЕсли стрПериод.НеИзменен <> Истина Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Добавить();
			НаборЗаписей.Отбор.Транспорт.Установить(стрПериод.Транспорт);
			НаборЗаписей.Отбор.НачалоПериода.Установить(стрПериод.НачалоПериода);
			НаборЗаписей.Отбор.КонецПериода.Установить(стрПериод.КонецПериода);
			ЗаполнитьЗначенияСвойств(НаборЗаписей[0], стрПериод);
			НаборЗаписей.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Если ДатаПересчетаКалендаряВозможныхРейсов <> Неопределено Тогда
		новаТранспорт.РассчитатьКалендарьВозможныхРейсов(ДатаПересчетаКалендаряВозможныхРейсов,, мсТранспорт);
	КонецЕсли;
	
КонецПроцедуры