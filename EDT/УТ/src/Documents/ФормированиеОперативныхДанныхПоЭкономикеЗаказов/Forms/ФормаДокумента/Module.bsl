
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда		
		НСтатья = Объект.ЗакрываемыеСтатьи.Добавить();
		НСтатья.Статья = Справочники.СтатьиЗатратКомпании.ГСМ;
		НСтатья.Закрыть = Истина;	
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.СводЗатрат.Количество() ИЛИ Объект.ЗакрытыеЗаказы.Количество()  Тогда
		
		#Если Клиент Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос(НСтр("ru = 'В табличные части были внесены данные, очистить и заполнить заново?';"
			     + " en = 'Do you want to continue?'"), Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
			    Возврат;
			ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
				Объект.СводЗатрат.Очистить();
				Объект.ЗакрытыеЗаказы.Очистить();
				Объект.РаспределенныеРасходы.Очистить();
				ЗаполнитьНаСервере();
			КонецЕсли; 
		#Иначе
			Объект.СводЗатрат.Очистить();
			Объект.ЗакрытыеЗаказы.Очистить();
			Объект.РаспределенныеРасходы.Очистить();
			ЗаполнитьНаСервере();
		#КонецЕсли
		
	Иначе
		ЗаполнитьНаСервере();
	КонецЕсли;
	
	
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Отказ = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.ДатаЗакрытия) Тогда
		Сообщить("Не заполнена Дата закрытия");
		Отказ = Истина;	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Терминал) Тогда
		Сообщить("Не заполнен Терминал");
		Отказ = Истина;	
	КонецЕсли;
	
	Если Отказ Тогда	
		Возврат;		
	КонецЕсли;
	
	
	ЗаполнятьГСМ = Ложь;
	Най = Объект.ЗакрываемыеСтатьи.НайтиСтроки(Новый Структура("Статья", Справочники.СтатьиЗатратКомпании.ГСМ));
	Если Най.Количество() Тогда
		
		Для каждого НайСтр Из Най Цикл
		    Если НайСтр.Закрыть Тогда			
				ЗаполнятьГСМ = Истина;			
			КонецЕсли;
		КонецЦикла;
		
		
		Если ЗаполнятьГСМ Тогда	
			
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	РасходГСМОбороты.Рейс,
			                      |	РасходГСМОбороты.Транспорт,
			                      |	РасходГСМОбороты.Водитель,
			                      |	РасходГСМОбороты.ТерминалДоставки,
			                      |	СУММА(РасходГСМОбороты.РасходГСМОборот) КАК РасходГСМОборот,
			                      |	РасходГСМОбороты.СуммаЗатратОборот,
			                      |	РасходГСМОбороты.Рейс.РейсМестнойДоставки.Экспедитор КАК Экспедитор
			                      |ИЗ
			                      |	РегистрНакопления.РасходГСМ.Обороты(&ДатаНач, &ДатаКон, , ТерминалДоставки = &ТерминалДоставки) КАК РасходГСМОбороты
			                      |
			                      |СГРУППИРОВАТЬ ПО
			                      |	РасходГСМОбороты.ТерминалДоставки,
			                      |	РасходГСМОбороты.Водитель,
			                      |	РасходГСМОбороты.Транспорт,
			                      |	РасходГСМОбороты.Рейс,
			                      |	РасходГСМОбороты.СуммаЗатратОборот,
			                      |	РасходГСМОбороты.Рейс.РейсМестнойДоставки.Экспедитор");	
			Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаЗакрытия));
			Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаЗакрытия));
			Запрос.УстановитьПараметр("ТерминалДоставки", Объект.Терминал);
			Рез = Запрос.Выполнить().Выбрать();	
			Пока Рез.Следующий() Цикл
				
				НСтр = Объект.СводЗатрат.Добавить();
				НСтр.Статья = Справочники.СтатьиЗатратКомпании.ГСМ;
				
				НСтр.Рейс = Рез.Рейс;
				НСтр.Транспорт = Рез.Транспорт;
				НСтр.Водитель = Рез.Водитель;
				НСтр.Экспедитор = Рез.Экспедитор;
				НСтр.СуммаЗатрат = Рез.СуммаЗатратОборот;
				
			КонецЦикла;
		КонецЕсли;			
	
	КонецЕсли;
	
	
	Если Объект.СводЗатрат.Количество() Тогда
	
		ЗаполнитьТЧЗакрытыеЗаказы();	
	
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ЗаполнитьТЧЗакрытыеЗаказы()
	
	ТЗСписокРейсов = Объект.СводЗатрат.Выгрузить(, "Рейс");
	ТЗСписокРейсов.Свернуть("Рейс");
	СписокРейсов = Новый СписокЗначений;
	
	Для каждого СтрРейс Из ТЗСписокРейсов Цикл
	
		СписокРейсов.Добавить(СтрРейс.Рейс);	
	
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Рейс.Ссылка
	                      |ПОМЕСТИТЬ ВТ_Рейсы
	                      |ИЗ
	                      |	Документ.Рейс КАК Рейс
	                      |ГДЕ
	                      |	Рейс.Ссылка В(&СписокРейсов)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	РейсЗаказы.Заказ,
	                      |	РейсЗаказы.Ссылка.Ссылка КАК Рейс,
	                      |	ЗакрытыеЗаказы.Период
	                      |ПОМЕСТИТЬ ВТ_Заказы
	                      |ИЗ
	                      |	ВТ_Рейсы КАК ВТ_Рейсы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс.Заказы КАК РейсЗаказы
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗакрытыеЗаказы КАК ЗакрытыеЗаказы
	                      |			ПО РейсЗаказы.Заказ = ЗакрытыеЗаказы.Реализация
	                      |		ПО ВТ_Рейсы.Ссылка = РейсЗаказы.Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	РейсЗаказы.Заказ,
	                      |	РейсЗаказы.Ссылка.Ссылка,
	                      |	ЗакрытыеЗаказы.Период
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_Заказы.Заказ,
	                      |	ВЫБОР
	                      |		КОГДА ВТ_Заказы.Заказ ССЫЛКА Документ.ЗаборТовара
	                      |			ТОГДА ВТ_Заказы.Заказ.Контрагент
	                      |		КОГДА ВТ_Заказы.Заказ ССЫЛКА Документ.РеализацияТоваровУслуг
	                      |			ТОГДА ВТ_Заказы.Заказ.ВладелецТовара
	                      |	КОНЕЦ КАК Контрагент,
	                      |	РасчетРасстоянийСрезПоследних.ТипЗамераРасстояния КАК ТипРасстояния,
	                      |	РасчетРасстоянийСрезПоследних.Расстояние,
	                      |	ВТ_Заказы.Рейс
	                      |ИЗ
	                      |	ВТ_Заказы КАК ВТ_Заказы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетРасстояний.СрезПоследних КАК РасчетРасстоянийСрезПоследних
	                      |		ПО ВТ_Заказы.Заказ = РасчетРасстоянийСрезПоследних.Заказ
	                      |ГДЕ
	                      |	НЕ ВТ_Заказы.Период ЕСТЬ NULL ");	
	Запрос.УстановитьПараметр("СписокРейсов", СписокРейсов);		
	Рез = Запрос.Выполнить().Выгрузить();
	
	
	Для каждого Стр Из Рез Цикл	
		
		НСтр = Объект.ЗакрытыеЗаказы.Добавить();	
		Если ЗначениеЗаполнено(Стр.Контрагент) Тогда
			Если Не Стр.Контрагент.Родитель.ОсновнойМагазин.Пустая() Тогда
				НСтр.Партнер = Стр.Контрагент.Родитель.ОсновнойМагазин;
			Иначе
				НСтр.Партнер = Стр.Контрагент;
			КонецеСли;
		КонецЕсли;
		
		НСтр.ТипЗаказа = ?(ТипЗнч(Стр.Заказ.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг"), Перечисления.ТипыЗаказов.Доставка, Перечисления.ТипыЗаказов.Забор);
		НСтр.Заказ = Стр.Заказ;
		НСтр.ТипРасстояния = Стр.ТипРасстояния;
		НСтр.Расстояние = Стр.Расстояние;
		НСтр.Рейс = Стр.Рейс;
		
	КонецЦикла;

	

КонецПроцедуры


&НаКлиенте
Процедура Рассчитать(Команда)
	
	Если Объект.РаспределенныеРасходы.Количество() Тогда
		#Если Клиент Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос(НСтр("ru = 'Расчет был выполнен, очистить и рассчитать заново?';"
			     + " en = 'Do you want to continue?'"), Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
			    Возврат;
			ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
				Объект.РаспределенныеРасходы.Очистить();
				РассчитатьНаСервере();
			КонецЕсли; 
		#Иначе
			Объект.РаспределенныеРасходы.Очистить();
			РассчитатьНаСервере();
		#КонецЕсли	
	Иначе
		РассчитатьНаСервере();	
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура РассчитатьНаСервере()
	
	ТЗЗаказы = Объект.ЗакрытыеЗаказы.Выгрузить(, "Заказ");
	ТЗЗаказы.Свернуть("Заказ");
	БазаПоказателя = 0; ПоказательЗаказа = 0; СуммаЗатрат = 0;
	
	ТЗРасходы = Объект.РаспределенныеРасходы.Выгрузить();
	ТЗРасходы.Очистить();
	ТЗРасходы.Колонки.Добавить("Расстояние");
	//ТЗРасходы.Колонки.Добавить("Рейс");
	
	Для каждого Стр Из ТЗЗаказы Цикл
		
		РасстояниеЗаказа = 0; ТипРасстояния = Неопределено;
		Най = Объект.ЗакрытыеЗаказы.НайтиСтроки(Новый Структура("Заказ", Стр.Заказ));
		
		Если Най.Количество() Тогда	
			
			РасстояниеЗаказа = Най[0].Расстояние;	
			ТипРасстояния = Перечисления.ТипыЗамераРасстояний.ПоПрямойОтБазы;	
			
			Для каждого НайСтр Из Най Цикл
				Если НайСтр.ТипРасстояния = Перечисления.ТипыЗамераРасстояний.ПоДорогамОтБазы И ЗначениеЗаполнено(НайСтр.Расстояние) Тогда
					РасстояниеЗаказа = НайСтр.Расстояние;	
					ТипРасстояния = Перечисления.ТипыЗамераРасстояний.ПоДорогамОтБазы;
				КонецЕсли;					
			КонецЦикла;
			
			НСтр = ТЗРасходы.Добавить();	
			НСтр.Партнер = Най[0].Партнер;
			НСтр.ТипЗаказа = Най[0].ТипЗаказа;
			НСтр.Заказ = Стр.Заказ;
			НСтр.ТипРасстояния = ТипРасстояния;
			НСтр.Расстояние	= РасстояниеЗаказа;	
			НСтр.Рейс = Най[0].Рейс;
			
		КонецЕсли;
		
	КонецЦикла;	
	
	ТЗЗатратыПоРейсам = ТЗРасходы.Скопировать();
	ТЗЗатратыПоРейсам.Свернуть("Рейс", "Расстояние");
	
	Для каждого Стр Из ТЗРасходы Цикл
		
		НайБаза = ТЗЗатратыПоРейсам.НайтиСтроки(Новый Структура("Рейс", Стр.Рейс));
		БазаПоказателя = НайБаза[0].Расстояние;
		
		ПоказательЗаказа = Окр(?(БазаПоказателя = 0, 0, Стр.Расстояние / БазаПоказателя), 2);
		НайЗатраты = Объект.СводЗатрат.НайтиСтроки(Новый Структура("Рейс", Стр.Рейс));
		СуммаЗатратЗаказа = НайЗатраты[0].СуммаЗатрат * ПоказательЗаказа;
		
		НРасходы = Объект.РаспределенныеРасходы.Добавить();
		НРасходы.Партнер = Стр.Партнер;
		НРасходы.Статья = Справочники.СтатьиЗатратКомпании.ГСМ;
		НРасходы.ТипЗаказа = Стр.ТипЗаказа;
		НРасходы.Заказ = Стр.Заказ;
		НРасходы.ТипРасстояния = Стр.ТипРасстояния;
		НРасходы.БазаПоказателя = БазаПоказателя;
		НРасходы.Показатель = ПоказательЗаказа;
		НРасходы.Сумма = СуммаЗатратЗаказа;
		НРасходы.Рейс = Стр.Рейс;
		
	КонецЦикла;
	
	
		
КонецПроцедуры
