
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьДоступностьРеквизитов();
	
	Если РольДоступна("РегиональныйКладовщик") И НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда	
		Объект.ТерминалОтправки = ПредопределенноеЗначение("Справочник.РегиональныеТерминалы.СПбСтриж");	
	    Элементы.ТерминалОтправки.ТолькоПросмотр = Истина;
	КонецЕсли;	
	
	////+++ БАО 22.08.2017 №1730
	Если Не Объект.Ссылка.Пустая() И Не ТолькоПросмотр Тогда
		ТолькоПросмотр = bao.ЭтоДокументДругогоТерминала(Объект.ТерминалОтправки); 
	КонецЕсли;	
	////--- БАО 22.08.2017 №1730
	
	ОбновитьЗаголовокНеопознано();
	
	//Асеев 05.11.2020 (по письму Re: Сборка СПБ.)>>>
	ИмяОтбора = "СканированиеВДокументе";
	ГруппаЭлементовОтбора = ОбщегоНазначенияКлиентСервер83.СоздатьГруппуЭлементовОтбора(ЛогСканирования.Отбор.Элементы, ИмяОтбора, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(ГруппаЭлементовОтбора, "baseId", 3, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(ГруппаЭлементовОтбора, "objectId", Объект.Номер, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(ГруппаЭлементовОтбора, "operationId", 6, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	//Асеев 05.11.2020 (по письму Re: Сборка СПБ.)<<<
	
	//Асеев 01.08.2023 (Задача № 5083)>>>
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ЗаполненоСМестамиЗаказов = Истина;
	КонецЕсли;
	//Асеев 01.08.2023 (Задача № 5083)<<<
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьРеквизитов()
	Элементы.ДатаНомер.ТолькоПросмотр = Объект.axi;
	Элементы.Терминалы.ТолькоПросмотр = Объект.axi;
	Элементы.ВнешниеДатаНомер.ТолькоПросмотр = Объект.axi;
	
	Элементы.ЗаказыНомерСтроки.ТолькоПросмотр = Объект.axi;
	Элементы.ЗаказыЗаказ.ТолькоПросмотр = Объект.axi;
	Элементы.ЗаказыОтправлено.ТолькоПросмотр = Объект.axi;
	Элементы.ЗаказыПолучено.ТолькоПросмотр = Объект.axi;
	Элементы.ЗаказыКоличествоМест.ТолькоПросмотр = Объект.axi;
	
	Если Объект.Закрыт Тогда
		Элементы.ЗаказыПолучено.ТолькоПросмотр = Истина;
	Иначе	
		Элементы.ЗаказыПолучено.ТолькоПросмотр = Ложь;
	КонецеСли;
	
	ТолькоПросмотр = Объект.Закрыт;
	Элементы.ФормаЗакрыт.Пометка = Объект.Закрыт;
КонецПроцедуры	

&НаСервере
Процедура УстановитьВсеПолученоНаСервере()
	// Вставить содержимое обработчика.
	Для Каждого Тек Из Объект.Заказы Цикл
		Тек.Получено = Истина;
    КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсеПолучено(Команда)
	УстановитьВсеПолученоНаСервере();
КонецПроцедуры

////////////////////////////////////-----------Прочие-------------/////////////////////////////////
&НаСервере
Функция  ЗакрытНаСервере()
    ДокументОбъект =Объект.Ссылка.ПолучитьОбъект(); 
    Закрыт = ДокументОбъект.ЗакрытьДокумент();
    СтуктураПараметров = Новый Структура;
    СтуктураПараметров.Вставить("ДокументОбъект",ДокументОбъект);
    СтуктураПараметров.Вставить("Закрыт",Закрыт);
    Возврат СтуктураПараметров;
КонецФункции


&НаКлиенте
Процедура Закрыт(Команда)

	Если НЕ Объект.Закрыт Тогда
        Если НЕ Объект.Проведен Тогда
            От = Вопрос("Для закрытия необходимо проведение документа. Провести?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
            Если От = КодВозвратаДиалога.Да Тогда
                Парам = Новый Структура;
                Парам.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
                Записать(Парам);
            Иначе
                Возврат;
            КонецеСли;
        КонецЕсли;
        
        СтуктураПараметров = ЗакрытНаСервере();
        Если НЕ СтуктураПараметров.Закрыт Тогда
            Предупреждение("Есть расхождения, нельзя закрыть докумет!");
            Возврат;
        КонецЕсли;
        
	Иначе
		//Переварюха В.В. 23.12.2019 Задача №3693	
		От = Вопрос("Вы действительно хотите открыть ранее закрытый документ?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если От = КодВозвратаДиалога.Да Тогда
		//Переварюха В.В. 23.12.2019 Задача №3693
	    	СтуктураПараметров = ЗакрытНаСервере();
		//Переварюха В.В. 23.12.2019 Задача №3693
		Иначе
			Возврат;
		КонецЕсли;
		//Переварюха В.В. 23.12.2019 Задача №3693
	КонецЕсли;
    
    ДокументОбъект = СтуктураПараметров.ДокументОбъект;
    ЗначениеВДанныеФормы(ДокументОбъект,Объект);
    ТолькоПросмотр = Объект.Закрыт;
	Элементы.ФормаЗакрыт.Пометка = ТолькоПросмотр;
	Объект.Пользователь = ПараметрыСеанса.ТекущийПользователь;	
    УстановитьДоступностьРеквизитов();
    
    Парам = Новый Структура;
    Парам.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
    Записать(Парам);
	
	//Переварюха В.В. 23.12.2019 Задача №3693
	НаборЗаписей = РегистрыСведений.ДокументыЗакрытыеДляИзменения.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	Запись = НаборЗаписей.Добавить();
	Запись.Период = ТекущаяДата();
	Запись.Документ = Объект.Ссылка;
	Запись.ДокументРегистратор = Объект.Ссылка;
	Запись.ЗакрытДляРедактирования = Объект.Закрыт;
	Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	НаборЗаписей.Записать();
	//Переварюха В.В. 23.12.2019 Задача №3693
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
    Если Модифицированность = Истина Тогда 
        Объект.Пользователь = ПараметрыСеанса.ТекущийПользователь;    
	КонецЕсли;
	
	Струк = Новый Структура;
	Струк.Вставить("Отправлено", Истина);
	Най = Объект.Заказы.НайтиСтроки(Струк);
	
	Объект.КоличествоПереданныхЗаказов = Най.Количество();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьСерверТО().ПодключитьКлиента(ЭтаФорма);
	
	Если Объект.ОтправленНаМагистраль Тогда	
		ЭтаФорма.ТолькоПросмотр = Истина;		
	КонецЕсли;
	
	
	Если РольДоступна("РегиональныйТоваровед") Тогда	
		ЭтаФорма.ТолькоПросмотр = Истина;	
	КонецЕсли;
	
	//Переварюха В.В. 23.12.2019 Задача №3693
	//Если РольДоступна("Склад") Тогда
	Если РольДоступна("УстановкаЗакрытымДокументаВнутреннегоПеремещения") Тогда
		//КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗакрыт.Доступность = Ложь;
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗакрыт.Доступность = Истина;	
	Иначе
	//	КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗакрыт.Доступность = Не Объект.ОтправленНаМагистраль;
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗакрыт.Доступность = Ложь;
	КонецЕсли;
	//Переварюха В.В. 23.12.2019 Задача №3693
	
	//Переварюха В.В. 06.02.2020 Задача №3769
	ЗаписыватьПриСканировании = НЕ ЭтаФорма.ТолькоПросмотр;
	//Переварюха В.В. 06.02.2020 Задача №3769
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьАПП(Команда)
	
	//Если НЕ Объект.Проведен Тогда	
	//	Сообщить("Документ не проведен!");	
	//    Возврат;
	//КонецЕсли;
	
	//Если НЕ Объект.ОтправленНаМагистраль Тогда	
	//	Сообщить("Отправка не передана на магистраль, Акт не может быть напечатан");	
	//    Возврат;
	//КонецЕсли;
	
	
	ПечатныйДокумент = Новый ТабличныйДокумент;
	ПечатныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатныйДокумент.Автомасштаб = Истина;
	
	ПечатьНаСервере(ПечатныйДокумент);
	
	ПечатныйДокумент.ФиксацияСверху = 3;
	ПечатныйДокумент.ПолеСлева = 3;

	ПечатныйДокумент.ОтображатьЗаголовки = Ложь;
	ПечатныйДокумент.ОтображатьСетку     = Ложь;
	ПечатныйДокумент.ТолькоПросмотр      = Истина;
	
	ПечатныйДокумент.Показать();
	
КонецПроцедуры

Процедура ПечатьНаСервере(ПечатныйДокумент)

	ДокОбъект = РеквизитФормыВЗначение("Объект"); 
	ДокОбъект.ПечатьАПП(ПечатныйДокумент);

КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПередУдалением(Элемент, Отказ)

	//ТекДанные = Элементы.Заказы.ТекущиеДанные;
	//Если ТекДанные.КОтправлению Тогда	
	//	Сообщить("Заказ помечен к отправлению и не может быть удален");
	//	Отказ = Истина;	
	//	Возврат;
	//КонецЕсли;	
	
	Отказ = Истина;	
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВсеНеОтправленоНаСервере()
	Для Каждого Тек Из Объект.Заказы Цикл
		Тек.Отправлено = Ложь;
	КонецЦикла;
	Если Объект.ЗаполненоСМестамиЗаказов Тогда
		Для Каждого Тек Из Объект.МестаПоЗаказам Цикл
			Тек.КоличествоСканирований = 0;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВсеНеОтправлено(Команда)
	УстановитьВсеНеОтправленоНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// МАС - 13.11.2017 - №2038 --->>
	ЕстьОшибки = Ложь;	
	ТекстОшибки = "Обнаружены ошибки: " + Символы.ПС;
		
	НайПустыеСтроки = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", Документы.РеализацияТоваровУслуг.ПустаяСсылка()));
	Если НайПустыеСтроки.Количество() Тогда
		
		Для каждого Стр Из НайПустыеСтроки Цикл			
			ТекстОшибки = ТекстОшибки + "Обнаружен пустой заказ в строке №" + Стр.НомерСтроки + Символы.ПС;						
		КонецЦикла;		
		ЕстьОшибки = Истина;			
	КонецЕсли;
		
	
	НайДубли = Объект.Заказы.Выгрузить();
	НайДубли.Колонки.Добавить("Кол");
	Для каждого Стр Из НайДубли Цикл
		Стр.Кол = 1;
	КонецЦикла;
	НайДубли.Свернуть("Заказ", "Кол");
	
	
	Для каждого СтрД Из НайДубли Цикл
		Если СтрД.Кол > 1 И ЗначениеЗаполнено(СтрД.Заказ) Тогда
			НомераСтрок = "";
			ТекстОшибки = ТекстОшибки + Символы.ПС + "Найдены дубли заказа №" + СтрД.Заказ.Номер + " в строке: ";
			НайЗаказ = Объект.заказы.НайтиСтроки(Новый Структура("Заказ", СтрД.Заказ));
		    Для каждого СтрЗак Из НайЗаказ Цикл
			
				НомераСтрок = НомераСтрок + СтрЗак.НомерСтроки + ",";			
			
			КонецЦикла;
			ТекстОшибки = Лев(ТекстОшибки, СтрДлина(ТекстОшибки) - 1);
			ТекстОшибки = ТекстОшибки + НомераСтрок + символы.ПС;
		    ЕстьОшибки = Истина;
		КонецЕсли;	
	КонецЦикла;	
	
	
	Если ЕстьОшибки Тогда	
		Сообщить(ТекстОшибки);	
	    Отказ = Истина;	
	КонецЕсли;
	// <<--- МАС 
	
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНаПеремещениеМагистральНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьДокумент();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьНаПеремещениеМагистраль(Команда)
	Если Объект.ТерминалОтправки.Пустая() Тогда
		Предупреждение("Укажите терминал отправки!");
		Возврат;
	КонецеСли;
	
	Если Объект.ТерминалПолучения.Пустая() Тогда
		Предупреждение("Укажите терминал получения!");
		Возврат;
	КонецеСли;
	
	Если Объект.Заказы.Количество() <> 0 Тогда
		От = Вопрос("Список заказов не пустой, при заполнении список будет очищен! Продолжить?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если От = КодВозвратаДиалога.Да Тогда
			Объект.Заказы.Очистить();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕСли;	
	ЗаполнитьНаПеремещениеМагистральНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если Объект.Закрыт Или Объект.ОтправленНаМагистраль Тогда		
		Сообщить("Документ закрыт!");
		Возврат;		
	КонецЕсли;
	
  
	Если НЕ ЗначениеЗаполнено(Данные) Тогда
		Возврат;
	КонецЕсли;	
	
	Данные = СокрЛП(Данные);
	
	Если Лев(Данные, 2) = "37" И СтрДлина(Данные) = 13 И СтрНайти(Данные, "-") = 0 Тогда
		НомерР = Лев(Данные, СтрДлина(Данные) - 1);	
	Иначе
		НомерР = Данные;
	КонецЕсли;
	
	//+Задача № 3969 Добавлен параметр ШК для лога
	Рез = ПолучитьЗаказыНаСервере(НомерР, Данные);
	Если Рез Тогда	
		Сигнал();
	КонецЕсли;
		
	//Переварюха В.В. 06.02.2020 Задача №3769
	Если ЗаписыватьПриСканировании Тогда
		Парам = Новый Структура;
        Парам.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
		Попытка
			Записать(Парам);
		Исключение
		КонецПопытки;
        	
	КонецЕсли;
	//Переварюха В.В. 06.02.2020 Задача №3769
	
КонецПроцедуры
//+Степанов Задача № 3969 Добавлен параметр ШК для лога
&НаСервере
Функция ПолучитьЗаказыНаСервере(НомерР, Штрихкод)

	НуженСигнал = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ШтрихкодыЗаказов.Заказ КАК Заказ
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	РегистрСведений.ШтрихкодыЗаказов КАК ШтрихкодыЗаказов
	|ГДЕ
	|	ШтрихкодыЗаказов.Штрихкод = &Штрихкод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказы.Заказ КАК Заказ,
	|	ВТ_Заказы.Заказ.Номер КАК Номер,
	|	МестаПоЗаказам.Ссылка КАК МестоЗаказа
	|ИЗ
	|	ВТ_Заказы КАК ВТ_Заказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
	|		ПО ВТ_Заказы.Заказ = МестаПоЗаказам.Заказ
	|			И (МестаПоЗаказам.Штрихкод = &Штрихкод)";
	Запрос.УстановитьПараметр("Штрихкод", НомерР);
		
	Рез = Запрос.Выполнить();
	//+Степанов Задача № 3969
	НомерЗаказа = "";
	//-Степанов Задача № 3969
	Если Рез.Пустой() Тогда
		ДобавитьШКВНеопознанныеШК(НомерР);
		НуженСигнал = Истина;
	Иначе
		Струк = Новый Структура("Заказ");
		
		Выб = Рез.Выбрать();
		
		ШтрихкодЗаказНайден = Ложь;
		Пока Выб.Следующий() Цикл
			Струк.Заказ = Выб.Заказ;
			Най = Объект.Заказы.НайтиСтроки(Струк);
			Если Най.Количество() Тогда
				ШтрихкодЗаказНайден = Истина;
				//+Степанов Задача № 3969
				НомерЗаказа = Выб.Номер;
				//-Степанов Задача № 3969
				//Асеев 01.08.2023 (Задача № 5083)>>>
				Если Объект.ЗаполненоСМестамиЗаказов Тогда
					Если Выб.МестоЗаказа <> Null Тогда
						НайМест = Объект.МестаПоЗаказам.НайтиСтроки(Новый Структура("МестоЗаказа", Выб.МестоЗаказа));
						Если НайМест.Количество() Тогда
							НайМест = НайМест[0];
							НайМест.КоличествоСканирований = НайМест.КоличествоСканирований + 1;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				//Асеев 01.08.2023 (Задача № 5083)<<<
				Прервать;
			КонецеСли;
		КонецЦикла;
		
		Если ШтрихкодЗаказНайден Тогда
			Най = Най[0];
			Най.Отправлено = Истина;
			Най.КоличествоМестСканировано = Най.КоличествоМестПередано + 1;
			Най.КоличествоМестПередано = Най.КоличествоМестСканировано;
			
			Элементы.Заказы.ТекущаяСтрока = Объект.Заказы.Индекс(Най);
		Иначе
			ДобавитьШКВНеопознанныеШК(НомерР, Выб.Заказ, Истина);
			НуженСигнал = Истина;
		КонецеСли;
			
	КонецеСли;
	//+Степанов Задача № 3969
	ВнешнееЛогированиеСервер.ЗаписатьЛогСканирования_ОбщееВнешнееЛогирование(6, ТекущаяДата(), ПараметрыСеанса.РабочееМесто.Наименование, Объект.Номер, Штрихкод, НомерЗаказа);
	//-Степанов Задача № 3969
	Модифицированность = Истина;
	Возврат НуженСигнал;
КонецФункции // ()

&НаСервере
Процедура ДобавитьШКВНеопознанныеШК(ШК, Заказ = Неопределено, ОтсутствуетВАПП = Ложь)
	Струк = Новый Структура;
	Струк.Вставить("Штрихкод", ШК);
	Най = Объект.НеопознанныеШК.НайтиСтроки(Струк);
	
	Если Най.Количество() = 0 Тогда
		Нов = Объект.НеопознанныеШК.Добавить();
		Нов.Штрихкод = ШК;
		Нов.КоличествоМест = 1;
		Нов.Заказ = Заказ;
		Нов.ОтсутствуетВАПП = ОтсутствуетВАПП;
	Иначе
		Най[0].КоличествоМест = Най[0].КоличествоМест + 1;
	КонецеСли;	
	ОбновитьЗаголовокНеопознано();
КонецПроцедуры	

&НаКлиенте
// Функция возвращает признак того, что клиент поддерживает работу с видом ТО,
// переданным в качестве параметра.
//
// Параметры:
//  Вид      - <ПеречислениеСсылка.ВидыТорговогоОборудования>
//           - Вид торгового оборудования, информация о поддержке
//             которого запрашивается.
//
// Возвращаемое значение:
//  <Булево> - Признак поддержки указанного класса торгового оборудования.
//
Функция ПоддерживаетсяВидТО(Вид) Экспорт

	Результат = Ложь;

	Если Вид = Перечисления.ВидыТорговогоОборудования.СканерШтрихКода Тогда
		Результат = Истина;
	КонецЕсли;

	Возврат Результат;

КонецФункции // ПоддерживаетсяВидТО()



&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ПолучитьСерверТО().ОтключитьКлиента(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокНеопознано()
	Если объект.НеопознанныеШК.Количество() = 0 Тогда
		Элементы.ГруппаСтраницаНеопознанныеШК.ШрифтЗаголовка = Новый Шрифт(Элементы.ГруппаСтраницаНеопознанныеШК.ШрифтЗаголовка,,,Ложь);
		Элементы.ГруппаСтраницаНеопознанныеШК.Заголовок = "Неопознанные ШК";
	Иначе
		Элементы.ГруппаСтраницаНеопознанныеШК.ШрифтЗаголовка = Новый Шрифт(Элементы.ГруппаСтраницаНеопознанныеШК.ШрифтЗаголовка,,,Истина);
		Элементы.ГруппаСтраницаНеопознанныеШК.Заголовок = "Неопознанные ШК - " + Формат(объект.НеопознанныеШК.Количество(), "ЧН=Ноль");
	КонецеСли;	
	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаказыКоличествоМестСканированоПриИзменении(Элемент)
	Если Элементы.Заказы.ТекущиеДанные.КоличествоМестПередано = 0 Тогда
		Элементы.Заказы.ТекущиеДанные.КоличествоМестСканировано = 0;
	КонецЕсли;	
КонецПроцедуры

//Переварюха В.В. 04.03.2020
&НаКлиенте
Процедура ТолькоСРасхождениями(Команда)
	Элементы.ТолькоСРасхождениями.Пометка = НЕ Элементы.ТолькоСРасхождениями.Пометка;
	
	УстановитьОтборСРасхождениями(Элементы.ТолькоСРасхождениями.Пометка);
	
	Если Элементы.ТолькоСРасхождениями.Пометка Тогда	
		Элементы.ТолькоСРасхождениями.ЦветФона = WebЦвета.Томатный;		
	Иначе	
		Элементы.ТолькоСРасхождениями.ЦветФона = WebЦвета.Белый;		
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьОтборСРасхождениями(Установить, ТипОтбора = "Расхождения")
	
	Если ТипОтбора = "Расхождения" Тогда
		
		ТекСтр = Неопределено;
		Для каждого Зак Из Объект.Заказы Цикл
			
			Если ТекСтр <> Неопределено Тогда		
				Продолжить;		
			КонецЕсли;
			
			Если Зак.КоличествоМест <> Зак.КоличествоМестПередано Тогда	
				ТекСтр = Объект.Заказы.Индекс(Зак);		
			КонецЕсли;	
		
		КонецЦикла;
		
		Элементы.Заказы.ТекущаяСтрока = ТекСтр;
			
		Для каждого Стр Из УсловноеОформление.Элементы Цикл				
			Если Стр.Представление = "ТолькоРасхождения" Тогда			
				Стр.Использование = Установить;
			КонецЕсли;		
		КонецЦикла;
			
	КонецЕсли;	
	
КонецПроцедуры
//Переварюха В.В. 04.03.2020

&НаКлиенте
Процедура ЭмулироватьСканирование(Команда)
	Данные = "";
	Если ВвестиСтроку(Данные, "Сканирование") Тогда
		ВнешнееСобытие(Неопределено, Неопределено, Данные);
	КонецЕсли
КонецПроцедуры

&НаСервере
Процедура ЗаказыОтправленоПриИзмененииНаСервере(Заказ, Отправлено)
	
	КоличествоСканирований = ?(Отправлено, 1, 0);
	Для Каждого СтрокаМеста Из Объект.МестаПоЗаказам.НайтиСтроки(Новый Структура("Заказ", Заказ)) Цикл
		СтрокаМеста.КоличествоСканирований = КоличествоСканирований;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыОтправленоПриИзменении(Элемент)
	Если Объект.ЗаполненоСМестамиЗаказов Тогда
		ТекДанные = Элементы.Заказы.ТекущиеДанные;
		ЗаказыОтправленоПриИзмененииНаСервере(ТекДанные.Заказ, ТекДанные.Отправлено);
	КонецЕсли;
КонецПроцедуры

