
&НаКлиенте
Процедура Закрыт(Команда)

    Если НЕ Объект.Закрыт Тогда
        Если НЕ Объект.Проведен Тогда
            От = Вопрос("Для закрытия необходимо проведение документа. Провести?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
            Если От = КодВозвратаДиалога.Да Тогда
                Парам = Новый Структура;
                Парам.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
                Записать(Парам);
            Иначе
                Возврат;
            КонецеСли;
        КонецЕсли;
        
        СтуктураПараметров = ЗакрытНаСервере();
        Если НЕ СтуктураПараметров.Закрыт Тогда
            Предупреждение("Есть расхождения, нельзя закрыть докумет!");
            Возврат;
        КонецЕсли;
        
    Иначе
        СтуктураПараметров = ЗакрытНаСервере();
    КонецЕсли;
    
    ДокументОбъект = СтуктураПараметров.ДокументОбъект;
	//ЗначениеВДанныеФормы(ДокументОбъект,Объект);
    ТолькоПросмотр = Объект.Закрыт;
	Элементы.ФормаЗакрыт.Пометка = ТолькоПросмотр;
	//Объект.Пользователь = ПараметрыСеанса.ТекущийПользователь;	
    УстановитьДоступностьРеквизитов();
    
    Парам = Новый Структура;
    Парам.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
    Записать(Парам);
	
КонецПроцедуры


&НаСервере
Процедура УстановитьДоступностьРеквизитов()
		
	Если Объект.Закрыт Тогда
		Элементы.ЗаказыПолучено.ТолькоПросмотр = Истина;
	Иначе	
		Элементы.ЗаказыПолучено.ТолькоПросмотр = Ложь;
	КонецеСли;
	
	ТолькоПросмотр = Объект.Закрыт;
	Элементы.ФормаЗакрыт.Пометка = Объект.Закрыт;
	
КонецПроцедуры


&НаСервере
Функция ЗакрытНаСервере()
	
    ДокументОбъект =Объект.Ссылка.ПолучитьОбъект(); 
    Закрыт = ДокументОбъект.ЗакрытьДокумент();
	
    СтуктураПараметров = Новый Структура;
    СтуктураПараметров.Вставить("ДокументОбъект",ДокументОбъект);
    СтуктураПараметров.Вставить("Закрыт",Закрыт);
	
    Возврат СтуктураПараметров;
	
КонецФункции


&НаКлиенте
Процедура ЗаполнитьНаПеремещениеМагистраль(Команда)
		
	//Если Объект.ТерминалОтправки.Пустая() Тогда
	//	Предупреждение("Укажите терминал отправки!");
	//	Возврат;
	//КонецеСли;
	//
	//Если Объект.ТерминалПолучения.Пустая() Тогда
	//	Предупреждение("Укажите терминал получения!");
	//	Возврат;
	//КонецеСли;
	//
	//Если Объект.Заказы.Количество() <> 0 Тогда
	//	От = Вопрос("Список заказов не пустой, при заполнении список будет очищен! Продолжить?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
	//	Если От = КодВозвратаДиалога.Да Тогда
	//		Объект.Заказы.Очистить();
	//	КонецЕсли;
	//КонецЕСли;	
	//
	//ЗаполнитьНаПеремещениеМагистральНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ПечатьАПП(Команда)
	
	
	ПечатныйДокумент = Новый ТабличныйДокумент;
	ПечатныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатныйДокумент.Автомасштаб = Истина;
	
	ПечатьНаСервере(ПечатныйДокумент);
	
	ПечатныйДокумент.ФиксацияСверху = 3;
	ПечатныйДокумент.ПолеСлева = 3;

	ПечатныйДокумент.ОтображатьЗаголовки = Ложь;
	ПечатныйДокумент.ОтображатьСетку     = Ложь;
	ПечатныйДокумент.ТолькоПросмотр      = Истина;
	
	ПечатныйДокумент.Показать();


КонецПроцедуры


Процедура ПечатьНаСервере(ПечатныйДокумент)

	ДокОбъект = РеквизитФормыВЗначение("Объект"); 
	ДокОбъект.ПечатьАПП(ПечатныйДокумент);

КонецПроцедуры


&НаКлиенте
Процедура УстановитьВсеНеОтправлено(Команда)
	
	УстановитьВсеНеОтправленоНаСервере();
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВсеНеОтправленоНаСервере()
	
	Для Каждого Тек Из Объект.Заказы Цикл
		Тек.Отправлено = Ложь;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВсеПолучено(Команда)
	
	УстановитьВсеПолученоНаСервере();
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВсеПолученоНаСервере()

	Для Каждого Тек Из Объект.Заказы Цикл
		Тек.Получено = Истина;
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Пользователь.Пустая() Тогда	
		Объект.Пользователь = ПараметрыСеанса.ТекущийПользователь;		
	КонецЕсли;
	
	//Асеев 05.11.2020 (по письму Re: Сборка СПБ.)>>>
	ИмяОтбора = "СканированиеВДокументе";
	ГруппаЭлементовОтбора = ОбщегоНазначенияКлиентСервер83.СоздатьГруппуЭлементовОтбора(ЛогСканирования.Отбор.Элементы, ИмяОтбора, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(ГруппаЭлементовОтбора, "baseId", 3, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(ГруппаЭлементовОтбора, "objectId", Объект.Номер, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(ГруппаЭлементовОтбора, "operationId", 6, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	//Асеев 05.11.2020 (по письму Re: Сборка СПБ.)<<<
		
КонецПроцедуры

//Переварюха В.В. 03.03.2020
&НаКлиенте
Процедура ТолькоСРасхождениями(Команда)
	
	Элементы.ТолькоСРасхождениями.Пометка = НЕ Элементы.ТолькоСРасхождениями.Пометка;
	
	УстановитьОтборСРасхождениями(Элементы.ТолькоСРасхождениями.Пометка);
	
	Если Элементы.ТолькоСРасхождениями.Пометка Тогда	
		Элементы.ТолькоСРасхождениями.ЦветФона = WebЦвета.Томатный;		
	Иначе	
		Элементы.ТолькоСРасхождениями.ЦветФона = WebЦвета.Белый;		
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьОтборСРасхождениями(Установить, ТипОтбора = "Расхождения")
	
	Если ТипОтбора = "Расхождения" Тогда
		
		ТекСтр = Неопределено;
		Для каждого Зак Из Объект.Заказы Цикл
			
			Если ТекСтр <> Неопределено Тогда		
				Продолжить;		
			КонецЕсли;
			
			Если Зак.КоличествоМест <> Зак.КоличествоМестПередано Тогда	
				ТекСтр = Объект.Заказы.Индекс(Зак);		
			КонецЕсли;	
		
		КонецЦикла;
		
		Элементы.Заказы.ТекущаяСтрока = ТекСтр;
			
		Для каждого Стр Из УсловноеОформление.Элементы Цикл				
			Если Стр.Представление = "ТолькоРасхождения" Тогда			
				Стр.Использование = Установить;
			КонецЕсли;		
		КонецЦикла;
			
	КонецЕсли;	
	
КонецПроцедуры
//Переварюха В.В. 03.03.2020
