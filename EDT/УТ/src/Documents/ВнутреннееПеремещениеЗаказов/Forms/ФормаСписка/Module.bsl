
&НаСервере
Процедура ОтправкаУшлаНаМагистральНаСервере(Номер)
	
	Статус_ЗаказНаМагистрали = Справочники.СтатусыЗаказов.НайтиПоКоду("219");
	ВПЗОтправленНаМагистраль = Ложь;

	
	//а. Делаем документ ВПЗ закрытым (Закрыт = истина)
	ДокВПЗ = Документы.ВнутреннееПеремещениеЗаказов.НайтиПоНомеру(Номер);
	ДокВПЗОбъект = ДокВПЗ.ПолучитьОбъект();
	ДокВПЗОбъект.Закрыт = Истина;
		
	
	//б. Создаем на основании документа по заказам (Если отправлено = истина) документ ГрупповаяУстановкаСтатусовЗаказов со статусом 219 (подтяни док из хранилища), 
	//   проводим этот документ (обработка проведения в следующей задаче).
	НайГУСЗ = Документы.ГрупповаяУстановкаСтатусовЗаказов.НайтиПоРеквизиту("Основание", ДокВПЗ.Ссылка);
	
	Если ЗначениеЗаполнено(НайГУСЗ) Тогда
		ДокГрупповаяУстановкаСтатусовЗаказов = НайГУСЗ.ПолучитьОбъект();
		ДокГрупповаяУстановкаСтатусовЗаказов.СтатусыЗаказов.Очистить();
	Иначе
		ДокГрупповаяУстановкаСтатусовЗаказов = Документы.ГрупповаяУстановкаСтатусовЗаказов.СоздатьДокумент();
	КонецЕсли;
	
	ДокГрупповаяУстановкаСтатусовЗаказов.Дата = ТекущаяДата();
	ДокГрупповаяУстановкаСтатусовЗаказов.Статус = Статус_ЗаказНаМагистрали;
	ДокГрупповаяУстановкаСтатусовЗаказов.Основание = ДокВПЗОбъект.Ссылка;
	ДокГрупповаяУстановкаСтатусовЗаказов.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	ДокГрупповаяУстановкаСтатусовЗаказов.ТерминалОбработки = ДокВПЗ.ТерминалОтправки; // Задача № 3047
	
	Для каждого Стр Из ДокВПЗОбъект.Заказы Цикл
		Если Стр.Отправлено Тогда			
			НстрТЧ = ДокГрупповаяУстановкаСтатусовЗаказов.СтатусыЗаказов.Добавить();
			НстрТЧ.Заказ = Стр.Заказ;
			НстрТЧ.Статус = Статус_ЗаказНаМагистрали;		
		КонецЕсли;
	КонецЦикла;
	
	Если ДокГрупповаяУстановкаСтатусовЗаказов.СтатусыЗаказов.Количество() Тогда	
		ДокГрупповаяУстановкаСтатусовЗаказов.Записать(РежимЗаписиДокумента.Запись);	
		Попытка
			ДокГрупповаяУстановкаСтатусовЗаказов.Записать(РежимЗаписиДокумента.Проведение);
			
			//в. Добавляем в документ ВПЗ реквизит ОтправленНаМагистраль - устанавливаем его в ИСТИНА при выполнении пункта б
			ДокВПЗОбъект.ОтправленНаМагистраль = Истина;
		Исключение
			ТекстОш = ОписаниеОшибки();
			Сообщить("Не удалось установить статусы заказов, причина: " + ТекстОш + ", признак ""Отправлен на магистраль"" не установлен.");
		КонецПопытки;	
	КонецЕсли;
	
	//е. Если на документе ВПЗ выставлен флаг ОтправленНаМагистраль - запрещаем его запись в модуле и форму дока открываем только на просмотр
	ДокВПЗОбъект.ОбменДанными.Загрузка = Истина;
	ДокВПЗОбъект.Записать(РежимЗаписиДокумента.Запись);
	
	Элементы.Список.Обновить();
	КоманднаяПанель.ПодчиненныеЭлементы.ОтправкаУшла.Пометка = Истина;
	КоманднаяПанель.ПодчиненныеЭлементы.ОтправкаУшла.Доступность = Ложь;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправкаУшлаНаМагистраль(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецеСли;	
	
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	ОтправкаУшлаНаМагистральНаСервере(ТекДанные.Номер);
	
КонецПроцедуры


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецеСли;	
	ЗаказОтправлен = ЗаказОтправленНаСервере(Элементы.Список.ТекущиеДанные.Номер);
	//г. В списке документов ВПЗ на команде устанавливаем Пометка = Истина, если ОтправленНаМагистраль = истина
	КоманднаяПанель.ПодчиненныеЭлементы.ОтправкаУшла.Пометка = ЗаказОтправлен;
	//д. В списке документов ВПЗ на команде устанавливаем Доступность = Ложь, если ОтправленНаМагистраль = истина
	
	//Переварюха В.В. 09.01.2019 Задача №3693 
	КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗакрыт.Пометка = Элементы.Список.ТекущиеДанные.Закрыт;
	Элементы.Список.КонтекстноеМеню.ПодчиненныеЭлементы.СписокКонтекстноеМенюЗакрыт.Пометка = Элементы.Список.ТекущиеДанные.Закрыт;
	//Переварюха В.В. 09.01.2019 Задача №3693 
	
	//+++ БАО 22.08.2017 №1730
	
	//---Если НЕ РольДоступна("РегиональныйТоваровед") Тогда
	//---	КоманднаяПанель.ПодчиненныеЭлементы.ОтправкаУшла.Доступность = НЕ ЗаказОтправлен;
	//----КонецЕсли;
	
	
	//Если bao.ЭтоДокументДругогоТерминала(Элементы.Список.ТекущиеДанные.ТерминалОтправки) Тогда	
	Если ЭтоДокументДругогоТерминала(Элементы.Список.ТекущиеДанные.ТерминалОтправки) Тогда
		КоманднаяПанель.ПодчиненныеЭлементы.ОтправкаУшла.Доступность = Ложь;
		
	Иначе 	
		
		//Если НЕ РольДоступна("РегиональныйТоваровед") Тогда
		Если НЕ РольДоступна_РегиональныйТовароведНаСервере() Тогда
			КоманднаяПанель.ПодчиненныеЭлементы.ОтправкаУшла.Доступность = НЕ ЗаказОтправлен;
		Иначе 	
			КоманднаяПанель.ПодчиненныеЭлементы.ОтправкаУшла.Доступность = Истина;
		КонецЕсли;
	
	КонецЕсли;	
	//--- БАО 22.08.2017 №1730
	
КонецПроцедуры

Функция РольДоступна_РегиональныйТовароведНаСервере()

	Возврат РольДоступна("РегиональныйТоваровед");

КонецФункции // ()


Функция ПолучитьМассивТерминаловДоступныхПользователю() Экспорт 
	
	ТерминалСпис = Новый Массив;
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НастройкиПользователей.Пользователь КАК Пользователь,
	                      |	НастройкиПользователей.Настройка КАК Настройка,
	                      |	НастройкиПользователей.Значение КАК Значение
	                      |ИЗ
	                      |	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	                      |ГДЕ
	                      |	НастройкиПользователей.Пользователь = &Пользователь
	                      |	И НастройкиПользователей.Настройка = &Настройка");
	Запрос.УстановитьПараметр("Пользователь", ТекПользователь);
	Запрос.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.НастройкиПользователей.ТерминалДоставки);
	Рез = Запрос.Выполнить().Выбрать();
	
		
	Если Рез.Следующий() Тогда		
		Если Рез.Значение = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		ИначеЕсли Рез.Значение = Справочники.РегиональныеТерминалы.СПбСтриж Тогда
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
		Иначе
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		КонецЕсли;	
	Иначе		
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());	
	КонецЕсли;
	
	Возврат ТерминалСпис;
	
КонецФункции


Функция ЭтоДокументДругогоТерминала(Терминал)  
	
	Массив = ПолучитьМассивТерминаловДоступныхПользователю();
	
	Для Каждого СтрокаМассива Из Массив Цикл 
		
		Если СтрокаМассива = Терминал Тогда
			Возврат Ложь;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Возврат Истина;
	
КонецФункции

Функция ЗаказОтправленНаСервере(Номер)
	
	Возврат Документы.ВнутреннееПеремещениеЗаказов.НайтиПоНомеру(Номер).ОтправленНаМагистраль;

КонецФункции // ()

&НаКлиенте
Процедура ПечатьАПП(Команда)
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецеСли;	
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Объект = ТекДанные.Ссылка;
	//Если НЕ Объект.Проведен Тогда	
	//	Сообщить("Документ не проведен!");	
	//    Возврат;
	//КонецЕсли;
	
	//Если НЕ Объект.ОтправленНаМагистраль Тогда	
	//	Сообщить("Отправка не передана на магистраль, Акт не может быть напечатан");	
	//    Возврат;
	//КонецЕсли;
	
	
	ПечатныйДокумент = Новый ТабличныйДокумент;
	ПечатныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатныйДокумент.Автомасштаб = Истина;
	
	ПечатьНаСервере(ПечатныйДокумент, Объект);
	
	ПечатныйДокумент.ФиксацияСверху = 3;
	ПечатныйДокумент.ПолеСлева = 3;


	ПечатныйДокумент.ОтображатьЗаголовки = Ложь;
	ПечатныйДокумент.ОтображатьСетку     = Ложь;
	ПечатныйДокумент.ТолькоПросмотр      = Истина;
	
	
	ПечатныйДокумент.Показать();
	
КонецПроцедуры

Процедура ПечатьНаСервере(ПечатныйДокумент, Объект)

	ДокОбъект = Объект.ПолучитьОбъект(); 
	ДокОбъект.ПечатьАПП(ПечатныйДокумент);

КонецПроцедуры


&НаКлиенте
Процедура ТерминалОтправки1ПриИзменении(Элемент)
		ИП = "ТерминалОтправки";
		ПЗ = ТерминалОтправки;
		Если ТерминалОтправки.Пустая() Тогда
			Исп = Ложь;
		Иначе	
			Исп = Истина;
		КонецЕсли;	
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								)
КонецПроцедуры


&НаКлиенте
Процедура ТерминалПолучения1ПриИзменении(Элемент)
		ИП = "ТерминалПолучения";
		ПЗ = ТерминалПолучения;
		Если ТерминалПолучения.Пустая() Тогда
			Исп = Ложь;
		Иначе	
			Исп = Истина;
		КонецЕсли;	
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								)
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Если РольДоступна("РегиональныйТоваровед") Тогда	
	Если РольДоступна_РегиональныйТовароведНаСервере() Тогда
		ЭтаФорма.КоманднаяПанель.ТолькоПросмотр = Истина;
		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ОтправкаУшла.Доступность = Ложь;
	КонецЕсли;
	
	//Переварюха В.В. 23.12.2019 Задача №3693
	Если РольДоступна("УстановкаЗакрытымДокументаВнутреннегоПеремещения") Тогда
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗакрыт.Доступность = Истина;
		Элементы.Список.КонтекстноеМеню.ПодчиненныеЭлементы.СписокКонтекстноеМенюЗакрыт.Доступность = Истина;
	Иначе
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗакрыт.Доступность = Ложь;
		Элементы.Список.КонтекстноеМеню.ПодчиненныеЭлементы.СписокКонтекстноеМенюЗакрыт.Доступность = Ложь;
	КонецЕсли;
	//Переварюха В.В. 23.12.2019 Задача №3693
	
КонецПроцедуры

//Переварюха В.В. 23.12.2019 Задача №3693
&НаКлиенте
Процедура Закрыт(Команда)
	
	ТекЭлемент = ЭтотОбъект.ТекущийЭлемент;
	СтрокиЗаказов = ТекЭлемент.ВыделенныеСтроки;
	
	Для каждого СтрокаЗаказа Из СтрокиЗаказов Цикл
		
		ЗакрытьЗаказ(СтрокаЗаказа.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьЗаказ(ЗаказСсылка)
	
	Если НЕ ЗаказСсылка.Закрыт Тогда
        Если НЕ ЗаказСсылка.Проведен Тогда
            От = Вопрос("Для закрытия необходимо проведение документа. Провести?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
            Если От = КодВозвратаДиалога.Да Тогда
                Парам = Новый Структура;
                Парам.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
				ЗаказСсылка.Записать(Парам);
            Иначе
                Возврат;
            КонецеСли;
        КонецЕсли;
        
        СтуктураПараметров = ЗакрытНаСервере(ЗаказСсылка);
        Если НЕ СтуктураПараметров.Закрыт Тогда
            Предупреждение("Есть расхождения, нельзя закрыть докумет!");
            Возврат;
        КонецЕсли;
        
	Иначе
		//Переварюха В.В. 23.12.2019 Задача №3693	
		От = Вопрос("Вы действительно хотите открыть ранее закрытый документ?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если От = КодВозвратаДиалога.Да Тогда
		//Переварюха В.В. 23.12.2019 Задача №3693
	    	СтуктураПараметров = ЗакрытНаСервере(ЗаказСсылка);
		//Переварюха В.В. 23.12.2019 Задача №3693
		Иначе
			Возврат;
		КонецЕсли;
		//Переварюха В.В. 23.12.2019 Задача №3693
	КонецЕсли;
    
    ДокументОбъект = СтуктураПараметров.ДокументОбъект;
	//ЗначениеВДанныеФормы(ДокументОбъект,ЗаказСсылка);
	//ТолькоПросмотр = ДокументОбъект.Закрыт;
	//Элементы.ФормаЗакрыт.Пометка = ТолькоПросмотр;
	//ЗаказСсылка.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	ДокументОбъект.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	//УстановитьДоступностьРеквизитов();
    
	//Парам = Новый Структура;
	//Парам.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	//ДокументОбъект.Записать(Парам);
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	Исключение
    	Предупреждение("Невозможно провести документ "+ДокументОбъект+" т.к. он отправлен на магистраль");
	КонецПопытки;
	
	//Переварюха В.В. 23.12.2019 Задача №3693
	НаборЗаписей = РегистрыСведений.ДокументыЗакрытыеДляИзменения.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(ДокументОбъект.Ссылка);
	НаборЗаписей.Прочитать();
	Запись = НаборЗаписей.Добавить();
	Запись.Период = ТекущаяДата();
	Запись.Документ = ДокументОбъект.Ссылка;
	Запись.ДокументРегистратор = ДокументОбъект.Ссылка;
	Запись.ЗакрытДляРедактирования = ДокументОбъект.Закрыт;
	Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	НаборЗаписей.Записать();
	//Переварюха В.В. 23.12.2019 Задача №3693
	
КонецПроцедуры

&НаСервере
Функция  ЗакрытНаСервере(ЗаказСсылка)
    ДокументОбъект =ЗаказСсылка.Ссылка.ПолучитьОбъект(); 
    Закрыт = ДокументОбъект.ЗакрытьДокумент();
    СтуктураПараметров = Новый Структура;
    СтуктураПараметров.Вставить("ДокументОбъект",ДокументОбъект);
    СтуктураПараметров.Вставить("Закрыт",Закрыт);
    Возврат СтуктураПараметров;
КонецФункции
//Переварюха В.В. 23.12.2019 Задача №3693