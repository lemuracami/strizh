
&НаСервере
Функция НайтиПриходДС(ОтчетВодителя)
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	|	ПриходДСПоОтчетуВодителя.Ссылка КАК Док
	|ИЗ
	|	Документ.ПриходДСПоОтчетуВодителя КАК ПриходДСПоОтчетуВодителя
	|ГДЕ
	|	ПриходДСПоОтчетуВодителя.ОтчетВодителя.Ссылка = &ОтчетВодителя";
	Зап.УстановитьПараметр("ОтчетВодителя", ОтчетВодителя);
	Рез = зап.Выполнить();
	Выб = Рез.Выбрать();
	если Выб.Следующий() Тогда
		Возврат Выб.Док;
	Иначе
		Возврат Неопределено
	КонецеСли;
КонецФункции	

&НаСервере
Функция ПолучитьТерминалДоставкиОтчетаВодителя(ОтчетВодителя)
	Возврат ОтчетВодителя.ТерминалДоставки;
КонецФункции	

&НаКлиенте
Процедура Заполнить(Команда)
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		Док = НайтиПриходДС(Элементы.Список.ТекущаяСтрока);
		если Док <> Неопределено Тогда
			Д = Новый Структура("Ключ", Док);
			Форма = ПолучитьФорму("Документ.ПриходДСПоОтчетуВодителя.Форма.ФормаДокумента", Д);
		Иначе
			Форма = ПолучитьФорму("Документ.ПриходДСПоОтчетуВодителя.Форма.ФормаДокумента");
		КонецеСли;	
		Форма.Открыть();
		если Форма.Объект.Доставки.Количество() = 0 Тогда
			ОтчетВод = Элементы.Список.ТекущаяСтрока;
			Форма.Объект.ОтчетВодителя = ОтчетВод;
			Форма.Объект.ДокументВнесенВРучную = Истина;
			Форма.Объект.ТерминалДоставки = ПолучитьТерминалДоставкиОтчетаВодителя(ОтчетВод);
			Форма.ЗаполнитьНаСервере();
			//Форма.ПересчитатьИтогиПоДоставкам();
		КонецеСли;	
	КонецЕСли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		//Зап = Новый Запрос;
		//Зап.Текст = "ВЫБРАТЬ
		//|	ПриходДСПоОтчетуВодителя.Ссылка КАК Док
		//|ИЗ
		//|	Документ.ПриходДСПоОтчетуВодителя КАК ПриходДСПоОтчетуВодителя
		//|ГДЕ
		//|	ПриходДСПоОтчетуВодителя.ОтчетВодителя.Ссылка = &ОтчетВодителя";
		//Зап.УстановитьПараметр("ОтчетВодителя", Элементы.Список.ТекущаяСтрока.Ссылка);
		//Рез = зап.Выполнить();
		//Выб = Рез.Выбрать();
		Док = НайтиПриходДС(Элементы.Список.ТекущаяСтрока);
		если Док <> Неопределено Тогда
			Д = Новый Структура("Ключ", Док);
			Форма = ПолучитьФорму("Документ.ПриходДСПоОтчетуВодителя.Форма.ФормаДокумента", Д);
			Форма.Открыть();
		КонецеСли;	
	КонецЕСли;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НастройкиПользователей.Пользователь КАК Пользователь,
	                      |	НастройкиПользователей.Настройка КАК Настройка,
	                      |	НастройкиПользователей.Значение КАК Значение
	                      |ИЗ
	                      |	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	                      |ГДЕ
	                      |	НастройкиПользователей.Пользователь = &Пользователь
	                      |	И НастройкиПользователей.Настройка = &Настройка");
	Запрос.УстановитьПараметр("Пользователь", ТекПользователь);
	Запрос.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.НастройкиПользователей.ТерминалДоставки);
	Рез = Запрос.Выполнить().Выбрать();
	//ТерминалСпис = Новый СписокЗначений;
	ТерминалСпис = Новый Массив;
	
	Если Рез.Следующий() Тогда		
		Если Рез.Значение = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		ИначеЕсли Рез.Значение = Справочники.РегиональныеТерминалы.СПбСтриж Тогда
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
		Иначе
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
			ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
		КонецЕсли;	
	Иначе		
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());	
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ТерминалДоставки", ТерминалСпис);
	
	//ДатаОтсечки = ТекущаяДата() - 60 * 86400;
	//Список.Параметры.УстановитьЗначениеПараметра("Дата", ДатаОтсечки);
			
	
   // ВЫБОР КОГДА &ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
   //ТОГДА ИСТИНА
   //ИНАЧЕ ВЫБОР
   //    КОГДА &ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.МоскваСтриж)
   //     ТОГДА ДокРейс.ТерминалДоставки = &ТерминалДоставки
   //       ИЛИ ДокРейс.ТерминалДоставки = ЗНАЧЕНИЕ(Справочник.РегиональныеТерминалы.ПустаяСсылка)
   //    ИНАЧЕ ДокРейс.ТерминалДоставки = &ТерминалДоставки
   //      КОНЕЦ
   //КОНЕЦ
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.Список.ПериодАвтоОбновления = 45;
    Элементы.Список.АвтоОбновление = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПриемДСУдаленногоЗакрытия(Команда)
	
	ОткрытьФорму("Документ.ПриемДСОтЭкипажейУдаленногоЗакрытия.ФормаСписка");
	
КонецПроцедуры
