
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;	
	КонецЕсли;	
	
	Если ДополнительныеСвойства.Свойство("ОбходПроверок") Тогда
		Возврат;	
	КонецЕсли;
	
	//+++ БАО 13.06.2017 №1024  
	//---Если РейсЗакрыт Тогда
	Если baoВызовСервера.РейсЗакрыт(Ссылка) Тогда
		//--- БАО 13.06.2017 №1024	
		Отказ = Истина;
		#Если Клиент Тогда
			Сообщить("Рейс закрыт");
		#КонецЕсли	
		Возврат;
	КонецЕсли;
КонецПроцедуры

//Асеев 15.06.2021 (Задача № 4603)>>>
Процедура УстановкаСтатусаЗаказПодготовленКПередачеЭкипажу()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Рейс", Рейс);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПогрузкаВАвтоЗаказы.Ссылка КАК ДокументРегистратор,
	|	ПогрузкаВАвтоЗаказы.Заказ КАК Реализация,
	|	ПогрузкаВАвтоЗаказы.Заказ.Номер КАК НомерЗаказа,
	|	Рейс.ТерминалДоставки КАК Терминал,
	|	ЛОЖЬ КАК БылоЗакрытие,
	|	230 КАК Статус,
	|	ЗНАЧЕНИЕ(Перечисление.ИнициаторыСостояния.ТранспортнаяКомпания) КАК ИнициаторСостояния,
	|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	|	ЛОЖЬ КАК БылаРегистрация,
	|	Рейс.ТерминалДоставки.Код КАК ТерминалКод
	|ИЗ
	|	Документ.ПогрузкаВАвто.Заказы КАК ПогрузкаВАвтоЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс КАК Рейс
	|		ПО (ПогрузкаВАвтоЗаказы.Ссылка = &Ссылка)
	|			И (Рейс.Ссылка = &Рейс)
	|			И (Рейс.ВнешнийОператорМаршрутизации <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПогрузкаВАвто.ИсключенныеИзРейсаЗаказы КАК ПогрузкаВАвтоИсключенныеИзРейсаЗаказы
	|		ПО (ПогрузкаВАвтоИсключенныеИзРейсаЗаказы.Ссылка = &Ссылка)
	|			И ПогрузкаВАвтоЗаказы.Заказ = ПогрузкаВАвтоИсключенныеИзРейсаЗаказы.Заказ
	|ГДЕ
	|	ПогрузкаВАвтоИсключенныеИзРейсаЗаказы.Ссылка ЕСТЬ NULL";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДвижений = Результат.Выгрузить();
	СопоставлениеИнициатора = РаботаСАдминкойСервер.СопоставлениеИнициатораСостоянияДляАдминки();
	
	ТерминалЧисло = Число(ТаблицаДвижений[0].ТерминалКод);
	
	Для Каждого СтрокаДвижения Из ТаблицаДвижений Цикл	
		
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", ТерминалЧисло);
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Initiator", РаботаСАдминкойСервер.ИнициаторСостоянияВАдминку(СтрокаДвижения.ИнициаторСостояния, СопоставлениеИнициатора), ДопПараметрыСтатуса);	
		МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СокрЛП(СтрокаДвижения.НомерЗаказа), 
		СтрокаДвижения.Статус, 
		"",
		,
		ТекущаяДата(),
		МассивСтатусовsetOrderStatus, 
		ДопПараметрыСтатуса); 
		
	КонецЦикла;
	
	mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусовSetOrderStatus, "SetOrderStatus");
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДвижений);
	
КонецПроцедуры
//Асеев 15.06.2021 (Задача № 4603)<<<

//Асеев 15.08.2022 (Задача № 4867)>>>
Процедура УстановкаСтатусаТоварНаСкладеПоМестамЗаказов()
	
	//количество мест погрузки < количество мест РТУ и
	//количество сканирований >= количество мест РТУ
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Терминал", ТерминалОбработки);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПогрузкаВАвтоМестаПоЗаказам.Ссылка КАК ДокументРегистратор,
	|	ПогрузкаВАвтоМестаПоЗаказам.Заказ КАК Реализация,
	|	ПогрузкаВАвтоМестаПоЗаказам.Заказ.Номер КАК НомерЗаказа,
	|	&Терминал КАК Терминал,
	|	ЛОЖЬ КАК БылоЗакрытие,
	|	211 КАК Статус,
	|	ЗНАЧЕНИЕ(Перечисление.ИнициаторыСостояния.ТранспортнаяКомпания) КАК ИнициаторСостояния,
	|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	|	ЛОЖЬ КАК БылаРегистрация,
	|	РегиональныеТерминалы.Код КАК ТерминалКод,
	|	КОЛИЧЕСТВО(ИСТИНА) КАК КоличествоМестПогрузки,
	|	ПогрузкаВАвтоМестаПоЗаказам.Заказ.КоличествоМест КАК КоличествоМестРТУ,
	|	СУММА(ПогрузкаВАвтоМестаПоЗаказам.КоличествоСканирований) КАК КоличествоСканирований
	|ИЗ
	|	Документ.ПогрузкаВАвто.МестаПоЗаказам КАК ПогрузкаВАвтоМестаПоЗаказам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегиональныеТерминалы КАК РегиональныеТерминалы
	|		ПО (РегиональныеТерминалы.Ссылка = &Терминал)
	|ГДЕ
	|	ПогрузкаВАвтоМестаПоЗаказам.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПогрузкаВАвтоМестаПоЗаказам.Ссылка,
	|	ПогрузкаВАвтоМестаПоЗаказам.Заказ,
	|	ПогрузкаВАвтоМестаПоЗаказам.Заказ.Номер,
	|	РегиональныеТерминалы.Код,
	|	ПогрузкаВАвтоМестаПоЗаказам.Заказ.КоличествоМест
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ИСТИНА) < ПогрузкаВАвтоМестаПоЗаказам.Заказ.КоличествоМест И
	|	СУММА(ПогрузкаВАвтоМестаПоЗаказам.КоличествоСканирований) >= ПогрузкаВАвтоМестаПоЗаказам.Заказ.КоличествоМест";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДвижений = Результат.Выгрузить();
	СопоставлениеИнициатора = РаботаСАдминкойСервер.СопоставлениеИнициатораСостоянияДляАдминки();
	
	ТерминалЧисло = Число(ТаблицаДвижений[0].ТерминалКод);
	
	Для Каждого СтрокаДвижения Из ТаблицаДвижений Цикл	
		
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", ТерминалЧисло);
		ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("Initiator", РаботаСАдминкойСервер.ИнициаторСостоянияВАдминку(СтрокаДвижения.ИнициаторСостояния, СопоставлениеИнициатора), ДопПараметрыСтатуса);	
		МассивСтатусовSetOrderStatus = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(СокрЛП(СтрокаДвижения.НомерЗаказа), 
		СтрокаДвижения.Статус, 
		"",
		,
		ТекущаяДата(),
		МассивСтатусовsetOrderStatus, 
		ДопПараметрыСтатуса); 
		
	КонецЦикла;
	
	mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусовSetOrderStatus, "SetOrderStatus");
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДвижений);
	
КонецПроцедуры
//Асеев 15.08.2022 (Задача № 4867)<<<
		
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// Вставить содержимое обработчика.
	ТекВр = ТекущаяДата();
	
	//+Степанов Задача № 3451
	Если ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.Сортировка Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПогрузкаВАвтоМестаПоЗаказам.Заказ КАК Заказ,
		|	ПогрузкаВАвтоМестаПоЗаказам.МестоЗаказа КАК МестоЗаказа,
		|	ПогрузкаВАвтоМестаПоЗаказам.МестоЗаказа.Штрихкод КАК МестоЗаказаШтрихкод,
		|	ПогрузкаВАвтоМестаПоЗаказам.Заказ.Номер КАК НомерЗаказа
		|ПОМЕСТИТЬ втМестаИЗаказы
		|ИЗ
		|	Документ.ПогрузкаВАвто.МестаПоЗаказам КАК ПогрузкаВАвтоМестаПоЗаказам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыКонтрагентов.СрезПоследних КАК ПараметрыКонтрагентовСрезПоследних
		|		ПО ПогрузкаВАвтоМестаПоЗаказам.Заказ.ВладелецТовара = ПараметрыКонтрагентовСрезПоследних.Контрагент
		|ГДЕ
		|	ПогрузкаВАвтоМестаПоЗаказам.Ссылка = &Ссылка
		|	И ПогрузкаВАвтоМестаПоЗаказам.КоличествоСканирований > 0
		|	И ПараметрыКонтрагентовСрезПоследних.АвтоматическоеИсключениеМестЗаказаПриПогрузкеВАвто
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗагрузкаСТСДШтрихкоды.МестоЗаказа КАК МестоЗаказа
		|ПОМЕСТИТЬ втМестаНаТСД
		|ИЗ
		|	Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		|ГДЕ
		|	ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &Дата
		|	И НЕ ЗагрузкаСТСДШтрихкоды.Ссылка.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втМестаИЗаказы.Заказ КАК Заказ,
		|	втМестаИЗаказы.МестоЗаказа КАК МестоЗаказа,
		|	втМестаИЗаказы.МестоЗаказаШтрихкод КАК Штрихкод,
		|	втМестаИЗаказы.НомерЗаказа КАК НомерЗаказа
		|ИЗ
		|	втМестаИЗаказы КАК втМестаИЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ втМестаНаТСД КАК втМестаНаТСД
		|		ПО втМестаИЗаказы.МестоЗаказа = втМестаНаТСД.МестоЗаказа
		|ГДЕ
		|	втМестаНаТСД.МестоЗаказа ЕСТЬ NULL";
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Запрос.УстановитьПараметр("Дата",НачалоДня(Дата - 30 * 86400));
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			
			ЗапросЭкипажа = Новый Запрос;
			ЗапросЭкипажа.Текст = "ВЫБРАТЬ
			|	ПогрузкаВАвто.Рейс.НомерПалетты КАК НомерПалетты,
			|	ПривязкаМашинКРейсамСрезПоследних.Водитель.Представление КАК Водитель,
			|	ПривязкаМашинКРейсамСрезПоследних.Транспорт.Представление КАК Транспорт,
			|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор.Представление КАК Экспедитор
			|ИЗ
			|	Документ.ПогрузкаВАвто КАК ПогрузкаВАвто
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних(, Рейс = &Рейс) КАК ПривязкаМашинКРейсамСрезПоследних
			|		ПО ПогрузкаВАвто.Рейс = ПривязкаМашинКРейсамСрезПоследних.Рейс
			|ГДЕ
			|	ПогрузкаВАвто.Ссылка = &Ссылка";
			ЗапросЭкипажа.УстановитьПараметр("Рейс",Рейс);
			ЗапросЭкипажа.УстановитьПараметр("Ссылка",Ссылка);
			ВыборкаЭкипажа = ЗапросЭкипажа.Выполнить().Выбрать();
			ВыборкаЭкипажа.Следующий();
			
			ТекстПисьма = "По экипажу " + ?(ПустаяСтрока(ВыборкаЭкипажа.Водитель),"",ВыборкаЭкипажа.Водитель + " ") + ?(ПустаяСтрока(ВыборкаЭкипажа.Экспедитор),"",ВыборкаЭкипажа.Экспедитор + " ") 
			+ ?(ПустаяСтрока(ВыборкаЭкипажа.Транспорт),"",ВыборкаЭкипажа.Транспорт + " ") + "требуется распечатать бланки следующих заказов:" + Символы.ПС;
			
			
			ЗаказыИШтрихкоды = Новый Массив;
			Выборка = Результат.Выбрать();
			МассивНомеровЗаказов = Новый Массив;
			Пока Выборка.Следующий() Цикл
				НоваяСтрока = ИсключенныеМестаЗаказов.Добавить();
				НоваяСтрока.Заказ = Выборка.Заказ;
				НоваяСтрока.МестоЗаказа = Выборка.МестоЗаказа;
				
				МассивШтрихкодовЗаказаКОтправке = Новый Массив;
				МассивШтрихкодовЗаказаКОтправке.Добавить(Выборка.Штрихкод);
				ЗаказыИШтрихкоды = mas.ДобавитьИсключенныеШтрихкодыЗаказа(Выборка.Заказ,  МассивШтрихкодовЗаказаКОтправке,  ЗаказыИШтрихкоды);
				Если МассивНомеровЗаказов.Найти(Выборка.НомерЗаказа) = Неопределено Тогда
					МассивНомеровЗаказов.Добавить(Выборка.НомерЗаказа);
				КонецЕсли;	
			КонецЦикла;	
			НомераЗаказов = "";
			Для Каждого НомерЗаказа Из МассивНомеровЗаказов Цикл
				НомераЗаказов = НомераЗаказов + НомерЗаказа + Символы.ПС;
			КонецЦикла;
			РезультатОтправки = ИнтеграцияСАдминкойWEBСервис.ВыполнитьЗапросКАдминке(Перечисления.ВидыЗапросовWEBСервис.SetExcludedBarcodesResult, ЗаказыИШтрихкоды);
			Если РезультатОтправки.Успешно Тогда 
				Если Не ПараметрыСеанса.ЭтоТестоваяСреда Тогда
					МассивПолучателей = Новый Массив;
					МассивПолучателей.Добавить("logist@strizh-logistic.ru");
					МассивПолучателей.Добавить("dmitry.sherbinkin@strizh-logistic.ru");
					МассивПолучателей.Добавить("n.stepanov@strizh-logistic.ru");
					Заголовок = "Выполнено проведение " + Строка(Ссылка);
					ТекстПисьма = "По экипажу " + ?(ПустаяСтрока(ВыборкаЭкипажа.Водитель),"",ВыборкаЭкипажа.Водитель + " ") + ?(ПустаяСтрока(ВыборкаЭкипажа.Экспедитор),"",ВыборкаЭкипажа.Экспедитор + " ") 
					+ ?(ПустаяСтрока(ВыборкаЭкипажа.Транспорт),"",ВыборкаЭкипажа.Транспорт + " ") + "требуется распечатать бланки следующих заказов:" + Символы.ПС + НомераЗаказов;					
					lem.ОтправитьСообщение(МассивПолучателей,Заголовок,ТекстПисьма,,,,,,,,Ложь);
				КонецЕсли;
			Иначе
				ВызватьИсключение НомераЗаказов;
				Отказ = Истина;
			КонецЕсли;	
		КонецЕсли;
		//+Степанов Задача № 3959
		ОбработкаТЧИсключенныхЗаказов(ТекВр);
		//-Степанов Задача № 3959
		//Асеев 15.06.2021 (Задача № 4603)>>>
		УстановкаСтатусаЗаказПодготовленКПередачеЭкипажу();
		//Асеев 15.06.2021 (Задача № 4603)<<<
		//Асеев 15.08.2022 (Задача № 4867)>>>
		Если ТерминалОбработки = Справочники.РегиональныеТерминалы.МоскваСтриж Тогда
			УстановкаСтатусаТоварНаСкладеПоМестамЗаказов();
		КонецЕсли;
		//Асеев 15.08.2022 (Задача № 4867)<<<
	КонецЕсли;
	//-Степанов
		
	Зап = Новый Запрос;
	//Асеев 03.04.2023 (Задача № 5025)>>>
	Если ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.Сортировка И ДополнительныеСвойства.Свойство("ПерепроведениеПриКоррДобавленииЗаказа") Тогда
		Зап.Текст =
		"ВЫБРАТЬ
		|	ПогрузкаВАвтоЗаказы.Заказ КАК Заказ,
		|	ПогрузкаВАвтоЗаказы.Ссылка.Рейс.ТерминалДоставки КАК Терминал
		|ИЗ
		|	Документ.ПогрузкаВАвто.Заказы КАК ПогрузкаВАвтоЗаказы
		|ГДЕ
		|	ПогрузкаВАвтоЗаказы.Ссылка = &Док
		|	И ПогрузкаВАвтоЗаказы.Корректировка";
	Иначе
		//Асеев 03.04.2023 (Задача № 5025)<<<
		Зап.Текст =
		"ВЫБРАТЬ
		|	ПогрузкаВАвтоЗаказы.Заказ КАК Заказ,
		|	ПогрузкаВАвтоЗаказы.Ссылка.Рейс.ТерминалДоставки КАК Терминал
		|ИЗ
		|	Документ.ПогрузкаВАвто.Заказы КАК ПогрузкаВАвтоЗаказы
		|ГДЕ
		|	ПогрузкаВАвтоЗаказы.Ссылка = &Док";
	КонецЕсли;
	
	Зап.УстановитьПараметр("Док", Ссылка);			
	Рез = Зап.Выполнить().Выгрузить();
	
	//+++ БАО 02.08.2017 №1550	
	
	//Список = Новый СписокЗначений;
	//Массив = Рез.ВыгрузитьКолонку("Заказ");
	//Список.ЗагрузитьЗначения(Массив);
	Список = Рез.Скопировать(, "Заказ, Терминал");
	
	//--- БАО 02.08.2017 №1550
	
	Зап2 = Новый Запрос;
	Зап2.Текст = "ВЫБРАТЬ
	|	ПривязкаМашинКРейсамСрезПоследних.Рейс,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт КАК РасшифровкаМестонахождения,
	|	ПривязкаМашинКРейсамСрезПоследних.Водитель,
	|	ПривязкаМашинКРейсамСрезПоследних.Экспедитор
	|ИЗ
	|	РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	|ГДЕ
	|	ПривязкаМашинКРейсамСрезПоследних.Рейс = &Рейс";
	
	Зап2.УстановитьПараметр("Рейс", Ссылка.Рейс);			 
	Выб2 = Зап2.Выполнить().Выбрать();
	
	СписокМестонахождения = Неопределено;
	
	Если Выб2.Следующий() Тогда
		СписокМестонахождения = Новый Структура;
		СписокМестонахождения.Вставить("РасшифровкаМестонахождения", Выб2.РасшифровкаМестонахождения);
		СписокМестонахождения.Вставить("Рейс", Выб2.Рейс);
		СписокМестонахождения.Вставить("Водитель", Выб2.Водитель);
		СписокМестонахождения.Вставить("Экспедитор", Выб2.Экспедитор);
	КонецеСли;	
	
	
	// 1. при проведении дока с этапами = ПогрузкаВАвто или Сортировка в регистр вносим заказы 
	// из ТЧ заказы документа Рейс ---- левое соединение - заказы ТЧ документа ПогрузкаВАвто, ресурс ЗаказЗагружен= Истина. 
	// Для заказов, которые есть в рейсе, но нет в погрузке в авто вычисляем значение реквизита ПричинаНеЗагрузкиЗаказов 
	// (если заказ был ранее на ТСД = ПричиныНеЗагрузкиЗаказовВТранспорт.ЗаказНеНайденНаСкладе, иначе = ПричиныНеЗагрузкиЗаказовВТранспорт.ЗаказНеПоступалНаСклад), 
	// также, для этих заказов (которые есть в рейсе, но нет в погрузке - ресурс ЗаказЗагружен выставляем в Ложь)
	
	// 2. при проведении с этапом = ОтметкаНезагруженныхВАвтоЗаказов, проводим всё как есть, ПричинаНеЗагрузкиЗаказов= ЗаказНеПоместилсяВАвто (подтяни из хран),  
	// ресурс ЗаказЗагружен выставляем в Ложь
	
	
	// МАС - 20.07.2017 - №1430 --->>
	Движения.УчетПогрузкиЗаказовВТранспорт.Очистить();
	Движения.УчетПогрузкиЗаказовВТранспорт.Записывать = Истина;
	
	Если ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.ПогрузкаВАвто ИЛИ ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.Сортировка Тогда
		
		Зап3 = Новый Запрос("ВЫБРАТЬ
		|	ПогрузкаВАвтоЗаказы.Заказ КАК Заказ,
		|	ПогрузкаВАвтоЗаказы.Ссылка.Рейс КАК Рейс,
		|	ПогрузкаВАвтоЗаказы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Документ.ПогрузкаВАвто.Заказы КАК ПогрузкаВАвтоЗаказы
		|ГДЕ
		|	ПогрузкаВАвтоЗаказы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПогрузкаВАвтоЗаказы.Заказ,
		|	ПогрузкаВАвтоЗаказы.Ссылка,
		|	ПогрузкаВАвтоЗаказы.Ссылка.Рейс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РейсЗаказы.Заказ КАК Заказ,
		|	ВТ.Рейс КАК Рейс
		|ПОМЕСТИТЬ ВТ_Рейс
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс.Заказы КАК РейсЗаказы
		|		ПО ВТ.Рейс = РейсЗаказы.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РейсЗаказы.Заказ,
		|	ВТ.Рейс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Рейс.Заказ КАК Заказ,
		|	ВЫБОР
		|		КОГДА ВТ.Заказ ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьВПогрузке,
		|	ВЫБОР
		|		КОГДА ЗагрузкаСТСДШтрихкоды.Заказ ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК БылНаТСД,
		|	ВТ_Рейс.Рейс КАК Рейс,
		|	ВТ_Рейс.Рейс.РейсМестнойДоставки.Транспорт КАК Транспорт,
		|	ВТ_Рейс.Рейс.РейсМестнойДоставки.Водитель КАК Водитель,
		|	ВТ_Рейс.Рейс.РейсМестнойДоставки.Экспедитор КАК Экспедитор
		|ИЗ
		|	ВТ_Рейс КАК ВТ_Рейс
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
		|		ПО ВТ_Рейс.Заказ = ВТ.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
		|		ПО ВТ_Рейс.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Рейс.Заказ,
		|	ВЫБОР
		|		КОГДА ВТ.Заказ ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ВТ_Рейс.Рейс,
		|	ВТ_Рейс.Рейс.РейсМестнойДоставки.Транспорт,
		|	ВТ_Рейс.Рейс.РейсМестнойДоставки.Водитель,
		|	ВТ_Рейс.Рейс.РейсМестнойДоставки.Экспедитор,
		|	ВЫБОР
		|		КОГДА ЗагрузкаСТСДШтрихкоды.Заказ ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ");
		Зап3.УстановитьПараметр("Ссылка", Ссылка);
		//Зап3.УстановитьПараметр("РейсСсылка", Рейс);
		Рез3 = Зап3.Выполнить().Выбрать();
		
		
		Пока Рез3.Следующий() Цикл	
			Если ТипЗнч(Рез3.Заказ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда			
				Движение = Движения.УчетПогрузкиЗаказовВТранспорт.Добавить();
				Движение.Период = ТекВр;
				Движение.ЭтапПогрузкиЗаказов = ЭтапПогрузки;
				Движение.Заказ = Рез3.Заказ;
				Движение.Рейс  = Рез3.Рейс;
				Движение.ЗаказЗагружен = Рез3.ЕстьВПогрузке;
				Если НЕ Движение.ЗаказЗагружен Тогда		
					Движение.ПричинаНеЗагрузкиЗаказов = ?(Рез3.БылНаТСД, Перечисления.ПричиныНеЗагрузкиЗаказовВТранспорт.ЗаказНеНайденНаСкладе, Перечисления.ПричиныНеЗагрузкиЗаказовВТранспорт.ЗаказНеПоступалНаСклад);				
				КонецЕсли;			 
				Движение.Транспорт  = Рез3.Транспорт;
				Движение.Водитель   = Рез3.Водитель;
				Движение.Экспедитор = Рез3.Экспедитор;				
			КонецЕсли;							
		КонецЦикла;
		
		Если ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.ПогрузкаВАвто  Тогда
			Движения.НезагруженныеЗаказыВАвто.Очистить();
			Движения.НезагруженныеЗаказыВАвто.Записывать = Истина;
			Для каждого Стр Из Заказы Цикл		
				Движение = Движения.НезагруженныеЗаказыВАвто.Добавить();
				Движение.Период = ТекВр;
				Движение.Заказ = Стр.Заказ;
				Движение.Рейс  = Рейс;
				Движение.СтатусПогрузки = Перечисления.СтатусыПогрузкиЗаказовВАвто.ЗаказЗагружен;			
			КонецЦикла;
		КонецеСли;
		
	ИначеЕсли ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.ОтметкаНезагруженныхВАвтоЗаказов Тогда
		
		
		РейсБП = Рейс.РейсМестнойДоставки;
		ТекТранспорт = РейсБП.Транспорт;
		ТекВодитель = РейсБП.Водитель;
		ТекЭкспедитор = РейсБП.Экспедитор;
		
		Для каждого Стр Из Заказы Цикл		
			Движение = Движения.УчетПогрузкиЗаказовВТранспорт.Добавить();
			Движение.Период = ТекВр;
			Движение.ЭтапПогрузкиЗаказов = ЭтапПогрузки;
			Движение.Заказ = Стр.Заказ;
			Движение.Рейс  = Рейс;
			Движение.ЗаказЗагружен = Ложь;			
			Движение.ПричинаНеЗагрузкиЗаказов = Перечисления.ПричиныНеЗагрузкиЗаказовВТранспорт.ЗаказНеПоместилсяВАвто;					 
			Движение.Транспорт = ТекТранспорт;
			Движение.Водитель  = ТекВодитель;
			Движение.Экспедитор = ТекЭкспедитор;	
		КонецЦикла;
		
		Движения.НезагруженныеЗаказыВАвто.Очистить();
		Движения.НезагруженныеЗаказыВАвто.Записывать = Истина;
		Для каждого Стр Из Заказы Цикл		
			Движение = Движения.НезагруженныеЗаказыВАвто.Добавить();
			Движение.Период = ТекВр;
			Движение.Заказ = Стр.Заказ;
			Движение.Рейс  = Рейс;
			Движение.СтатусПогрузки = Перечисления.СтатусыПогрузкиЗаказовВАвто.ЗаказНеЗагружен;			
		КонецЦикла;
	КонецЕсли;
	// <<--- МАС 
	
	Если ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.ОтметкаНезагруженныхВАвтоЗаказов Тогда
		lem.ЗафиксироватьМестонахождениеЗаказа(Список, Справочники.ВидыМестонахожденияЗаказа.НаСкладе, Ссылка, СписокМестонахождения);
		Если ИсключитьЗаказыИзРейсов Тогда
			ИсключениеЗаказовИзРейсов();
		КонецеСли;
		
		Если ОбновлятьСтатусыЗаказов Тогда
			ОбновлениеСтатусовВАдминке(РежимЗаписиДокумента.Проведение);
		КонецеСли;	
	Иначе	
		lem.ЗафиксироватьМестонахождениеЗаказа(Список, Справочники.ВидыМестонахожденияЗаказа.УКурьера, Ссылка, СписокМестонахождения);
	КонецЕСли;	
	
	Если ЭтапПогрузки = Справочники.ЭтапыПогрузкиЗаказовВТранспорт.Сортировка Тогда
		may.ОкончаниеЗагрузкиВАвто(Рейс);
	КонецеСли;	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Зап = Новый Запрос;
	Зап.Текст =
	"ВЫБРАТЬ
	|	ПогрузкаВАвтоЗаказы.Заказ КАК Заказ,
	|	ПогрузкаВАвтоЗаказы.Ссылка.Рейс.ТерминалДоставки КАК Терминал
	|ИЗ
	|	Документ.ПогрузкаВАвто.Заказы КАК ПогрузкаВАвтоЗаказы
	|ГДЕ
	|	ПогрузкаВАвтоЗаказы.Ссылка = &Док";
	
	Зап.УстановитьПараметр("Док", Ссылка);			
	Рез = Зап.Выполнить().Выгрузить();
	
	//+++ БАО 02.08.2017 №1550	
	
	//Список = Новый СписокЗначений;
	//Массив = Рез.ВыгрузитьКолонку("Заказ");
	//Список.ЗагрузитьЗначения(Массив);
	Список = Рез.Скопировать(, "Заказ, Терминал");
	
	//--- БАО 02.08.2017 №1550
	
	
	
	lem.ЗафиксироватьМестонахождениеЗаказа(Список, Справочники.ВидыМестонахожденияЗаказа.НаСкладе, Ссылка);
	
КонецПроцедуры

Процедура ИсключениеЗаказовИзРейсов()
	Наб = РегистрыСведений.ЗаказыКОтвязкеОтРейсов.СоздатьНаборЗаписей();
	ТекВр = ТекущаяДата();
	Наб.Отбор.Период.Установить(ТекВр);
	Наб.Отбор.Рейс.Установить(Рейс);
	
	Для Каждого Тек Из Заказы Цикл
		Нов = Наб.Добавить();
		Нов.Период = ТекВр;
		Нов.Рейс = Рейс;
		Нов.Заказ = Тек.Заказ;
		Нов.ТипОтвязки = Перечисления.ТипыОтвязкиЗаказовОтМашин.ЗаказНеПоместилсяВРейс;
		РаботаСАдминкойСервер.ОчиститьТранспортПоЗаказу(Тек.Заказ.Номер); //оптимизировать
		
		// Якурнов 06.08.2018 14:05:14
		Нов.ДокументРегистратор = Ссылка;
		
	КонецЦикла;	
	Наб.Записать();	
	
	РейсОбъект = Рейс.ПолучитьОбъект();
	РейсОбъект.Записать(РежимЗаписиДокумента.Запись);
	РейсОбъект.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры	

//+Степанов Задача № 3959
Процедура ОбработкаТЧИсключенныхЗаказов(ТекВр)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПогрузкаВАвтоИсключенныеИзРейсаЗаказы.Заказ КАК Заказ,
	               |	ПогрузкаВАвтоИсключенныеИзРейсаЗаказы.Заказ.Номер КАК ЗаказНомер
	               |ИЗ
	               |	Документ.ПогрузкаВАвто.ИсключенныеИзРейсаЗаказы КАК ПогрузкаВАвтоИсключенныеИзРейсаЗаказы
	               |ГДЕ
	               |	ПогрузкаВАвтоИсключенныеИзРейсаЗаказы.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() Тогда
		//Асеев 01.02.2021 (Задача № 3959)>>>
		Движения.НезагруженныеЗаказыВАвто.Очистить();
		Движения.НезагруженныеЗаказыВАвто.Записывать = Истина;
		//Асеев 01.02.2021 (Задача № 3959)<<<
		
		Наб = РегистрыСведений.ЗаказыКОтвязкеОтРейсов.СоздатьНаборЗаписей();
		ТекВр = ТекущаяДата();
		ТипОтвязки = Перечисления.ТипыОтвязкиЗаказовОтМашин.ЗаказПоступилНеПолностью;
		Наб.Отбор.Период.Установить(ТекВр);
		Наб.Отбор.Рейс.Установить(Рейс);
		
		Пока Выборка.Следующий() Цикл
			//Асеев 01.02.2021 (Задача № 3959)>>>
			Движение = Движения.НезагруженныеЗаказыВАвто.Добавить();
			Движение.Период = ТекВр;
			Движение.Заказ = Выборка.Заказ;
			Движение.Рейс  = Рейс;
			Движение.СтатусПогрузки = Перечисления.СтатусыПогрузкиЗаказовВАвто.ЗаказНеЗагружен;
			//Асеев 01.02.2021 (Задача № 3959)<<<
			
			Нов = Наб.Добавить();
			Нов.Период = ТекВр;
			Нов.Рейс = Рейс;
			Нов.Заказ = Выборка.Заказ;
			Нов.ТипОтвязки = ТипОтвязки;
			РаботаСАдминкойСервер.ОчиститьТранспортПоЗаказу(Выборка.ЗаказНомер); //оптимизировать
			
			// Якурнов 06.08.2018 14:05:14
			Нов.ДокументРегистратор = Ссылка;	
		КонецЦикла;	
		Наб.Записать();	
		
		РейсОбъект = Рейс.ПолучитьОбъект();
		РейсОбъект.Записать(РежимЗаписиДокумента.Запись);
		РейсОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
КонецПроцедуры	
//-Степанов Задача № 3959

Процедура ОбновлениеСтатусовВАдминке(Режим)
	
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();	
	Период = ТекущаяДата();
	
	
	// сформируем таблицу данных для по статусам
	ТаблицаДанных = ПолучитьДанныеОбновлениеСтатусовВАдминке();
	
	ТерминалОбработки = Рейс.ТерминалДоставки;
	ТерминалОбработкиКод = ТерминалОбработки.Код;
	
	Если Режим = РежимЗаписиДокумента.Проведение Тогда
		
		//// --- Отключено в рамках Задача № 2813
		//СтрТекстЗапроса="";
		//Стр2 = "";
		//ТекстСоставлен = Ложь;
		//Статус = 0;
		//
		//Для каждого Стр Из ТаблицаДанных Цикл
		//	Статус = Стр.Статус;
		//	СтрТекстЗапроса = СтрТекстЗапроса + "(" +Формат(Сокрлп(Стр.Номер), "ЧГ=") + ","+Стр.Статус+",'Online приход по ТСД (new)'"+")"+",";
		//	
		//	ТекстСоставлен = Истина;
		//	
		//КонецЦикла;
		//// текущий статус
		//Если ТекстСоставлен И ЗначениеЗаполнено(СтрТекстЗапроса) Тогда
		//	ДлинаТекста = СтрДлина(СтрТекстЗапроса);
		//	СтрТекстЗапроса = Лев(СтрТекстЗапроса,ДлинаТекста-1);
		//	ТекстЗапроса = "
		//	|DECLARE @t TOrderStatusId
		//	|INSERT INTO @t (orderID, statusId, comment) VALUES " +
		//	СтрТекстЗапроса +" EXEC import_setOrdersStatusIDFrom1C @t";
		//	Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Подкл);		
		//КонецЕсли;
		//// --- Отключено в рамках Задача № 2813
		
		
		// Задача № 2813
		МассивСтатусов = Неопределено;
		Для каждого Стр Из ТаблицаДанных Цикл
			ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалОбработкиКод)); // Задача № 3027
			МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Стр.Номер, Стр.Статус, "Online приход по ТСД (new)",,,МассивСтатусов, ДопПараметрыСтатуса);
		КонецЦикла;
		
		СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);
		// Задача № 2813
		
	КонецЕсли;
	
	//костыль
	ТаблицаДанных.Колонки.Добавить("БылоЗакрытие");
	
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДанных,,ТерминалОбработки);
	// Задача № 3027 //smv.СохранитьСтатус(ТаблицаДанных);
	
КонецПроцедуры


Функция ПолучитьДанныеОбновлениеСтатусовВАдминке()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПогрузкаВАвтоЗаказы.СтатусЗаказа.Код КАК Статус,
	|	ПогрузкаВАвтоЗаказы.Ссылка КАК ДокументРегистратор,
	|	ЛОЖЬ КАК ПредварительноеЗакрытие,
	|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
	|	РеализацияТоваровУслуг.ТерминалДоставки.Ссылка КАК Терминал,
	|	РеализацияТоваровУслуг.Номер КАК Номер
	|ИЗ
	|	Документ.ПогрузкаВАвто.Заказы КАК ПогрузкаВАвтоЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ПогрузкаВАвтоЗаказы.Заказ.Ссылка = РеализацияТоваровУслуг.Ссылка
	|ГДЕ
	|	ПогрузкаВАвтоЗаказы.Ссылка = &Док
	// МАС - 27.04.2018 - не учитываем строки с незаполненным статусом --->> 
	|	И ПогрузкаВАвтоЗаказы.СтатусЗаказа ЕСТЬ НЕ NULL 
	|	И ПогрузкаВАвтоЗаказы.СтатусЗаказа <> ЗНАЧЕНИЕ(Справочник.СтатусыЗаказов.ПустаяСсылка)";
	// <<--- МАС
	
	Запрос.УстановитьПараметр("Док", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции


