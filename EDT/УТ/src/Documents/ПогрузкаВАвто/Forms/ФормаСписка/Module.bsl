
&НаСервере
Функция ВнестиКорректировкуНаСервере(НоваяПогрузка)
	// Вставить содержимое обработчика.
	Док = Документы.КорректировкаПогрузкиЗаказовВАвто.СоздатьДокумент();
	Док.Дата = ТекущаяДата();
	Док.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	Нов = Док.Заказы.Добавить();
	Нов.ПогрузкаИсточник = ТекущаяПогрузка;
	Нов.ПогрузкаПриемник = НоваяПогрузка;
	Нов.Заказ = Заказ;
	
	//Асеев 03.04.2023 (Задача № 5025)>>>
	РежимДобавленияЗаказа = ТекущаяПогрузка.Пустая();
	//Асеев 03.04.2023 (Задача № 5025)<<<
	
	Если РежимДобавленияЗаказа Тогда
		Нов.РежимМодификации = Перечисления.РежимыМодификацииПогрузкиВАвто.ДобавлениеЗаказа;
	Иначе
		Нов.РежимМодификации = Перечисления.РежимыМодификацииПогрузкиВАвто.ПерекидкаЗаказа;
	КонецеСли;
	
	Док.Записать(РежимЗаписиДокумента.Запись);
	Док.Записать(РежимЗаписиДокумента.Проведение);
	
	Если Не РежимДобавленияЗаказа Тогда
		П = ТекущаяПогрузка.ПолучитьОбъект();
		СтрокаКУдалению = П.Заказы.Найти(Заказ);
		П.Заказы.Удалить(СтрокаКУдалению);
		П.Записать(РежимЗаписиДокумента.Запись);
		П.Записать(РежимЗаписиДокумента.Проведение);
	КонецеСли;	
	
	П = НоваяПогрузка.ПолучитьОбъект();
	Нов = П.Заказы.Добавить();
	Нов.Заказ = Заказ;
	Нов.КоличествоМест = 1;
	Нов.Корректировка = Истина;
	П.Записать(РежимЗаписиДокумента.Запись);
	Если РежимДобавленияЗаказа Тогда
		П.ДополнительныеСвойства.Вставить("ПерепроведениеПриКоррДобавленииЗаказа");
	КонецЕсли;
	П.Записать(РежимЗаписиДокумента.Проведение);
	Возврат Истина;
КонецФункции
&НаКлиенте
Процедура ВнестиКорректировку(Команда)
	Если Не ТекущаяПогрузка.Пустая() Тогда
		От = Вопрос("Заказ уже загружен. Перекинуть в другое авто?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если Не От = КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецеСли;	
	КонецеСли;	
	
	Струк = Новый Структура;
	Струк.Вставить("РежимВыбораЭлементов", Истина);
	Струк.Вставить("ТекущаяПогрузка", ТекущаяПогрузка);
	
	Ф = ПолучитьФорму("Документ.ПогрузкаВАвто.Форма.ФормаВыбораПогрузки", Струк);
	НоваяПогрузка = Ф.ОткрытьМодально();
	
	Если Не ЗначениеЗаполнено(НоваяПогрузка) Тогда
		Возврат;
	КонецеСли;
	
	
	Если ВнестиКорректировкуНаСервере(НоваяПогрузка) Тогда
		НомерЗаказаПриИзмененииНаСервере();
	КонецеСли;
	ИзминениеДоступностиКнопок();
КонецПроцедуры

Процедура ЗафиксироватьПечатьВедомости(Погрузка)
	МомВремени = ТекущаяДата();
	Наб = РегистрыСведений.РаспечатанныеРазблюдовкиПоПогрузкам.СоздатьНаборЗаписей();
	Наб.Отбор.ПогрузкаВАвто.Установить(Погрузка);
	Наб.Отбор.Период.Установить(МомВремени);
	
	Нов = Наб.Добавить();
	Нов.Период = МомВремени;
	Нов.ПогрузкаВАвто = Погрузка;
	
	Наб.Записать();
КонецПроцедуры	


Процедура ЗафиксироватьВозможныеРасхожденияМеждуРейсомИПогрузкой(Погрузка = Неопределено) 
	Зап = Новый Запрос;
	
	Если Погрузка <> Неопределено Тогда
		Зап.Текст = "ВЫБРАТЬ
		|	ЕСТЬNULL(ПогрузкаВАвтоЗаказы.Заказ.Ссылка, ЛОЖЬ) КАК ЗагруженныйЗаказ,
		|	ЕСТЬNULL(РейсЗаказы.Заказ.Ссылка, ЛОЖЬ) КАК ПривязанныйЗаказ
		|ИЗ
		|	Документ.ПогрузкаВАвто.Заказы КАК ПогрузкаВАвтоЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс.Заказы КАК РейсЗаказы
		|		ПО ПогрузкаВАвтоЗаказы.Ссылка.Рейс.Ссылка = РейсЗаказы.Ссылка
		|			И (ПогрузкаВАвтоЗаказы.Заказ.Ссылка = ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
		|			И (РейсЗаказы.ВидЗаказа.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыЗаказовВероут.drop))
		|ГДЕ
		|	ПогрузкаВАвтоЗаказы.Ссылка.Ссылка = &Погрузка
		|	И ЕСТЬNULL(ПогрузкаВАвтоЗаказы.Заказ.Ссылка, ЛОЖЬ) <> ЛОЖЬ
		|	И ЕСТЬNULL(РейсЗаказы.Заказ.Ссылка, ЛОЖЬ) = ЛОЖЬ";
		Зап.УстановитьПараметр("Погрузка", Погрузка.Ссылка);
	Иначе
		Зап.Текст = "ВЫБРАТЬ
		|	ЕСТЬNULL(ПогрузкаВАвтоЗаказы.Заказ.Ссылка, ЛОЖЬ) КАК ЗагруженныйЗаказ,
		|	ЕСТЬNULL(РейсЗаказы.Заказ.Ссылка, ЛОЖЬ) КАК ПривязанныйЗаказ,
		|	ПогрузкаВАвтоЗаказы.Ссылка.Ссылка КАК ПогрузкаВАвто
		|ИЗ
		|	Документ.ПогрузкаВАвто.Заказы КАК ПогрузкаВАвтоЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рейс.Заказы КАК РейсЗаказы
		|		ПО ПогрузкаВАвтоЗаказы.Ссылка.Рейс.Ссылка = РейсЗаказы.Ссылка
		|			И (ПогрузкаВАвтоЗаказы.Заказ.Ссылка = ВЫРАЗИТЬ(РейсЗаказы.Заказ КАК Документ.РеализацияТоваровУслуг).Ссылка)
		|			И (РейсЗаказы.ВидЗаказа.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыЗаказовВероут.drop))
		|ГДЕ
		|	ПогрузкаВАвтоЗаказы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ЕСТЬNULL(ПогрузкаВАвтоЗаказы.Заказ.Ссылка, ЛОЖЬ) <> ЛОЖЬ
		|	И ЕСТЬNULL(РейсЗаказы.Заказ.Ссылка, ЛОЖЬ) = ЛОЖЬ";
		Зап.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));
		Зап.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));
	КонецеСли;
	
	
	Рез_ = Зап.Выполнить();
	
	Если Рез_.Пустой() Тогда
		Возврат;
	КонецЕсли;	
	
	Рез = Рез_.Выбрать();
	
	МомВремени = ТекущаяДата();
	
	Если Погрузка <> Неопределено Тогда
		Наб = РегистрыСведений.ОтклоненияСпискаЗаказовПриПогрузкеВАвто.СоздатьНаборЗаписей();
		Наб.Отбор.ПогрузкаВАвто.Установить(Погрузка.Ссылка);
		Наб.Отбор.Период.Установить(МомВремени);
		
		Пока Рез.Следующий() Цикл
			Нов = Наб.Добавить();
			Нов.ПогрузкаВАвто = Погрузка.Ссылка;
			Нов.Заказ = Рез.ЗагруженныйЗаказ;
			Нов.Период = МомВремени;
		КонецЦикла;	
	Иначе
		Наб = РегистрыСведений.ОтклоненияСпискаЗаказовПриПогрузкеВАвто.СоздатьНаборЗаписей();
		Наб.Отбор.Период.Установить(МомВремени);
		
		Пока Рез.Следующий() Цикл
			Нов = Наб.Добавить();
			Нов.ПогрузкаВАвто = Рез.ПогрузкаВАвто;
			Нов.Заказ = Рез.ЗагруженныйЗаказ;
			Нов.Период = МомВремени;
		КонецЦикла;	
	КонецеСли;
	
	Наб.Записать();
	
КонецПроцедуры	

//Асеев 01.09.2020 (Задача № 4179)>>>
&НаСервереБезКонтекста
Функция ЕстьНесформированныйДокумент(Знач МассивПогрузок)
	
	Возврат Документы.ПогрузкаВАвто.ЕстьНесформированнаяПогрузкаВСписке(МассивПогрузок);
	
КонецФункции
//Асеев 01.09.2020 (Задача № 4179)<<<


&НаКлиенте
Процедура ПечатьВедомости(Команда)
	
	//+Степанов Печать нового варианта ведомости, старый закомментирован.
	Если Элементы.Список.ВыделенныеСтроки.Количество() > 0 Тогда
		МассивПогрузок = Новый Массив;
		Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
			МассивПогрузок.Добавить(ВыделеннаяСтрока);
			//Асеев 26.08.2020 (Задача № 4179)>>>
			//ПечатьДокументовСервер.ЗафиксироватьПечатьДокумента(ВыделеннаяСтрока);
			//Асеев 26.08.2020 (Задача № 4179)<<<
		КонецЦикла;	
		
		Элементы.Список.Обновить();
		
		//Асеев 26.08.2020 (Задача № 4179)>>>
		Если ЕстьНесформированныйДокумент(МассивПогрузок) Тогда
			ПоказатьПредупреждение(, "Подождите 15 секунд, документ еще не сформирован");
			Возврат;
		КонецЕсли;
		Для Каждого ВыделеннаяСтрока Из МассивПогрузок Цикл
			ПечатьДокументовСервер.ЗафиксироватьПечатьДокумента(ВыделеннаяСтрока);
		КонецЦикла;
		//Асеев 26.08.2020 (Задача № 4179)<<<
		
		СтруктураДанныхДляПечати = Документы.Рейс.ПолучитьТабличныйДокументИДанныеЗаказовКОтвязке_Старая(МассивПогрузок);	
		СтруктураДанныхДляПечати.ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
		СтруктураДанныхДляПечати.ТабличныйДокумент.ОтображатьСетку = Ложь;
		СтруктураДанныхДляПечати.ТабличныйДокумент.Показать();
		
		
		
		Если СтруктураДанныхДляПечати.ДанныеЗаказовКОтвязке.Количество() Тогда
			
			ТекстВопроса = "Обнаружены несобранные заказы: ";
			
			Для Каждого ЭлементСтруктуры Из СтруктураДанныхДляПечати.ДанныеЗаказовКОтвязке Цикл
				ТекстВопроса = ТекстВопроса + Символы.ПС + ЭлементСтруктуры.Заказ.Номер;
			КонецЦикла;	
			
			ТекстВопроса = ТекстВопроса + Символы.ПС + "Отвязать заказы?";
			
			ОписаниеОповещенияОтветаНаВопросОбОтвязке = Новый ОписаниеОповещения("ОбработкаОтветаНаВопросОбОтвязкеЗаказов",ЭтотОбъект,СтруктураДанныхДляПечати.ДанныеЗаказовКОтвязке);
			
			ПоказатьВопрос(ОписаниеОповещенияОтветаНаВопросОбОтвязке,ТекстВопроса,РежимДиалогаВопрос.ДаНет);		
			
		КонецЕсли;	
		
	КонецЕсли;	
	//-Степанов
	
	
	//Если Элементы.Список.ТекущаяСтрока = Неопределено Тогда
	//	Возврат;
	//КонецеСли;	
	//
	//ЗафиксироватьВозможныеРасхожденияМеждуРейсомИПогрузкой(Элементы.Список.ТекущаяСтрока);
	//РейсМД = ПолучитьРейсМД(Элементы.Список.ТекущаяСтрока.Рейс);
	//
	//В = Отчеты.ВедомостьПоМашинам.Создать();
	//Т = В.СформироватьИзРМК(РейсМД);
	//Если Т <> Неопределено Тогда
	//	may.РаспечаткаРазблюдовкиСклад(Элементы.Список.ТекущаяСтрока.Рейс, Ложь);
	//	//ЗафиксироватьПечатьВедомости(Элементы.Список.ТекущаяСтрока);
	//	ПечатьДокументовСервер.ЗафиксироватьПечатьДокумента(Элементы.Список.ТекущаяСтрока);
	//	Т.ТолькоПросмотр = Истина;
	//	Т.ПолеСлева = 3;
	//	Т.ПолеСправа = 3;
	//	Т.ПолеСверху = 3;
	//	Т.ПолеСнизу = 3;
	//	Т.ОтображатьСетку = Ложь;
	//	Т.ОтображатьЗаголовки = Ложь; 
	//	Т.ОтображатьГруппировки = Ложь; 
	//	Т.Автомасштаб = Истина;
	//	Т.Показать();
	//	may.РаспечаткаРазблюдовкиСклад(Элементы.Список.ТекущаяСтрока.Рейс, Истина);
	//	Элементы.Список.Обновить();
	//Иначе
	//	Сообщить("Нет данных для отчета!");
	//КонецеСли;	
КонецПроцедуры

Функция ПолучитьРейсМД(Рейс) 
	Возврат Рейс.РейсМестнойДоставки;
КонецФункции	

&НаКлиенте
Процедура НомерЗаказаПриИзменении(Элемент)
	ИзминениеДоступностиКнопок();	
КонецПроцедуры

&НаКлиенте
Процедура ИзминениеДоступностиКнопок()
	ЗаказНайден = НомерЗаказаПриИзмененииНаСервере();
	Если ЗаказНайден Тогда
		Элементы.ВнестиКорректировку.Доступность = Истина;
		Если ТекущаяПогрузка.Пустая() Тогда
			Элементы.КорректировкаПоМестам.Доступность = Ложь;
			Элементы.НеПоместилось.Доступность = Ложь;
		Иначе	
			Элементы.КорректировкаПоМестам.Доступность = Истина;
			Элементы.НеПоместилось.Доступность = Истина;
		КонецеСли;	
	Иначе
		Элементы.ВнестиКорректировку.Доступность = Ложь;
		Элементы.КорректировкаПоМестам.Доступность = Ложь;
		Элементы.НеПоместилось.Доступность = Ложь;
	КонецеСли;	
КонецПроцедуры

&НаСервере
Функция НомерЗаказаПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Заказ,
	|	ПогрузкаВАвтоЗаказы.Ссылка.Ссылка КАК ПогрузкаВАвто,
	|	ПривязкаМашинКРейсамСрезПоследних.Транспорт
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПогрузкаВАвто.Заказы КАК ПогрузкаВАвтоЗаказы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаМашинКРейсам.СрезПоследних КАК ПривязкаМашинКРейсамСрезПоследних
	|			ПО ПогрузкаВАвтоЗаказы.Ссылка.Рейс.Ссылка = ПривязкаМашинКРейсамСрезПоследних.Рейс.Ссылка
	|		ПО РеализацияТоваровУслуг.Ссылка = ПогрузкаВАвтоЗаказы.Заказ.Ссылка
	|			И (ПогрузкаВАвтоЗаказы.Ссылка.Рейс.ДатаРейса >= &ДатаРейса)
	|ГДЕ
	|	РеализацияТоваровУслуг.Номер = &Номер";
	Зап.УстановитьПараметр("Номер", НомерЗаказа);			
	Зап.УстановитьПараметр("ДатаРейса", НачалоДня(ТекущаяДата()));			
	
	Рез = Зап.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
		Заказ = Рез.Заказ;
		ТекущаяПогрузка = Рез.ПогрузкаВАвто;
		ТекущийТранспорт = Рез.Транспорт;
		Возврат Истина;
	Иначе
		Заказ = "";
		ТекущаяПогрузка = "";
		ТекущийТранспорт = "";
		Возврат Ложь;
	КонецеСли;	
КонецФункции

&НаКлиенте
Процедура ПечатьОбщейВедомости(Команда)
	ЗафиксироватьВозможныеРасхожденияМеждуРейсомИПогрузкой();
	В = Отчеты.ВедомостьПоМашинам.Создать();
	Т = В.СформироватьИзРМК();
	Если Т <> Неопределено Тогда
		Т.ТолькоПросмотр = Истина;
		Т.ПолеСлева = 3;
		Т.ПолеСправа = 3;
		Т.ПолеСверху = 3;
		Т.ПолеСнизу = 3;
		Т.ОтображатьСетку = Ложь;
		Т.ОтображатьЗаголовки = Ложь; 
		Т.ОтображатьГруппировки = Ложь; 
		Т.Автомасштаб = Истина;
		Т.Показать();
	Иначе
		Сообщить("Нет данных для отчета!");
	КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура КорректировкаПоМестам(Команда)
	Если ТекущаяПогрузка.Пустая() Тогда
		Сообщить("Заказ не загружен ни в один рейс, корректировка невозможна!", СтатусСообщения.ОченьВажное);
	КонецеСли;	
	
	КолМест = 1;
	
	
	Если Не ВвестиЧисло(КолМест, "Новое количество мест...", 2, 0) Тогда
		Возврат;
	КонецЕсли;	
	
	Если КолМест < 1 Тогда
		Возврат;
	КонецЕсли;	
	От = Вопрос("Убрать не поместившиеся места из заказа?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
	Если Не От = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	Если ВнестиКорректировкуМестНаСервере(КолМест) Тогда
		НомерЗаказаПриИзмененииНаСервере();
	КонецеСли;
	ИзминениеДоступностиКнопок();
КонецПроцедуры


&НаСервере
Функция ВнестиКорректировкуМестНаСервере(КолМест)
	// Вставить содержимое обработчика.
	Док = Документы.КорректировкаПогрузкиЗаказовВАвто.СоздатьДокумент();
	Док.Дата = ТекущаяДата();
	Док.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	Нов = Док.Заказы.Добавить();
	Нов.ПогрузкаИсточник = ТекущаяПогрузка;
	Нов.ПогрузкаПриемник = ТекущаяПогрузка;
	Нов.Заказ = Заказ;
	Нов.РежимМодификации = Перечисления.РежимыМодификацииПогрузкиВАвто.ИзменениеКоличестваМест;
	Нов.КоличествоМест = КолМест;
	
	Док.Записать(РежимЗаписиДокумента.Запись);
	Док.Записать(РежимЗаписиДокумента.Проведение);
	
	П = ТекущаяПогрузка.ПолучитьОбъект();
	СтрокаЗаказа = П.Заказы.Найти(Заказ);
	СтрокаЗаказа.КоличествоМест = КолМест;
	СтрокаЗаказа.КорректировкаКоличестваМест = Истина;
	
	П.Записать(РежимЗаписиДокумента.Запись);
	П.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура НеПоместилось(Команда)
	Если ТекущаяПогрузка.Пустая() Тогда
		Сообщить("Заказ не загружен ни в один рейс, корректировка невозможна!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецЕсли;	
	
	Если ВнестиКорректировкуНеПоместилось() Тогда
		НомерЗаказаПриИзмененииНаСервере();
	КонецЕсли;
	ИзминениеДоступностиКнопок();
КонецПроцедуры

&НаСервере
Функция ВнестиКорректировкуНеПоместилось()
	// Вставить содержимое обработчика.
	Док = Документы.КорректировкаПогрузкиЗаказовВАвто.СоздатьДокумент();
	Док.Дата = ТекущаяДата();
	Док.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	Нов = Док.Заказы.Добавить();
	Нов.ПогрузкаИсточник = ТекущаяПогрузка;
	Нов.ПогрузкаПриемник = ТекущаяПогрузка;
	Нов.Заказ = Заказ;
	Нов.РежимМодификации = Перечисления.РежимыМодификацииПогрузкиВАвто.ЗаказНеПоместился;
	
	Док.Записать(РежимЗаписиДокумента.Запись);
	Док.Записать(РежимЗаписиДокумента.Проведение);
	
	П = ТекущаяПогрузка.ПолучитьОбъект();
	СтрокаЗаказа = П.Заказы.Найти(Заказ);
	Если СтрокаЗаказа <> Неопределено Тогда
		П.Заказы.Удалить(СтрокаЗаказа);
	КонецЕсли;
	
	П.Записать(РежимЗаписиДокумента.Запись);
	П.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ПоказатьКорзину(Команда)
	Кнопка = Этаформа.Элементы.ФормаПоказатьКорзину;
	Кнопка.Пометка = НЕ Кнопка.Пометка;
	Этаформа.Элементы.Корзина.Видимость = Кнопка.Пометка;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекДата = ТекущаяДата();
	Корзина.Параметры.УстановитьЗначениеПараметра("ДатаНач",НачалоДня(ТекДата));
	Корзина.Параметры.УстановитьЗначениеПараметра("ДатаКон",КонецДня(ТекДата));
	
	ТекТерминал = ПараметрыСеанса.ТерминалДоставки;	
	ТерминалСпис = Новый Массив;
	
	Если ЗначениеЗаполнено(ТекТерминал) Тогда	
		ТерминалСпис.Добавить(ТекТерминал);		
	Иначе
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.МоскваСтриж);
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.СПбСтриж);
		ТерминалСпис.Добавить(Справочники.РегиональныеТерминалы.ПустаяСсылка());
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ТерминалДоставки", ТерминалСпис);
	
	ЭтапПогрузки = ПредопределенноеЗначение("Справочник.ЭтапыПогрузкиЗаказовВТранспорт.Сортировка");
	
	// МАС - 04.10.2017 - № --->> 	
	ИП = "ЭтапПогрузки";
	ПЗ = ЭтапПогрузки;
	Исп = Истина;
	ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
	ИП,
	ПЗ,
	,
	,
	Исп,
	,
	);
	
	ТекущийЭлемент = Элементы.Список;
	Shell = Новый COMОбъект("WScript.Shell");
	Shell.SendKeys("^{END}");													
	// <<--- МАС 						
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапПогрузки1ПриИзменении(Элемент)
	
	
	Если ЭтапПогрузки.Пустая() Тогда
		ИП = "ЭтапПогрузки";
		ПЗ = ПредопределенноеЗначение("Справочник.ЭтапыПогрузкиЗаказовВТранспорт.ПустаяСсылка");
		Исп = Ложь;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
		ИП,
		ПЗ,
		,
		,
		Исп,
		,
		);
	Иначе	
		ИП = "ЭтапПогрузки";
		ПЗ = ЭтапПогрузки;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
		ИП,
		ПЗ,
		,
		,
		Исп,
		,
		);
	КонецЕСли;	
	
	ТекущийЭлемент = Элементы.Список;
	Shell = Новый COMОбъект("WScript.Shell");
	Shell.SendKeys("^{END}");
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьВедомостиТест(Команда)
	//+Степанов Печать нового варианта ведомости, старый закомментирован.
	Если Элементы.Список.ВыделенныеСтроки.Количество() > 0 Тогда
		МассивПогрузок = Новый Массив;
		Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
			МассивПогрузок.Добавить(ВыделеннаяСтрока);
			ПечатьДокументовСервер.ЗафиксироватьПечатьДокумента(ВыделеннаяСтрока);
		КонецЦикла;	
		
		Элементы.Список.Обновить();
		
		СтруктураДанныхДляПечати = Документы.Рейс.ПолучитьТабличныйДокументИДанныеЗаказовКОтвязке(МассивПогрузок);	
		СтруктураДанныхДляПечати.ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
		СтруктураДанныхДляПечати.ТабличныйДокумент.ОтображатьСетку = Ложь;
		СтруктураДанныхДляПечати.ТабличныйДокумент.Показать();
		
		
		
		Если СтруктураДанныхДляПечати.ДанныеЗаказовКОтвязке.Количество() Тогда
			
			ТекстВопроса = "Обнаружены несобранные заказы: ";
			
			Для Каждого ЭлементСтруктуры Из СтруктураДанныхДляПечати.ДанныеЗаказовКОтвязке Цикл
				ТекстВопроса = ТекстВопроса + Символы.ПС + ЭлементСтруктуры.Заказ.Номер;
			КонецЦикла;	
			
			ТекстВопроса = ТекстВопроса + Символы.ПС + "Отвязать заказы?";
			
			ОписаниеОповещенияОтветаНаВопросОбОтвязке = Новый ОписаниеОповещения("ОбработкаОтветаНаВопросОбОтвязкеЗаказов",ЭтотОбъект,СтруктураДанныхДляПечати.ДанныеЗаказовКОтвязке);
			
			ПоказатьВопрос(ОписаниеОповещенияОтветаНаВопросОбОтвязке,ТекстВопроса,РежимДиалогаВопрос.ДаНет);		
			
		КонецЕсли;	
		
	КонецЕсли;	
	//-Степанов
	
	//
	//Если Элементы.Список.ТекущаяСтрока = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;	
	
	
	//Ведомость = Отчеты.ОтчетВедомостьПогрузкиВАвто.Создать();
	//Т = Ведомость.СформироватьИзРМК(Элементы.Список.ТекущаяСтрока.Рейс);
	//
	//Если Т <> Неопределено Тогда
	//	//may.РаспечаткаРазблюдовкиСклад(Элементы.Список.ТекущаяСтрока.Рейс, Ложь);
	//	//ЗафиксироватьПечатьВедомости(Элементы.Список.ТекущаяСтрока);
	//	Т.ТолькоПросмотр = Истина;
	//	Т.ПолеСлева = 3;
	//	Т.ПолеСправа = 3;
	//	Т.ПолеСверху = 3;
	//	Т.ПолеСнизу = 3;
	//	Т.ОтображатьСетку = Ложь;
	//	//Т.ОтображатьЗаголовки = Ложь; 
	//	//Т.ОтображатьГруппировки = Ложь; 
	//	Т.Автомасштаб = Истина;
	//	Т.Показать();
	//	//may.РаспечаткаРазблюдовкиСклад(Элементы.Список.ТекущаяСтрока.Рейс, Истина);
	//	//Элементы.Список.Обновить();
	//Иначе
	//	Сообщить("Нет данных для отчета!");
	//КонецеСли;	
	
	//
	////Парам = Новый Структура("ПогрузкаВАвто",Элементы.Список.ТекущаяСтрока.Ссылка);
	////ОткрытьФорму("Отчет.ОтчетВедомостьПогрузкиВАвто.Форма.ФормаОтчета",Парам);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДоставкиСОтклонениямиКоличестваСпискомПровестиИЗакрытьНаСервере(Знач ДокументОтвязки)
	
	Док = ДокументОтвязки.ПолучитьОбъект();
	Док.ПровестиИЗакрытьНаСервере();
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбработкаОтветаНаВопросОбОтвязкеЗаказов(Результат,ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		СозданныйДокумент = СозданиеДокументовОтвязки(ДополнительныеПараметры);
		Если СозданныйДокумент = Неопределено Тогда
			ПоказатьПредупреждение(,"Не удалось создать документ!");
		Иначе
			//ПараметрыФормы = Новый Структура("Ключ",СозданныйДокумент);
			//ФормаДокумента = ПолучитьФорму("Документ.ДоставкиСОтклонениямиКоличестваСписком.Форма.ФормаДокумента",ПараметрыФормы);
			////ФормаДокумента.ПровестиИЗакрытьНаКлиенте();//ПоказатьЗначение(,СозданныйДокумент);
			//ФормаДокумента.ПровестиИЗакрытьНаСервере();
			ДоставкиСОтклонениямиКоличестваСпискомПровестиИЗакрытьНаСервере(СозданныйДокумент);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Функция СозданиеДокументовОтвязки(МассивДанныхЗаказов)
	
	ТаблицаЗаказовДляОтвзяки = Новый ТаблицаЗначений;
	ТаблицаЗаказовДляОтвзяки.Колонки.Добавить("Рейс",Новый ОписаниеТипов("ДокументСсылка.Рейс"));
	ТаблицаЗаказовДляОтвзяки.Колонки.Добавить("Заказ",Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
	
	Для Каждого СтруктураДанныхЗаказа Из МассивДанныхЗаказов Цикл
		НоваяСтрока = ТаблицаЗаказовДляОтвзяки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанныхЗаказа);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТЗ.Рейс КАК Рейс,
	|	ТЗ.Заказ КАК Заказ
	|ПОМЕСТИТЬ втТаблицаЗаказов
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	докРейс.Ссылка КАК Рейс,
	|	втТаблицаЗаказов.Заказ КАК Заказ,
	|	докРейс.ТерминалДоставки КАК ТерминалДоставки,
	|	докРейс.РейсМестнойДоставки КАК РейсМестнойДоставки
	|ИЗ
	|	втТаблицаЗаказов КАК втТаблицаЗаказов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рейс КАК докРейс
	|		ПО втТаблицаЗаказов.Рейс = докРейс.Ссылка
	|ИТОГИ
	|	МАКСИМУМ(ТерминалДоставки)
	|ПО
	|	Рейс";
	Запрос.УстановитьПараметр("ТЗ",ТаблицаЗаказовДляОтвзяки);
	
	ВыборкаПоРейсам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоРейсам.Следующий() Цикл
		
		ДокументОтвязки = Документы.ДоставкиСОтклонениямиКоличестваСписком.СоздатьДокумент();
		ДокументОтвязки.Дата = ТекущаяДата();
		ДокументОтвязки.Рейс = ВыборкаПоРейсам.Рейс;
		ДокументОтвязки.ТерминалДоставки = ВыборкаПоРейсам.ТерминалДоставки;
		ДокументОтвязки.МаршрутизацияVeeroute = Истина;
		
		ВыборкаПоЗаказам = ВыборкаПоРейсам.Выбрать();
		Пока ВыборкаПоЗаказам.Следующий() Цикл
			НоваяСтрока = ДокументОтвязки.Доставки.Добавить();
			НоваяСтрока.Доставка = ВыборкаПоЗаказам.Заказ;
			НоваяСтрока.ДоставкаОтменена = Истина;
			НоваяСтрока.Рейс = ВыборкаПоЗаказам.РейсМестнойДоставки;
			НоваяСтрока.РейсV = ВыборкаПоЗаказам.Рейс;
		КонецЦикла;	
		
		Попытка
			ДокументОтвязки.Записать(РежимЗаписиДокумента.Запись);
			Возврат ДокументОтвязки.Ссылка;
		Исключение	
			Возврат Неопределено;
		КонецПопытки;
	КонецЦикла;	
	
	
КонецФункции	