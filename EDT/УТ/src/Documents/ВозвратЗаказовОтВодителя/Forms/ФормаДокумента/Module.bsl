
&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	Если Элементы.Доставки.ТекущиеДанные <> Неопределено Тогда
		
		ТекДоставка = Элементы.Доставки.ТекущиеДанные;	
		
		Если НЕ ТекДоставка.ЗаполненоПоДаннымБД Тогда
			Элементы.Товары.Доступность = Истина;	
		Иначе
			Отказ = истина;
		КонецЕсли;
	Иначе
		Отказ = истина;
	КонецЕСли;
		
		
КонецПроцедуры

&НаКлиенте
Процедура ДоставкаПриИзмененииНаСервере(ТекСтр)
	//Струк = Новый Структура;
	//Струк.Вставить("Доставка",  Элементы.Доставки.ТекущиеДанные.Доставка);
	//НайСтр = Объект.Товары.НайтиСтроки(Струк);
	//Для Каждого Тек Из НайСтр Цикл
	//	Объект.Товары.Удалить(Тек);
	//КонецЦикла;	
	//
	//Зап = Новый Запрос;
	//Зап.Текст = "ВЫБРАТЬ
	//            |	РеализацияТоваровУслугТовары.Номенклатура,
	//            |	РеализацияТоваровУслугТовары.Цена,
	//            |	РеализацияТоваровУслугТовары.Количество КАК КоличествоИсходное
	//            |ИЗ
	//            |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	//            |ГДЕ
	//            |	РеализацияТоваровУслугТовары.Ссылка.Номер = &Номер
	//            |
	//            |ОБЪЕДИНИТЬ ВСЕ
	//            |
	//            |ВЫБРАТЬ
	//            |	РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
	//            |	0,
	//            |	РеализацияТоваровУслугПодарочныеПозиции.Количество
	//            |ИЗ
	//            |	Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
	//            |ГДЕ
	//            |	РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер = &Номер";
	//зап.УстановитьПараметр("Номер", ТекСтр.Доставка.Номер);
	//Рез = зап.Выполнить().Выгрузить();
	//Для каждого Тек Из Рез Цикл
	//	Нов = Объект.Товары.Добавить();
	//	ЗаполнитьЗначенияСвойств(Нов, Тек);
	//	Нов.Доставка = ТекСтр.Доставка;
	//КонецЦикла;	
	//
	//Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("Доставка", Элементы.Доставки.ТекущиеДанные.Доставка.Ссылка); 
	//элементы.Товары.Обновить();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДополнительныеДанныеДляОтображения()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТоваров", Объект.Товары.Выгрузить(, "НомерСтроки,Доставка,Номенклатура"));
	Запрос.УстановитьПараметр("ТаблицаМест", Объект.МестаЗаказов.Выгрузить(, "НомерСтроки,Доставка"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Доставка КАК Доставка,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаМест.НомерСтроки КАК НомерСтроки,
	|	ТаблицаМест.Доставка КАК Доставка
	|ПОМЕСТИТЬ ВТ_Места
	|ИЗ
	|	&ТаблицаМест КАК ТаблицаМест
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	КОЛИЧЕСТВО(ИСТИНА) КАК НомерС
	|ПОМЕСТИТЬ ВТ_ТоварыДопДанные
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары_Количество
	|		ПО ВТ_Товары.Доставка = ВТ_Товары_Количество.Доставка
	|			И ВТ_Товары.НомерСтроки >= ВТ_Товары_Количество.НомерСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т_Номенклатура.Артикул + ""/"" + Т_Номенклатура.Код КАК АртикулКод,
	|	ВТ_ТоварыДопДанные.НомерС КАК НомерС
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Т_Номенклатура
	|		ПО ВТ_Товары.Номенклатура = Т_Номенклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыДопДанные КАК ВТ_ТоварыДопДанные
	|		ПО ВТ_Товары.НомерСтроки = ВТ_ТоварыДопДанные.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Товары.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Места.НомерСтроки КАК НомерСтроки,
	|	КОЛИЧЕСТВО(ИСТИНА) КАК НомерС
	|ИЗ
	|	ВТ_Места КАК ВТ_Места
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Места КАК ВТ_Места_Количество
	|		ПО ВТ_Места.Доставка = ВТ_Места_Количество.Доставка
	|			И ВТ_Места.НомерСтроки >= ВТ_Места_Количество.НомерСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Места.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатПакета[3].Выбрать();
	Для Каждого СтрокаТовара Из Объект.Товары Цикл
		Выборка.Следующий();
		СтрокаТовара.АртикулКодТовара = Выборка.АртикулКод;
		СтрокаТовара.НомерС = Выборка.НомерС;
	КонецЦикла;
	
	Выборка = РезультатПакета[4].Выбрать();
	Для Каждого СтрокаМеста Из Объект.МестаЗаказов Цикл
		Выборка.Следующий();
		СтрокаМеста.НомерС = Выборка.НомерС;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставкиПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.Доставки.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		НомерСтрокиДоставки = 0;
	
	ИначеЕсли НомерСтрокиДоставки <> ТекДанные.НомерСтроки Тогда
		НомерСтрокиДоставки = ТекДанные.НомерСтроки;
		
		СтруктураОтбора = Новый ФиксированнаяСтруктура("Доставка", ТекДанные.Доставка);
		
		//Доставка = Элементы.Доставки.ТекущиеДанные.Доставка;
	
		//Ном = 1;
		//Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("Доставка", Доставка);
		Элементы.Товары.ОтборСтрок = СтруктураОтбора; 
		//МасСтрок = Объект.Товары.НайтиСтроки(Новый Структура("Доставка", Доставка));
		//Для каждого Стр Из МасСтрок Цикл	
		//	Стр.НомерС = Ном;	
		//	Ном = Ном + 1;
		//	//Асеев 14.10.2020 (по письму Re: 5713884 / 305627)>>>
		//	//Стр.АртикулКодТовара = СокрЛП(Стр.Номенклатура.Код) + "/" + СокрЛП(Стр.Номенклатура.Код);
		//	Стр.АртикулКодТовара = СокрЛП(Стр.Номенклатура.Артикул) + "/" + СокрЛП(Стр.Номенклатура.Код);
		//	//Асеев 14.10.2020 (по письму Re: 5713884 / 305627)<<<
		//КонецЦикла;	
		
		//Ном = 1;
		//Элементы.МестаЗаказов.ОтборСтрок = Новый ФиксированнаяСтруктура("Доставка", Доставка);
		Элементы.МестаЗаказов.ОтборСтрок = СтруктураОтбора;
		//МасСтрокМ = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", Доставка));
		//Для каждого Стр Из МасСтрокМ Цикл	
		//	Стр.НомерС = Ном;	
		//	Ном = Ном + 1;	
		//КонецЦикла;		
		
		//ТекДоставка = Элементы.Доставки.ТекущиеДанные;
								
		//CeHbKA
		//Элементы.МестаЗаказов.ОтборСтрок = Новый ФиксированнаяСтруктура("Доставка", Доставка); 
		//Элементы.МестаЗаказов.ТолькоПросмотр = (ТекДанные.РезультатДоставки = ПредопределенноеЗначение("Справочник.новаРезультатМестнойДоставки.Выполнена"));
		//Элементы.ТоварыВвестиШК.Доступность = Истина;
		//CeHbKA
		
				
		// МАС - 23.07.2018 - № --->> 
		//НайМест = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", Доставка));
		//Элементы.МестаЗаказов.ТолькоПросмотр = НЕ НайМест.Количество();
		// <<--- МАС 	
		
		ОбновитьВидимостьДоступностьЭлементов();
		
	КонецЕСли;	
	
	
	//Асеев 25.03.2021 (по письму Отказ с заездом)>>>
	//ТекДанные = Элементы.Доставки.ТекущиеДанные;	
	//
	//Если ТекДанные <> Неопределено Тогда		
	//	Если ТекДанные.РезультатДоставки = ПредопределенноеЗначение("Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично")
	//		ИЛИ (ТекДанные.ПричинаНеВыполненияДоставки = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом") И (ТекДанные.БылоВскрытиеЗаказа ИЛИ ТекДанные.Вскрытый)) Тогда				
	//		
	//		Элементы.Товары.ТолькоПросмотр = Ложь;		
	//		Элементы.МестаЗаказов.ТолькоПросмотр = Истина;
	//	Иначе			
	//		Элементы.Товары.ТолькоПросмотр = Истина;					
	//	КонецЕсли;	
	//КонецЕсли;
	//ОбновитьВидимостьДоступностьЭлементов();
	//Асеев 25.03.2021 (по письму Отказ с заездом)<<<
	
	//Элементы.Товары.ВыделенныеСтроки.Очистить();
	//Элементы.Товары.ТекущийЭлемент = Неопределено;
	//
	//Элементы.МестаЗаказов.ВыделенныеСтроки.Очистить();
	//Элементы.МестаЗаказов.ТекущийЭлемент = Неопределено;
		
	//Асеев 12.08.2024 (по письму Доработка визуализации приемки)>>>
	Если ИндексСтрокиТовары > -1 Тогда
		Если Элементы.Товары.ТекущаяСтрока <> ИндексСтрокиТовары Тогда
			Элементы.Товары.ТекущаяСтрока = ИндексСтрокиТовары;
		КонецЕсли;
		ИндексСтрокиТовары = -1;
	КонецЕсли;
	//Асеев 12.08.2024 (по письму Доработка визуализации приемки)<<<
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ДоставкиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ЗначениеЗаполнено(Элементы.Доставки.ТекущиеДанные.Доставка) Тогда
		Если Не ОтменаРедактирования Тогда
			Сообщить("Не указана доставка!");
			Отказ = Истина;
		КонецеСли;
	КонецеСли;	
	
	Отм = Ложь;
	
	Если Не Отказ Тогда
		
		Струк = Новый Структура;
		Струк.Вставить("Доставка",  Элементы.Доставки.ТекущиеДанные.Доставка);
		НайСтр = Объект.Доставки.НайтиСтроки(Струк);
		
		Если НайСтр.Количество() > 1 Тогда
			Если Не ОтменаРедактирования Тогда
				Сообщить("Доставка " + Элементы.Доставки.ТекущиеДанные.Доставка + " уже вбита в документ!");
				Отказ = Истина;
			Иначе
				Отм = Истина;				
			КонецеСли;
		КонецЕсли;
		
		//Зап = Новый Запрос;
		//Зап.Текст = "ВЫБРАТЬ
		//            |	РеализацияТоваровУслуг.Ссылка КАК Доставка
		//            |ИЗ
		//            |	Документ.новаОтчетВодителя.Задания КАК новаОтчетВодителяЗадания
		//            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		//            |		ПО новаОтчетВодителяЗадания.Задание.Номер = РеализацияТоваровУслуг.Номер
		//            |ГДЕ
		//            |	новаОтчетВодителяЗадания.Ссылка.Ссылка = &Отчет";
		//Зап.УстановитьПараметр("Отчет", Объект.ОтчетВодителя);		
		//Рез = Зап.Выполнить().Выгрузить();
		//
		//НайСтр = Рез.НайтиСтроки(Струк);
		//Если НайСтр.Количество() = 0 Тогда
		//	Если Не ОтменаРедактирования Тогда
		//		Сообщить("Доставка " + Элементы.Доставки.ТекущиеДанные.Доставка + " не доставлялась выбранным рейсом!");
		//		Отказ = Истина;
		//	Иначе
		//		Отм = Истина;
		//	КонецеСли;
		//КонецЕсли;		
	КонецеСли;
	
	
	Если Не Отказ И Не Отм Тогда
		ДоставкаПриИзмененииНаСервере(Элементы.Доставки.ТекущиеДанные);
	КонецеСли;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставкиПередУдалением(Элемент, Отказ)
	
	Струк = Новый Структура;
	Струк.Вставить("Доставка", Элементы.Доставки.ТекущиеДанные.Доставка.Ссылка);
	Най = Объект.Товары.НайтиСтроки(Струк);
	Для Сч = 0 По Най.Количество() - 1 Цикл
		Объект.Товары.Удалить(Най[Сч]);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВернулосьВсё(Команда)
	Если Элементы.Доставки.ТекущиеДанные <> Неопределено Тогда
		Струк = Новый Структура;
		Струк.Вставить("Доставка", Элементы.Доставки.ТекущиеДанные.Доставка);
		Най = Объект.Товары.НайтиСтроки(Струк);
		Для Сч = 0 По Най.Количество() - 1 Цикл
			Най[Сч].Количество = Най[Сч].КоличествоИсходное;
			Най[Сч].Сумма = Окр(Най[Сч].Цена*Най[Сч].Количество, 2);
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Элементы.Товары.ТекущиеДанные.Сумма = Окр(Элементы.Товары.ТекущиеДанные.Цена*Элементы.Товары.ТекущиеДанные.Количество, 2);
	
	Элементы.Товары.ВыделенныеСтроки.Очистить();
	//Элементы.Товары.ТекущийЭлемент = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставкиДоставкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
			
	//ДоставкиДоставкаОбработкаВыбораНаСервере(ВыбранноеЗначение);		
	СтандартнаяОбработка = Ложь;
	ДанныеСтроки = ДобавитьЗаказ(ВыбранноеЗначение);
	ТекДанные = Элементы.Доставки.ТекущиеДанные;
	
	Если ТекДанные <> Неопределено И ДанныеСтроки <> Неопределено Тогда	
		ЗаполнитьЗначенияСвойств(ТекДанные, ДанныеСтроки);		
	КонецЕсли;		
	
КонецПроцедуры

&НаСервере
Процедура ДоставкиДоставкаОбработкаВыбораНаСервере(ВыбранноеЗначение)
	
	//ТекДанные = Элементы.Доставки.ТекущаяСтрока;	
	
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Ссылка,
	//                      |	ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Реализация,
	//                      |	ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Водитель,
	//                      |	ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Транспорт
	//                      |ИЗ
	//                      |	Документ.ДанныеЗаказаВодителя.ДоставленныеТовары КАК ДанныеЗаказаВодителяДоставленныеТовары
	//                      |ГДЕ
	//                      |	ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Реализация = &Реализация
	//                      |	И ДанныеЗаказаВодителяДоставленныеТовары.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2");
	//Запрос.УстановитьПараметр("Реализация", ВыбранноеЗначение);
	//Запрос.УстановитьПараметр("Дата1", НачалоДня(Объект.Рейс.Дата));
	//Запрос.УстановитьПараметр("Дата2", КонецДня(Объект.Рейс.Дата));
	//Рез = Запрос.Выполнить().Выбрать();	
	
	
КонецПроцедуры


Процедура УстановитьДоступностьЭлементов()

	//1. Заказ полностью отказной - доступен реквизит ПринятНаСкладеПолностью, ПринятНаСкладеЧастично - недоступен, ТЧ Товары недоступна.
	//2. Заказ перенесен - аналогично п.2
	//3. Заказ выполнен, при этом заказ возвратный или обменный - заполняем реквизит ВозвратТоваров, доступность галок аналогично п.1
	//4. Заказ выполнен частично - обратно пункту 1, становится доступна ТЧ товаров для указания данных по товарам.

	//Для каждого Стр Из Объект.Доставки Цикл
	//	Если  Тогда
	//	
	//		Стр.	
	//	
	//	КонецЕсли;
	//
	//	
	//
	//КонецЦикла;
	

КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьСерверТО().ПодключитьКлиента(ЭтаФорма);
	
	Элементы.Рейс.Доступность = (ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоНаименованию("Администратор УТЛ"));
	
	ОбновитьОтображение_ТолькоКВозврату(Истина);
		
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	
	ПолучитьСерверТО().ОтключитьКлиента(ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
// Процедура - обработчик внешнего событие, которое возникает при посылке
// внешним приложением сообщения, сформированного в специальном формате.
// Внешнее событие сначала обрабатывается всеми открытыми формами, имеющими
// обработчик этого события, а затем может быть обработано в процедуре модуля
// приложения с именем ОбработкаВнешнегоСобытия().
//
// Параметры:
//  Источник - <Строка>
//           - Источник внешнего события.
//
//  Событие  - <Строка>
//           - Наименование события.
//
//  Данные   - <Строка>
//           - Данные для события.
//
Процедура ВнешнееСобытие(Источник, Событие, Данные)  Экспорт 

	
	Если НЕ ЗначениеЗаполнено(Данные) Тогда
		Возврат;
	КонецЕсли;
		
	Данные = СокрЛП(Данные);
	
	Если Лев(Данные, 2) = "37" И СтрДлина(Данные) = 13 Тогда
		НомерР = Лев(Данные, СтрДлина(Данные) - 1);	
	Иначе
		НомерР = Данные;
	КонецЕсли;
	
	СигналНужен = ОбработатьШК(Данные);
	
	Если СигналНужен Тогда	
		Сигнал();		
	КонецЕсли;
	
			
	
КонецПроцедуры // ВнешнееСобытие()


&НаКлиенте
Функция ОбработатьШК(Данные, РучнойВвод = Ложь)
	
	СигналНужен = Ложь;
	
	Если Объект.Проведен Тогда
		Сообщить("Документ проведен");	
		Возврат СигналНужен;	
	КонецЕсли;
	
	//+Степанов
	МассивПолучателей = Новый Массив;
	МассивПолучателей.Добавить("evgeniy.marochkin@strizh-logistic.ru");
	МассивПолучателей.Добавить("n.stepanov@strizh-logistic.ru");
	//-Степанов
	
	// Ищем ШК в ТЧ Штрихкоды
	//+Степанов обертывание в попытку
	//CeHbKA #4073 16.07.2020
	Если СтрДлина(Данные) > 100 Тогда
		
		Данные = Лев(Данные, 31);
		
		НайШК = Новый Массив;
		
		Для каждого СтрокаТЧ из Объект.Штрихкоды цикл
			Если СтрНайти(Данные, СтрокаТЧ.Штрихкод) > 0 Тогда
				НайШК.Добавить(СтрокаТЧ);
				Прервать;
			КонецЕсли;
		КонецЦикла;	
	Иначе	
		Попытка
			НайШК = Объект.Штрихкоды.НайтиСтроки(Новый Структура("Штрихкод", Данные));	
			Если НЕ НайШК.Количество() И Строка(Лев(Данные, 5)) = "37000" Тогда
				Данные = Лев(Данные, 12);		
			КонецЕсли;	
			НайШК = Объект.Штрихкоды.НайтиСтроки(Новый Структура("Штрихкод", Данные));
		Исключение
			НайШК = Новый Массив;			
			Сообщить("Попытка поиска в ТЧ Штрихкоды " + ОписаниеОшибки());
			lem.ОтправитьСообщение(МассивПолучателей, "Ошибка сканирования в документе документе приемки", "Попытка поиска в ТЧ Штрихкоды " + Символы.ПС + ОписаниеОшибки(),,"Стриж УТЛ");
		КонецПопытки;	
	КонецЕсли;
	//CeHbKA #4073 16.07.2020
		
	//Попытка
	//	НайШК = Объект.Штрихкоды.НайтиСтроки(Новый Структура("Штрихкод", Данные));	
	//	Если НЕ НайШК.Количество() И Строка(Лев(Данные, 5)) = "37000" Тогда
	//		Данные = Лев(Данные, 12);		
	//	КонецЕсли;	
	//	НайШК = Объект.Штрихкоды.НайтиСтроки(Новый Структура("Штрихкод", Данные));
	//Исключение
	//	Сообщить("Попытка поиска в ТЧ Штрихкоды " + ОписаниеОшибки());
	//	lem.ОтправитьСообщение(МассивПолучателей, "Ошибка сканирования в документе документе приемки", "Попытка поиска в ТЧ Штрихкоды " + Символы.ПС + ОписаниеОшибки(),,"Стриж УТЛ");
	//КонецПопытки;	
	//-Степанов
	
	// Логируем время пика
	//+Степанов обертывание в попытку
	Попытка
		//+Степанов Задача № 3935
		//НЛог = Объект.ЛогСканированияШК.Добавить();
		//НЛог.Период = ТекущаяДата();
		//ШК = СокрЛП(Данные);
		//НЛог.Штрихкод = ШК;
		Заказ = Неопределено;
		Если НайШК.Количество() Тогда	
			//НЛог.Заказ = НайШК[0].Заказ;	
			Заказ = НайШК[0].Заказ;
		КонецЕсли;
		//НЛог.РучнойВвод = РучнойВвод;
		ЗаписатьДанныеСканированияВоВнешнийЛог(Заказ,СокрЛП(Данные));
		//-Степанов Задача № 3935
	Исключение
		Сообщить("Попытка записи в ТЧ Лог сканирования " + ОписаниеОшибки());
		lem.ОтправитьСообщение(МассивПолучателей, "Ошибка сканирования в документе документе приемки", "Попытка записи в ТЧ Лог сканирования " + Символы.ПС + ОписаниеОшибки(),,"Стриж УТЛ");
	КонецПопытки;
	
	Если НайШК.Количество() Тогда  // заказ найден
		
		//+Степанов обертывание в попытку
		Попытка
		Если ЗначениеЗаполнено(НайШК[0].Заказ) Тогда	
			
			НайЗ = Объект.Доставки.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));	
			
			Если НайЗ[0].РезультатДоставки = ПредопределенноеЗначение("Справочник.новаРезультатМестнойДоставки.Выполнена") Тогда    //Не ожидается
				
				СигналНужен = Истина;
				
				// Заказ не ожидается, предложить добавить
				ОО = Новый ОписаниеОповещения("Послеответа_ДобавитьЗаказ", ЭтаФорма, Новый Структура("Заказ", НайШК[0].Заказ));	
				ПоказатьВопрос(ОО, "Заказ не ожидается к возврату. Все-равно добавить заказ?", РежимДиалогаВопрос.ДаНет);	
				
	
			//Асеев 22.03.2021 (по письму Отказ с заездом)>>>
			//ИначеЕсли НайЗ[0].РезультатДоставки = ПредопределенноеЗначение("Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично") Тогда    // Вскрытый
			ИначеЕсли НайЗ[0].РезультатДоставки = ПредопределенноеЗначение("Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично")
				Или НайЗ[0].ПричинаНеВыполненияДоставки = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом") И НайЗ[0].БылоВскрытиеЗаказа
				Тогда    // Вскрытый
				//Асеев 22.03.2021 (по письму Отказ с заездом)<<<
				
				Если ЗначениеЗаполнено(НайШК[0].Товар) Тогда   // ШК Товара
					
					//РезСтр = ЭтоШКПоМестамПоТоварам(НайШК[0].Заказ);						
					//Если РезСтр.ШКПоТоварам Тогда
					//КонецЕсли;
					
					
					// Спозиционируемся на заказе
					Для каждого СтЗ Из НайЗ Цикл					
						Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗ);   // спозиционируемся на заказе
					КонецЦикла;
					
					// + 1 к товару 
					НайТов = Объект.Товары.НайтиСтроки(Новый Структура("Штрихкод", Данные));
					
					//CeHbKA #4073 08.07.2020
					//поиск по коду маркировки
					Если НайТов.Количество() = 0 Тогда
						НайТов = Объект.Товары.НайтиСтроки(Новый Структура("КодМаркировки", Данные));
					КонецЕсли; 
					//CeHbKA #4073 08.07.2020
					
					Если НайТов.Количество() Тогда
						
						Для каждого СтТов Из НайТов Цикл					
							СтТов.Принято = СтТов.Принято + 1;		
							Элементы.Товары.ТекущаяСтрока = Объект.Товары.Индекс(СтТов);   // спозиционируемся на ТОВАРЕ
						КонецЦикла;		
						
						// Установка признака Заказ принят, если все позиции/места по заказу подтверждены
						НайЗаказ = Объект.Товары.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));
						ЗаказПринят = Истина;
						Для каждого СтНЗ Из НайЗаказ Цикл										
							Если СтНЗ.Принято < СтНЗ.Количество Тогда					
								ЗаказПринят = Ложь;						
							КонецЕсли;				
						КонецЦикла;	
						
						//Асеев 24.03.2021 (по письму Отказ с заездом)>>>
						Если НайЗ[0].ПричинаНеВыполненияДоставки = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом") Тогда
							Для Каждого СтрНайЗ Из НайЗ Цикл
								СтрНайЗ.ПринятНаСкладеПолностью = ЗаказПринят;
								СтрНайЗ.ПринятНаСкладеЧастично = Не ЗаказПринят;
							КонецЦикла;
						Иначе
							//Асеев 24.03.2021 (по письму Отказ с заездом)<<<
							Если ЗаказПринят Тогда
								Для каждого СтрНайЗ Из НайЗ Цикл
									СтрНайЗ.ПринятНаСкладеЧастично = Истина;				
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
						
					Иначе
						
						Сообщить("Товар не найден");
						СигналНужен = Истина;
						
					КонецЕсли;
				Иначе
					
					// Спозиционируемся на заказе
					Для каждого СтЗ Из НайЗ Цикл					
						Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗ);   // спозиционируемся на заказе
					КонецЦикла;

				КонецЕсли;
				
				
			Иначе   // Полный отказ
				
				Если ЗначениеЗаполнено(НайШК[0].МестоЗаказа) Тогда
					
					// Спозиционируемся на заказе
					Для каждого СтЗ Из НайЗ Цикл					
						Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗ);   // спозиционируемся на заказе
					КонецЦикла;

					
					РезСтр = ЭтоШКПоМестамПоТоварам(НайШК[0].Заказ);		
					
					Если РезСтр.ШКПоМестам Тогда		
						
						// Подтверждаем место
						НайМесто = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Штрихкод", Данные));
						
						//CeHbKA #4073 08.07.2020
						//поиск по коду маркировки
						Если НайМесто.Количество() = 0 Тогда
							
							МассивСтрок = Объект.Товары.НайтиСтроки(Новый Структура("КодМаркировки", Данные)); 
							
							Для каждого СтрокаТЧ Из МассивСтрок Цикл
								ШК = СтрокаТЧ.Штрихкод;
							КонецЦикла; 
							
							НайМесто = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Штрихкод", ШК));
						КонецЕсли; 
						//CeHbKA #4073 08.07.2020
						
						Если НайМесто.Количество() Тогда
							
							Для каждого СтМесто Из НайМесто Цикл	
								СтМесто.Принято = Истина;	
								Элементы.МестаЗаказов.ТекущаяСтрока = Объект.МестаЗаказов.Индекс(СтМесто);   // спозиционируемся на МЕСТЕ
							КонецЦикла;
							
						Иначе
							
							Сообщить("Место не найдено");
							СигналНужен = Истина;
							
						КонецЕсли;
						
					Иначе
						
						// + 1 МЕСТО по заказу
						Для каждого СтЗак Из НайЗ Цикл						
							СтЗак.КоличествоМестПринято = СтЗак.КоличествоМестПринято + 1;	
							Если СтЗак.КоличествоМестПринято > СтЗак.КоличествоМест Тогда
								СигналНужен = Истина;
							КонецЕсли;
							Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗак);   // спозиционируемся на заказе
						КонецЦикла;
						
					КонецЕсли;	
						
					
					
					//// Установка признака Заказ принят, если все позиции/места по заказу подтверждены
					//НайЗаказ = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));
					//ЗаказПринят = Истина;
					//Для каждого СтНЗ Из НайЗаказ Цикл										
					//	Если НЕ СтНЗ.Принято Тогда					
					//		ЗаказПринят = Ложь;						
					//	КонецЕсли;		
					//КонецЦикла;		
					//
					//Если ЗаказПринят Тогда
					//	Для каждого СтрНайЗ Из НайЗ Цикл
					//		СтрНайЗ.ПринятНаСкладеПолностью = Истина;				
					//	КонецЦикла;
					//КонецЕсли;
					
					
					
					//СтрокиДоставка = Объект.Доставки.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));
					//Если СтрокиДоставка.Количество() <> 0 Тогда
					//	
					//	КоличествоМест = 0;
					//	
					//	НайденныеСтроки = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));
					//	
					//	Для каждого СтрокаМесто Из НайденныеСтроки Цикл
					//		
					//		КоличествоМест = КоличествоМест + СтрокаМесто.Принято;
					//		
					//	КонецЦикла; 
					//	
					//	СтрокиДоставка[0].КоличествоМестПринято = КоличествоМест;
					//	
					//КонецЕсли; 
					//
					//
					//
					//ТекДанные = Элементы.МестаЗаказов.ТекущиеДанные;
					//Най = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", ТекДанные.Доставка));	
					//ЗаказСобран = Истина;
					//Для каждого Ст Из Най Цикл		
					//	Если НЕ Ст.Принято Тогда		
					//		ЗаказСобран = Ложь;			
					//	КонецЕсли;	
					//КонецЦикла;
					//
					//
					////Если ЗаказСобран Тогда // отметим заказ как сданный
					//	НайЗ = объект.Доставки.НайтиСтроки(Новый Структура("Доставка", ТекДанные.Доставка));	
					//	Для каждого СтЗ Из НайЗ Цикл		
					//		СтЗ.ПринятНаСкладеПолностью = ЗаказСобран;			
					//	КонецЦикла;
					////КонецЕсли;

					
					ОбновитьПоИзменениюМест(НайШК[0].Заказ);

					
				Иначе
					
					РезСтр = ЭтоШКПоМестамПоТоварам(НайШК[0].Заказ);		
					
					Если РезСтр.ШКПоМестам Тогда
						
						// Спозиционируемся на заказе				
						Для каждого СтЗ Из НайЗ Цикл					
							Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗ);   // спозиционируемся на заказе
						КонецЦикла;

					Иначе
						
						// + 1 МЕСТО по заказу
						Для каждого СтЗак Из НайЗ Цикл						
							СтЗак.КоличествоМестПринято = СтЗак.КоличествоМестПринято + 1;	
							Если СтЗак.КоличествоМестПринято > СтЗак.КоличествоМест Тогда
								СигналНужен = Истина;
							КонецЕсли;
							Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗак);   // спозиционируемся на заказе
						КонецЦикла;	
						
						// Установка признака Заказ принят, если все позиции/места по заказу подтверждены
						НайЗаказ = Объект.Доставки.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));
						ЗаказПринят = Истина;
						Для каждого СтНЗ Из НайЗаказ Цикл										
							Если СтНЗ.КоличествоМестПринято < СтНЗ.КоличествоМест Тогда					
								ЗаказПринят = Ложь;						
							КонецЕсли;		
						КонецЦикла;		
						
						Если ЗаказПринят Тогда
							Для каждого СтрНайЗ Из НайЗ Цикл
								СтрНайЗ.ПринятНаСкладеПолностью = Истина;				
							КонецЦикла;
						КонецЕсли;
						
					КонецЕсли;	
				
				КонецЕсли;				
				
			КонецЕсли;
			
								
		Иначе						
		КонецЕсли;
		Исключение
			Сообщить("Ошибка сканирования в документе документе приемки", "Попытка обработки ШК и позиционирования " + ОписаниеОшибки());
			lem.ОтправитьСообщение(МассивПолучателей, "Ошибка сканирования в документе документе приемки", "Попытка обработки ШК и позиционирования" + Символы.ПС + ОписаниеОшибки(),,"Стриж УТЛ");
		КонецПопытки;
		
	Иначе
		
		Сообщить("Штрихкод не найден");
		СигналНужен = Истина;
	   
	КонецЕсли;	
	Возврат СигналНужен;
	

КонецФункции // ()

&НаСервере
Функция ОбработатьШКНаСервере(Данные, РучнойВвод = Ложь)
	
	ИндексСтрокиТовары = -1;
	
	СигналНужен = Ложь;
	
	Если Объект.Проведен Тогда
		Сообщить("Документ проведен");	
		Возврат СигналНужен;	
	КонецЕсли;
	
	//+Степанов
	МассивПолучателей = Новый Массив;
	МассивПолучателей.Добавить("evgeniy.marochkin@strizh-logistic.ru");
	МассивПолучателей.Добавить("n.stepanov@strizh-logistic.ru");
	//-Степанов
	
	// Ищем ШК в ТЧ Штрихкоды
	//+Степанов обертывание в попытку
	//CeHbKA #4073 16.07.2020
	Если СтрДлина(Данные) > 100 Тогда
		
		Данные = Лев(Данные, 31);
		
		НайШК = Новый Массив;
		
		Для каждого СтрокаТЧ из Объект.Штрихкоды цикл
			Если СтрНайти(Данные, СтрокаТЧ.Штрихкод) > 0 Тогда
				НайШК.Добавить(СтрокаТЧ);
				Прервать;
			КонецЕсли;
		КонецЦикла;	
	Иначе	
		Попытка
			НайШК = Объект.Штрихкоды.НайтиСтроки(Новый Структура("Штрихкод", Данные));	
			Если НЕ НайШК.Количество() И Строка(Лев(Данные, 5)) = "37000" Тогда
				Данные = Лев(Данные, 12);		
			КонецЕсли;	
			НайШК = Объект.Штрихкоды.НайтиСтроки(Новый Структура("Штрихкод", Данные));
		Исключение
			НайШК = Новый Массив;			
			Сообщить("Попытка поиска в ТЧ Штрихкоды " + ОписаниеОшибки());
			lem.ОтправитьСообщение(МассивПолучателей, "Ошибка сканирования в документе документе приемки", "Попытка поиска в ТЧ Штрихкоды " + Символы.ПС + ОписаниеОшибки(),,"Стриж УТЛ");
		КонецПопытки;	
	КонецЕсли;
	//CeHbKA #4073 16.07.2020
		
	//Попытка
	//	НайШК = Объект.Штрихкоды.НайтиСтроки(Новый Структура("Штрихкод", Данные));	
	//	Если НЕ НайШК.Количество() И Строка(Лев(Данные, 5)) = "37000" Тогда
	//		Данные = Лев(Данные, 12);		
	//	КонецЕсли;	
	//	НайШК = Объект.Штрихкоды.НайтиСтроки(Новый Структура("Штрихкод", Данные));
	//Исключение
	//	Сообщить("Попытка поиска в ТЧ Штрихкоды " + ОписаниеОшибки());
	//	lem.ОтправитьСообщение(МассивПолучателей, "Ошибка сканирования в документе документе приемки", "Попытка поиска в ТЧ Штрихкоды " + Символы.ПС + ОписаниеОшибки(),,"Стриж УТЛ");
	//КонецПопытки;	
	//-Степанов
	
	// Логируем время пика
	//+Степанов обертывание в попытку
	Попытка
		//+Степанов Задача № 3935
		//НЛог = Объект.ЛогСканированияШК.Добавить();
		//НЛог.Период = ТекущаяДата();
		//ШК = СокрЛП(Данные);
		//НЛог.Штрихкод = ШК;
		Заказ = Неопределено;
		Если НайШК.Количество() Тогда	
			//НЛог.Заказ = НайШК[0].Заказ;	
			Заказ = НайШК[0].Заказ;
		КонецЕсли;
		//НЛог.РучнойВвод = РучнойВвод;
		ЗаписатьДанныеСканированияВоВнешнийЛог(Заказ,СокрЛП(Данные));
		//-Степанов Задача № 3935
	Исключение
		Сообщить("Попытка записи в ТЧ Лог сканирования " + ОписаниеОшибки());
		lem.ОтправитьСообщение(МассивПолучателей, "Ошибка сканирования в документе документе приемки", "Попытка записи в ТЧ Лог сканирования " + Символы.ПС + ОписаниеОшибки(),,"Стриж УТЛ");
	КонецПопытки;
	
	Если НайШК.Количество() Тогда  // заказ найден
		
		//+Степанов обертывание в попытку
		Попытка
		Если ЗначениеЗаполнено(НайШК[0].Заказ) Тогда	
			
			НайЗ = Объект.Доставки.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));	
			
			Если НайЗ[0].РезультатДоставки = ПредопределенноеЗначение("Справочник.новаРезультатМестнойДоставки.Выполнена") Тогда    //Не ожидается
				
				СигналНужен = Истина;
				
				// Заказ не ожидается, предложить добавить
				//ОО = Новый ОписаниеОповещения("Послеответа_ДобавитьЗаказ", ЭтаФорма, Новый Структура("Заказ", НайШК[0].Заказ));	
				//ПоказатьВопрос(ОО, "Заказ не ожидается к возврату. Все-равно добавить заказ?", РежимДиалогаВопрос.ДаНет);	
				Сообщить("Заказ не ожидается к возврату");
				
	
			//Асеев 22.03.2021 (по письму Отказ с заездом)>>>
			//ИначеЕсли НайЗ[0].РезультатДоставки = ПредопределенноеЗначение("Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично") Тогда    // Вскрытый
			ИначеЕсли НайЗ[0].РезультатДоставки = ПредопределенноеЗначение("Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично")
				Или НайЗ[0].ПричинаНеВыполненияДоставки = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом") И НайЗ[0].БылоВскрытиеЗаказа
				Тогда    // Вскрытый
				//Асеев 22.03.2021 (по письму Отказ с заездом)<<<
				
				Если ЗначениеЗаполнено(НайШК[0].Товар) Тогда   // ШК Товара
					
					//РезСтр = ЭтоШКПоМестамПоТоварам(НайШК[0].Заказ);						
					//Если РезСтр.ШКПоТоварам Тогда
					//КонецЕсли;
					
					
					// Спозиционируемся на заказе
					Для каждого СтЗ Из НайЗ Цикл					
						Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗ);   // спозиционируемся на заказе
					КонецЦикла;
					
					//Асеев 12.08.2024 (по письму Доработка визуализации приемки)>>>
					//// + 1 к товару 
					//НайТов = Объект.Товары.НайтиСтроки(Новый Структура("Штрихкод", Данные));
					//
					////CeHbKA #4073 08.07.2020
					////поиск по коду маркировки
					//Если НайТов.Количество() = 0 Тогда
					//	НайТов = Объект.Товары.НайтиСтроки(Новый Структура("КодМаркировки", Данные));
					//КонецЕсли; 
					////CeHbKA #4073 08.07.2020
					НайТов = Новый Массив;
					Для Каждого СтрокаТовара Из Объект.Товары.НайтиСтроки(Новый Структура("Доставка,Номенклатура", НайШК[0].Заказ, НайШК[0].Товар)) Цикл
						Если Найти(СтрокаТовара.Штрихкод, Данные) <> Неопределено Или Найти(СтрокаТовара.КодМаркировки, Данные) <> Неопределено Тогда
							НайТов.Добавить(СтрокаТовара);
						КонецЕсли;
					КонецЦикла;
					//Асеев 12.08.2024 (по письму Доработка визуализации приемки)<<<
					
					Если НайТов.Количество() Тогда
						
						Для каждого СтТов Из НайТов Цикл					
							СтТов.Принято = СтТов.Принято + 1;
							
							ИндексСтрокиТовары = Объект.Товары.Индекс(СтТов);
							
							Элементы.Товары.ТекущаяСтрока = ИндексСтрокиТовары;   // спозиционируемся на ТОВАРЕ
						КонецЦикла;		
						
						// Установка признака Заказ принят, если все позиции/места по заказу подтверждены
						НайЗаказ = Объект.Товары.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));
						ЗаказПринят = Истина;
						Для каждого СтНЗ Из НайЗаказ Цикл										
							Если СтНЗ.Принято < СтНЗ.Количество Тогда					
								ЗаказПринят = Ложь;						
							КонецЕсли;				
						КонецЦикла;	
						
						//Асеев 24.03.2021 (по письму Отказ с заездом)>>>
						Если НайЗ[0].ПричинаНеВыполненияДоставки = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом") Тогда
							Для Каждого СтрНайЗ Из НайЗ Цикл
								СтрНайЗ.ПринятНаСкладеПолностью = ЗаказПринят;
								СтрНайЗ.ПринятНаСкладеЧастично = Не ЗаказПринят;
							КонецЦикла;
						Иначе
							//Асеев 24.03.2021 (по письму Отказ с заездом)<<<
							Если ЗаказПринят Тогда
								Для каждого СтрНайЗ Из НайЗ Цикл
									СтрНайЗ.ПринятНаСкладеЧастично = Истина;				
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
						
					Иначе
						
						Сообщить("Товар не найден");
						СигналНужен = Истина;
						
					КонецЕсли;
				Иначе
					
					// Спозиционируемся на заказе
					Для каждого СтЗ Из НайЗ Цикл					
						Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗ);   // спозиционируемся на заказе
					КонецЦикла;

				КонецЕсли;
				
				
			Иначе   // Полный отказ
				
				Если ЗначениеЗаполнено(НайШК[0].МестоЗаказа) Тогда
					
					// Спозиционируемся на заказе
					Для каждого СтЗ Из НайЗ Цикл					
						Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗ);   // спозиционируемся на заказе
					КонецЦикла;

					
					РезСтр = ЭтоШКПоМестамПоТоварам(НайШК[0].Заказ);		
					
					Если РезСтр.ШКПоМестам Тогда		
						
						// Подтверждаем место
						НайМесто = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Штрихкод", Данные));
						
						//CeHbKA #4073 08.07.2020
						//поиск по коду маркировки
						Если НайМесто.Количество() = 0 Тогда
							
							МассивСтрок = Объект.Товары.НайтиСтроки(Новый Структура("КодМаркировки", Данные)); 
							
							Для каждого СтрокаТЧ Из МассивСтрок Цикл
								ШК = СтрокаТЧ.Штрихкод;
							КонецЦикла; 
							
							НайМесто = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Штрихкод", ШК));
						КонецЕсли; 
						//CeHbKA #4073 08.07.2020
						
						Если НайМесто.Количество() Тогда
							
							Для каждого СтМесто Из НайМесто Цикл	
								СтМесто.Принято = Истина;	
								Элементы.МестаЗаказов.ТекущаяСтрока = Объект.МестаЗаказов.Индекс(СтМесто);   // спозиционируемся на МЕСТЕ
							КонецЦикла;
							
						Иначе
							
							Сообщить("Место не найдено");
							СигналНужен = Истина;
							
						КонецЕсли;
						
					Иначе
						
						// + 1 МЕСТО по заказу
						Для каждого СтЗак Из НайЗ Цикл						
							СтЗак.КоличествоМестПринято = СтЗак.КоличествоМестПринято + 1;	
							Если СтЗак.КоличествоМестПринято > СтЗак.КоличествоМест Тогда
								СигналНужен = Истина;
							КонецЕсли;
							Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗак);   // спозиционируемся на заказе
						КонецЦикла;
						
					КонецЕсли;	
						
					
					
					//// Установка признака Заказ принят, если все позиции/места по заказу подтверждены
					//НайЗаказ = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));
					//ЗаказПринят = Истина;
					//Для каждого СтНЗ Из НайЗаказ Цикл										
					//	Если НЕ СтНЗ.Принято Тогда					
					//		ЗаказПринят = Ложь;						
					//	КонецЕсли;		
					//КонецЦикла;		
					//
					//Если ЗаказПринят Тогда
					//	Для каждого СтрНайЗ Из НайЗ Цикл
					//		СтрНайЗ.ПринятНаСкладеПолностью = Истина;				
					//	КонецЦикла;
					//КонецЕсли;
					
					
					
					//СтрокиДоставка = Объект.Доставки.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));
					//Если СтрокиДоставка.Количество() <> 0 Тогда
					//	
					//	КоличествоМест = 0;
					//	
					//	НайденныеСтроки = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));
					//	
					//	Для каждого СтрокаМесто Из НайденныеСтроки Цикл
					//		
					//		КоличествоМест = КоличествоМест + СтрокаМесто.Принято;
					//		
					//	КонецЦикла; 
					//	
					//	СтрокиДоставка[0].КоличествоМестПринято = КоличествоМест;
					//	
					//КонецЕсли; 
					//
					//
					//
					//ТекДанные = Элементы.МестаЗаказов.ТекущиеДанные;
					//Най = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", ТекДанные.Доставка));	
					//ЗаказСобран = Истина;
					//Для каждого Ст Из Най Цикл		
					//	Если НЕ Ст.Принято Тогда		
					//		ЗаказСобран = Ложь;			
					//	КонецЕсли;	
					//КонецЦикла;
					//
					//
					////Если ЗаказСобран Тогда // отметим заказ как сданный
					//	НайЗ = объект.Доставки.НайтиСтроки(Новый Структура("Доставка", ТекДанные.Доставка));	
					//	Для каждого СтЗ Из НайЗ Цикл		
					//		СтЗ.ПринятНаСкладеПолностью = ЗаказСобран;			
					//	КонецЦикла;
					////КонецЕсли;

					
					ОбновитьПоИзменениюМестНаСервере(НайШК[0].Заказ);

					
				Иначе
					
					РезСтр = ЭтоШКПоМестамПоТоварам(НайШК[0].Заказ);		
					
					Если РезСтр.ШКПоМестам Тогда
						
						// Спозиционируемся на заказе				
						Для каждого СтЗ Из НайЗ Цикл					
							Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗ);   // спозиционируемся на заказе
						КонецЦикла;

					Иначе
						
						// + 1 МЕСТО по заказу
						Для каждого СтЗак Из НайЗ Цикл						
							СтЗак.КоличествоМестПринято = СтЗак.КоличествоМестПринято + 1;	
							Если СтЗак.КоличествоМестПринято > СтЗак.КоличествоМест Тогда
								СигналНужен = Истина;
							КонецЕсли;
							Элементы.Доставки.ТекущаяСтрока = Объект.Доставки.Индекс(СтЗак);   // спозиционируемся на заказе
						КонецЦикла;	
						
						// Установка признака Заказ принят, если все позиции/места по заказу подтверждены
						НайЗаказ = Объект.Доставки.НайтиСтроки(Новый Структура("Доставка", НайШК[0].Заказ));
						ЗаказПринят = Истина;
						Для каждого СтНЗ Из НайЗаказ Цикл										
							Если СтНЗ.КоличествоМестПринято < СтНЗ.КоличествоМест Тогда					
								ЗаказПринят = Ложь;						
							КонецЕсли;		
						КонецЦикла;		
						
						Если ЗаказПринят Тогда
							Для каждого СтрНайЗ Из НайЗ Цикл
								СтрНайЗ.ПринятНаСкладеПолностью = Истина;				
							КонецЦикла;
						КонецЕсли;
						
					КонецЕсли;	
				
				КонецЕсли;				
				
			КонецЕсли;
			
								
		Иначе						
		КонецЕсли;
		Исключение
			Сообщить("Ошибка сканирования в документе документе приемки.
			|Попытка обработки ШК и позиционирования " + ОписаниеОшибки());
			lem.ОтправитьСообщение(МассивПолучателей, "Ошибка сканирования в документе документе приемки", "Попытка обработки ШК и позиционирования" + Символы.ПС + ОписаниеОшибки(),,"Стриж УТЛ");
		КонецПопытки;
		
	Иначе
		
		Сообщить("Штрихкод не найден");
		СигналНужен = Истина;
	   
	КонецЕсли;	
	Возврат СигналНужен;
	

КонецФункции // ()



&НаКлиенте
Процедура Послеответа_ДобавитьЗаказ(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда		
		
		ОО = Новый ОписаниеОповещения("ПослеОтвета_ВскрытыеНет", ЭтаФорма, Новый Структура("Заказ", Параметры.Заказ));	
		ПоказатьВопрос(ОО, "Заказ был вскрыт или частично выполнен?", РежимДиалогаВопрос.ДаНет);
				
	КонецЕсли;	

КонецПроцедуры


&НаКлиенте
Процедура ПослеОтвета_ВскрытыеНет(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда		
		
		// Добавляем заказ - ВСКРЫТЫЕ
		
	Иначе
		
		// Добавляем заказ - НЕ ВСКРЫТЫЕ
			
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Функция ЭтоШКПоМестамПоТоварам(Заказ)

	СтруктураВозврат = Новый Структура("ШКПоТоварам,ШКПоМестам", Ложь, Ложь);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ", Заказ);
	//Запрос.УстановитьПараметр("Контрагент", ОбщегоНазначения.ПолучитьЗначениеРеквизита(Заказ, "ВладелецТовара"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыКонтрагентовСрезПоследних.УчетШКПоТоварам КАК ШКПоТоварам,
	|	ПараметрыКонтрагентовСрезПоследних.УчетЗаказовПоМестам КАК ШКПоМестам
	|ИЗ
	|	РегистрСведений.ПараметрыКонтрагентов.СрезПоследних(
	|			,
	|			Контрагент В
	|				(ВЫБРАТЬ
	|					РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара
	|				ИЗ
	|					Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|				ГДЕ
	|					РеализацияТоваровУслуг.Ссылка = &Заказ)) КАК ПараметрыКонтрагентовСрезПоследних";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтруктураВозврат.ШКПоТоварам = Выборка.ШКПоТоварам;
		СтруктураВозврат.ШКПоМестам = Выборка.ШКПоМестам;	
	КонецЕсли;
	
	Возврат СтруктураВозврат;

КонецФункции // ()


&НаКлиенте
// Функция возвращает признак того, что клиент поддерживает работу с видом ТО,
// переданным в качестве параметра.
//
// Параметры:
//  Вид      - <ПеречислениеСсылка.ВидыТорговогоОборудования>
//           - Вид торгового оборудования, информация о поддержке
//             которого запрашивается.
//
// Возвращаемое значение:
//  <Булево> - Признак поддержки указанного класса торгового оборудования.
//
Функция ПоддерживаетсяВидТО(Вид) Экспорт

	
	Результат = Ложь;

	Если Вид = Перечисления.ВидыТорговогоОборудования.СканерШтрихКода Тогда
		Результат = Истина;
	КонецЕсли;

	Возврат Результат;

КонецФункции // ПоддерживаетсяВидТО()


&НаКлиенте
Процедура ОбработатьОтвет(РезультатВопроса, Параметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ДанныеСтроки = ДобавитьЗаказ(Параметры.Заказ);
		Если ДанныеСтроки <> Неопределено Тогда	
			НСтр = Объект.Доставки.Добавить();		
			ЗаполнитьЗначенияСвойств(НСтр, ДанныеСтроки);		
		КонецЕсли;		
	Иначе		
	КонецЕсли;
	

КонецПроцедуры


Функция ДобавитьЗаказ(Заказ)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДанныеЗаказаВодителя.Ссылка,
	                      |	ЕСТЬNULL(ВозвратТоваровОтПокупателя.Ссылка, ЗНАЧЕНИЕ(Документ.ВозвратТоваровОтПокупателя.ПустаяСсылка)) КАК ДокументВозврат
	                      |ИЗ
	                      |	Документ.ДанныеЗаказаВодителя КАК ДанныеЗаказаВодителя
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	                      |		ПО ДанныеЗаказаВодителя.Реализация.Номер = ВозвратТоваровОтПокупателя.Номер
	                      |ГДЕ
	                      |	ДанныеЗаказаВодителя.Реализация = &Реализация
	                      |	И ДанныеЗаказаВодителя.Проведен");
	Запрос.УстановитьПараметр("Реализация", Заказ);	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
	
		ДокСсылка = Рез.Ссылка;	
		
		ДанныеВозврат = Новый Структура;
		ДанныеВозврат.Вставить("Доставка", Заказ);
		ДанныеВозврат.Вставить("РезультатДоставки", Справочники.новаРезультатМестнойДоставки.НеВыполнена);
		ДанныеВозврат.Вставить("ПричинаНеВыполненияДоставки", ДокСсылка.ПричинаНеВыполненияДоставки);
		ДанныеВозврат.Вставить("ПринятНаСкладеПолностью", Истина);
		ДанныеВозврат.Вставить("ВозвратТоваров", Рез.ДокументВозврат);
		
		
		//НСтр = Объект.Доставки.Добавить();
		//НСтр.Доставка = Заказ;
		//НСтр.РезультатДоставки = Справочники.новаРезультатМестнойДоставки.НеВыполнена; 
		//НСтр.ПричинаНеВыполненияДоставки = ДокСсылка.ПричинаНеВыполненияДоставки;
		//НСтр.ПринятНаСкладеПолностью = Истина;
		//НСтр.ВозвратТоваров = Рез.ДокументВозврат;
				
		// заполним товары
		Для каждого Стр Из Заказ.Товары Цикл			
			НТовар = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НТовар, Стр);	
			НТовар.Доставка = Заказ;
		КонецЦикла;
		
		Для каждого Стр Из Заказ.ПодарочныеПозиции Цикл			
			НТовар = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НТовар, Стр);
			НТовар.Доставка = Заказ;
		КонецЦикла;	
		
		Возврат ДанныеВозврат;
		
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции


&НаСервере
Процедура ЗаполнитьПоРейсуНаСервереВФорме()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");

	ДокументОбъект.ЗаполнитьПоРейсуНаСервере(ДокументОбъект);
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	//CeHbKA
	
	Записать();
	
	ЗаполнитьМестаДоставкиНаСервере();
	
	ЗаполнитьДополнительныеДанныеДляОтображения();
	
	Модифицированность = Истина;
	//CeHbKA
	
КонецПроцедуры // ()


&НаКлиенте
Процедура ЗаполнитьПоРейсу(Команда)
	
	
	Если Объект.Проведен Тогда
		#Если Клиент Тогда		
			Сообщить("Документ проведен");
		#КонецЕсли
		Возврат;	
	КонецЕсли;
	
	
	Если Объект.Доставки.Количество() Тогда		
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоРейсу_Ответ", ЭтаФорма), "Документ уже заполнен, очистить и заполнить заново?", РежимДиалогаВопрос.ДаНет);		
	Иначе
		
		Если ЗначениеЗаполнено(Объект.Рейс) Тогда	
			
			Если ЗначениеЗаполнено(Объект.Склад) Тогда
				
				ЗаполнитьПоРейсуНаСервереВФорме();
				
				Элементы.ФильтрТолькоКВозврату.Пометка = Ложь;
								
				ЭтаФорма.ОбновитьОтображениеДанных();	
				
				ТолькоКВозврату(Неопределено);
				
			Иначе	
				#Если Клиент Тогда		
					Сообщить("Не указана настройка пользователя ""склад""");
				#КонецЕсли	
			КонецЕсли;	
		Иначе
			#Если Клиент Тогда		
				Сообщить("Не указан рейс");
			#КонецЕсли
		КонецЕсли;
		
	КонецЕсли;
	
		
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПоРейсу_Ответ(Результат, Пар) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если ЗначениеЗаполнено(Объект.Рейс) Тогда
		
			Если ЗначениеЗаполнено(Объект.Склад) Тогда
				ЗаполнитьПоРейсуНаСервереВФорме();	
				ЭтаФорма.ОбновитьОтображениеДанных();	
				ТолькоКВозврату(Неопределено);

				
			Иначе
				#Если Клиент Тогда		
					Сообщить("Не указана настройка пользователя ""склад""");
				#КонецЕсли	
			КонецЕсли;		
		Иначе
			#Если Клиент Тогда		
				Сообщить("Не указан рейс");
			#КонецЕсли
		КонецЕсли;		
	
	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьМестаДоставкиНаСервере()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДокТЧ.Доставка КАК Доставка,
		|	ДокТЧ.РезультатДоставки КАК РезультатДоставки
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	&ДокТЧ КАК ДокТЧ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокТЧ.Доставка КАК Доставка,
		|	МестаПоЗаказам.Ссылка КАК Место,
		|	МестаПоЗаказам.Штрихкод КАК Штрихкод
		|ИЗ
		|	ДокТЧ КАК ДокТЧ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаПоЗаказам КАК МестаПоЗаказам
		|		ПО ДокТЧ.Доставка = МестаПоЗаказам.Заказ
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокТЧ.Доставка,
		|	МестаПоЗаказам.Ссылка,
		|	МестаПоЗаказам.Штрихкод";
	
	Запрос.УстановитьПараметр("ДокТЧ", Объект.Доставки.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Объект.МестаЗаказов.Загрузить(РезультатЗапроса.Выгрузить());
	
	
КонецПроцедуры // ()
 

&НаКлиенте
Процедура РейсПриИзменении(Элемент)
		
	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ЗаполнитьПоРейсу.Доступность = ЗначениеЗаполнено(Объект.Рейс);
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
	
		
		ЗапросСклад = Новый Запрос("ВЫБРАТЬ
			                   |	НастройкиПользователей.Значение
			                   |ИЗ
			                   |	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
			                   |ГДЕ
			                   |	НастройкиПользователей.Пользователь = &Пользователь
			                   |	И НастройкиПользователей.Настройка = &Настройка");
		ЗапросСклад.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
		ЗапросСклад.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.НастройкиПользователей.Склад);
		РезСклад = ЗапросСклад.Выполнить().Выбрать();
		
		Если РезСклад.Следующий() Тогда	
			Объект.Склад = РезСклад.Значение;		
		КонецЕсли;
	
	КонецЕсли;
		
	
	//+++ БАО 08.06.2017 №1024 	
	//ТолькоПросмотр = Объект.РейсЗакрыт;
	// МАС - 12.07.2018 - № --->> 
	//ТолькоПросмотр = bao.РейсЗакрыт(Объект.Ссылка);
	Если baoВызовСервера.РейсЗакрыт(Объект.Ссылка) ИЛИ Объект.Проведен Тогда
		ТолькоПросмотр = Истина;	
	КонецЕсли;
	// <<--- МАС 
	//--- БАО 08.06.2017 №1024 
	
	ЗаполнитьДополнительныеДанныеДляОтображения();
	
	ИндексСтрокиТовары = -1;
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//Если Объект.Проведен И НЕ РольДоступна("Админы") Тогда
	//	Отказ = Истина;	
	//	Сообщить("Документ уже проведен. Корректировки проведенного документа запрещены");
	//КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПоНомеруПалеты(Команда)
	
	ОткрытьФорму("Документ.ВозвратЗаказовОтВодителя.Форма.ФормаВводаНомераПалеты", , Объект, ,,, Новый ОписаниеОповещения("ОбработатьВыборПалеты", ЭтаФорма));
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработатьВыборПалеты(РезультатВвода, Параметры) Экспорт
	
	
	Если Объект.Проведен Тогда
		#Если Клиент Тогда		
			Сообщить("Документ проведен");
		#КонецЕсли
		Возврат;	
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(РезультатВвода) И РезультатВвода.Свойство("Отмена") И РезультатВвода.Отмена Тогда
		Возврат;		
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(РезультатВвода) И ЗначениеЗаполнено(РезультатВвода.НомерПалеты) Тогда
		
		ТекВр = ТекущаяДата();
		//ТекВр = Дата("20160919");  тест
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Рейс.Ссылка КАК Ссылка
		                      |ИЗ
		                      |	Документ.Рейс КАК Рейс
		                      |ГДЕ
		                      |	Рейс.Проведен
		                      |	И Рейс.НомерПалетты = &НомерПалетты
		                      |	И Рейс.ДатаРейса МЕЖДУ &Дата1 И &Дата2");
		Запрос.УстановитьПараметр("НомерПалетты", РезультатВвода.НомерПалеты);					  
		Запрос.УстановитьПараметр("Дата1", НачалоДня(ТекВр));
		Запрос.УстановитьПараметр("Дата2", КонецДня(ТекВр));
		Рез = Запрос.Выполнить().Выбрать();
		
		Если Рез.Следующий() Тогда
		
			Объект.Рейс = Рез.Ссылка;		
		Иначе
			#Если Клиент Тогда
				Сообщить("По данному номеру палеты рейс за текущее число не найден");
			#КонецЕсли
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Рейс) Тогда
		
		Если Объект.Доставки.Количество() Тогда		
			ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоРейсу_Ответ", ЭтаФорма), "Документ уже заполнен, очистить и заполнить заново?", РежимДиалогаВопрос.ДаНет);		
		Иначе
			Если ЗначениеЗаполнено(Объект.Склад) Тогда
				ЗаполнитьПоРейсуНаСервереВФорме();	
				ЭтаФорма.ОбновитьОтображениеДанных();		
				ТолькоКВозврату(Неопределено);

			Иначе
				#Если Клиент Тогда		
					Сообщить("Не указана настройка пользователя ""склад""");
				#КонецЕсли	
			КонецЕсли;		
						
		КонецЕсли;
	
	КонецЕсли;
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ТолькоКВозврату(Команда)
	
	ОбновитьОтображение_ТолькоКВозврату(НЕ Элементы.Доставки.КоманднаяПанель.ПодчиненныеЭлементы.ФильтрТолькоКВозврату.Пометка);
		
КонецПроцедуры


Процедура ОбновитьОтображение_ТолькоКВозврату(НовоеСостояниеКнопки)

	Элементы.ФильтрТолькоКВозврату.Пометка = НовоеСостояниеКнопки;
	
	Элементы.Доставки.ОтборСтрок = ?(НовоеСостояниеКнопки, Новый ФиксированнаяСтруктура("КВозврату", НовоеСостояниеКнопки), Неопределено);
	
КонецПроцедуры


&НаКлиенте
Процедура ДоставкиПринятНаСкладеПолностьюПриИзменении(Элемент)
	// Логируем время пика
	//+Степанов Задача № 3935
	//НЛог = Объект.ЛогСканированияШК.Добавить();
	//НЛог.Период = ТекущаяДата();
	//НЛог.Штрихкод = "нажали галку Полностью принят";
	//НЛог.Заказ = Элементы.Доставки.ТекущиеДанные.Доставка;	
	//НЛог.РучнойВвод = Элементы.Доставки.ТекущиеДанные.ПринятНаСкладеПолностью;
	
	Попытка
		ЗаписатьДанныеСканированияВоВнешнийЛог(Элементы.Доставки.ТекущиеДанные.Доставка,"нажали галку Полностью принят");  
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;	
	//-Степанов Задача № 3935
КонецПроцедуры


&НаКлиенте
Процедура ДоставкиПринятНаСкладеЧастичноПриИзменении(Элемент)
	
		
КонецПроцедуры


&НаКлиенте
Процедура ДоставкиПриИзменении(Элемент)
	
	//ТекДоставка = Элементы.Доставки.ТекущиеДанные;
	//
	//Если (ТекДоставка.ПринятНаСкладеЧастично ИЛИ ТекДоставка.ПринятНаСкладеПолностью) И НЕ ТекДоставка.КВозврату Тогда	
	//	
	//	Элементы.Товары.ТолькоПросмотр = Ложь;
	//	Элементы.Товары.Доступность = Истина;
	//	Элементы.Товары.ЦветФона = WebЦвета.АнтикБелый;	
	//	
	//Иначе		
	//	
	//	Элементы.Товары.ТолькоПросмотр = Истина;
	//	Элементы.Товары.Доступность = Ложь;
	//	Элементы.Товары.ЦветФона = WebЦвета.Белый;
	//	
	//КонецЕсли;
	//
	
	//Асеев 25.03.2021 (по письму Отказ с заездом)>>>
	ОбновитьВидимостьДоступностьЭлементов();
	//Асеев 25.03.2021 (по письму Отказ с заездом)<<<
	
КонецПроцедуры


&НаКлиенте
Процедура ПечатьАПП(Команда)
	
	ПечатныйДокумент = Новый ТабличныйДокумент;
	ПечатныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ПечатныйДокумент.Автомасштаб = Истина;
	
	ПечатьНаСервере(ПечатныйДокумент);
	
	ПечатныйДокумент.ФиксацияСверху = 3;
	ПечатныйДокумент.ПолеСлева = 3;

	ПечатныйДокумент.ОтображатьЗаголовки = Ложь;
	ПечатныйДокумент.ОтображатьСетку     = Ложь;
	ПечатныйДокумент.ТолькоПросмотр      = Истина;
	
	ПечатныйДокумент.Показать();
	
КонецПроцедуры


Процедура ПечатьНаСервере(ПечатныйДокумент)

	ДокОбъект = РеквизитФормыВЗначение("Объект"); 
	ДокОбъект.ПечатьАПП(ПечатныйДокумент);

КонецПроцедуры


&НаКлиенте
Процедура МестаЗаказовПринятоПриИзменении(Элемент)
	
	
	ТекСтрока = Элементы.МестаЗаказов.ТекущиеДанные;
	
	Доставка = ТекСтрока.Доставка;
	
	СтрокиДоставка = Объект.Доставки.НайтиСтроки(Новый Структура("Доставка", Доставка));
	
	Если СтрокиДоставка.Количество() <> 0 Тогда
		
		КоличествоМест = 0;
		
		НайденныеСтроки = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", Доставка));
		
		Для каждого СтрокаМесто Из НайденныеСтроки Цикл
			
			КоличествоМест = КоличествоМест + СтрокаМесто.Принято;
			
		КонецЦикла; 
		
		СтрокиДоставка[0].КоличествоМестПринято = КоличествоМест;
		
	КонецЕсли; 
	
	
	
	ТекДанные = Элементы.МестаЗаказов.ТекущиеДанные;
	Най = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", ТекДанные.Доставка));	
	ЗаказСобран = Истина;
	Для каждого Ст Из Най Цикл		
		Если НЕ Ст.Принято Тогда		
			ЗаказСобран = Ложь;			
		КонецЕсли;	
	КонецЦикла;
	
	
	//Если ЗаказСобран Тогда // отметим заказ как сданный
		НайЗ = объект.Доставки.НайтиСтроки(Новый Структура("Доставка", ТекДанные.Доставка));	
		Для каждого СтЗ Из НайЗ Цикл		
			СтЗ.ПринятНаСкладеПолностью = ЗаказСобран;			
		КонецЦикла;
	//КонецЕсли;
	
	//ОбновитьПоИзменениюМест();
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьПоИзменениюМест(Доставка)

		
	СтрокиДоставка = Объект.Доставки.НайтиСтроки(Новый Структура("Доставка", Доставка));
	
	Если СтрокиДоставка.Количество() <> 0 Тогда
		
		КоличествоМест = 0;
		
		НайденныеСтроки = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", Доставка));
		
		Для каждого СтрокаМесто Из НайденныеСтроки Цикл
			
			КоличествоМест = КоличествоМест + СтрокаМесто.Принято;
			
		КонецЦикла; 
		
		СтрокиДоставка[0].КоличествоМестПринято = КоличествоМест;
		
	КонецЕсли; 
	
		
	Най = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", Доставка));	
	ЗаказСобран = Истина;
	Для каждого Ст Из Най Цикл		
		Если НЕ Ст.Принято Тогда		
			ЗаказСобран = Ложь;			
		КонецЕсли;	
	КонецЦикла;
	
	
	НайЗ = объект.Доставки.НайтиСтроки(Новый Структура("Доставка", Доставка));	
	Для каждого СтЗ Из НайЗ Цикл		
		СтЗ.ПринятНаСкладеПолностью = ЗаказСобран;			
	КонецЦикла;
	

КонецПроцедуры

&НаСервере
Процедура ОбновитьПоИзменениюМестНаСервере(Доставка)

		
	СтрокиДоставка = Объект.Доставки.НайтиСтроки(Новый Структура("Доставка", Доставка));
	
	Если СтрокиДоставка.Количество() <> 0 Тогда
		
		КоличествоМест = 0;
		
		НайденныеСтроки = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", Доставка));
		
		Для каждого СтрокаМесто Из НайденныеСтроки Цикл
			
			КоличествоМест = КоличествоМест + СтрокаМесто.Принято;
			
		КонецЦикла; 
		
		СтрокиДоставка[0].КоличествоМестПринято = КоличествоМест;
		
	КонецЕсли; 
	
		
	Най = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", Доставка));	
	ЗаказСобран = Истина;
	Для каждого Ст Из Най Цикл		
		Если НЕ Ст.Принято Тогда		
			ЗаказСобран = Ложь;			
		КонецЕсли;	
	КонецЦикла;
	
	
	НайЗ = объект.Доставки.НайтиСтроки(Новый Структура("Доставка", Доставка));	
	Для каждого СтЗ Из НайЗ Цикл		
		СтЗ.ПринятНаСкладеПолностью = ЗаказСобран;			
	КонецЦикла;
	

КонецПроцедуры



//CeHbKA
&НаКлиенте
Процедура ВвестиШК(Команда)
	
	СтрокаЗнач = "";
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВводаШК", ЭтаФорма);	
	ПоказатьВводСтроки(ОписаниеОповещения, СтрокаЗнач, "Введите штрихкод");				
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВводаШК(Результат, ДопПараметры) Экспорт

	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли; 
	
	//ТекДата = ТекущаяДата();
	//СигналНужен = ОбработатьШК(СокрЛП(Результат), Истина);
	СигналНужен = ОбработатьШКНаСервере(СокрЛП(Результат), Истина);
	//Сообщить("Длительность вызова " + (ТекущаяДата() - ТекДата));
	
	Если СигналНужен Тогда
		Сигнал();
	КонецЕсли;	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВводаКоличестваВозврат(Результат, СтрокаТЧ) Экспорт
	
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли; 
	
	Если Результат > СтрокаТЧ.Количество Тогда
		Сообщить("Неверное количество! Повторите попытку");	
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВводаКоличестваВозврат", ЭтаФорма, СтрокаТЧ);
		ПоказатьВводЧисла(ОписаниеОповещения, СтрокаТЧ.Количество, "Введите кол-во возвращаемого товара", 15, 3);
	Иначе	
		СтрокаТЧ.Принято = Результат;
	КонецЕсли; 
	
	
КонецПроцедуры // ()


&НаКлиенте
Процедура МестаЗаказовПриАктивизацииЯчейки(Элемент)
	
	Если Элементы.МестаЗаказов.ВыделенныеСтроки.Количество() Тогда
		Элементы.МестаЗаказов.ВыделенныеСтроки.Очистить();
	КонецЕсли;
	//Если Элементы.МестаЗаказов.ТекущийЭлемент <> Неопределено Тогда
	//	Элементы.МестаЗаказов.ТекущийЭлемент = Неопределено;
	//КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ТоварыПринятоПриИзменении(Элемент)
	
	
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	Най = Объект.Товары.НайтиСтроки(Новый Структура("Доставка", ТекДанные.Доставка));	
	ЗаказСобран = Истина;
	Для каждого Ст Из Най Цикл
		//Асеев 25.03.2021 (по письму Отказ с заездом)>>>
		//Если Ст.Количество <> Ст.Принято Тогда
		Если Ст.Количество > Ст.Принято Тогда
		//Асеев 25.03.2021 (по письму Отказ с заездом)<<<
			ЗаказСобран = Ложь;			
		КонецЕсли;			
	КонецЦикла;
	
	//Асеев 25.03.2021 (по письму Отказ с заездом)>>>
	//Если ЗаказСобран Тогда // отметим заказ как сданный
	//	НайЗ = объект.Доставки.НайтиСтроки(Новый Структура("Доставка", ТекДанные.Доставка));	
	//	Для каждого СтЗ Из НайЗ Цикл		
	//		СтЗ.ПринятНаСкладеЧастично = Истина;			
	//	КонецЦикла;
	//КонецЕсли;
	НайЗ = объект.Доставки.НайтиСтроки(Новый Структура("Доставка", ТекДанные.Доставка));	
	Для Каждого СтЗ Из НайЗ Цикл
		Если СтЗ.ПричинаНеВыполненияДоставки = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом") Тогда
			СтЗ.ПринятНаСкладеПолностью = ЗаказСобран;
			СтЗ.ПринятНаСкладеЧастично = Не ЗаказСобран;
		Иначе
			СтЗ.ПринятНаСкладеЧастично = ЗаказСобран;
		КонецЕсли;
	КонецЦикла;
	//Асеев 25.03.2021 (по письму Отказ с заездом)<<<
	
КонецПроцедуры


&НаКлиенте
Процедура ИзменитьТипВозврата(Команда)
	
	
	ТекДанные = Элементы.Доставки.ТекущиеДанные;			
	
	Если ТекДанные <> Неопределено Тогда	
		
		Спис = Новый СписокЗначений;
		Спис.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат1"), "НЕ вскрытый");
		Спис.Добавить(ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат2"), "Вскрытый");			
		Парам = Новый Структура("Заказ", ТекДанные.Доставка);
		
		ТипЗ = ПолучитьТипЗаказа(ТекДанные.Доставка);
		Парам.Вставить("ТипЗаказа", ТипЗ);
		
		ОО = Новый ОписаниеОповещения("ИзменитьТипВозвратаПослеОтвета", ЭтаФорма, Парам);
		ПоказатьВыборИзСписка(ОО, Спис);	
		
	КонецЕсли;

	
КонецПроцедуры


Функция ПолучитьТипЗаказа(Доставка)

		
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа
	                      |ИЗ
	                      |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
	                      |ГДЕ
	                      |	СтатусыСкладскогоУчета.Заказ = &Заказ");
	Запрос.УстановитьПараметр("Заказ", Доставка);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда
	
		Возврат Рез.ТипЗаказа;	
	
	КонецЕсли;


КонецФункции // ()


&НаКлиенте
Процедура ИзменитьТипВозвратаПослеОтвета(Результат, Параметры) Экспорт
	
	
	ТекДанные = Элементы.Доставки.ТекущиеДанные;
	Если ТекДанные.ТипВозврата <> Результат.Значение Тогда
	
		ИзменитьТипВозвратаНаСервере(Параметры.Заказ, Результат.Значение, Параметры.ТипЗаказа);	
	Иначе
		Сообщить("Тип возврата не изменён");
	КонецЕсли;			

	
КонецПроцедуры


Процедура ИзменитьТипВозвратаНаСервере(Заказ, ТипВозврата, ТипЗаказа)

	
	ДокументОбъект = Документы.УстановкаСтатусовСкладскогоУчета.СоздатьДокумент();
	ДокументОбъект.Дата = ТекущаяДата();
	ДокументОбъект.Заказ = Заказ;
	ДокументОбъект.СтатусСкладскогоУчета = ТипВозврата;
	ДокументОбъект.ТипЗаказа = ТипЗаказа;
		
	Попытка

		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		НайЗ = Объект.Доставки.НайтиСтроки(Новый Структура("Доставка", Заказ));
		Для каждого Ст Из НайЗ Цикл
			Ст.ТипВозврата = ТипВозврата;
			Если ТипВозврата = ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат2") Тогда		
				Ст.Вскрытый = Истина;		
			Иначе 
				Ст.Вскрытый = Ложь;
			КонецЕсли;
		КонецЦикла;				
		
	Исключение	
		
	    #Если Клиент Тогда
	        Сообщить(ОписаниеОшибки());    
		#КонецЕсли		
		
	КонецПопытки;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ДоставкиКоличествоМестПринятоПриИзменении(Элемент)
		
	ТекДанные = Элементы.Доставки.ТекущиеДанные;
	
	Если ТекДанные.КоличествоМестПринято = ТекДанные.Доставка.КоличествоМест Тогда	
		ТекДанные.ПринятНаСкладеПолностью = Истина;	
	Иначе
		ТекДанные.ПринятНаСкладеПолностью = ложь;
	КонецЕсли;
		
	
КонецПроцедуры


Процедура ОбновитьОтображениеЭлементов()

	
	ТекДанные = Элементы.Доставки.ТекущиеДанные;	
	Если ТекДанные <> Неопределено Тогда
		
		Если ТекДанные.РезультатДоставки = ПредопределенноеЗначение("Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично")
			ИЛИ (ТекДанные.ПричинаНеВыполненияДоставки = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом") И (ТекДанные.БылоВскрытиеЗаказа ИЛИ ТекДанные.Вскрытый)) Тогда
			
			Элементы.Товары.ТолькоПросмотр = Ложь;		
			Элементы.МестаЗаказов.ТолькоПросмотр = Истина;			
		Иначе			
			Элементы.Товары.ТолькоПросмотр = Истина;							
			НайМест = Объект.МестаЗаказов.НайтиСтроки(Новый Структура("Доставка", ТекДанные.Доставка));
			Элементы.МестаЗаказов.ТолькоПросмотр = НЕ НайМест.Количество();			
		КонецЕсли;
										
	КонецЕсли;    	
	

КонецПроцедуры

//Асеев 25.03.2021 (по письму Отказ с заездом)>>>
&НаКлиенте
Процедура ОбновитьВидимостьДоступностьЭлементов()
	
	ТекДанные = Элементы.Доставки.ТекущиеДанные;	
	
	Если ТекДанные <> Неопределено Тогда
		Если ТекДанные.РезультатДоставки = ПредопределенноеЗначение("Справочник.новаРезультатМестнойДоставки.Выполнена") Тогда
			Элементы.МестаЗаказов.ТолькоПросмотр = Истина;
			Элементы.Товары.ТолькоПросмотр = Истина;
		ИначеЕсли ТекДанные.РезультатДоставки = ПредопределенноеЗначение("Справочник.новаРезультатМестнойДоставки.ВыполненаЧастично")
			Или (ТекДанные.ПричинаНеВыполненияДоставки = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом") И (ТекДанные.БылоВскрытиеЗаказа Или ТекДанные.Вскрытый)) Тогда				
			Элементы.Товары.ТолькоПросмотр = Ложь;		
			Элементы.МестаЗаказов.ТолькоПросмотр = Истина;
		Иначе			
			Элементы.Товары.ТолькоПросмотр = Истина;
			Элементы.МестаЗаказов.ТолькоПросмотр = Ложь;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры
//Асеев 25.03.2021 (по письму Отказ с заездом)<<<

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.Проведен И НЕ РольДоступна("Админы") Тогда		
		Отказ = Истина;	
		#Если Клиент Тогда
			Сообщить("Документ уже проведен. Корректировки проведенного документа запрещены");
		#КонецЕсли		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДоставкиБылоВскрытиеЗаказаПриИзменении(Элемент)
	
	
	ТекДанные = Элементы.Доставки.ТекущиеДанные;	
	Если ТекДанные <> Неопределено И ЗначениеЗаполнено(ТекДанные.ТипВозврата) Тогда		
		Если ТекДанные.БылоВскрытиеЗаказа Тогда									
			ТекДанные.ТипВозврата = ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат2");
			//Асеев 22.03.2021 (по письму Отказ с заездом)>>>
			Если ТекДанные.ПричинаНеВыполненияДоставки = ПредопределенноеЗначение("Справочник.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом") Тогда
				ТекДанные.ПринятНаСкладеПолностью = Ложь;
				ТекДанные.КоличествоМестПринято = 0;
			КонецЕсли;
			//Асеев 22.03.2021 (по письму Отказ с заездом)<<<
		Иначе
			ТекДанные.ТипВозврата = ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.Возврат1");
		КонецЕсли;			
	КонецЕсли;
	
	
КонецПроцедуры
 
//+Степанов Задача № 3935
&НаСервере
Процедура ЗаписатьДанныеСканированияВоВнешнийЛог(Заказ, ШК)
	
	//НомерЗаказа = ?(Заказ <> Неопределено, Заказ.Номер,"");
	//ВнешнееЛогированиеСервер.ЗаписатьЛогСканирования_ОбщееВнешнееЛогирование(3,ТекущаяДата(),ПараметрыСеанса.РабочееМесто.Наименование,Объект.Номер,ШК,НомерЗаказа);
	
	//получить данные для записи в лог
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("РабочееМесто", ПараметрыСеанса.РабочееМесто);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РабочиеМеста.Наименование КАК НаименованиеРабочегоМеста,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Номер, """") КАК НомерЗаказа
	|ИЗ
	|	Справочник.РабочиеМеста КАК РабочиеМеста
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (РеализацияТоваровУслуг.Ссылка = &Заказ)
	|ГДЕ
	|	РабочиеМеста.Ссылка = &РабочееМесто";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ВнешнееЛогированиеСервер.ЗаписатьЛогСканирования_ОбщееВнешнееЛогирование(3, ТекущаяДата(), Выборка.НаименованиеРабочегоМеста, Объект.Номер, ШК, Выборка.НомерЗаказа);
	
КонецПроцедуры	
//-Степанов Задача № 3935

//Асеев 18.03.2021 (по письму Проведение и печать АПП)>>>
&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ПечататьАПП = Не Объект.Проведен;
	
	Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	
	Если ПечататьАПП Тогда
		ПечатьАПП(Команда);
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры
//Асеев 18.03.2021 (по письму Проведение и печать АПП)<<<



