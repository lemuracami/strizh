
Процедура ПриКопировании(ОбъектКопирования)
	// Вставить содержимое обработчика.
	ПисьмоОтправлено = Ложь;
	ДвиженияВыполнены = Ложь;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	 //Данный фрагмент построен конструктором.
	 //При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	 //регистр ОтклоненияКоличестваДоставок
	Движения.ОтклоненияКоличестваДоставок.Записывать = Истина;
	Движения.ОтклоненияКоличестваДоставок.Очистить();
	
	Тов = Товары.Выгрузить();
	Тов.Свернуть("Номенклатура, Доставка", "Количество, НеобходимоеКоличество");
	
	Для Каждого ТекСтрокаТовары Из Тов Цикл
		Най = Доставки.Найти(ТекСтрокаТовары.Доставка);
		Движение = Движения.ОтклоненияКоличестваДоставок.Добавить();
		Движение.Период = Дата;
		Движение.Доставка = ТекСтрокаТовары.Доставка;
		Движение.Рейс = Най.Рейс;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.СтароеКоличество = ТекСтрокаТовары.НеобходимоеКоличество;
		Движение.НовоеКоличество = ТекСтрокаТовары.Количество;
		Движение.ДоставкаОтменена = Най.ДоставкаОтменена;
	КонецЦикла;

	Для Каждого Тек Из Доставки Цикл
		Если ТипЗнч(Тек.Доставка.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			lem.ОтразитьСоставЗаказаВИстории(Ссылка, Тек.Доставка.Ссылка, Ложь);
		КонецеСли;	
	КонецЦикла;	
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

//+++ БАО 22.08.2017 №1730

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда			
		ТерминалДоставки = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ТерминалДоставки");
		Если Не ЗначениеЗаполнено(ТерминалДоставки) Тогда
			ТерминалДоставки = Справочники.РегиональныеТерминалы.МоскваСтриж;
		КонецЕсли;	
	КонецЕсли;	
			
КонецПроцедуры

//--- БАО 22.08.2017 №1730

Процедура ОбновитьМашинуВАдминкеНаСервере(Ном)
    ////Серегин М.В. 30.07.2015 17:31:31 старый код
    //Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
    //евген.ЗапросКИнтернетМагазину("
    //|UPDATE _order
    //|SET carID = 0,  whoLastChange = '" + ПараметрыСеанса.ТекущийПользователь + "' 
    //|	WHERE
    //|		orderId = " + Формат(Ном, "ЧГ=") + " EXEC mp_saveOrderHistory " + Формат(Ном, "ЧГ="), Соединение);
    ////Серегин М.В. 30.07.2015 17:31:37 новый
    Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
    евген.ЗапросКИнтернетМагазину("
	|EXEC p1c_removeCarriageFromOrder " + Формат(Ном, "ЧГ=") + "
    |EXEC mp_saveOrderHistory " + Формат(Ном, "ЧГ="), Соединение);
    //Серегин М.В. 30.07.2015 17:31:39 
КонецПроцедуры


Процедура ИсправитьДоставкуНаСервере(Соединение, Тек_, Режим);
	Если Режим Тогда
		Струк = Новый Структура;
		Струк.Вставить("Доставка", Тек_.Доставка);
		НайСтр = Товары.НайтиСтроки(Струк);
		Кол1 = 0;
		Кол2 = 0;
		
		Для Каждого Стр Из НайСтр Цикл
			Кол1 = Кол1 + Стр.Количество;
			Кол2 = Кол2 + Стр.НеобходимоеКоличество;
		КонецЦикла;	
		Если Кол1 = Кол2 Тогда
			Возврат;
		КонецеСли;	
		Дост = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Тек_.Доставка.Номер);
		Для Каждого Тек Из НайСтр Цикл
			Кол = Тек.НеобходимоеКоличество - Тек.Количество;
			Если Кол = 0 Тогда
				Продолжить;
			КонецеСли;	
			КодТовара = Число(Тек.Номенклатура.Код);
			
			
			евген.ЗапросКИнтернетМагазину("DECLARE @t TMissedCount
			|INSERT INTO @t ([skuid],[MissedCount]) VALUES (" + Формат(КодТовара, "ЧГ=") + ", " + Формат(Кол, "ЧН=0; ЧГ=") + ")" + "
			|EXEC sp_setMissedCount " + Формат(Число(Тек.Доставка.Номер), "ЧГ=") + ", @t, 0", Соединение);
			
			
		КонецЦикла;
	Иначе
		Струк = Новый Структура;
		Струк.Вставить("Доставка", Тек_.Доставка);
		НайСтр = Товары.НайтиСтроки(Струк);
		Кол1 = 0;
		Кол2 = 0;
		
		Для Каждого Стр Из НайСтр Цикл
			Кол1 = Кол1 + Стр.Количество;
			Кол2 = Кол2 + Стр.НеобходимоеКоличество;
		КонецЦикла;	
		Если Кол1 = Кол2 Тогда
			Возврат;
		КонецеСли;	
		Дост = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Тек_.Доставка.Номер);
		Д = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Тек_.Доставка.Номер);
		ОбД = Д.ПолучитьОбъект();
		Д2 = Документы.ПеремещениеТоваров.НайтиПоНомеру(Тек_.Доставка.Номер);
		ОбД2 = Д2.ПолучитьОбъект();
		//Если Не Дост.Пустая() Тогда
		//	Д3 = Дост.Груз.Ссылка;
		//	ОбД3 = Д3.ПолучитьОбъект();
		//Иначе
		//	Д3 = ДОКУМЕНТЫ.новаГруз.ПустаяСсылка();
		//КонецеСли;	
		
		Для Каждого Тек Из НайСтр Цикл
			Кол = Тек.НеобходимоеКоличество;
			Если Кол = 0 Тогда
				Продолжить;
			КонецеСли;	
			КодТовара = Число(Тек.Номенклатура.Код);
			
			евген.ЗапросКИнтернетМагазину("DECLARE @t TMissedCount
			|INSERT INTO @t ([skuid],[MissedCount]) VALUES (" + Формат(КодТовара, "ЧГ=") + ", " + Формат(0, "ЧН=0; ЧГ=") + ")" + "
			|EXEC sp_setMissedCount " + Формат(Число(Тек.Доставка.Номер), "ЧГ=") + ", @t, 1", Соединение);
			
		КонецЦикла;
		
	КонецеСли;
КонецПроцедуры	

Функция ПолучитьДанныеОбновлениеСтатусовВАдминке()
//|	новаОтчетВодителя.Доставка.ТерминалДоставки КАК Терминал

    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	213 КАК Статус,
        |	ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка КАК ДокументРегистратор,
        |	ЛОЖЬ КАК ПредварительноеЗакрытие,
        |	РеализацияТоваровУслуг.Ссылка КАК Реализация,
        |	РеализацияТоваровУслуг.ТерминалДоставки.Ссылка КАК Терминал,
        |	РеализацияТоваровУслуг.Номер
        |ИЗ
        |	Документ.ДоставкиСОтклонениямиКоличестваСписком.Доставки КАК ДоставкиСОтклонениямиКоличестваСпискомДоставки
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        |		ПО (ВЫРАЗИТЬ(ДоставкиСОтклонениямиКоличестваСпискомДоставки.Доставка КАК Документ.РеализацияТоваровУслуг).Ссылка = РеализацияТоваровУслуг.Ссылка)
        |ГДЕ
        |	ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка = &Док";
    
    Запрос.УстановитьПараметр("Док", Ссылка);
        
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

Процедура ОбновлениеСтатусовВАдминке(Режим)
	
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();	
	Период = ТекущаяДата();

	
	// сформируем таблицу данных для по статусам
	ТаблицаДанных = ПолучитьДанныеОбновлениеСтатусовВАдминке();
	
	
	Если Режим = РежимЗаписиДокумента.Проведение Тогда
		
		//// --- Отключено в рамках Задача № 2813
		//СтрТекстЗапроса="";
		//Стр2 = "";
		//ТекстСоставлен = Ложь;
		//Статус = 0;
		////ТаблицаДанных = ПолучитьДанныеОбновлениеСтатусовВАдминке();
		//
		//Для каждого Стр Из ТаблицаДанных Цикл
		//	Статус = Стр.Статус;
		//	СтрТекстЗапроса = СтрТекстЗапроса + "(" +Формат(Сокрлп(Стр.Номер), "ЧГ=") + ","+Стр.Статус+",'Online приход по ТСД (new)'"+")"+",";
		//	
		//	ТекстСоставлен = Истина;
		//	
		//КонецЦикла;
		// 
		//
		//// текущий статус
		//Если ТекстСоставлен И ЗначениеЗаполнено(СтрТекстЗапроса) Тогда
		//	ДлинаТекста = СтрДлина(СтрТекстЗапроса);
		//	СтрТекстЗапроса = Лев(СтрТекстЗапроса,ДлинаТекста-1);
		//	ТекстЗапроса = "
		//	|DECLARE @t TOrderStatusId
		//	|INSERT INTO @t (orderID, statusId, comment) VALUES " +
		//	СтрТекстЗапроса +" EXEC import_setOrdersStatusIDFrom1C @t";
		//	Евген.ЗапросКИнтернетМагазину(ТекстЗапроса, Подкл);		
		//КонецЕсли;
		//// --- Отключено в рамках Задача № 2813

		// Задача № 2813
		МассивСтатусов = Неопределено;	
		ТерминалДоставкиКод = ТерминалДоставки.Код;
		Для каждого Стр Из ТаблицаДанных Цикл
			
			ДопПараметрыСтатуса = mas.ДобавитьДополнительныйПараметрСтатуса("ProcessingTerminal", Число(ТерминалДоставкиКод)); // Задача № 3027
			МассивСтатусов = mas.ДобавитьПараметрыЗаказаДляУстановкиСтатуса(Стр.Номер, Стр.Статус, "Online приход по ТСД (new)",,,МассивСтатусов, ДопПараметрыСтатуса);	
			
		КонецЦикла;
		СтруктураВозврата = mas.ОтправитьМассивСтатусовЗаказов(МассивСтатусов);
		// Задача № 2813
		
	КонецЕсли;
	
	//костыль
	ТаблицаДанных.Колонки.Добавить("БылоЗакрытие");
	
	РаботаСоСтатусамиЗаказовСервер.СохранитьСтатусы(ТаблицаДанных,,ТерминалДоставки);
	// Задача № 3027 //smv.СохранитьСтатус(ТаблицаДанных);
	
КонецПроцедуры



Процедура ПровестиИЗакрытьНаСервере() Экспорт
	
	Записать();
	
	Соединение = Евген.СоздатьПодключениеКИнтернетМагазину();
	
	//Если Объект.Доставка.Пустая() Тогда
	//	Возврат;
	//КонецеСли;	
	Подкл = Евген.СоздатьПодключениеКИнтернетМагазину();
	
	МасР = Новый Массив;
	
	Для Каждого Тек_ Из Доставки Цикл
		Если Не ДвиженияВыполнены Тогда
			Если Тек_.ДоставкаОтменена И Не Тек_.Рейс.Пустая() Тогда
				Если Не МаршрутизацияVeeroute Тогда
					//Дост = БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Тек_.Доставка.Номер);
					//МассивОбновленияОбъектовУТЛ = Новый Массив;
					//МассивДоставокНаУдаление = Новый Массив;			
					//
					//МассивДоставокНаУдаление.Добавить(Дост.Ссылка);
					//МассивОбновленияОбъектовУТЛ.Добавить(Дост.Ссылка);
					//
					//
					//Если МассивДоставокНаУдаление.Количество() <> 0 Тогда
					//	обИсточникВР = Обработки.новаИсточникВозможныеРейсы.Создать();
					//	обИсточникВР.ИсключитьДоставкиИзРейса(Тек_.Рейс.Ссылка, МассивДоставокНаУдаление);
					//	
					//	УдалительИзРейсов = Обработки.новаИсточникМаршрутРейса.Создать();
					//	УдалительИзРейсов.Журнал = Новый Структура("Дерево", Новый Структура("Значение", Новый ДеревоЗначений));
					//	УдалительИзРейсов.НачатьРедактирование(Тек_.Рейс.Ссылка, Тек_.Рейс.ПолучитьОбъект());
					//	УдалительИзРейсов.УдалитьДоставки(Тек_.Рейс.Ссылка, МассивДоставокНаУдаление, Истина);
					//	УдалительИзРейсов.ЗакончитьРедактирование(Тек_.Рейс.Ссылка, Ложь);
					//	
					//	МассивОбновленияОбъектовУТЛ.Добавить(Тек_.Рейс);
					//	обИсточникВР = Обработки.новаИсточникВозможныеРейсы.Создать();
					//	обИсточникВР.ИсключитьДоставкиИзРейса(Тек_.Рейс.Ссылка, МассивДоставокНаУдаление);
					//КонецЕСли;	
					//Если МассивОбновленияОбъектовУТЛ.Количество() > 0 Тогда
					//	новаОбщиеПроцедуры.ОповеститьОбОбновлении(МассивОбновленияОбъектовУТЛ);
					//КонецЕсли;
				Иначе
					Наб = РегистрыСведений.ЗаказыКОтвязкеОтРейсов.СоздатьНаборЗаписей();
					ТекВр = ТекущаяДата();
					Наб.Отбор.Период.Установить(ТекВр);
					Наб.Отбор.Рейс.Установить(Тек_.РейсV);
					Наб.Отбор.Заказ.Установить(Тек_.Доставка);
					
					Нов = Наб.Добавить();
					Нов.Период = ТекВр;
					Нов.Рейс = Тек_.РейсV;
					Нов.Заказ = Тек_.Доставка;
					Нов.ТипОтвязки = Перечисления.ТипыОтвязкиЗаказовОтМашин.НеНайденныеЗаказы;
					
					// Якурнов 06.08.2018 14:21:41
					Нов.ДокументРегистратор = Ссылка;
					
					Наб.Записать();
					
					//Асеев 30.04.2020 (Задача № 4357)>>>
					Если Рейс.Пустая() Тогда
						//Асеев 30.04.2020 (Задача № 4357)<<<
						Наб = РегистрыСведений.МестонахождениеЗаказа.СоздатьНаборЗаписей();
						ТекВр = ТекущаяДата();
						Наб.Отбор.Период.Установить(ТекВр);
						Наб.Отбор.Заказ.Установить(Тек_.Доставка);
						
						Нов = Наб.Добавить();
						Нов.Период = ТекВр;
						Нов.Рейс = Тек_.РейсV;
						Нов.Заказ = Тек_.Доставка;
						Нов.Местонахождение = Справочники.ВидыМестонахожденияЗаказа.НаСкладе;
						Нов.Терминал = ТерминалДоставки;
						Нов.ДокументРегистратор = Ссылка;
						
						Наб.Записать();
					КонецЕсли;
					
					
					НайРВ = МасР.Найти(Тек_.РейсV.Ссылка);
					
					Если НайРв = Неопределено Тогда
						МасР.Добавить(Тек_.РейсV.Ссылка);
					КонецеСли;	
					
				КонецеСли;
				ОбновитьМашинуВАдминкеНаСервере(Число(Тек_.Доставка.Номер));
				//СтрЗапроса = "EXEC import_setOrderStatusIDFrom1C " + Формат(Сокрлп(Тек_.Доставка.Номер), "ЧГ=") + ",213,'нет на складе'";
				//Если lem.СохранитьСтатус(Тек_.Доставка, 213, Объект.Ссылка) Тогда
				//	Евген.ЗапросКИнтернетМагазину(СтрЗапроса, Подкл);
				//КонецеСли;					
			Иначе
				ИсправитьДоставкуНаСервере(Соединение, Тек_, истина);
				
				
				
			КонецеСли;
		КонецеСли;
	КонецЦикла;
	
	Для Каждого Тек Из МасР Цикл
		//Попытка
		Попытка
		Р = Тек.ПолучитьОбъект();
		Р.Записать(РежимЗаписиДокумента.Запись);
		Р.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		
		КонецПопытки;
	//исключение
	//	
	//	конецПопытки;
	КонецЦикла;
	
	Записать(РежимЗаписиДокумента.Проведение);
	
	ОбновлениеСтатусовВАдминке(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры