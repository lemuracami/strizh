
&НаКлиенте
Процедура ОтправитьПисьмо(Команда)
	ДатаНач = НачалоДня(ТекущаяДата());
	ДатаКон = КонецДня(ТекущаяДата());
	
	Д = Новый ДиалогРедактированияСтандартногоПериода();
	Д.Период = Новый СтандартныйПериод(ДатаНач, ДатаКон);
	
	Если Д.Редактировать() Тогда
		ДатаНач = НачалоДня(Д.Период.ДатаНачала);
		ДатаКон = КонецДня(Д.Период.ДатаОкончания);
	КонецеСли;	
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	РеализацияТоваровУслуг.ВладелецТовара КАК ИнтернетМагазин
	            |ИЗ
	            |	Документ.ДоставкиСОтклонениямиКоличестваСписком.Товары КАК ДоставкиСОтклонениямиКоличестваСпискомТовары
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДоставкиСОтклонениямиКоличестваСписком.Доставки КАК ДоставкиСОтклонениямиКоличестваСпискомДоставки
	            |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	            |			ПО (ВЫРАЗИТЬ(ДоставкиСОтклонениямиКоличестваСпискомДоставки.Доставка КАК Документ.РеализацияТоваровУслуг).Ссылка = РеализацияТоваровУслуг.Ссылка)
	            |		ПО (ВЫРАЗИТЬ(ДоставкиСОтклонениямиКоличестваСпискомТовары.Доставка КАК Документ.РеализацияТоваровУслуг).Ссылка = ВЫРАЗИТЬ(ДоставкиСОтклонениямиКоличестваСпискомДоставки.Доставка КАК Документ.РеализацияТоваровУслуг).Ссылка)
	            |ГДЕ
	            |	(ДоставкиСОтклонениямиКоличестваСпискомТовары.НеобходимоеКоличество <> ДоставкиСОтклонениямиКоличестваСпискомТовары.Количество
	            |			ИЛИ ДоставкиСОтклонениямиКоличестваСпискомДоставки.ДоставкаОтменена = ИСТИНА)
	            |	И ДоставкиСОтклонениямиКоличестваСпискомТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	            |	И ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.ПометкаУдаления = ЛОЖЬ
	            |	И ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.ПисьмоОтправлено = ЛОЖЬ
	            |	И ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.ЗапросНаОтправкуПисьмаПроизведен = ЛОЖЬ
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	РеализацияТоваровУслуг.ВладелецТовара
	            |
	            |УПОРЯДОЧИТЬ ПО
	            |	РеализацияТоваровУслуг.ВладелецТовара.Приоритет";
				
	Зап.УстановитьПараметр("ДатаНач", ДатаНач);			
	Зап.УстановитьПараметр("ДатаКон", ДатаКон);			
				
	Рез = Зап.Выполнить().Выгрузить();
	Сп = Новый СписокЗначений;
	Для Каждого Тек Из Рез Цикл
		Сп.Добавить(Тек.ИнтернетМагазин,СокрЛП(Тек.ИнтернетМагазин.Наименование), Истина, БиблиотекаКартинок.ABC_АнализПродаж);
	КонецЦикла;	
	Мас = Новый Массив;
	Если Не Сп.ОтметитьЭлементы("Выберите интернет-магазины...") Тогда
		Возврат;
	КонецеСли;	
	
	Для Каждого Тек Из Сп Цикл
		Если Тек.Пометка Тогда
			Мас.Добавить(Тек.Значение);
		КонецеСли;	
	КонецЦикла;	
	Если Мас.Количество() <> 0 Тогда
		ОтправитьПисьмоНаСервере(Мас, ДатаНач, ДатаКон);
	КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПисьмоНаСервере(Мас, ДатаНач, ДатаКон)
	
	
	
	
	НачДатаОтбора = НачалоДня(ДатаКон - 86400);
	ВыбНакл = Документы.Накладная003.Выбрать(НачДатаОтбора, ДатаКон,,"Дата Убыв");
	
	МасКонтр003 = Новый ТаблицаЗначений;
	МасКонтр003.Колонки.Добавить("Контрагент");
	МасКонтр003.Колонки.Добавить("Док");
	
	Пока ВыбНакл.Следующий() Цикл
		//Если ВыбНакл.Дата <= ДатаКон Тогда
			Нов = МасКонтр003.Добавить();
			Нов.Контрагент = ВыбНакл.Контрагент.Ссылка;
			Нов.Док = ВыбНакл.Ссылка;
		//КонецеСли;	
	КонецЦикла;	
	
	
	
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	РеализацияТоваровУслуг.ВладелецТовара КАК ВладелецТовара,
	            |	РеализацияТоваровУслуг.Номер КАК НомерЗаказа,
	            |	""д"" + РеализацияТоваровУслуг.Номер + ""/"" + РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ПолныйНомер,
	            |	РеализацияТоваровУслуг.Ссылка КАК Док,
	            |	новаМестнаяДоставка.Менеджер КАК Менеджер,
	            |	РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК ВнешнийНомерЗаказа,
	            |	ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка КАК ДокОткл,
	            |	ДоставкиСОтклонениямиКоличестваСпискомТовары.Номенклатура,
	            |	ВЫБОР
	            |		КОГДА ЕСТЬNULL(новаМестнаяДоставка.Ссылка, ИСТИНА) = ИСТИНА
	            |			ТОГДА ""САМОВЫВОЗ: ""
	            |		ИНАЧЕ ВЫБОР
	            |				КОГДА ДоставкиСОтклонениямиКоличестваСпискомДоставки.ДоставкаОтменена = ИСТИНА
	            |					ТОГДА ""НЕ ПОЕХАЛО: ""
	            |				ИНАЧЕ ""ЧАСТИЧНО ПОЕХАЛО (НЕНАЙДЕННЫЕ ПОЗИЦИИ): ""
	            |			КОНЕЦ
	            |	КОНЕЦ КАК ДоставкаОтменена,
	            |	ДоставкиСОтклонениямиКоличестваСпискомТовары.НеобходимоеКоличество - ДоставкиСОтклонениямиКоличестваСпискомТовары.Количество КАК НенайденноеКоличество
	            |ИЗ
	            |	Документ.ДоставкиСОтклонениямиКоличестваСписком.Товары КАК ДоставкиСОтклонениямиКоличестваСпискомТовары
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДоставкиСОтклонениямиКоличестваСписком.Доставки КАК ДоставкиСОтклонениямиКоличестваСпискомДоставки
	            |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	            |			ПО (ВЫРАЗИТЬ(ДоставкиСОтклонениямиКоличестваСпискомДоставки.Доставка КАК Документ.РеализацияТоваровУслуг).Ссылка = РеализацияТоваровУслуг.Ссылка)
	            |			ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
	            |			ПО (ВЫРАЗИТЬ(ДоставкиСОтклонениямиКоличестваСпискомДоставки.Доставка КАК Документ.РеализацияТоваровУслуг).Номер = новаМестнаяДоставка.Номер)
	            |		ПО (ВЫРАЗИТЬ(ДоставкиСОтклонениямиКоличестваСпискомТовары.Доставка КАК Документ.РеализацияТоваровУслуг).Ссылка = ВЫРАЗИТЬ(ДоставкиСОтклонениямиКоличестваСпискомДоставки.Доставка КАК Документ.РеализацияТоваровУслуг).Ссылка)
	            |ГДЕ
	            |	(ДоставкиСОтклонениямиКоличестваСпискомТовары.НеобходимоеКоличество <> ДоставкиСОтклонениямиКоличестваСпискомТовары.Количество
	            |			ИЛИ ДоставкиСОтклонениямиКоличестваСпискомДоставки.ДоставкаОтменена = ИСТИНА)
	            |	И РеализацияТоваровУслуг.ВладелецТовара В(&Мас)
	            |	И ДоставкиСОтклонениямиКоличестваСпискомТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	            |	И ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.ПометкаУдаления = ЛОЖЬ
	            |	И ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.ПисьмоОтправлено = ЛОЖЬ
	            |	И ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.ЗапросНаОтправкуПисьмаПроизведен = ЛОЖЬ
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка,
	            |	ДоставкиСОтклонениямиКоличестваСпискомТовары.Номенклатура,
	            |	РеализацияТоваровУслуг.Ссылка,
	            |	РеализацияТоваровУслуг.ВладелецТовара,
	            |	""д"" + РеализацияТоваровУслуг.Номер + ""/"" + РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
	            |	РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
	            |	РеализацияТоваровУслуг.Номер,
	            |	ВЫБОР
	            |		КОГДА ЕСТЬNULL(новаМестнаяДоставка.Ссылка, ИСТИНА) = ИСТИНА
	            |			ТОГДА ""САМОВЫВОЗ: ""
	            |		ИНАЧЕ ВЫБОР
	            |				КОГДА ДоставкиСОтклонениямиКоличестваСпискомДоставки.ДоставкаОтменена = ИСТИНА
	            |					ТОГДА ""НЕ ПОЕХАЛО: ""
	            |				ИНАЧЕ ""ЧАСТИЧНО ПОЕХАЛО (НЕНАЙДЕННЫЕ ПОЗИЦИИ): ""
	            |			КОНЕЦ
	            |	КОНЕЦ,
	            |	новаМестнаяДоставка.Менеджер,
	            |	ДоставкиСОтклонениямиКоличестваСпискомТовары.НеобходимоеКоличество - ДоставкиСОтклонениямиКоличестваСпискомТовары.Количество
	            |
	            |УПОРЯДОЧИТЬ ПО
	            |	ВладелецТовара,
	            |	НомерЗаказа
	            |ИТОГИ ПО
	            |	ВладелецТовара,
	            |	ДоставкаОтменена,
	            |	Менеджер,
	            |	Док,
	            |	ДокОткл";
	Зап.УстановитьПараметр("ДатаНач", ДатаНач);			
	Зап.УстановитьПараметр("ДатаКон", ДатаКон);			
	Зап.УстановитьПараметр("Мас", Мас);			
	Выб = Зап.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	МасД = Новый Массив;
	МасД2 = Новый Массив;
	Пока Выб.Следующий() Цикл
		Стр = "";
		ВыбТ = Выб.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);		
		Пока ВыбТ.Следующий() Цикл
			//если ВыбТ.ДоставкаОтменена = Истина Тогда
			//	Стр = Стр + "НЕ ПОЕХАЛО: " + Символы.ПС;
			//Иначеесли ВыбТ.ДоставкаОтменена = Ложь Тогда
			//	Стр = Стр + "ЧАСТИЧНО НЕ ПОЕХАЛО: " + Символы.ПС;
			//Иначе
				Стр = Стр + ВыбТ.ДоставкаОтменена + Символы.ПС;
			//КонецеСли;
			ЕстьТовары = Ложь;
			ВыбМ = ВыбТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыбМ.Следующий() Цикл
				Мен = ВыбМ.Менеджер;
				ВыбД = ВыбМ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыбД.Следующий() Цикл
					
					ЕстьВНакладной003 = Ложь;
					ПроверятьПоНакл003 = Ложь;
					
					Для Каждого Тек Из МасКонтр003 Цикл
						Если Тек.Контрагент.Ссылка = Выб.ВладелецТовара.Ссылка Тогда
							ПроверятьПоНакл003 = истина;
							Прервать;
						КонецеСли;	
					КонецЦикла;	
					
					Если ПроверятьПоНакл003 Тогда
						Для Каждого Най003 Из МасКонтр003 Цикл
							Таб003 = Най003.Док.Заказы.Выгрузить();
							Если Таб003.Количество() <> 0 Тогда
								НайЗ = Таб003.Найти(СокрЛП(ВыбД.НомерЗаказа), "НомерЗаказа");
								Если НайЗ <> Неопределено Тогда
									ЕстьВНакладной003 = истина;
									Прервать;
								КонецеСли;	
							КонецеСли;							
						КонецЦикла;
						
						Если Не ЕстьВНакладной003 И ПроверятьПоНакл003 Тогда
							ВыбДокО = ВыбД.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыбДокО.Следующий() Цикл
								Если МасД2.Найти(ВыбДокО.ДокОткл) = Неопределено Тогда
									МасД2.Добавить(ВыбДокО.ДокОткл);
								КонецеСли;	
							КонецЦикла;
							
							Продолжить;
						КонецеСли;	
					КонецеСли;	
					
					
					ЕстьТовары = Истина;
					
					Стр = Стр + "д" + СокрЛП(ВыбД.НомерЗаказа) + "/" + СокрЛП(ВыбД.ВнешнийНомерЗаказа) + ", менеджер: " + СокрЛП(Мен) + Символы.ПС;
					ВыбДокО = ВыбД.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					МасНом = Новый Массив;
					
					Пока ВыбДокО.Следующий() Цикл
						Если МасД.Найти(ВыбДокО.ДокОткл) = Неопределено Тогда
							МасД.Добавить(ВыбДокО.ДокОткл);
						КонецеСли;	
						ВыбН = ВыбДокО.Выбрать();
						Пока ВыбН.Следующий() Цикл
							Если МасНом.Найти(ВыбН.Номенклатура) = Неопределено Тогда
								Стр = Стр + "	" + ВыбН.Номенклатура.Наименование + " = " + Строка(ВыбН.НенайденноеКоличество) + " шт. (" + СокрЛП(ВыбН.Номенклатура.Артикул) + ")" + Символы.ПС;
								МасНом.Добавить(ВыбН.Номенклатура);
							КонецеСли;	
						КонецЦикла;	
					КонецЦикла;
				КонецЦикла;	
			КонецЦикла;
		КонецЦикла;
		
		
		МасП = Новый Массив;
		
		Если Не ЕстьТовары Тогда
			Продолжить;
		КонецеСли;	
		
        //Запрос2 = Новый Запрос;
        //Запрос2.Текст = "ВЫБРАТЬ
        //                |	РассылкаКонтрагентовПоОтчетам.АдресПочты КАК АдресПочты
        //                |ИЗ
        //                |	РегистрСведений.РассылкаКонтрагентовПоОтчетам КАК РассылкаКонтрагентовПоОтчетам
        //                |ГДЕ
        //                |	РассылкаКонтрагентовПоОтчетам.Контрагент.Ссылка = &Контрагент
        //                |	И РассылкаКонтрагентовПоОтчетам.ВидОтчета.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОтправляемыхОтчетов.НенайденныеДоставки)
        //                |
        //                |УПОРЯДОЧИТЬ ПО
        //                |	АдресПочты";
        //Запрос2.УстановитьПараметр("Контрагент", Выб.ВладелецТовара.Ссылка);
        //РезП = Запрос2.Выполнить();
        //
        //Если РезП.Пустой() Тогда
        //	Запрос = Новый Запрос;
        //	Запрос.Текст = "ВЫБРАТЬ
        //	|	РассылкиКонтрагентов.Почта
        //	|ИЗ
        //	|	РегистрСведений.РассылкиКонтрагентов КАК РассылкиКонтрагентов
        //	|ГДЕ
        //	|	РассылкиКонтрагентов.Контрагент = &Контрагент
        //	|	И РассылкиКонтрагентов.ТипРассылки = &ТипРассылки";
        //	Запрос.УстановитьПараметр("Контрагент", Выб.ВладелецТовара.Ссылка);
        //	Запрос.УстановитьПараметр("ТипРассылки", Перечисления.ТипыРассылки.СкладскаяРассылка);
        //	РезультатЗапроса = Запрос.Выполнить();
        //	Выб2 = РезультатЗапроса.Выбрать();
        //	Пока Выб2.Следующий() Цикл
        //		МасП.Добавить(Выб2.Почта);
        //	КонецЦикла;	
        //Иначе
        //	ВыбП = РезП.Выбрать();
        //	Пока ВыбП.Следующий() Цикл
        //		МасП.Добавить(ВыбП.АдресПочты);
        //	КонецЦикла;	
        //КонецеСли;
		
		МасП.Добавить("dmitry.khnychkov@strizh-logistic.ru");
		МасП.Добавить("tovaroved@strizh-logistic.ru");
		МасП.Добавить("logist@strizh-logistic.ru");
        //+++++Серегин М.В. 19.01.2016 11:49:53 
        //МасП.Добавить("yuriy.gnedov@strizh-logistic.ru");
        //-----Серегин М.В. 19.01.2016 11:49:55 
		МасП.Добавить("yulia.semenova@strizh-logistic.ru");
		//МасП.Добавить("evgeniy.marochkin@strizh-logistic.ru");
		lem.ОтправитьСообщение(МасП, "Заказы, не найденные (" + СокрЛП(Выб.ВладелецТовара.Наименование) + ") "+ ПредставлениеПериода(ДатаНач, ДатаКон, "ДЛФ=DD"), Стр, , "Логистическая компания ""Стриж""",,,,,Перечисления.ТипыРассылки.СкладскаяРассылка) ;		
	КонецЦикла;	
	
	МасП = Новый Массив;

	МасП.Добавить("logist@strizh-logistic.ru"); 
    //+++++Серегин М.В. 19.01.2016 11:50:30 
    //МасП.Добавить("yuriy.gnedov@strizh-logistic.ru");
    //-----Серегин М.В. 19.01.2016 11:50:31 
	lem.ОтправитьСообщение(МасП, "Склад", "Переформируйте ведомости по машинам.",,"Логистическая компания ""Стриж""");
	
	Для Каждого Тек Из МасД Цикл 
		Д = Тек.Получитьобъект();
		Д.ЗапросНаОтправкуПисьмаПроизведен = истина;
		Д.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;	
	
	Для Каждого Тек Из МасД2 Цикл 
		Д = Тек.Получитьобъект();
		Д.ПисьмоОтправлено = истина;
		Д.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;	
	
	Элементы.Список.Обновить();
КонецПроцедуры

//&НаКлиенте
//Процедура СоздатьКорректировку(Команда)
//	Если Не ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.Корректировка) = 1 Тогда
//		Форма = ПолучитьФорму("Документ.КорректировкаОтклоненияКоличества.Форма.ФормаДокумента", , ЭтаФорма);
//		ЗаполнитьЗначенияСвойств(Форма.Объект, Элементы.Список.ТекущиеДанные.Ссылка,,"Товары");
//		Форма.Объект.Товары.Очистить();
//		Для Каждого Тек Из Элементы.Список.ТекущиеДанные.Ссылка.Товары Цикл
//			Нов = Форма.Объект.Товары.Добавить();
//			ЗаполнитьЗначенияСвойств(Нов, Тек);
//		КонецЦикла;	
//		Форма.Объект.ДокументОтклоненияКоличества = Элементы.Список.ТекущиеДанные.Ссылка;
//		Форма.Объект.ДвиженияВыполнены = Ложь;
//		Форма.Объект.ПисьмоОтправлено = Ложь;
//		Форма.Открыть();
//	Иначе
//		Д = Новый Структура("Ключ", Элементы.Список.ТекущиеДанные.Корректировка);
//		Форма = ПолучитьФорму("Документ.КорректировкаОтклоненияКоличества.Форма.ФормаДокумента", Д, ЭтаФорма);
//		Форма.Открыть();
//	КонецеСли;	
//КонецПроцедуры

&НаКлиенте
Процедура ВнешнийНомерЗаказаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(ВнешнийНомерЗаказа) Тогда
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.Номер КАК Номер
		            |ИЗ
		            |	Документ.ДоставкиСОтклонениямиКоличестваСписком.Доставки КАК ДоставкиСОтклонениямиКоличестваСпискомДоставки
		            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		            |		ПО ДоставкиСОтклонениямиКоличестваСпискомДоставки.Доставка.Номер = РеализацияТоваровУслуг.Номер
		            |ГДЕ
		            |	РеализацияТоваровУслуг.НомерВнешнегоЗаказа = &НомерВнешнегоЗаказа
		            |
		            |СГРУППИРОВАТЬ ПО
		            |	ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.Ссылка,
		            |	ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.Номер";
		Зап.УстановитьПараметр("НомерВнешнегоЗаказа", ВнешнийНомерЗаказа);
		
		Рез = Зап.Выполнить().Выбрать();;
		Мас = Новый Массив;
		Если Рез.Количество() = 0 Тогда
			ОчиститьПоиск(Неопределено);
		Иначе
			Пока Рез.Следующий() Цикл
				Мас.Добавить(Рез.Номер);
			КонецЦикла;	
			Список.Отбор.элементы[0].ПравоеЗначение = Мас;
			Список.Отбор.элементы[0].Использование = Истина;
		КонецеСли;	
	Иначе
		ОчиститьПоиск(Неопределено);
	КонецеСли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПоиск(Команда)
	// Вставить содержимое обработчика.
	//Список.Отбор.элементы[0].Использование = Ложь;
		ИП = "Номер";
		ПЗ = Новый Массив;
		Исп = Ложь;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);
	
	
	ВнешнийНомерЗаказа = "";
	НомерЗаказа = "";
КонецПроцедуры


&НаКлиенте
Процедура НомерЗаказаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(НомерЗаказа) Тогда
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.Номер КАК Номер
		            |ИЗ
		            |	Документ.ДоставкиСОтклонениямиКоличестваСписком.Доставки КАК ДоставкиСОтклонениямиКоличестваСпискомДоставки
		            |ГДЕ
		            |	ДоставкиСОтклонениямиКоличестваСпискомДоставки.Доставка.Номер = &НомерЗаказа
		            |
		            |СГРУППИРОВАТЬ ПО
		            |	ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.Ссылка,
		            |	ДоставкиСОтклонениямиКоличестваСпискомДоставки.Ссылка.Номер";
		Зап.УстановитьПараметр("НомерЗаказа", Формат(НомерЗаказа, "ЧГ="));
		
		Рез = Зап.Выполнить().Выбрать();;
		Мас = Новый Массив;
		Если Рез.Количество() = 0 Тогда
			ОчиститьПоиск(Неопределено);
		Иначе
			Пока Рез.Следующий() Цикл
				Мас.Добавить(Рез.Номер);
			КонецЦикла;	
		ИП = "Номер";
		ПЗ = Мас;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								);
		КонецеСли;	
	Иначе
		ОчиститьПоиск(Неопределено);
	КонецеСли;
КонецПроцедуры

//+++ БАО 22.08.2017 №1730
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	bao.ДобавитьОтборДинСпискаПоДоступнымПользователюТерминалам(Список);
	
КонецПроцедуры
//--- БАО 22.08.2017 №1730



