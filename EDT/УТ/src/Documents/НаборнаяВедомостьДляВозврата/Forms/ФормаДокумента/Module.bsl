
&НаКлиенте
Процедура ЗаказыПриАктивизацииСтроки(Элемент)
	Если Элементы.Заказы.ТекущиеДанные <> Неопределено Тогда
		Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("ЗаказРеализация", Элементы.Заказы.ТекущиеДанные.Заказ); 
	КонецЕСли;	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
    Если Объект.Заказы.Количество() > 0 Тогда
        Режим = РежимДиалогаВопрос.ДаНет;
        Текст = "ru = ""Табличные части будут очищены.Продолжить?"";"
        + " en = ""Do you want to continue?""";
        Ответ = Вопрос(НСтр(Текст), Режим, 0);
        Если Ответ = КодВозвратаДиалога.Нет Тогда
            Возврат;
        Иначе
            Объект.Заказы.Очистить();
            Объект.Товары.Очистить();
        КонецЕсли;
    КонецЕсли;
    ЗаполнитьСерверМ(ПолучитьДанныеИзрегистра());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСерверМ(ДанныеВыборки, ПроверкаНаТСД = Истина) Экспорт
	//Сообщить("ываываыва");
	//ДанныеВыборки = ПолучитьДанныеИзрегистра();
	Для каждого Стр Из ДанныеВыборки Цикл
		//Сообщить(Стр.Заказ);
        //Серегин М.В. 05.08.2015 17:05:02 новый костыль проверку на наличие в ТСД для всех кроме Возвратов
        Если Стр.ТипЗаказа <> Перечисления.ТипыЗаказов.Возврат И ПроверкаНаТСД Тогда
			// МАС - 23.10.2017 - № --->> 			
			//Если НЕ ЕстьНаТСД(Стр.Заказ) Тогда
			Если НЕ Стр.ЕстьНаТСД Тогда
			// <<--- МАС 
                 Продолжить;
            КонецЕсли;
        КонецЕсли;
        //Серегин М.В. 05.08.2015 17:05:06 
        //Серегин М.В. 03.07.2015 14:35:59 проверяем заказ на наличие номенклатуры, тех услуги не нужны
        Если НЕ ВЗаказеТолькоУслугиПоЗаказам(Стр.Заказ.Номер) Тогда 
            //Серегин М.В. 11.06.2015 12:11:19 
            ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ПустаяСсылка();
            Таблица  = smv.ПолучитьТекущееСостояниеЗаказа(Стр.Заказ);
            Для каждого СтрТаблицы Из Таблица Цикл
                ПричинаНеВыполнения = СтрТаблицы.ПричинаНеВыполнения;    
            КонецЦикла;
            //Серегин М.В. 11.06.2015 12:11:21 
            
            //Строка = Объект.Заказы.Добавить();
            //ЗаполнитьЗначенияСвойств(Строка,Стр);
            Если Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Возврат Тогда
                ЭтоВозврат = Истина;
            Иначе
                ЭтоВозврат = Ложь;
            КонецЕсли;
            
            //Серегин М.В. 15.09.2015 12:00:42 для костыля по складам возвратов 
            КонтрагентТопДеливери = Справочники.Контрагенты.НайтиПоКоду("Shop_222");
            СкладТопДеливери = Справочники.СкладыМагазинов.НайтиПоКоду("7");
            //Серегин М.В. 15.09.2015 12:00:44 
            
            Если Стр.ТекущийСтатус = Справочники.СтатусыСкладскогоУчета.Возврат1 Тогда
                ДанныеВыборкиТовары = ПолучитьДанныеТоварыВозврат1(Стр.Заказ,ЭтоВозврат,КонтрагентТопДеливери,СкладТопДеливери);
            ИначеЕсли ПричинаНеВыполнения = Справочники.ПричиныНеВыполненияДоставки.ОтказКлиентаСЗаездом Тогда
                ДанныеВыборкиТовары = ПолучитьДанныеТоварыВозврат1(Стр.Заказ,ЭтоВозврат,КонтрагентТопДеливери,СкладТопДеливери);
                //Серегин М.В. 08.07.2015 15:25:23 очередной костыль (((
            ИначеЕсли Стр.ТекущийСтатус = Справочники.СтатусыСкладскогоУчета.Возврат2 И 
                (Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Обмен ИЛИ Стр.ТипЗаказа = Перечисления.ТипыЗаказов.Возврат) Тогда
               ДанныеВыборкиТовары = ПолучитьДанныеТоварыВозвратОбмен(Стр.Заказ,КонтрагентТопДеливери,СкладТопДеливери);
               //Серегин М.В. 08.07.2015 15:39:54 
            Иначе
                ДанныеВыборкиТовары = ПолучитьДанныеТоварыВозврат2(Стр.Заказ,ЭтоВозврат,КонтрагентТопДеливери,СкладТопДеливери);
            КонецЕсли;
            
            Для каждого СтрТовары Из ДанныеВыборкиТовары Цикл
                СтрокаТовары = Объект.Товары.Добавить();
                СтрокаТовары.ЗаказРеализация = Стр.Заказ;
                СтрокаТовары.Контрагент = Стр.Контрагент;
                СтрокаТовары.СтатусСкладскогоУчета = Стр.ТекущийСтатус;
                Если БизнесПроцессы.новаМестнаяДоставка.НайтиПоНомеру(Стр.Заказ.Номер).Пустая() Тогда 
                    СтрокаТовары.ТипЗаказа = Перечисления.ТипыЗаказов.Самовывоз;
                Иначе
                    СтрокаТовары.ТипЗаказа = Перечисления.ТипыЗаказов.Доставка;
                КонецЕсли;
                ЗаполнитьЗначенияСвойств(СтрокаТовары,СтрТовары);
            КонецЦикла;
            //Серегин М.В. 25.08.2015 10:47:40 Заполняет ТЧ Заказы после Товаров если есть строки в т.ч товары по этому заказу
            //КОСТЫЛЬ
            Если Объект.Товары.Количество()> 0 Тогда
                НайденыеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("ЗаказРеализация",Стр.Заказ));
                Если НайденыеСтроки.Количество()>0 Тогда
                    Строка = Объект.Заказы.Добавить();
                    ЗаполнитьЗначенияСвойств(Строка,Стр);
                    Строка.СкладМагазина = Объект.СкладМагазина;
                КонецЕсли;
            КонецЕсли;
            //Серегин М.В. 25.08.2015 10:47:55 
            
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОсновныеСерверМ(Контр,ВозвратМ,СкладМаг) Экспорт
	Объект.ИнтернетМагазин = Контр;
	Объект.СтатусВозврата = ВозвратМ;
	Объект.Дата = ТекущаяДата();
	Объект.СкладМагазина = СкладМаг;	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеИзрегистра()
    ////Серегин М.В. 05.08.2015 17:01:35 старый запрос
    //Запрос = Новый Запрос;
    //Запрос.Текст = 
    //"ВЫБРАТЬ
    //|   СтатусыСкладскогоУчета.Заказ,
    //|   МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период,
    //|   МАКСИМУМ(ВЫБОР
    //|           КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ЗаказНеВозвратный)
    //|               ТОГДА ИСТИНА
    //|           ИНАЧЕ ЛОЖЬ
    //|       КОНЕЦ) КАК НеВозвратныйЗаказ
    //|ПОМЕСТИТЬ ВТ_СрезПослдедних
    //|ИЗ
    //|   РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
    //|ГДЕ
    //|   СтатусыСкладскогоУчета.Заказ.ВладелецТовара = &Контрагент
    //|   И (СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.новаОтчетВодителя
    //|           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ЗакрытиеЗаказов
    //|           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ДанныеЗаказаСамовывоза
    //|           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.УстановкаСтатусовСкладскогоУчета
    //|           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
    //|           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.НаборнаяВедомостьДляВозврата)
    //|
    //|СГРУППИРОВАТЬ ПО
    //|   СтатусыСкладскогоУчета.Заказ
    //|;
    //|
    //|////////////////////////////////////////////////////////////////////////////////
    //|ВЫБРАТЬ
    //|   СтатусыСкладскогоУчета.Заказ,
    //|   СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
    //|   СтатусыСкладскогоУчета.ТипЗаказа
    //|ИЗ
    //|   РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
    //|       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СрезПослдедних КАК ВТ_СрезПослдедних
    //|       ПО СтатусыСкладскогоУчета.Заказ = ВТ_СрезПослдедних.Заказ
    //|           И СтатусыСкладскогоУчета.Период = ВТ_СрезПослдедних.Период
    //|           И (НЕ ВТ_СрезПослдедних.НеВозвратныйЗаказ)
    //|ГДЕ
    //|   СтатусыСкладскогоУчета.Заказ.ВладелецТовара = &Контрагент
    //|   И СтатусыСкладскогоУчета.СтатусСкладскогоУчета В(&СтатусСкладскогоУчета)
    //|   И СтатусыСкладскогоУчета.ТипЗаказа = &ТипЗаказа
    //|   И ВТ_СрезПослдедних.Заказ В
    //|           (ВЫБРАТЬ
    //|               ВТ_СрезПослдедних.Заказ
    //|           ИЗ
    //|               ВТ_СрезПослдедних КАК ВТ_СрезПослдедних
    //|                   ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
    //|                   ПО
    //|                       ВТ_СрезПослдедних.Заказ.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
    //|           ГДЕ
    //|               ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = &ТипЗагрузкиТСД
    //|       
    //|           ОБЪЕДИНИТЬ ВСЕ
    //|       
    //|           ВЫБРАТЬ
    //|               ВТ_СрезПослдедних.Заказ
    //|           ИЗ
    //|               ВТ_СрезПослдедних КАК ВТ_СрезПослдедних
    //|                   ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
    //|                   ПО
    //|                       ВТ_СрезПослдедних.Заказ.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод
    //|           ГДЕ
    //|               ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД = &ТипЗагрузкиТСД)";
    //Серегин М.В. 05.08.2015 17:01:41 новый
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
    |	МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период,
    |	МАКСИМУМ(ВЫБОР
    |			КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ЗаказНеВозвратный)
    |				ТОГДА ИСТИНА
    |			ИНАЧЕ ЛОЖЬ
    |		КОНЕЦ) КАК НеВозвратныйЗаказ
    |ПОМЕСТИТЬ ВТ_СрезПослдедних
    |ИЗ
    |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
    |ГДЕ
    |	ИСТИНА
    |	И СтатусыСкладскогоУчета.Заказ.ВладелецТовара В(&Контрагент)
    |	И (СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.новаОтчетВодителя
    |			ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ЗакрытиеЗаказов
    |			ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ДанныеЗаказаСамовывоза
    |			ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.УстановкаСтатусовСкладскогоУчета
    |			ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
    |			ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.НаборнаяВедомостьДляВозврата
    |			ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ЗагрузкаСТСД)
    |
    |СГРУППИРОВАТЬ ПО
    |	СтатусыСкладскогоУчета.Заказ
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
    |	СтатусыСкладскогоУчета.Заказ КАК Заказ,
    |	СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
    |	СтатусыСкладскогоУчета.ТипЗаказа КАК ТипЗаказа,
    |	СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент,
    |	ВТ_СрезПослдедних.Заказ.КоличествоМест КАК КоличествоМестТовара,
    |	ВЫБОР
    |		КОГДА ЗагрузкаСТСДШтрихкоды.Ссылка ЕСТЬ NULL
    |			ТОГДА ЛОЖЬ
    |		ИНАЧЕ ИСТИНА
    |	КОНЕЦ КАК ЕстьНаТСД
    |ИЗ
    |	РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СрезПослдедних КАК ВТ_СрезПослдедних
    |		ПО СтатусыСкладскогоУчета.Заказ = ВТ_СрезПослдедних.Заказ
    |			И СтатусыСкладскогоУчета.Период = ВТ_СрезПослдедних.Период
    |			И (НЕ ВТ_СрезПослдедних.НеВозвратныйЗаказ)
    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
    |		ПО (СтатусыСкладскогоУчета.Заказ.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
    |				ИЛИ СтатусыСкладскогоУчета.Заказ.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод
    |				ИЛИ СтатусыСкладскогоУчета.Заказ = ЗагрузкаСТСДШтрихкоды.Заказ)
    |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД))
    |			И (ЗагрузкаСТСДШтрихкоды.Ссылка.Дата >= &ДатаНач)
    |ГДЕ
    |	ИСТИНА
    |	И СтатусыСкладскогоУчета.Заказ.ВладелецТовара В(&Контрагент)
    |	И СтатусыСкладскогоУчета.СтатусСкладскогоУчета В(&СтатусСкладскогоУчета)
    |	И СтатусыСкладскогоУчета.ТипЗаказа = &ТипЗаказа";
    
    ////Серегин М.В. 25.08.2015 18:35:49 
    //Запрос.УстановитьПараметр("Контрагент",Объект.ИнтернетМагазин);
    //Серегин М.В. 25.08.2015 18:36:05 
    Запрос.УстановитьПараметр("Контрагент",Объект.Контрагенты.Выгрузить().ВыгрузитьКолонку("Контрагент"));
    //+++++Серегин М.В. 29.09.2015 12:34:08 
    Если ЗначениеЗаполнено(Объект.СкладМагазина) И Объект.Контрагенты.Выгрузить().ВыгрузитьКолонку("Контрагент").Количество()=0 Тогда
        МассивНомеров = ПолучитьНомераЗаказовСоСкладами();
        Запрос.Текст = СтрЗаменить(Запрос.Текст,"И СтатусыСкладскогоУчета.Заказ.ВладелецТовара В(&Контрагент)","И СтатусыСкладскогоУчета.Заказ.Номер В(&МассивНомеров)");
        Запрос.УстановитьПараметр("МассивНомеров",МассивНомеров);
    КонецЕсли;
    //-----Серегин М.В. 29.09.2015 12:34:11 
	
	// МАС - 23.10.2017 - № --->> 
	ТипыЗагрузки = Новый СписокЗначений;
    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFi);
    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute);
	ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом);
    Запрос.УстановитьПараметр("ТипЗагрузкиТСД",ТипыЗагрузки);
		
	Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-3));
	// <<--- МАС  
    
	//Запрос.УстановитьПараметр("ТипЗагрузкиТСД",Перечисления.ТипыЗагрузкиТСД.ПриходWiFi);
    
    Если ЗначениеЗаполнено(Объект.СтатусВозврата) Тогда
        Запрос.УстановитьПараметр("СтатусСкладскогоУчета",Объект.СтатусВозврата);
    Иначе
        СписокСтатусСкладскогоУчета = Новый СписокЗначений;
        СписокСтатусСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.Возврат1);
        СписокСтатусСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.Возврат2);
        Запрос.УстановитьПараметр("СтатусСкладскогоУчета",СписокСтатусСкладскогоУчета);
    КонецЕсли;
    
    Если ЗначениеЗаполнено(Объект.ТипЗаказа) Тогда
        Запрос.УстановитьПараметр("ТипЗаказа",Объект.ТипЗаказа);
    Иначе 
        Запрос.Текст = СтрЗаменить(Запрос.Текст,"И СтатусыСкладскогоУчета.ТипЗаказа = &ТипЗаказа","");
    КонецЕсли;
    
    РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;
	
КонецФункции // ()

// Выборка из табличных частей ВозвратТоваровОтПокупателяТовары и РеализацияТоваровУслугТовары
&НаСервере
Функция ПолучитьДанныеТоварыВозврат1(РеализацияТоваровУслугСсылка,ЭтоВозврат,КонтрагентТопДеливери,СкладТопДеливери)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ПоступлениеТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
        |	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
        |	ПоступлениеТоваровУслугТовары.Количество КАК Количество,
        |	ПоступлениеТоваровУслугТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
        |	ПоступлениеТоваровУслугТовары.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
        |	ПоступлениеТоваровУслугТовары.Коэффициент КАК Коэффициент,
        |	ПоступлениеТоваровУслугТовары.Цена КАК Цена,
        |	ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
        |	ПоступлениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
        |	ПоступлениеТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
        |	ПоступлениеТоваровУслугТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
        |	ПоступлениеТоваровУслугТовары.СерияНоменклатуры КАК СерияНоменклатуры,
        |	ПоступлениеТоваровУслугТовары.Склад КАК Склад,
        |	ПоступлениеТоваровУслугТовары.ПриходныйОрдер КАК ПриходныйОрдер,
        |	ПоступлениеТоваровУслугТовары.КлючСвязи КАК КлючСвязи,
        |	ПоступлениеТоваровУслугТовары.Ссылка.НомерВходящегоДокументаЭлектронногоОбмена КАК ВнешнийНомерЗаказа,
        |	ПоступлениеТоваровУслугТовары.Ссылка.Дата КАК ДатаДоставки,
        |	ПоступлениеТоваровУслугТовары.КоличествоМест КАК КоличествоМест,
        |	ПоступлениеТоваровУслугТовары.Ссылка КАК ДокументПоступления,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровУслугТовары.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
        |				И ПоступлениеТоваровУслугТовары.Ссылка.Контрагент = &ТопДеливери
        |			ТОГДА &СкладТопДеливери
        |		ИНАЧЕ ПоступлениеТоваровУслугТовары.СкладМагазина
        |	КОНЕЦ КАК СкладМагазина,
        |	ПоступлениеТоваровУслугТовары.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
        |ПОМЕСТИТЬ ВТ_Итог
        |ИЗ
        |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
        |ГДЕ
        |	ПоступлениеТоваровУслугТовары.Ссылка.Номер = &Номер
        |	И НЕ &ЭтоВозврат
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ПоступлениеТоваровУслугПодарочныеПозиции.НомерСтроки,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.Номенклатура,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.Количество,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.ЕдиницаИзмерения,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.ЕдиницаИзмеренияМест,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.Коэффициент,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.Цена,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.Сумма,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.СтавкаНДС,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.СуммаНДС,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.ХарактеристикаНоменклатуры,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.СерияНоменклатуры,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.Склад,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.ПриходныйОрдер,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.КлючСвязи,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.НомерВходящегоДокументаЭлектронногоОбмена,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Дата,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.КоличествоМест,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровУслугПодарочныеПозиции.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
        |				И ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Контрагент = &ТопДеливери
        |			ТОГДА &СкладТопДеливери
        |		ИНАЧЕ ПоступлениеТоваровУслугПодарочныеПозиции.СкладМагазина
        |	КОНЕЦ,
        |	ПоступлениеТоваровУслугПодарочныеПозиции.ШтрихкодНоменклатуры
        |ИЗ
        |	Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
        |ГДЕ
        |	ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер = &Номер
        |	И НЕ &ЭтоВозврат
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ВозвратТоваровОтПокупателяТовары.НомерСтроки,
        |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
        |	ВозвратТоваровОтПокупателяТовары.Количество,
        |	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмерения,
        |	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмеренияМест,
        |	ВозвратТоваровОтПокупателяТовары.Коэффициент,
        |	ВозвратТоваровОтПокупателяТовары.Цена,
        |	ВозвратТоваровОтПокупателяТовары.Сумма,
        |	ВозвратТоваровОтПокупателяТовары.СтавкаНДС,
        |	ВозвратТоваровОтПокупателяТовары.СуммаНДС,
        |	ВозвратТоваровОтПокупателяТовары.ХарактеристикаНоменклатуры,
        |	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры,
        |	ВозвратТоваровОтПокупателяТовары.Склад,
        |	ВозвратТоваровОтПокупателяТовары.ПриходныйОрдер,
        |	ВозвратТоваровОтПокупателяТовары.КлючСвязи,
        |	ВозвратТоваровОтПокупателяТовары.Ссылка.НомерВходящегоДокументаЭлектронногоОбмена,
        |	ВозвратТоваровОтПокупателяТовары.Ссылка.Дата,
        |	ВозвратТоваровОтПокупателяТовары.КоличествоМест,
        |	ПоступлениеТоваровУслуг.Ссылка,
        |	ВЫБОР
        |		КОГДА ВозвратТоваровОтПокупателяТовары.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
        |				И ВозвратТоваровОтПокупателяТовары.Ссылка.Контрагент = &ТопДеливери
        |			ТОГДА &СкладТопДеливери
        |		ИНАЧЕ ВозвратТоваровОтПокупателяТовары.СкладМагазина
        |	КОНЕЦ,
        |	ВозвратТоваровОтПокупателяТовары.ШтрихкодНоменклатуры
        |ИЗ
        |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
        |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = ПоступлениеТоваровУслуг.Номер
        |ГДЕ
        |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = &Номер
        |	И &ЭтоВозврат
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВТ_Итог.НомерСтроки КАК НомерСтроки,
        |	ВТ_Итог.Номенклатура КАК Номенклатура,
        |	ВТ_Итог.Количество КАК Количество,
        |	ВТ_Итог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
        |	ВТ_Итог.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
        |	ВТ_Итог.Коэффициент КАК Коэффициент,
        |	ВТ_Итог.Цена КАК Цена,
        |	ВТ_Итог.Сумма КАК Сумма,
        |	ВТ_Итог.СтавкаНДС КАК СтавкаНДС,
        |	ВТ_Итог.СуммаНДС КАК СуммаНДС,
        |	ВТ_Итог.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
        |	ВТ_Итог.СерияНоменклатуры КАК СерияНоменклатуры,
        |	ВТ_Итог.Склад КАК Склад,
        |	ВТ_Итог.ПриходныйОрдер КАК ПриходныйОрдер,
        |	ВТ_Итог.КлючСвязи КАК КлючСвязи,
        |	ВТ_Итог.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
        |	ВТ_Итог.ДатаДоставки КАК ДатаДоставки,
        |	ВТ_Итог.КоличествоМест КАК КоличествоМест,
        |	ВТ_Итог.ДокументПоступления КАК ДокументПоступления,
        |	ВТ_Итог.СкладМагазина КАК СкладМагазина,
        |	МАКСИМУМ(ЗакрытиеЗаказовЗаказы.Ссылка) КАК ЗакрытиеЗаказов,
        |	ВТ_Итог.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
        |ИЗ
        |	ВТ_Итог КАК ВТ_Итог
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
        |		ПО (ЗакрытиеЗаказовЗаказы.Закрыть
        |				ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить)
        |			И (&Номер = ВЫРАЗИТЬ(ЗакрытиеЗаказовЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Номер)
        |ГДЕ
        |	ИСТИНА
        |	И ВТ_Итог.СкладМагазина = &СкладМагазина
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_Итог.НомерСтроки,
        |	ВТ_Итог.Номенклатура,
        |	ВТ_Итог.Количество,
        |	ВТ_Итог.ЕдиницаИзмерения,
        |	ВТ_Итог.ЕдиницаИзмеренияМест,
        |	ВТ_Итог.Коэффициент,
        |	ВТ_Итог.Цена,
        |	ВТ_Итог.Сумма,
        |	ВТ_Итог.СтавкаНДС,
        |	ВТ_Итог.СуммаНДС,
        |	ВТ_Итог.ХарактеристикаНоменклатуры,
        |	ВТ_Итог.СерияНоменклатуры,
        |	ВТ_Итог.Склад,
        |	ВТ_Итог.ПриходныйОрдер,
        |	ВТ_Итог.КлючСвязи,
        |	ВТ_Итог.ВнешнийНомерЗаказа,
        |	ВТ_Итог.ДатаДоставки,
        |	ВТ_Итог.КоличествоМест,
        |	ВТ_Итог.ДокументПоступления,
        |	ВТ_Итог.СкладМагазина,
        |	ВТ_Итог.ШтрихкодНоменклатуры";
    
    Запрос.УстановитьПараметр("Номер", РеализацияТоваровУслугСсылка.Номер);
    Запрос.УстановитьПараметр("ЭтоВозврат", ЭтоВозврат);
    Запрос.УстановитьПараметр("СкладМагазина", Объект.СкладМагазина);
    Запрос.УстановитьПараметр("ТопДеливери",КонтрагентТопДеливери);
    Запрос.УстановитьПараметр("СкладТопДеливери",СкладТопДеливери);
    
    //Серегин М.В. 25.08.2015 10:11:58 если не заполнен склад магазин
    Если НЕ ЗначениеЗаполнено(Объект.СкладМагазина) Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст,"И ВТ_Итог.СкладМагазина = &СкладМагазина","");
    КонецЕсли;
    
    РезультатЗапроса = Запрос.Выполнить().Выгрузить();
    Возврат РезультатЗапроса;
КонецФункции // ()

&НаСервере
Функция ПолучитьДанныеТоварыВозврат2(РеализацияТоваровУслугСсылка,ЭтоВозврат,КонтрагентТопДеливери,СкладТопДеливери)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ДанныеЧастичныхЗаказовОстатки.Заказ КАК ЗаказРеализация,
        |	ДанныеЧастичныхЗаказовОстатки.Номенклатура КАК Номенклатура,
        |	ДанныеЧастичныхЗаказовОстатки.СуммаОстаток КАК Сумма,
        |	ДанныеЧастичныхЗаказовОстатки.КоличествоОстаток КАК Количество,
        |	ПоступлениеТоваровУслугТовары.КоличествоМест КАК КоличествоМест,
        |	ПоступлениеТоваровУслугТовары.Цена КАК Цена,
        |	ПоступлениеТоваровУслугТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
        |	ПоступлениеТоваровУслугТовары.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
        |	ПоступлениеТоваровУслугТовары.Коэффициент КАК Коэффициент,
        |	ПоступлениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
        |	ПоступлениеТоваровУслугТовары.СуммаНДС / ПоступлениеТоваровУслугТовары.Количество * ДанныеЧастичныхЗаказовОстатки.КоличествоОстаток КАК СуммаНДС,
        |	ПоступлениеТоваровУслугТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
        |	ПоступлениеТоваровУслугТовары.СерияНоменклатуры КАК СерияНоменклатуры,
        |	ПоступлениеТоваровУслугТовары.Склад КАК Склад,
        |	ПоступлениеТоваровУслугТовары.КлючСвязи КАК КлючСвязи,
        |	ПоступлениеТоваровУслугТовары.Ссылка.Дата КАК ДатаДоставки,
        |	ПоступлениеТоваровУслугТовары.Ссылка КАК ДокументПоступления,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровУслугТовары.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
        |				И ПоступлениеТоваровУслугТовары.Ссылка.Контрагент = &ТопДеливери
        |			ТОГДА &СкладТопДеливери
        |		ИНАЧЕ ПоступлениеТоваровУслугТовары.СкладМагазина
        |	КОНЕЦ КАК СкладМагазина,
        |	ПоступлениеТоваровУслугТовары.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
        |ПОМЕСТИТЬ ВТ_Итог
        |ИЗ
        |	РегистрНакопления.ДанныеЧастичныхЗаказов.Остатки(&Период, Заказ = &Заказ) КАК ДанныеЧастичныхЗаказовОстатки
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
        |		ПО ДанныеЧастичныхЗаказовОстатки.Номенклатура = ПоступлениеТоваровУслугТовары.Номенклатура
        |			И ДанныеЧастичныхЗаказовОстатки.Заказ.Номер = ПоступлениеТоваровУслугТовары.Ссылка.Номер
        |ГДЕ
        |	НЕ &ЭтоВозврат
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ДанныеЧастичныхЗаказовОстатки.Заказ,
        |	ДанныеЧастичныхЗаказовОстатки.Номенклатура,
        |	ДанныеЧастичныхЗаказовОстатки.СуммаОстаток,
        |	ДанныеЧастичныхЗаказовОстатки.КоличествоОстаток,
        |	ВозвратТоваровОтПокупателяТовары.КоличествоМест,
        |	ВозвратТоваровОтПокупателяТовары.Цена,
        |	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмерения,
        |	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмеренияМест,
        |	ВозвратТоваровОтПокупателяТовары.Коэффициент,
        |	ВозвратТоваровОтПокупателяТовары.СтавкаНДС,
        |	ВозвратТоваровОтПокупателяТовары.СуммаНДС / ВозвратТоваровОтПокупателяТовары.Количество * ДанныеЧастичныхЗаказовОстатки.КоличествоОстаток,
        |	ВозвратТоваровОтПокупателяТовары.ХарактеристикаНоменклатуры,
        |	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры,
        |	ВозвратТоваровОтПокупателяТовары.Склад,
        |	ВозвратТоваровОтПокупателяТовары.КлючСвязи,
        |	ВозвратТоваровОтПокупателяТовары.Ссылка.Дата,
        |	ПоступлениеТоваровУслуг.Ссылка,
        |	ВЫБОР
        |		КОГДА ВозвратТоваровОтПокупателяТовары.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
        |				И ВозвратТоваровОтПокупателяТовары.Ссылка.Контрагент = &ТопДеливери
        |			ТОГДА &СкладТопДеливери
        |		ИНАЧЕ ВозвратТоваровОтПокупателяТовары.СкладМагазина
        |	КОНЕЦ,
        |	ВозвратТоваровОтПокупателяТовары.ШтрихкодНоменклатуры
        |ИЗ
        |	РегистрНакопления.ДанныеЧастичныхЗаказов.Остатки(&Период, Заказ = &Заказ) КАК ДанныеЧастичныхЗаказовОстатки
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
        |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
        |			ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = ПоступлениеТоваровУслуг.Номер
        |		ПО ДанныеЧастичныхЗаказовОстатки.Номенклатура = ВозвратТоваровОтПокупателяТовары.Номенклатура
        |			И ДанныеЧастичныхЗаказовОстатки.Заказ.Номер = ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
        |ГДЕ
        |	&ЭтоВозврат
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВТ_Итог.ЗаказРеализация КАК ЗаказРеализация,
        |	ВТ_Итог.Номенклатура КАК Номенклатура,
        |	ВТ_Итог.Сумма КАК Сумма,
        |	ВТ_Итог.Количество КАК Количество,
        |	ВТ_Итог.КоличествоМест КАК КоличествоМест,
        |	ВТ_Итог.Цена КАК Цена,
        |	ВТ_Итог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
        |	ВТ_Итог.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
        |	ВТ_Итог.Коэффициент КАК Коэффициент,
        |	ВТ_Итог.СтавкаНДС КАК СтавкаНДС,
        |	ВТ_Итог.СуммаНДС КАК СуммаНДС,
        |	ВТ_Итог.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
        |	ВТ_Итог.СерияНоменклатуры КАК СерияНоменклатуры,
        |	ВТ_Итог.Склад КАК Склад,
        |	ВТ_Итог.КлючСвязи КАК КлючСвязи,
        |	ВТ_Итог.ДатаДоставки КАК ДатаДоставки,
        |	ВТ_Итог.ДокументПоступления КАК ДокументПоступления,
        |	ВТ_Итог.СкладМагазина КАК СкладМагазина,
        |	МАКСИМУМ(ЗакрытиеЗаказовЗаказы.Ссылка) КАК ЗакрытиеЗаказов,
        |	ВТ_Итог.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
        |ИЗ
        |	ВТ_Итог КАК ВТ_Итог
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
        |		ПО (ЗакрытиеЗаказовЗаказы.Закрыть
        |				ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить)
        |			И (ВТ_Итог.ЗаказРеализация.Ссылка = ВЫРАЗИТЬ(ЗакрытиеЗаказовЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка)
        |ГДЕ
        |	ИСТИНА
        |	И ВТ_Итог.СкладМагазина = &СкладМагазина
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_Итог.ЗаказРеализация,
        |	ВТ_Итог.Номенклатура,
        |	ВТ_Итог.ЕдиницаИзмерения,
        |	ВТ_Итог.ЕдиницаИзмеренияМест,
        |	ВТ_Итог.СтавкаНДС,
        |	ВТ_Итог.ХарактеристикаНоменклатуры,
        |	ВТ_Итог.СерияНоменклатуры,
        |	ВТ_Итог.Склад,
        |	ВТ_Итог.ДатаДоставки,
        |	ВТ_Итог.ДокументПоступления,
        |	ВТ_Итог.СкладМагазина,
        |	ВТ_Итог.Сумма,
        |	ВТ_Итог.Количество,
        |	ВТ_Итог.КоличествоМест,
        |	ВТ_Итог.Цена,
        |	ВТ_Итог.Коэффициент,
        |	ВТ_Итог.СуммаНДС,
        |	ВТ_Итог.КлючСвязи,
        |	ВТ_Итог.ШтрихкодНоменклатуры";
    
    Запрос.УстановитьПараметр("Период", ТекущаяДата());
    Запрос.УстановитьПараметр("Заказ", РеализацияТоваровУслугСсылка);
    Запрос.УстановитьПараметр("ЭтоВозврат", ЭтоВозврат);
    Запрос.УстановитьПараметр("СкладМагазина", Объект.СкладМагазина);
    Запрос.УстановитьПараметр("ТопДеливери",КонтрагентТопДеливери);
    Запрос.УстановитьПараметр("СкладТопДеливери",СкладТопДеливери);
    
    //Серегин М.В. 25.08.2015 10:11:58 если не заполнен склад магазин
    Если НЕ ЗначениеЗаполнено(Объект.СкладМагазина) Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст,"И ВТ_Итог.СкладМагазина = &СкладМагазина","");
    КонецЕсли;
    
    
    РезультатЗапроса = Запрос.Выполнить().Выгрузить();
    //+++++Серегин М.В. 17.12.2015 10:51:13 новый костыль
    //Причина:
    //    860134 
    //Документ отчет водителя сделал движение Возврат2 (т.к. отказ с заездом у нас это Возврат2), при заполнении Наборной ведомости алгоритм смотрит на 
    //Возврат2 (это частичка) и ищет в РН ДанныеЧастичныхЗаказов, там ничего нет соответственно в наборную ведомость ничего не попадает.
    //А идет по алгоритму частички, потому что документ ПриходДС сделал движения со статусом ОтказКлиентаБезЗаезда (был бы изначальный ОтказКлиентаСЗаездом, 
    //все заполнилось бы, т.к. пошло бы по алгоритму полного возврата). Поменяли статус видимо руками.
    //Поэтому проверяем результат на пустоту и если он пустой, тогда делаем запрос по полному возврату.
    Если РезультатЗапроса.Количество()> 0 Тогда
        Возврат РезультатЗапроса;
    Иначе
        Возврат ПолучитьДанныеТоварыВозврат1(РеализацияТоваровУслугСсылка,ЭтоВозврат,КонтрагентТопДеливери,СкладТопДеливери);
    КонецЕсли;
    //-----Серегин М.В. 17.12.2015 10:52:42 
    
КонецФункции // ()

&НаСервере
Функция ПолучитьДанныеТоварыВозвратОбмен(РеализацияТоваровУслугСсылка,КонтрагентТопДеливери,СкладТопДеливери)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	РеализацияТоваровУслуг.Ссылка КАК ЗаказРеализация,
        |	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Номенклатура,
        |	ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
        |	ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
        |	ВозвратТоваровОтПокупателяТовары.КоличествоМест КАК КоличествоМест,
        |	ВозвратТоваровОтПокупателяТовары.Цена КАК Цена,
        |	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
        |	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
        |	ВозвратТоваровОтПокупателяТовары.Коэффициент КАК Коэффициент,
        |	ВозвратТоваровОтПокупателяТовары.СтавкаНДС КАК СтавкаНДС,
        |	ВозвратТоваровОтПокупателяТовары.СуммаНДС КАК СуммаНДС,
        |	ВозвратТоваровОтПокупателяТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
        |	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры КАК СерияНоменклатуры,
        |	ВозвратТоваровОтПокупателяТовары.Склад КАК Склад,
        |	ВозвратТоваровОтПокупателяТовары.КлючСвязи КАК КлючСвязи,
        |	ВозвратТоваровОтПокупателяТовары.Ссылка.Дата КАК ДатаДоставки,
        |	ПоступлениеТоваровУслуг.Ссылка КАК ДокументПоступления,
        |	ВозвратТоваровОтПокупателяТовары.Ссылка.НомерВнешнегоЗаказа КАК ВнешнийНомерЗаказа,
        |	ВЫБОР
        |		КОГДА ВозвратТоваровОтПокупателяТовары.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
        |				И ВозвратТоваровОтПокупателяТовары.Ссылка.Контрагент = &ТопДеливери
        |			ТОГДА &СкладТопДеливери
        |		ИНАЧЕ ВозвратТоваровОтПокупателяТовары.СкладМагазина
        |	КОНЕЦ КАК СкладМагазина,
        |	ВозвратТоваровОтПокупателяТовары.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
        |ПОМЕСТИТЬ ВТ_Итог
        |ИЗ
        |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
        |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = ПоступлениеТоваровУслуг.Номер
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = РеализацияТоваровУслуг.Номер
        |ГДЕ
        |	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = &Номер
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ДанныеЧастичныхЗаказовОстатки.Заказ.Ссылка,
        |	ДанныеЧастичныхЗаказовОстатки.Номенклатура,
        |	ДанныеЧастичныхЗаказовОстатки.СуммаОстаток,
        |	ДанныеЧастичныхЗаказовОстатки.КоличествоОстаток,
        |	ПоступлениеТоваровУслугТовары.КоличествоМест,
        |	ПоступлениеТоваровУслугТовары.Цена,
        |	ПоступлениеТоваровУслугТовары.ЕдиницаИзмерения,
        |	ПоступлениеТоваровУслугТовары.ЕдиницаИзмеренияМест,
        |	ПоступлениеТоваровУслугТовары.Коэффициент,
        |	ПоступлениеТоваровУслугТовары.СтавкаНДС,
        |	ПоступлениеТоваровУслугТовары.СуммаНДС,
        |	ПоступлениеТоваровУслугТовары.ХарактеристикаНоменклатуры,
        |	ПоступлениеТоваровУслугТовары.СерияНоменклатуры,
        |	ПоступлениеТоваровУслугТовары.Склад,
        |	ПоступлениеТоваровУслугТовары.КлючСвязи,
        |	ДанныеЧастичныхЗаказовОстатки.Заказ.Дата,
        |	ПоступлениеТоваровУслуг.Ссылка,
        |	ДанныеЧастичныхЗаказовОстатки.Заказ.НомерВнешнегоЗаказа,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровУслугТовары.СкладМагазина = ЗНАЧЕНИЕ(Справочник.СкладыМагазинов.ПустаяСсылка)
        |				И ПоступлениеТоваровУслугТовары.Ссылка.Контрагент = &ТопДеливери
        |			ТОГДА &СкладТопДеливери
        |		ИНАЧЕ ПоступлениеТоваровУслугТовары.СкладМагазина
        |	КОНЕЦ,
        |	ПоступлениеТоваровУслугТовары.ШтрихкодНоменклатуры
        |ИЗ
        |	РегистрНакопления.ДанныеЧастичныхЗаказов.Остатки(&Период, ВЫРАЗИТЬ(Заказ КАК Документ.РеализацияТоваровУслуг).Номер = &Номер) КАК ДанныеЧастичныхЗаказовОстатки
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
        |		ПО ДанныеЧастичныхЗаказовОстатки.Номенклатура = ПоступлениеТоваровУслугТовары.Номенклатура
        |			И (ВЫРАЗИТЬ(ДанныеЧастичныхЗаказовОстатки.Заказ КАК Документ.РеализацияТоваровУслуг).Номер = ПоступлениеТоваровУслугТовары.Ссылка.Номер)
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
        |		ПО (ВЫРАЗИТЬ(ДанныеЧастичныхЗаказовОстатки.Заказ КАК Документ.РеализацияТоваровУслуг).Номер = ПоступлениеТоваровУслуг.Номер)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВТ_Итог.ЗаказРеализация КАК ЗаказРеализация,
        |	ВТ_Итог.Номенклатура КАК Номенклатура,
        |	ВТ_Итог.Сумма КАК Сумма,
        |	ВТ_Итог.Количество КАК Количество,
        |	ВТ_Итог.КоличествоМест КАК КоличествоМест,
        |	ВТ_Итог.Цена КАК Цена,
        |	ВТ_Итог.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
        |	ВТ_Итог.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
        |	ВТ_Итог.Коэффициент КАК Коэффициент,
        |	ВТ_Итог.СтавкаНДС КАК СтавкаНДС,
        |	ВТ_Итог.СуммаНДС КАК СуммаНДС,
        |	ВТ_Итог.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
        |	ВТ_Итог.СерияНоменклатуры КАК СерияНоменклатуры,
        |	ВТ_Итог.Склад КАК Склад,
        |	ВТ_Итог.КлючСвязи КАК КлючСвязи,
        |	ВТ_Итог.ДатаДоставки КАК ДатаДоставки,
        |	ВТ_Итог.ДокументПоступления КАК ДокументПоступления,
        |	ВТ_Итог.ВнешнийНомерЗаказа КАК ВнешнийНомерЗаказа,
        |	ВТ_Итог.СкладМагазина КАК СкладМагазина,
        |	МАКСИМУМ(ЗакрытиеЗаказовЗаказы.Ссылка) КАК ЗакрытиеЗаказов,
        |	ВТ_Итог.ШтрихкодНоменклатуры КАК ШтрихкодНоменклатуры
        |ИЗ
        |	ВТ_Итог КАК ВТ_Итог
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗакрытиеЗаказов.Заказы КАК ЗакрытиеЗаказовЗаказы
        |		ПО (ЗакрытиеЗаказовЗаказы.Закрыть
        |				ИЛИ ЗакрытиеЗаказовЗаказы.Отклонить)
        |			И (ВТ_Итог.ЗаказРеализация.Ссылка = ВЫРАЗИТЬ(ЗакрытиеЗаказовЗаказы.Реализация КАК Документ.РеализацияТоваровУслуг).Ссылка)
        |ГДЕ
        |	ИСТИНА
        |	И ВТ_Итог.СкладМагазина = &СкладМагазина
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_Итог.ЗаказРеализация,
        |	ВТ_Итог.Номенклатура,
        |	ВТ_Итог.ЕдиницаИзмерения,
        |	ВТ_Итог.ЕдиницаИзмеренияМест,
        |	ВТ_Итог.СтавкаНДС,
        |	ВТ_Итог.ХарактеристикаНоменклатуры,
        |	ВТ_Итог.СерияНоменклатуры,
        |	ВТ_Итог.Склад,
        |	ВТ_Итог.ДатаДоставки,
        |	ВТ_Итог.ДокументПоступления,
        |	ВТ_Итог.СкладМагазина,
        |	ВТ_Итог.ВнешнийНомерЗаказа,
        |	ВТ_Итог.Сумма,
        |	ВТ_Итог.Количество,
        |	ВТ_Итог.КоличествоМест,
        |	ВТ_Итог.Цена,
        |	ВТ_Итог.Коэффициент,
        |	ВТ_Итог.СуммаНДС,
        |	ВТ_Итог.КлючСвязи,
        |	ВТ_Итог.ШтрихкодНоменклатуры";
    
    Запрос.УстановитьПараметр("Номер", РеализацияТоваровУслугСсылка.Номер);
    Запрос.УстановитьПараметр("Период", ТекущаяДата());
    Запрос.УстановитьПараметр("СкладМагазина", Объект.СкладМагазина);
    Запрос.УстановитьПараметр("ТопДеливери",КонтрагентТопДеливери);
    Запрос.УстановитьПараметр("СкладТопДеливери",СкладТопДеливери);
    
    //Серегин М.В. 25.08.2015 10:11:58 если не заполнен склад магазин
    Если НЕ ЗначениеЗаполнено(Объект.СкладМагазина) Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст,"И ВТ_Итог.СкладМагазина = &СкладМагазина","");
    КонецЕсли;
    
    
    
    РезультатЗапроса = Запрос.Выполнить().Выгрузить();
    Возврат РезультатЗапроса;
КонецФункции // ()

Функция ЕстьНаТСД(Заказ)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   РеализацияТоваровУслуг.Ссылка
        |ИЗ
        |   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        |ГДЕ
        |   РеализацияТоваровУслуг.Ссылка = &Ссылка
        |   И РеализацияТоваровУслуг.Ссылка В
        |           (ВЫБРАТЬ
        |               РеализацияТоваровУслуг.Ссылка
        |           ИЗ
        |               Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        |                   ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
        |                   ПО
        |                       РеализацияТоваровУслуг.Ссылка.Номер = ЗагрузкаСТСДШтрихкоды.Штрихкод
        |           ГДЕ
        |               ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД)
        |               И РеализацияТоваровУслуг.Ссылка = &Ссылка
        |       
        |           ОБЪЕДИНИТЬ ВСЕ
        |       
        |           ВЫБРАТЬ
        |               РеализацияТоваровУслуг.Ссылка
        |           ИЗ
        |               Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        |                   ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
        |                   ПО
        |                       РеализацияТоваровУслуг.Ссылка.НомерВнешнегоЗаказа = ЗагрузкаСТСДШтрихкоды.Штрихкод
        |           ГДЕ
        |               ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД)
        |               И РеализацияТоваровУслуг.Ссылка = &Ссылка
        |       
        |           ОБЪЕДИНИТЬ ВСЕ
        |       
        |           ВЫБРАТЬ
        |               РеализацияТоваровУслуг.Ссылка
        |           ИЗ
        |               Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        |                   ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗагрузкаСТСД.Штрихкоды КАК ЗагрузкаСТСДШтрихкоды
        |                   ПО
        |                       РеализацияТоваровУслуг.Ссылка = ЗагрузкаСТСДШтрихкоды.Заказ
        |           ГДЕ
        |               ЗагрузкаСТСДШтрихкоды.Ссылка.ТипЗагрузкиТСД В (&ТипЗагрузкиТСД)
        |               И РеализацияТоваровУслуг.Ссылка = &Ссылка)";
    
    Запрос.УстановитьПараметр("Ссылка", Заказ);
    ТипыЗагрузки = Новый СписокЗначений;
    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFi);
    ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRoute);
	ТипыЗагрузки.Добавить(Перечисления.ТипыЗагрузкиТСД.ПриходWiFiVeeRouteСВесом);
    Запрос.УстановитьПараметр("ТипЗагрузкиТСД",ТипыЗагрузки);
    Выборка = Запрос.Выполнить().Выбрать();
    Если Выборка.Следующий() Тогда
       Возврат Истина;
   Иначе
       Возврат Ложь;
   КонецЕсли;
КонецФункции // ЕстьНаТСД()


&НаКлиенте
Процедура ЗагрузитьСТСД(Команда)
	
	//Подгрузим данные с ТСД
	lem.РегламентЗагрузкаДанныхСТСД(Истина);
        
    //Получим данные из Документа ЗагрузкаСТСД
    РезультатЗапроса = ПолучитьДанныеЗагрузкаСТСД(Объект.Ссылка);
	
    Если РезультатЗапроса.Количество() > 0 Тогда
        //Обрезаем первую строку
        ЗагрузкаСТСДСсылка = РезультатЗапроса[0].ЗагрузкаСТСД;
        ТабличнаяЧастьЗагрузкаСТСД = ЗагрузкаСТСДСсылка.Штрихкоды.Выгрузить();
        ТабличнаяЧастьЗагрузкаСТСД.Удалить(0);
    Иначе
        Возврат;
        Сообщить("Не найдена взаимосвязь документа с документом Загрузка с ТСД!");
    КонецЕсли;
    
    //Костыль форматируем Штрихкод
    Для каждого Стр Из ТабличнаяЧастьЗагрузкаСТСД Цикл
       Стр.Штрихкод = СокрЛП(Стр.Штрихкод);
    КонецЦикла;
    
    //Меняем дополняем данные в табличной части Заказы
    Для каждого Стр Из Объект.Заказы Цикл
        НайденнаяСтрокаЗагрузкаСТСД = ТабличнаяЧастьЗагрузкаСТСД.Найти(СокрЛП(Стр.Заказ.Номер),"Штрихкод");    
        Если НайденнаяСтрокаЗагрузкаСТСД <> Неопределено Тогда
            Стр.ЗаказНайден = Истина; 
            Стр.ТекущийСтатус = ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ПодготовленКВозврату");
            Стр.КоличествоМестТовара = НайденнаяСтрокаЗагрузкаСТСД.КоличествоМест;
            
            //Временно!!! меняем статус в табличной части товары
            НайденыеСтрокиТовары = Объект.Товары.НайтиСтроки(Новый Структура("ЗаказРеализация",Стр.Заказ));
            Для каждого СтрокаТовары Из НайденыеСтрокиТовары Цикл
                СтрокаТовары.СтатусСкладскогоУчета = ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ПодготовленКВозврату");    
            КонецЦикла;       
        КонецЕсли;
    КонецЦикла; 
    

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеЗагрузкаСТСД(Ссылка)
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ВзаимосвязьДокументов.Документ1 КАК ЗагрузкаСТСД,
        |   ВзаимосвязьДокументов.Документ2 КАК НаборнаяВедомость
        |ИЗ
        |   РегистрСведений.ВзаимосвязьДокументов КАК ВзаимосвязьДокументов
        |ГДЕ
        |   ВзаимосвязьДокументов.Документ2 = &Ссылка
        |
        |УПОРЯДОЧИТЬ ПО
        |   ЗагрузкаСТСД УБЫВ
        |АВТОУПОРЯДОЧИВАНИЕ";
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    РезультатЗапроса = Запрос.Выполнить().Выгрузить();
    Возврат РезультатЗапроса;
КонецФункции // ПолучитьДанныеЗагрузкаСТСД()

&НаСервереБезКонтекста
Функция ВЗаказеТолькоУслугиПоЗаказам(Номер)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
        |   ВозвратТоваровОтПокупателяТовары.Номенклатура,
        |   ВЫБОР
        |       КОГДА УслугиПоЗаказам.Ссылка ЕСТЬ NULL 
        |           ТОГДА ЛОЖЬ
        |       ИНАЧЕ ИСТИНА
        |   КОНЕЦ КАК ЭтоУслугаПоЗаказам
        |ПОМЕСТИТЬ ВТ
        |ИЗ
        |   Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
        |       ПО ВозвратТоваровОтПокупателяТовары.Номенклатура.Артикул = УслугиПоЗаказам.Артикул
        |           И (НЕ УслугиПоЗаказам.ПометкаУдаления)
        |ГДЕ
        |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = &Номер
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   РеализацияТоваровУслугТовары.Ссылка.Номер,
        |   РеализацияТоваровУслугТовары.Номенклатура,
        |   ВЫБОР
        |       КОГДА УслугиПоЗаказам.Ссылка ЕСТЬ NULL 
        |           ТОГДА ЛОЖЬ
        |       ИНАЧЕ ИСТИНА
        |   КОНЕЦ
        |ИЗ
        |   Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
        |       ПО РеализацияТоваровУслугТовары.Номенклатура.Артикул = УслугиПоЗаказам.Артикул
        |           И (НЕ УслугиПоЗаказам.ПометкаУдаления)
        |ГДЕ
        |   РеализацияТоваровУслугТовары.Ссылка.Номер = &Номер
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   РеализацияТоваровУслугУслуги.Ссылка.Номер,
        |   РеализацияТоваровУслугУслуги.Номенклатура,
        |   ВЫБОР
        |       КОГДА УслугиПоЗаказам.Ссылка ЕСТЬ NULL 
        |           ТОГДА ЛОЖЬ
        |       ИНАЧЕ ИСТИНА
        |   КОНЕЦ
        |ИЗ
        |   Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
        |       ПО РеализацияТоваровУслугУслуги.Номенклатура.Артикул = УслугиПоЗаказам.Артикул
        |           И (НЕ УслугиПоЗаказам.ПометкаУдаления)
        |ГДЕ
        |   РеализацияТоваровУслугУслуги.Ссылка.Номер = &Номер
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер,
        |   РеализацияТоваровУслугПодарочныеПозиции.Номенклатура,
        |   ВЫБОР
        |       КОГДА УслугиПоЗаказам.Ссылка ЕСТЬ NULL 
        |           ТОГДА ЛОЖЬ
        |       ИНАЧЕ ИСТИНА
        |   КОНЕЦ
        |ИЗ
        |   Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
        |       ПО РеализацияТоваровУслугПодарочныеПозиции.Номенклатура.Артикул = УслугиПоЗаказам.Артикул
        |           И (НЕ УслугиПоЗаказам.ПометкаУдаления)
        |ГДЕ
        |   РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер = &Номер
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   ПоступлениеТоваровУслугТовары.Ссылка.Номер,
        |   ПоступлениеТоваровУслугТовары.Номенклатура,
        |   ВЫБОР
        |       КОГДА УслугиПоЗаказам.Ссылка ЕСТЬ NULL 
        |           ТОГДА ЛОЖЬ
        |       ИНАЧЕ ИСТИНА
        |   КОНЕЦ
        |ИЗ
        |   Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
        |       ПО ПоступлениеТоваровУслугТовары.Номенклатура.Артикул = УслугиПоЗаказам.Артикул
        |           И (НЕ УслугиПоЗаказам.ПометкаУдаления)
        |ГДЕ
        |   ПоступлениеТоваровУслугТовары.Ссылка.Номер = &Номер
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   ПоступлениеТоваровУслугУслуги.Ссылка.Номер,
        |   ПоступлениеТоваровУслугУслуги.Номенклатура,
        |   ВЫБОР
        |       КОГДА УслугиПоЗаказам.Ссылка ЕСТЬ NULL 
        |           ТОГДА ЛОЖЬ
        |       ИНАЧЕ ИСТИНА
        |   КОНЕЦ
        |ИЗ
        |   Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
        |       ПО ПоступлениеТоваровУслугУслуги.Номенклатура.Артикул = УслугиПоЗаказам.Артикул
        |           И (НЕ УслугиПоЗаказам.ПометкаУдаления)
        |ГДЕ
        |   ПоступлениеТоваровУслугУслуги.Ссылка.Номер = &Номер
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер,
        |   ПоступлениеТоваровУслугПодарочныеПозиции.Номенклатура,
        |   ВЫБОР
        |       КОГДА УслугиПоЗаказам.Ссылка ЕСТЬ NULL 
        |           ТОГДА ЛОЖЬ
        |       ИНАЧЕ ИСТИНА
        |   КОНЕЦ
        |ИЗ
        |   Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УслугиПоЗаказам КАК УслугиПоЗаказам
        |       ПО ПоступлениеТоваровУслугПодарочныеПозиции.Номенклатура.Артикул = УслугиПоЗаказам.Артикул
        |           И (НЕ УслугиПоЗаказам.ПометкаУдаления)
        |ГДЕ
        |   ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер = &Номер
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВТ.Номер КАК Номер,
        |   ВТ.Номенклатура,
        |   МАКСИМУМ(ВТ.ЭтоУслугаПоЗаказам) КАК ЭтоУслугаПоЗаказам
        |ИЗ
        |   ВТ КАК ВТ
        |
        |СГРУППИРОВАТЬ ПО
        |   ВТ.Номер,
        |   ВТ.Номенклатура
        |
        |УПОРЯДОЧИТЬ ПО
        |   Номер
        |АВТОУПОРЯДОЧИВАНИЕ";
    
    Запрос.УстановитьПараметр("Номер", Номер);
    
    РезультатЗапроса = Запрос.Выполнить().Выгрузить();
    ЕстьНоменклатура = РезультатЗапроса.Найти(Ложь,"ЭтоУслугаПоЗаказам");
    Если ЕстьНоменклатура = Неопределено Тогда
        Возврат Истина; //только услуги
    Иначе
        Возврат Ложь; //есть номенклатура
    КонецЕсли;
    
КонецФункции // ()


&НаКлиенте
Процедура ЗаказыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
   Отказ = Истина; 
КонецПроцедуры


&НаКлиенте
Процедура ЗаказыПередУдалением(Элемент, Отказ)
    Отказ = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
    Отказ = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
    Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ Параметры.Ключ.Пустая() Тогда
		
		ЕстьДокументыВозврата = ПроверитьНаличиеВозвратов();
        Если ЕстьДокументыВозврата Тогда
            ЭтаФорма.ТолькоПросмотр = Истина;
        Иначе 
            ЭтаФорма.ТолькоПросмотр = Ложь;
        КонецЕсли;
        ВозвратСоздан = ЭтаФорма.ТолькоПросмотр; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВозвратТоваровПоставщику(Команда)
	
	ЕстьДокументыВозврата = ПроверитьНаличиеВозвратов();
    Если ЕстьДокументыВозврата Тогда
        Сообщить("Документы возврата уже созданы!");
        Возврат;
    КонецЕсли;
    
    Если НЕ Объект.Проведен Тогда 
        От = Вопрос("Необходимо провести документ. Провести?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
        Если От = КодВозвратаДиалога.Да Тогда
            Парам = Новый Структура;
            Парам.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
            Записать(Парам);
            
        Иначе
            Возврат;
        КонецеСли;
    Иначе
        Если Модифицированность = Истина Тогда 
            От = Вопрос("Необходимо записать документ. Записать?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
            Если От = КодВозвратаДиалога.Да Тогда
                Парам = Новый Структура;
                Парам.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
                Записать(Парам);
            Иначе
                Возврат;
            КонецеСли;
        КонецЕсли;
	КонецЕсли;
	
	// МАС - 04.10.2017 - № --->> 
	//ДокументОбъект = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.НаборнаяВедомостьДляВозврата"));
	
	ДокументОбъект = ПолучитьДокОбъект();
	СтрокаОшибок = ДокументОбъект.ПроверитьНаличиеДоговоров();
	//СтрокаОшибок = ПроверитьНаличиеДоговоров();

	// <<--- МАС 
	
    Если СтрокаОшибок <> "" Тогда
        Сообщить("У контрагента(ов): "+СтрокаОшибок+"не выбран основной договор!"); 
        Возврат;
    КонецЕсли;
    ДокументОбъект.СоздатьНаОсновании();
	//ЗначениеВДанныеФормы(ДокументОбъект, Объект);
	ПоместитьВОбъект(ДокументОбъект);
    ЭтаФорма.ТолькоПросмотр = Истина;
    
    //Если НЕ ЗначениеЗаполнено(Объект.ИнтернетМагазин.ОсновнойДоговорКонтрагента) И ЗначениеЗаполнено(Объект.ИнтернетМагазин) Тогда
    //    Сообщить("У контрагента не выбран основной договор!");
    //Иначе
    //    ДокументОбъект = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.НаборнаяВедомостьДляВозврата"));
    //    Если ДокументОбъект.Проведен Тогда
    //        ДокументОбъект.СоздатьНаОсновании();
    //        ЗначениеВДанныеФормы(ДокументОбъект,Объект);
    //        ЭтаФорма.ТолькоПросмотр = Истина;
    //    Иначе
    //        Сообщить("Проведите документ!",СтатусСообщения.ОченьВажное);
    //    КонецЕсли;
    //КонецЕсли;
	
КонецПроцедуры

//// МАС - 04.10.2017 - № --->> 
//Функция ПроверитьНаличиеДоговоров()

//	ДокументОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.НаборнаяВедомостьДляВозврата"));	
//	Возврат ДокументОбъект.ПроверитьНаличиеДоговоров();	

//КонецФункции // ()


Функция ПолучитьДокОбъект()

	Возврат ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.НаборнаяВедомостьДляВозврата"));
	
КонецФункции // ()

Процедура ПоместитьВОбъект(ДокументОбъект)

	ЗначениеВДанныеФормы(ДокументОбъект, Объект);

КонецПроцедуры


// <<--- МАС 


&НаКлиенте
Процедура ЗаказыЗаказНайденПриИзменении(Элемент)
	
    Если Элементы.Заказы.ТекущиеДанные.ЗаказНайден Тогда 
        Элементы.Заказы.ТекущиеДанные.ТекущийСтатус = ПредопределенноеЗначение("Справочник.СтатусыСкладскогоУчета.ПодготовленКВозврату");     
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтернетМагазинПриИзменении(Элемент)
    ИнтернетМагазинПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИнтернетМагазинПриИзмененииНаСервере()
    ТЧКонтрагенты = Объект.Контрагенты;
    ТЧКонтрагенты.Очистить();
    Если ЗначениеЗаполнено(Объект.ИнтернетМагазин) Тогда
        СтрокаТЧ = ТЧКонтрагенты.Добавить();
        СтрокаТЧ.Контрагент = Объект.ИнтернетМагазин;
    КонецЕсли;
    Если Объект.ИнтернетМагазин.ЗаполнятьНаборнуюВедомостьПоГруппе Тогда
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   Контрагенты.Ссылка КАК Контрагент
        |ИЗ
        |   Справочник.Контрагенты КАК Контрагенты
        |ГДЕ
        |   Контрагенты.Родитель.ОсновнойМагазин = &ОсновнойМагазин";
        
        Запрос.УстановитьПараметр("ОсновнойМагазин", Объект.ИнтернетМагазин);
        
        РезультатЗапроса = Запрос.Выполнить();
        
        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
        
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            СтрокаТЧ = ТЧКонтрагенты.Добавить();
            ЗаполнитьЗначенияСвойств(СтрокаТЧ,ВыборкаДетальныеЗаписи);
        КонецЦикла;
    КонецЕсли;
КонецПроцедуры


Функция ПолучитьНомераЗаказовСоСкладами()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   СтатусыСкладскогоУчета.Заказ,
        |   МАКСИМУМ(СтатусыСкладскогоУчета.Период) КАК Период,
        |   МАКСИМУМ(ВЫБОР
        |           КОГДА СтатусыСкладскогоУчета.СтатусСкладскогоУчета = ЗНАЧЕНИЕ(Справочник.СтатусыСкладскогоУчета.ЗаказНеВозвратный)
        |               ТОГДА ИСТИНА
        |           ИНАЧЕ ЛОЖЬ
        |       КОНЕЦ) КАК НеВозвратныйЗаказ
        |ПОМЕСТИТЬ ВТ_СрезПослдедних
        |ИЗ
        |   РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
        |ГДЕ
        |   (СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.новаОтчетВодителя
        |           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ЗакрытиеЗаказов
        |           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ДанныеЗаказаСамовывоза
        |           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.УстановкаСтатусовСкладскогоУчета
        |           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
        |           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.НаборнаяВедомостьДляВозврата
        |           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ГрупповаяУстановкаСтатусовСкладскогоУчета
        |           ИЛИ СтатусыСкладскогоУчета.Регистратор ССЫЛКА Документ.ЗагрузкаСТСД)
        |
        |СГРУППИРОВАТЬ ПО
        |   СтатусыСкладскогоУчета.Заказ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   СтатусыСкладскогоУчета.Заказ,
        |   СтатусыСкладскогоУчета.СтатусСкладскогоУчета КАК ТекущийСтатус,
        |   СтатусыСкладскогоУчета.ТипЗаказа,
        |   СтатусыСкладскогоУчета.Заказ.ВладелецТовара КАК Контрагент
        |ПОМЕСТИТЬ ВТ_СписокЗаказов
        |ИЗ
        |   РегистрСведений.СтатусыСкладскогоУчета КАК СтатусыСкладскогоУчета
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СрезПослдедних КАК ВТ_СрезПослдедних
        |       ПО СтатусыСкладскогоУчета.Заказ = ВТ_СрезПослдедних.Заказ
        |           И СтатусыСкладскогоУчета.Период = ВТ_СрезПослдедних.Период
        |           И (НЕ ВТ_СрезПослдедних.НеВозвратныйЗаказ)
        |ГДЕ
        |   СтатусыСкладскогоУчета.СтатусСкладскогоУчета В(&СтатусСкладскогоУчета)
        |
        |ИНДЕКСИРОВАТЬ ПО
        |   СтатусыСкладскогоУчета.Заказ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   РеализацияТоваровУслугТовары.Ссылка.Номер
        |ПОМЕСТИТЬ ВТ_Итого
        |ИЗ
        |   Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
        |       ПО РеализацияТоваровУслугТовары.Ссылка.Номер = ВТ_СписокЗаказов.Заказ.Номер
        |ГДЕ
        |   РеализацияТоваровУслугТовары.СкладМагазина = &СкладМагазина
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер
        |ИЗ
        |   Документ.РеализацияТоваровУслуг.ПодарочныеПозиции КАК РеализацияТоваровУслугПодарочныеПозиции
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
        |       ПО РеализацияТоваровУслугПодарочныеПозиции.Ссылка.Номер = ВТ_СписокЗаказов.Заказ.Номер
        |ГДЕ
        |   РеализацияТоваровУслугПодарочныеПозиции.СкладМагазина = &СкладМагазина
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   ВозвратТоваровОтПокупателяТовары.Ссылка.Номер
        |ИЗ
        |   Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
        |       ПО ВозвратТоваровОтПокупателяТовары.Ссылка.Номер = ВТ_СписокЗаказов.Заказ.Номер
        |ГДЕ
        |   ВозвратТоваровОтПокупателяТовары.СкладМагазина = &СкладМагазина
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   ПоступлениеТоваровУслугТовары.Ссылка.Номер
        |ИЗ
        |   Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
        |       ПО ПоступлениеТоваровУслугТовары.Ссылка.Номер = ВТ_СписокЗаказов.Заказ.Номер
        |ГДЕ
        |   ПоступлениеТоваровУслугТовары.СкладМагазина = &СкладМагазина
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер
        |ИЗ
        |   Документ.ПоступлениеТоваровУслуг.ПодарочныеПозиции КАК ПоступлениеТоваровУслугПодарочныеПозиции
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокЗаказов КАК ВТ_СписокЗаказов
        |       ПО ПоступлениеТоваровУслугПодарочныеПозиции.Ссылка.Номер = ВТ_СписокЗаказов.Заказ.Номер
        |ГДЕ
        |   ПоступлениеТоваровУслугПодарочныеПозиции.СкладМагазина = &СкладМагазина
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВТ_Итого.Номер
        |ИЗ
        |   ВТ_Итого КАК ВТ_Итого
        |
        |СГРУППИРОВАТЬ ПО
        |   ВТ_Итого.Номер";
    
    Запрос.УстановитьПараметр("СкладМагазина", Объект.СкладМагазина);
    СписокСтатусСкладскогоУчета = Новый СписокЗначений;
    СписокСтатусСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.Возврат1);
    СписокСтатусСкладскогоУчета.Добавить(Справочники.СтатусыСкладскогоУчета.Возврат2);
    Запрос.УстановитьПараметр("СтатусСкладскогоУчета",СписокСтатусСкладскогоУчета);
    
    
    Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Номер");
    
КонецФункции // ПолучитьНомераЗаказовСоСкладами()

Функция ПроверитьНаличиеВозвратов()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |   ВозвратТоваровПоставщику.Ссылка
        |ИЗ
        |   Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
        |ГДЕ
        |   ВозвратТоваровПоставщику.Сделка = &Сделка
        |   И НЕ ВозвратТоваровПоставщику.ПометкаУдаления";
    
    Запрос.УстановитьПараметр("Сделка", Объект.Ссылка);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат Истина
    Иначе
        Возврат Ложь
    КонецЕсли;
   
КонецФункции




 
 




