
Процедура Печать(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НаборнаяВедомостьДляВозврата.Дата КАК Дата,
	|	НаборнаяВедомостьДляВозврата.ИнтернетМагазин КАК ИнтернетМагазин,
	|	НаборнаяВедомостьДляВозврата.Номер КАК Номер,
	|	НаборнаяВедомостьДляВозврата.Заказы.(
	|		Заказ.Номер КАК НомерЗаказа,
	|		Заказ.НомерВнешнегоЗаказа КАК НомерВнешнегоЗаказа,
	|		КоличествоМестТовара КАК КоличествоМестТовара,
	|		НомерСтроки КАК НомерСтроки,
	|		Заказ КАК Заказ,
	|		Заказ.ТерминалДоставки.Наименование КАК ТерминалДоставки
	|	) КАК Заказы,
	|	НаборнаяВедомостьДляВозврата.Товары.(
	|		Сумма КАК Сумма,
	|		ЗаказРеализация КАК Заказ
	|	) КАК Товары
	|ИЗ
	|	Документ.НаборнаяВедомостьДляВозврата КАК НаборнаяВедомостьДляВозврата
	|ГДЕ
	|	НаборнаяВедомостьДляВозврата.Ссылка В(&Ссылка)
	|	И НЕ НаборнаяВедомостьДляВозврата.ТипВозврата В (ЗНАЧЕНИЕ(Справочник.ТипыВозврата.ВнесистемныйВозврат))";
	//Асеев 20.05.2022 (Задача № 4809)>>>
	//И НЕ НаборнаяВедомостьДляВозврата.ТипВозврата В (ЗНАЧЕНИЕ(Справочник.ТипыВозврата.ВнесистемныйВозврат))
	//Асеев 20.05.2022 (Задача № 4809)<<<
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
    
    ОбластьШтрихКод = Макет.ПолучитьОбласть("ШтрихКод");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаказыШапка = Макет.ПолучитьОбласть("ЗаказыШапка");
	ОбластьЗаказы = Макет.ПолучитьОбласть("Заказы");
	ОбластьЗаказыИтого = Макет.ПолучитьОбласть("ЗаказыИтог");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
    //Считаем количество мест
    КоличествоМестИтого = 0;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
        ШтрихКод = lem.глСформироватьБарКодEAN13(smv.СформироватьШтрихкод(Выборка.Номер));
        ОбластьШтрихКод.Параметры.ШтрихКод = ШтрихКод;
		ТабДок.Вывести(ОбластьШтрихКод);
        
		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

        ТабДок.Вывести(ОбластьЗаказыШапка);
        ВыборкаЗаказы = Выборка.Заказы.Выбрать();
        ТаблицаЗаказы = Выборка.Заказы.Выгрузить();
        ТаблицаТовары = Выборка.Товары.Выгрузить();
        Пока ВыборкаЗаказы.Следующий() Цикл
        	ОбластьЗаказы.Параметры.Заполнить(ВыборкаЗаказы);
            ОбластьЗаказы.Параметры.СуммаДокумента = Документы.ПоступлениеТоваровУслуг.НайтиПоНомеру(ВыборкаЗаказы.НомерЗаказа).СуммаДокумента;
            //Серегин М.В. 07.08.2015 17:00:53 костылик )))
            Если Ссылка[0].СтатусВозврата=Справочники.СтатусыСкладскогоУчета.Возврат1 
                И 
                (Ссылка[0].ИнтернетМагазин = Справочники.Контрагенты.НайтиПоКоду("Shop_181") ИЛИ Ссылка[0].ИнтернетМагазин = Справочники.Контрагенты.НайтиПоКоду("Shop_227")) Тогда
                
                КоличествоМест = ПолучитьКоличествоМест(ВыборкаЗаказы.НомерЗаказа);
                ОбластьЗаказы.Параметры.КоличествоМест = КоличествоМест;
				//Асеев 09.10.2020 (по письму Re: Наборная ведомость на возврат)>>>
				ОбластьЗаказы.Параметры.ТерминалДоставки = ВыборкаЗаказы.ТерминалДоставки;
				//Асеев 09.10.2020 (по письму Re: Наборная ведомость на возврат)<<<
				
                КоличествоМестИтого = КоличествоМестИтого+КоличествоМест;
                
            Иначе
                
                ОбластьЗаказы.Параметры.КоличествоМест = ВыборкаЗаказы.КоличествоМестТовара;
                КоличествоМестИтого = КоличествоМестИтого+ВыборкаЗаказы.КоличествоМестТовара;
            КонецЕсли;
            //Серегин М.В. 07.08.2015 17:12:04 
        	ТабДок.Вывести(ОбластьЗаказы, ВыборкаЗаказы.Уровень());
        КонецЦикла;
        ////Серегин М.В. 07.08.2015 17:02:13 старый код
        //ОбластьЗаказыИтого.Параметры.КоличествоМест = ТаблицаЗаказы.Итог("КоличествоМестТовара");
        //Серегин М.В. 07.08.2015 17:02:21 новый
        ОбластьЗаказыИтого.Параметры.КоличествоМест = КоличествоМестИтого;
        ОбластьЗаказыИтого.Параметры.СуммаДокумента = ТаблицаТовары.Итог("Сумма");
        ТабДок.Вывести(ОбластьЗаказыИтого);
        
        ВставлятьРазделительСтраниц = Истина;
    КонецЦикла;
	//}}
КонецПроцедуры

Функция ПолучитьКоличествоМест(НомерЗаказа)

    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |   СУММА(Накладная003Заказы.КоличествоМест) КАК КоличествоМест,
        |   Накладная003Заказы.НомерЗаказа
        |ИЗ
        |   Документ.Накладная003.Заказы КАК Накладная003Заказы
        |ГДЕ
        |   Накладная003Заказы.НомерЗаказа = &НомерЗаказа
        |
        |СГРУППИРОВАТЬ ПО
        |   Накладная003Заказы.НомерЗаказа";
    
    Запрос.УстановитьПараметр("НомерЗаказа", НомерЗаказа);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат ВыборкаДетальныеЗаписи.КоличествоМест;    
    Иначе
        Возврат 0;
    КонецЕсли;

КонецФункции // ПолучитьКоличествоМест()

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" Тогда	
		Если Параметры.Свойство("Ключ") И Параметры.Ключ.НовыйМеханизм Тогда	
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаДокументаНовая";					
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПечатьПредварительная(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(ПечатьПредварительная)
	Макет = Документы.НаборнаяВедомостьДляВозврата.ПолучитьМакет("ПечатьПредварительная");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НаборнаяВедомостьДляВозврата.Дата КАК Дата,
	|	НаборнаяВедомостьДляВозврата.ИнтернетМагазин КАК ИнтернетМагазин,
	|	НаборнаяВедомостьДляВозврата.Номер КАК Номер,
	|	НаборнаяВедомостьДляВозврата.Заказы.(
	|		НомерСтроки КАК НомерСтроки,
	|		Заказ КАК Заказ,
	|		КоличествоМестТовара КАК КоличествоМестТовара,
	|		ТекущийСтатус КАК ТекущийСтатус,
	|		ЗаказНайден КАК ЗаказНайден,
	|		ТипЗаказа КАК ТипЗаказа,
	|		СкладМагазина КАК СкладМагазина,
	|		Контрагент КАК Контрагент,
	|		СобраноМест КАК СобраноМест
	|	) КАК Заказы
	|ИЗ
	|	Документ.НаборнаяВедомостьДляВозврата КАК НаборнаяВедомостьДляВозврата
	|ГДЕ
	|	НаборнаяВедомостьДляВозврата.Ссылка В(&Ссылка)
	|	И НЕ НаборнаяВедомостьДляВозврата.ТипВозврата В (ЗНАЧЕНИЕ(Справочник.ТипыВозврата.ВнесистемныйВозврат))";
	//Асеев 20.05.2022 (Задача № 4809)>>>
	//И НЕ НаборнаяВедомостьДляВозврата.ТипВозврата В (ЗНАЧЕНИЕ(Справочник.ТипыВозврата.ВнесистемныйВозврат))
	//Асеев 20.05.2022 (Задача № 4809)<<<
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаказыШапка = Макет.ПолучитьОбласть("ЗаказыШапка");
	ОбластьЗаказы = Макет.ПолучитьОбласть("Заказы");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьЗаказыШапка);
		ВыборкаЗаказы = Выборка.Заказы.Выбрать();
		Пока ВыборкаЗаказы.Следующий() Цикл
			ОбластьЗаказы.Параметры.Заполнить(ВыборкаЗаказы);
			ТабДок.Вывести(ОбластьЗаказы, ВыборкаЗаказы.Уровень());
		КонецЦикла;

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры




