
Функция AddAcceptanceReportToIntake(intakeNumber, AcceptanceReports, Auth) Экспорт
    Возврат ДобавитьАППКЗабору(intakeNumber, AcceptanceReports, Auth);
КонецФункции

Функция ДобавитьАППКЗабору(intakeNumber, AcceptanceReports, Auth, Volume = 0)
    ЗаборСсылка = Документы.ЗаборТовара.НайтиПоНомеру(intakeNumber);
    Если ЗначениеЗаполнено(ЗаборСсылка) Тогда
        ДокументОбъект = ЗаборСсылка.ПолучитьОбъект();
        Для каждого Стр Из AcceptanceReports.AcceptanceReport Цикл
            СтрокаАПП = ДокументОбъект.АПП.Добавить();
            СтрокаАПП.НомерАПП = Стр.AcceptanceReportNumber;
            СтрокаАПП.ДатаДобавления = Стр.Date;        
		КонецЦикла;
		ДокументОбъект.ОбъемВозвратныхЗаказов = Volume;
        Попытка
        	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
            Возврат 1;
        Исключение
            Возврат 0;
        КонецПопытки;
    Иначе
        Возврат 0;
    КонецЕсли;
КонецФункции	

Функция AddAcceptanceReportToIntakeWithVolume(intakeNumber, AcceptanceReports, Auth, Volume)
	// Вставить содержимое обработчика.
	Возврат ДобавитьАППКЗабору(intakeNumber, AcceptanceReports, Auth, Volume);
КонецФункции

Функция AddVolumeToIntake(intakeNumber, Auth, Volume)
    ЗаборСсылка = Документы.ЗаборТовара.НайтиПоНомеру(intakeNumber);
    Если ЗначениеЗаполнено(ЗаборСсылка) Тогда
        ДокументОбъект = ЗаборСсылка.ПолучитьОбъект();
		ДокументОбъект.ОбъемЗаказов = Volume;
        Попытка
        	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
            Возврат 1;
        Исключение
            Возврат 0;
        КонецПопытки;
    Иначе
        Возврат 0;
    КонецЕсли;
КонецФункции

Функция SetExtNumberToIntake(intakeNumber, Auth, ExtNumber)
    ЗаборСсылка = Документы.ЗаборТовара.НайтиПоНомеру(intakeNumber);
    Если ЗначениеЗаполнено(ЗаборСсылка) Тогда
        ДокументОбъект = ЗаборСсылка.ПолучитьОбъект();
		ДокументОбъект.ДополнительныйНомер = ExtNumber;
        Попытка
        	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
            Возврат 1;
        Исключение
            Возврат 0;
        КонецПопытки;
    Иначе
        Возврат 0;
    КонецЕсли;
КонецФункции

Функция setCurrentStatus(orderId, statusId, processingTerminal, initiator, reasonId, deliveryDate) 
	
	//Задача № 3231
	Попытка
		
		НомерЗаказа = Строка(orderId);
		НомерЗаказа = СтрЗаменить(НомерЗаказа, Символы.НПП, "");
		
		//КодПричины = Формат(reasonId, "ЧЦ=11; ЧВН=; ЧГ=");
		КодПричины = reasonId;
		
		ДокументЗаказСсылка = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(НомерЗаказа);
		Если  ЗначениеЗаполнено(ДокументЗаказСсылка) Тогда
			
			ДокументУстановкаСтатуса = Документы.УстановкаСтатусовЗаказов.СоздатьДокумент();
			
			ДокументУстановкаСтатуса.Дата = ТекущаяДата();
			ДокументУстановкаСтатуса.Заказ = ДокументЗаказСсылка;
			ДокументУстановкаСтатуса.WebService = Истина;
			ДокументУстановкаСтатуса.ТекущийСтатус = Справочники.СтатусыЗаказов.НайтиПоКоду(statusId);
			ДокументУстановкаСтатуса.УстанавливатьТекущийСтатус =  Ложь;
			
			ДокументУстановкаСтатуса.ТерминалОбработки = Справочники.РегиональныеТерминалы.НайтиПоКоду(processingTerminal);
			ДокументУстановкаСтатуса.ПричинаОтказаПереноса = Справочники.ПричиныОтказаПереноса.НайтиПоКоду(КодПричины);
			
			Если initiator = 1 Тогда
				ДокументУстановкаСтатуса.ИнициаторСостояния = Перечисления.ИнициаторыСостояния.ИнтернетМагазин;
			ИначеЕсли initiator = 2 тогда
				ДокументУстановкаСтатуса.ИнициаторСостояния = Перечисления.ИнициаторыСостояния.Клиент;
			ИначеЕсли initiator = 3 тогда
				ДокументУстановкаСтатуса.ИнициаторСостояния = Перечисления.ИнициаторыСостояния.ТранспортнаяКомпания;
			КонецЕсли;	
			
			// ++Задача № 3469
			Если statusId = 232 тогда
				ДокументУстановкаСтатуса.ДатаПереноса = deliveryDate;
			КонецЕсли;
			// --Задача № 3469
			
			ДокументУстановкаСтатуса.Записать(РежимЗаписиДокумента.Запись);
			
			Попытка
				
				ДокументУстановкаСтатуса.Записать(РежимЗаписиДокумента.Проведение);
				
				Возврат 0;
				
			Исключение
				
				ТекстОшибки = ОписаниеОшибки();
				ТекстОшибкиКЗаписи = "Не удалось установить статус " + Строка(statusId) + 
				" для " + Строка(ДокументУстановкаСтатуса.Заказ) + 
				" (Документ " + СокрЛП(ДокументУстановкаСтатуса.Ссылка) + ")" + 
				Символы.ПС + "Текст ошибки: " + ТекстОшибки;
				
				pkv.ДобавитьВСписокОтложенногоПроведения(ДокументУстановкаСтатуса.Ссылка, ТекстОшибкиКЗаписи);  //Дробница Р. по skype ЕМ 13.09.2019 11:10
				
				Возврат -1;
				
			Конецпопытки;
			
		Иначе
			
			Возврат -1;
			
		Конецесли;
		
	Исключение
		
		Возврат -1;
		
	Конецпопытки;
	
КонецФункции
