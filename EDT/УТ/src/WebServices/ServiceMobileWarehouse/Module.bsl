
Функция Get_Drivers(HostID)
    Попытка
        //Получим узел обмена
        Узел = smv.ПолучитьУзелПланаОбмена(HostID,Метаданные.Справочники.новаВодители,"ИзмененияДляМПСклад");
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   новаВодителиИзменения.Ссылка.Код КАК ID,
        |   новаВодителиИзменения.Ссылка.Наименование КАК Name
        |ИЗ
        |   Справочник.новаВодители.Изменения КАК новаВодителиИзменения
        |ГДЕ
        |   новаВодителиИзменения.Узел = &Узел";
        
        Запрос.УстановитьПараметр("Узел", Узел);
        РезультатЗапроса = Запрос.Выполнить();
        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
        
        //Получим описание нужных объектов
        TableDriversТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","TableDrivers");
        DriverТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","Driver");
        
        TableDrivers = ФабрикаXDTO.Создать(TableDriversТип);
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            Driver = ФабрикаXDTO.Создать(DriverТип);
            ЗаполнитьЗначенияСвойств(Driver,ВыборкаДетальныеЗаписи); 
            TableDrivers.Driver.Добавить(Driver);        
        КонецЦикла;
        Возврат TableDrivers;
        
    Исключение
        smv.ДобавитьЛогОбмена(Узел, Перечисления.ТипыОбменаСМобильнымПриложением.ПолучитьВодителейМПСклад,Ложь,ОписаниеОшибки());
    КонецПопытки;
КонецФункции

Функция Get_Cars(HostID)
    Попытка
        //Получим узел обмена
        Узел = smv.ПолучитьУзелПланаОбмена(HostID,Метаданные.Справочники.новаТранспорт,"ИзмененияДляМПСклад");
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   новаТранспортИзменения.Ссылка.Код КАК ID,
        |   новаТранспортИзменения.Ссылка.Наименование КАК Name
        |ИЗ
        |   Справочник.новаТранспорт.Изменения КАК новаТранспортИзменения
        |ГДЕ
        |   новаТранспортИзменения.Узел = &Узел";
        
        Запрос.УстановитьПараметр("Узел", Узел);
        РезультатЗапроса = Запрос.Выполнить();
        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
        
        //Получим описание нужных объектов
        TableCarsТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","TableCars");
        CarТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","Car");
        
        TableCars = ФабрикаXDTO.Создать(TableCarsТип);
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            Car = ФабрикаXDTO.Создать(CarТип);
            ЗаполнитьЗначенияСвойств(Car,ВыборкаДетальныеЗаписи); 
            TableCars.Car.Добавить(Car);        
        КонецЦикла;
        Возврат TableCars;
        
    Исключение
        smv.ДобавитьЛогОбмена(Узел, Перечисления.ТипыОбменаСМобильнымПриложением.ПолучитьМашиныМПСклад,Ложь,ОписаниеОшибки());
    КонецПопытки;
КонецФункции

Функция Get_Partners(HostID)
    Попытка
        //Получим узел обмена
        Узел = smv.ПолучитьУзелПланаОбмена(HostID,Метаданные.Справочники.Контрагенты,"ИзмененияДляМПСклад");
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   КонтрагентыИзменения.Ссылка.Код КАК ID,
        |   КонтрагентыИзменения.Ссылка.Наименование КАК Name
        |ИЗ
        |   Справочник.Контрагенты.Изменения КАК КонтрагентыИзменения
        |ГДЕ
        |   КонтрагентыИзменения.Узел = &Узел";
        
        Запрос.УстановитьПараметр("Узел", Узел);
        РезультатЗапроса = Запрос.Выполнить();
        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
        
        //Получим описание нужных объектов
        TablePartnersТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","TablePartners");
        PartnerТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","Partner");
        
        TablePartners = ФабрикаXDTO.Создать(TablePartnersТип);
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            Partner = ФабрикаXDTO.Создать(PartnerТип);
            ЗаполнитьЗначенияСвойств(Partner,ВыборкаДетальныеЗаписи); 
            TablePartners.Partner.Добавить(Partner);        
        КонецЦикла;
        Возврат TablePartners;
        
    Исключение
        smv.ДобавитьЛогОбмена(Узел, Перечисления.ТипыОбменаСМобильнымПриложением.ПолучитьПартнеровМПСклад,Ложь,ОписаниеОшибки());
    КонецПопытки;
КонецФункции

Функция Get_Items(HostID)
    Попытка
        //Получим узел обмена
        Узел = smv.ПолучитьУзелПланаОбмена(HostID,Метаданные.Справочники.Номенклатура,"ИзмененияДляМПСклад");
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   НоменклатураИзменения.Ссылка.Код КАК ID,
        |   НоменклатураИзменения.Ссылка.Наименование КАК Name
        |ИЗ
        |   Справочник.Номенклатура.Изменения КАК НоменклатураИзменения
        |ГДЕ
        |   НоменклатураИзменения.Узел = &Узел";
        
        Запрос.УстановитьПараметр("Узел", Узел);
        РезультатЗапроса = Запрос.Выполнить();
        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
        
        //Получим описание нужных объектов
        TableItemsТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","TableItems");
        ItemТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","Item");
        
        TableItems = ФабрикаXDTO.Создать(TableItemsТип);
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            Item = ФабрикаXDTO.Создать(ItemТип);
            ЗаполнитьЗначенияСвойств(Item,ВыборкаДетальныеЗаписи); 
            TableItems.Item.Добавить(Item);        
        КонецЦикла;
        Возврат TableItems;
        
    Исключение
        smv.ДобавитьЛогОбмена(Узел, Перечисления.ТипыОбменаСМобильнымПриложением.ПолучитьТоварыМПСклад,Ложь,ОписаниеОшибки());
    КонецПопытки;
КонецФункции

Функция Get_FreightForwarders(HostID)
    Попытка
        //Получим узел обмена
        Узел = smv.ПолучитьУзелПланаОбмена(HostID,Метаданные.Справочники.новаЭкспедиторы,"ИзмененияДляМПСклад");
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   новаЭкспедиторыИзменения.Ссылка.Код КАК ID,
        |   новаЭкспедиторыИзменения.Ссылка.Наименование КАК Name
        |ИЗ
        |   Справочник.новаЭкспедиторы.Изменения КАК новаЭкспедиторыИзменения
        |ГДЕ
        |   новаЭкспедиторыИзменения.Узел = &Узел";
        
        Запрос.УстановитьПараметр("Узел", Узел);
        РезультатЗапроса = Запрос.Выполнить();
        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
        
        //Получим описание нужных объектов
        TableFreightForwardersТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","TableFreightForwarders");
        FreightForwarderТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","FreightForwarder");
        
        TableFreightForwarders = ФабрикаXDTO.Создать(TableFreightForwardersТип);
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            FreightForwarder = ФабрикаXDTO.Создать(FreightForwarderТип);
            ЗаполнитьЗначенияСвойств(FreightForwarder,ВыборкаДетальныеЗаписи); 
            TableFreightForwarders.FreightForwarder.Добавить(FreightForwarder);        
        КонецЦикла;
        Возврат TableFreightForwarders;
        
    Исключение
        smv.ДобавитьЛогОбмена(Узел, Перечисления.ТипыОбменаСМобильнымПриложением.ПолучитьЭкспедиторовМПСклад,Ложь,ОписаниеОшибки());
    КонецПопытки;
КонецФункции

Функция Get_Orders(HostID)
    Попытка
        //Получим узел обмена
        Узел = smv.ПолучитьУзелПланаОбмена(HostID,Метаданные.Документы.РеализацияТоваровУслуг,"ИзмененияДляМПСклад");
        
        //Получим выборку данных с итогами
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   РеализацияТоваровУслугИзменения.Ссылка.ВладелецТовара.Код КАК PartnerID,
        |   новаМестнаяДоставка.ВремяПрибытияС КАК IntervalFrom,
        |   новаМестнаяДоставка.ВремяПрибытияПо КАК IntervalBy,
        |   новаМестнаяДоставка.ТочкаПрибытия.Адрес.Широта КАК Latitude,
        |   новаМестнаяДоставка.ТочкаПрибытия.Адрес.Долгота КАК Longitude,
        |   РеализацияТоваровУслугИзменения.Ссылка.Контрагент.Наименование КАК Client,
        |   РеализацияТоваровУслугТовары.Номенклатура.Код КАК ItemID,
        |   РеализацияТоваровУслугТовары.Количество КАК Amount,
        |   РеализацияТоваровУслугТовары.Цена КАК Price,
        |   РеализацияТоваровУслугТовары.Сумма КАК Sum,
        |   РеализацияТоваровУслугИзменения.Ссылка.Номер КАК Number,
        |   РеализацияТоваровУслугИзменения.Ссылка.Дата КАК Date,
        |   РеализацияТоваровУслугИзменения.Ссылка.Номер КАК Name
        |ИЗ
        |   Документ.РеализацияТоваровУслуг.Изменения КАК РеализацияТоваровУслугИзменения
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.новаМестнаяДоставка КАК новаМестнаяДоставка
        |       ПО РеализацияТоваровУслугИзменения.Ссылка.Номер = новаМестнаяДоставка.Номер
        |       ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
        |       ПО РеализацияТоваровУслугИзменения.Ссылка = РеализацияТоваровУслугТовары.Ссылка
        |ГДЕ
        |   РеализацияТоваровУслугИзменения.Узел = &Узел
        |ИТОГИ
        |   МАКСИМУМ(PartnerID),
        |   МАКСИМУМ(IntervalFrom),
        |   МАКСИМУМ(IntervalBy),
        |   МАКСИМУМ(Latitude),
        |   МАКСИМУМ(Longitude),
        |   МАКСИМУМ(Client),
        |   МАКСИМУМ(Date),
        |   МАКСИМУМ(Name)
        |ПО
        |   Number";
        
        Запрос.УстановитьПараметр("Узел", Узел);
        РезультатЗапроса = Запрос.Выполнить();
        ВыборкаNumber = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
        
        //Получим описание нужных объектов
        TableOrdersТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","TableOrders");
        OrderТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","Order");
        ArrayOfItemsТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","ArrayOfItems");
        
        //Создаем таблицу
        TableOrders = ФабрикаXDTO.Создать(TableOrdersТип);
        Пока ВыборкаNumber.Следующий() Цикл
            //Создаем элемент (объект) и добавляем в таблицу
            Order = ФабрикаXDTO.Создать(OrderТип);
            ЗаполнитьЗначенияСвойств(Order,ВыборкаNumber);
            Order.IntervalFrom = Формат(ВыборкаNumber.IntervalFrom,"ДФ=HH:mm:ss");
            Order.IntervalBy = Формат(ВыборкаNumber.IntervalBy,"ДФ=HH:mm:ss");
            TableOrders.Order.Добавить(Order);        
            
            ВыборкаДетальныеЗаписи = ВыборкаNumber.Выбрать();
            Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
                //Добавляем строки в ТЧ элемента(объекта) 
                ArrayOfItems = ФабрикаXDTO.Создать(ArrayOfItemsТип);
                ЗаполнитьЗначенияСвойств(ArrayOfItems,ВыборкаДетальныеЗаписи);
                Order.ArrayOfItems.Добавить(ArrayOfItems);
                
            КонецЦикла;
        КонецЦикла;
        
        Возврат TableOrders;
        
    Исключение
        smv.ДобавитьЛогОбмена(Узел, Перечисления.ТипыОбменаСМобильнымПриложением.ПолучитьЗаказыМПСклад,Ложь,ОписаниеОшибки());
    КонецПопытки;
КонецФункции

Функция Get_OrderByBarcode(Barcode)
    Возврат ПолучитьНомерЗаказа(Barcode);
КонецФункции

Функция ПолучитьНомерЗаказа(Barcode)
    МассивСформированныхШтрихкодов = СформироватьМассивШтрихкодов(Barcode);   
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |   ШтрихкодыЗаказов.Заказ.Номер КАК НомерЗаказа
        |ИЗ
        |   РегистрСведений.ШтрихкодыЗаказов КАК ШтрихкодыЗаказов
        |ГДЕ
        |   ШтрихкодыЗаказов.Штрихкод В(&МассивСформированныхШтрихкодов)
        //|   И ШтрихкодыЗаказов.Заказ.Дата >= &ДатаНачала
        |
        |УПОРЯДОЧИТЬ ПО
        |   НомерЗаказа УБЫВ
        |АВТОУПОРЯДОЧИВАНИЕ";
    
    Запрос.УстановитьПараметр("МассивСформированныхШтрихкодов", МассивСформированныхШтрихкодов);
    //Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(ТекущаяДата()-2592000)); //-30 дней
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Если ВыборкаДетальныеЗаписи.Следующий() Тогда
        Возврат ВыборкаДетальныеЗаписи.НомерЗаказа;
    Иначе
        Возврат "";
    КонецЕсли;
	

КонецФункции // ()

Функция СформироватьМассивШтрихкодов(Barcode)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ШаблоныШтрихКодов.НачальныйСимвол,
        |   ШаблоныШтрихКодов.Шаблон,
        |   ШаблоныШтрихКодов.КоличествоДобавочныхСимволов
        |ИЗ
        |   Справочник.ШаблоныШтрихКодов КАК ШаблоныШтрихКодов";
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    МассивСформированныхШтрихкодов = Новый Массив;
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        ДлинаШтрихкода = СтрДлина(Barcode);
        //Нужны для последующей подстановки, т.к. обрезаются
        НачальныеСимволы = Лев(Barcode,СтрДлина(ВыборкаДетальныеЗаписи.НачальныйСимвол));
        //Очистим штрихкод для обработки шаблоном
        //без начальных символов
        Штрихкод = Сред(Barcode,СтрДлина(НачальныеСимволы)+1,ДлинаШтрихкода - СтрДлина(ВыборкаДетальныеЗаписи.НачальныйСимвол));
        ДлинаШтрихкода = СтрДлина(Штрихкод);
        //без дополнительных символов
        Штрихкод = Лев(Штрихкод,ДлинаШтрихкода-ВыборкаДетальныеЗаписи.КоличествоДобавочныхСимволов);
        Номер = Штрихкод;
        НомерВнешнегоЗаказа = Штрихкод;
        //Сформируем штрихкод по шаблону
        Выполнить (ВыборкаДетальныеЗаписи.Шаблон);
        //Добавим обрезаные ранее начальные символы
        Штрихкод = НачальныеСимволы+Штрихкод;
        МассивСформированныхШтрихкодов.Добавить(Штрихкод);
    КонецЦикла;
    Возврат МассивСформированныхШтрихкодов;
    
КонецФункции // СформироватьМассивШтрихкодов()

Функция Get_DataTrip(TripID)
    //Получим описание нужных объектов
    TripТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","Trip");
    ArrayOfOrdersIDТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","ArrayOfOrdersID");
    ArrayOfOrdersBarcodesТип = ФабрикаXDTO.Тип("http://www.strizh-logistic.ru/ServiceMobileWarehouse","ArrayOfOrdersBarcodes");
    
    Trip = ФабрикаXDTO.Создать(TripТип);
    Trip.TripID = TripID;
    
    
    
    //Получим рейс и список заказов
    Выборка = ПолучитьВыборкуПоРейсу(TripID);
    Пока Выборка.Следующий() Цикл
        //Не очень гуд то что в цикле, но ничего страшного
        Trip.DateTrip = Выборка.Рейс.ДатаНачала;
        Trip.CarID = Выборка.Рейс.Транспорт.Код;
        Trip.FreightForwarderID = Выборка.Рейс.Экспедитор.Код;
        Trip.DriverID = Выборка.Рейс.Водитель.Код;
        
        
        //Таблица с номерами заказов
        ArrayOfOrdersID = ФабрикаXDTO.Создать(ArrayOfOrdersIDТип);
        ЗаполнитьЗначенияСвойств(ArrayOfOrdersID,Выборка);
        Trip.ArrayOfOrdersID.Добавить(ArrayOfOrdersID);
        
        //Таблица со штрихкодами заказов
        ВыборкаШаблоновКонтрагента = ПолучитьШаблоныКонтрагента(Выборка.Контрагент);
        Пока ВыборкаШаблоновКонтрагента.Следующий() Цикл
            Номер = СокрЛП(Выборка.OdrerID);
            НомерВнешнегоЗаказа = СокрЛП(Выборка.OdrerPartnerID);
            ШаблонШтрихкода = ВыборкаШаблоновКонтрагента.Шаблон;
            
            //Штрихкод из Номера/НомерВнешнегоЗаказа
            Выполнить(ШаблонШтрихкода.Шаблон);
            //Добавляем начальные символы
            Штрихкод = ШаблонШтрихкода.НачальныйСимвол+Штрихкод;
            
            //Инициализируем переменную контрольный символ
            КонтрольныйСимвол = "";
            
            //Формируем массив добавочных символов и возможные варианты штрихкодов (полных)
            Если ЗначениеЗаполнено(ШаблонШтрихкода.ДобавочныеСимволы) Тогда //Штрихкод с добавочными символами
                МассивДобавочныеСимволы = smv.ПолучитьМассивДополнительныхСимволов(ШаблонШтрихкода.ДобавочныеСимволы); 
                Для каждого Стр Из МассивДобавочныеСимволы Цикл
                    ArrayOfOrdersBarcodes = ФабрикаXDTO.Создать(ArrayOfOrdersBarcodesТип);
                    //Штрихкод из Номера/НомерВнешнегоЗаказа
                    Выполнить(ШаблонШтрихкода.Шаблон);
                    Штрихкод = Штрихкод+СтрЗаменить(Стр,Символ(160),"");
                    Выполнить(ШаблонШтрихкода.КонтрольныйСимвол);
                    Штрихкод = Штрихкод+КонтрольныйСимвол;
                    ArrayOfOrdersBarcodes.OdrerID = Номер;
                    ArrayOfOrdersBarcodes.Barcode = Штрихкод;
                    Trip.ArrayOfOrdersBarcodes.Добавить(ArrayOfOrdersBarcodes);
                КонецЦикла;
                
            Иначе                                                           //Штрихкод без добавочных символов
                ArrayOfOrdersBarcodes = ФабрикаXDTO.Создать(ArrayOfOrdersBarcodesТип);
                Выполнить(ШаблонШтрихкода.КонтрольныйСимвол);
                Штрихкод = Штрихкод+КонтрольныйСимвол;
                ArrayOfOrdersBarcodes.OdrerID = Номер;
                ArrayOfOrdersBarcodes.Barcode = Штрихкод;
                Trip.ArrayOfOrdersBarcodes.Добавить(ArrayOfOrdersBarcodes);
            КонецЕсли;
            
        КонецЦикла;
        
    КонецЦикла;
    
    Возврат Trip;
КонецФункции

Функция ПолучитьВыборкуПоРейсу(НомерРейса)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   новаЗаданияРейсов.Рейс,
    |   РеализацияТоваровУслуг.НомерВнешнегоЗаказа КАК OdrerPartnerID,
    |   РеализацияТоваровУслуг.Номер КАК OdrerID,
    |   РеализацияТоваровУслуг.ВладелецТовара КАК Контрагент
    |ИЗ
    |   РегистрСведений.новаЗаданияРейсов КАК новаЗаданияРейсов
    |       ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
    |       ПО новаЗаданияРейсов.Доставка.Номер = РеализацияТоваровУслуг.Номер
    |ГДЕ
    |   новаЗаданияРейсов.Рейс.Номер = &НомерРейса
    |
    |СГРУППИРОВАТЬ ПО
    |   новаЗаданияРейсов.Рейс,
    |   РеализацияТоваровУслуг.НомерВнешнегоЗаказа,
    |   РеализацияТоваровУслуг.Номер,
    |   РеализацияТоваровУслуг.ВладелецТовара";
    
    Запрос.УстановитьПараметр("НомерРейса", НомерРейса);
    
    Возврат Запрос.Выполнить().Выбрать();
КонецФункции // ()

Функция ПолучитьШаблоныКонтрагента (Контрагент)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ШаблоныШтрихкодовКонтрагентов.Шаблон КАК Шаблон
        |ПОМЕСТИТЬ ВТ_Объединение
        |ИЗ
        |   РегистрСведений.ШаблоныШтрихкодовКонтрагентов КАК ШаблоныШтрихкодовКонтрагентов
        |ГДЕ
        |   ШаблоныШтрихкодовКонтрагентов.Контрагент = &Контрагент
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |   ШаблоныШтрихКодов.Ссылка
        |ИЗ
        |   Справочник.ШаблоныШтрихКодов КАК ШаблоныШтрихКодов
        |ГДЕ
        |   ШаблоныШтрихКодов.Предопределенный
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВТ_Объединение.Шаблон
        |ИЗ
        |   ВТ_Объединение КАК ВТ_Объединение
        |
        |СГРУППИРОВАТЬ ПО
        |   ВТ_Объединение.Шаблон";
    
    Запрос.УстановитьПараметр("Контрагент", Контрагент);
    
    Возврат Запрос.Выполнить().Выбрать();
    
КонецФункции // ()










