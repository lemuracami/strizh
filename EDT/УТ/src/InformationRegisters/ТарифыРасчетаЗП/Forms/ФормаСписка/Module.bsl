
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Выб = Справочники.ВидыТарифовРасчетаЗП.Выбрать();
	
	Пока Выб.Следующий() Цикл
		Элементы.ВидТарифа.СписокВыбора.Добавить(Выб.Ссылка);
	КонецЦикла;	
	ВидТарифа = Справочники.ВидыТарифовРасчетаЗП.Основной;
	Регион = Справочники.РегиональныеТерминалы.МоскваСтриж;
	УстановитьОтборПоВидуТарифа();	
	УстановитьОтборПоРегионуТарифа();
КонецПроцедуры

&НаКлиенте
Процедура ВидТарифаПриИзменении(Элемент)
	УстановитьОтборПоВидуТарифа();	
КонецПроцедуры

Процедура УстановитьОтборПоВидуТарифа()   
		Список.Отбор.Элементы.Очистить();
		ИП = "ВидТарифаРасчетаЗП";
		ПЗ = ВидТарифа;
		Исп = Истина;
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								)	
КонецПроцедуры	


Процедура УстановитьОтборПоРегионуТарифа()   
		Список.Отбор.Элементы.Очистить();
		ИП = "Регион";
		ПЗ = Регион;
		Если Не ЗначениеЗаполнено(Регион) Тогда
			Исп = Ложь;
		Иначе	
			Исп = Истина;
		КонецеСли;	
		ОбщегоНазначенияКлиентСервер83.УстановитьЭлементОтбора(Список.Отбор,
								ИП,
								ПЗ,
								,
								,
								Исп,
								,
								)	
КонецПроцедуры	


&НаКлиенте
Процедура СкопироватьТарифы(Команда)
	ВыбПериод = ТекущаяДата();
	Если Не ВвестиДату(ВыбПериод, "Укажите дату копирования...", ЧастиДаты.Дата) Тогда
		Возврат;
	КонецеСли;	
	
	Сообщить("Копирование тарифов будет произведено на дату " + Формат(ВыбПериод, "ДЛФ=DD") + "...");
	
	Ф = Справочники.ВидыТарифовРасчетаЗП.ПолучитьФормуВыбора();
	Ф.РежимВыбора = Истина;
	Ф.НачальноеЗначениеВыбора = ВидТарифа;
	Ф.Заголовок = "Выберите вид тарифов - источник..";
	ВыбИст = Ф.ОткрытьМодально();
	Если ВыбИст = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Ф.Заголовок = "Выберите вид тарифов - приемник..";
	ВыбПр = Ф.ОткрытьМодально();
	Если ВыбПр = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ТарифыРасчетаЗПСрезПоследних.Период,
	            |	ТарифыРасчетаЗПСрезПоследних.ТипЭкипажа,
	            |	ТарифыРасчетаЗПСрезПоследних.УчастникЭкипажа,
	            |	ТарифыРасчетаЗПСрезПоследних.КатегорияДоставки,
	            |	ТарифыРасчетаЗПСрезПоследних.ТипЗаказа,
	            |	ТарифыРасчетаЗПСрезПоследних.СтоимостьДоМКАД,
	            |	ТарифыРасчетаЗПСрезПоследних.СтоимостьЗаМКАД,
	            |	ТарифыРасчетаЗПСрезПоследних.СтоимостьЧас,
	            |	ТарифыРасчетаЗПСрезПоследних.ТипТранспорта,
	            |	ТарифыРасчетаЗПСрезПоследних.МинимальнаяСтоимость,
	            |	ТарифыРасчетаЗПСрезПоследних.СтавкаФрахт,
	            |	ТарифыРасчетаЗПСрезПоследних.ОбъёмЗабора,
	            |	ТарифыРасчетаЗПСрезПоследних.Регион,
	            |	ТарифыРасчетаЗПСрезПоследних.Услуга
	            |ИЗ
	            |	РегистрСведений.ТарифыРасчетаЗП.СрезПоследних(&ДатаПериода, ) КАК ТарифыРасчетаЗПСрезПоследних
	            |ГДЕ
	            |	ТарифыРасчетаЗПСрезПоследних.ВидТарифаРасчетаЗП = &ВидТарифаРасчетаЗП";
				
	Зап.УстановитьПараметр("ВидТарифаРасчетаЗП", ВыбИст);
	Зап.УстановитьПараметр("ДатаПериода", КонецДня(ВыбПериод));
	
	Рез = Зап.Выполнить().Выгрузить();
	
	Если Рез.Количество() = 0 Тогда
		Предупреждение("Отсутствуют данные для копирования!");
		Возврат;
	КонецеСли;
	
	Наб = РегистрыСведений.ТарифыРасчетаЗП.СоздатьНаборЗаписей();
	Наб.Отбор.ВидТарифаРасчетаЗП.Установить(ВыбПр);
	Наб.Отбор.Период.Установить(КонецДня(ВыбПериод));
	Наб.Прочитать();
	Если Наб.Количество() <> 0 Тогда
		ОтветНаВопрос = Вопрос("По виду тарифов " + СокрЛП(ВыбПр.Наименование) + " существуют записи. При копировании они будут удалены. Продолжить?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			Наб.Очистить();
		Иначе
			Возврат;
		КонецеСли;	
	КонецеСли;	
	
	Для Каждого Тек Из Рез Цикл
		Нов = Наб.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Тек);
		Нов.Период = ВыбПериод;
		Нов.ВидТарифаРасчетаЗП = ВыбПр;
	КонецЦикла;	
	
	Наб.Записать();
	
	ВидТарифа = ВыбПр;	
	
	ВидТарифаПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура РегионПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	УстановитьОтборПоРегионуТарифа();
КонецПроцедуры
