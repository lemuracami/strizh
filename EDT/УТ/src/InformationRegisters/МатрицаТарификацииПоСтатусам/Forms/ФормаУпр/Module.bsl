&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АктуальнаяСхемаМатрицыТарификацииСрезПоследних.СхемаМатрицыТарификации КАК СхемаМатрицыТарификации
		|ИЗ
		|	РегистрСведений.АктуальнаяСхемаМатрицыТарификации.СрезПоследних КАК АктуальнаяСхемаМатрицыТарификацииСрезПоследних";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СхемаМатрицыТарификации = ВыборкаДетальныеЗаписи.СхемаМатрицыТарификации;
	КонецЦикла;
	
	Для каждого СтрТипЗаказа Из СхемаМатрицыТарификации.ДоступныеТипыЗаказов Цикл
		Элементы.ТипЗаказа.СписокВыбора.Добавить(СтрТипЗаказа.ТипЗаказа);
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТипЗаказаПриИзменении(Элемент)

	УдалитьТЗНаСервере();
	
	СоздатьТЗНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьТЗНаСервере()
		
	//1
	МассивТипаВыбора = Новый Массив;
	МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
	ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("МатрицаТарификации", ОписаниеТипаВыбора, "", "Матрица тарификации"));	
	
	//2
	КД = Новый КвалификаторыДаты(ЧастиДаты.Время);            
	МассивКД = Новый Массив;
	МассивКД.Добавить(Тип("Дата"));
	ОписаниеТиповВремя = Новый ОписаниеТипов(МассивКД, , ,КД);
	ОписаниеТиповТипЗаказа = Новый ОписаниеТипов("ПеречислениеСсылка.ТипыЗаказов");
	ОписаниеТиповФинальныйСтатус = Новый ОписаниеТипов("СправочникСсылка.СтатусыЗаказов");
	ОписаниеТиповПоказатель = Новый ОписаниеТипов("СправочникСсылка.ПоказателиРасчетаУслугСД, СправочникСсылка.КомпонентыТарификации");
	ОписаниеТиповЗначение = Новый ОписаниеТипов("Булево");
	
	//3
	ТЗ = Новый ТаблицаЗначений;
	//ТЗ.Колонки.Добавить("ТипЗаказа", ОписаниеТиповТипЗаказа, "Тип заказа");
	ТЗ.Колонки.Добавить("ФинальныйСтатус", ОписаниеТиповФинальныйСтатус, "Финальный статус");
	Для каждого СтрПоказатель Из СхемаМатрицыТарификации.ДоступныеКомпонентыТарификации Цикл
		ТЗ.Колонки.Добавить("Показатель"+СтрПоказатель.НомерСтроки, ОписаниеТиповЗначение, СтрПоказатель.КомпонентаТарификации.Наименование);
		
		НС						 = ТаблицаСоответствияПоказателей.Добавить();
		НС.ИмяКолонки			 = "Показатель"+СтрПоказатель.НомерСтроки;
		НС.КомпонентаТарификации = СтрПоказатель.КомпонентаТарификации;
	КонецЦикла;
	//ТЗ.Колонки.Добавить("Показатель", ОписаниеТиповПоказатель);
	//ТЗ.Колонки.Добавить("Рассчитывать", ОписаниеТиповЗначение);
	
	Для Каждого Колонка Из ТЗ.Колонки Цикл

	     МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "МатрицаТарификации", Колонка.Заголовок));
	    
	КонецЦикла;
	
	//4
	ИзменитьРеквизиты(МассивРеквизитов);      
	
	//5
	ТаблицаПолейВыбора = Элементы.Добавить("МатрицаТарификации", Тип("ТаблицаФормы"));
	ТаблицаПолейВыбора.ПутьКДанным = "МатрицаТарификации";
	ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
	
   	ТаблицаПолейВыбора.УстановитьДействие("Выбор", 					"ТЗНВыбор");	
   	ТаблицаПолейВыбора.УстановитьДействие("ПередНачаломДобавления", "ТЗНПередНачаломДобавления");	
   	ТаблицаПолейВыбора.УстановитьДействие("ПередУдалением",			"ТЗНПередУдалением");	
	
	ТаблицаПолейВыбора.АвтоВводНовойСтроки = Ложь;
	
	//6
	Для Каждого Колонка Из ТЗ.Колонки Цикл
		
		НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ТаблицаПолейВыбора);       
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "МатрицаТарификации." + Колонка.Имя;
		НовыйЭлемент.Ширина = 10;
		НовыйЭлемент.Заголовок = Колонка.Заголовок;
		НовыйЭлемент.ТолькоПросмотр = Истина;
		
		Если Колонка.ТипЗначения = ОписаниеТиповЗначение Тогда
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
			НовыйЭлемент.ТолькоПросмотр = Ложь;			
		КонецЕсли; 
		
	КонецЦикла;
		
	//7
	Для каждого СтрСтатус Из СхемаМатрицыТарификации.ДоступныеФинальныеСтатусы Цикл
		
		НС = ТЗ.Добавить();
		НС.ФинальныйСтатус = СтрСтатус.ФинальныйСтатус;
		
	КонецЦикла; 
	
	//8
	ЗначениеВРеквизитФормы(ТЗ, "МатрицаТарификации");
	
	//9
	Элементы.МатрицаТарификацииКоманднаяПанель.Видимость = Ложь;
	Элементы.МатрицаТарификации.ИзменятьПорядокСтрок = Ложь;
	Элементы.МатрицаТарификации.ИзменятьСоставСтрок = Ложь;
	Элементы.МатрицаТарификации.РазрешитьНачалоПеретаскивания = Ложь;
	Элементы.МатрицаТарификации.РазрешитьПеретаскивание = Ложь;
	Элементы.МатрицаТарификации.ЧередованиеЦветовСтрок = Истина;
	
	//10
	ЗаполнитьДанныеТаблицыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеТаблицыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&СхемаМатрицыТарификации КАК СхемаМатрицыТарификации,
		|	&ТипЗаказа КАК ТипЗаказа,
		|	ВТ.ФинальныйСтатус КАК ФинальныйСтатусЗаказа
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ВТ КАК ВТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.СхемаМатрицыТарификации КАК СхемаМатрицыТарификации,
		|	ВТ.ТипЗаказа КАК ТипЗаказа,
		|	ВТ.ФинальныйСтатусЗаказа КАК ФинальныйСтатусЗаказа,
		|	ЕСТЬNULL(МатрицаТарификацииПоСтатусамСрезПоследних.КомпонентаТарификации, ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаУслугСД.ПустаяСсылка)) КАК КомпонентаТарификации,
		|	ЕСТЬNULL(МатрицаТарификацииПоСтатусамСрезПоследних.Рассчитывать, ЛОЖЬ) КАК Рассчитывать
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МатрицаТарификацииПоСтатусам.СрезПоследних(
		|				,
		|				СхемаМатрицыТарификации = &СхемаМатрицыТарификации
		|					И ТипЗаказа = &ТипЗаказа) КАК МатрицаТарификацииПоСтатусамСрезПоследних
		|		ПО ВТ.СхемаМатрицыТарификации = МатрицаТарификацииПоСтатусамСрезПоследних.СхемаМатрицыТарификации
		|			И ВТ.ТипЗаказа = МатрицаТарификацииПоСтатусамСрезПоследних.ТипЗаказа
		|			И ВТ.ФинальныйСтатусЗаказа = МатрицаТарификацииПоСтатусамСрезПоследних.ФинальныйСтатусЗаказа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСоответствияПоказателей.ИмяКолонки КАК ИмяКолонки,
		|	ТаблицаСоответствияПоказателей.КомпонентаТарификации КАК КомпонентаТарификации
		|ПОМЕСТИТЬ ВТ_ТаблицаСоответствияПоказателей
		|ИЗ
		|	&ТаблицаСоответствияПоказателей КАК ТаблицаСоответствияПоказателей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.СхемаМатрицыТарификации КАК СхемаМатрицыТарификации,
		|	ВТ_Данные.ТипЗаказа КАК ТипЗаказа,
		|	ВТ_Данные.ФинальныйСтатусЗаказа КАК ФинальныйСтатусЗаказа,
		|	ВТ_Данные.КомпонентаТарификации КАК КомпонентаТарификации,
		|	ЕСТЬNULL(ВТ_ТаблицаСоответствияПоказателей.ИмяКолонки, ""Неопределено"") КАК ИмяКолонки,
		|	ВТ_Данные.Рассчитывать КАК Рассчитывать
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСоответствияПоказателей КАК ВТ_ТаблицаСоответствияПоказателей
		|		ПО ВТ_Данные.КомпонентаТарификации = ВТ_ТаблицаСоответствияПоказателей.КомпонентаТарификации";
	
	Запрос.УстановитьПараметр("ВТ", ЭтаФорма["МатрицаТарификации"].Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаСоответствияПоказателей", ТаблицаСоответствияПоказателей.Выгрузить());
	Запрос.УстановитьПараметр("СхемаМатрицыТарификации", СхемаМатрицыТарификации);
	Запрос.УстановитьПараметр("ТипЗаказа", ТипЗаказа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.ИмяКолонки = "Неопределено" Тогда
			Продолжить;
		КонецЕсли; 
		
		НайденныеСтроки = ЭтаФорма["МатрицаТарификации"].НайтиСтроки(Новый Структура("ФинальныйСтатус", ВыборкаДетальныеЗаписи.ФинальныйСтатусЗаказа));
		
		Для каждого СтрокаМатрицы Из НайденныеСтроки Цикл
			СтрокаМатрицы[ВыборкаДетальныеЗаписи.ИмяКолонки] = ВыборкаДетальныеЗаписи.Рассчитывать;
		КонецЦикла; 
		
	КонецЦикла;	

КонецПроцедуры // ()
 

&НаСервере
Процедура УдалитьТЗНаСервере()

	МассивРеквизитов = ПолучитьРеквизиты();
	
	Для каждого РеквизитФормы Из МассивРеквизитов Цикл
		
		Если РеквизитФормы.Имя = "МатрицаТарификации" Тогда
			
			УдаляемыеРеквизиты = Новый Массив;
			УдаляемыеРеквизиты.Добавить("МатрицаТарификации");
			
			ИзменитьРеквизиты(, УдаляемыеРеквизиты);
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	ТаблицаСоответствияПоказателей.Очистить();
	
КонецПроцедуры


&НаКлиенте
Процедура ТЗНВыбор(ТЗ, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
КонецПроцедуры

&НаКлиенте
Процедура ТЗНПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ПоказатьПредупреждение(,"Вводить строки запрещено!");
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЗНПередУдалением(Элемент, Отказ)

	ПоказатьПредупреждение(,"Удалять строки запрещено!");
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьНаСервере();
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()

	НачатьТранзакцию();
	
	Набор = РегистрыСведений.МатрицаТарификацииПоСтатусам.СоздатьНаборЗаписей();
	Набор.Отбор.Период.Установить(ТекущаяДата());
	Набор.Отбор.СхемаМатрицыТарификации.Установить(СхемаМатрицыТарификации);
	Набор.Отбор.ТипЗаказа.Установить(ТипЗаказа);
	
	Для каждого СтрокаМатрицы Из ЭтаФорма["МатрицаТарификации"] Цикл
		
		Набор.Отбор.ФинальныйСтатусЗаказа.Установить(СтрокаМатрицы.ФинальныйСтатус);
		
		Для каждого СтрокаСоответствия Из ТаблицаСоответствияПоказателей Цикл
			
			Набор.Отбор.КомпонентаТарификации.Установить(СтрокаСоответствия.КомпонентаТарификации);
			
			Набор.Прочитать();
			
			Запись = Набор.Добавить();
			Запись.Период = ТекущаяДата();
			Запись.СхемаМатрицыТарификации = СхемаМатрицыТарификации;
			Запись.ТипЗаказа = ТипЗаказа;
			Запись.КомпонентаТарификации = СтрокаСоответствия.КомпонентаТарификации;
			Запись.ФинальныйСтатусЗаказа = СтрокаМатрицы.ФинальныйСтатус;
			Запись.Рассчитывать = СтрокаМатрицы[СтрокаСоответствия.ИмяКолонки];
			
			Запись.Пользователь = глЗначениеПеременной("глТекущийПользователь");
			
			Набор.Записать();
			
		КонецЦикла; 
		
	КонецЦикла; 
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры


