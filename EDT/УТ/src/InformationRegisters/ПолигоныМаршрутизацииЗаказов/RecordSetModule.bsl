
Процедура ПриЗаписи(Отказ, Замещение)
	// Вставить содержимое обработчика.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//проверка на удаление
	Если ДополнительныеСвойства.МодифицированностьПередЗаписью И Не Количество() Тогда
		Возврат;
	КонецеСли;	
	
	ПроизводитьОтвязкуИндивидуальнойМаршрутизации = Ложь;
	
	ТЗПараметров = Выгрузить(, "Заказ, ДатаДоставки, ПолигонМаршрутизации");
	
	
	//изменился ли полигон
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	ТЗ.Заказ КАК Заказ,
	            |	ТЗ.ДатаДоставки КАК ДатаДоставки,
	            |	ТЗ.ПолигонМаршрутизации КАК ПолигонМаршрутизации
	            |ПОМЕСТИТЬ ВТ_Заказы
	            |ИЗ
	            |	&ТЗ КАК ТЗ
	            |;
	            |
	            |////////////////////////////////////////////////////////////////////////////////
	            |ВЫБРАТЬ
	            |	ВТ_Заказы.Заказ КАК Заказ,
	            |	ВТ_Заказы.ДатаДоставки КАК ДатаДоставки,
	            |	ВТ_Заказы.ПолигонМаршрутизации КАК ПолигонМаршрутизации
	            |ИЗ
	            |	ВТ_Заказы КАК ВТ_Заказы
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПолигоныМаршрутизацииЗаказов КАК ПолигоныМаршрутизацииЗаказов
	            |		ПО ВТ_Заказы.Заказ = ПолигоныМаршрутизацииЗаказов.Заказ
	            |			И ВТ_Заказы.ДатаДоставки = ПолигоныМаршрутизацииЗаказов.ДатаДоставки
	            |			И ВТ_Заказы.ПолигонМаршрутизации <> ПолигоныМаршрутизацииЗаказов.ПолигонМаршрутизации";
	Зап.УстановитьПараметр("ТЗ", ТЗПараметров);
	
	Рез = Зап.Выполнить();
	
	Если Не Рез.Пустой() Тогда
		ПроизводитьОтвязкуИндивидуальнойМаршрутизации = Истина;
	КонецЕсли;	
		
	
	
	Если ПроизводитьОтвязкуИндивидуальнойМаршрутизации Тогда
		
		Зап = Новый Запрос;
		Зап.Текст = "ВЫБРАТЬ
		            |	ТЗ.Заказ КАК Заказ,
		            |	ТЗ.ДатаДоставки КАК ДатаДоставки
		            |ПОМЕСТИТЬ ВТ_Заказы
		            |ИЗ
		            |	&ТЗ КАК ТЗ
		            |;
		            |
		            |////////////////////////////////////////////////////////////////////////////////
		            |ВЫБРАТЬ
		            |	ВТ_Заказы.Заказ КАК Заказ,
		            |	ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.ДатаПланирования КАК ДатаПланирования,
		            |	ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.Рейс КАК Рейс
		            |ИЗ
		            |	ВТ_Заказы КАК ВТ_Заказы
		            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИндивидуальнаяМаршрутизацияПоРейсам.СрезПоследних КАК ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних
		            |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РейсТест.Заказы КАК РейсЗаказы
		            |			ПО ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.Рейс = РейсЗаказы.Ссылка
		            |		ПО ВТ_Заказы.Заказ = ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.Заказ
		            |			И ВТ_Заказы.ДатаДоставки <= ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.ДатаПланирования
		            |ГДЕ
		            |	ЕСТЬNULL(РейсЗаказы.Заказ, ИСТИНА) = ИСТИНА
		            |	И ИндивидуальнаяМаршрутизацияПоРейсамСрезПоследних.Рейс <> ЗНАЧЕНИЕ(Документ.РейсТест.ПустаяСсылка)";
		Зап.УстановитьПараметр("ТЗ", ТЗПараметров);
		Рез = Зап.Выполнить();
		
		Если Рез.Пустой() Тогда
			Возврат;
		КонецеСли;	
			
		Выб = Рез.Выбрать();
		
		ТекВр = ТекущаяДата();
		
		Пока Выб.Следующий() Цикл
			Наб = РегистрыСведений.ИндивидуальнаяМаршрутизацияПоРейсам.СоздатьНаборЗаписей();
			Наб.Отбор.Период.Установить(ТекВр);
			Наб.Отбор.ДатаПланирования.Установить(Выб.ДатаПланирования);
			Наб.Отбор.Заказ.Установить(Выб.Заказ);
			
			Нов = Наб.Добавить();
			ЗаполнитьЗначенияСвойств(Нов, Выб);
			Нов.Период = ТекВр;
			Нов.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			Нов.Рейс = "";
			Нов.ОтвязкаПриСменеПолигона = Истина;
			
			Наб.Записать();
		КонецЦикла;	
	КонецеСли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, Замещение)
	// Вставить содержимое обработчика.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.ДополнительныеСвойства.Вставить("МодифицированностьПередЗаписью", Модифицированность());
КонецПроцедуры
