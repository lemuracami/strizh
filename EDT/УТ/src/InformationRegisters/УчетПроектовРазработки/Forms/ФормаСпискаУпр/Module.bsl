
&НаСервере
Процедура ЗаполнитьПланировщикНаСервере()
	// Вставить содержимое обработчика.
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	//Планировщик.ТекущиеПериодыОтображения.Добавить(Элементы.Список.Период.ДатаНачала, Элементы.Список.Период.ДатаОкончания);
	Планировщик.ТекущиеПериодыОтображения.Добавить(НачалоМесяца(ТекущаяДата() - 30), КонецМесяца(ТекущаяДата() + 30));
	
	Зап = Новый запрос;
	
	Зап.Текст = "ВЫБРАТЬ
	            |	Сотрудники.Ссылка КАК Сотрудник,
	            |	Сотрудники.Наименование КАК Наименование
	            |ИЗ
	            |	РегистрСведений.РаботникиОрганизации.СрезПоследних КАК РаботникиОрганизацииСрезПоследних
	            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	            |		ПО РаботникиОрганизацииСрезПоследних.Сотрудник = Сотрудники.Ссылка
	            |ГДЕ
	            |	Сотрудники.ПометкаУдаления = ЛОЖЬ
	            |	И РаботникиОрганизацииСрезПоследних.УчаствуетВПроектнойДеятельности = ИСТИНА
	            |
	            |СГРУППИРОВАТЬ ПО
	            |	Сотрудники.Ссылка,
	            |	Сотрудники.Наименование";
	ВыборкаСотрудников = Зап.Выполнить().Выбрать();
	
	
	ИзмеренияПланировщика   = Планировщик.Измерения;
    ИзмеренияПланировщика.Очистить();	
	
	ИзмерениеСотрудники = ИзмеренияПланировщика.Добавить("Сотрудники");
	
	Пока ВыборкаСотрудников.Следующий() Цикл
 		НовыйСотрудник = ИзмерениеСотрудники.Элементы.Добавить(ВыборкаСотрудников.Сотрудник);
        НовыйСотрудник.Текст = ВыборкаСотрудников.Наименование;		
	КонецЦикла;
	
	ЭлементыПланировщика = Планировщик.Элементы;
    ЭлементыПланировщика.Очистить();
	
	Зап = Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ
	            |	УчетПроектовРазработкиСрезПоследних.Ответственный КАК Сотрудник,
	            |	УчетПроектовРазработкиСрезПоследних.ПланируемаяДатаНачалаРабот КАК ДатаНачала,
	            |	УчетПроектовРазработкиСрезПоследних.ПланируемаяДатаОкончанияРабот КАК ДатаОкончания,
	            |	УчетПроектовРазработкиСрезПоследних.Проект КАК Проект,
	            |	УчетПроектовРазработкиСрезПоследних.Проект.Наименование КАК НаименованиеПроекта,
	            |	ВЫБОР
	            |		КОГДА ТИПЗНАЧЕНИЯ(УчетПроектовРазработкиСрезПоследних.Проект) = ТИП(Справочник.ПроектыРазработки)
	            |			ТОГДА 1
	            |		ИНАЧЕ 2
	            |	КОНЕЦ КАК ВидЭлемента,
	            |	ЕСТЬNULL(СостояниеПроектовРазработкиСрезПоследних.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияПроектовРазработки.ВРаботе)) КАК СтатусЭлемента,
	            |	ЕСТЬNULL(УчетПроектовРазработкиСрезПоследних.Проект.НомерРелиза, """") КАК НомерРелиза,
	            |	УчетПроектовРазработкиСрезПоследних.Проект.ВидЭтапа КАК ВидЭтапаПроекта
	            |ИЗ
	            |	РегистрСведений.УчетПроектовРазработки.СрезПоследних КАК УчетПроектовРазработкиСрезПоследних
	            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеПроектовРазработки.СрезПоследних КАК СостояниеПроектовРазработкиСрезПоследних
	            |		ПО УчетПроектовРазработкиСрезПоследних.Проект = СостояниеПроектовРазработкиСрезПоследних.Проект";
	
	ВыборкаЭлементов = Зап.Выполнить().Выбрать();
	
	//Планировщик.ТекущиеПериодыОтображения.Добавить(НачалоГода(ТекущаяДата()), КонецГода(ТекущаяДата()));
	//Планировщик.НачалоПериодаОтображения = НачалоГода(ТекущаяДата());
	//   Планировщик.КонецПериодаОтображения  = КонецГода(ТекущаяДата());
	Пока ВыборкаЭлементов.Следующий() Цикл
		СоответствиеЗначений = Новый Соответствие;
        СоответствиеЗначений.Вставить("Сотрудники",   ВыборкаЭлементов.Сотрудник);
		
		НовыйЭлемент = ЭлементыПланировщика.Добавить(ВыборкаЭлементов.ДатаНачала, ВыборкаЭлементов.ДатаОкончания);
        НовыйЭлемент.ЗначенияИзмерений  = Новый ФиксированноеСоответствие(СоответствиеЗначений);
		
		Если ВыборкаЭлементов.ВидЭлемента = 1 Тогда
        	НовыйЭлемент.Текст              = ВыборкаЭлементов.НаименованиеПроекта + ", версия " + ?(ЗначениеЗаполнено(ВыборкаЭлементов.НомерРелиза), "(" + ВыборкаЭлементов.НомерРелиза + ")", "");		
		ИначеЕсли ВыборкаЭлементов.ВидЭлемента = 2 Тогда
			НовыйЭлемент.Текст              = ВыборкаЭлементов.НаименованиеПроекта;
		КонецеСли;
		
		НовыйЭлемент.Значение              = ВыборкаЭлементов.Проект;
		УстановитьЦветаОформленияЭлемента(НовыйЭлемент, ВыборкаЭлементов);
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура УстановитьЦветаОформленияЭлемента(Элемент, Данные)
	Если Данные.ВидЭлемента = 1 Тогда
		Элемент.ЦветФона = WebЦвета.Золотой;
		Элемент.Шрифт = Новый Шрифт(Элемент.Шрифт,,,Истина); 
	ИначеЕсли Данные.ВидЭлемента = 2 Тогда
		Если Данные.ВидЭтапаПроекта = Перечисления.ВидыЭтаповРазработкиПроектов.Согласование Тогда
	    	Элемент.ЦветФона = WebЦвета.ЦветМорскойВолныНейтральный;
		ИначеЕсли Данные.ВидЭтапаПроекта = Перечисления.ВидыЭтаповРазработкиПроектов.Разработка Тогда
	    	Элемент.ЦветФона = WebЦвета.ПесочноКоричневый;				
		ИначеЕсли Данные.ВидЭтапаПроекта = Перечисления.ВидыЭтаповРазработкиПроектов.Тестирование Тогда
	    	Элемент.ЦветФона = WebЦвета.НейтральноГрифельноСиний;	
		ИначеЕсли Данные.ВидЭтапаПроекта = Перечисления.ВидыЭтаповРазработкиПроектов.релиз Тогда
	    	Элемент.ЦветФона = WebЦвета.Орхидея;	
		КонецеСли;		
	КонецеСли;
	Если Данные.СтатусЭлемента = Перечисления.СостоянияПроектовРазработки.ВРаботе Тогда
		Элемент.ЦветРамки = WebЦвета.Красный;
	Иначе
		Элемент.ЦветРамки = WebЦвета.Синий;
	КонецеСли;	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьПланировщик(Команда)
	ЗаполнитьПланировщикНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикВыбор(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьЗначение(Элемент.ВыделенныеЭлементы[0].Значение);
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	ЗаполнитьПланировщикНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не РольДоступна("Админы") Тогда
		Элементы.Планировщик.ТолькоПросмотр = Истина;
		ЭтаФорма.КоманднаяПанель.Видимость = Ложь;
	КонецеСли;	
КонецПроцедуры
