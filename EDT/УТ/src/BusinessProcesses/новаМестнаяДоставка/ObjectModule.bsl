
Перем ИсходнаяПометкаУдаление;

Функция ПолучитьВариантыКартыМаршрута() Экспорт
	тзВарианты = Новый ТаблицаЗначений;
	тзВарианты.Колонки.Добавить("ИмяЭлемента");
	тзВарианты.Колонки.Добавить("Роль");
	тзВарианты.Колонки.Добавить("ЭлементыДа", Новый ОписаниеТипов("Массив"));
	тзВарианты.Колонки.Добавить("ЭлементыНет", Новый ОписаниеТипов("Массив"));
	
	стрВариант = тзВарианты.Добавить();
	стрВариант.ИмяЭлемента = "СогласованиеНеобходимо";
	стрВариант.Роль = Справочники.новаЭтапыМестнойДоставки.СогласованиеМестнойДоставки;
	стрВариант.ЭлементыДа.Добавить("Линия21");
	стрВариант.ЭлементыДа.Добавить("СогласованиеДоставки");
	стрВариант.ЭлементыДа.Добавить("Линия19");
	стрВариант.ЭлементыНет.Добавить("Линия20");
	
	Возврат тзВарианты;
КонецФункции

Процедура СогласованиеНеобходимоПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = новаМестнаяДоставка.НужноВыполнятьТочкуМаршрута(Справочники.новаЭтапыМестнойДоставки.СогласованиеМестнойДоставки);
	Если Не Результат Тогда
		ДоставкаПодтверждена = Истина;
		ДоставкаОтменена = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаРезультатаСогласованияОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	Если ДоставкаПодтверждена Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ДоставкаПодтверждена;		
		
	ИначеЕсли ДоставкаОтменена Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ОтказОтДоставки;		
	
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаРезультатаПланированияОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	Если ДоставкаЗапланирована Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ПланированиеУспешно;		
		
	ИначеЕсли ДоставкаОтменена Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ОтказОтДоставки;		
	
	КонецЕсли;
КонецПроцедуры

Процедура ЗавершениеДоставкиНеобходимоПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = новаМестнаяДоставка.НужноВыполнятьТочкуМаршрута(Справочники.новаЭтапыМестнойДоставки.ЗавершениеМестнойДоставки);
	Если Не Результат Тогда
		ДоставкаЗавершена = Истина;
		ДоставкаВыполнена 			= Истина;
		РезультатДоставки    		= Справочники.новаРезультатМестнойДоставки.Выполнена; 
	КонецЕсли;
КонецПроцедуры

Процедура ВыборВарианта4ОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
		Если ДоставкаВыполнена Тогда
			Результат = ТочкаВыбораВарианта.Варианты.ДоставкаЗавершена;			
		Иначе
			Если ДоставкаВыполненаЧастично Тогда
			    Результат = ТочкаВыбораВарианта.Варианты.ДоставкаВыполненаЧастично;
			Иначе
				Результат = ТочкаВыбораВарианта.Варианты.ДоставкаНеВыполнена;
			КонецЕсли;
			
		КонецЕсли;
КонецПроцедуры

Процедура СопровождениеДоставкиНеобходимоПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = новаМестнаяДоставка.НужноВыполнятьТочкуМаршрута(Справочники.новаЭтапыМестнойДоставки.СопровождениеМестнойДоставки);
	Если Не Результат Тогда
		ДоставкаВыполнена = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если не (ПометкаУдаления или ОбменДанными.Загрузка) Тогда
		
		Если Не ЗначениеЗаполнено(Грузоотправитель) Тогда
			Сообщить("Не заполнен грузоотправитель!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли; 
		
		Если Не ЗначениеЗаполнено(ТочкаОтправления) Тогда
			Сообщить("Не заполнена точка отправления!", СтатусСообщения.Важное);
			ТочкаОтправления = Справочники.новаТочкиДоставки.НайтиПоКоду("000394004");
			//Отказ = Истина;
		КонецЕсли; 
		
		Если Не ЗначениеЗаполнено(ВремяОтправленияС)ИЛИ ВремяОтправленияС = 0101001 Тогда
			Сообщить("Не заполнена дата отправления!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ВремяОтправленияС)
		     И ЗначениеЗаполнено(ВремяОтправленияПо) Тогда
		 
			Если НачалоДня(ВремяОтправленияС) > НачалоДня(ВремяОтправленияПо)
			 	ИЛИ (НачалоДня(ВремяОтправленияС) = НачалоДня(ВремяОтправленияПо) И ВремяОтправленияС > ВремяОтправленияПо) Тогда
					Сообщить("Крайняя дата отправления меньше начальной даты отправления!", СтатусСообщения.Важное);
					Отказ = Истина;
			КонецЕсли;
		
		КонецЕсли;
				
		Если Не ЗначениеЗаполнено(Грузополучатель) Тогда
			Сообщить("Не заполнен грузополучатель!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли; 
		
		Если Не ЗначениеЗаполнено(ТочкаПрибытия) Тогда
			Сообщить("Не заполнена точка прибытия!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли; 
		
		Если Не ЗначениеЗаполнено(ВремяПрибытияС) Тогда
			Сообщить("Не заполнена дата прибытия!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВремяПрибытияС)
		     И ЗначениеЗаполнено(ВремяПрибытияПо) Тогда
			 
				Если НачалоДня(ВремяПрибытияС) > НачалоДня(ВремяПрибытияПо)
			     	ИЛИ (НачалоДня(ВремяПрибытияС) = НачалоДня(ВремяПрибытияПо) И ВремяПрибытияС > ВремяПрибытияПо) Тогда
		     			Сообщить("Конечная дата/время прибытия меньше начальной даты прибытия!", СтатусСообщения.Важное);
		     			Отказ = Истина;
	    		КонецЕсли;		
			КонецЕсли;
			
	    Если ЗначениеЗаполнено(ВремяОтправленияС)
			 и ЗначениеЗаполнено(ВремяПрибытияПо) Тогда
			  		 			
			Если НачалоДня(ВремяОтправленияС) > НачалоДня(ВремяПрибытияПо)
				 ИЛИ (НачалоДня(ВремяОтправленияС) = НачалоДня(ВремяПрибытияПо) И ВремяОтправленияС > ВремяПрибытияПо) Тогда
				
				Сообщить("Конечная дата/время прибытия меньше начальной даты отправления!", СтатусСообщения.Важное);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		Если ((Вид  = Перечисления.новаВидыМестнойДоставки.Погрузка) ИЛИ 
			 (Вид = Перечисления.новаВидыМестнойДоставки.ВнешнееПеремещение)) Тогда	 
				  ИнтервалДоставкиСтрокой=Формат(ВремяОтправленияС,"ДФ=ЧЧ:мм")+"-"+Формат(ВремяОтправленияПо,"ДФ=ЧЧ:мм");
		ИначеЕсли ((Вид  = Перечисления.новаВидыМестнойДоставки.Разгрузка) ИЛИ 
			      (Вид = Перечисления.новаВидыМестнойДоставки.ВнутреннееПеремещение)) Тогда
			          ИнтервалДоставкиСтрокой=Формат(ВремяПрибытияС,"ДФ=ЧЧ:мм")+"-"+Формат(ВремяПрибытияПо,"ДФ=ЧЧ:мм");
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Вид) Тогда
		Если ТипЗнч(Грузоотправитель) = Тип("СправочникСсылка.новаКонтрагенты") Тогда
			Если ТипЗнч(Грузополучатель) = Тип("СправочникСсылка.новаКонтрагенты") Тогда
				Вид = Перечисления.новаВидыМестнойДоставки.ВнешнееПеремещение;
			Иначе
				Вид = Перечисления.новаВидыМестнойДоставки.Погрузка;
			КонецЕсли;
		Иначе	
			Если ТипЗнч(Грузополучатель) = Тип("СправочникСсылка.новаКонтрагенты") Тогда
				Вид = Перечисления.новаВидыМестнойДоставки.Разгрузка;
			Иначе
				Вид = Перечисления.новаВидыМестнойДоставки.ВнутреннееПеремещение;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	соВыбранныеКатегории = Новый Соответствие;
	Для Каждого стрКатегория Из КатегорииТранспорта Цикл
		соВыбранныеКатегории.Вставить(стрКатегория.ЗначениеКатегории.Владелец, Истина);
	КонецЦикла;
	КоличествоВыбранныхКатегорий = соВыбранныеКатегории.Количество();
	
	ОсновнаяКатегорияТранспорта = Неопределено;
	Для Каждого стрКатегория Из КатегорииТранспорта Цикл
		Если стрКатегория.ЗначениеКатегории.Владелец.ОсновнаяКатегория Тогда
			ОсновнаяКатегорияТранспорта = стрКатегория.ЗначениеКатегории;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ОсновнойКонтрагент = Грузоотправитель Тогда
		ОсновнаяТочка = ТочкаОтправления;
		
	ИначеЕсли ОсновнойКонтрагент = Грузополучатель Тогда
		ОсновнаяТочка = ТочкаПрибытия;
		
	Иначе
		Если ТипЗнч(Грузоотправитель) = Тип("СправочникСсылка.новаКонтрагенты") Тогда
			ОсновнойКонтрагент = Грузоотправитель;	
			ОсновнаяТочка = ТочкаОтправления;
			
		ИначеЕсли ТипЗнч(Грузополучатель) = Тип("СправочникСсылка.новаКонтрагенты") Тогда
			ОсновнойКонтрагент = Грузополучатель;	
			ОсновнаяТочка = ТочкаПрибытия;
			
		Иначе
			ОсновнойКонтрагент = Грузополучатель;	
			ОсновнаяТочка = ТочкаПрибытия;
			
		КонецЕсли;
	КонецЕсли;
	
	КатегорииТранспортаСтрокой = новаТранспорт.СформироватьПолноеНаименованиеКатегории(КатегорииТранспорта);		
	
КонецПроцедуры

Процедура СогласованиеДоставкиПриСозданииВложенныхБизнесПроцессов(ТочкаМаршрутаБизнесПроцесса, ФормируемыеБизнесПроцессы, Отказ)
	Для Каждого Процесс Из ФормируемыеБизнесПроцессы Цикл
		Процесс.Доставка = Ссылка;
	КонецЦикла;
КонецПроцедуры

Процедура СогласованиеДоставкиПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	ДоставкаПодтверждена = Задача.ДоставкаСогласована;
	ДоставкаОтменена = Задача.ДоставкаОтменена;
КонецПроцедуры

Процедура ПланированиеДоставкиПриСозданииВложенныхБизнесПроцессов(ТочкаМаршрутаБизнесПроцесса, ФормируемыеБизнесПроцессы, Отказ)
	Для Каждого Процесс Из ФормируемыеБизнесПроцессы Цикл
		Процесс.Доставка = Ссылка;
	КонецЦикла;
КонецПроцедуры

Процедура ПланированиеДоставкиПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	ДоставкаЗапланирована = Задача.ДоставкаЗапланирована;
	ДоставкаОтменена = Задача.ДоставкаОтменена;
КонецПроцедуры

Процедура СопровождениеДоставкиПриСозданииВложенныхБизнесПроцессов(ТочкаМаршрутаБизнесПроцесса, ФормируемыеБизнесПроцессы, Отказ)
	Для Каждого Процесс Из ФормируемыеБизнесПроцессы Цикл
		Процесс.Доставка = Ссылка;
	КонецЦикла;
КонецПроцедуры

Процедура СопровождениеДоставкиПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	ДоставкаВыполнена = Задача.ДоставкаВыполнена;
КонецПроцедуры

Процедура ЗавершениеДоставкиПриСозданииВложенныхБизнесПроцессов(ТочкаМаршрутаБизнесПроцесса, ФормируемыеБизнесПроцессы, Отказ)
	Для Каждого Процесс Из ФормируемыеБизнесПроцессы Цикл
		Процесс.Доставка = Ссылка;
	КонецЦикла;
КонецПроцедуры

Процедура ЗавершениеДоставкиПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	ДоставкаВыполнена 			= Задача.ДоставкаВыполнена;
	ДоставкаЗавершена 			= Задача.ДоставкаЗавершена;
	ДоставкаВыполненаЧастично 	= Задача.ДоставкаВыполненаЧастично;
	РезультатДоставки    		= Задача.РезультатДоставки; 
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления <> ИсходнаяПометкаУдаление Тогда
		
		Если ЗначениеЗаполнено( Груз ) Тогда
			обГруз = Груз.ПолучитьОбъект();
			Если Груз.ПометкаУдаления <> ПометкаУдаления Тогда
				обГруз.УстановитьПометкуУдаления(ПометкаУдаления);
			КонецЕсли;
		КонецЕсли;	
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	новаЗадачаМестнойДоставки.БизнесПроцесс.Ссылка КАК БизнесПроцесс,
		|	NULL КАК Задачи
		|ИЗ
		|	Задача.новаЗадачаМестнойДоставки КАК новаЗадачаМестнойДоставки
		|ГДЕ
		|	новаЗадачаМестнойДоставки.БизнесПроцесс.Доставка = &БизнесПроцесс
		| И новаЗадачаМестнойДоставки.БизнесПроцесс.ПометкаУдаления = &ИсходнаяПометкаУдаление
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	новаЗадачаМестнойДоставки.Ссылка
		|ИЗ
		|	Задача.новаЗадачаМестнойДоставки КАК новаЗадачаМестнойДоставки
		|ГДЕ
		|	новаЗадачаМестнойДоставки.БизнесПроцесс.Ссылка = &БизнесПроцесс
		| И новаЗадачаМестнойДоставки.ПометкаУдаления = &ИсходнаяПометкаУдаление
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	новаЗадачаМестнойДоставки.Ссылка
		|ИЗ
		|	Задача.новаЗадачаМестнойДоставки КАК новаЗадачаМестнойДоставки
		|ГДЕ
		|	новаЗадачаМестнойДоставки.БизнесПроцесс.Доставка = &БизнесПроцесс
		| И новаЗадачаМестнойДоставки.ПометкаУдаления = &ИсходнаяПометкаУдаление";
		Запрос.Параметры.Вставить("БизнесПроцесс", Ссылка);
		Запрос.Параметры.Вставить("ИсходнаяПометкаУдаление", ИсходнаяПометкаУдаление);
		тзЗадачи = Запрос.Выполнить().Выгрузить();
		
		Для Каждого стрЗадача Из тзЗадачи Цикл
			Если ЗначениеЗаполнено(стрЗадача.БизнесПроцесс) Тогда
				обВложенныйБизнесПроцесс = стрЗадача.БизнесПроцесс.ПолучитьОбъект();
				обВложенныйБизнесПроцесс.УстановитьПометкуУдаления(ПометкаУдаления);
			Иначе
				обЗадача = стрЗадача.Задачи.ПолучитьОбъект();
				обЗадача.УстановитьПометкуУдаления(ПометкаУдаления);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
//херим нова	
	//херим нова
	//Попытка
	//	новаОбменКСЛ.СохранитьДоставку(ЭтотОбъект);
	//Исключение
	//	#Если Клиент Тогда			
	//		новаОбщиеПроцедуры.СообщитьПользователюОбОшибке("ВнутренняОшибкаСервера", ОписаниеОшибки());
	//	#КонецЕсли
	//	Отказ = Истина;
	//КонецПопытки;
	//херим нова
//херим нова	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
//херим нова	
	//Попытка
	//	новаОбменКСЛ.УдалитьДоставку(ЭтотОбъект);
	//Исключение
	//	#Если Клиент Тогда			
	//		новаОбщиеПроцедуры.СообщитьПользователюОбОшибке("ВнутренняОшибкаСервера", ОписаниеОшибки());
	//	#КонецЕсли
	//	Отказ = Истина;
	//КонецПопытки;
//херим нова	
КонецПроцедуры

Процедура ПроверкаВозвратаНаПланированиеПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	// Нужно ли возвращать доставку на планирование
	Результат = Ложь;
	Если Не ДоставкаВыполнена И Не ДоставкаВыполненаЧастично Тогда
		Если Час(ТекущаяДата()) < 7 Тогда
			Если НачалоДня(Дата) = НачалоДня(ТекущаяДата()) Тогда
				Результат = Истина; // Возвращаем только те доставки, дата которых была перенесена на поздние даты
			КонецЕсли;
		Иначе	
			Если НачалоДня(Дата) > ТекущаяДата() Тогда
				Результат = Истина; // Возвращаем только те доставки, дата которых была перенесена на поздние даты
			КонецЕсли;
		КонецЕСли;
	КонецЕсли;
	
	
	
	Если Результат Тогда
		Зап = Новый Запрос;
		// если существуют доставки, нераскинутые по рейсам, возвращаем рейсы на планирование.
		Зап.Текст = "ВЫБРАТЬ
		            |	новаЗадачаРейсаМестнойДоставки.Ссылка
		            |ИЗ
		            |	Задача.новаЗадачаРейсаМестнойДоставки КАК новаЗадачаРейсаМестнойДоставки
		            |ГДЕ
		            |	новаЗадачаРейсаМестнойДоставки.Роль = &Планирование
		            |	И новаЗадачаРейсаМестнойДоставки.Выполнена = ЛОЖЬ
		            |	И новаЗадачаРейсаМестнойДоставки.БизнесПроцесс.ДатаНачала >= &ДатаРейса";
		Зап.УстановитьПараметр("ДатаРейса", НачалоДня(Дата));			
		Зап.УстановитьПараметр("Планирование", Справочники.новаЭтапыМестнойДоставки.ПланированиеМестнойДоставки);			
		Рез = Зап.Выполнить();
		
		
		Если Рез.Пустой() Тогда
			ЗР = Новый Запрос;
			ЗР.Текст = "ВЫБРАТЬ
			           |	новаЗадачаРейсаМестнойДоставки.БизнесПроцесс.Ссылка КАК БП
			           |ИЗ
			           |	Задача.новаЗадачаРейсаМестнойДоставки КАК новаЗадачаРейсаМестнойДоставки
			           |ГДЕ
			           |	новаЗадачаРейсаМестнойДоставки.Выполнена = ИСТИНА
			           |	И новаЗадачаРейсаМестнойДоставки.Роль = &Планирование
			           |	И новаЗадачаРейсаМестнойДоставки.БизнесПроцесс.ДатаНачала >= &ВыбДата";
			
			ЗР.УстановитьПараметр("Планирование", Справочники.новаЭтапыМестнойДоставки.ПланированиеМестнойДоставки);			
			ЗР.УстановитьПараметр("ВыбДата", НачалоДня(Дата));
			
			Выб = ЗР.Выполнить().Выбрать();
			Пока Выб.Следующий() Цикл
				Об = Выб.БП.ПолучитьОбъект();
				Об.РейсНадоПерепланировать = Истина;
				Об.Записать();
			КонецЦикла;	
		КонецеСли;	
	КонецеСли;
КонецПроцедуры
			   
ИсходнаяПометкаУдаление = Ссылка.ПометкаУдаления;