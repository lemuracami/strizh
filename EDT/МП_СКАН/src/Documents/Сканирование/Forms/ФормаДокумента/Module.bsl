&НаКлиенте
Функция ОчиститьШКОтСпецСимволов(ШК)
	ОчищенныйШК = СтрЗаменить(ШК, Символ(6), "");
	Возврат ОчищенныйШК;
КонецФункции	

&НаКлиенте
Процедура ШтрихкодАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	//Состояние = "";
	Если Найти(текст,символы.ПС)>0 И СокрЛП(Текст) <> "" Тогда
		ТекущийШтрихкод = СтрЗаменить(Текст, Символы.ПС, "");
		ТекущийШтрихкод = СокрЛП(ТекущийШтрихкод);
		ТекущийШтрихкод = ОчиститьШКОтСпецСимволов(ТекущийШтрихкод);
		
		ЗаказТребуетИсключенияИзРейса = Ложь;
		ИздатьСигнал = СчитатьШтрихкод(ТекущийШтрихкод, ЗаказТребуетИсключенияИзРейса);
		Сигнал();
		Если ИздатьСигнал или ЗаказТребуетИсключенияИзРейса Тогда //всегда издаем сигнал, если не найден - не издаем
			#Если МобильноеПриложениеКлиент Тогда
				МассивВибратора = Новый Массив;
				МассивВибратора.Добавить("1");
				МассивВибратора.Добавить("500");
				МассивВибратора.Добавить("300");
				МассивВибратора.Добавить("500");
				МассивВибратора.Добавить("300");
				МассивВибратора.Добавить("500");				
				СредстваМультимедиа.ВоспроизвестиЗвуковоеОповещение("robot_error", МассивВибратора);
				Если ПроговариватьНомерПалеты Тогда
					если Не ЗаказТребуетИсключенияИзРейса Тогда
						СредстваМультимедиа.ВоспроизвестиТекст("Не та палета,ёпта", "ru-RU",,,,);
					Иначе
						СредстваМультимедиа.ВоспроизвестиТекст("Этот заказ поступил не полностью,ёпта", "ru-RU",,,,);
					КонецеСли;
				Конецесли;	
			#КонецЕсли
		Конецесли;	
		
		Если ПроговариватьНомерПалеты И Не ИздатьСигнал Тогда
			#Если МобильноеПриложениеКлиент Тогда
				СредстваМультимедиа.ВоспроизвестиТекст(Формат(НомерПалеты, "ЧГ="), "ru-RU",,,,Истина);
			#КонецЕсли
		Конецесли;	
		ТекущийЭлемент = Элементы.ПолеСканирования;
		ПодготовитьПолеВвода();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СчитатьШтрихкод(Штрихкод, ЗаказТребуетИсключенияИзРейса)
	Данные = ОбменДаннымиСервер.ПолучитьДанныеПоШК(Штрихкод);
	
	
	
	ВесЗаказаНадпись = 0;
	Если Объект.ЗапросВесаСЭлектронныхВесов Тогда
		ВесЗаказаНадпись = РаботаСВесами.ПолучитьВес(Объект.ЭлектронныеВесы.АдресВесов);
	КонецеСли;	
	
	НеУчитыватьШК = Ложь;
	//Если (Объект.РежимСканирования = Перечисления.РежимыСканирования.ПередачаНаДоставку Или Объект.РежимСканирования = Перечисления.РежимыСканирования.НепогруженныеЗаказы) И Данные.paleteNumber <> Объект.НомерПалеты Тогда
	//	НеУчитыватьШК = Истина;
	//КонецеСли;	
	НеполныйЗаказ = Ложь;
	Если ЗначениеЗаполнено(Данные) Тогда
		ДопПроверкаПогрузкиВАвто = Ложь;
		
		Если Объект.РежимСканирования = Перечисления.РежимыСканирования.ПередачаНаДоставку Или Объект.РежимСканирования = Перечисления.РежимыСканирования.НепогруженныеЗаказы Тогда
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("НомерЗаказа", Данные.orderId);
			НайденныеСтроки = Объект.ЗаказыКПогрузке.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() = 0 Тогда
				ДопПроверкаПогрузкиВАвто = Истина;
				НеУчитыватьШК = Истина;
			Иначе 
				Если Данные.paleteNumber <> Объект.НомерПалеты Тогда  // обновляем данные авто в структуре данных, если заказ перекинули в моменте
					//Данные.paleteNumber = Объект.НомерПалеты;
					//Данные.carRegNumber = "<заказ перекинут>";
					ДопПроверкаПогрузкиВАвто = Истина;
				КонецеСли;
				
				Если Данные.operationalDataRequest  Тогда  // запрос оперативных данных, проект GOODS
					ДопПроверкаПогрузкиВАвто = Истина;
					НеполныйЗаказ = Истина;
				КонецеСли;				
			КонецеСли;	
		Конецесли;
		
		
		если ДопПроверкаПогрузкиВАвто Тогда
			ДанныеЗаказаУТ = ОбменДаннымиСервер.ПолучитьАтуальныеДанныеЗаказа(Формат(Данные.orderId, "ЧДЦ=0; ЧН=0; ЧГ="), Штрихкод);
			Данные = ДанныеЗаказаУТ;
			если НеполныйЗаказ Тогда
				ЗаказТребуетИсключенияИзРейса = Данные.partiallyAcceptedOrderExcludedFromTrip;
			КонецеСли;	
			//Если Данные.paleteNumber <> Объект.НомерПалеты Тогда
			//	НеУчитыватьШК = Истина;			
			//КонецеСли;	
		КонецеСли;	
	Иначе
		Если Объект.РежимСканирования = Перечисления.РежимыСканирования.ПередачаНаДоставку Или Объект.РежимСканирования = Перечисления.РежимыСканирования.НепогруженныеЗаказы Тогда
			НеУчитыватьШК = Истина;
		КонецеСли;	
	Конецесли;	
	
	
	ОтображениеДанныхШК(Данные, ВесЗаказаНадпись);
	ЗаписатьДанныеСканированияВДокумент(Данные, ВесЗаказаНадпись, НеУчитыватьШК);
	
	Если Объект.РежимСканирования = Перечисления.РежимыСканирования.ПередачаНаДоставку Или Объект.РежимСканирования = Перечисления.РежимыСканирования.НепогруженныеЗаказы Тогда
		Элементы.ВвестиНомерПалеты.Доступность = Ложь;
	Конецесли;
	
	//Если Объект.РежимСканирования = Перечисления.РежимыСканирования.ПередачаНаДоставку Тогда
	//	СтруктураПоиска = Новый Структура;
	//	СтруктураПоиска.Вставить("НомерЗаказа", Данные.orderId);
	//	НайденныеСтроки = Объект.ЗаказыКПогрузке.НайтиСтроки(СтруктураПоиска);
	//Конецесли;
	
	Если Не ЗначениеЗаполнено(Данные) Тогда
		Возврат Истина;
	КонецеСли;	
	
	Если Не ЗначениеЗаполнено(Данные.orderId) Или НеУчитыватьШК Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецеСли;	
КонецФункции

&НаСервере
Процедура ЗаписатьДанныеСканированияВДокумент(Данные, ВесЗаказа = 0, НеУчитыватьШК = Ложь)
	НоваяСтрока = Объект.Штрихкоды.Добавить();
	
	Если Не ЗначениеЗаполнено(Данные) Тогда
		НоваяСтрока.Штрихкод = ТекущийШтрихкод;
	Иначе
		НоваяСтрока.Штрихкод = Данные.barcode;
		НоваяСтрока.НомерЗаказа = Данные.orderId;
		НомерПалетыИзДанных = 0;
		Если ЗначениеЗаполнено(Данные.paleteNumber) Тогда
			НомерПалетыИзДанных = Число(Данные.paleteNumber);
		КонецЕсли;	
		НоваяСтрока.НомерПалеты = НомерПалетыИзДанных;	
		НоваяСтрока.ДатаДоставки = Данные.deliveryDate;	
		НоваяСтрока.СостояниеЗаказа = Данные.orderState;
	КонецеСли;	
	НоваяСтрока.ВремяСканирования = ТекущаяДата();	
	НоваяСтрока.Вес = ВесЗаказа;
	НоваяСтрока.НеУчитывать = НеУчитыватьШК;
	
	ЗначениеСвойства = "";
	Если Данные.Свойство("partiallyAcceptedOrderExcludedFromTrip", ЗначениеСвойства) Тогда
		НоваяСтрока.ИсключитьЧастичноПринятыйЗаказИзРейса = ЗначениеСвойства;
	КонецеСли;	
	
	
	Попытка
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
		ПараметрыЗаписи.Вставить("РежимПроведения", РежимПроведенияДокумента.Неоперативный);
		Записать(ПараметрыЗаписи);
		
		Состояние = "ШК записан";
		Элементы.Состояние.ЦветФона = Новый Цвет;
		Элементы.ЗавершитьДокумент.Доступность = Истина;
	Исключение
		Состояние = ОписаниеОшибки() + " ОШИБКА ПРИ ФИКСАЦИИ ШК! ПОВТОРИТЕ СКАНИРОВАНИЕ ЗАКАЗА!";
		Элементы.Состояние.ЦветФона = WebЦвета.ЛососьСветлый;
	КонецПопытки;	
КонецПроцедуры	

&НаСервере
Процедура ОчисткаДанныхПоШК()
	Штрихкод = "";
	НомерПалеты = 0;
	КоличествоМест = 0;
	Регион = "";
	Авто = "";
	Сведения = "";
	НомерЗаказа = "";
	НомерЗаказаИМ = "";
	Сектор = "";
КонецПроцедуры	

&НаСервере
Процедура ОтображениеДанныхШК(Данные, ВесЗаказа)
	ОчисткаДанныхПоШК();
	
	
	Если Не ЗначениеЗаполнено(Данные) Тогда
		Штрихкод = ТекущийШтрихкод;
		Элементы.Штрихкод.ЦветФона = WebЦвета.ЗамшаСветлый;
		Сведения = "Штрихкод не найден!!";
	Иначе
		Штрихкод = Данные.barcode;
		Элементы.Штрихкод.ЦветФона = WebЦвета.БледноЗеленый;
		НомерПалетыИзДанных = 0;
		Если ЗначениеЗаполнено(Данные.paleteNumber) Тогда
			НомерПалетыИзДанных = Число(Данные.paleteNumber);
		КонецеСли;	
		НомерПалеты = НомерПалетыИзДанных;
		КоличествоМест = Данные.numberOfPlaces;
		Регион = Справочники.РегиональныеТерминалы.НайтиПоКоду(Данные.deliveryTerminalId);
		Авто = Данные.carRegNumber;
		Сведения = СформироватьСведения(Данные);
		НомерЗаказа = Формат(Данные.orderId, "ЧГ=");
		НомерЗаказаИМ = Данные.orderIdExt;
		Сектор = Данные.sectorName;
		НомерПолигона = Данные.polygonRouting;
		
		ТипЗаказа =  Перечисления.ТипыЗаказов[Данные.orderType];
		
		УжеЕстьИндикацияЦветом = Ложь;
		Если ТипЗаказа <> Перечисления.ТипыЗаказов.Доставка Тогда
			Элементы.ТипЗаказа.ЦветФона = WebЦвета.ЗамшаСветлый;
			УжеЕстьИндикацияЦветом = Истина;
		Иначе
			Элементы.ТипЗаказа.ЦветФона = Новый Цвет;
		Конецесли;
		
		
		ВесЗаказаНадпись = ВесЗаказа;
		
		//Если Не УжеЕстьИндикацияЦветом Тогда
		Если Регион <> ПараметрыСеанса.ТекущийРегион Тогда
			Элементы.Регион.ЦветФона = WebЦвета.Красный;
		Иначе
			Элементы.Регион.ЦветФона = Новый Цвет;
		Конецесли;
		//КонецеСли;
		НомерПалетыИзДанных = 0;
		Если ЗначениеЗаполнено(Данные.paleteNumber) Тогда
			НомерПалетыИзДанных = Число(Данные.paleteNumber);
		КонецеСли;	
		Если (Объект.РежимСканирования = Перечисления.РежимыСканирования.ПередачаНаДоставку Или Объект.РежимСканирования = Перечисления.РежимыСканирования.НепогруженныеЗаказы) И НомерПалетыИзДанных <> Объект.НомерПалеты Тогда
			Элементы.Штрихкод.ЦветФона = WebЦвета.ЛососьСветлый;
			Элементы.НомерПалеты.ЦветФона = WebЦвета.ЛососьСветлый;
		Иначе
			Элементы.Штрихкод.ЦветФона = WebЦвета.БледноЗеленый;
			Элементы.НомерПалеты.ЦветФона = Новый Цвет;
		КонецеСли;	
		
	КонецеСли;	
КонецПроцедуры	

&НаСервере
Процедура УстановитьПоляСведенийДляВыводаВОкне(Данные)
	СведенияНаименованиеМагазина = "";
	СведенияРегионСклада = "";
	СведенияИдентификаторСклада = "";
	СведенияНаименованиеСклада = "";
	СведенияАдресСклада = "";
	
	
	СведенияНаименованиеМагазина = Сокрлп(Данные.shopName);
	СведенияРегионСклада = Сокрлп(Данные.stockRegion);
	СведенияИдентификаторСклада = Сокрлп(Данные.stockIDRoute);
	СведенияНаименованиеСклада = Сокрлп(Данные.stockName);
	СведенияАдресСклада = Сокрлп(Данные.stockAddress);
КонецПроцедуры	

&НаСервере
Функция СформироватьСведения(Данные)
	Элементы.Сведения.ЦветФона = Новый Цвет;
	Если Час(ТекущаяДата()) >= Час(ПараметрыСеанса.ВремяНачалаНовогоОперативногоДня) Тогда
		ДатаПроверки = НачалоДня(ТекущаяДата()+ 12*60*60);    
	Иначе
		ДатаПроверки = НачалоДня(ТекущаяДата());
	КонецеСли;	
	
	Элементы.Сведения.Гиперссылка = Ложь;
	
	Если Данные.orderState = 4 Или Данные.orderStatus = 410 Тогда
		//Элементы.Сведения.Шрифт = Новый Шрифт(Элементы.Сведения.Шрифт, , 8);
		Элементы.Сведения.ЦветФона = WebЦвета.ЛососьСветлый;
		Элементы.Сведения.Гиперссылка = Истина;
		УстановитьПоляСведенийДляВыводаВОкне(Данные);
		
		Возврат "ОТКАЗ" + Символы.ПС + 
		"Склад: " + Сокрлп(Данные.stockName) + Символы.ПС +
		"Регион склада: " + Сокрлп(Данные.stockRegion);
	Иначе	
	КонецеСли;
	
	
	Если Перечисления.ТипыЗаказов[Данные.orderType] = Перечисления.ТипыЗаказов.Доставка И
		Не ЗначениеЗаполнено(Данные.carRegNumber) И
		НачалоДня(Данные.deliveryDate) = НачалоДня(ТекущаяДата()) Тогда             //      НачалоДня(ТекущаяДата())
		Элементы.Сведения.ЦветФона = WebЦвета.ЛососьСветлый;
		Возврат "ДЕНЬ В ДЕНЬ";
	КонецЕсли;	
	
	НомерПалетыИзДанных = 0;
	Если ЗначениеЗаполнено(Данные.paleteNumber) Тогда
		НомерПалетыИзДанных = Число(Данные.paleteNumber);
	КонецЕсли;	
	Если (Объект.РежимСканирования = Перечисления.РежимыСканирования.ПередачаНаДоставку Или Объект.РежимСканирования = Перечисления.РежимыСканирования.НепогруженныеЗаказы) И НомерПалетыИзДанных <> Объект.НомерПалеты Тогда
		Элементы.Сведения.ЦветФона = WebЦвета.ЛососьСветлый;
		Возврат "ДРУГОЕ АВТО!!! (палета № " + Строка(Данные.paleteNumber) + ")";
	КонецеСли;
	
	Если (Объект.РежимСканирования = Перечисления.РежимыСканирования.ПередачаНаДоставку Или Объект.РежимСканирования = Перечисления.РежимыСканирования.НепогруженныеЗаказы) Тогда
		ЗначениеСвойства = "";
		
		Если Данные.Свойство("partiallyAcceptedOrderExcludedFromTrip", ЗначениеСвойства) Тогда
			Если ЗначениеСвойства Тогда
				Элементы.Сведения.ЦветФона = WebЦвета.ЛососьСветлый;
				Возврат "ЧАСТИЧКА!!!";
			КонецЕсли;
		КонецеСли;	
	КонецеСли;	
	
	Если НачалоДня(Данные.deliveryDate) >= Началодня(ДатаПроверки) Тогда//>
		Если НачалоДня(ТекущаяДата()) = НачалоДня(Данные.deliveryDate) Тогда
			Возврат Формат(Данные.deliveryDate, "ДЛФ=D");
		Иначе	
			Возврат "БУДУЩАЯ ДАТА: " + Формат(Данные.deliveryDate, "ДЛФ=D");
		КонецеСли;	
	//ИначеЕсли НачалоДня(Данные.deliveryDate) = Началодня(ДатаПроверки) Тогда
	//	Возврат "ЗАВТРА: " + Формат(Данные.deliveryDate, "ДЛФ=D");
	ИначеЕсли НачалоДня(Данные.deliveryDate) < Началодня(ДатаПроверки) Тогда
		Элементы.Сведения.ЦветФона = WebЦвета.ЛососьСветлый;
		Возврат "ПРОШЛАЯ ДАТА: " + Формат(Данные.deliveryDate, "ДЛФ=D");
	КонецеСли;
КонецФункции	

&НаКлиенте
Процедура ПодготовитьПолеВвода()
	ОчиститьПолеВводаНаСервере();
	Элементы.ПолеСканирования.ОбновитьТекстРедактирования();
	Элементы.ПолеСканирования.Видимость = Ложь;
	Элементы.ПолеСканирования.Видимость = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.ПолеСканирования;
	#Если МобильноеПриложениеКлиент Тогда	
		НачатьРедактированиеЭлемента();
	#КонецЕсли
КонецПроцедуры

&НаСервере
Процедура ОчиститьПолеВводаНаСервере()
	ПолеСканирования = "";
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не Объект.ДокументВыгружен И Объект.РежимСканирования.Пустая() Тогда
		лРежимСканирования = "";
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("лРежимСканирования", лРежимСканирования);                       
		//ПоказатьВводЗначения(Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект, ДопПараметры), лРежимСканирования, "Выберите режим", Тип("ПеречислениеСсылка.РежимыСканирования"));
		
		ОкнаПриложения = ПолучитьОкна();
	   Для н = 0 По ОкнаПриложения.Количество() - 1 Цикл
       Если ОкнаПриложения[н].Основное Тогда
           НашеОкно = ОкнаПриложения[н];
           Прервать;
       КонецЕсли;
   КонецЦикла;
		ОткрытьФорму("Документ.Сканирование.Форма.ФормаВыбораРежима",, ЭтаФорма,,,,Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект, ДопПараметры), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	Иначе
		Если Объект.РежимСканирования = ПредопределенноеЗначение("Перечисление.РежимыСканирования.ПередачаНаДоставку") Или
			Объект.РежимСканирования = ПредопределенноеЗначение("Перечисление.РежимыСканирования.НепогруженныеЗаказы") Тогда
			ПроговариватьНомерПалеты = Истина;
		КонецеСли;	
	КонецеСли;
	
	#Если МобильноеПриложениеКлиент Тогда
		Элементы.ПроговариватьНомерПалеты.Доступность = СредстваМультимедиа.ПоддерживаетсяВоспроизведениеТекста();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	лРежимСканирования = ?(Значение = Неопределено, ДополнительныеПараметры.лРежимСканирования, Значение);
	
	
	Если Не (Значение <> Неопределено) Тогда
		Попытка
			НеСпрашиватьОЗакрытии = Истина;
			Закрыть();
		Исключение
			
		КонецПопытки;	
		Возврат;
	Иначе
		Если лРежимСканирования = ПредопределенноеЗначение("Перечисление.РежимыСканирования.ПередачаНаДоставку") Или лРежимСканирования = ПредопределенноеЗначение("Перечисление.РежимыСканирования.НепогруженныеЗаказы") Тогда
			Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.ГруппаСтраниц.ПодчиненныеЭлементы.СтраницаПараметры;
			Элементы.СтраницаШтрихкодирование.Видимость = Ложь;
			Элементы.ВвестиНомерПалеты.Доступность = Истина;
			ТекущийЭлемент = Элементы.ВвестиНомерПалеты;
			Элементы.ЭлектронныеВесы.Доступность = Ложь;
			ПроговариватьНомерПалеты = Истина;
		Иначе
			Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.СтраницаШтрихкодирование;
		Конецесли;	
		Объект.РежимСканирования = лРежимСканирования;
	КонецеСли;	
	
	ПодготовитьПолеВвода();

КонецПроцедуры


&НаСервере
Процедура ЗаписатьДанныеРейса(Данные)
	Если Не ЗначениеЗаполнено(Данные.ordersNumbers) Тогда
		Сообщить("Рейс не обнаружен!!", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецеСли;	
	Объект.НомерРейса = Данные.routeNumber;
	Объект.ЗаказыКПогрузке.Очистить();
	Для Каждого ТекНомер Из Данные.ordersNumbers Цикл
		НовСтрока = Объект.ЗаказыКПогрузке.Добавить();
		НовСтрока.НомерЗаказа = ТекНомер;
	КонецЦикла;	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	Записать(ПараметрыЗаписи);
КонецПроцедуры	

&НаСервере
Процедура ЗавершитьДокументНаСервере()
	// Вставить содержимое обработчика.
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	ПараметрыЗаписи.Вставить("РежимПроведения", РежимПроведенияДокумента.Неоперативный);
	Записать(ПараметрыЗаписи);
	ПланыОбмена.ЗарегистрироватьИзменения(ПараметрыСеанса.УзелПланаОбменаССерверомСканирования, Объект.Ссылка);
	ОбработчикФоновыхЗаданий.ВыполнитьОбменССерверомСканирования();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьДокумент(Команда)
	ЗавершитьДокументНаСервере();
	Оповестить("ОбновитьСписокСканирования");
	НеСпрашиватьОЗакрытии = Истина;
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ПараметрыСеанса.ГоризонтальныйИнтерфейс Тогда
		СформироватьКолонкиОтображенияЭлементов();
	КонецеСли;	
	
	
	УстановитьПросмотр(Объект.ДокументВыгружен);
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Регион = Справочники.РегиональныеТерминалы.МСК;
	КонецеСли;	
	СписокНепогруженныхЗаказов.Параметры.УстановитьЗначениеПараметра("Док", Объект.Ссылка);
	РежимПоказаНепогруженныхЗаказов = 1;
	УправлениеВидимостьюЗаказовРейса();
КонецПроцедуры

&НаСервере
Процедура УстановитьПросмотр(РежимПросмотра)
	ЭтаФорма.ТолькоПросмотр = РежимПросмотра;
	Элементы.ПолеСканирования.ТолькоПросмотр = РежимПросмотра;
	Элементы.ЗавершитьДокумент.Доступность = Не РежимПросмотра;
	Если Объект.Штрихкоды.Количество() = 0 Тогда
		Элементы.ЗавершитьДокумент.Доступность = Ложь;
	Конецесли;	
КонецПроцедуры	

&НаКлиенте
Процедура ВвестиНомерПалеты(Команда)
	лНомерПалеты = 0;
	Если ВвестиЧисло(лНомерПалеты, "Номер палеты", 4, 0) Тогда
		Если лНомерПалеты <> 0 Тогда
			ДанныеРейса = ОбменДаннымиСервер.ПолучитьДанныеРейса(лНомерПалеты);
			ЗаписатьДанныеРейса(ДанныеРейса);
			Объект.НомерПалеты = лНомерПалеты;
			АвтоРейса = ДанныеРейса.transportRegistrationNumber;
			Элементы.СтраницаШтрихкодирование.Видимость = Истина;
			Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.СтраницаШтрихкодирование;
			ПодготовитьПолеВвода();
		Конецесли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьШК(Команда)
	ПолеСканирования = "";
	ПодготовитьПолеВвода();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.СтраницаШтрихкодирование Тогда
		ТекущийЭлемент = Элементы.ПолеСканирования;
		ПодготовитьПолеВвода();
		ПодключитьОбработчикОжидания("ЗапуститьАктивациюПоляШтрихкода", 0.00000001, Истина);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Не Объект.ДокументВыгружен И Не Объект.Проведен И Не НеСпрашиватьОЗакрытии И Объект.Штрихкоды.Количество() <> 0 Тогда
		//Асеев 26.08.2020>>>
		Если Объект.РежимСканирования = ПредопределенноеЗначение("Перечисление.РежимыСканирования.Приход") Тогда
			ЗавершитьДокумент(Неопределено);
		Иначе
		//Асеев 26.08.2020<<<
			Ответ = Вопрос("Завершить документ?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				ЗавершитьДокумент(Неопределено);
			Иначе
				Модифицированность = Ложь;
				НеСпрашиватьОЗакрытии = Истина;
				Закрыть();
			КонецеСли;
		КонецЕсли;
	КонецеСли;	
КонецПроцедуры

    

&НаКлиенте
Процедура ЗапуститьАктивациюПоляШтрихкода() Экспорт

    ТекущийЭлемент = Элементы.ПолеСканирования;
    
    #Если МобильноеПриложениеКлиент Тогда
     
        НачатьРедактированиеЭлемента();
            
    #КонецЕсли

КонецПроцедуры // ЗапуститьАктивациюПоляШтрихкода()

&НаКлиенте
Процедура ЭлектронныеВесыПриИзменении(Элемент)
	Если Объект.ЭлектронныеВесы.Пустая() Тогда
		Объект.ЗапросВесаСЭлектронныхВесов = Ложь;
	Иначе
		Объект.ЗапросВесаСЭлектронныхВесов = Истина;
	КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросВесаСЭлектронныхВесовПриИзменении(Элемент)
	Если Объект.ЭлектронныеВесы.Пустая() Тогда
		Объект.ЗапросВесаСЭлектронныхВесов = Ложь;
	Иначе
		Объект.ЗапросВесаСЭлектронныхВесов = Истина;
	КонецеСли;	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// Вставить содержимое обработчика.
	Если ОбновитьСписокЗаказовКПогрузке Тогда
		ОбновитьСписокЗаказовКПогрузке = Ложь;
		СписокНепогруженныхЗаказов.Параметры.УстановитьЗначениеПараметра("Док", Объект.Ссылка);
		Элементы.СписокНепогруженныхЗаказов.Обновить();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Объект.Ссылка.Пустая() И (Объект.РежимСканирования = Перечисления.РежимыСканирования.ПередачаНаДоставку Или Объект.РежимСканирования = Перечисления.РежимыСканирования.НепогруженныеЗаказы) Тогда
		ОбновитьСписокЗаказовКПогрузке = Истина;
	КонецеСли;	
КонецПроцедуры

Процедура УправлениеВидимостьюЗаказовРейса()
	Если РежимПоказаНепогруженныхЗаказов = 1 Тогда
		Элементы.ЗаказыКПогрузке.Видимость = Ложь;
		Элементы.СписокНепогруженныхЗаказов.Видимость = Истина;
	ИначеЕсли РежимПоказаНепогруженныхЗаказов = 2 Тогда
		Элементы.ЗаказыКПогрузке.Видимость = Истина;
		Элементы.СписокНепогруженныхЗаказов.Видимость = Ложь;
	Конецесли;	
КонецПроцедуры	

&НаКлиенте
Процедура РежимПоказаНепогруженныхЗаказовПриИзменении(Элемент)
	УправлениеВидимостьюЗаказовРейса();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницСодержимогоПриСменеСтраницы(Элемент, ТекущаяСтраница)
	// Вставить содержимое обработчика.
	Элементы.СписокНепогруженныхЗаказов.Обновить();
КонецПроцедуры

&НаСервере
Процедура СформироватьКолонкиОтображенияЭлементов()
	ЭтаФорма.Элементы.Переместить(Элементы.ГруппаСканирования, Элементы.ГруппаКолонка1);
	ЭтаФорма.Элементы.Переместить(Элементы.Штрихкод, Элементы.ГруппаКолонка1);
	ЭтаФорма.Элементы.Переместить(Элементы.КоличествоМест, Элементы.ГруппаКолонка1);
	ЭтаФорма.Элементы.Переместить(Элементы.ТипЗаказаВес, Элементы.ГруппаКолонка1);
	ЭтаФорма.Элементы.Переместить(Элементы.НомераЗаказа, Элементы.ГруппаКолонка1);
	
	ЭтаФорма.Элементы.Переместить(Элементы.НомерПалеты, Элементы.ГруппаКолонка2);
	ЭтаФорма.Элементы.Переместить(Элементы.Сведения, Элементы.ГруппаКолонка2);
	ЭтаФорма.Элементы.Сведения.Высота = 3;
	ЭтаФорма.Элементы.Сведения.АвтоМаксимальнаяВысота = Ложь;
	ЭтаФорма.Элементы.Сведения.МаксимальнаяВысота = 3;
	
	ЭтаФорма.Элементы.Переместить(Элементы.Сектор, Элементы.ГруппаКолонка2);
	ЭтаФорма.Элементы.Переместить(Элементы.Регион, Элементы.ГруппаКолонка2);
	ЭтаФорма.Элементы.Переместить(Элементы.Авто, Элементы.ГруппаКолонка2);
Конецпроцедуры	

&НаКлиенте
Процедура СведенияНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Стр = "Название магазина: " + СведенияНаименованиеМагазина + Символы.ПС +
	"Название склада: " + СведенияНаименованиеСклада + Символы.ПС +
	"Идентификатор склада: " + СведенияИдентификаторСклада + Символы.ПС +
	"Регион склада: " + СведенияРегионСклада + Символы.ПС +
	"Адрес склада: " + СведенияАдресСклада;

	Предупреждение(Стр, 10);
КонецПроцедуры
