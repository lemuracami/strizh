Процедура УстановкаНачальныхПараметровБДСервер() Экспорт 
	Если Не ЗначениеЗаполнено(Константы.ИдентификаторПриложения.Получить()) Тогда
		Г = Новый УникальныйИдентификатор;
		Константы.ИдентификаторПриложения.Установить(Строка(Г));
		Константы.ТестоваяСреда.Установить(Истина);
		Константы.ВремяНачалаНовогоОперативногоДня.Установить(Дата("00010101150000"));
		Константы.ТекущийРегион.Установить(Справочники.РегиональныеТерминалы.МСК);
		
		
		Если Не ЗначениеЗаполнено(Константы.УзелПланаОбменаССерверомСканирования.Получить()) Тогда
			ЭУ = ПланыОбмена.ОбменССерверомСканирования.ЭтотУзел().ПолучитьОбъект();
			ЭУ.Наименование = "ТСД";
			ЭУ.Записать();
			
			ЦУ = ПланыОбмена.ОбменССерверомСканирования.НайтиПоКоду("000000002");
			Если ЦУ.Пустая() Тогда
				ЦУ = ПланыОбмена.ОбменССерверомСканирования.СоздатьУзел();
				ЦУ.Наименование = "ЦБ";
				ЦУ.Код = "000000002";
				ЦУ.Записать();
			КонецеСли;	
			
			Константы.УзелПланаОбменаССерверомСканирования.Установить(ЦУ.Ссылка);
		КонецеСли;
		Константы.ПериодАвтообмена.Установить(300);
	КонецеСли;
КонецПроцедуры	

Функция ПолучитьИнтервалАвтоматическогоОбменаДанными() Экспорт
	Возврат ПараметрыСеанса.ПериодАвтообмена;
КонецФункции

Процедура ОчисткаСтарыхДокументов() Экспорт
	ЗапросПоследнихДокументов = Новый Запрос;
	ЗапросПоследнихДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 20
	                               |	Сканирование.Ссылка КАК Документ
	                               |ИЗ
	                               |	Документ.Сканирование КАК Сканирование
	                               |ГДЕ
	                               |	Сканирование.ДокументВыгружен = ИСТИНА
	                               |
	                               |УПОРЯДОЧИТЬ ПО
	                               |	Сканирование.Дата УБЫВ";
	МасПоследнихДокументов = ЗапросПоследнихДокументов.Выполнить().Выгрузить().ВыгрузитьКолонку("Документ");
	
	
	
	
	ЗапросСтарыхДокументов = Новый Запрос;
	ЗапросСтарыхДокументов.Текст = "ВЫБРАТЬ
	                               |	Сканирование.Ссылка КАК Документ
	                               |ИЗ
	                               |	Документ.Сканирование КАК Сканирование
	                               |ГДЕ
	                               |	Сканирование.ДокументВыгружен = ИСТИНА
	                               |	И Сканирование.Дата <= &Дата";
	ЗапросСтарыхДокументов.УстановитьПараметр("Дата", ТекущаяДата() - 864000);
	
	ВыборкаДокументов = ЗапросСтарыхДокументов.Выполнить().Выбрать();
	
	Пока ВыборкаДокументов.Следующий() Цикл
		Если МасПоследнихДокументов.Найти(ВыборкаДокументов.Документ) <> Неопределено Тогда
			Продолжить;
		КонецеСли;	
		Док = ВыборкаДокументов.Документ.ПолучитьОбъект();
		Док.Удалить();
	КонецЦикла;	
КонецПроцедуры	

Функция ПолучитьОписаниеВерсииИзМакетаВерсий(НомерВерсии) Экспорт
	Мак = ПолучитьОбщийМакет("Версии");
	Область = Мак.НайтиТекст(Метаданные.Версия);
	
	Описание = Мак.Область(Область.Верх, Область.Лево + 1).Текст;
	
	ЭтоРелизТекст = Мак.Область(Область.Верх, Область.Лево + 2).Текст;
	Если Не ЗначениеЗаполнено(ЭтоРелизТекст) Тогда
		ЭтоРелизТекст = "0";
	КонецеСли;	
	ЭтоРелизнаяВерсия = Булево(Число(ЭтоРелизТекст));
	
	Струк = Новый Структура;
	Струк.Вставить("Описание", Описание);
	Струк.Вставить("ЭтоРелизнаяВерсия", ЭтоРелизнаяВерсия);
	Возврат Струк;
КонецФункции

Процедура ЗаписатьОшибкуВЛог(ТекстОшибки) Экспорт
	ТД = ТекущаяДата();
	
	ВерсияКонфигурации = Метаданные.Версия;
	Если Не ЗначениеЗаполнено(ВерсияКонфигурации) Тогда
		ВерсияКонфигурации = "1.0.0.1";
	КонецеСли;
	
	
	Наб = РегистрыСведений.ЛогОшибокОбмена.СоздатьНаборЗаписей();
	Наб.Отбор.Период.Установить(ТД);
	
	Нов = Наб.Добавить();
	Нов.Ошибка = ТекстОшибки;
	Нов.Период = ТД;
	Нов.ВерсияМП = ВерсияКонфигурации;
	
	Наб.Записать(истина);
КонецПроцедуры	

Процедура ОчиститьДанныеВРСПоСтарымОшибкамОбмена() Экспорт
    Попытка
        Запрос = Новый Запрос;
        Запрос.Текст = "ВЫБРАТЬ
                       |	ЛогОшибокОбмена.Период КАК Период
                       |ИЗ
                       |	РегистрСведений.ЛогОшибокОбмена КАК ЛогОшибокОбмена
                       |ГДЕ
                       |	ЛогОшибокОбмена.Период МЕЖДУ &ДатаНач И &ДатаКон";
        
        
        Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата() - 1259200);
        Запрос.УстановитьПараметр("ДатаНач", ТекущаяДата() - 1864000);
        
        РезультатЗапроса = Запрос.Выполнить();
        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
        
        
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            НаборЗаписей = РегистрыСведений.ЛогОшибокОбмена.СоздатьНаборЗаписей();
            НаборЗаписей.Отбор.Период.Установить(ВыборкаДетальныеЗаписи.Период);
            НаборЗаписей.Записать();
        КонецЦикла;
        
        
    Исключение
    КонецПопытки;	
КонецПроцедуры